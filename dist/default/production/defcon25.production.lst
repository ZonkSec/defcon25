

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jul 24 21:43:00 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16LF18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK5,global,class=CODE,delta=2
     8                           	psect	idataBANK6,global,class=CODE,delta=2
     9                           	psect	idataBANK7,global,class=CODE,delta=2
    10                           	psect	idataBIGRAM,global,class=CODE,delta=2
    11                           	psect	stringtext1,global,class=STRCODE,delta=2
    12                           	psect	stringtext2,global,class=STRCODE,delta=2
    13                           	psect	stringtext3,global,class=STRCODE,delta=2
    14                           	psect	stringtext4,global,class=STRCODE,delta=2
    15                           	psect	stringtext5,global,class=STRCODE,delta=2
    16                           	psect	stringtext6,global,class=STRCODE,delta=2
    17                           	psect	stringtext7,global,class=STRCODE,delta=2
    18                           	psect	stringtext8,global,class=STRCODE,delta=2
    19                           	psect	stringtext9,global,class=STRCODE,delta=2
    20                           	psect	stringtext10,global,class=STRCODE,delta=2
    21                           	psect	stringtext11,global,class=STRCODE,delta=2
    22                           	psect	stringtext12,global,class=STRCODE,delta=2
    23                           	psect	stringtext13,global,class=STRCODE,delta=2
    24                           	psect	stringtext14,global,class=STRCODE,delta=2
    25                           	psect	stringtext15,global,class=STRCODE,delta=2
    26                           	psect	stringtext16,global,class=STRCODE,delta=2
    27                           	psect	stringtext17,global,class=STRCODE,delta=2
    28                           	psect	stringtext18,global,class=STRCODE,delta=2
    29                           	psect	stringtext19,global,class=STRCODE,delta=2
    30                           	psect	stringtext20,global,class=STRCODE,delta=2
    31                           	psect	stringtext21,global,class=STRCODE,delta=2
    32                           	psect	stringtext22,global,class=STRCODE,delta=2
    33                           	psect	stringtext23,global,class=STRCODE,delta=2
    34                           	psect	stringtext24,global,class=STRCODE,delta=2
    35                           	psect	stringtext25,global,class=STRCODE,delta=2
    36                           	psect	stringtext26,global,class=STRCODE,delta=2
    37                           	psect	stringtext27,global,class=STRCODE,delta=2
    38                           	psect	stringtext28,global,class=STRCODE,delta=2
    39                           	psect	stringtext29,global,class=STRCODE,delta=2
    40                           	psect	cinit,global,class=CODE,merge=1,delta=2
    41                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    42                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    43                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    44                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    45                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    46                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    47                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    48                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    49                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    50                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    51                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    52                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    53                           	psect	inittext,global,class=CODE,delta=2
    54                           	psect	clrtext,global,class=CODE,delta=2
    55                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    56                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    57                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    58                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    59                           	psect	text1,local,class=CODE,merge=1,delta=2
    60                           	psect	text2,local,class=CODE,merge=1,delta=2
    61                           	psect	text3,local,class=CODE,merge=1,delta=2
    62                           	psect	text4,local,class=CODE,merge=1,delta=2
    63                           	psect	text5,local,class=CODE,merge=1,delta=2
    64                           	psect	text6,local,class=CODE,merge=1,delta=2
    65                           	psect	text7,local,class=CODE,merge=1,delta=2
    66                           	psect	text8,local,class=CODE,merge=1,delta=2
    67                           	psect	text9,local,class=CODE,merge=1,delta=2
    68                           	psect	text10,local,class=CODE,merge=1,delta=2
    69                           	psect	text11,local,class=CODE,merge=1,delta=2
    70                           	psect	text12,local,class=CODE,merge=1,delta=2
    71                           	psect	text13,local,class=CODE,merge=1,delta=2
    72                           	psect	text14,local,class=CODE,merge=1,delta=2
    73                           	psect	text15,local,class=CODE,merge=1,delta=2
    74                           	psect	text16,local,class=CODE,merge=1,delta=2
    75                           	psect	swtext1,local,class=CONST,delta=2
    76                           	psect	text17,local,class=CODE,merge=1,delta=2
    77                           	psect	text18,local,class=CODE,merge=1,delta=2
    78                           	psect	text19,local,class=CODE,merge=1,delta=2
    79                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text21,local,class=CODE,merge=1,delta=2
    81                           	psect	text22,local,class=CODE,merge=1,delta=2
    82                           	psect	text23,local,class=CODE,merge=1,delta=2
    83                           	psect	text24,local,class=CODE,merge=1,delta=2
    84                           	psect	text25,local,class=CODE,merge=1,delta=2
    85                           	psect	text26,local,class=CODE,merge=1,delta=2
    86                           	psect	text27,local,class=CODE,merge=1,delta=2
    87                           	psect	text28,local,class=CODE,merge=1,delta=2
    88                           	psect	text29,local,class=CODE,merge=1,delta=2
    89                           	psect	text30,local,class=CODE,merge=1,delta=2
    90                           	psect	text31,local,class=CODE,merge=1,delta=2
    91                           	psect	text32,local,class=CODE,merge=1,delta=2
    92                           	psect	text33,local,class=CODE,merge=1,delta=2
    93                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text36,local,class=CODE,merge=1,delta=2
    96                           	psect	text37,local,class=CODE,merge=1,delta=2
    97                           	psect	text38,local,class=CODE,merge=1,delta=2
    98                           	psect	text39,local,class=CODE,merge=1,delta=2
    99                           	psect	text40,local,class=CODE,merge=1,delta=2
   100                           	psect	text41,local,class=CODE,merge=1,delta=2
   101                           	psect	text42,local,class=CODE,merge=1,delta=2
   102                           	psect	text43,local,class=CODE,merge=1,delta=2
   103                           	psect	text44,local,class=CODE,merge=1,delta=2
   104                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
   105                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text48,local,class=CODE,merge=1,delta=2
   108                           	psect	text49,local,class=CODE,merge=1,delta=2
   109                           	psect	text50,local,class=CODE,merge=1,delta=2
   110                           	psect	text51,local,class=CODE,merge=1,delta=2
   111                           	psect	text52,local,class=CODE,merge=1,delta=2
   112                           	psect	text53,local,class=CODE,merge=1,delta=2
   113                           	psect	text54,local,class=CODE,merge=1,delta=2
   114                           	psect	text55,local,class=CODE,merge=1,delta=2
   115                           	psect	text56,local,class=CODE,merge=1,delta=2
   116                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
   117                           	psect	text58,local,class=CODE,merge=1,delta=2
   118                           	psect	text59,local,class=CODE,merge=1,delta=2
   119                           	psect	text60,local,class=CODE,merge=1,delta=2
   120                           	psect	text61,local,class=CODE,merge=1,delta=2
   121                           	psect	text62,local,class=CODE,merge=1,delta=2
   122                           	psect	text63,local,class=CODE,merge=1,delta=2
   123                           	psect	text64,local,class=CODE,merge=1,delta=2
   124                           	psect	text65,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text66,local,class=CODE,merge=1,delta=2,group=2
   126                           	psect	text67,local,class=CODE,merge=1,delta=2
   127                           	psect	text68,local,class=CODE,merge=1,delta=2
   128                           	psect	text69,local,class=CODE,merge=1,delta=2
   129                           	psect	text70,local,class=CODE,merge=1,delta=2
   130                           	psect	text71,local,class=CODE,merge=1,delta=2,group=2
   131                           	psect	text72,local,class=CODE,merge=1,delta=2
   132                           	psect	text73,local,class=CODE,merge=1,delta=2
   133                           	psect	text74,local,class=CODE,merge=1,delta=2
   134                           	psect	text75,local,class=CODE,merge=1,delta=2
   135                           	psect	text76,local,class=CODE,merge=1,delta=2
   136                           	psect	text77,local,class=CODE,merge=1,delta=2
   137                           	psect	text78,local,class=CODE,merge=1,delta=2
   138                           	psect	text79,local,class=CODE,merge=1,delta=2
   139                           	psect	text80,local,class=CODE,merge=1,delta=2
   140                           	psect	text81,local,class=CODE,merge=1,delta=2
   141                           	psect	text82,local,class=CODE,merge=1,delta=2
   142                           	psect	text83,local,class=CODE,merge=1,delta=2
   143                           	psect	text84,local,class=CODE,merge=1,delta=2
   144                           	psect	text85,local,class=CODE,merge=1,delta=2
   145                           	psect	text86,local,class=CODE,merge=1,delta=2
   146                           	psect	text87,local,class=CODE,merge=1,delta=2
   147                           	psect	text88,local,class=CODE,merge=1,delta=2
   148                           	psect	text89,local,class=CODE,merge=1,delta=2
   149                           	psect	text90,local,class=CODE,merge=1,delta=2
   150                           	psect	text91,local,class=CODE,merge=1,delta=2
   151                           	psect	text92,local,class=CODE,merge=1,delta=2
   152                           	psect	text93,local,class=CODE,merge=1,delta=2
   153                           	psect	text94,local,class=CODE,merge=1,delta=2
   154                           	psect	intentry,global,class=CODE,delta=2
   155                           	psect	text96,local,class=CODE,merge=1,delta=2
   156                           	psect	text97,local,class=CODE,merge=1,delta=2
   157                           	psect	text98,local,class=CODE,merge=1,delta=2
   158                           	dabs	1,0xCA0,32
   159                           	dabs	1,0xC20,80
   160                           	dabs	1,0xBA0,80
   161                           	dabs	1,0xB30,64
   162                           	dabs	1,0x26F0,0,_asciiCharTableLookup
   163                           	dabs	1,0x7E,2
   164  0000                     
   165                           ; Version 1.42
   166                           ; Generated 13/04/2017 GMT
   167                           ; 
   168                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   169                           ; All rights reserved.
   170                           ; 
   171                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   172                           ; 
   173                           ; Redistribution and use in source and binary forms, with or without modification, are
   174                           ; permitted provided that the following conditions are met:
   175                           ; 
   176                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   177                           ;        conditions and the following disclaimer.
   178                           ; 
   179                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   180                           ;        of conditions and the following disclaimer in the documentation and/or other
   181                           ;        materials provided with the distribution.
   182                           ; 
   183                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   184                           ;        software without specific prior written permission.
   185                           ; 
   186                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   187                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   188                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   189                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   190                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   191                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   192                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   193                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   194                           ; 
   195                           ; 
   196                           ; Code-generator required, PIC16LF18346 Definitions
   197                           ; 
   198                           ; SFR Addresses
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0008                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  0010                     	;# 
   215  0011                     	;# 
   216  0012                     	;# 
   217  0013                     	;# 
   218  0014                     	;# 
   219  0015                     	;# 
   220  0015                     	;# 
   221  0016                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001C                     	;# 
   230  001D                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  0090                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0097                     	;# 
   242  009B                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  0111                     	;# 
   252  0112                     	;# 
   253  0113                     	;# 
   254  0114                     	;# 
   255  0115                     	;# 
   256  0116                     	;# 
   257  0117                     	;# 
   258  0118                     	;# 
   259  0119                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  018E                     	;# 
   263  0199                     	;# 
   264  0199                     	;# 
   265  0199                     	;# 
   266  019A                     	;# 
   267  019A                     	;# 
   268  019A                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019C                     	;# 
   275  019C                     	;# 
   276  019C                     	;# 
   277  019D                     	;# 
   278  019D                     	;# 
   279  019D                     	;# 
   280  019E                     	;# 
   281  019E                     	;# 
   282  019E                     	;# 
   283  019F                     	;# 
   284  019F                     	;# 
   285  019F                     	;# 
   286  019F                     	;# 
   287  019F                     	;# 
   288  020C                     	;# 
   289  020D                     	;# 
   290  020E                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0212                     	;# 
   295  0213                     	;# 
   296  0213                     	;# 
   297  0214                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0216                     	;# 
   304  0216                     	;# 
   305  0217                     	;# 
   306  0217                     	;# 
   307  0219                     	;# 
   308  021A                     	;# 
   309  021B                     	;# 
   310  021C                     	;# 
   311  021D                     	;# 
   312  021D                     	;# 
   313  021E                     	;# 
   314  021F                     	;# 
   315  028C                     	;# 
   316  028D                     	;# 
   317  028E                     	;# 
   318  0291                     	;# 
   319  0291                     	;# 
   320  0292                     	;# 
   321  0293                     	;# 
   322  0294                     	;# 
   323  0295                     	;# 
   324  0295                     	;# 
   325  0296                     	;# 
   326  0297                     	;# 
   327  0298                     	;# 
   328  029F                     	;# 
   329  030C                     	;# 
   330  030D                     	;# 
   331  030E                     	;# 
   332  0311                     	;# 
   333  0311                     	;# 
   334  0312                     	;# 
   335  0313                     	;# 
   336  0314                     	;# 
   337  0315                     	;# 
   338  0315                     	;# 
   339  0316                     	;# 
   340  0317                     	;# 
   341  0318                     	;# 
   342  038C                     	;# 
   343  038D                     	;# 
   344  038E                     	;# 
   345  0391                     	;# 
   346  0392                     	;# 
   347  0393                     	;# 
   348  0394                     	;# 
   349  0395                     	;# 
   350  0396                     	;# 
   351  0397                     	;# 
   352  0398                     	;# 
   353  0399                     	;# 
   354  039A                     	;# 
   355  039C                     	;# 
   356  039D                     	;# 
   357  039E                     	;# 
   358  039F                     	;# 
   359  0411                     	;# 
   360  0411                     	;# 
   361  0412                     	;# 
   362  0413                     	;# 
   363  0414                     	;# 
   364  0415                     	;# 
   365  0416                     	;# 
   366  0417                     	;# 
   367  0418                     	;# 
   368  0418                     	;# 
   369  0419                     	;# 
   370  041A                     	;# 
   371  041B                     	;# 
   372  041C                     	;# 
   373  041D                     	;# 
   374  041E                     	;# 
   375  041F                     	;# 
   376  0498                     	;# 
   377  0498                     	;# 
   378  0499                     	;# 
   379  049A                     	;# 
   380  049B                     	;# 
   381  049B                     	;# 
   382  049C                     	;# 
   383  049D                     	;# 
   384  049E                     	;# 
   385  049F                     	;# 
   386  0617                     	;# 
   387  0618                     	;# 
   388  0619                     	;# 
   389  0619                     	;# 
   390  061A                     	;# 
   391  061B                     	;# 
   392  061C                     	;# 
   393  061C                     	;# 
   394  061F                     	;# 
   395  0691                     	;# 
   396  0692                     	;# 
   397  0693                     	;# 
   398  0694                     	;# 
   399  0695                     	;# 
   400  0696                     	;# 
   401  0697                     	;# 
   402  0698                     	;# 
   403  0699                     	;# 
   404  0711                     	;# 
   405  0712                     	;# 
   406  0713                     	;# 
   407  0714                     	;# 
   408  0715                     	;# 
   409  0716                     	;# 
   410  0717                     	;# 
   411  0718                     	;# 
   412  0719                     	;# 
   413  0891                     	;# 
   414  0891                     	;# 
   415  0891                     	;# 
   416  0891                     	;# 
   417  0891                     	;# 
   418  0891                     	;# 
   419  0892                     	;# 
   420  0892                     	;# 
   421  0892                     	;# 
   422  0893                     	;# 
   423  0893                     	;# 
   424  0893                     	;# 
   425  0893                     	;# 
   426  0893                     	;# 
   427  0893                     	;# 
   428  0894                     	;# 
   429  0894                     	;# 
   430  0894                     	;# 
   431  0895                     	;# 
   432  0895                     	;# 
   433  0895                     	;# 
   434  0896                     	;# 
   435  0896                     	;# 
   436  0896                     	;# 
   437  089B                     	;# 
   438  0911                     	;# 
   439  0912                     	;# 
   440  0913                     	;# 
   441  0914                     	;# 
   442  0915                     	;# 
   443  0916                     	;# 
   444  0918                     	;# 
   445  0919                     	;# 
   446  091A                     	;# 
   447  091B                     	;# 
   448  091C                     	;# 
   449  091D                     	;# 
   450  091E                     	;# 
   451  091F                     	;# 
   452  0E0F                     	;# 
   453  0E10                     	;# 
   454  0E11                     	;# 
   455  0E12                     	;# 
   456  0E13                     	;# 
   457  0E14                     	;# 
   458  0E15                     	;# 
   459  0E16                     	;# 
   460  0E17                     	;# 
   461  0E18                     	;# 
   462  0E19                     	;# 
   463  0E1A                     	;# 
   464  0E1B                     	;# 
   465  0E1C                     	;# 
   466  0E1D                     	;# 
   467  0E1E                     	;# 
   468  0E1F                     	;# 
   469  0E20                     	;# 
   470  0E21                     	;# 
   471  0E22                     	;# 
   472  0E24                     	;# 
   473  0E25                     	;# 
   474  0E28                     	;# 
   475  0E29                     	;# 
   476  0E2A                     	;# 
   477  0E2B                     	;# 
   478  0E2C                     	;# 
   479  0E2D                     	;# 
   480  0E2E                     	;# 
   481  0E2F                     	;# 
   482  0E90                     	;# 
   483  0E91                     	;# 
   484  0E92                     	;# 
   485  0E94                     	;# 
   486  0E95                     	;# 
   487  0E9C                     	;# 
   488  0E9D                     	;# 
   489  0E9E                     	;# 
   490  0E9F                     	;# 
   491  0EA0                     	;# 
   492  0EA1                     	;# 
   493  0EA2                     	;# 
   494  0EA3                     	;# 
   495  0EA4                     	;# 
   496  0EA5                     	;# 
   497  0EA6                     	;# 
   498  0EA7                     	;# 
   499  0F0F                     	;# 
   500  0F10                     	;# 
   501  0F11                     	;# 
   502  0F12                     	;# 
   503  0F13                     	;# 
   504  0F14                     	;# 
   505  0F15                     	;# 
   506  0F16                     	;# 
   507  0F17                     	;# 
   508  0F18                     	;# 
   509  0F19                     	;# 
   510  0F1A                     	;# 
   511  0F1B                     	;# 
   512  0F1C                     	;# 
   513  0F1D                     	;# 
   514  0F1E                     	;# 
   515  0F1F                     	;# 
   516  0F20                     	;# 
   517  0F21                     	;# 
   518  0F22                     	;# 
   519  0F23                     	;# 
   520  0F24                     	;# 
   521  0F25                     	;# 
   522  0F26                     	;# 
   523  0F27                     	;# 
   524  0F28                     	;# 
   525  0F29                     	;# 
   526  0F2A                     	;# 
   527  0F2B                     	;# 
   528  0F2C                     	;# 
   529  0F2D                     	;# 
   530  0F2E                     	;# 
   531  0F2F                     	;# 
   532  0F30                     	;# 
   533  0F31                     	;# 
   534  0F32                     	;# 
   535  0F33                     	;# 
   536  0F34                     	;# 
   537  0F35                     	;# 
   538  0F36                     	;# 
   539  0F37                     	;# 
   540  0FE4                     	;# 
   541  0FE5                     	;# 
   542  0FE6                     	;# 
   543  0FE7                     	;# 
   544  0FE8                     	;# 
   545  0FE9                     	;# 
   546  0FEA                     	;# 
   547  0FEB                     	;# 
   548  0FED                     	;# 
   549  0FEE                     	;# 
   550  0FEF                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  000E                     	;# 
   566  0010                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0014                     	;# 
   571  0015                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  0019                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001C                     	;# 
   582  001D                     	;# 
   583  001E                     	;# 
   584  001F                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  0090                     	;# 
   589  0091                     	;# 
   590  0092                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0097                     	;# 
   594  009B                     	;# 
   595  009B                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  009F                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  010E                     	;# 
   603  0111                     	;# 
   604  0112                     	;# 
   605  0113                     	;# 
   606  0114                     	;# 
   607  0115                     	;# 
   608  0116                     	;# 
   609  0117                     	;# 
   610  0118                     	;# 
   611  0119                     	;# 
   612  018C                     	;# 
   613  018D                     	;# 
   614  018E                     	;# 
   615  0199                     	;# 
   616  0199                     	;# 
   617  0199                     	;# 
   618  019A                     	;# 
   619  019A                     	;# 
   620  019A                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019C                     	;# 
   627  019C                     	;# 
   628  019C                     	;# 
   629  019D                     	;# 
   630  019D                     	;# 
   631  019D                     	;# 
   632  019E                     	;# 
   633  019E                     	;# 
   634  019E                     	;# 
   635  019F                     	;# 
   636  019F                     	;# 
   637  019F                     	;# 
   638  019F                     	;# 
   639  019F                     	;# 
   640  020C                     	;# 
   641  020D                     	;# 
   642  020E                     	;# 
   643  0211                     	;# 
   644  0211                     	;# 
   645  0212                     	;# 
   646  0212                     	;# 
   647  0213                     	;# 
   648  0213                     	;# 
   649  0214                     	;# 
   650  0214                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0215                     	;# 
   654  0215                     	;# 
   655  0216                     	;# 
   656  0216                     	;# 
   657  0217                     	;# 
   658  0217                     	;# 
   659  0219                     	;# 
   660  021A                     	;# 
   661  021B                     	;# 
   662  021C                     	;# 
   663  021D                     	;# 
   664  021D                     	;# 
   665  021E                     	;# 
   666  021F                     	;# 
   667  028C                     	;# 
   668  028D                     	;# 
   669  028E                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0295                     	;# 
   676  0295                     	;# 
   677  0296                     	;# 
   678  0297                     	;# 
   679  0298                     	;# 
   680  029F                     	;# 
   681  030C                     	;# 
   682  030D                     	;# 
   683  030E                     	;# 
   684  0311                     	;# 
   685  0311                     	;# 
   686  0312                     	;# 
   687  0313                     	;# 
   688  0314                     	;# 
   689  0315                     	;# 
   690  0315                     	;# 
   691  0316                     	;# 
   692  0317                     	;# 
   693  0318                     	;# 
   694  038C                     	;# 
   695  038D                     	;# 
   696  038E                     	;# 
   697  0391                     	;# 
   698  0392                     	;# 
   699  0393                     	;# 
   700  0394                     	;# 
   701  0395                     	;# 
   702  0396                     	;# 
   703  0397                     	;# 
   704  0398                     	;# 
   705  0399                     	;# 
   706  039A                     	;# 
   707  039C                     	;# 
   708  039D                     	;# 
   709  039E                     	;# 
   710  039F                     	;# 
   711  0411                     	;# 
   712  0411                     	;# 
   713  0412                     	;# 
   714  0413                     	;# 
   715  0414                     	;# 
   716  0415                     	;# 
   717  0416                     	;# 
   718  0417                     	;# 
   719  0418                     	;# 
   720  0418                     	;# 
   721  0419                     	;# 
   722  041A                     	;# 
   723  041B                     	;# 
   724  041C                     	;# 
   725  041D                     	;# 
   726  041E                     	;# 
   727  041F                     	;# 
   728  0498                     	;# 
   729  0498                     	;# 
   730  0499                     	;# 
   731  049A                     	;# 
   732  049B                     	;# 
   733  049B                     	;# 
   734  049C                     	;# 
   735  049D                     	;# 
   736  049E                     	;# 
   737  049F                     	;# 
   738  0617                     	;# 
   739  0618                     	;# 
   740  0619                     	;# 
   741  0619                     	;# 
   742  061A                     	;# 
   743  061B                     	;# 
   744  061C                     	;# 
   745  061C                     	;# 
   746  061F                     	;# 
   747  0691                     	;# 
   748  0692                     	;# 
   749  0693                     	;# 
   750  0694                     	;# 
   751  0695                     	;# 
   752  0696                     	;# 
   753  0697                     	;# 
   754  0698                     	;# 
   755  0699                     	;# 
   756  0711                     	;# 
   757  0712                     	;# 
   758  0713                     	;# 
   759  0714                     	;# 
   760  0715                     	;# 
   761  0716                     	;# 
   762  0717                     	;# 
   763  0718                     	;# 
   764  0719                     	;# 
   765  0891                     	;# 
   766  0891                     	;# 
   767  0891                     	;# 
   768  0891                     	;# 
   769  0891                     	;# 
   770  0891                     	;# 
   771  0892                     	;# 
   772  0892                     	;# 
   773  0892                     	;# 
   774  0893                     	;# 
   775  0893                     	;# 
   776  0893                     	;# 
   777  0893                     	;# 
   778  0893                     	;# 
   779  0893                     	;# 
   780  0894                     	;# 
   781  0894                     	;# 
   782  0894                     	;# 
   783  0895                     	;# 
   784  0895                     	;# 
   785  0895                     	;# 
   786  0896                     	;# 
   787  0896                     	;# 
   788  0896                     	;# 
   789  089B                     	;# 
   790  0911                     	;# 
   791  0912                     	;# 
   792  0913                     	;# 
   793  0914                     	;# 
   794  0915                     	;# 
   795  0916                     	;# 
   796  0918                     	;# 
   797  0919                     	;# 
   798  091A                     	;# 
   799  091B                     	;# 
   800  091C                     	;# 
   801  091D                     	;# 
   802  091E                     	;# 
   803  091F                     	;# 
   804  0E0F                     	;# 
   805  0E10                     	;# 
   806  0E11                     	;# 
   807  0E12                     	;# 
   808  0E13                     	;# 
   809  0E14                     	;# 
   810  0E15                     	;# 
   811  0E16                     	;# 
   812  0E17                     	;# 
   813  0E18                     	;# 
   814  0E19                     	;# 
   815  0E1A                     	;# 
   816  0E1B                     	;# 
   817  0E1C                     	;# 
   818  0E1D                     	;# 
   819  0E1E                     	;# 
   820  0E1F                     	;# 
   821  0E20                     	;# 
   822  0E21                     	;# 
   823  0E22                     	;# 
   824  0E24                     	;# 
   825  0E25                     	;# 
   826  0E28                     	;# 
   827  0E29                     	;# 
   828  0E2A                     	;# 
   829  0E2B                     	;# 
   830  0E2C                     	;# 
   831  0E2D                     	;# 
   832  0E2E                     	;# 
   833  0E2F                     	;# 
   834  0E90                     	;# 
   835  0E91                     	;# 
   836  0E92                     	;# 
   837  0E94                     	;# 
   838  0E95                     	;# 
   839  0E9C                     	;# 
   840  0E9D                     	;# 
   841  0E9E                     	;# 
   842  0E9F                     	;# 
   843  0EA0                     	;# 
   844  0EA1                     	;# 
   845  0EA2                     	;# 
   846  0EA3                     	;# 
   847  0EA4                     	;# 
   848  0EA5                     	;# 
   849  0EA6                     	;# 
   850  0EA7                     	;# 
   851  0F0F                     	;# 
   852  0F10                     	;# 
   853  0F11                     	;# 
   854  0F12                     	;# 
   855  0F13                     	;# 
   856  0F14                     	;# 
   857  0F15                     	;# 
   858  0F16                     	;# 
   859  0F17                     	;# 
   860  0F18                     	;# 
   861  0F19                     	;# 
   862  0F1A                     	;# 
   863  0F1B                     	;# 
   864  0F1C                     	;# 
   865  0F1D                     	;# 
   866  0F1E                     	;# 
   867  0F1F                     	;# 
   868  0F20                     	;# 
   869  0F21                     	;# 
   870  0F22                     	;# 
   871  0F23                     	;# 
   872  0F24                     	;# 
   873  0F25                     	;# 
   874  0F26                     	;# 
   875  0F27                     	;# 
   876  0F28                     	;# 
   877  0F29                     	;# 
   878  0F2A                     	;# 
   879  0F2B                     	;# 
   880  0F2C                     	;# 
   881  0F2D                     	;# 
   882  0F2E                     	;# 
   883  0F2F                     	;# 
   884  0F30                     	;# 
   885  0F31                     	;# 
   886  0F32                     	;# 
   887  0F33                     	;# 
   888  0F34                     	;# 
   889  0F35                     	;# 
   890  0F36                     	;# 
   891  0F37                     	;# 
   892  0FE4                     	;# 
   893  0FE5                     	;# 
   894  0FE6                     	;# 
   895  0FE7                     	;# 
   896  0FE8                     	;# 
   897  0FE9                     	;# 
   898  0FEA                     	;# 
   899  0FEB                     	;# 
   900  0FED                     	;# 
   901  0FEE                     	;# 
   902  0FEF                     	;# 
   903  0000                     	;# 
   904  0001                     	;# 
   905  0002                     	;# 
   906  0003                     	;# 
   907  0004                     	;# 
   908  0005                     	;# 
   909  0006                     	;# 
   910  0007                     	;# 
   911  0008                     	;# 
   912  0009                     	;# 
   913  000A                     	;# 
   914  000B                     	;# 
   915  000C                     	;# 
   916  000D                     	;# 
   917  000E                     	;# 
   918  0010                     	;# 
   919  0011                     	;# 
   920  0012                     	;# 
   921  0013                     	;# 
   922  0014                     	;# 
   923  0015                     	;# 
   924  0015                     	;# 
   925  0016                     	;# 
   926  0016                     	;# 
   927  0017                     	;# 
   928  0018                     	;# 
   929  0019                     	;# 
   930  0019                     	;# 
   931  001A                     	;# 
   932  001B                     	;# 
   933  001C                     	;# 
   934  001D                     	;# 
   935  001E                     	;# 
   936  001F                     	;# 
   937  008C                     	;# 
   938  008D                     	;# 
   939  008E                     	;# 
   940  0090                     	;# 
   941  0091                     	;# 
   942  0092                     	;# 
   943  0093                     	;# 
   944  0094                     	;# 
   945  0097                     	;# 
   946  009B                     	;# 
   947  009B                     	;# 
   948  009C                     	;# 
   949  009D                     	;# 
   950  009E                     	;# 
   951  009F                     	;# 
   952  010C                     	;# 
   953  010D                     	;# 
   954  010E                     	;# 
   955  0111                     	;# 
   956  0112                     	;# 
   957  0113                     	;# 
   958  0114                     	;# 
   959  0115                     	;# 
   960  0116                     	;# 
   961  0117                     	;# 
   962  0118                     	;# 
   963  0119                     	;# 
   964  018C                     	;# 
   965  018D                     	;# 
   966  018E                     	;# 
   967  0199                     	;# 
   968  0199                     	;# 
   969  0199                     	;# 
   970  019A                     	;# 
   971  019A                     	;# 
   972  019A                     	;# 
   973  019B                     	;# 
   974  019B                     	;# 
   975  019B                     	;# 
   976  019B                     	;# 
   977  019B                     	;# 
   978  019C                     	;# 
   979  019C                     	;# 
   980  019C                     	;# 
   981  019D                     	;# 
   982  019D                     	;# 
   983  019D                     	;# 
   984  019E                     	;# 
   985  019E                     	;# 
   986  019E                     	;# 
   987  019F                     	;# 
   988  019F                     	;# 
   989  019F                     	;# 
   990  019F                     	;# 
   991  019F                     	;# 
   992  020C                     	;# 
   993  020D                     	;# 
   994  020E                     	;# 
   995  0211                     	;# 
   996  0211                     	;# 
   997  0212                     	;# 
   998  0212                     	;# 
   999  0213                     	;# 
  1000  0213                     	;# 
  1001  0214                     	;# 
  1002  0214                     	;# 
  1003  0215                     	;# 
  1004  0215                     	;# 
  1005  0215                     	;# 
  1006  0215                     	;# 
  1007  0216                     	;# 
  1008  0216                     	;# 
  1009  0217                     	;# 
  1010  0217                     	;# 
  1011  0219                     	;# 
  1012  021A                     	;# 
  1013  021B                     	;# 
  1014  021C                     	;# 
  1015  021D                     	;# 
  1016  021D                     	;# 
  1017  021E                     	;# 
  1018  021F                     	;# 
  1019  028C                     	;# 
  1020  028D                     	;# 
  1021  028E                     	;# 
  1022  0291                     	;# 
  1023  0291                     	;# 
  1024  0292                     	;# 
  1025  0293                     	;# 
  1026  0294                     	;# 
  1027  0295                     	;# 
  1028  0295                     	;# 
  1029  0296                     	;# 
  1030  0297                     	;# 
  1031  0298                     	;# 
  1032  029F                     	;# 
  1033  030C                     	;# 
  1034  030D                     	;# 
  1035  030E                     	;# 
  1036  0311                     	;# 
  1037  0311                     	;# 
  1038  0312                     	;# 
  1039  0313                     	;# 
  1040  0314                     	;# 
  1041  0315                     	;# 
  1042  0315                     	;# 
  1043  0316                     	;# 
  1044  0317                     	;# 
  1045  0318                     	;# 
  1046  038C                     	;# 
  1047  038D                     	;# 
  1048  038E                     	;# 
  1049  0391                     	;# 
  1050  0392                     	;# 
  1051  0393                     	;# 
  1052  0394                     	;# 
  1053  0395                     	;# 
  1054  0396                     	;# 
  1055  0397                     	;# 
  1056  0398                     	;# 
  1057  0399                     	;# 
  1058  039A                     	;# 
  1059  039C                     	;# 
  1060  039D                     	;# 
  1061  039E                     	;# 
  1062  039F                     	;# 
  1063  0411                     	;# 
  1064  0411                     	;# 
  1065  0412                     	;# 
  1066  0413                     	;# 
  1067  0414                     	;# 
  1068  0415                     	;# 
  1069  0416                     	;# 
  1070  0417                     	;# 
  1071  0418                     	;# 
  1072  0418                     	;# 
  1073  0419                     	;# 
  1074  041A                     	;# 
  1075  041B                     	;# 
  1076  041C                     	;# 
  1077  041D                     	;# 
  1078  041E                     	;# 
  1079  041F                     	;# 
  1080  0498                     	;# 
  1081  0498                     	;# 
  1082  0499                     	;# 
  1083  049A                     	;# 
  1084  049B                     	;# 
  1085  049B                     	;# 
  1086  049C                     	;# 
  1087  049D                     	;# 
  1088  049E                     	;# 
  1089  049F                     	;# 
  1090  0617                     	;# 
  1091  0618                     	;# 
  1092  0619                     	;# 
  1093  0619                     	;# 
  1094  061A                     	;# 
  1095  061B                     	;# 
  1096  061C                     	;# 
  1097  061C                     	;# 
  1098  061F                     	;# 
  1099  0691                     	;# 
  1100  0692                     	;# 
  1101  0693                     	;# 
  1102  0694                     	;# 
  1103  0695                     	;# 
  1104  0696                     	;# 
  1105  0697                     	;# 
  1106  0698                     	;# 
  1107  0699                     	;# 
  1108  0711                     	;# 
  1109  0712                     	;# 
  1110  0713                     	;# 
  1111  0714                     	;# 
  1112  0715                     	;# 
  1113  0716                     	;# 
  1114  0717                     	;# 
  1115  0718                     	;# 
  1116  0719                     	;# 
  1117  0891                     	;# 
  1118  0891                     	;# 
  1119  0891                     	;# 
  1120  0891                     	;# 
  1121  0891                     	;# 
  1122  0891                     	;# 
  1123  0892                     	;# 
  1124  0892                     	;# 
  1125  0892                     	;# 
  1126  0893                     	;# 
  1127  0893                     	;# 
  1128  0893                     	;# 
  1129  0893                     	;# 
  1130  0893                     	;# 
  1131  0893                     	;# 
  1132  0894                     	;# 
  1133  0894                     	;# 
  1134  0894                     	;# 
  1135  0895                     	;# 
  1136  0895                     	;# 
  1137  0895                     	;# 
  1138  0896                     	;# 
  1139  0896                     	;# 
  1140  0896                     	;# 
  1141  089B                     	;# 
  1142  0911                     	;# 
  1143  0912                     	;# 
  1144  0913                     	;# 
  1145  0914                     	;# 
  1146  0915                     	;# 
  1147  0916                     	;# 
  1148  0918                     	;# 
  1149  0919                     	;# 
  1150  091A                     	;# 
  1151  091B                     	;# 
  1152  091C                     	;# 
  1153  091D                     	;# 
  1154  091E                     	;# 
  1155  091F                     	;# 
  1156  0E0F                     	;# 
  1157  0E10                     	;# 
  1158  0E11                     	;# 
  1159  0E12                     	;# 
  1160  0E13                     	;# 
  1161  0E14                     	;# 
  1162  0E15                     	;# 
  1163  0E16                     	;# 
  1164  0E17                     	;# 
  1165  0E18                     	;# 
  1166  0E19                     	;# 
  1167  0E1A                     	;# 
  1168  0E1B                     	;# 
  1169  0E1C                     	;# 
  1170  0E1D                     	;# 
  1171  0E1E                     	;# 
  1172  0E1F                     	;# 
  1173  0E20                     	;# 
  1174  0E21                     	;# 
  1175  0E22                     	;# 
  1176  0E24                     	;# 
  1177  0E25                     	;# 
  1178  0E28                     	;# 
  1179  0E29                     	;# 
  1180  0E2A                     	;# 
  1181  0E2B                     	;# 
  1182  0E2C                     	;# 
  1183  0E2D                     	;# 
  1184  0E2E                     	;# 
  1185  0E2F                     	;# 
  1186  0E90                     	;# 
  1187  0E91                     	;# 
  1188  0E92                     	;# 
  1189  0E94                     	;# 
  1190  0E95                     	;# 
  1191  0E9C                     	;# 
  1192  0E9D                     	;# 
  1193  0E9E                     	;# 
  1194  0E9F                     	;# 
  1195  0EA0                     	;# 
  1196  0EA1                     	;# 
  1197  0EA2                     	;# 
  1198  0EA3                     	;# 
  1199  0EA4                     	;# 
  1200  0EA5                     	;# 
  1201  0EA6                     	;# 
  1202  0EA7                     	;# 
  1203  0F0F                     	;# 
  1204  0F10                     	;# 
  1205  0F11                     	;# 
  1206  0F12                     	;# 
  1207  0F13                     	;# 
  1208  0F14                     	;# 
  1209  0F15                     	;# 
  1210  0F16                     	;# 
  1211  0F17                     	;# 
  1212  0F18                     	;# 
  1213  0F19                     	;# 
  1214  0F1A                     	;# 
  1215  0F1B                     	;# 
  1216  0F1C                     	;# 
  1217  0F1D                     	;# 
  1218  0F1E                     	;# 
  1219  0F1F                     	;# 
  1220  0F20                     	;# 
  1221  0F21                     	;# 
  1222  0F22                     	;# 
  1223  0F23                     	;# 
  1224  0F24                     	;# 
  1225  0F25                     	;# 
  1226  0F26                     	;# 
  1227  0F27                     	;# 
  1228  0F28                     	;# 
  1229  0F29                     	;# 
  1230  0F2A                     	;# 
  1231  0F2B                     	;# 
  1232  0F2C                     	;# 
  1233  0F2D                     	;# 
  1234  0F2E                     	;# 
  1235  0F2F                     	;# 
  1236  0F30                     	;# 
  1237  0F31                     	;# 
  1238  0F32                     	;# 
  1239  0F33                     	;# 
  1240  0F34                     	;# 
  1241  0F35                     	;# 
  1242  0F36                     	;# 
  1243  0F37                     	;# 
  1244  0FE4                     	;# 
  1245  0FE5                     	;# 
  1246  0FE6                     	;# 
  1247  0FE7                     	;# 
  1248  0FE8                     	;# 
  1249  0FE9                     	;# 
  1250  0FEA                     	;# 
  1251  0FEB                     	;# 
  1252  0FED                     	;# 
  1253  0FEE                     	;# 
  1254  0FEF                     	;# 
  1255  0000                     	;# 
  1256  0001                     	;# 
  1257  0002                     	;# 
  1258  0003                     	;# 
  1259  0004                     	;# 
  1260  0005                     	;# 
  1261  0006                     	;# 
  1262  0007                     	;# 
  1263  0008                     	;# 
  1264  0009                     	;# 
  1265  000A                     	;# 
  1266  000B                     	;# 
  1267  000C                     	;# 
  1268  000D                     	;# 
  1269  000E                     	;# 
  1270  0010                     	;# 
  1271  0011                     	;# 
  1272  0012                     	;# 
  1273  0013                     	;# 
  1274  0014                     	;# 
  1275  0015                     	;# 
  1276  0015                     	;# 
  1277  0016                     	;# 
  1278  0016                     	;# 
  1279  0017                     	;# 
  1280  0018                     	;# 
  1281  0019                     	;# 
  1282  0019                     	;# 
  1283  001A                     	;# 
  1284  001B                     	;# 
  1285  001C                     	;# 
  1286  001D                     	;# 
  1287  001E                     	;# 
  1288  001F                     	;# 
  1289  008C                     	;# 
  1290  008D                     	;# 
  1291  008E                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0092                     	;# 
  1295  0093                     	;# 
  1296  0094                     	;# 
  1297  0097                     	;# 
  1298  009B                     	;# 
  1299  009B                     	;# 
  1300  009C                     	;# 
  1301  009D                     	;# 
  1302  009E                     	;# 
  1303  009F                     	;# 
  1304  010C                     	;# 
  1305  010D                     	;# 
  1306  010E                     	;# 
  1307  0111                     	;# 
  1308  0112                     	;# 
  1309  0113                     	;# 
  1310  0114                     	;# 
  1311  0115                     	;# 
  1312  0116                     	;# 
  1313  0117                     	;# 
  1314  0118                     	;# 
  1315  0119                     	;# 
  1316  018C                     	;# 
  1317  018D                     	;# 
  1318  018E                     	;# 
  1319  0199                     	;# 
  1320  0199                     	;# 
  1321  0199                     	;# 
  1322  019A                     	;# 
  1323  019A                     	;# 
  1324  019A                     	;# 
  1325  019B                     	;# 
  1326  019B                     	;# 
  1327  019B                     	;# 
  1328  019B                     	;# 
  1329  019B                     	;# 
  1330  019C                     	;# 
  1331  019C                     	;# 
  1332  019C                     	;# 
  1333  019D                     	;# 
  1334  019D                     	;# 
  1335  019D                     	;# 
  1336  019E                     	;# 
  1337  019E                     	;# 
  1338  019E                     	;# 
  1339  019F                     	;# 
  1340  019F                     	;# 
  1341  019F                     	;# 
  1342  019F                     	;# 
  1343  019F                     	;# 
  1344  020C                     	;# 
  1345  020D                     	;# 
  1346  020E                     	;# 
  1347  0211                     	;# 
  1348  0211                     	;# 
  1349  0212                     	;# 
  1350  0212                     	;# 
  1351  0213                     	;# 
  1352  0213                     	;# 
  1353  0214                     	;# 
  1354  0214                     	;# 
  1355  0215                     	;# 
  1356  0215                     	;# 
  1357  0215                     	;# 
  1358  0215                     	;# 
  1359  0216                     	;# 
  1360  0216                     	;# 
  1361  0217                     	;# 
  1362  0217                     	;# 
  1363  0219                     	;# 
  1364  021A                     	;# 
  1365  021B                     	;# 
  1366  021C                     	;# 
  1367  021D                     	;# 
  1368  021D                     	;# 
  1369  021E                     	;# 
  1370  021F                     	;# 
  1371  028C                     	;# 
  1372  028D                     	;# 
  1373  028E                     	;# 
  1374  0291                     	;# 
  1375  0291                     	;# 
  1376  0292                     	;# 
  1377  0293                     	;# 
  1378  0294                     	;# 
  1379  0295                     	;# 
  1380  0295                     	;# 
  1381  0296                     	;# 
  1382  0297                     	;# 
  1383  0298                     	;# 
  1384  029F                     	;# 
  1385  030C                     	;# 
  1386  030D                     	;# 
  1387  030E                     	;# 
  1388  0311                     	;# 
  1389  0311                     	;# 
  1390  0312                     	;# 
  1391  0313                     	;# 
  1392  0314                     	;# 
  1393  0315                     	;# 
  1394  0315                     	;# 
  1395  0316                     	;# 
  1396  0317                     	;# 
  1397  0318                     	;# 
  1398  038C                     	;# 
  1399  038D                     	;# 
  1400  038E                     	;# 
  1401  0391                     	;# 
  1402  0392                     	;# 
  1403  0393                     	;# 
  1404  0394                     	;# 
  1405  0395                     	;# 
  1406  0396                     	;# 
  1407  0397                     	;# 
  1408  0398                     	;# 
  1409  0399                     	;# 
  1410  039A                     	;# 
  1411  039C                     	;# 
  1412  039D                     	;# 
  1413  039E                     	;# 
  1414  039F                     	;# 
  1415  0411                     	;# 
  1416  0411                     	;# 
  1417  0412                     	;# 
  1418  0413                     	;# 
  1419  0414                     	;# 
  1420  0415                     	;# 
  1421  0416                     	;# 
  1422  0417                     	;# 
  1423  0418                     	;# 
  1424  0418                     	;# 
  1425  0419                     	;# 
  1426  041A                     	;# 
  1427  041B                     	;# 
  1428  041C                     	;# 
  1429  041D                     	;# 
  1430  041E                     	;# 
  1431  041F                     	;# 
  1432  0498                     	;# 
  1433  0498                     	;# 
  1434  0499                     	;# 
  1435  049A                     	;# 
  1436  049B                     	;# 
  1437  049B                     	;# 
  1438  049C                     	;# 
  1439  049D                     	;# 
  1440  049E                     	;# 
  1441  049F                     	;# 
  1442  0617                     	;# 
  1443  0618                     	;# 
  1444  0619                     	;# 
  1445  0619                     	;# 
  1446  061A                     	;# 
  1447  061B                     	;# 
  1448  061C                     	;# 
  1449  061C                     	;# 
  1450  061F                     	;# 
  1451  0691                     	;# 
  1452  0692                     	;# 
  1453  0693                     	;# 
  1454  0694                     	;# 
  1455  0695                     	;# 
  1456  0696                     	;# 
  1457  0697                     	;# 
  1458  0698                     	;# 
  1459  0699                     	;# 
  1460  0711                     	;# 
  1461  0712                     	;# 
  1462  0713                     	;# 
  1463  0714                     	;# 
  1464  0715                     	;# 
  1465  0716                     	;# 
  1466  0717                     	;# 
  1467  0718                     	;# 
  1468  0719                     	;# 
  1469  0891                     	;# 
  1470  0891                     	;# 
  1471  0891                     	;# 
  1472  0891                     	;# 
  1473  0891                     	;# 
  1474  0891                     	;# 
  1475  0892                     	;# 
  1476  0892                     	;# 
  1477  0892                     	;# 
  1478  0893                     	;# 
  1479  0893                     	;# 
  1480  0893                     	;# 
  1481  0893                     	;# 
  1482  0893                     	;# 
  1483  0893                     	;# 
  1484  0894                     	;# 
  1485  0894                     	;# 
  1486  0894                     	;# 
  1487  0895                     	;# 
  1488  0895                     	;# 
  1489  0895                     	;# 
  1490  0896                     	;# 
  1491  0896                     	;# 
  1492  0896                     	;# 
  1493  089B                     	;# 
  1494  0911                     	;# 
  1495  0912                     	;# 
  1496  0913                     	;# 
  1497  0914                     	;# 
  1498  0915                     	;# 
  1499  0916                     	;# 
  1500  0918                     	;# 
  1501  0919                     	;# 
  1502  091A                     	;# 
  1503  091B                     	;# 
  1504  091C                     	;# 
  1505  091D                     	;# 
  1506  091E                     	;# 
  1507  091F                     	;# 
  1508  0E0F                     	;# 
  1509  0E10                     	;# 
  1510  0E11                     	;# 
  1511  0E12                     	;# 
  1512  0E13                     	;# 
  1513  0E14                     	;# 
  1514  0E15                     	;# 
  1515  0E16                     	;# 
  1516  0E17                     	;# 
  1517  0E18                     	;# 
  1518  0E19                     	;# 
  1519  0E1A                     	;# 
  1520  0E1B                     	;# 
  1521  0E1C                     	;# 
  1522  0E1D                     	;# 
  1523  0E1E                     	;# 
  1524  0E1F                     	;# 
  1525  0E20                     	;# 
  1526  0E21                     	;# 
  1527  0E22                     	;# 
  1528  0E24                     	;# 
  1529  0E25                     	;# 
  1530  0E28                     	;# 
  1531  0E29                     	;# 
  1532  0E2A                     	;# 
  1533  0E2B                     	;# 
  1534  0E2C                     	;# 
  1535  0E2D                     	;# 
  1536  0E2E                     	;# 
  1537  0E2F                     	;# 
  1538  0E90                     	;# 
  1539  0E91                     	;# 
  1540  0E92                     	;# 
  1541  0E94                     	;# 
  1542  0E95                     	;# 
  1543  0E9C                     	;# 
  1544  0E9D                     	;# 
  1545  0E9E                     	;# 
  1546  0E9F                     	;# 
  1547  0EA0                     	;# 
  1548  0EA1                     	;# 
  1549  0EA2                     	;# 
  1550  0EA3                     	;# 
  1551  0EA4                     	;# 
  1552  0EA5                     	;# 
  1553  0EA6                     	;# 
  1554  0EA7                     	;# 
  1555  0F0F                     	;# 
  1556  0F10                     	;# 
  1557  0F11                     	;# 
  1558  0F12                     	;# 
  1559  0F13                     	;# 
  1560  0F14                     	;# 
  1561  0F15                     	;# 
  1562  0F16                     	;# 
  1563  0F17                     	;# 
  1564  0F18                     	;# 
  1565  0F19                     	;# 
  1566  0F1A                     	;# 
  1567  0F1B                     	;# 
  1568  0F1C                     	;# 
  1569  0F1D                     	;# 
  1570  0F1E                     	;# 
  1571  0F1F                     	;# 
  1572  0F20                     	;# 
  1573  0F21                     	;# 
  1574  0F22                     	;# 
  1575  0F23                     	;# 
  1576  0F24                     	;# 
  1577  0F25                     	;# 
  1578  0F26                     	;# 
  1579  0F27                     	;# 
  1580  0F28                     	;# 
  1581  0F29                     	;# 
  1582  0F2A                     	;# 
  1583  0F2B                     	;# 
  1584  0F2C                     	;# 
  1585  0F2D                     	;# 
  1586  0F2E                     	;# 
  1587  0F2F                     	;# 
  1588  0F30                     	;# 
  1589  0F31                     	;# 
  1590  0F32                     	;# 
  1591  0F33                     	;# 
  1592  0F34                     	;# 
  1593  0F35                     	;# 
  1594  0F36                     	;# 
  1595  0F37                     	;# 
  1596  0FE4                     	;# 
  1597  0FE5                     	;# 
  1598  0FE6                     	;# 
  1599  0FE7                     	;# 
  1600  0FE8                     	;# 
  1601  0FE9                     	;# 
  1602  0FEA                     	;# 
  1603  0FEB                     	;# 
  1604  0FED                     	;# 
  1605  0FEE                     	;# 
  1606  0FEF                     	;# 
  1607  0000                     	;# 
  1608  0001                     	;# 
  1609  0002                     	;# 
  1610  0003                     	;# 
  1611  0004                     	;# 
  1612  0005                     	;# 
  1613  0006                     	;# 
  1614  0007                     	;# 
  1615  0008                     	;# 
  1616  0009                     	;# 
  1617  000A                     	;# 
  1618  000B                     	;# 
  1619  000C                     	;# 
  1620  000D                     	;# 
  1621  000E                     	;# 
  1622  0010                     	;# 
  1623  0011                     	;# 
  1624  0012                     	;# 
  1625  0013                     	;# 
  1626  0014                     	;# 
  1627  0015                     	;# 
  1628  0015                     	;# 
  1629  0016                     	;# 
  1630  0016                     	;# 
  1631  0017                     	;# 
  1632  0018                     	;# 
  1633  0019                     	;# 
  1634  0019                     	;# 
  1635  001A                     	;# 
  1636  001B                     	;# 
  1637  001C                     	;# 
  1638  001D                     	;# 
  1639  001E                     	;# 
  1640  001F                     	;# 
  1641  008C                     	;# 
  1642  008D                     	;# 
  1643  008E                     	;# 
  1644  0090                     	;# 
  1645  0091                     	;# 
  1646  0092                     	;# 
  1647  0093                     	;# 
  1648  0094                     	;# 
  1649  0097                     	;# 
  1650  009B                     	;# 
  1651  009B                     	;# 
  1652  009C                     	;# 
  1653  009D                     	;# 
  1654  009E                     	;# 
  1655  009F                     	;# 
  1656  010C                     	;# 
  1657  010D                     	;# 
  1658  010E                     	;# 
  1659  0111                     	;# 
  1660  0112                     	;# 
  1661  0113                     	;# 
  1662  0114                     	;# 
  1663  0115                     	;# 
  1664  0116                     	;# 
  1665  0117                     	;# 
  1666  0118                     	;# 
  1667  0119                     	;# 
  1668  018C                     	;# 
  1669  018D                     	;# 
  1670  018E                     	;# 
  1671  0199                     	;# 
  1672  0199                     	;# 
  1673  0199                     	;# 
  1674  019A                     	;# 
  1675  019A                     	;# 
  1676  019A                     	;# 
  1677  019B                     	;# 
  1678  019B                     	;# 
  1679  019B                     	;# 
  1680  019B                     	;# 
  1681  019B                     	;# 
  1682  019C                     	;# 
  1683  019C                     	;# 
  1684  019C                     	;# 
  1685  019D                     	;# 
  1686  019D                     	;# 
  1687  019D                     	;# 
  1688  019E                     	;# 
  1689  019E                     	;# 
  1690  019E                     	;# 
  1691  019F                     	;# 
  1692  019F                     	;# 
  1693  019F                     	;# 
  1694  019F                     	;# 
  1695  019F                     	;# 
  1696  020C                     	;# 
  1697  020D                     	;# 
  1698  020E                     	;# 
  1699  0211                     	;# 
  1700  0211                     	;# 
  1701  0212                     	;# 
  1702  0212                     	;# 
  1703  0213                     	;# 
  1704  0213                     	;# 
  1705  0214                     	;# 
  1706  0214                     	;# 
  1707  0215                     	;# 
  1708  0215                     	;# 
  1709  0215                     	;# 
  1710  0215                     	;# 
  1711  0216                     	;# 
  1712  0216                     	;# 
  1713  0217                     	;# 
  1714  0217                     	;# 
  1715  0219                     	;# 
  1716  021A                     	;# 
  1717  021B                     	;# 
  1718  021C                     	;# 
  1719  021D                     	;# 
  1720  021D                     	;# 
  1721  021E                     	;# 
  1722  021F                     	;# 
  1723  028C                     	;# 
  1724  028D                     	;# 
  1725  028E                     	;# 
  1726  0291                     	;# 
  1727  0291                     	;# 
  1728  0292                     	;# 
  1729  0293                     	;# 
  1730  0294                     	;# 
  1731  0295                     	;# 
  1732  0295                     	;# 
  1733  0296                     	;# 
  1734  0297                     	;# 
  1735  0298                     	;# 
  1736  029F                     	;# 
  1737  030C                     	;# 
  1738  030D                     	;# 
  1739  030E                     	;# 
  1740  0311                     	;# 
  1741  0311                     	;# 
  1742  0312                     	;# 
  1743  0313                     	;# 
  1744  0314                     	;# 
  1745  0315                     	;# 
  1746  0315                     	;# 
  1747  0316                     	;# 
  1748  0317                     	;# 
  1749  0318                     	;# 
  1750  038C                     	;# 
  1751  038D                     	;# 
  1752  038E                     	;# 
  1753  0391                     	;# 
  1754  0392                     	;# 
  1755  0393                     	;# 
  1756  0394                     	;# 
  1757  0395                     	;# 
  1758  0396                     	;# 
  1759  0397                     	;# 
  1760  0398                     	;# 
  1761  0399                     	;# 
  1762  039A                     	;# 
  1763  039C                     	;# 
  1764  039D                     	;# 
  1765  039E                     	;# 
  1766  039F                     	;# 
  1767  0411                     	;# 
  1768  0411                     	;# 
  1769  0412                     	;# 
  1770  0413                     	;# 
  1771  0414                     	;# 
  1772  0415                     	;# 
  1773  0416                     	;# 
  1774  0417                     	;# 
  1775  0418                     	;# 
  1776  0418                     	;# 
  1777  0419                     	;# 
  1778  041A                     	;# 
  1779  041B                     	;# 
  1780  041C                     	;# 
  1781  041D                     	;# 
  1782  041E                     	;# 
  1783  041F                     	;# 
  1784  0498                     	;# 
  1785  0498                     	;# 
  1786  0499                     	;# 
  1787  049A                     	;# 
  1788  049B                     	;# 
  1789  049B                     	;# 
  1790  049C                     	;# 
  1791  049D                     	;# 
  1792  049E                     	;# 
  1793  049F                     	;# 
  1794  0617                     	;# 
  1795  0618                     	;# 
  1796  0619                     	;# 
  1797  0619                     	;# 
  1798  061A                     	;# 
  1799  061B                     	;# 
  1800  061C                     	;# 
  1801  061C                     	;# 
  1802  061F                     	;# 
  1803  0691                     	;# 
  1804  0692                     	;# 
  1805  0693                     	;# 
  1806  0694                     	;# 
  1807  0695                     	;# 
  1808  0696                     	;# 
  1809  0697                     	;# 
  1810  0698                     	;# 
  1811  0699                     	;# 
  1812  0711                     	;# 
  1813  0712                     	;# 
  1814  0713                     	;# 
  1815  0714                     	;# 
  1816  0715                     	;# 
  1817  0716                     	;# 
  1818  0717                     	;# 
  1819  0718                     	;# 
  1820  0719                     	;# 
  1821  0891                     	;# 
  1822  0891                     	;# 
  1823  0891                     	;# 
  1824  0891                     	;# 
  1825  0891                     	;# 
  1826  0891                     	;# 
  1827  0892                     	;# 
  1828  0892                     	;# 
  1829  0892                     	;# 
  1830  0893                     	;# 
  1831  0893                     	;# 
  1832  0893                     	;# 
  1833  0893                     	;# 
  1834  0893                     	;# 
  1835  0893                     	;# 
  1836  0894                     	;# 
  1837  0894                     	;# 
  1838  0894                     	;# 
  1839  0895                     	;# 
  1840  0895                     	;# 
  1841  0895                     	;# 
  1842  0896                     	;# 
  1843  0896                     	;# 
  1844  0896                     	;# 
  1845  089B                     	;# 
  1846  0911                     	;# 
  1847  0912                     	;# 
  1848  0913                     	;# 
  1849  0914                     	;# 
  1850  0915                     	;# 
  1851  0916                     	;# 
  1852  0918                     	;# 
  1853  0919                     	;# 
  1854  091A                     	;# 
  1855  091B                     	;# 
  1856  091C                     	;# 
  1857  091D                     	;# 
  1858  091E                     	;# 
  1859  091F                     	;# 
  1860  0E0F                     	;# 
  1861  0E10                     	;# 
  1862  0E11                     	;# 
  1863  0E12                     	;# 
  1864  0E13                     	;# 
  1865  0E14                     	;# 
  1866  0E15                     	;# 
  1867  0E16                     	;# 
  1868  0E17                     	;# 
  1869  0E18                     	;# 
  1870  0E19                     	;# 
  1871  0E1A                     	;# 
  1872  0E1B                     	;# 
  1873  0E1C                     	;# 
  1874  0E1D                     	;# 
  1875  0E1E                     	;# 
  1876  0E1F                     	;# 
  1877  0E20                     	;# 
  1878  0E21                     	;# 
  1879  0E22                     	;# 
  1880  0E24                     	;# 
  1881  0E25                     	;# 
  1882  0E28                     	;# 
  1883  0E29                     	;# 
  1884  0E2A                     	;# 
  1885  0E2B                     	;# 
  1886  0E2C                     	;# 
  1887  0E2D                     	;# 
  1888  0E2E                     	;# 
  1889  0E2F                     	;# 
  1890  0E90                     	;# 
  1891  0E91                     	;# 
  1892  0E92                     	;# 
  1893  0E94                     	;# 
  1894  0E95                     	;# 
  1895  0E9C                     	;# 
  1896  0E9D                     	;# 
  1897  0E9E                     	;# 
  1898  0E9F                     	;# 
  1899  0EA0                     	;# 
  1900  0EA1                     	;# 
  1901  0EA2                     	;# 
  1902  0EA3                     	;# 
  1903  0EA4                     	;# 
  1904  0EA5                     	;# 
  1905  0EA6                     	;# 
  1906  0EA7                     	;# 
  1907  0F0F                     	;# 
  1908  0F10                     	;# 
  1909  0F11                     	;# 
  1910  0F12                     	;# 
  1911  0F13                     	;# 
  1912  0F14                     	;# 
  1913  0F15                     	;# 
  1914  0F16                     	;# 
  1915  0F17                     	;# 
  1916  0F18                     	;# 
  1917  0F19                     	;# 
  1918  0F1A                     	;# 
  1919  0F1B                     	;# 
  1920  0F1C                     	;# 
  1921  0F1D                     	;# 
  1922  0F1E                     	;# 
  1923  0F1F                     	;# 
  1924  0F20                     	;# 
  1925  0F21                     	;# 
  1926  0F22                     	;# 
  1927  0F23                     	;# 
  1928  0F24                     	;# 
  1929  0F25                     	;# 
  1930  0F26                     	;# 
  1931  0F27                     	;# 
  1932  0F28                     	;# 
  1933  0F29                     	;# 
  1934  0F2A                     	;# 
  1935  0F2B                     	;# 
  1936  0F2C                     	;# 
  1937  0F2D                     	;# 
  1938  0F2E                     	;# 
  1939  0F2F                     	;# 
  1940  0F30                     	;# 
  1941  0F31                     	;# 
  1942  0F32                     	;# 
  1943  0F33                     	;# 
  1944  0F34                     	;# 
  1945  0F35                     	;# 
  1946  0F36                     	;# 
  1947  0F37                     	;# 
  1948  0FE4                     	;# 
  1949  0FE5                     	;# 
  1950  0FE6                     	;# 
  1951  0FE7                     	;# 
  1952  0FE8                     	;# 
  1953  0FE9                     	;# 
  1954  0FEA                     	;# 
  1955  0FEB                     	;# 
  1956  0FED                     	;# 
  1957  0FEE                     	;# 
  1958  0FEF                     	;# 
  1959  0000                     	;# 
  1960  0001                     	;# 
  1961  0002                     	;# 
  1962  0003                     	;# 
  1963  0004                     	;# 
  1964  0005                     	;# 
  1965  0006                     	;# 
  1966  0007                     	;# 
  1967  0008                     	;# 
  1968  0009                     	;# 
  1969  000A                     	;# 
  1970  000B                     	;# 
  1971  000C                     	;# 
  1972  000D                     	;# 
  1973  000E                     	;# 
  1974  0010                     	;# 
  1975  0011                     	;# 
  1976  0012                     	;# 
  1977  0013                     	;# 
  1978  0014                     	;# 
  1979  0015                     	;# 
  1980  0015                     	;# 
  1981  0016                     	;# 
  1982  0016                     	;# 
  1983  0017                     	;# 
  1984  0018                     	;# 
  1985  0019                     	;# 
  1986  0019                     	;# 
  1987  001A                     	;# 
  1988  001B                     	;# 
  1989  001C                     	;# 
  1990  001D                     	;# 
  1991  001E                     	;# 
  1992  001F                     	;# 
  1993  008C                     	;# 
  1994  008D                     	;# 
  1995  008E                     	;# 
  1996  0090                     	;# 
  1997  0091                     	;# 
  1998  0092                     	;# 
  1999  0093                     	;# 
  2000  0094                     	;# 
  2001  0097                     	;# 
  2002  009B                     	;# 
  2003  009B                     	;# 
  2004  009C                     	;# 
  2005  009D                     	;# 
  2006  009E                     	;# 
  2007  009F                     	;# 
  2008  010C                     	;# 
  2009  010D                     	;# 
  2010  010E                     	;# 
  2011  0111                     	;# 
  2012  0112                     	;# 
  2013  0113                     	;# 
  2014  0114                     	;# 
  2015  0115                     	;# 
  2016  0116                     	;# 
  2017  0117                     	;# 
  2018  0118                     	;# 
  2019  0119                     	;# 
  2020  018C                     	;# 
  2021  018D                     	;# 
  2022  018E                     	;# 
  2023  0199                     	;# 
  2024  0199                     	;# 
  2025  0199                     	;# 
  2026  019A                     	;# 
  2027  019A                     	;# 
  2028  019A                     	;# 
  2029  019B                     	;# 
  2030  019B                     	;# 
  2031  019B                     	;# 
  2032  019B                     	;# 
  2033  019B                     	;# 
  2034  019C                     	;# 
  2035  019C                     	;# 
  2036  019C                     	;# 
  2037  019D                     	;# 
  2038  019D                     	;# 
  2039  019D                     	;# 
  2040  019E                     	;# 
  2041  019E                     	;# 
  2042  019E                     	;# 
  2043  019F                     	;# 
  2044  019F                     	;# 
  2045  019F                     	;# 
  2046  019F                     	;# 
  2047  019F                     	;# 
  2048  020C                     	;# 
  2049  020D                     	;# 
  2050  020E                     	;# 
  2051  0211                     	;# 
  2052  0211                     	;# 
  2053  0212                     	;# 
  2054  0212                     	;# 
  2055  0213                     	;# 
  2056  0213                     	;# 
  2057  0214                     	;# 
  2058  0214                     	;# 
  2059  0215                     	;# 
  2060  0215                     	;# 
  2061  0215                     	;# 
  2062  0215                     	;# 
  2063  0216                     	;# 
  2064  0216                     	;# 
  2065  0217                     	;# 
  2066  0217                     	;# 
  2067  0219                     	;# 
  2068  021A                     	;# 
  2069  021B                     	;# 
  2070  021C                     	;# 
  2071  021D                     	;# 
  2072  021D                     	;# 
  2073  021E                     	;# 
  2074  021F                     	;# 
  2075  028C                     	;# 
  2076  028D                     	;# 
  2077  028E                     	;# 
  2078  0291                     	;# 
  2079  0291                     	;# 
  2080  0292                     	;# 
  2081  0293                     	;# 
  2082  0294                     	;# 
  2083  0295                     	;# 
  2084  0295                     	;# 
  2085  0296                     	;# 
  2086  0297                     	;# 
  2087  0298                     	;# 
  2088  029F                     	;# 
  2089  030C                     	;# 
  2090  030D                     	;# 
  2091  030E                     	;# 
  2092  0311                     	;# 
  2093  0311                     	;# 
  2094  0312                     	;# 
  2095  0313                     	;# 
  2096  0314                     	;# 
  2097  0315                     	;# 
  2098  0315                     	;# 
  2099  0316                     	;# 
  2100  0317                     	;# 
  2101  0318                     	;# 
  2102  038C                     	;# 
  2103  038D                     	;# 
  2104  038E                     	;# 
  2105  0391                     	;# 
  2106  0392                     	;# 
  2107  0393                     	;# 
  2108  0394                     	;# 
  2109  0395                     	;# 
  2110  0396                     	;# 
  2111  0397                     	;# 
  2112  0398                     	;# 
  2113  0399                     	;# 
  2114  039A                     	;# 
  2115  039C                     	;# 
  2116  039D                     	;# 
  2117  039E                     	;# 
  2118  039F                     	;# 
  2119  0411                     	;# 
  2120  0411                     	;# 
  2121  0412                     	;# 
  2122  0413                     	;# 
  2123  0414                     	;# 
  2124  0415                     	;# 
  2125  0416                     	;# 
  2126  0417                     	;# 
  2127  0418                     	;# 
  2128  0418                     	;# 
  2129  0419                     	;# 
  2130  041A                     	;# 
  2131  041B                     	;# 
  2132  041C                     	;# 
  2133  041D                     	;# 
  2134  041E                     	;# 
  2135  041F                     	;# 
  2136  0498                     	;# 
  2137  0498                     	;# 
  2138  0499                     	;# 
  2139  049A                     	;# 
  2140  049B                     	;# 
  2141  049B                     	;# 
  2142  049C                     	;# 
  2143  049D                     	;# 
  2144  049E                     	;# 
  2145  049F                     	;# 
  2146  0617                     	;# 
  2147  0618                     	;# 
  2148  0619                     	;# 
  2149  0619                     	;# 
  2150  061A                     	;# 
  2151  061B                     	;# 
  2152  061C                     	;# 
  2153  061C                     	;# 
  2154  061F                     	;# 
  2155  0691                     	;# 
  2156  0692                     	;# 
  2157  0693                     	;# 
  2158  0694                     	;# 
  2159  0695                     	;# 
  2160  0696                     	;# 
  2161  0697                     	;# 
  2162  0698                     	;# 
  2163  0699                     	;# 
  2164  0711                     	;# 
  2165  0712                     	;# 
  2166  0713                     	;# 
  2167  0714                     	;# 
  2168  0715                     	;# 
  2169  0716                     	;# 
  2170  0717                     	;# 
  2171  0718                     	;# 
  2172  0719                     	;# 
  2173  0891                     	;# 
  2174  0891                     	;# 
  2175  0891                     	;# 
  2176  0891                     	;# 
  2177  0891                     	;# 
  2178  0891                     	;# 
  2179  0892                     	;# 
  2180  0892                     	;# 
  2181  0892                     	;# 
  2182  0893                     	;# 
  2183  0893                     	;# 
  2184  0893                     	;# 
  2185  0893                     	;# 
  2186  0893                     	;# 
  2187  0893                     	;# 
  2188  0894                     	;# 
  2189  0894                     	;# 
  2190  0894                     	;# 
  2191  0895                     	;# 
  2192  0895                     	;# 
  2193  0895                     	;# 
  2194  0896                     	;# 
  2195  0896                     	;# 
  2196  0896                     	;# 
  2197  089B                     	;# 
  2198  0911                     	;# 
  2199  0912                     	;# 
  2200  0913                     	;# 
  2201  0914                     	;# 
  2202  0915                     	;# 
  2203  0916                     	;# 
  2204  0918                     	;# 
  2205  0919                     	;# 
  2206  091A                     	;# 
  2207  091B                     	;# 
  2208  091C                     	;# 
  2209  091D                     	;# 
  2210  091E                     	;# 
  2211  091F                     	;# 
  2212  0E0F                     	;# 
  2213  0E10                     	;# 
  2214  0E11                     	;# 
  2215  0E12                     	;# 
  2216  0E13                     	;# 
  2217  0E14                     	;# 
  2218  0E15                     	;# 
  2219  0E16                     	;# 
  2220  0E17                     	;# 
  2221  0E18                     	;# 
  2222  0E19                     	;# 
  2223  0E1A                     	;# 
  2224  0E1B                     	;# 
  2225  0E1C                     	;# 
  2226  0E1D                     	;# 
  2227  0E1E                     	;# 
  2228  0E1F                     	;# 
  2229  0E20                     	;# 
  2230  0E21                     	;# 
  2231  0E22                     	;# 
  2232  0E24                     	;# 
  2233  0E25                     	;# 
  2234  0E28                     	;# 
  2235  0E29                     	;# 
  2236  0E2A                     	;# 
  2237  0E2B                     	;# 
  2238  0E2C                     	;# 
  2239  0E2D                     	;# 
  2240  0E2E                     	;# 
  2241  0E2F                     	;# 
  2242  0E90                     	;# 
  2243  0E91                     	;# 
  2244  0E92                     	;# 
  2245  0E94                     	;# 
  2246  0E95                     	;# 
  2247  0E9C                     	;# 
  2248  0E9D                     	;# 
  2249  0E9E                     	;# 
  2250  0E9F                     	;# 
  2251  0EA0                     	;# 
  2252  0EA1                     	;# 
  2253  0EA2                     	;# 
  2254  0EA3                     	;# 
  2255  0EA4                     	;# 
  2256  0EA5                     	;# 
  2257  0EA6                     	;# 
  2258  0EA7                     	;# 
  2259  0F0F                     	;# 
  2260  0F10                     	;# 
  2261  0F11                     	;# 
  2262  0F12                     	;# 
  2263  0F13                     	;# 
  2264  0F14                     	;# 
  2265  0F15                     	;# 
  2266  0F16                     	;# 
  2267  0F17                     	;# 
  2268  0F18                     	;# 
  2269  0F19                     	;# 
  2270  0F1A                     	;# 
  2271  0F1B                     	;# 
  2272  0F1C                     	;# 
  2273  0F1D                     	;# 
  2274  0F1E                     	;# 
  2275  0F1F                     	;# 
  2276  0F20                     	;# 
  2277  0F21                     	;# 
  2278  0F22                     	;# 
  2279  0F23                     	;# 
  2280  0F24                     	;# 
  2281  0F25                     	;# 
  2282  0F26                     	;# 
  2283  0F27                     	;# 
  2284  0F28                     	;# 
  2285  0F29                     	;# 
  2286  0F2A                     	;# 
  2287  0F2B                     	;# 
  2288  0F2C                     	;# 
  2289  0F2D                     	;# 
  2290  0F2E                     	;# 
  2291  0F2F                     	;# 
  2292  0F30                     	;# 
  2293  0F31                     	;# 
  2294  0F32                     	;# 
  2295  0F33                     	;# 
  2296  0F34                     	;# 
  2297  0F35                     	;# 
  2298  0F36                     	;# 
  2299  0F37                     	;# 
  2300  0FE4                     	;# 
  2301  0FE5                     	;# 
  2302  0FE6                     	;# 
  2303  0FE7                     	;# 
  2304  0FE8                     	;# 
  2305  0FE9                     	;# 
  2306  0FEA                     	;# 
  2307  0FEB                     	;# 
  2308  0FED                     	;# 
  2309  0FEE                     	;# 
  2310  0FEF                     	;# 
  2311  0000                     	;# 
  2312  0001                     	;# 
  2313  0002                     	;# 
  2314  0003                     	;# 
  2315  0004                     	;# 
  2316  0005                     	;# 
  2317  0006                     	;# 
  2318  0007                     	;# 
  2319  0008                     	;# 
  2320  0009                     	;# 
  2321  000A                     	;# 
  2322  000B                     	;# 
  2323  000C                     	;# 
  2324  000D                     	;# 
  2325  000E                     	;# 
  2326  0010                     	;# 
  2327  0011                     	;# 
  2328  0012                     	;# 
  2329  0013                     	;# 
  2330  0014                     	;# 
  2331  0015                     	;# 
  2332  0015                     	;# 
  2333  0016                     	;# 
  2334  0016                     	;# 
  2335  0017                     	;# 
  2336  0018                     	;# 
  2337  0019                     	;# 
  2338  0019                     	;# 
  2339  001A                     	;# 
  2340  001B                     	;# 
  2341  001C                     	;# 
  2342  001D                     	;# 
  2343  001E                     	;# 
  2344  001F                     	;# 
  2345  008C                     	;# 
  2346  008D                     	;# 
  2347  008E                     	;# 
  2348  0090                     	;# 
  2349  0091                     	;# 
  2350  0092                     	;# 
  2351  0093                     	;# 
  2352  0094                     	;# 
  2353  0097                     	;# 
  2354  009B                     	;# 
  2355  009B                     	;# 
  2356  009C                     	;# 
  2357  009D                     	;# 
  2358  009E                     	;# 
  2359  009F                     	;# 
  2360  010C                     	;# 
  2361  010D                     	;# 
  2362  010E                     	;# 
  2363  0111                     	;# 
  2364  0112                     	;# 
  2365  0113                     	;# 
  2366  0114                     	;# 
  2367  0115                     	;# 
  2368  0116                     	;# 
  2369  0117                     	;# 
  2370  0118                     	;# 
  2371  0119                     	;# 
  2372  018C                     	;# 
  2373  018D                     	;# 
  2374  018E                     	;# 
  2375  0199                     	;# 
  2376  0199                     	;# 
  2377  0199                     	;# 
  2378  019A                     	;# 
  2379  019A                     	;# 
  2380  019A                     	;# 
  2381  019B                     	;# 
  2382  019B                     	;# 
  2383  019B                     	;# 
  2384  019B                     	;# 
  2385  019B                     	;# 
  2386  019C                     	;# 
  2387  019C                     	;# 
  2388  019C                     	;# 
  2389  019D                     	;# 
  2390  019D                     	;# 
  2391  019D                     	;# 
  2392  019E                     	;# 
  2393  019E                     	;# 
  2394  019E                     	;# 
  2395  019F                     	;# 
  2396  019F                     	;# 
  2397  019F                     	;# 
  2398  019F                     	;# 
  2399  019F                     	;# 
  2400  020C                     	;# 
  2401  020D                     	;# 
  2402  020E                     	;# 
  2403  0211                     	;# 
  2404  0211                     	;# 
  2405  0212                     	;# 
  2406  0212                     	;# 
  2407  0213                     	;# 
  2408  0213                     	;# 
  2409  0214                     	;# 
  2410  0214                     	;# 
  2411  0215                     	;# 
  2412  0215                     	;# 
  2413  0215                     	;# 
  2414  0215                     	;# 
  2415  0216                     	;# 
  2416  0216                     	;# 
  2417  0217                     	;# 
  2418  0217                     	;# 
  2419  0219                     	;# 
  2420  021A                     	;# 
  2421  021B                     	;# 
  2422  021C                     	;# 
  2423  021D                     	;# 
  2424  021D                     	;# 
  2425  021E                     	;# 
  2426  021F                     	;# 
  2427  028C                     	;# 
  2428  028D                     	;# 
  2429  028E                     	;# 
  2430  0291                     	;# 
  2431  0291                     	;# 
  2432  0292                     	;# 
  2433  0293                     	;# 
  2434  0294                     	;# 
  2435  0295                     	;# 
  2436  0295                     	;# 
  2437  0296                     	;# 
  2438  0297                     	;# 
  2439  0298                     	;# 
  2440  029F                     	;# 
  2441  030C                     	;# 
  2442  030D                     	;# 
  2443  030E                     	;# 
  2444  0311                     	;# 
  2445  0311                     	;# 
  2446  0312                     	;# 
  2447  0313                     	;# 
  2448  0314                     	;# 
  2449  0315                     	;# 
  2450  0315                     	;# 
  2451  0316                     	;# 
  2452  0317                     	;# 
  2453  0318                     	;# 
  2454  038C                     	;# 
  2455  038D                     	;# 
  2456  038E                     	;# 
  2457  0391                     	;# 
  2458  0392                     	;# 
  2459  0393                     	;# 
  2460  0394                     	;# 
  2461  0395                     	;# 
  2462  0396                     	;# 
  2463  0397                     	;# 
  2464  0398                     	;# 
  2465  0399                     	;# 
  2466  039A                     	;# 
  2467  039C                     	;# 
  2468  039D                     	;# 
  2469  039E                     	;# 
  2470  039F                     	;# 
  2471  0411                     	;# 
  2472  0411                     	;# 
  2473  0412                     	;# 
  2474  0413                     	;# 
  2475  0414                     	;# 
  2476  0415                     	;# 
  2477  0416                     	;# 
  2478  0417                     	;# 
  2479  0418                     	;# 
  2480  0418                     	;# 
  2481  0419                     	;# 
  2482  041A                     	;# 
  2483  041B                     	;# 
  2484  041C                     	;# 
  2485  041D                     	;# 
  2486  041E                     	;# 
  2487  041F                     	;# 
  2488  0498                     	;# 
  2489  0498                     	;# 
  2490  0499                     	;# 
  2491  049A                     	;# 
  2492  049B                     	;# 
  2493  049B                     	;# 
  2494  049C                     	;# 
  2495  049D                     	;# 
  2496  049E                     	;# 
  2497  049F                     	;# 
  2498  0617                     	;# 
  2499  0618                     	;# 
  2500  0619                     	;# 
  2501  0619                     	;# 
  2502  061A                     	;# 
  2503  061B                     	;# 
  2504  061C                     	;# 
  2505  061C                     	;# 
  2506  061F                     	;# 
  2507  0691                     	;# 
  2508  0692                     	;# 
  2509  0693                     	;# 
  2510  0694                     	;# 
  2511  0695                     	;# 
  2512  0696                     	;# 
  2513  0697                     	;# 
  2514  0698                     	;# 
  2515  0699                     	;# 
  2516  0711                     	;# 
  2517  0712                     	;# 
  2518  0713                     	;# 
  2519  0714                     	;# 
  2520  0715                     	;# 
  2521  0716                     	;# 
  2522  0717                     	;# 
  2523  0718                     	;# 
  2524  0719                     	;# 
  2525  0891                     	;# 
  2526  0891                     	;# 
  2527  0891                     	;# 
  2528  0891                     	;# 
  2529  0891                     	;# 
  2530  0891                     	;# 
  2531  0892                     	;# 
  2532  0892                     	;# 
  2533  0892                     	;# 
  2534  0893                     	;# 
  2535  0893                     	;# 
  2536  0893                     	;# 
  2537  0893                     	;# 
  2538  0893                     	;# 
  2539  0893                     	;# 
  2540  0894                     	;# 
  2541  0894                     	;# 
  2542  0894                     	;# 
  2543  0895                     	;# 
  2544  0895                     	;# 
  2545  0895                     	;# 
  2546  0896                     	;# 
  2547  0896                     	;# 
  2548  0896                     	;# 
  2549  089B                     	;# 
  2550  0911                     	;# 
  2551  0912                     	;# 
  2552  0913                     	;# 
  2553  0914                     	;# 
  2554  0915                     	;# 
  2555  0916                     	;# 
  2556  0918                     	;# 
  2557  0919                     	;# 
  2558  091A                     	;# 
  2559  091B                     	;# 
  2560  091C                     	;# 
  2561  091D                     	;# 
  2562  091E                     	;# 
  2563  091F                     	;# 
  2564  0E0F                     	;# 
  2565  0E10                     	;# 
  2566  0E11                     	;# 
  2567  0E12                     	;# 
  2568  0E13                     	;# 
  2569  0E14                     	;# 
  2570  0E15                     	;# 
  2571  0E16                     	;# 
  2572  0E17                     	;# 
  2573  0E18                     	;# 
  2574  0E19                     	;# 
  2575  0E1A                     	;# 
  2576  0E1B                     	;# 
  2577  0E1C                     	;# 
  2578  0E1D                     	;# 
  2579  0E1E                     	;# 
  2580  0E1F                     	;# 
  2581  0E20                     	;# 
  2582  0E21                     	;# 
  2583  0E22                     	;# 
  2584  0E24                     	;# 
  2585  0E25                     	;# 
  2586  0E28                     	;# 
  2587  0E29                     	;# 
  2588  0E2A                     	;# 
  2589  0E2B                     	;# 
  2590  0E2C                     	;# 
  2591  0E2D                     	;# 
  2592  0E2E                     	;# 
  2593  0E2F                     	;# 
  2594  0E90                     	;# 
  2595  0E91                     	;# 
  2596  0E92                     	;# 
  2597  0E94                     	;# 
  2598  0E95                     	;# 
  2599  0E9C                     	;# 
  2600  0E9D                     	;# 
  2601  0E9E                     	;# 
  2602  0E9F                     	;# 
  2603  0EA0                     	;# 
  2604  0EA1                     	;# 
  2605  0EA2                     	;# 
  2606  0EA3                     	;# 
  2607  0EA4                     	;# 
  2608  0EA5                     	;# 
  2609  0EA6                     	;# 
  2610  0EA7                     	;# 
  2611  0F0F                     	;# 
  2612  0F10                     	;# 
  2613  0F11                     	;# 
  2614  0F12                     	;# 
  2615  0F13                     	;# 
  2616  0F14                     	;# 
  2617  0F15                     	;# 
  2618  0F16                     	;# 
  2619  0F17                     	;# 
  2620  0F18                     	;# 
  2621  0F19                     	;# 
  2622  0F1A                     	;# 
  2623  0F1B                     	;# 
  2624  0F1C                     	;# 
  2625  0F1D                     	;# 
  2626  0F1E                     	;# 
  2627  0F1F                     	;# 
  2628  0F20                     	;# 
  2629  0F21                     	;# 
  2630  0F22                     	;# 
  2631  0F23                     	;# 
  2632  0F24                     	;# 
  2633  0F25                     	;# 
  2634  0F26                     	;# 
  2635  0F27                     	;# 
  2636  0F28                     	;# 
  2637  0F29                     	;# 
  2638  0F2A                     	;# 
  2639  0F2B                     	;# 
  2640  0F2C                     	;# 
  2641  0F2D                     	;# 
  2642  0F2E                     	;# 
  2643  0F2F                     	;# 
  2644  0F30                     	;# 
  2645  0F31                     	;# 
  2646  0F32                     	;# 
  2647  0F33                     	;# 
  2648  0F34                     	;# 
  2649  0F35                     	;# 
  2650  0F36                     	;# 
  2651  0F37                     	;# 
  2652  0FE4                     	;# 
  2653  0FE5                     	;# 
  2654  0FE6                     	;# 
  2655  0FE7                     	;# 
  2656  0FE8                     	;# 
  2657  0FE9                     	;# 
  2658  0FEA                     	;# 
  2659  0FEB                     	;# 
  2660  0FED                     	;# 
  2661  0FEE                     	;# 
  2662  0FEF                     	;# 
  2663  0000                     	;# 
  2664  0001                     	;# 
  2665  0002                     	;# 
  2666  0003                     	;# 
  2667  0004                     	;# 
  2668  0005                     	;# 
  2669  0006                     	;# 
  2670  0007                     	;# 
  2671  0008                     	;# 
  2672  0009                     	;# 
  2673  000A                     	;# 
  2674  000B                     	;# 
  2675  000C                     	;# 
  2676  000D                     	;# 
  2677  000E                     	;# 
  2678  0010                     	;# 
  2679  0011                     	;# 
  2680  0012                     	;# 
  2681  0013                     	;# 
  2682  0014                     	;# 
  2683  0015                     	;# 
  2684  0015                     	;# 
  2685  0016                     	;# 
  2686  0016                     	;# 
  2687  0017                     	;# 
  2688  0018                     	;# 
  2689  0019                     	;# 
  2690  0019                     	;# 
  2691  001A                     	;# 
  2692  001B                     	;# 
  2693  001C                     	;# 
  2694  001D                     	;# 
  2695  001E                     	;# 
  2696  001F                     	;# 
  2697  008C                     	;# 
  2698  008D                     	;# 
  2699  008E                     	;# 
  2700  0090                     	;# 
  2701  0091                     	;# 
  2702  0092                     	;# 
  2703  0093                     	;# 
  2704  0094                     	;# 
  2705  0097                     	;# 
  2706  009B                     	;# 
  2707  009B                     	;# 
  2708  009C                     	;# 
  2709  009D                     	;# 
  2710  009E                     	;# 
  2711  009F                     	;# 
  2712  010C                     	;# 
  2713  010D                     	;# 
  2714  010E                     	;# 
  2715  0111                     	;# 
  2716  0112                     	;# 
  2717  0113                     	;# 
  2718  0114                     	;# 
  2719  0115                     	;# 
  2720  0116                     	;# 
  2721  0117                     	;# 
  2722  0118                     	;# 
  2723  0119                     	;# 
  2724  018C                     	;# 
  2725  018D                     	;# 
  2726  018E                     	;# 
  2727  0199                     	;# 
  2728  0199                     	;# 
  2729  0199                     	;# 
  2730  019A                     	;# 
  2731  019A                     	;# 
  2732  019A                     	;# 
  2733  019B                     	;# 
  2734  019B                     	;# 
  2735  019B                     	;# 
  2736  019B                     	;# 
  2737  019B                     	;# 
  2738  019C                     	;# 
  2739  019C                     	;# 
  2740  019C                     	;# 
  2741  019D                     	;# 
  2742  019D                     	;# 
  2743  019D                     	;# 
  2744  019E                     	;# 
  2745  019E                     	;# 
  2746  019E                     	;# 
  2747  019F                     	;# 
  2748  019F                     	;# 
  2749  019F                     	;# 
  2750  019F                     	;# 
  2751  019F                     	;# 
  2752  020C                     	;# 
  2753  020D                     	;# 
  2754  020E                     	;# 
  2755  0211                     	;# 
  2756  0211                     	;# 
  2757  0212                     	;# 
  2758  0212                     	;# 
  2759  0213                     	;# 
  2760  0213                     	;# 
  2761  0214                     	;# 
  2762  0214                     	;# 
  2763  0215                     	;# 
  2764  0215                     	;# 
  2765  0215                     	;# 
  2766  0215                     	;# 
  2767  0216                     	;# 
  2768  0216                     	;# 
  2769  0217                     	;# 
  2770  0217                     	;# 
  2771  0219                     	;# 
  2772  021A                     	;# 
  2773  021B                     	;# 
  2774  021C                     	;# 
  2775  021D                     	;# 
  2776  021D                     	;# 
  2777  021E                     	;# 
  2778  021F                     	;# 
  2779  028C                     	;# 
  2780  028D                     	;# 
  2781  028E                     	;# 
  2782  0291                     	;# 
  2783  0291                     	;# 
  2784  0292                     	;# 
  2785  0293                     	;# 
  2786  0294                     	;# 
  2787  0295                     	;# 
  2788  0295                     	;# 
  2789  0296                     	;# 
  2790  0297                     	;# 
  2791  0298                     	;# 
  2792  029F                     	;# 
  2793  030C                     	;# 
  2794  030D                     	;# 
  2795  030E                     	;# 
  2796  0311                     	;# 
  2797  0311                     	;# 
  2798  0312                     	;# 
  2799  0313                     	;# 
  2800  0314                     	;# 
  2801  0315                     	;# 
  2802  0315                     	;# 
  2803  0316                     	;# 
  2804  0317                     	;# 
  2805  0318                     	;# 
  2806  038C                     	;# 
  2807  038D                     	;# 
  2808  038E                     	;# 
  2809  0391                     	;# 
  2810  0392                     	;# 
  2811  0393                     	;# 
  2812  0394                     	;# 
  2813  0395                     	;# 
  2814  0396                     	;# 
  2815  0397                     	;# 
  2816  0398                     	;# 
  2817  0399                     	;# 
  2818  039A                     	;# 
  2819  039C                     	;# 
  2820  039D                     	;# 
  2821  039E                     	;# 
  2822  039F                     	;# 
  2823  0411                     	;# 
  2824  0411                     	;# 
  2825  0412                     	;# 
  2826  0413                     	;# 
  2827  0414                     	;# 
  2828  0415                     	;# 
  2829  0416                     	;# 
  2830  0417                     	;# 
  2831  0418                     	;# 
  2832  0418                     	;# 
  2833  0419                     	;# 
  2834  041A                     	;# 
  2835  041B                     	;# 
  2836  041C                     	;# 
  2837  041D                     	;# 
  2838  041E                     	;# 
  2839  041F                     	;# 
  2840  0498                     	;# 
  2841  0498                     	;# 
  2842  0499                     	;# 
  2843  049A                     	;# 
  2844  049B                     	;# 
  2845  049B                     	;# 
  2846  049C                     	;# 
  2847  049D                     	;# 
  2848  049E                     	;# 
  2849  049F                     	;# 
  2850  0617                     	;# 
  2851  0618                     	;# 
  2852  0619                     	;# 
  2853  0619                     	;# 
  2854  061A                     	;# 
  2855  061B                     	;# 
  2856  061C                     	;# 
  2857  061C                     	;# 
  2858  061F                     	;# 
  2859  0691                     	;# 
  2860  0692                     	;# 
  2861  0693                     	;# 
  2862  0694                     	;# 
  2863  0695                     	;# 
  2864  0696                     	;# 
  2865  0697                     	;# 
  2866  0698                     	;# 
  2867  0699                     	;# 
  2868  0711                     	;# 
  2869  0712                     	;# 
  2870  0713                     	;# 
  2871  0714                     	;# 
  2872  0715                     	;# 
  2873  0716                     	;# 
  2874  0717                     	;# 
  2875  0718                     	;# 
  2876  0719                     	;# 
  2877  0891                     	;# 
  2878  0891                     	;# 
  2879  0891                     	;# 
  2880  0891                     	;# 
  2881  0891                     	;# 
  2882  0891                     	;# 
  2883  0892                     	;# 
  2884  0892                     	;# 
  2885  0892                     	;# 
  2886  0893                     	;# 
  2887  0893                     	;# 
  2888  0893                     	;# 
  2889  0893                     	;# 
  2890  0893                     	;# 
  2891  0893                     	;# 
  2892  0894                     	;# 
  2893  0894                     	;# 
  2894  0894                     	;# 
  2895  0895                     	;# 
  2896  0895                     	;# 
  2897  0895                     	;# 
  2898  0896                     	;# 
  2899  0896                     	;# 
  2900  0896                     	;# 
  2901  089B                     	;# 
  2902  0911                     	;# 
  2903  0912                     	;# 
  2904  0913                     	;# 
  2905  0914                     	;# 
  2906  0915                     	;# 
  2907  0916                     	;# 
  2908  0918                     	;# 
  2909  0919                     	;# 
  2910  091A                     	;# 
  2911  091B                     	;# 
  2912  091C                     	;# 
  2913  091D                     	;# 
  2914  091E                     	;# 
  2915  091F                     	;# 
  2916  0E0F                     	;# 
  2917  0E10                     	;# 
  2918  0E11                     	;# 
  2919  0E12                     	;# 
  2920  0E13                     	;# 
  2921  0E14                     	;# 
  2922  0E15                     	;# 
  2923  0E16                     	;# 
  2924  0E17                     	;# 
  2925  0E18                     	;# 
  2926  0E19                     	;# 
  2927  0E1A                     	;# 
  2928  0E1B                     	;# 
  2929  0E1C                     	;# 
  2930  0E1D                     	;# 
  2931  0E1E                     	;# 
  2932  0E1F                     	;# 
  2933  0E20                     	;# 
  2934  0E21                     	;# 
  2935  0E22                     	;# 
  2936  0E24                     	;# 
  2937  0E25                     	;# 
  2938  0E28                     	;# 
  2939  0E29                     	;# 
  2940  0E2A                     	;# 
  2941  0E2B                     	;# 
  2942  0E2C                     	;# 
  2943  0E2D                     	;# 
  2944  0E2E                     	;# 
  2945  0E2F                     	;# 
  2946  0E90                     	;# 
  2947  0E91                     	;# 
  2948  0E92                     	;# 
  2949  0E94                     	;# 
  2950  0E95                     	;# 
  2951  0E9C                     	;# 
  2952  0E9D                     	;# 
  2953  0E9E                     	;# 
  2954  0E9F                     	;# 
  2955  0EA0                     	;# 
  2956  0EA1                     	;# 
  2957  0EA2                     	;# 
  2958  0EA3                     	;# 
  2959  0EA4                     	;# 
  2960  0EA5                     	;# 
  2961  0EA6                     	;# 
  2962  0EA7                     	;# 
  2963  0F0F                     	;# 
  2964  0F10                     	;# 
  2965  0F11                     	;# 
  2966  0F12                     	;# 
  2967  0F13                     	;# 
  2968  0F14                     	;# 
  2969  0F15                     	;# 
  2970  0F16                     	;# 
  2971  0F17                     	;# 
  2972  0F18                     	;# 
  2973  0F19                     	;# 
  2974  0F1A                     	;# 
  2975  0F1B                     	;# 
  2976  0F1C                     	;# 
  2977  0F1D                     	;# 
  2978  0F1E                     	;# 
  2979  0F1F                     	;# 
  2980  0F20                     	;# 
  2981  0F21                     	;# 
  2982  0F22                     	;# 
  2983  0F23                     	;# 
  2984  0F24                     	;# 
  2985  0F25                     	;# 
  2986  0F26                     	;# 
  2987  0F27                     	;# 
  2988  0F28                     	;# 
  2989  0F29                     	;# 
  2990  0F2A                     	;# 
  2991  0F2B                     	;# 
  2992  0F2C                     	;# 
  2993  0F2D                     	;# 
  2994  0F2E                     	;# 
  2995  0F2F                     	;# 
  2996  0F30                     	;# 
  2997  0F31                     	;# 
  2998  0F32                     	;# 
  2999  0F33                     	;# 
  3000  0F34                     	;# 
  3001  0F35                     	;# 
  3002  0F36                     	;# 
  3003  0F37                     	;# 
  3004  0FE4                     	;# 
  3005  0FE5                     	;# 
  3006  0FE6                     	;# 
  3007  0FE7                     	;# 
  3008  0FE8                     	;# 
  3009  0FE9                     	;# 
  3010  0FEA                     	;# 
  3011  0FEB                     	;# 
  3012  0FED                     	;# 
  3013  0FEE                     	;# 
  3014  0FEF                     	;# 
  3015  0000                     	;# 
  3016  0001                     	;# 
  3017  0002                     	;# 
  3018  0003                     	;# 
  3019  0004                     	;# 
  3020  0005                     	;# 
  3021  0006                     	;# 
  3022  0007                     	;# 
  3023  0008                     	;# 
  3024  0009                     	;# 
  3025  000A                     	;# 
  3026  000B                     	;# 
  3027  000C                     	;# 
  3028  000D                     	;# 
  3029  000E                     	;# 
  3030  0010                     	;# 
  3031  0011                     	;# 
  3032  0012                     	;# 
  3033  0013                     	;# 
  3034  0014                     	;# 
  3035  0015                     	;# 
  3036  0015                     	;# 
  3037  0016                     	;# 
  3038  0016                     	;# 
  3039  0017                     	;# 
  3040  0018                     	;# 
  3041  0019                     	;# 
  3042  0019                     	;# 
  3043  001A                     	;# 
  3044  001B                     	;# 
  3045  001C                     	;# 
  3046  001D                     	;# 
  3047  001E                     	;# 
  3048  001F                     	;# 
  3049  008C                     	;# 
  3050  008D                     	;# 
  3051  008E                     	;# 
  3052  0090                     	;# 
  3053  0091                     	;# 
  3054  0092                     	;# 
  3055  0093                     	;# 
  3056  0094                     	;# 
  3057  0097                     	;# 
  3058  009B                     	;# 
  3059  009B                     	;# 
  3060  009C                     	;# 
  3061  009D                     	;# 
  3062  009E                     	;# 
  3063  009F                     	;# 
  3064  010C                     	;# 
  3065  010D                     	;# 
  3066  010E                     	;# 
  3067  0111                     	;# 
  3068  0112                     	;# 
  3069  0113                     	;# 
  3070  0114                     	;# 
  3071  0115                     	;# 
  3072  0116                     	;# 
  3073  0117                     	;# 
  3074  0118                     	;# 
  3075  0119                     	;# 
  3076  018C                     	;# 
  3077  018D                     	;# 
  3078  018E                     	;# 
  3079  0199                     	;# 
  3080  0199                     	;# 
  3081  0199                     	;# 
  3082  019A                     	;# 
  3083  019A                     	;# 
  3084  019A                     	;# 
  3085  019B                     	;# 
  3086  019B                     	;# 
  3087  019B                     	;# 
  3088  019B                     	;# 
  3089  019B                     	;# 
  3090  019C                     	;# 
  3091  019C                     	;# 
  3092  019C                     	;# 
  3093  019D                     	;# 
  3094  019D                     	;# 
  3095  019D                     	;# 
  3096  019E                     	;# 
  3097  019E                     	;# 
  3098  019E                     	;# 
  3099  019F                     	;# 
  3100  019F                     	;# 
  3101  019F                     	;# 
  3102  019F                     	;# 
  3103  019F                     	;# 
  3104  020C                     	;# 
  3105  020D                     	;# 
  3106  020E                     	;# 
  3107  0211                     	;# 
  3108  0211                     	;# 
  3109  0212                     	;# 
  3110  0212                     	;# 
  3111  0213                     	;# 
  3112  0213                     	;# 
  3113  0214                     	;# 
  3114  0214                     	;# 
  3115  0215                     	;# 
  3116  0215                     	;# 
  3117  0215                     	;# 
  3118  0215                     	;# 
  3119  0216                     	;# 
  3120  0216                     	;# 
  3121  0217                     	;# 
  3122  0217                     	;# 
  3123  0219                     	;# 
  3124  021A                     	;# 
  3125  021B                     	;# 
  3126  021C                     	;# 
  3127  021D                     	;# 
  3128  021D                     	;# 
  3129  021E                     	;# 
  3130  021F                     	;# 
  3131  028C                     	;# 
  3132  028D                     	;# 
  3133  028E                     	;# 
  3134  0291                     	;# 
  3135  0291                     	;# 
  3136  0292                     	;# 
  3137  0293                     	;# 
  3138  0294                     	;# 
  3139  0295                     	;# 
  3140  0295                     	;# 
  3141  0296                     	;# 
  3142  0297                     	;# 
  3143  0298                     	;# 
  3144  029F                     	;# 
  3145  030C                     	;# 
  3146  030D                     	;# 
  3147  030E                     	;# 
  3148  0311                     	;# 
  3149  0311                     	;# 
  3150  0312                     	;# 
  3151  0313                     	;# 
  3152  0314                     	;# 
  3153  0315                     	;# 
  3154  0315                     	;# 
  3155  0316                     	;# 
  3156  0317                     	;# 
  3157  0318                     	;# 
  3158  038C                     	;# 
  3159  038D                     	;# 
  3160  038E                     	;# 
  3161  0391                     	;# 
  3162  0392                     	;# 
  3163  0393                     	;# 
  3164  0394                     	;# 
  3165  0395                     	;# 
  3166  0396                     	;# 
  3167  0397                     	;# 
  3168  0398                     	;# 
  3169  0399                     	;# 
  3170  039A                     	;# 
  3171  039C                     	;# 
  3172  039D                     	;# 
  3173  039E                     	;# 
  3174  039F                     	;# 
  3175  0411                     	;# 
  3176  0411                     	;# 
  3177  0412                     	;# 
  3178  0413                     	;# 
  3179  0414                     	;# 
  3180  0415                     	;# 
  3181  0416                     	;# 
  3182  0417                     	;# 
  3183  0418                     	;# 
  3184  0418                     	;# 
  3185  0419                     	;# 
  3186  041A                     	;# 
  3187  041B                     	;# 
  3188  041C                     	;# 
  3189  041D                     	;# 
  3190  041E                     	;# 
  3191  041F                     	;# 
  3192  0498                     	;# 
  3193  0498                     	;# 
  3194  0499                     	;# 
  3195  049A                     	;# 
  3196  049B                     	;# 
  3197  049B                     	;# 
  3198  049C                     	;# 
  3199  049D                     	;# 
  3200  049E                     	;# 
  3201  049F                     	;# 
  3202  0617                     	;# 
  3203  0618                     	;# 
  3204  0619                     	;# 
  3205  0619                     	;# 
  3206  061A                     	;# 
  3207  061B                     	;# 
  3208  061C                     	;# 
  3209  061C                     	;# 
  3210  061F                     	;# 
  3211  0691                     	;# 
  3212  0692                     	;# 
  3213  0693                     	;# 
  3214  0694                     	;# 
  3215  0695                     	;# 
  3216  0696                     	;# 
  3217  0697                     	;# 
  3218  0698                     	;# 
  3219  0699                     	;# 
  3220  0711                     	;# 
  3221  0712                     	;# 
  3222  0713                     	;# 
  3223  0714                     	;# 
  3224  0715                     	;# 
  3225  0716                     	;# 
  3226  0717                     	;# 
  3227  0718                     	;# 
  3228  0719                     	;# 
  3229  0891                     	;# 
  3230  0891                     	;# 
  3231  0891                     	;# 
  3232  0891                     	;# 
  3233  0891                     	;# 
  3234  0891                     	;# 
  3235  0892                     	;# 
  3236  0892                     	;# 
  3237  0892                     	;# 
  3238  0893                     	;# 
  3239  0893                     	;# 
  3240  0893                     	;# 
  3241  0893                     	;# 
  3242  0893                     	;# 
  3243  0893                     	;# 
  3244  0894                     	;# 
  3245  0894                     	;# 
  3246  0894                     	;# 
  3247  0895                     	;# 
  3248  0895                     	;# 
  3249  0895                     	;# 
  3250  0896                     	;# 
  3251  0896                     	;# 
  3252  0896                     	;# 
  3253  089B                     	;# 
  3254  0911                     	;# 
  3255  0912                     	;# 
  3256  0913                     	;# 
  3257  0914                     	;# 
  3258  0915                     	;# 
  3259  0916                     	;# 
  3260  0918                     	;# 
  3261  0919                     	;# 
  3262  091A                     	;# 
  3263  091B                     	;# 
  3264  091C                     	;# 
  3265  091D                     	;# 
  3266  091E                     	;# 
  3267  091F                     	;# 
  3268  0E0F                     	;# 
  3269  0E10                     	;# 
  3270  0E11                     	;# 
  3271  0E12                     	;# 
  3272  0E13                     	;# 
  3273  0E14                     	;# 
  3274  0E15                     	;# 
  3275  0E16                     	;# 
  3276  0E17                     	;# 
  3277  0E18                     	;# 
  3278  0E19                     	;# 
  3279  0E1A                     	;# 
  3280  0E1B                     	;# 
  3281  0E1C                     	;# 
  3282  0E1D                     	;# 
  3283  0E1E                     	;# 
  3284  0E1F                     	;# 
  3285  0E20                     	;# 
  3286  0E21                     	;# 
  3287  0E22                     	;# 
  3288  0E24                     	;# 
  3289  0E25                     	;# 
  3290  0E28                     	;# 
  3291  0E29                     	;# 
  3292  0E2A                     	;# 
  3293  0E2B                     	;# 
  3294  0E2C                     	;# 
  3295  0E2D                     	;# 
  3296  0E2E                     	;# 
  3297  0E2F                     	;# 
  3298  0E90                     	;# 
  3299  0E91                     	;# 
  3300  0E92                     	;# 
  3301  0E94                     	;# 
  3302  0E95                     	;# 
  3303  0E9C                     	;# 
  3304  0E9D                     	;# 
  3305  0E9E                     	;# 
  3306  0E9F                     	;# 
  3307  0EA0                     	;# 
  3308  0EA1                     	;# 
  3309  0EA2                     	;# 
  3310  0EA3                     	;# 
  3311  0EA4                     	;# 
  3312  0EA5                     	;# 
  3313  0EA6                     	;# 
  3314  0EA7                     	;# 
  3315  0F0F                     	;# 
  3316  0F10                     	;# 
  3317  0F11                     	;# 
  3318  0F12                     	;# 
  3319  0F13                     	;# 
  3320  0F14                     	;# 
  3321  0F15                     	;# 
  3322  0F16                     	;# 
  3323  0F17                     	;# 
  3324  0F18                     	;# 
  3325  0F19                     	;# 
  3326  0F1A                     	;# 
  3327  0F1B                     	;# 
  3328  0F1C                     	;# 
  3329  0F1D                     	;# 
  3330  0F1E                     	;# 
  3331  0F1F                     	;# 
  3332  0F20                     	;# 
  3333  0F21                     	;# 
  3334  0F22                     	;# 
  3335  0F23                     	;# 
  3336  0F24                     	;# 
  3337  0F25                     	;# 
  3338  0F26                     	;# 
  3339  0F27                     	;# 
  3340  0F28                     	;# 
  3341  0F29                     	;# 
  3342  0F2A                     	;# 
  3343  0F2B                     	;# 
  3344  0F2C                     	;# 
  3345  0F2D                     	;# 
  3346  0F2E                     	;# 
  3347  0F2F                     	;# 
  3348  0F30                     	;# 
  3349  0F31                     	;# 
  3350  0F32                     	;# 
  3351  0F33                     	;# 
  3352  0F34                     	;# 
  3353  0F35                     	;# 
  3354  0F36                     	;# 
  3355  0F37                     	;# 
  3356  0FE4                     	;# 
  3357  0FE5                     	;# 
  3358  0FE6                     	;# 
  3359  0FE7                     	;# 
  3360  0FE8                     	;# 
  3361  0FE9                     	;# 
  3362  0FEA                     	;# 
  3363  0FEB                     	;# 
  3364  0FED                     	;# 
  3365  0FEE                     	;# 
  3366  0FEF                     	;# 
  3367  0000                     	;# 
  3368  0001                     	;# 
  3369  0002                     	;# 
  3370  0003                     	;# 
  3371  0004                     	;# 
  3372  0005                     	;# 
  3373  0006                     	;# 
  3374  0007                     	;# 
  3375  0008                     	;# 
  3376  0009                     	;# 
  3377  000A                     	;# 
  3378  000B                     	;# 
  3379  000C                     	;# 
  3380  000D                     	;# 
  3381  000E                     	;# 
  3382  0010                     	;# 
  3383  0011                     	;# 
  3384  0012                     	;# 
  3385  0013                     	;# 
  3386  0014                     	;# 
  3387  0015                     	;# 
  3388  0015                     	;# 
  3389  0016                     	;# 
  3390  0016                     	;# 
  3391  0017                     	;# 
  3392  0018                     	;# 
  3393  0019                     	;# 
  3394  0019                     	;# 
  3395  001A                     	;# 
  3396  001B                     	;# 
  3397  001C                     	;# 
  3398  001D                     	;# 
  3399  001E                     	;# 
  3400  001F                     	;# 
  3401  008C                     	;# 
  3402  008D                     	;# 
  3403  008E                     	;# 
  3404  0090                     	;# 
  3405  0091                     	;# 
  3406  0092                     	;# 
  3407  0093                     	;# 
  3408  0094                     	;# 
  3409  0097                     	;# 
  3410  009B                     	;# 
  3411  009B                     	;# 
  3412  009C                     	;# 
  3413  009D                     	;# 
  3414  009E                     	;# 
  3415  009F                     	;# 
  3416  010C                     	;# 
  3417  010D                     	;# 
  3418  010E                     	;# 
  3419  0111                     	;# 
  3420  0112                     	;# 
  3421  0113                     	;# 
  3422  0114                     	;# 
  3423  0115                     	;# 
  3424  0116                     	;# 
  3425  0117                     	;# 
  3426  0118                     	;# 
  3427  0119                     	;# 
  3428  018C                     	;# 
  3429  018D                     	;# 
  3430  018E                     	;# 
  3431  0199                     	;# 
  3432  0199                     	;# 
  3433  0199                     	;# 
  3434  019A                     	;# 
  3435  019A                     	;# 
  3436  019A                     	;# 
  3437  019B                     	;# 
  3438  019B                     	;# 
  3439  019B                     	;# 
  3440  019B                     	;# 
  3441  019B                     	;# 
  3442  019C                     	;# 
  3443  019C                     	;# 
  3444  019C                     	;# 
  3445  019D                     	;# 
  3446  019D                     	;# 
  3447  019D                     	;# 
  3448  019E                     	;# 
  3449  019E                     	;# 
  3450  019E                     	;# 
  3451  019F                     	;# 
  3452  019F                     	;# 
  3453  019F                     	;# 
  3454  019F                     	;# 
  3455  019F                     	;# 
  3456  020C                     	;# 
  3457  020D                     	;# 
  3458  020E                     	;# 
  3459  0211                     	;# 
  3460  0211                     	;# 
  3461  0212                     	;# 
  3462  0212                     	;# 
  3463  0213                     	;# 
  3464  0213                     	;# 
  3465  0214                     	;# 
  3466  0214                     	;# 
  3467  0215                     	;# 
  3468  0215                     	;# 
  3469  0215                     	;# 
  3470  0215                     	;# 
  3471  0216                     	;# 
  3472  0216                     	;# 
  3473  0217                     	;# 
  3474  0217                     	;# 
  3475  0219                     	;# 
  3476  021A                     	;# 
  3477  021B                     	;# 
  3478  021C                     	;# 
  3479  021D                     	;# 
  3480  021D                     	;# 
  3481  021E                     	;# 
  3482  021F                     	;# 
  3483  028C                     	;# 
  3484  028D                     	;# 
  3485  028E                     	;# 
  3486  0291                     	;# 
  3487  0291                     	;# 
  3488  0292                     	;# 
  3489  0293                     	;# 
  3490  0294                     	;# 
  3491  0295                     	;# 
  3492  0295                     	;# 
  3493  0296                     	;# 
  3494  0297                     	;# 
  3495  0298                     	;# 
  3496  029F                     	;# 
  3497  030C                     	;# 
  3498  030D                     	;# 
  3499  030E                     	;# 
  3500  0311                     	;# 
  3501  0311                     	;# 
  3502  0312                     	;# 
  3503  0313                     	;# 
  3504  0314                     	;# 
  3505  0315                     	;# 
  3506  0315                     	;# 
  3507  0316                     	;# 
  3508  0317                     	;# 
  3509  0318                     	;# 
  3510  038C                     	;# 
  3511  038D                     	;# 
  3512  038E                     	;# 
  3513  0391                     	;# 
  3514  0392                     	;# 
  3515  0393                     	;# 
  3516  0394                     	;# 
  3517  0395                     	;# 
  3518  0396                     	;# 
  3519  0397                     	;# 
  3520  0398                     	;# 
  3521  0399                     	;# 
  3522  039A                     	;# 
  3523  039C                     	;# 
  3524  039D                     	;# 
  3525  039E                     	;# 
  3526  039F                     	;# 
  3527  0411                     	;# 
  3528  0411                     	;# 
  3529  0412                     	;# 
  3530  0413                     	;# 
  3531  0414                     	;# 
  3532  0415                     	;# 
  3533  0416                     	;# 
  3534  0417                     	;# 
  3535  0418                     	;# 
  3536  0418                     	;# 
  3537  0419                     	;# 
  3538  041A                     	;# 
  3539  041B                     	;# 
  3540  041C                     	;# 
  3541  041D                     	;# 
  3542  041E                     	;# 
  3543  041F                     	;# 
  3544  0498                     	;# 
  3545  0498                     	;# 
  3546  0499                     	;# 
  3547  049A                     	;# 
  3548  049B                     	;# 
  3549  049B                     	;# 
  3550  049C                     	;# 
  3551  049D                     	;# 
  3552  049E                     	;# 
  3553  049F                     	;# 
  3554  0617                     	;# 
  3555  0618                     	;# 
  3556  0619                     	;# 
  3557  0619                     	;# 
  3558  061A                     	;# 
  3559  061B                     	;# 
  3560  061C                     	;# 
  3561  061C                     	;# 
  3562  061F                     	;# 
  3563  0691                     	;# 
  3564  0692                     	;# 
  3565  0693                     	;# 
  3566  0694                     	;# 
  3567  0695                     	;# 
  3568  0696                     	;# 
  3569  0697                     	;# 
  3570  0698                     	;# 
  3571  0699                     	;# 
  3572  0711                     	;# 
  3573  0712                     	;# 
  3574  0713                     	;# 
  3575  0714                     	;# 
  3576  0715                     	;# 
  3577  0716                     	;# 
  3578  0717                     	;# 
  3579  0718                     	;# 
  3580  0719                     	;# 
  3581  0891                     	;# 
  3582  0891                     	;# 
  3583  0891                     	;# 
  3584  0891                     	;# 
  3585  0891                     	;# 
  3586  0891                     	;# 
  3587  0892                     	;# 
  3588  0892                     	;# 
  3589  0892                     	;# 
  3590  0893                     	;# 
  3591  0893                     	;# 
  3592  0893                     	;# 
  3593  0893                     	;# 
  3594  0893                     	;# 
  3595  0893                     	;# 
  3596  0894                     	;# 
  3597  0894                     	;# 
  3598  0894                     	;# 
  3599  0895                     	;# 
  3600  0895                     	;# 
  3601  0895                     	;# 
  3602  0896                     	;# 
  3603  0896                     	;# 
  3604  0896                     	;# 
  3605  089B                     	;# 
  3606  0911                     	;# 
  3607  0912                     	;# 
  3608  0913                     	;# 
  3609  0914                     	;# 
  3610  0915                     	;# 
  3611  0916                     	;# 
  3612  0918                     	;# 
  3613  0919                     	;# 
  3614  091A                     	;# 
  3615  091B                     	;# 
  3616  091C                     	;# 
  3617  091D                     	;# 
  3618  091E                     	;# 
  3619  091F                     	;# 
  3620  0E0F                     	;# 
  3621  0E10                     	;# 
  3622  0E11                     	;# 
  3623  0E12                     	;# 
  3624  0E13                     	;# 
  3625  0E14                     	;# 
  3626  0E15                     	;# 
  3627  0E16                     	;# 
  3628  0E17                     	;# 
  3629  0E18                     	;# 
  3630  0E19                     	;# 
  3631  0E1A                     	;# 
  3632  0E1B                     	;# 
  3633  0E1C                     	;# 
  3634  0E1D                     	;# 
  3635  0E1E                     	;# 
  3636  0E1F                     	;# 
  3637  0E20                     	;# 
  3638  0E21                     	;# 
  3639  0E22                     	;# 
  3640  0E24                     	;# 
  3641  0E25                     	;# 
  3642  0E28                     	;# 
  3643  0E29                     	;# 
  3644  0E2A                     	;# 
  3645  0E2B                     	;# 
  3646  0E2C                     	;# 
  3647  0E2D                     	;# 
  3648  0E2E                     	;# 
  3649  0E2F                     	;# 
  3650  0E90                     	;# 
  3651  0E91                     	;# 
  3652  0E92                     	;# 
  3653  0E94                     	;# 
  3654  0E95                     	;# 
  3655  0E9C                     	;# 
  3656  0E9D                     	;# 
  3657  0E9E                     	;# 
  3658  0E9F                     	;# 
  3659  0EA0                     	;# 
  3660  0EA1                     	;# 
  3661  0EA2                     	;# 
  3662  0EA3                     	;# 
  3663  0EA4                     	;# 
  3664  0EA5                     	;# 
  3665  0EA6                     	;# 
  3666  0EA7                     	;# 
  3667  0F0F                     	;# 
  3668  0F10                     	;# 
  3669  0F11                     	;# 
  3670  0F12                     	;# 
  3671  0F13                     	;# 
  3672  0F14                     	;# 
  3673  0F15                     	;# 
  3674  0F16                     	;# 
  3675  0F17                     	;# 
  3676  0F18                     	;# 
  3677  0F19                     	;# 
  3678  0F1A                     	;# 
  3679  0F1B                     	;# 
  3680  0F1C                     	;# 
  3681  0F1D                     	;# 
  3682  0F1E                     	;# 
  3683  0F1F                     	;# 
  3684  0F20                     	;# 
  3685  0F21                     	;# 
  3686  0F22                     	;# 
  3687  0F23                     	;# 
  3688  0F24                     	;# 
  3689  0F25                     	;# 
  3690  0F26                     	;# 
  3691  0F27                     	;# 
  3692  0F28                     	;# 
  3693  0F29                     	;# 
  3694  0F2A                     	;# 
  3695  0F2B                     	;# 
  3696  0F2C                     	;# 
  3697  0F2D                     	;# 
  3698  0F2E                     	;# 
  3699  0F2F                     	;# 
  3700  0F30                     	;# 
  3701  0F31                     	;# 
  3702  0F32                     	;# 
  3703  0F33                     	;# 
  3704  0F34                     	;# 
  3705  0F35                     	;# 
  3706  0F36                     	;# 
  3707  0F37                     	;# 
  3708  0FE4                     	;# 
  3709  0FE5                     	;# 
  3710  0FE6                     	;# 
  3711  0FE7                     	;# 
  3712  0FE8                     	;# 
  3713  0FE9                     	;# 
  3714  0FEA                     	;# 
  3715  0FEB                     	;# 
  3716  0FED                     	;# 
  3717  0FEE                     	;# 
  3718  0FEF                     	;# 
  3719  0000                     	;# 
  3720  0001                     	;# 
  3721  0002                     	;# 
  3722  0003                     	;# 
  3723  0004                     	;# 
  3724  0005                     	;# 
  3725  0006                     	;# 
  3726  0007                     	;# 
  3727  0008                     	;# 
  3728  0009                     	;# 
  3729  000A                     	;# 
  3730  000B                     	;# 
  3731  000C                     	;# 
  3732  000D                     	;# 
  3733  000E                     	;# 
  3734  0010                     	;# 
  3735  0011                     	;# 
  3736  0012                     	;# 
  3737  0013                     	;# 
  3738  0014                     	;# 
  3739  0015                     	;# 
  3740  0015                     	;# 
  3741  0016                     	;# 
  3742  0016                     	;# 
  3743  0017                     	;# 
  3744  0018                     	;# 
  3745  0019                     	;# 
  3746  0019                     	;# 
  3747  001A                     	;# 
  3748  001B                     	;# 
  3749  001C                     	;# 
  3750  001D                     	;# 
  3751  001E                     	;# 
  3752  001F                     	;# 
  3753  008C                     	;# 
  3754  008D                     	;# 
  3755  008E                     	;# 
  3756  0090                     	;# 
  3757  0091                     	;# 
  3758  0092                     	;# 
  3759  0093                     	;# 
  3760  0094                     	;# 
  3761  0097                     	;# 
  3762  009B                     	;# 
  3763  009B                     	;# 
  3764  009C                     	;# 
  3765  009D                     	;# 
  3766  009E                     	;# 
  3767  009F                     	;# 
  3768  010C                     	;# 
  3769  010D                     	;# 
  3770  010E                     	;# 
  3771  0111                     	;# 
  3772  0112                     	;# 
  3773  0113                     	;# 
  3774  0114                     	;# 
  3775  0115                     	;# 
  3776  0116                     	;# 
  3777  0117                     	;# 
  3778  0118                     	;# 
  3779  0119                     	;# 
  3780  018C                     	;# 
  3781  018D                     	;# 
  3782  018E                     	;# 
  3783  0199                     	;# 
  3784  0199                     	;# 
  3785  0199                     	;# 
  3786  019A                     	;# 
  3787  019A                     	;# 
  3788  019A                     	;# 
  3789  019B                     	;# 
  3790  019B                     	;# 
  3791  019B                     	;# 
  3792  019B                     	;# 
  3793  019B                     	;# 
  3794  019C                     	;# 
  3795  019C                     	;# 
  3796  019C                     	;# 
  3797  019D                     	;# 
  3798  019D                     	;# 
  3799  019D                     	;# 
  3800  019E                     	;# 
  3801  019E                     	;# 
  3802  019E                     	;# 
  3803  019F                     	;# 
  3804  019F                     	;# 
  3805  019F                     	;# 
  3806  019F                     	;# 
  3807  019F                     	;# 
  3808  020C                     	;# 
  3809  020D                     	;# 
  3810  020E                     	;# 
  3811  0211                     	;# 
  3812  0211                     	;# 
  3813  0212                     	;# 
  3814  0212                     	;# 
  3815  0213                     	;# 
  3816  0213                     	;# 
  3817  0214                     	;# 
  3818  0214                     	;# 
  3819  0215                     	;# 
  3820  0215                     	;# 
  3821  0215                     	;# 
  3822  0215                     	;# 
  3823  0216                     	;# 
  3824  0216                     	;# 
  3825  0217                     	;# 
  3826  0217                     	;# 
  3827  0219                     	;# 
  3828  021A                     	;# 
  3829  021B                     	;# 
  3830  021C                     	;# 
  3831  021D                     	;# 
  3832  021D                     	;# 
  3833  021E                     	;# 
  3834  021F                     	;# 
  3835  028C                     	;# 
  3836  028D                     	;# 
  3837  028E                     	;# 
  3838  0291                     	;# 
  3839  0291                     	;# 
  3840  0292                     	;# 
  3841  0293                     	;# 
  3842  0294                     	;# 
  3843  0295                     	;# 
  3844  0295                     	;# 
  3845  0296                     	;# 
  3846  0297                     	;# 
  3847  0298                     	;# 
  3848  029F                     	;# 
  3849  030C                     	;# 
  3850  030D                     	;# 
  3851  030E                     	;# 
  3852  0311                     	;# 
  3853  0311                     	;# 
  3854  0312                     	;# 
  3855  0313                     	;# 
  3856  0314                     	;# 
  3857  0315                     	;# 
  3858  0315                     	;# 
  3859  0316                     	;# 
  3860  0317                     	;# 
  3861  0318                     	;# 
  3862  038C                     	;# 
  3863  038D                     	;# 
  3864  038E                     	;# 
  3865  0391                     	;# 
  3866  0392                     	;# 
  3867  0393                     	;# 
  3868  0394                     	;# 
  3869  0395                     	;# 
  3870  0396                     	;# 
  3871  0397                     	;# 
  3872  0398                     	;# 
  3873  0399                     	;# 
  3874  039A                     	;# 
  3875  039C                     	;# 
  3876  039D                     	;# 
  3877  039E                     	;# 
  3878  039F                     	;# 
  3879  0411                     	;# 
  3880  0411                     	;# 
  3881  0412                     	;# 
  3882  0413                     	;# 
  3883  0414                     	;# 
  3884  0415                     	;# 
  3885  0416                     	;# 
  3886  0417                     	;# 
  3887  0418                     	;# 
  3888  0418                     	;# 
  3889  0419                     	;# 
  3890  041A                     	;# 
  3891  041B                     	;# 
  3892  041C                     	;# 
  3893  041D                     	;# 
  3894  041E                     	;# 
  3895  041F                     	;# 
  3896  0498                     	;# 
  3897  0498                     	;# 
  3898  0499                     	;# 
  3899  049A                     	;# 
  3900  049B                     	;# 
  3901  049B                     	;# 
  3902  049C                     	;# 
  3903  049D                     	;# 
  3904  049E                     	;# 
  3905  049F                     	;# 
  3906  0617                     	;# 
  3907  0618                     	;# 
  3908  0619                     	;# 
  3909  0619                     	;# 
  3910  061A                     	;# 
  3911  061B                     	;# 
  3912  061C                     	;# 
  3913  061C                     	;# 
  3914  061F                     	;# 
  3915  0691                     	;# 
  3916  0692                     	;# 
  3917  0693                     	;# 
  3918  0694                     	;# 
  3919  0695                     	;# 
  3920  0696                     	;# 
  3921  0697                     	;# 
  3922  0698                     	;# 
  3923  0699                     	;# 
  3924  0711                     	;# 
  3925  0712                     	;# 
  3926  0713                     	;# 
  3927  0714                     	;# 
  3928  0715                     	;# 
  3929  0716                     	;# 
  3930  0717                     	;# 
  3931  0718                     	;# 
  3932  0719                     	;# 
  3933  0891                     	;# 
  3934  0891                     	;# 
  3935  0891                     	;# 
  3936  0891                     	;# 
  3937  0891                     	;# 
  3938  0891                     	;# 
  3939  0892                     	;# 
  3940  0892                     	;# 
  3941  0892                     	;# 
  3942  0893                     	;# 
  3943  0893                     	;# 
  3944  0893                     	;# 
  3945  0893                     	;# 
  3946  0893                     	;# 
  3947  0893                     	;# 
  3948  0894                     	;# 
  3949  0894                     	;# 
  3950  0894                     	;# 
  3951  0895                     	;# 
  3952  0895                     	;# 
  3953  0895                     	;# 
  3954  0896                     	;# 
  3955  0896                     	;# 
  3956  0896                     	;# 
  3957  089B                     	;# 
  3958  0911                     	;# 
  3959  0912                     	;# 
  3960  0913                     	;# 
  3961  0914                     	;# 
  3962  0915                     	;# 
  3963  0916                     	;# 
  3964  0918                     	;# 
  3965  0919                     	;# 
  3966  091A                     	;# 
  3967  091B                     	;# 
  3968  091C                     	;# 
  3969  091D                     	;# 
  3970  091E                     	;# 
  3971  091F                     	;# 
  3972  0E0F                     	;# 
  3973  0E10                     	;# 
  3974  0E11                     	;# 
  3975  0E12                     	;# 
  3976  0E13                     	;# 
  3977  0E14                     	;# 
  3978  0E15                     	;# 
  3979  0E16                     	;# 
  3980  0E17                     	;# 
  3981  0E18                     	;# 
  3982  0E19                     	;# 
  3983  0E1A                     	;# 
  3984  0E1B                     	;# 
  3985  0E1C                     	;# 
  3986  0E1D                     	;# 
  3987  0E1E                     	;# 
  3988  0E1F                     	;# 
  3989  0E20                     	;# 
  3990  0E21                     	;# 
  3991  0E22                     	;# 
  3992  0E24                     	;# 
  3993  0E25                     	;# 
  3994  0E28                     	;# 
  3995  0E29                     	;# 
  3996  0E2A                     	;# 
  3997  0E2B                     	;# 
  3998  0E2C                     	;# 
  3999  0E2D                     	;# 
  4000  0E2E                     	;# 
  4001  0E2F                     	;# 
  4002  0E90                     	;# 
  4003  0E91                     	;# 
  4004  0E92                     	;# 
  4005  0E94                     	;# 
  4006  0E95                     	;# 
  4007  0E9C                     	;# 
  4008  0E9D                     	;# 
  4009  0E9E                     	;# 
  4010  0E9F                     	;# 
  4011  0EA0                     	;# 
  4012  0EA1                     	;# 
  4013  0EA2                     	;# 
  4014  0EA3                     	;# 
  4015  0EA4                     	;# 
  4016  0EA5                     	;# 
  4017  0EA6                     	;# 
  4018  0EA7                     	;# 
  4019  0F0F                     	;# 
  4020  0F10                     	;# 
  4021  0F11                     	;# 
  4022  0F12                     	;# 
  4023  0F13                     	;# 
  4024  0F14                     	;# 
  4025  0F15                     	;# 
  4026  0F16                     	;# 
  4027  0F17                     	;# 
  4028  0F18                     	;# 
  4029  0F19                     	;# 
  4030  0F1A                     	;# 
  4031  0F1B                     	;# 
  4032  0F1C                     	;# 
  4033  0F1D                     	;# 
  4034  0F1E                     	;# 
  4035  0F1F                     	;# 
  4036  0F20                     	;# 
  4037  0F21                     	;# 
  4038  0F22                     	;# 
  4039  0F23                     	;# 
  4040  0F24                     	;# 
  4041  0F25                     	;# 
  4042  0F26                     	;# 
  4043  0F27                     	;# 
  4044  0F28                     	;# 
  4045  0F29                     	;# 
  4046  0F2A                     	;# 
  4047  0F2B                     	;# 
  4048  0F2C                     	;# 
  4049  0F2D                     	;# 
  4050  0F2E                     	;# 
  4051  0F2F                     	;# 
  4052  0F30                     	;# 
  4053  0F31                     	;# 
  4054  0F32                     	;# 
  4055  0F33                     	;# 
  4056  0F34                     	;# 
  4057  0F35                     	;# 
  4058  0F36                     	;# 
  4059  0F37                     	;# 
  4060  0FE4                     	;# 
  4061  0FE5                     	;# 
  4062  0FE6                     	;# 
  4063  0FE7                     	;# 
  4064  0FE8                     	;# 
  4065  0FE9                     	;# 
  4066  0FEA                     	;# 
  4067  0FEB                     	;# 
  4068  0FED                     	;# 
  4069  0FEE                     	;# 
  4070  0FEF                     	;# 
  4071  0000                     	;# 
  4072  0001                     	;# 
  4073  0002                     	;# 
  4074  0003                     	;# 
  4075  0004                     	;# 
  4076  0005                     	;# 
  4077  0006                     	;# 
  4078  0007                     	;# 
  4079  0008                     	;# 
  4080  0009                     	;# 
  4081  000A                     	;# 
  4082  000B                     	;# 
  4083  000C                     	;# 
  4084  000D                     	;# 
  4085  000E                     	;# 
  4086  0010                     	;# 
  4087  0011                     	;# 
  4088  0012                     	;# 
  4089  0013                     	;# 
  4090  0014                     	;# 
  4091  0015                     	;# 
  4092  0015                     	;# 
  4093  0016                     	;# 
  4094  0016                     	;# 
  4095  0017                     	;# 
  4096  0018                     	;# 
  4097  0019                     	;# 
  4098  0019                     	;# 
  4099  001A                     	;# 
  4100  001B                     	;# 
  4101  001C                     	;# 
  4102  001D                     	;# 
  4103  001E                     	;# 
  4104  001F                     	;# 
  4105  008C                     	;# 
  4106  008D                     	;# 
  4107  008E                     	;# 
  4108  0090                     	;# 
  4109  0091                     	;# 
  4110  0092                     	;# 
  4111  0093                     	;# 
  4112  0094                     	;# 
  4113  0097                     	;# 
  4114  009B                     	;# 
  4115  009B                     	;# 
  4116  009C                     	;# 
  4117  009D                     	;# 
  4118  009E                     	;# 
  4119  009F                     	;# 
  4120  010C                     	;# 
  4121  010D                     	;# 
  4122  010E                     	;# 
  4123  0111                     	;# 
  4124  0112                     	;# 
  4125  0113                     	;# 
  4126  0114                     	;# 
  4127  0115                     	;# 
  4128  0116                     	;# 
  4129  0117                     	;# 
  4130  0118                     	;# 
  4131  0119                     	;# 
  4132  018C                     	;# 
  4133  018D                     	;# 
  4134  018E                     	;# 
  4135  0199                     	;# 
  4136  0199                     	;# 
  4137  0199                     	;# 
  4138  019A                     	;# 
  4139  019A                     	;# 
  4140  019A                     	;# 
  4141  019B                     	;# 
  4142  019B                     	;# 
  4143  019B                     	;# 
  4144  019B                     	;# 
  4145  019B                     	;# 
  4146  019C                     	;# 
  4147  019C                     	;# 
  4148  019C                     	;# 
  4149  019D                     	;# 
  4150  019D                     	;# 
  4151  019D                     	;# 
  4152  019E                     	;# 
  4153  019E                     	;# 
  4154  019E                     	;# 
  4155  019F                     	;# 
  4156  019F                     	;# 
  4157  019F                     	;# 
  4158  019F                     	;# 
  4159  019F                     	;# 
  4160  020C                     	;# 
  4161  020D                     	;# 
  4162  020E                     	;# 
  4163  0211                     	;# 
  4164  0211                     	;# 
  4165  0212                     	;# 
  4166  0212                     	;# 
  4167  0213                     	;# 
  4168  0213                     	;# 
  4169  0214                     	;# 
  4170  0214                     	;# 
  4171  0215                     	;# 
  4172  0215                     	;# 
  4173  0215                     	;# 
  4174  0215                     	;# 
  4175  0216                     	;# 
  4176  0216                     	;# 
  4177  0217                     	;# 
  4178  0217                     	;# 
  4179  0219                     	;# 
  4180  021A                     	;# 
  4181  021B                     	;# 
  4182  021C                     	;# 
  4183  021D                     	;# 
  4184  021D                     	;# 
  4185  021E                     	;# 
  4186  021F                     	;# 
  4187  028C                     	;# 
  4188  028D                     	;# 
  4189  028E                     	;# 
  4190  0291                     	;# 
  4191  0291                     	;# 
  4192  0292                     	;# 
  4193  0293                     	;# 
  4194  0294                     	;# 
  4195  0295                     	;# 
  4196  0295                     	;# 
  4197  0296                     	;# 
  4198  0297                     	;# 
  4199  0298                     	;# 
  4200  029F                     	;# 
  4201  030C                     	;# 
  4202  030D                     	;# 
  4203  030E                     	;# 
  4204  0311                     	;# 
  4205  0311                     	;# 
  4206  0312                     	;# 
  4207  0313                     	;# 
  4208  0314                     	;# 
  4209  0315                     	;# 
  4210  0315                     	;# 
  4211  0316                     	;# 
  4212  0317                     	;# 
  4213  0318                     	;# 
  4214  038C                     	;# 
  4215  038D                     	;# 
  4216  038E                     	;# 
  4217  0391                     	;# 
  4218  0392                     	;# 
  4219  0393                     	;# 
  4220  0394                     	;# 
  4221  0395                     	;# 
  4222  0396                     	;# 
  4223  0397                     	;# 
  4224  0398                     	;# 
  4225  0399                     	;# 
  4226  039A                     	;# 
  4227  039C                     	;# 
  4228  039D                     	;# 
  4229  039E                     	;# 
  4230  039F                     	;# 
  4231  0411                     	;# 
  4232  0411                     	;# 
  4233  0412                     	;# 
  4234  0413                     	;# 
  4235  0414                     	;# 
  4236  0415                     	;# 
  4237  0416                     	;# 
  4238  0417                     	;# 
  4239  0418                     	;# 
  4240  0418                     	;# 
  4241  0419                     	;# 
  4242  041A                     	;# 
  4243  041B                     	;# 
  4244  041C                     	;# 
  4245  041D                     	;# 
  4246  041E                     	;# 
  4247  041F                     	;# 
  4248  0498                     	;# 
  4249  0498                     	;# 
  4250  0499                     	;# 
  4251  049A                     	;# 
  4252  049B                     	;# 
  4253  049B                     	;# 
  4254  049C                     	;# 
  4255  049D                     	;# 
  4256  049E                     	;# 
  4257  049F                     	;# 
  4258  0617                     	;# 
  4259  0618                     	;# 
  4260  0619                     	;# 
  4261  0619                     	;# 
  4262  061A                     	;# 
  4263  061B                     	;# 
  4264  061C                     	;# 
  4265  061C                     	;# 
  4266  061F                     	;# 
  4267  0691                     	;# 
  4268  0692                     	;# 
  4269  0693                     	;# 
  4270  0694                     	;# 
  4271  0695                     	;# 
  4272  0696                     	;# 
  4273  0697                     	;# 
  4274  0698                     	;# 
  4275  0699                     	;# 
  4276  0711                     	;# 
  4277  0712                     	;# 
  4278  0713                     	;# 
  4279  0714                     	;# 
  4280  0715                     	;# 
  4281  0716                     	;# 
  4282  0717                     	;# 
  4283  0718                     	;# 
  4284  0719                     	;# 
  4285  0891                     	;# 
  4286  0891                     	;# 
  4287  0891                     	;# 
  4288  0891                     	;# 
  4289  0891                     	;# 
  4290  0891                     	;# 
  4291  0892                     	;# 
  4292  0892                     	;# 
  4293  0892                     	;# 
  4294  0893                     	;# 
  4295  0893                     	;# 
  4296  0893                     	;# 
  4297  0893                     	;# 
  4298  0893                     	;# 
  4299  0893                     	;# 
  4300  0894                     	;# 
  4301  0894                     	;# 
  4302  0894                     	;# 
  4303  0895                     	;# 
  4304  0895                     	;# 
  4305  0895                     	;# 
  4306  0896                     	;# 
  4307  0896                     	;# 
  4308  0896                     	;# 
  4309  089B                     	;# 
  4310  0911                     	;# 
  4311  0912                     	;# 
  4312  0913                     	;# 
  4313  0914                     	;# 
  4314  0915                     	;# 
  4315  0916                     	;# 
  4316  0918                     	;# 
  4317  0919                     	;# 
  4318  091A                     	;# 
  4319  091B                     	;# 
  4320  091C                     	;# 
  4321  091D                     	;# 
  4322  091E                     	;# 
  4323  091F                     	;# 
  4324  0E0F                     	;# 
  4325  0E10                     	;# 
  4326  0E11                     	;# 
  4327  0E12                     	;# 
  4328  0E13                     	;# 
  4329  0E14                     	;# 
  4330  0E15                     	;# 
  4331  0E16                     	;# 
  4332  0E17                     	;# 
  4333  0E18                     	;# 
  4334  0E19                     	;# 
  4335  0E1A                     	;# 
  4336  0E1B                     	;# 
  4337  0E1C                     	;# 
  4338  0E1D                     	;# 
  4339  0E1E                     	;# 
  4340  0E1F                     	;# 
  4341  0E20                     	;# 
  4342  0E21                     	;# 
  4343  0E22                     	;# 
  4344  0E24                     	;# 
  4345  0E25                     	;# 
  4346  0E28                     	;# 
  4347  0E29                     	;# 
  4348  0E2A                     	;# 
  4349  0E2B                     	;# 
  4350  0E2C                     	;# 
  4351  0E2D                     	;# 
  4352  0E2E                     	;# 
  4353  0E2F                     	;# 
  4354  0E90                     	;# 
  4355  0E91                     	;# 
  4356  0E92                     	;# 
  4357  0E94                     	;# 
  4358  0E95                     	;# 
  4359  0E9C                     	;# 
  4360  0E9D                     	;# 
  4361  0E9E                     	;# 
  4362  0E9F                     	;# 
  4363  0EA0                     	;# 
  4364  0EA1                     	;# 
  4365  0EA2                     	;# 
  4366  0EA3                     	;# 
  4367  0EA4                     	;# 
  4368  0EA5                     	;# 
  4369  0EA6                     	;# 
  4370  0EA7                     	;# 
  4371  0F0F                     	;# 
  4372  0F10                     	;# 
  4373  0F11                     	;# 
  4374  0F12                     	;# 
  4375  0F13                     	;# 
  4376  0F14                     	;# 
  4377  0F15                     	;# 
  4378  0F16                     	;# 
  4379  0F17                     	;# 
  4380  0F18                     	;# 
  4381  0F19                     	;# 
  4382  0F1A                     	;# 
  4383  0F1B                     	;# 
  4384  0F1C                     	;# 
  4385  0F1D                     	;# 
  4386  0F1E                     	;# 
  4387  0F1F                     	;# 
  4388  0F20                     	;# 
  4389  0F21                     	;# 
  4390  0F22                     	;# 
  4391  0F23                     	;# 
  4392  0F24                     	;# 
  4393  0F25                     	;# 
  4394  0F26                     	;# 
  4395  0F27                     	;# 
  4396  0F28                     	;# 
  4397  0F29                     	;# 
  4398  0F2A                     	;# 
  4399  0F2B                     	;# 
  4400  0F2C                     	;# 
  4401  0F2D                     	;# 
  4402  0F2E                     	;# 
  4403  0F2F                     	;# 
  4404  0F30                     	;# 
  4405  0F31                     	;# 
  4406  0F32                     	;# 
  4407  0F33                     	;# 
  4408  0F34                     	;# 
  4409  0F35                     	;# 
  4410  0F36                     	;# 
  4411  0F37                     	;# 
  4412  0FE4                     	;# 
  4413  0FE5                     	;# 
  4414  0FE6                     	;# 
  4415  0FE7                     	;# 
  4416  0FE8                     	;# 
  4417  0FE9                     	;# 
  4418  0FEA                     	;# 
  4419  0FEB                     	;# 
  4420  0FED                     	;# 
  4421  0FEE                     	;# 
  4422  0FEF                     	;# 
  4423  0000                     	;# 
  4424  0001                     	;# 
  4425  0002                     	;# 
  4426  0003                     	;# 
  4427  0004                     	;# 
  4428  0005                     	;# 
  4429  0006                     	;# 
  4430  0007                     	;# 
  4431  0008                     	;# 
  4432  0009                     	;# 
  4433  000A                     	;# 
  4434  000B                     	;# 
  4435  000C                     	;# 
  4436  000D                     	;# 
  4437  000E                     	;# 
  4438  0010                     	;# 
  4439  0011                     	;# 
  4440  0012                     	;# 
  4441  0013                     	;# 
  4442  0014                     	;# 
  4443  0015                     	;# 
  4444  0015                     	;# 
  4445  0016                     	;# 
  4446  0016                     	;# 
  4447  0017                     	;# 
  4448  0018                     	;# 
  4449  0019                     	;# 
  4450  0019                     	;# 
  4451  001A                     	;# 
  4452  001B                     	;# 
  4453  001C                     	;# 
  4454  001D                     	;# 
  4455  001E                     	;# 
  4456  001F                     	;# 
  4457  008C                     	;# 
  4458  008D                     	;# 
  4459  008E                     	;# 
  4460  0090                     	;# 
  4461  0091                     	;# 
  4462  0092                     	;# 
  4463  0093                     	;# 
  4464  0094                     	;# 
  4465  0097                     	;# 
  4466  009B                     	;# 
  4467  009B                     	;# 
  4468  009C                     	;# 
  4469  009D                     	;# 
  4470  009E                     	;# 
  4471  009F                     	;# 
  4472  010C                     	;# 
  4473  010D                     	;# 
  4474  010E                     	;# 
  4475  0111                     	;# 
  4476  0112                     	;# 
  4477  0113                     	;# 
  4478  0114                     	;# 
  4479  0115                     	;# 
  4480  0116                     	;# 
  4481  0117                     	;# 
  4482  0118                     	;# 
  4483  0119                     	;# 
  4484  018C                     	;# 
  4485  018D                     	;# 
  4486  018E                     	;# 
  4487  0199                     	;# 
  4488  0199                     	;# 
  4489  0199                     	;# 
  4490  019A                     	;# 
  4491  019A                     	;# 
  4492  019A                     	;# 
  4493  019B                     	;# 
  4494  019B                     	;# 
  4495  019B                     	;# 
  4496  019B                     	;# 
  4497  019B                     	;# 
  4498  019C                     	;# 
  4499  019C                     	;# 
  4500  019C                     	;# 
  4501  019D                     	;# 
  4502  019D                     	;# 
  4503  019D                     	;# 
  4504  019E                     	;# 
  4505  019E                     	;# 
  4506  019E                     	;# 
  4507  019F                     	;# 
  4508  019F                     	;# 
  4509  019F                     	;# 
  4510  019F                     	;# 
  4511  019F                     	;# 
  4512  020C                     	;# 
  4513  020D                     	;# 
  4514  020E                     	;# 
  4515  0211                     	;# 
  4516  0211                     	;# 
  4517  0212                     	;# 
  4518  0212                     	;# 
  4519  0213                     	;# 
  4520  0213                     	;# 
  4521  0214                     	;# 
  4522  0214                     	;# 
  4523  0215                     	;# 
  4524  0215                     	;# 
  4525  0215                     	;# 
  4526  0215                     	;# 
  4527  0216                     	;# 
  4528  0216                     	;# 
  4529  0217                     	;# 
  4530  0217                     	;# 
  4531  0219                     	;# 
  4532  021A                     	;# 
  4533  021B                     	;# 
  4534  021C                     	;# 
  4535  021D                     	;# 
  4536  021D                     	;# 
  4537  021E                     	;# 
  4538  021F                     	;# 
  4539  028C                     	;# 
  4540  028D                     	;# 
  4541  028E                     	;# 
  4542  0291                     	;# 
  4543  0291                     	;# 
  4544  0292                     	;# 
  4545  0293                     	;# 
  4546  0294                     	;# 
  4547  0295                     	;# 
  4548  0295                     	;# 
  4549  0296                     	;# 
  4550  0297                     	;# 
  4551  0298                     	;# 
  4552  029F                     	;# 
  4553  030C                     	;# 
  4554  030D                     	;# 
  4555  030E                     	;# 
  4556  0311                     	;# 
  4557  0311                     	;# 
  4558  0312                     	;# 
  4559  0313                     	;# 
  4560  0314                     	;# 
  4561  0315                     	;# 
  4562  0315                     	;# 
  4563  0316                     	;# 
  4564  0317                     	;# 
  4565  0318                     	;# 
  4566  038C                     	;# 
  4567  038D                     	;# 
  4568  038E                     	;# 
  4569  0391                     	;# 
  4570  0392                     	;# 
  4571  0393                     	;# 
  4572  0394                     	;# 
  4573  0395                     	;# 
  4574  0396                     	;# 
  4575  0397                     	;# 
  4576  0398                     	;# 
  4577  0399                     	;# 
  4578  039A                     	;# 
  4579  039C                     	;# 
  4580  039D                     	;# 
  4581  039E                     	;# 
  4582  039F                     	;# 
  4583  0411                     	;# 
  4584  0411                     	;# 
  4585  0412                     	;# 
  4586  0413                     	;# 
  4587  0414                     	;# 
  4588  0415                     	;# 
  4589  0416                     	;# 
  4590  0417                     	;# 
  4591  0418                     	;# 
  4592  0418                     	;# 
  4593  0419                     	;# 
  4594  041A                     	;# 
  4595  041B                     	;# 
  4596  041C                     	;# 
  4597  041D                     	;# 
  4598  041E                     	;# 
  4599  041F                     	;# 
  4600  0498                     	;# 
  4601  0498                     	;# 
  4602  0499                     	;# 
  4603  049A                     	;# 
  4604  049B                     	;# 
  4605  049B                     	;# 
  4606  049C                     	;# 
  4607  049D                     	;# 
  4608  049E                     	;# 
  4609  049F                     	;# 
  4610  0617                     	;# 
  4611  0618                     	;# 
  4612  0619                     	;# 
  4613  0619                     	;# 
  4614  061A                     	;# 
  4615  061B                     	;# 
  4616  061C                     	;# 
  4617  061C                     	;# 
  4618  061F                     	;# 
  4619  0691                     	;# 
  4620  0692                     	;# 
  4621  0693                     	;# 
  4622  0694                     	;# 
  4623  0695                     	;# 
  4624  0696                     	;# 
  4625  0697                     	;# 
  4626  0698                     	;# 
  4627  0699                     	;# 
  4628  0711                     	;# 
  4629  0712                     	;# 
  4630  0713                     	;# 
  4631  0714                     	;# 
  4632  0715                     	;# 
  4633  0716                     	;# 
  4634  0717                     	;# 
  4635  0718                     	;# 
  4636  0719                     	;# 
  4637  0891                     	;# 
  4638  0891                     	;# 
  4639  0891                     	;# 
  4640  0891                     	;# 
  4641  0891                     	;# 
  4642  0891                     	;# 
  4643  0892                     	;# 
  4644  0892                     	;# 
  4645  0892                     	;# 
  4646  0893                     	;# 
  4647  0893                     	;# 
  4648  0893                     	;# 
  4649  0893                     	;# 
  4650  0893                     	;# 
  4651  0893                     	;# 
  4652  0894                     	;# 
  4653  0894                     	;# 
  4654  0894                     	;# 
  4655  0895                     	;# 
  4656  0895                     	;# 
  4657  0895                     	;# 
  4658  0896                     	;# 
  4659  0896                     	;# 
  4660  0896                     	;# 
  4661  089B                     	;# 
  4662  0911                     	;# 
  4663  0912                     	;# 
  4664  0913                     	;# 
  4665  0914                     	;# 
  4666  0915                     	;# 
  4667  0916                     	;# 
  4668  0918                     	;# 
  4669  0919                     	;# 
  4670  091A                     	;# 
  4671  091B                     	;# 
  4672  091C                     	;# 
  4673  091D                     	;# 
  4674  091E                     	;# 
  4675  091F                     	;# 
  4676  0E0F                     	;# 
  4677  0E10                     	;# 
  4678  0E11                     	;# 
  4679  0E12                     	;# 
  4680  0E13                     	;# 
  4681  0E14                     	;# 
  4682  0E15                     	;# 
  4683  0E16                     	;# 
  4684  0E17                     	;# 
  4685  0E18                     	;# 
  4686  0E19                     	;# 
  4687  0E1A                     	;# 
  4688  0E1B                     	;# 
  4689  0E1C                     	;# 
  4690  0E1D                     	;# 
  4691  0E1E                     	;# 
  4692  0E1F                     	;# 
  4693  0E20                     	;# 
  4694  0E21                     	;# 
  4695  0E22                     	;# 
  4696  0E24                     	;# 
  4697  0E25                     	;# 
  4698  0E28                     	;# 
  4699  0E29                     	;# 
  4700  0E2A                     	;# 
  4701  0E2B                     	;# 
  4702  0E2C                     	;# 
  4703  0E2D                     	;# 
  4704  0E2E                     	;# 
  4705  0E2F                     	;# 
  4706  0E90                     	;# 
  4707  0E91                     	;# 
  4708  0E92                     	;# 
  4709  0E94                     	;# 
  4710  0E95                     	;# 
  4711  0E9C                     	;# 
  4712  0E9D                     	;# 
  4713  0E9E                     	;# 
  4714  0E9F                     	;# 
  4715  0EA0                     	;# 
  4716  0EA1                     	;# 
  4717  0EA2                     	;# 
  4718  0EA3                     	;# 
  4719  0EA4                     	;# 
  4720  0EA5                     	;# 
  4721  0EA6                     	;# 
  4722  0EA7                     	;# 
  4723  0F0F                     	;# 
  4724  0F10                     	;# 
  4725  0F11                     	;# 
  4726  0F12                     	;# 
  4727  0F13                     	;# 
  4728  0F14                     	;# 
  4729  0F15                     	;# 
  4730  0F16                     	;# 
  4731  0F17                     	;# 
  4732  0F18                     	;# 
  4733  0F19                     	;# 
  4734  0F1A                     	;# 
  4735  0F1B                     	;# 
  4736  0F1C                     	;# 
  4737  0F1D                     	;# 
  4738  0F1E                     	;# 
  4739  0F1F                     	;# 
  4740  0F20                     	;# 
  4741  0F21                     	;# 
  4742  0F22                     	;# 
  4743  0F23                     	;# 
  4744  0F24                     	;# 
  4745  0F25                     	;# 
  4746  0F26                     	;# 
  4747  0F27                     	;# 
  4748  0F28                     	;# 
  4749  0F29                     	;# 
  4750  0F2A                     	;# 
  4751  0F2B                     	;# 
  4752  0F2C                     	;# 
  4753  0F2D                     	;# 
  4754  0F2E                     	;# 
  4755  0F2F                     	;# 
  4756  0F30                     	;# 
  4757  0F31                     	;# 
  4758  0F32                     	;# 
  4759  0F33                     	;# 
  4760  0F34                     	;# 
  4761  0F35                     	;# 
  4762  0F36                     	;# 
  4763  0F37                     	;# 
  4764  0FE4                     	;# 
  4765  0FE5                     	;# 
  4766  0FE6                     	;# 
  4767  0FE7                     	;# 
  4768  0FE8                     	;# 
  4769  0FE9                     	;# 
  4770  0FEA                     	;# 
  4771  0FEB                     	;# 
  4772  0FED                     	;# 
  4773  0FEE                     	;# 
  4774  0FEF                     	;# 
  4775  0000                     	;# 
  4776  0001                     	;# 
  4777  0002                     	;# 
  4778  0003                     	;# 
  4779  0004                     	;# 
  4780  0005                     	;# 
  4781  0006                     	;# 
  4782  0007                     	;# 
  4783  0008                     	;# 
  4784  0009                     	;# 
  4785  000A                     	;# 
  4786  000B                     	;# 
  4787  000C                     	;# 
  4788  000D                     	;# 
  4789  000E                     	;# 
  4790  0010                     	;# 
  4791  0011                     	;# 
  4792  0012                     	;# 
  4793  0013                     	;# 
  4794  0014                     	;# 
  4795  0015                     	;# 
  4796  0015                     	;# 
  4797  0016                     	;# 
  4798  0016                     	;# 
  4799  0017                     	;# 
  4800  0018                     	;# 
  4801  0019                     	;# 
  4802  0019                     	;# 
  4803  001A                     	;# 
  4804  001B                     	;# 
  4805  001C                     	;# 
  4806  001D                     	;# 
  4807  001E                     	;# 
  4808  001F                     	;# 
  4809  008C                     	;# 
  4810  008D                     	;# 
  4811  008E                     	;# 
  4812  0090                     	;# 
  4813  0091                     	;# 
  4814  0092                     	;# 
  4815  0093                     	;# 
  4816  0094                     	;# 
  4817  0097                     	;# 
  4818  009B                     	;# 
  4819  009B                     	;# 
  4820  009C                     	;# 
  4821  009D                     	;# 
  4822  009E                     	;# 
  4823  009F                     	;# 
  4824  010C                     	;# 
  4825  010D                     	;# 
  4826  010E                     	;# 
  4827  0111                     	;# 
  4828  0112                     	;# 
  4829  0113                     	;# 
  4830  0114                     	;# 
  4831  0115                     	;# 
  4832  0116                     	;# 
  4833  0117                     	;# 
  4834  0118                     	;# 
  4835  0119                     	;# 
  4836  018C                     	;# 
  4837  018D                     	;# 
  4838  018E                     	;# 
  4839  0199                     	;# 
  4840  0199                     	;# 
  4841  0199                     	;# 
  4842  019A                     	;# 
  4843  019A                     	;# 
  4844  019A                     	;# 
  4845  019B                     	;# 
  4846  019B                     	;# 
  4847  019B                     	;# 
  4848  019B                     	;# 
  4849  019B                     	;# 
  4850  019C                     	;# 
  4851  019C                     	;# 
  4852  019C                     	;# 
  4853  019D                     	;# 
  4854  019D                     	;# 
  4855  019D                     	;# 
  4856  019E                     	;# 
  4857  019E                     	;# 
  4858  019E                     	;# 
  4859  019F                     	;# 
  4860  019F                     	;# 
  4861  019F                     	;# 
  4862  019F                     	;# 
  4863  019F                     	;# 
  4864  020C                     	;# 
  4865  020D                     	;# 
  4866  020E                     	;# 
  4867  0211                     	;# 
  4868  0211                     	;# 
  4869  0212                     	;# 
  4870  0212                     	;# 
  4871  0213                     	;# 
  4872  0213                     	;# 
  4873  0214                     	;# 
  4874  0214                     	;# 
  4875  0215                     	;# 
  4876  0215                     	;# 
  4877  0215                     	;# 
  4878  0215                     	;# 
  4879  0216                     	;# 
  4880  0216                     	;# 
  4881  0217                     	;# 
  4882  0217                     	;# 
  4883  0219                     	;# 
  4884  021A                     	;# 
  4885  021B                     	;# 
  4886  021C                     	;# 
  4887  021D                     	;# 
  4888  021D                     	;# 
  4889  021E                     	;# 
  4890  021F                     	;# 
  4891  028C                     	;# 
  4892  028D                     	;# 
  4893  028E                     	;# 
  4894  0291                     	;# 
  4895  0291                     	;# 
  4896  0292                     	;# 
  4897  0293                     	;# 
  4898  0294                     	;# 
  4899  0295                     	;# 
  4900  0295                     	;# 
  4901  0296                     	;# 
  4902  0297                     	;# 
  4903  0298                     	;# 
  4904  029F                     	;# 
  4905  030C                     	;# 
  4906  030D                     	;# 
  4907  030E                     	;# 
  4908  0311                     	;# 
  4909  0311                     	;# 
  4910  0312                     	;# 
  4911  0313                     	;# 
  4912  0314                     	;# 
  4913  0315                     	;# 
  4914  0315                     	;# 
  4915  0316                     	;# 
  4916  0317                     	;# 
  4917  0318                     	;# 
  4918  038C                     	;# 
  4919  038D                     	;# 
  4920  038E                     	;# 
  4921  0391                     	;# 
  4922  0392                     	;# 
  4923  0393                     	;# 
  4924  0394                     	;# 
  4925  0395                     	;# 
  4926  0396                     	;# 
  4927  0397                     	;# 
  4928  0398                     	;# 
  4929  0399                     	;# 
  4930  039A                     	;# 
  4931  039C                     	;# 
  4932  039D                     	;# 
  4933  039E                     	;# 
  4934  039F                     	;# 
  4935  0411                     	;# 
  4936  0411                     	;# 
  4937  0412                     	;# 
  4938  0413                     	;# 
  4939  0414                     	;# 
  4940  0415                     	;# 
  4941  0416                     	;# 
  4942  0417                     	;# 
  4943  0418                     	;# 
  4944  0418                     	;# 
  4945  0419                     	;# 
  4946  041A                     	;# 
  4947  041B                     	;# 
  4948  041C                     	;# 
  4949  041D                     	;# 
  4950  041E                     	;# 
  4951  041F                     	;# 
  4952  0498                     	;# 
  4953  0498                     	;# 
  4954  0499                     	;# 
  4955  049A                     	;# 
  4956  049B                     	;# 
  4957  049B                     	;# 
  4958  049C                     	;# 
  4959  049D                     	;# 
  4960  049E                     	;# 
  4961  049F                     	;# 
  4962  0617                     	;# 
  4963  0618                     	;# 
  4964  0619                     	;# 
  4965  0619                     	;# 
  4966  061A                     	;# 
  4967  061B                     	;# 
  4968  061C                     	;# 
  4969  061C                     	;# 
  4970  061F                     	;# 
  4971  0691                     	;# 
  4972  0692                     	;# 
  4973  0693                     	;# 
  4974  0694                     	;# 
  4975  0695                     	;# 
  4976  0696                     	;# 
  4977  0697                     	;# 
  4978  0698                     	;# 
  4979  0699                     	;# 
  4980  0711                     	;# 
  4981  0712                     	;# 
  4982  0713                     	;# 
  4983  0714                     	;# 
  4984  0715                     	;# 
  4985  0716                     	;# 
  4986  0717                     	;# 
  4987  0718                     	;# 
  4988  0719                     	;# 
  4989  0891                     	;# 
  4990  0891                     	;# 
  4991  0891                     	;# 
  4992  0891                     	;# 
  4993  0891                     	;# 
  4994  0891                     	;# 
  4995  0892                     	;# 
  4996  0892                     	;# 
  4997  0892                     	;# 
  4998  0893                     	;# 
  4999  0893                     	;# 
  5000  0893                     	;# 
  5001  0893                     	;# 
  5002  0893                     	;# 
  5003  0893                     	;# 
  5004  0894                     	;# 
  5005  0894                     	;# 
  5006  0894                     	;# 
  5007  0895                     	;# 
  5008  0895                     	;# 
  5009  0895                     	;# 
  5010  0896                     	;# 
  5011  0896                     	;# 
  5012  0896                     	;# 
  5013  089B                     	;# 
  5014  0911                     	;# 
  5015  0912                     	;# 
  5016  0913                     	;# 
  5017  0914                     	;# 
  5018  0915                     	;# 
  5019  0916                     	;# 
  5020  0918                     	;# 
  5021  0919                     	;# 
  5022  091A                     	;# 
  5023  091B                     	;# 
  5024  091C                     	;# 
  5025  091D                     	;# 
  5026  091E                     	;# 
  5027  091F                     	;# 
  5028  0E0F                     	;# 
  5029  0E10                     	;# 
  5030  0E11                     	;# 
  5031  0E12                     	;# 
  5032  0E13                     	;# 
  5033  0E14                     	;# 
  5034  0E15                     	;# 
  5035  0E16                     	;# 
  5036  0E17                     	;# 
  5037  0E18                     	;# 
  5038  0E19                     	;# 
  5039  0E1A                     	;# 
  5040  0E1B                     	;# 
  5041  0E1C                     	;# 
  5042  0E1D                     	;# 
  5043  0E1E                     	;# 
  5044  0E1F                     	;# 
  5045  0E20                     	;# 
  5046  0E21                     	;# 
  5047  0E22                     	;# 
  5048  0E24                     	;# 
  5049  0E25                     	;# 
  5050  0E28                     	;# 
  5051  0E29                     	;# 
  5052  0E2A                     	;# 
  5053  0E2B                     	;# 
  5054  0E2C                     	;# 
  5055  0E2D                     	;# 
  5056  0E2E                     	;# 
  5057  0E2F                     	;# 
  5058  0E90                     	;# 
  5059  0E91                     	;# 
  5060  0E92                     	;# 
  5061  0E94                     	;# 
  5062  0E95                     	;# 
  5063  0E9C                     	;# 
  5064  0E9D                     	;# 
  5065  0E9E                     	;# 
  5066  0E9F                     	;# 
  5067  0EA0                     	;# 
  5068  0EA1                     	;# 
  5069  0EA2                     	;# 
  5070  0EA3                     	;# 
  5071  0EA4                     	;# 
  5072  0EA5                     	;# 
  5073  0EA6                     	;# 
  5074  0EA7                     	;# 
  5075  0F0F                     	;# 
  5076  0F10                     	;# 
  5077  0F11                     	;# 
  5078  0F12                     	;# 
  5079  0F13                     	;# 
  5080  0F14                     	;# 
  5081  0F15                     	;# 
  5082  0F16                     	;# 
  5083  0F17                     	;# 
  5084  0F18                     	;# 
  5085  0F19                     	;# 
  5086  0F1A                     	;# 
  5087  0F1B                     	;# 
  5088  0F1C                     	;# 
  5089  0F1D                     	;# 
  5090  0F1E                     	;# 
  5091  0F1F                     	;# 
  5092  0F20                     	;# 
  5093  0F21                     	;# 
  5094  0F22                     	;# 
  5095  0F23                     	;# 
  5096  0F24                     	;# 
  5097  0F25                     	;# 
  5098  0F26                     	;# 
  5099  0F27                     	;# 
  5100  0F28                     	;# 
  5101  0F29                     	;# 
  5102  0F2A                     	;# 
  5103  0F2B                     	;# 
  5104  0F2C                     	;# 
  5105  0F2D                     	;# 
  5106  0F2E                     	;# 
  5107  0F2F                     	;# 
  5108  0F30                     	;# 
  5109  0F31                     	;# 
  5110  0F32                     	;# 
  5111  0F33                     	;# 
  5112  0F34                     	;# 
  5113  0F35                     	;# 
  5114  0F36                     	;# 
  5115  0F37                     	;# 
  5116  0FE4                     	;# 
  5117  0FE5                     	;# 
  5118  0FE6                     	;# 
  5119  0FE7                     	;# 
  5120  0FE8                     	;# 
  5121  0FE9                     	;# 
  5122  0FEA                     	;# 
  5123  0FEB                     	;# 
  5124  0FED                     	;# 
  5125  0FEE                     	;# 
  5126  0FEF                     	;# 
  5127  0000                     	;# 
  5128  0001                     	;# 
  5129  0002                     	;# 
  5130  0003                     	;# 
  5131  0004                     	;# 
  5132  0005                     	;# 
  5133  0006                     	;# 
  5134  0007                     	;# 
  5135  0008                     	;# 
  5136  0009                     	;# 
  5137  000A                     	;# 
  5138  000B                     	;# 
  5139  000C                     	;# 
  5140  000D                     	;# 
  5141  000E                     	;# 
  5142  0010                     	;# 
  5143  0011                     	;# 
  5144  0012                     	;# 
  5145  0013                     	;# 
  5146  0014                     	;# 
  5147  0015                     	;# 
  5148  0015                     	;# 
  5149  0016                     	;# 
  5150  0016                     	;# 
  5151  0017                     	;# 
  5152  0018                     	;# 
  5153  0019                     	;# 
  5154  0019                     	;# 
  5155  001A                     	;# 
  5156  001B                     	;# 
  5157  001C                     	;# 
  5158  001D                     	;# 
  5159  001E                     	;# 
  5160  001F                     	;# 
  5161  008C                     	;# 
  5162  008D                     	;# 
  5163  008E                     	;# 
  5164  0090                     	;# 
  5165  0091                     	;# 
  5166  0092                     	;# 
  5167  0093                     	;# 
  5168  0094                     	;# 
  5169  0097                     	;# 
  5170  009B                     	;# 
  5171  009B                     	;# 
  5172  009C                     	;# 
  5173  009D                     	;# 
  5174  009E                     	;# 
  5175  009F                     	;# 
  5176  010C                     	;# 
  5177  010D                     	;# 
  5178  010E                     	;# 
  5179  0111                     	;# 
  5180  0112                     	;# 
  5181  0113                     	;# 
  5182  0114                     	;# 
  5183  0115                     	;# 
  5184  0116                     	;# 
  5185  0117                     	;# 
  5186  0118                     	;# 
  5187  0119                     	;# 
  5188  018C                     	;# 
  5189  018D                     	;# 
  5190  018E                     	;# 
  5191  0197                     	;# 
  5192  0199                     	;# 
  5193  0199                     	;# 
  5194  0199                     	;# 
  5195  019A                     	;# 
  5196  019A                     	;# 
  5197  019A                     	;# 
  5198  019B                     	;# 
  5199  019B                     	;# 
  5200  019B                     	;# 
  5201  019B                     	;# 
  5202  019B                     	;# 
  5203  019C                     	;# 
  5204  019C                     	;# 
  5205  019C                     	;# 
  5206  019D                     	;# 
  5207  019D                     	;# 
  5208  019D                     	;# 
  5209  019E                     	;# 
  5210  019E                     	;# 
  5211  019E                     	;# 
  5212  019F                     	;# 
  5213  019F                     	;# 
  5214  019F                     	;# 
  5215  019F                     	;# 
  5216  019F                     	;# 
  5217  020C                     	;# 
  5218  020D                     	;# 
  5219  020E                     	;# 
  5220  0211                     	;# 
  5221  0211                     	;# 
  5222  0212                     	;# 
  5223  0212                     	;# 
  5224  0213                     	;# 
  5225  0213                     	;# 
  5226  0214                     	;# 
  5227  0214                     	;# 
  5228  0215                     	;# 
  5229  0215                     	;# 
  5230  0215                     	;# 
  5231  0215                     	;# 
  5232  0216                     	;# 
  5233  0216                     	;# 
  5234  0217                     	;# 
  5235  0217                     	;# 
  5236  0219                     	;# 
  5237  021A                     	;# 
  5238  021B                     	;# 
  5239  021C                     	;# 
  5240  021D                     	;# 
  5241  021D                     	;# 
  5242  021E                     	;# 
  5243  021F                     	;# 
  5244  028C                     	;# 
  5245  028D                     	;# 
  5246  028E                     	;# 
  5247  0291                     	;# 
  5248  0291                     	;# 
  5249  0292                     	;# 
  5250  0293                     	;# 
  5251  0294                     	;# 
  5252  0295                     	;# 
  5253  0295                     	;# 
  5254  0296                     	;# 
  5255  0297                     	;# 
  5256  0298                     	;# 
  5257  029F                     	;# 
  5258  030C                     	;# 
  5259  030D                     	;# 
  5260  030E                     	;# 
  5261  0311                     	;# 
  5262  0311                     	;# 
  5263  0312                     	;# 
  5264  0313                     	;# 
  5265  0314                     	;# 
  5266  0315                     	;# 
  5267  0315                     	;# 
  5268  0316                     	;# 
  5269  0317                     	;# 
  5270  0318                     	;# 
  5271  038C                     	;# 
  5272  038D                     	;# 
  5273  038E                     	;# 
  5274  0391                     	;# 
  5275  0392                     	;# 
  5276  0393                     	;# 
  5277  0394                     	;# 
  5278  0395                     	;# 
  5279  0396                     	;# 
  5280  0397                     	;# 
  5281  0398                     	;# 
  5282  0399                     	;# 
  5283  039A                     	;# 
  5284  039C                     	;# 
  5285  039D                     	;# 
  5286  039E                     	;# 
  5287  039F                     	;# 
  5288  0411                     	;# 
  5289  0411                     	;# 
  5290  0412                     	;# 
  5291  0413                     	;# 
  5292  0414                     	;# 
  5293  0415                     	;# 
  5294  0416                     	;# 
  5295  0417                     	;# 
  5296  0418                     	;# 
  5297  0418                     	;# 
  5298  0419                     	;# 
  5299  041A                     	;# 
  5300  041B                     	;# 
  5301  041C                     	;# 
  5302  041D                     	;# 
  5303  041E                     	;# 
  5304  041F                     	;# 
  5305  0498                     	;# 
  5306  0498                     	;# 
  5307  0499                     	;# 
  5308  049A                     	;# 
  5309  049B                     	;# 
  5310  049B                     	;# 
  5311  049C                     	;# 
  5312  049D                     	;# 
  5313  049E                     	;# 
  5314  049F                     	;# 
  5315  0617                     	;# 
  5316  0618                     	;# 
  5317  0619                     	;# 
  5318  0619                     	;# 
  5319  061A                     	;# 
  5320  061B                     	;# 
  5321  061C                     	;# 
  5322  061C                     	;# 
  5323  061F                     	;# 
  5324  0691                     	;# 
  5325  0692                     	;# 
  5326  0693                     	;# 
  5327  0694                     	;# 
  5328  0695                     	;# 
  5329  0696                     	;# 
  5330  0697                     	;# 
  5331  0698                     	;# 
  5332  0699                     	;# 
  5333  0711                     	;# 
  5334  0712                     	;# 
  5335  0713                     	;# 
  5336  0714                     	;# 
  5337  0715                     	;# 
  5338  0716                     	;# 
  5339  0717                     	;# 
  5340  0718                     	;# 
  5341  0719                     	;# 
  5342  0891                     	;# 
  5343  0891                     	;# 
  5344  0891                     	;# 
  5345  0891                     	;# 
  5346  0891                     	;# 
  5347  0891                     	;# 
  5348  0892                     	;# 
  5349  0892                     	;# 
  5350  0892                     	;# 
  5351  0893                     	;# 
  5352  0893                     	;# 
  5353  0893                     	;# 
  5354  0893                     	;# 
  5355  0893                     	;# 
  5356  0893                     	;# 
  5357  0894                     	;# 
  5358  0894                     	;# 
  5359  0894                     	;# 
  5360  0895                     	;# 
  5361  0895                     	;# 
  5362  0895                     	;# 
  5363  0896                     	;# 
  5364  0896                     	;# 
  5365  0896                     	;# 
  5366  089B                     	;# 
  5367  0911                     	;# 
  5368  0912                     	;# 
  5369  0913                     	;# 
  5370  0914                     	;# 
  5371  0915                     	;# 
  5372  0916                     	;# 
  5373  0918                     	;# 
  5374  0919                     	;# 
  5375  091A                     	;# 
  5376  091B                     	;# 
  5377  091C                     	;# 
  5378  091D                     	;# 
  5379  091E                     	;# 
  5380  091F                     	;# 
  5381  0E0F                     	;# 
  5382  0E10                     	;# 
  5383  0E11                     	;# 
  5384  0E12                     	;# 
  5385  0E13                     	;# 
  5386  0E14                     	;# 
  5387  0E15                     	;# 
  5388  0E16                     	;# 
  5389  0E17                     	;# 
  5390  0E18                     	;# 
  5391  0E19                     	;# 
  5392  0E1A                     	;# 
  5393  0E1B                     	;# 
  5394  0E1C                     	;# 
  5395  0E1D                     	;# 
  5396  0E1E                     	;# 
  5397  0E1F                     	;# 
  5398  0E20                     	;# 
  5399  0E21                     	;# 
  5400  0E22                     	;# 
  5401  0E24                     	;# 
  5402  0E25                     	;# 
  5403  0E28                     	;# 
  5404  0E29                     	;# 
  5405  0E2A                     	;# 
  5406  0E2B                     	;# 
  5407  0E2C                     	;# 
  5408  0E2D                     	;# 
  5409  0E2E                     	;# 
  5410  0E2F                     	;# 
  5411  0E90                     	;# 
  5412  0E91                     	;# 
  5413  0E92                     	;# 
  5414  0E94                     	;# 
  5415  0E95                     	;# 
  5416  0E9C                     	;# 
  5417  0E9D                     	;# 
  5418  0E9E                     	;# 
  5419  0E9F                     	;# 
  5420  0EA0                     	;# 
  5421  0EA1                     	;# 
  5422  0EA2                     	;# 
  5423  0EA3                     	;# 
  5424  0EA4                     	;# 
  5425  0EA5                     	;# 
  5426  0EA6                     	;# 
  5427  0EA7                     	;# 
  5428  0F0F                     	;# 
  5429  0F10                     	;# 
  5430  0F11                     	;# 
  5431  0F12                     	;# 
  5432  0F13                     	;# 
  5433  0F14                     	;# 
  5434  0F15                     	;# 
  5435  0F16                     	;# 
  5436  0F17                     	;# 
  5437  0F18                     	;# 
  5438  0F19                     	;# 
  5439  0F1A                     	;# 
  5440  0F1B                     	;# 
  5441  0F1C                     	;# 
  5442  0F1D                     	;# 
  5443  0F1E                     	;# 
  5444  0F1F                     	;# 
  5445  0F20                     	;# 
  5446  0F21                     	;# 
  5447  0F22                     	;# 
  5448  0F23                     	;# 
  5449  0F24                     	;# 
  5450  0F25                     	;# 
  5451  0F26                     	;# 
  5452  0F27                     	;# 
  5453  0F28                     	;# 
  5454  0F29                     	;# 
  5455  0F2A                     	;# 
  5456  0F2B                     	;# 
  5457  0F2C                     	;# 
  5458  0F2D                     	;# 
  5459  0F2E                     	;# 
  5460  0F2F                     	;# 
  5461  0F30                     	;# 
  5462  0F31                     	;# 
  5463  0F32                     	;# 
  5464  0F33                     	;# 
  5465  0F34                     	;# 
  5466  0F35                     	;# 
  5467  0F36                     	;# 
  5468  0F37                     	;# 
  5469  0FE4                     	;# 
  5470  0FE5                     	;# 
  5471  0FE6                     	;# 
  5472  0FE7                     	;# 
  5473  0FE8                     	;# 
  5474  0FE9                     	;# 
  5475  0FEA                     	;# 
  5476  0FEB                     	;# 
  5477  0FED                     	;# 
  5478  0FEE                     	;# 
  5479  0FEF                     	;# 
  5480  0000                     	;# 
  5481  0001                     	;# 
  5482  0002                     	;# 
  5483  0003                     	;# 
  5484  0004                     	;# 
  5485  0005                     	;# 
  5486  0006                     	;# 
  5487  0007                     	;# 
  5488  0008                     	;# 
  5489  0009                     	;# 
  5490  000A                     	;# 
  5491  000B                     	;# 
  5492  000C                     	;# 
  5493  000D                     	;# 
  5494  000E                     	;# 
  5495  0010                     	;# 
  5496  0011                     	;# 
  5497  0012                     	;# 
  5498  0013                     	;# 
  5499  0014                     	;# 
  5500  0015                     	;# 
  5501  0015                     	;# 
  5502  0016                     	;# 
  5503  0016                     	;# 
  5504  0017                     	;# 
  5505  0018                     	;# 
  5506  0019                     	;# 
  5507  0019                     	;# 
  5508  001A                     	;# 
  5509  001B                     	;# 
  5510  001C                     	;# 
  5511  001D                     	;# 
  5512  001E                     	;# 
  5513  001F                     	;# 
  5514  008C                     	;# 
  5515  008D                     	;# 
  5516  008E                     	;# 
  5517  0090                     	;# 
  5518  0091                     	;# 
  5519  0092                     	;# 
  5520  0093                     	;# 
  5521  0094                     	;# 
  5522  0097                     	;# 
  5523  009B                     	;# 
  5524  009B                     	;# 
  5525  009C                     	;# 
  5526  009D                     	;# 
  5527  009E                     	;# 
  5528  009F                     	;# 
  5529  010C                     	;# 
  5530  010D                     	;# 
  5531  010E                     	;# 
  5532  0111                     	;# 
  5533  0112                     	;# 
  5534  0113                     	;# 
  5535  0114                     	;# 
  5536  0115                     	;# 
  5537  0116                     	;# 
  5538  0117                     	;# 
  5539  0118                     	;# 
  5540  0119                     	;# 
  5541  018C                     	;# 
  5542  018D                     	;# 
  5543  018E                     	;# 
  5544  0199                     	;# 
  5545  0199                     	;# 
  5546  0199                     	;# 
  5547  019A                     	;# 
  5548  019A                     	;# 
  5549  019A                     	;# 
  5550  019B                     	;# 
  5551  019B                     	;# 
  5552  019B                     	;# 
  5553  019B                     	;# 
  5554  019B                     	;# 
  5555  019C                     	;# 
  5556  019C                     	;# 
  5557  019C                     	;# 
  5558  019D                     	;# 
  5559  019D                     	;# 
  5560  019D                     	;# 
  5561  019E                     	;# 
  5562  019E                     	;# 
  5563  019E                     	;# 
  5564  019F                     	;# 
  5565  019F                     	;# 
  5566  019F                     	;# 
  5567  019F                     	;# 
  5568  019F                     	;# 
  5569  020C                     	;# 
  5570  020D                     	;# 
  5571  020E                     	;# 
  5572  0211                     	;# 
  5573  0211                     	;# 
  5574  0212                     	;# 
  5575  0212                     	;# 
  5576  0213                     	;# 
  5577  0213                     	;# 
  5578  0214                     	;# 
  5579  0214                     	;# 
  5580  0215                     	;# 
  5581  0215                     	;# 
  5582  0215                     	;# 
  5583  0215                     	;# 
  5584  0216                     	;# 
  5585  0216                     	;# 
  5586  0217                     	;# 
  5587  0217                     	;# 
  5588  0219                     	;# 
  5589  021A                     	;# 
  5590  021B                     	;# 
  5591  021C                     	;# 
  5592  021D                     	;# 
  5593  021D                     	;# 
  5594  021E                     	;# 
  5595  021F                     	;# 
  5596  028C                     	;# 
  5597  028D                     	;# 
  5598  028E                     	;# 
  5599  0291                     	;# 
  5600  0291                     	;# 
  5601  0292                     	;# 
  5602  0293                     	;# 
  5603  0294                     	;# 
  5604  0295                     	;# 
  5605  0295                     	;# 
  5606  0296                     	;# 
  5607  0297                     	;# 
  5608  0298                     	;# 
  5609  029F                     	;# 
  5610  030C                     	;# 
  5611  030D                     	;# 
  5612  030E                     	;# 
  5613  0311                     	;# 
  5614  0311                     	;# 
  5615  0312                     	;# 
  5616  0313                     	;# 
  5617  0314                     	;# 
  5618  0315                     	;# 
  5619  0315                     	;# 
  5620  0316                     	;# 
  5621  0317                     	;# 
  5622  0318                     	;# 
  5623  038C                     	;# 
  5624  038D                     	;# 
  5625  038E                     	;# 
  5626  0391                     	;# 
  5627  0392                     	;# 
  5628  0393                     	;# 
  5629  0394                     	;# 
  5630  0395                     	;# 
  5631  0396                     	;# 
  5632  0397                     	;# 
  5633  0398                     	;# 
  5634  0399                     	;# 
  5635  039A                     	;# 
  5636  039C                     	;# 
  5637  039D                     	;# 
  5638  039E                     	;# 
  5639  039F                     	;# 
  5640  0411                     	;# 
  5641  0411                     	;# 
  5642  0412                     	;# 
  5643  0413                     	;# 
  5644  0414                     	;# 
  5645  0415                     	;# 
  5646  0416                     	;# 
  5647  0417                     	;# 
  5648  0418                     	;# 
  5649  0418                     	;# 
  5650  0419                     	;# 
  5651  041A                     	;# 
  5652  041B                     	;# 
  5653  041C                     	;# 
  5654  041D                     	;# 
  5655  041E                     	;# 
  5656  041F                     	;# 
  5657  0498                     	;# 
  5658  0498                     	;# 
  5659  0499                     	;# 
  5660  049A                     	;# 
  5661  049B                     	;# 
  5662  049B                     	;# 
  5663  049C                     	;# 
  5664  049D                     	;# 
  5665  049E                     	;# 
  5666  049F                     	;# 
  5667  0617                     	;# 
  5668  0618                     	;# 
  5669  0619                     	;# 
  5670  0619                     	;# 
  5671  061A                     	;# 
  5672  061B                     	;# 
  5673  061C                     	;# 
  5674  061C                     	;# 
  5675  061F                     	;# 
  5676  0691                     	;# 
  5677  0692                     	;# 
  5678  0693                     	;# 
  5679  0694                     	;# 
  5680  0695                     	;# 
  5681  0696                     	;# 
  5682  0697                     	;# 
  5683  0698                     	;# 
  5684  0699                     	;# 
  5685  0711                     	;# 
  5686  0712                     	;# 
  5687  0713                     	;# 
  5688  0714                     	;# 
  5689  0715                     	;# 
  5690  0716                     	;# 
  5691  0717                     	;# 
  5692  0718                     	;# 
  5693  0719                     	;# 
  5694  0891                     	;# 
  5695  0891                     	;# 
  5696  0891                     	;# 
  5697  0891                     	;# 
  5698  0891                     	;# 
  5699  0891                     	;# 
  5700  0892                     	;# 
  5701  0892                     	;# 
  5702  0892                     	;# 
  5703  0893                     	;# 
  5704  0893                     	;# 
  5705  0893                     	;# 
  5706  0893                     	;# 
  5707  0893                     	;# 
  5708  0893                     	;# 
  5709  0894                     	;# 
  5710  0894                     	;# 
  5711  0894                     	;# 
  5712  0895                     	;# 
  5713  0895                     	;# 
  5714  0895                     	;# 
  5715  0896                     	;# 
  5716  0896                     	;# 
  5717  0896                     	;# 
  5718  089B                     	;# 
  5719  0911                     	;# 
  5720  0912                     	;# 
  5721  0913                     	;# 
  5722  0914                     	;# 
  5723  0915                     	;# 
  5724  0916                     	;# 
  5725  0918                     	;# 
  5726  0919                     	;# 
  5727  091A                     	;# 
  5728  091B                     	;# 
  5729  091C                     	;# 
  5730  091D                     	;# 
  5731  091E                     	;# 
  5732  091F                     	;# 
  5733  0E0F                     	;# 
  5734  0E10                     	;# 
  5735  0E11                     	;# 
  5736  0E12                     	;# 
  5737  0E13                     	;# 
  5738  0E14                     	;# 
  5739  0E15                     	;# 
  5740  0E16                     	;# 
  5741  0E17                     	;# 
  5742  0E18                     	;# 
  5743  0E19                     	;# 
  5744  0E1A                     	;# 
  5745  0E1B                     	;# 
  5746  0E1C                     	;# 
  5747  0E1D                     	;# 
  5748  0E1E                     	;# 
  5749  0E1F                     	;# 
  5750  0E20                     	;# 
  5751  0E21                     	;# 
  5752  0E22                     	;# 
  5753  0E24                     	;# 
  5754  0E25                     	;# 
  5755  0E28                     	;# 
  5756  0E29                     	;# 
  5757  0E2A                     	;# 
  5758  0E2B                     	;# 
  5759  0E2C                     	;# 
  5760  0E2D                     	;# 
  5761  0E2E                     	;# 
  5762  0E2F                     	;# 
  5763  0E90                     	;# 
  5764  0E91                     	;# 
  5765  0E92                     	;# 
  5766  0E94                     	;# 
  5767  0E95                     	;# 
  5768  0E9C                     	;# 
  5769  0E9D                     	;# 
  5770  0E9E                     	;# 
  5771  0E9F                     	;# 
  5772  0EA0                     	;# 
  5773  0EA1                     	;# 
  5774  0EA2                     	;# 
  5775  0EA3                     	;# 
  5776  0EA4                     	;# 
  5777  0EA5                     	;# 
  5778  0EA6                     	;# 
  5779  0EA7                     	;# 
  5780  0F0F                     	;# 
  5781  0F10                     	;# 
  5782  0F11                     	;# 
  5783  0F12                     	;# 
  5784  0F13                     	;# 
  5785  0F14                     	;# 
  5786  0F15                     	;# 
  5787  0F16                     	;# 
  5788  0F17                     	;# 
  5789  0F18                     	;# 
  5790  0F19                     	;# 
  5791  0F1A                     	;# 
  5792  0F1B                     	;# 
  5793  0F1C                     	;# 
  5794  0F1D                     	;# 
  5795  0F1E                     	;# 
  5796  0F1F                     	;# 
  5797  0F20                     	;# 
  5798  0F21                     	;# 
  5799  0F22                     	;# 
  5800  0F23                     	;# 
  5801  0F24                     	;# 
  5802  0F25                     	;# 
  5803  0F26                     	;# 
  5804  0F27                     	;# 
  5805  0F28                     	;# 
  5806  0F29                     	;# 
  5807  0F2A                     	;# 
  5808  0F2B                     	;# 
  5809  0F2C                     	;# 
  5810  0F2D                     	;# 
  5811  0F2E                     	;# 
  5812  0F2F                     	;# 
  5813  0F30                     	;# 
  5814  0F31                     	;# 
  5815  0F32                     	;# 
  5816  0F33                     	;# 
  5817  0F34                     	;# 
  5818  0F35                     	;# 
  5819  0F36                     	;# 
  5820  0F37                     	;# 
  5821  0FE4                     	;# 
  5822  0FE5                     	;# 
  5823  0FE6                     	;# 
  5824  0FE7                     	;# 
  5825  0FE8                     	;# 
  5826  0FE9                     	;# 
  5827  0FEA                     	;# 
  5828  0FEB                     	;# 
  5829  0FED                     	;# 
  5830  0FEE                     	;# 
  5831  0FEF                     	;# 
  5832  0000                     	;# 
  5833  0001                     	;# 
  5834  0002                     	;# 
  5835  0003                     	;# 
  5836  0004                     	;# 
  5837  0005                     	;# 
  5838  0006                     	;# 
  5839  0007                     	;# 
  5840  0008                     	;# 
  5841  0009                     	;# 
  5842  000A                     	;# 
  5843  000B                     	;# 
  5844  000C                     	;# 
  5845  000D                     	;# 
  5846  000E                     	;# 
  5847  0010                     	;# 
  5848  0011                     	;# 
  5849  0012                     	;# 
  5850  0013                     	;# 
  5851  0014                     	;# 
  5852  0015                     	;# 
  5853  0015                     	;# 
  5854  0016                     	;# 
  5855  0016                     	;# 
  5856  0017                     	;# 
  5857  0018                     	;# 
  5858  0019                     	;# 
  5859  0019                     	;# 
  5860  001A                     	;# 
  5861  001B                     	;# 
  5862  001C                     	;# 
  5863  001D                     	;# 
  5864  001E                     	;# 
  5865  001F                     	;# 
  5866  008C                     	;# 
  5867  008D                     	;# 
  5868  008E                     	;# 
  5869  0090                     	;# 
  5870  0091                     	;# 
  5871  0092                     	;# 
  5872  0093                     	;# 
  5873  0094                     	;# 
  5874  0097                     	;# 
  5875  009B                     	;# 
  5876  009B                     	;# 
  5877  009C                     	;# 
  5878  009D                     	;# 
  5879  009E                     	;# 
  5880  009F                     	;# 
  5881  010C                     	;# 
  5882  010D                     	;# 
  5883  010E                     	;# 
  5884  0111                     	;# 
  5885  0112                     	;# 
  5886  0113                     	;# 
  5887  0114                     	;# 
  5888  0115                     	;# 
  5889  0116                     	;# 
  5890  0117                     	;# 
  5891  0118                     	;# 
  5892  0119                     	;# 
  5893  018C                     	;# 
  5894  018D                     	;# 
  5895  018E                     	;# 
  5896  0199                     	;# 
  5897  0199                     	;# 
  5898  0199                     	;# 
  5899  019A                     	;# 
  5900  019A                     	;# 
  5901  019A                     	;# 
  5902  019B                     	;# 
  5903  019B                     	;# 
  5904  019B                     	;# 
  5905  019B                     	;# 
  5906  019B                     	;# 
  5907  019C                     	;# 
  5908  019C                     	;# 
  5909  019C                     	;# 
  5910  019D                     	;# 
  5911  019D                     	;# 
  5912  019D                     	;# 
  5913  019E                     	;# 
  5914  019E                     	;# 
  5915  019E                     	;# 
  5916  019F                     	;# 
  5917  019F                     	;# 
  5918  019F                     	;# 
  5919  019F                     	;# 
  5920  019F                     	;# 
  5921  020C                     	;# 
  5922  020D                     	;# 
  5923  020E                     	;# 
  5924  0211                     	;# 
  5925  0211                     	;# 
  5926  0212                     	;# 
  5927  0212                     	;# 
  5928  0213                     	;# 
  5929  0213                     	;# 
  5930  0214                     	;# 
  5931  0214                     	;# 
  5932  0215                     	;# 
  5933  0215                     	;# 
  5934  0215                     	;# 
  5935  0215                     	;# 
  5936  0216                     	;# 
  5937  0216                     	;# 
  5938  0217                     	;# 
  5939  0217                     	;# 
  5940  0219                     	;# 
  5941  021A                     	;# 
  5942  021B                     	;# 
  5943  021C                     	;# 
  5944  021D                     	;# 
  5945  021D                     	;# 
  5946  021E                     	;# 
  5947  021F                     	;# 
  5948  028C                     	;# 
  5949  028D                     	;# 
  5950  028E                     	;# 
  5951  0291                     	;# 
  5952  0291                     	;# 
  5953  0292                     	;# 
  5954  0293                     	;# 
  5955  0294                     	;# 
  5956  0295                     	;# 
  5957  0295                     	;# 
  5958  0296                     	;# 
  5959  0297                     	;# 
  5960  0298                     	;# 
  5961  029F                     	;# 
  5962  030C                     	;# 
  5963  030D                     	;# 
  5964  030E                     	;# 
  5965  0311                     	;# 
  5966  0311                     	;# 
  5967  0312                     	;# 
  5968  0313                     	;# 
  5969  0314                     	;# 
  5970  0315                     	;# 
  5971  0315                     	;# 
  5972  0316                     	;# 
  5973  0317                     	;# 
  5974  0318                     	;# 
  5975  038C                     	;# 
  5976  038D                     	;# 
  5977  038E                     	;# 
  5978  0391                     	;# 
  5979  0392                     	;# 
  5980  0393                     	;# 
  5981  0394                     	;# 
  5982  0395                     	;# 
  5983  0396                     	;# 
  5984  0397                     	;# 
  5985  0398                     	;# 
  5986  0399                     	;# 
  5987  039A                     	;# 
  5988  039C                     	;# 
  5989  039D                     	;# 
  5990  039E                     	;# 
  5991  039F                     	;# 
  5992  0411                     	;# 
  5993  0411                     	;# 
  5994  0412                     	;# 
  5995  0413                     	;# 
  5996  0414                     	;# 
  5997  0415                     	;# 
  5998  0416                     	;# 
  5999  0417                     	;# 
  6000  0418                     	;# 
  6001  0418                     	;# 
  6002  0419                     	;# 
  6003  041A                     	;# 
  6004  041B                     	;# 
  6005  041C                     	;# 
  6006  041D                     	;# 
  6007  041E                     	;# 
  6008  041F                     	;# 
  6009  0498                     	;# 
  6010  0498                     	;# 
  6011  0499                     	;# 
  6012  049A                     	;# 
  6013  049B                     	;# 
  6014  049B                     	;# 
  6015  049C                     	;# 
  6016  049D                     	;# 
  6017  049E                     	;# 
  6018  049F                     	;# 
  6019  0617                     	;# 
  6020  0618                     	;# 
  6021  0619                     	;# 
  6022  0619                     	;# 
  6023  061A                     	;# 
  6024  061B                     	;# 
  6025  061C                     	;# 
  6026  061C                     	;# 
  6027  061F                     	;# 
  6028  0691                     	;# 
  6029  0692                     	;# 
  6030  0693                     	;# 
  6031  0694                     	;# 
  6032  0695                     	;# 
  6033  0696                     	;# 
  6034  0697                     	;# 
  6035  0698                     	;# 
  6036  0699                     	;# 
  6037  0711                     	;# 
  6038  0712                     	;# 
  6039  0713                     	;# 
  6040  0714                     	;# 
  6041  0715                     	;# 
  6042  0716                     	;# 
  6043  0717                     	;# 
  6044  0718                     	;# 
  6045  0719                     	;# 
  6046  0891                     	;# 
  6047  0891                     	;# 
  6048  0891                     	;# 
  6049  0891                     	;# 
  6050  0891                     	;# 
  6051  0891                     	;# 
  6052  0892                     	;# 
  6053  0892                     	;# 
  6054  0892                     	;# 
  6055  0893                     	;# 
  6056  0893                     	;# 
  6057  0893                     	;# 
  6058  0893                     	;# 
  6059  0893                     	;# 
  6060  0893                     	;# 
  6061  0894                     	;# 
  6062  0894                     	;# 
  6063  0894                     	;# 
  6064  0895                     	;# 
  6065  0895                     	;# 
  6066  0895                     	;# 
  6067  0896                     	;# 
  6068  0896                     	;# 
  6069  0896                     	;# 
  6070  089B                     	;# 
  6071  0911                     	;# 
  6072  0912                     	;# 
  6073  0913                     	;# 
  6074  0914                     	;# 
  6075  0915                     	;# 
  6076  0916                     	;# 
  6077  0918                     	;# 
  6078  0919                     	;# 
  6079  091A                     	;# 
  6080  091B                     	;# 
  6081  091C                     	;# 
  6082  091D                     	;# 
  6083  091E                     	;# 
  6084  091F                     	;# 
  6085  0E0F                     	;# 
  6086  0E10                     	;# 
  6087  0E11                     	;# 
  6088  0E12                     	;# 
  6089  0E13                     	;# 
  6090  0E14                     	;# 
  6091  0E15                     	;# 
  6092  0E16                     	;# 
  6093  0E17                     	;# 
  6094  0E18                     	;# 
  6095  0E19                     	;# 
  6096  0E1A                     	;# 
  6097  0E1B                     	;# 
  6098  0E1C                     	;# 
  6099  0E1D                     	;# 
  6100  0E1E                     	;# 
  6101  0E1F                     	;# 
  6102  0E20                     	;# 
  6103  0E21                     	;# 
  6104  0E22                     	;# 
  6105  0E24                     	;# 
  6106  0E25                     	;# 
  6107  0E28                     	;# 
  6108  0E29                     	;# 
  6109  0E2A                     	;# 
  6110  0E2B                     	;# 
  6111  0E2C                     	;# 
  6112  0E2D                     	;# 
  6113  0E2E                     	;# 
  6114  0E2F                     	;# 
  6115  0E90                     	;# 
  6116  0E91                     	;# 
  6117  0E92                     	;# 
  6118  0E94                     	;# 
  6119  0E95                     	;# 
  6120  0E9C                     	;# 
  6121  0E9D                     	;# 
  6122  0E9E                     	;# 
  6123  0E9F                     	;# 
  6124  0EA0                     	;# 
  6125  0EA1                     	;# 
  6126  0EA2                     	;# 
  6127  0EA3                     	;# 
  6128  0EA4                     	;# 
  6129  0EA5                     	;# 
  6130  0EA6                     	;# 
  6131  0EA7                     	;# 
  6132  0F0F                     	;# 
  6133  0F10                     	;# 
  6134  0F11                     	;# 
  6135  0F12                     	;# 
  6136  0F13                     	;# 
  6137  0F14                     	;# 
  6138  0F15                     	;# 
  6139  0F16                     	;# 
  6140  0F17                     	;# 
  6141  0F18                     	;# 
  6142  0F19                     	;# 
  6143  0F1A                     	;# 
  6144  0F1B                     	;# 
  6145  0F1C                     	;# 
  6146  0F1D                     	;# 
  6147  0F1E                     	;# 
  6148  0F1F                     	;# 
  6149  0F20                     	;# 
  6150  0F21                     	;# 
  6151  0F22                     	;# 
  6152  0F23                     	;# 
  6153  0F24                     	;# 
  6154  0F25                     	;# 
  6155  0F26                     	;# 
  6156  0F27                     	;# 
  6157  0F28                     	;# 
  6158  0F29                     	;# 
  6159  0F2A                     	;# 
  6160  0F2B                     	;# 
  6161  0F2C                     	;# 
  6162  0F2D                     	;# 
  6163  0F2E                     	;# 
  6164  0F2F                     	;# 
  6165  0F30                     	;# 
  6166  0F31                     	;# 
  6167  0F32                     	;# 
  6168  0F33                     	;# 
  6169  0F34                     	;# 
  6170  0F35                     	;# 
  6171  0F36                     	;# 
  6172  0F37                     	;# 
  6173  0FE4                     	;# 
  6174  0FE5                     	;# 
  6175  0FE6                     	;# 
  6176  0FE7                     	;# 
  6177  0FE8                     	;# 
  6178  0FE9                     	;# 
  6179  0FEA                     	;# 
  6180  0FEB                     	;# 
  6181  0FED                     	;# 
  6182  0FEE                     	;# 
  6183  0FEF                     	;# 
  6184  0000                     	;# 
  6185  0001                     	;# 
  6186  0002                     	;# 
  6187  0003                     	;# 
  6188  0004                     	;# 
  6189  0005                     	;# 
  6190  0006                     	;# 
  6191  0007                     	;# 
  6192  0008                     	;# 
  6193  0009                     	;# 
  6194  000A                     	;# 
  6195  000B                     	;# 
  6196  000C                     	;# 
  6197  000D                     	;# 
  6198  000E                     	;# 
  6199  0010                     	;# 
  6200  0011                     	;# 
  6201  0012                     	;# 
  6202  0013                     	;# 
  6203  0014                     	;# 
  6204  0015                     	;# 
  6205  0015                     	;# 
  6206  0016                     	;# 
  6207  0016                     	;# 
  6208  0017                     	;# 
  6209  0018                     	;# 
  6210  0019                     	;# 
  6211  0019                     	;# 
  6212  001A                     	;# 
  6213  001B                     	;# 
  6214  001C                     	;# 
  6215  001D                     	;# 
  6216  001E                     	;# 
  6217  001F                     	;# 
  6218  008C                     	;# 
  6219  008D                     	;# 
  6220  008E                     	;# 
  6221  0090                     	;# 
  6222  0091                     	;# 
  6223  0092                     	;# 
  6224  0093                     	;# 
  6225  0094                     	;# 
  6226  0097                     	;# 
  6227  009B                     	;# 
  6228  009B                     	;# 
  6229  009C                     	;# 
  6230  009D                     	;# 
  6231  009E                     	;# 
  6232  009F                     	;# 
  6233  010C                     	;# 
  6234  010D                     	;# 
  6235  010E                     	;# 
  6236  0111                     	;# 
  6237  0112                     	;# 
  6238  0113                     	;# 
  6239  0114                     	;# 
  6240  0115                     	;# 
  6241  0116                     	;# 
  6242  0117                     	;# 
  6243  0118                     	;# 
  6244  0119                     	;# 
  6245  018C                     	;# 
  6246  018D                     	;# 
  6247  018E                     	;# 
  6248  0199                     	;# 
  6249  0199                     	;# 
  6250  0199                     	;# 
  6251  019A                     	;# 
  6252  019A                     	;# 
  6253  019A                     	;# 
  6254  019B                     	;# 
  6255  019B                     	;# 
  6256  019B                     	;# 
  6257  019B                     	;# 
  6258  019B                     	;# 
  6259  019C                     	;# 
  6260  019C                     	;# 
  6261  019C                     	;# 
  6262  019D                     	;# 
  6263  019D                     	;# 
  6264  019D                     	;# 
  6265  019E                     	;# 
  6266  019E                     	;# 
  6267  019E                     	;# 
  6268  019F                     	;# 
  6269  019F                     	;# 
  6270  019F                     	;# 
  6271  019F                     	;# 
  6272  019F                     	;# 
  6273  020C                     	;# 
  6274  020D                     	;# 
  6275  020E                     	;# 
  6276  0211                     	;# 
  6277  0211                     	;# 
  6278  0212                     	;# 
  6279  0212                     	;# 
  6280  0213                     	;# 
  6281  0213                     	;# 
  6282  0214                     	;# 
  6283  0214                     	;# 
  6284  0215                     	;# 
  6285  0215                     	;# 
  6286  0215                     	;# 
  6287  0215                     	;# 
  6288  0216                     	;# 
  6289  0216                     	;# 
  6290  0217                     	;# 
  6291  0217                     	;# 
  6292  0219                     	;# 
  6293  021A                     	;# 
  6294  021B                     	;# 
  6295  021C                     	;# 
  6296  021D                     	;# 
  6297  021D                     	;# 
  6298  021E                     	;# 
  6299  021F                     	;# 
  6300  028C                     	;# 
  6301  028D                     	;# 
  6302  028E                     	;# 
  6303  0291                     	;# 
  6304  0291                     	;# 
  6305  0292                     	;# 
  6306  0293                     	;# 
  6307  0294                     	;# 
  6308  0295                     	;# 
  6309  0295                     	;# 
  6310  0296                     	;# 
  6311  0297                     	;# 
  6312  0298                     	;# 
  6313  029F                     	;# 
  6314  030C                     	;# 
  6315  030D                     	;# 
  6316  030E                     	;# 
  6317  0311                     	;# 
  6318  0311                     	;# 
  6319  0312                     	;# 
  6320  0313                     	;# 
  6321  0314                     	;# 
  6322  0315                     	;# 
  6323  0315                     	;# 
  6324  0316                     	;# 
  6325  0317                     	;# 
  6326  0318                     	;# 
  6327  038C                     	;# 
  6328  038D                     	;# 
  6329  038E                     	;# 
  6330  0391                     	;# 
  6331  0392                     	;# 
  6332  0393                     	;# 
  6333  0394                     	;# 
  6334  0395                     	;# 
  6335  0396                     	;# 
  6336  0397                     	;# 
  6337  0398                     	;# 
  6338  0399                     	;# 
  6339  039A                     	;# 
  6340  039C                     	;# 
  6341  039D                     	;# 
  6342  039E                     	;# 
  6343  039F                     	;# 
  6344  0411                     	;# 
  6345  0411                     	;# 
  6346  0412                     	;# 
  6347  0413                     	;# 
  6348  0414                     	;# 
  6349  0415                     	;# 
  6350  0416                     	;# 
  6351  0417                     	;# 
  6352  0418                     	;# 
  6353  0418                     	;# 
  6354  0419                     	;# 
  6355  041A                     	;# 
  6356  041B                     	;# 
  6357  041C                     	;# 
  6358  041D                     	;# 
  6359  041E                     	;# 
  6360  041F                     	;# 
  6361  0498                     	;# 
  6362  0498                     	;# 
  6363  0499                     	;# 
  6364  049A                     	;# 
  6365  049B                     	;# 
  6366  049B                     	;# 
  6367  049C                     	;# 
  6368  049D                     	;# 
  6369  049E                     	;# 
  6370  049F                     	;# 
  6371  0617                     	;# 
  6372  0618                     	;# 
  6373  0619                     	;# 
  6374  0619                     	;# 
  6375  061A                     	;# 
  6376  061B                     	;# 
  6377  061C                     	;# 
  6378  061C                     	;# 
  6379  061F                     	;# 
  6380  0691                     	;# 
  6381  0692                     	;# 
  6382  0693                     	;# 
  6383  0694                     	;# 
  6384  0695                     	;# 
  6385  0696                     	;# 
  6386  0697                     	;# 
  6387  0698                     	;# 
  6388  0699                     	;# 
  6389  0711                     	;# 
  6390  0712                     	;# 
  6391  0713                     	;# 
  6392  0714                     	;# 
  6393  0715                     	;# 
  6394  0716                     	;# 
  6395  0717                     	;# 
  6396  0718                     	;# 
  6397  0719                     	;# 
  6398  0891                     	;# 
  6399  0891                     	;# 
  6400  0891                     	;# 
  6401  0891                     	;# 
  6402  0891                     	;# 
  6403  0891                     	;# 
  6404  0892                     	;# 
  6405  0892                     	;# 
  6406  0892                     	;# 
  6407  0893                     	;# 
  6408  0893                     	;# 
  6409  0893                     	;# 
  6410  0893                     	;# 
  6411  0893                     	;# 
  6412  0893                     	;# 
  6413  0894                     	;# 
  6414  0894                     	;# 
  6415  0894                     	;# 
  6416  0895                     	;# 
  6417  0895                     	;# 
  6418  0895                     	;# 
  6419  0896                     	;# 
  6420  0896                     	;# 
  6421  0896                     	;# 
  6422  089B                     	;# 
  6423  0911                     	;# 
  6424  0912                     	;# 
  6425  0913                     	;# 
  6426  0914                     	;# 
  6427  0915                     	;# 
  6428  0916                     	;# 
  6429  0918                     	;# 
  6430  0919                     	;# 
  6431  091A                     	;# 
  6432  091B                     	;# 
  6433  091C                     	;# 
  6434  091D                     	;# 
  6435  091E                     	;# 
  6436  091F                     	;# 
  6437  0E0F                     	;# 
  6438  0E10                     	;# 
  6439  0E11                     	;# 
  6440  0E12                     	;# 
  6441  0E13                     	;# 
  6442  0E14                     	;# 
  6443  0E15                     	;# 
  6444  0E16                     	;# 
  6445  0E17                     	;# 
  6446  0E18                     	;# 
  6447  0E19                     	;# 
  6448  0E1A                     	;# 
  6449  0E1B                     	;# 
  6450  0E1C                     	;# 
  6451  0E1D                     	;# 
  6452  0E1E                     	;# 
  6453  0E1F                     	;# 
  6454  0E20                     	;# 
  6455  0E21                     	;# 
  6456  0E22                     	;# 
  6457  0E24                     	;# 
  6458  0E25                     	;# 
  6459  0E28                     	;# 
  6460  0E29                     	;# 
  6461  0E2A                     	;# 
  6462  0E2B                     	;# 
  6463  0E2C                     	;# 
  6464  0E2D                     	;# 
  6465  0E2E                     	;# 
  6466  0E2F                     	;# 
  6467  0E90                     	;# 
  6468  0E91                     	;# 
  6469  0E92                     	;# 
  6470  0E94                     	;# 
  6471  0E95                     	;# 
  6472  0E9C                     	;# 
  6473  0E9D                     	;# 
  6474  0E9E                     	;# 
  6475  0E9F                     	;# 
  6476  0EA0                     	;# 
  6477  0EA1                     	;# 
  6478  0EA2                     	;# 
  6479  0EA3                     	;# 
  6480  0EA4                     	;# 
  6481  0EA5                     	;# 
  6482  0EA6                     	;# 
  6483  0EA7                     	;# 
  6484  0F0F                     	;# 
  6485  0F10                     	;# 
  6486  0F11                     	;# 
  6487  0F12                     	;# 
  6488  0F13                     	;# 
  6489  0F14                     	;# 
  6490  0F15                     	;# 
  6491  0F16                     	;# 
  6492  0F17                     	;# 
  6493  0F18                     	;# 
  6494  0F19                     	;# 
  6495  0F1A                     	;# 
  6496  0F1B                     	;# 
  6497  0F1C                     	;# 
  6498  0F1D                     	;# 
  6499  0F1E                     	;# 
  6500  0F1F                     	;# 
  6501  0F20                     	;# 
  6502  0F21                     	;# 
  6503  0F22                     	;# 
  6504  0F23                     	;# 
  6505  0F24                     	;# 
  6506  0F25                     	;# 
  6507  0F26                     	;# 
  6508  0F27                     	;# 
  6509  0F28                     	;# 
  6510  0F29                     	;# 
  6511  0F2A                     	;# 
  6512  0F2B                     	;# 
  6513  0F2C                     	;# 
  6514  0F2D                     	;# 
  6515  0F2E                     	;# 
  6516  0F2F                     	;# 
  6517  0F30                     	;# 
  6518  0F31                     	;# 
  6519  0F32                     	;# 
  6520  0F33                     	;# 
  6521  0F34                     	;# 
  6522  0F35                     	;# 
  6523  0F36                     	;# 
  6524  0F37                     	;# 
  6525  0FE4                     	;# 
  6526  0FE5                     	;# 
  6527  0FE6                     	;# 
  6528  0FE7                     	;# 
  6529  0FE8                     	;# 
  6530  0FE9                     	;# 
  6531  0FEA                     	;# 
  6532  0FEB                     	;# 
  6533  0FED                     	;# 
  6534  0FEE                     	;# 
  6535  0FEF                     	;# 
  6536  0000                     	;# 
  6537  0001                     	;# 
  6538  0002                     	;# 
  6539  0003                     	;# 
  6540  0004                     	;# 
  6541  0005                     	;# 
  6542  0006                     	;# 
  6543  0007                     	;# 
  6544  0008                     	;# 
  6545  0009                     	;# 
  6546  000A                     	;# 
  6547  000B                     	;# 
  6548  000C                     	;# 
  6549  000D                     	;# 
  6550  000E                     	;# 
  6551  0010                     	;# 
  6552  0011                     	;# 
  6553  0012                     	;# 
  6554  0013                     	;# 
  6555  0014                     	;# 
  6556  0015                     	;# 
  6557  0015                     	;# 
  6558  0016                     	;# 
  6559  0016                     	;# 
  6560  0017                     	;# 
  6561  0018                     	;# 
  6562  0019                     	;# 
  6563  0019                     	;# 
  6564  001A                     	;# 
  6565  001B                     	;# 
  6566  001C                     	;# 
  6567  001D                     	;# 
  6568  001E                     	;# 
  6569  001F                     	;# 
  6570  008C                     	;# 
  6571  008D                     	;# 
  6572  008E                     	;# 
  6573  0090                     	;# 
  6574  0091                     	;# 
  6575  0092                     	;# 
  6576  0093                     	;# 
  6577  0094                     	;# 
  6578  0097                     	;# 
  6579  009B                     	;# 
  6580  009B                     	;# 
  6581  009C                     	;# 
  6582  009D                     	;# 
  6583  009E                     	;# 
  6584  009F                     	;# 
  6585  010C                     	;# 
  6586  010D                     	;# 
  6587  010E                     	;# 
  6588  0111                     	;# 
  6589  0112                     	;# 
  6590  0113                     	;# 
  6591  0114                     	;# 
  6592  0115                     	;# 
  6593  0116                     	;# 
  6594  0117                     	;# 
  6595  0118                     	;# 
  6596  0119                     	;# 
  6597  018C                     	;# 
  6598  018D                     	;# 
  6599  018E                     	;# 
  6600  0199                     	;# 
  6601  0199                     	;# 
  6602  0199                     	;# 
  6603  019A                     	;# 
  6604  019A                     	;# 
  6605  019A                     	;# 
  6606  019B                     	;# 
  6607  019B                     	;# 
  6608  019B                     	;# 
  6609  019B                     	;# 
  6610  019B                     	;# 
  6611  019C                     	;# 
  6612  019C                     	;# 
  6613  019C                     	;# 
  6614  019D                     	;# 
  6615  019D                     	;# 
  6616  019D                     	;# 
  6617  019E                     	;# 
  6618  019E                     	;# 
  6619  019E                     	;# 
  6620  019F                     	;# 
  6621  019F                     	;# 
  6622  019F                     	;# 
  6623  019F                     	;# 
  6624  019F                     	;# 
  6625  020C                     	;# 
  6626  020D                     	;# 
  6627  020E                     	;# 
  6628  0211                     	;# 
  6629  0211                     	;# 
  6630  0212                     	;# 
  6631  0212                     	;# 
  6632  0213                     	;# 
  6633  0213                     	;# 
  6634  0214                     	;# 
  6635  0214                     	;# 
  6636  0215                     	;# 
  6637  0215                     	;# 
  6638  0215                     	;# 
  6639  0215                     	;# 
  6640  0216                     	;# 
  6641  0216                     	;# 
  6642  0217                     	;# 
  6643  0217                     	;# 
  6644  0219                     	;# 
  6645  021A                     	;# 
  6646  021B                     	;# 
  6647  021C                     	;# 
  6648  021D                     	;# 
  6649  021D                     	;# 
  6650  021E                     	;# 
  6651  021F                     	;# 
  6652  028C                     	;# 
  6653  028D                     	;# 
  6654  028E                     	;# 
  6655  0291                     	;# 
  6656  0291                     	;# 
  6657  0292                     	;# 
  6658  0293                     	;# 
  6659  0294                     	;# 
  6660  0295                     	;# 
  6661  0295                     	;# 
  6662  0296                     	;# 
  6663  0297                     	;# 
  6664  0298                     	;# 
  6665  029F                     	;# 
  6666  030C                     	;# 
  6667  030D                     	;# 
  6668  030E                     	;# 
  6669  0311                     	;# 
  6670  0311                     	;# 
  6671  0312                     	;# 
  6672  0313                     	;# 
  6673  0314                     	;# 
  6674  0315                     	;# 
  6675  0315                     	;# 
  6676  0316                     	;# 
  6677  0317                     	;# 
  6678  0318                     	;# 
  6679  038C                     	;# 
  6680  038D                     	;# 
  6681  038E                     	;# 
  6682  0391                     	;# 
  6683  0392                     	;# 
  6684  0393                     	;# 
  6685  0394                     	;# 
  6686  0395                     	;# 
  6687  0396                     	;# 
  6688  0397                     	;# 
  6689  0398                     	;# 
  6690  0399                     	;# 
  6691  039A                     	;# 
  6692  039C                     	;# 
  6693  039D                     	;# 
  6694  039E                     	;# 
  6695  039F                     	;# 
  6696  0411                     	;# 
  6697  0411                     	;# 
  6698  0412                     	;# 
  6699  0413                     	;# 
  6700  0414                     	;# 
  6701  0415                     	;# 
  6702  0416                     	;# 
  6703  0417                     	;# 
  6704  0418                     	;# 
  6705  0418                     	;# 
  6706  0419                     	;# 
  6707  041A                     	;# 
  6708  041B                     	;# 
  6709  041C                     	;# 
  6710  041D                     	;# 
  6711  041E                     	;# 
  6712  041F                     	;# 
  6713  0498                     	;# 
  6714  0498                     	;# 
  6715  0499                     	;# 
  6716  049A                     	;# 
  6717  049B                     	;# 
  6718  049B                     	;# 
  6719  049C                     	;# 
  6720  049D                     	;# 
  6721  049E                     	;# 
  6722  049F                     	;# 
  6723  0617                     	;# 
  6724  0618                     	;# 
  6725  0619                     	;# 
  6726  0619                     	;# 
  6727  061A                     	;# 
  6728  061B                     	;# 
  6729  061C                     	;# 
  6730  061C                     	;# 
  6731  061F                     	;# 
  6732  0691                     	;# 
  6733  0692                     	;# 
  6734  0693                     	;# 
  6735  0694                     	;# 
  6736  0695                     	;# 
  6737  0696                     	;# 
  6738  0697                     	;# 
  6739  0698                     	;# 
  6740  0699                     	;# 
  6741  0711                     	;# 
  6742  0712                     	;# 
  6743  0713                     	;# 
  6744  0714                     	;# 
  6745  0715                     	;# 
  6746  0716                     	;# 
  6747  0717                     	;# 
  6748  0718                     	;# 
  6749  0719                     	;# 
  6750  0891                     	;# 
  6751  0891                     	;# 
  6752  0891                     	;# 
  6753  0891                     	;# 
  6754  0891                     	;# 
  6755  0891                     	;# 
  6756  0892                     	;# 
  6757  0892                     	;# 
  6758  0892                     	;# 
  6759  0893                     	;# 
  6760  0893                     	;# 
  6761  0893                     	;# 
  6762  0893                     	;# 
  6763  0893                     	;# 
  6764  0893                     	;# 
  6765  0894                     	;# 
  6766  0894                     	;# 
  6767  0894                     	;# 
  6768  0895                     	;# 
  6769  0895                     	;# 
  6770  0895                     	;# 
  6771  0896                     	;# 
  6772  0896                     	;# 
  6773  0896                     	;# 
  6774  089B                     	;# 
  6775  0911                     	;# 
  6776  0912                     	;# 
  6777  0913                     	;# 
  6778  0914                     	;# 
  6779  0915                     	;# 
  6780  0916                     	;# 
  6781  0918                     	;# 
  6782  0919                     	;# 
  6783  091A                     	;# 
  6784  091B                     	;# 
  6785  091C                     	;# 
  6786  091D                     	;# 
  6787  091E                     	;# 
  6788  091F                     	;# 
  6789  0E0F                     	;# 
  6790  0E10                     	;# 
  6791  0E11                     	;# 
  6792  0E12                     	;# 
  6793  0E13                     	;# 
  6794  0E14                     	;# 
  6795  0E15                     	;# 
  6796  0E16                     	;# 
  6797  0E17                     	;# 
  6798  0E18                     	;# 
  6799  0E19                     	;# 
  6800  0E1A                     	;# 
  6801  0E1B                     	;# 
  6802  0E1C                     	;# 
  6803  0E1D                     	;# 
  6804  0E1E                     	;# 
  6805  0E1F                     	;# 
  6806  0E20                     	;# 
  6807  0E21                     	;# 
  6808  0E22                     	;# 
  6809  0E24                     	;# 
  6810  0E25                     	;# 
  6811  0E28                     	;# 
  6812  0E29                     	;# 
  6813  0E2A                     	;# 
  6814  0E2B                     	;# 
  6815  0E2C                     	;# 
  6816  0E2D                     	;# 
  6817  0E2E                     	;# 
  6818  0E2F                     	;# 
  6819  0E90                     	;# 
  6820  0E91                     	;# 
  6821  0E92                     	;# 
  6822  0E94                     	;# 
  6823  0E95                     	;# 
  6824  0E9C                     	;# 
  6825  0E9D                     	;# 
  6826  0E9E                     	;# 
  6827  0E9F                     	;# 
  6828  0EA0                     	;# 
  6829  0EA1                     	;# 
  6830  0EA2                     	;# 
  6831  0EA3                     	;# 
  6832  0EA4                     	;# 
  6833  0EA5                     	;# 
  6834  0EA6                     	;# 
  6835  0EA7                     	;# 
  6836  0F0F                     	;# 
  6837  0F10                     	;# 
  6838  0F11                     	;# 
  6839  0F12                     	;# 
  6840  0F13                     	;# 
  6841  0F14                     	;# 
  6842  0F15                     	;# 
  6843  0F16                     	;# 
  6844  0F17                     	;# 
  6845  0F18                     	;# 
  6846  0F19                     	;# 
  6847  0F1A                     	;# 
  6848  0F1B                     	;# 
  6849  0F1C                     	;# 
  6850  0F1D                     	;# 
  6851  0F1E                     	;# 
  6852  0F1F                     	;# 
  6853  0F20                     	;# 
  6854  0F21                     	;# 
  6855  0F22                     	;# 
  6856  0F23                     	;# 
  6857  0F24                     	;# 
  6858  0F25                     	;# 
  6859  0F26                     	;# 
  6860  0F27                     	;# 
  6861  0F28                     	;# 
  6862  0F29                     	;# 
  6863  0F2A                     	;# 
  6864  0F2B                     	;# 
  6865  0F2C                     	;# 
  6866  0F2D                     	;# 
  6867  0F2E                     	;# 
  6868  0F2F                     	;# 
  6869  0F30                     	;# 
  6870  0F31                     	;# 
  6871  0F32                     	;# 
  6872  0F33                     	;# 
  6873  0F34                     	;# 
  6874  0F35                     	;# 
  6875  0F36                     	;# 
  6876  0F37                     	;# 
  6877  0FE4                     	;# 
  6878  0FE5                     	;# 
  6879  0FE6                     	;# 
  6880  0FE7                     	;# 
  6881  0FE8                     	;# 
  6882  0FE9                     	;# 
  6883  0FEA                     	;# 
  6884  0FEB                     	;# 
  6885  0FED                     	;# 
  6886  0FEE                     	;# 
  6887  0FEF                     	;# 
  6888  0000                     	;# 
  6889  0001                     	;# 
  6890  0002                     	;# 
  6891  0003                     	;# 
  6892  0004                     	;# 
  6893  0005                     	;# 
  6894  0006                     	;# 
  6895  0007                     	;# 
  6896  0008                     	;# 
  6897  0009                     	;# 
  6898  000A                     	;# 
  6899  000B                     	;# 
  6900  000C                     	;# 
  6901  000D                     	;# 
  6902  000E                     	;# 
  6903  0010                     	;# 
  6904  0011                     	;# 
  6905  0012                     	;# 
  6906  0013                     	;# 
  6907  0014                     	;# 
  6908  0015                     	;# 
  6909  0015                     	;# 
  6910  0016                     	;# 
  6911  0016                     	;# 
  6912  0017                     	;# 
  6913  0018                     	;# 
  6914  0019                     	;# 
  6915  0019                     	;# 
  6916  001A                     	;# 
  6917  001B                     	;# 
  6918  001C                     	;# 
  6919  001D                     	;# 
  6920  001E                     	;# 
  6921  001F                     	;# 
  6922  008C                     	;# 
  6923  008D                     	;# 
  6924  008E                     	;# 
  6925  0090                     	;# 
  6926  0091                     	;# 
  6927  0092                     	;# 
  6928  0093                     	;# 
  6929  0094                     	;# 
  6930  0097                     	;# 
  6931  009B                     	;# 
  6932  009B                     	;# 
  6933  009C                     	;# 
  6934  009D                     	;# 
  6935  009E                     	;# 
  6936  009F                     	;# 
  6937  010C                     	;# 
  6938  010D                     	;# 
  6939  010E                     	;# 
  6940  0111                     	;# 
  6941  0112                     	;# 
  6942  0113                     	;# 
  6943  0114                     	;# 
  6944  0115                     	;# 
  6945  0116                     	;# 
  6946  0117                     	;# 
  6947  0118                     	;# 
  6948  0119                     	;# 
  6949  018C                     	;# 
  6950  018D                     	;# 
  6951  018E                     	;# 
  6952  0199                     	;# 
  6953  0199                     	;# 
  6954  0199                     	;# 
  6955  019A                     	;# 
  6956  019A                     	;# 
  6957  019A                     	;# 
  6958  019B                     	;# 
  6959  019B                     	;# 
  6960  019B                     	;# 
  6961  019B                     	;# 
  6962  019B                     	;# 
  6963  019C                     	;# 
  6964  019C                     	;# 
  6965  019C                     	;# 
  6966  019D                     	;# 
  6967  019D                     	;# 
  6968  019D                     	;# 
  6969  019E                     	;# 
  6970  019E                     	;# 
  6971  019E                     	;# 
  6972  019F                     	;# 
  6973  019F                     	;# 
  6974  019F                     	;# 
  6975  019F                     	;# 
  6976  019F                     	;# 
  6977  020C                     	;# 
  6978  020D                     	;# 
  6979  020E                     	;# 
  6980  0211                     	;# 
  6981  0211                     	;# 
  6982  0212                     	;# 
  6983  0212                     	;# 
  6984  0213                     	;# 
  6985  0213                     	;# 
  6986  0214                     	;# 
  6987  0214                     	;# 
  6988  0215                     	;# 
  6989  0215                     	;# 
  6990  0215                     	;# 
  6991  0215                     	;# 
  6992  0216                     	;# 
  6993  0216                     	;# 
  6994  0217                     	;# 
  6995  0217                     	;# 
  6996  0219                     	;# 
  6997  021A                     	;# 
  6998  021B                     	;# 
  6999  021C                     	;# 
  7000  021D                     	;# 
  7001  021D                     	;# 
  7002  021E                     	;# 
  7003  021F                     	;# 
  7004  028C                     	;# 
  7005  028D                     	;# 
  7006  028E                     	;# 
  7007  0291                     	;# 
  7008  0291                     	;# 
  7009  0292                     	;# 
  7010  0293                     	;# 
  7011  0294                     	;# 
  7012  0295                     	;# 
  7013  0295                     	;# 
  7014  0296                     	;# 
  7015  0297                     	;# 
  7016  0298                     	;# 
  7017  029F                     	;# 
  7018  030C                     	;# 
  7019  030D                     	;# 
  7020  030E                     	;# 
  7021  0311                     	;# 
  7022  0311                     	;# 
  7023  0312                     	;# 
  7024  0313                     	;# 
  7025  0314                     	;# 
  7026  0315                     	;# 
  7027  0315                     	;# 
  7028  0316                     	;# 
  7029  0317                     	;# 
  7030  0318                     	;# 
  7031  038C                     	;# 
  7032  038D                     	;# 
  7033  038E                     	;# 
  7034  0391                     	;# 
  7035  0392                     	;# 
  7036  0393                     	;# 
  7037  0394                     	;# 
  7038  0395                     	;# 
  7039  0396                     	;# 
  7040  0397                     	;# 
  7041  0398                     	;# 
  7042  0399                     	;# 
  7043  039A                     	;# 
  7044  039C                     	;# 
  7045  039D                     	;# 
  7046  039E                     	;# 
  7047  039F                     	;# 
  7048  0411                     	;# 
  7049  0411                     	;# 
  7050  0412                     	;# 
  7051  0413                     	;# 
  7052  0414                     	;# 
  7053  0415                     	;# 
  7054  0416                     	;# 
  7055  0417                     	;# 
  7056  0418                     	;# 
  7057  0418                     	;# 
  7058  0419                     	;# 
  7059  041A                     	;# 
  7060  041B                     	;# 
  7061  041C                     	;# 
  7062  041D                     	;# 
  7063  041E                     	;# 
  7064  041F                     	;# 
  7065  0498                     	;# 
  7066  0498                     	;# 
  7067  0499                     	;# 
  7068  049A                     	;# 
  7069  049B                     	;# 
  7070  049B                     	;# 
  7071  049C                     	;# 
  7072  049D                     	;# 
  7073  049E                     	;# 
  7074  049F                     	;# 
  7075  0617                     	;# 
  7076  0618                     	;# 
  7077  0619                     	;# 
  7078  0619                     	;# 
  7079  061A                     	;# 
  7080  061B                     	;# 
  7081  061C                     	;# 
  7082  061C                     	;# 
  7083  061F                     	;# 
  7084  0691                     	;# 
  7085  0692                     	;# 
  7086  0693                     	;# 
  7087  0694                     	;# 
  7088  0695                     	;# 
  7089  0696                     	;# 
  7090  0697                     	;# 
  7091  0698                     	;# 
  7092  0699                     	;# 
  7093  0711                     	;# 
  7094  0712                     	;# 
  7095  0713                     	;# 
  7096  0714                     	;# 
  7097  0715                     	;# 
  7098  0716                     	;# 
  7099  0717                     	;# 
  7100  0718                     	;# 
  7101  0719                     	;# 
  7102  0891                     	;# 
  7103  0891                     	;# 
  7104  0891                     	;# 
  7105  0891                     	;# 
  7106  0891                     	;# 
  7107  0891                     	;# 
  7108  0892                     	;# 
  7109  0892                     	;# 
  7110  0892                     	;# 
  7111  0893                     	;# 
  7112  0893                     	;# 
  7113  0893                     	;# 
  7114  0893                     	;# 
  7115  0893                     	;# 
  7116  0893                     	;# 
  7117  0894                     	;# 
  7118  0894                     	;# 
  7119  0894                     	;# 
  7120  0895                     	;# 
  7121  0895                     	;# 
  7122  0895                     	;# 
  7123  0896                     	;# 
  7124  0896                     	;# 
  7125  0896                     	;# 
  7126  089B                     	;# 
  7127  0911                     	;# 
  7128  0912                     	;# 
  7129  0913                     	;# 
  7130  0914                     	;# 
  7131  0915                     	;# 
  7132  0916                     	;# 
  7133  0918                     	;# 
  7134  0919                     	;# 
  7135  091A                     	;# 
  7136  091B                     	;# 
  7137  091C                     	;# 
  7138  091D                     	;# 
  7139  091E                     	;# 
  7140  091F                     	;# 
  7141  0E0F                     	;# 
  7142  0E10                     	;# 
  7143  0E11                     	;# 
  7144  0E12                     	;# 
  7145  0E13                     	;# 
  7146  0E14                     	;# 
  7147  0E15                     	;# 
  7148  0E16                     	;# 
  7149  0E17                     	;# 
  7150  0E18                     	;# 
  7151  0E19                     	;# 
  7152  0E1A                     	;# 
  7153  0E1B                     	;# 
  7154  0E1C                     	;# 
  7155  0E1D                     	;# 
  7156  0E1E                     	;# 
  7157  0E1F                     	;# 
  7158  0E20                     	;# 
  7159  0E21                     	;# 
  7160  0E22                     	;# 
  7161  0E24                     	;# 
  7162  0E25                     	;# 
  7163  0E28                     	;# 
  7164  0E29                     	;# 
  7165  0E2A                     	;# 
  7166  0E2B                     	;# 
  7167  0E2C                     	;# 
  7168  0E2D                     	;# 
  7169  0E2E                     	;# 
  7170  0E2F                     	;# 
  7171  0E90                     	;# 
  7172  0E91                     	;# 
  7173  0E92                     	;# 
  7174  0E94                     	;# 
  7175  0E95                     	;# 
  7176  0E9C                     	;# 
  7177  0E9D                     	;# 
  7178  0E9E                     	;# 
  7179  0E9F                     	;# 
  7180  0EA0                     	;# 
  7181  0EA1                     	;# 
  7182  0EA2                     	;# 
  7183  0EA3                     	;# 
  7184  0EA4                     	;# 
  7185  0EA5                     	;# 
  7186  0EA6                     	;# 
  7187  0EA7                     	;# 
  7188  0F0F                     	;# 
  7189  0F10                     	;# 
  7190  0F11                     	;# 
  7191  0F12                     	;# 
  7192  0F13                     	;# 
  7193  0F14                     	;# 
  7194  0F15                     	;# 
  7195  0F16                     	;# 
  7196  0F17                     	;# 
  7197  0F18                     	;# 
  7198  0F19                     	;# 
  7199  0F1A                     	;# 
  7200  0F1B                     	;# 
  7201  0F1C                     	;# 
  7202  0F1D                     	;# 
  7203  0F1E                     	;# 
  7204  0F1F                     	;# 
  7205  0F20                     	;# 
  7206  0F21                     	;# 
  7207  0F22                     	;# 
  7208  0F23                     	;# 
  7209  0F24                     	;# 
  7210  0F25                     	;# 
  7211  0F26                     	;# 
  7212  0F27                     	;# 
  7213  0F28                     	;# 
  7214  0F29                     	;# 
  7215  0F2A                     	;# 
  7216  0F2B                     	;# 
  7217  0F2C                     	;# 
  7218  0F2D                     	;# 
  7219  0F2E                     	;# 
  7220  0F2F                     	;# 
  7221  0F30                     	;# 
  7222  0F31                     	;# 
  7223  0F32                     	;# 
  7224  0F33                     	;# 
  7225  0F34                     	;# 
  7226  0F35                     	;# 
  7227  0F36                     	;# 
  7228  0F37                     	;# 
  7229  0FE4                     	;# 
  7230  0FE5                     	;# 
  7231  0FE6                     	;# 
  7232  0FE7                     	;# 
  7233  0FE8                     	;# 
  7234  0FE9                     	;# 
  7235  0FEA                     	;# 
  7236  0FEB                     	;# 
  7237  0FED                     	;# 
  7238  0FEE                     	;# 
  7239  0FEF                     	;# 
  7240  0000                     	;# 
  7241  0001                     	;# 
  7242  0002                     	;# 
  7243  0003                     	;# 
  7244  0004                     	;# 
  7245  0005                     	;# 
  7246  0006                     	;# 
  7247  0007                     	;# 
  7248  0008                     	;# 
  7249  0009                     	;# 
  7250  000A                     	;# 
  7251  000B                     	;# 
  7252  000C                     	;# 
  7253  000D                     	;# 
  7254  000E                     	;# 
  7255  0010                     	;# 
  7256  0011                     	;# 
  7257  0012                     	;# 
  7258  0013                     	;# 
  7259  0014                     	;# 
  7260  0015                     	;# 
  7261  0015                     	;# 
  7262  0016                     	;# 
  7263  0016                     	;# 
  7264  0017                     	;# 
  7265  0018                     	;# 
  7266  0019                     	;# 
  7267  0019                     	;# 
  7268  001A                     	;# 
  7269  001B                     	;# 
  7270  001C                     	;# 
  7271  001D                     	;# 
  7272  001E                     	;# 
  7273  001F                     	;# 
  7274  008C                     	;# 
  7275  008D                     	;# 
  7276  008E                     	;# 
  7277  0090                     	;# 
  7278  0091                     	;# 
  7279  0092                     	;# 
  7280  0093                     	;# 
  7281  0094                     	;# 
  7282  0097                     	;# 
  7283  009B                     	;# 
  7284  009B                     	;# 
  7285  009C                     	;# 
  7286  009D                     	;# 
  7287  009E                     	;# 
  7288  009F                     	;# 
  7289  010C                     	;# 
  7290  010D                     	;# 
  7291  010E                     	;# 
  7292  0111                     	;# 
  7293  0112                     	;# 
  7294  0113                     	;# 
  7295  0114                     	;# 
  7296  0115                     	;# 
  7297  0116                     	;# 
  7298  0117                     	;# 
  7299  0118                     	;# 
  7300  0119                     	;# 
  7301  018C                     	;# 
  7302  018D                     	;# 
  7303  018E                     	;# 
  7304  0199                     	;# 
  7305  0199                     	;# 
  7306  0199                     	;# 
  7307  019A                     	;# 
  7308  019A                     	;# 
  7309  019A                     	;# 
  7310  019B                     	;# 
  7311  019B                     	;# 
  7312  019B                     	;# 
  7313  019B                     	;# 
  7314  019B                     	;# 
  7315  019C                     	;# 
  7316  019C                     	;# 
  7317  019C                     	;# 
  7318  019D                     	;# 
  7319  019D                     	;# 
  7320  019D                     	;# 
  7321  019E                     	;# 
  7322  019E                     	;# 
  7323  019E                     	;# 
  7324  019F                     	;# 
  7325  019F                     	;# 
  7326  019F                     	;# 
  7327  019F                     	;# 
  7328  019F                     	;# 
  7329  020C                     	;# 
  7330  020D                     	;# 
  7331  020E                     	;# 
  7332  0211                     	;# 
  7333  0211                     	;# 
  7334  0212                     	;# 
  7335  0212                     	;# 
  7336  0213                     	;# 
  7337  0213                     	;# 
  7338  0214                     	;# 
  7339  0214                     	;# 
  7340  0215                     	;# 
  7341  0215                     	;# 
  7342  0215                     	;# 
  7343  0215                     	;# 
  7344  0216                     	;# 
  7345  0216                     	;# 
  7346  0217                     	;# 
  7347  0217                     	;# 
  7348  0219                     	;# 
  7349  021A                     	;# 
  7350  021B                     	;# 
  7351  021C                     	;# 
  7352  021D                     	;# 
  7353  021D                     	;# 
  7354  021E                     	;# 
  7355  021F                     	;# 
  7356  028C                     	;# 
  7357  028D                     	;# 
  7358  028E                     	;# 
  7359  0291                     	;# 
  7360  0291                     	;# 
  7361  0292                     	;# 
  7362  0293                     	;# 
  7363  0294                     	;# 
  7364  0295                     	;# 
  7365  0295                     	;# 
  7366  0296                     	;# 
  7367  0297                     	;# 
  7368  0298                     	;# 
  7369  029F                     	;# 
  7370  030C                     	;# 
  7371  030D                     	;# 
  7372  030E                     	;# 
  7373  0311                     	;# 
  7374  0311                     	;# 
  7375  0312                     	;# 
  7376  0313                     	;# 
  7377  0314                     	;# 
  7378  0315                     	;# 
  7379  0315                     	;# 
  7380  0316                     	;# 
  7381  0317                     	;# 
  7382  0318                     	;# 
  7383  038C                     	;# 
  7384  038D                     	;# 
  7385  038E                     	;# 
  7386  0391                     	;# 
  7387  0392                     	;# 
  7388  0393                     	;# 
  7389  0394                     	;# 
  7390  0395                     	;# 
  7391  0396                     	;# 
  7392  0397                     	;# 
  7393  0398                     	;# 
  7394  0399                     	;# 
  7395  039A                     	;# 
  7396  039C                     	;# 
  7397  039D                     	;# 
  7398  039E                     	;# 
  7399  039F                     	;# 
  7400  0411                     	;# 
  7401  0411                     	;# 
  7402  0412                     	;# 
  7403  0413                     	;# 
  7404  0414                     	;# 
  7405  0415                     	;# 
  7406  0416                     	;# 
  7407  0417                     	;# 
  7408  0418                     	;# 
  7409  0418                     	;# 
  7410  0419                     	;# 
  7411  041A                     	;# 
  7412  041B                     	;# 
  7413  041C                     	;# 
  7414  041D                     	;# 
  7415  041E                     	;# 
  7416  041F                     	;# 
  7417  0498                     	;# 
  7418  0498                     	;# 
  7419  0499                     	;# 
  7420  049A                     	;# 
  7421  049B                     	;# 
  7422  049B                     	;# 
  7423  049C                     	;# 
  7424  049D                     	;# 
  7425  049E                     	;# 
  7426  049F                     	;# 
  7427  0617                     	;# 
  7428  0618                     	;# 
  7429  0619                     	;# 
  7430  0619                     	;# 
  7431  061A                     	;# 
  7432  061B                     	;# 
  7433  061C                     	;# 
  7434  061C                     	;# 
  7435  061F                     	;# 
  7436  0691                     	;# 
  7437  0692                     	;# 
  7438  0693                     	;# 
  7439  0694                     	;# 
  7440  0695                     	;# 
  7441  0696                     	;# 
  7442  0697                     	;# 
  7443  0698                     	;# 
  7444  0699                     	;# 
  7445  0711                     	;# 
  7446  0712                     	;# 
  7447  0713                     	;# 
  7448  0714                     	;# 
  7449  0715                     	;# 
  7450  0716                     	;# 
  7451  0717                     	;# 
  7452  0718                     	;# 
  7453  0719                     	;# 
  7454  0891                     	;# 
  7455  0891                     	;# 
  7456  0891                     	;# 
  7457  0891                     	;# 
  7458  0891                     	;# 
  7459  0891                     	;# 
  7460  0892                     	;# 
  7461  0892                     	;# 
  7462  0892                     	;# 
  7463  0893                     	;# 
  7464  0893                     	;# 
  7465  0893                     	;# 
  7466  0893                     	;# 
  7467  0893                     	;# 
  7468  0893                     	;# 
  7469  0894                     	;# 
  7470  0894                     	;# 
  7471  0894                     	;# 
  7472  0895                     	;# 
  7473  0895                     	;# 
  7474  0895                     	;# 
  7475  0896                     	;# 
  7476  0896                     	;# 
  7477  0896                     	;# 
  7478  089B                     	;# 
  7479  0911                     	;# 
  7480  0912                     	;# 
  7481  0913                     	;# 
  7482  0914                     	;# 
  7483  0915                     	;# 
  7484  0916                     	;# 
  7485  0918                     	;# 
  7486  0919                     	;# 
  7487  091A                     	;# 
  7488  091B                     	;# 
  7489  091C                     	;# 
  7490  091D                     	;# 
  7491  091E                     	;# 
  7492  091F                     	;# 
  7493  0E0F                     	;# 
  7494  0E10                     	;# 
  7495  0E11                     	;# 
  7496  0E12                     	;# 
  7497  0E13                     	;# 
  7498  0E14                     	;# 
  7499  0E15                     	;# 
  7500  0E16                     	;# 
  7501  0E17                     	;# 
  7502  0E18                     	;# 
  7503  0E19                     	;# 
  7504  0E1A                     	;# 
  7505  0E1B                     	;# 
  7506  0E1C                     	;# 
  7507  0E1D                     	;# 
  7508  0E1E                     	;# 
  7509  0E1F                     	;# 
  7510  0E20                     	;# 
  7511  0E21                     	;# 
  7512  0E22                     	;# 
  7513  0E24                     	;# 
  7514  0E25                     	;# 
  7515  0E28                     	;# 
  7516  0E29                     	;# 
  7517  0E2A                     	;# 
  7518  0E2B                     	;# 
  7519  0E2C                     	;# 
  7520  0E2D                     	;# 
  7521  0E2E                     	;# 
  7522  0E2F                     	;# 
  7523  0E90                     	;# 
  7524  0E91                     	;# 
  7525  0E92                     	;# 
  7526  0E94                     	;# 
  7527  0E95                     	;# 
  7528  0E9C                     	;# 
  7529  0E9D                     	;# 
  7530  0E9E                     	;# 
  7531  0E9F                     	;# 
  7532  0EA0                     	;# 
  7533  0EA1                     	;# 
  7534  0EA2                     	;# 
  7535  0EA3                     	;# 
  7536  0EA4                     	;# 
  7537  0EA5                     	;# 
  7538  0EA6                     	;# 
  7539  0EA7                     	;# 
  7540  0F0F                     	;# 
  7541  0F10                     	;# 
  7542  0F11                     	;# 
  7543  0F12                     	;# 
  7544  0F13                     	;# 
  7545  0F14                     	;# 
  7546  0F15                     	;# 
  7547  0F16                     	;# 
  7548  0F17                     	;# 
  7549  0F18                     	;# 
  7550  0F19                     	;# 
  7551  0F1A                     	;# 
  7552  0F1B                     	;# 
  7553  0F1C                     	;# 
  7554  0F1D                     	;# 
  7555  0F1E                     	;# 
  7556  0F1F                     	;# 
  7557  0F20                     	;# 
  7558  0F21                     	;# 
  7559  0F22                     	;# 
  7560  0F23                     	;# 
  7561  0F24                     	;# 
  7562  0F25                     	;# 
  7563  0F26                     	;# 
  7564  0F27                     	;# 
  7565  0F28                     	;# 
  7566  0F29                     	;# 
  7567  0F2A                     	;# 
  7568  0F2B                     	;# 
  7569  0F2C                     	;# 
  7570  0F2D                     	;# 
  7571  0F2E                     	;# 
  7572  0F2F                     	;# 
  7573  0F30                     	;# 
  7574  0F31                     	;# 
  7575  0F32                     	;# 
  7576  0F33                     	;# 
  7577  0F34                     	;# 
  7578  0F35                     	;# 
  7579  0F36                     	;# 
  7580  0F37                     	;# 
  7581  0FE4                     	;# 
  7582  0FE5                     	;# 
  7583  0FE6                     	;# 
  7584  0FE7                     	;# 
  7585  0FE8                     	;# 
  7586  0FE9                     	;# 
  7587  0FEA                     	;# 
  7588  0FEB                     	;# 
  7589  0FED                     	;# 
  7590  0FEE                     	;# 
  7591  0FEF                     	;# 
  7592  0000                     	;# 
  7593  0001                     	;# 
  7594  0002                     	;# 
  7595  0003                     	;# 
  7596  0004                     	;# 
  7597  0005                     	;# 
  7598  0006                     	;# 
  7599  0007                     	;# 
  7600  0008                     	;# 
  7601  0009                     	;# 
  7602  000A                     	;# 
  7603  000B                     	;# 
  7604  000C                     	;# 
  7605  000D                     	;# 
  7606  000E                     	;# 
  7607  0010                     	;# 
  7608  0011                     	;# 
  7609  0012                     	;# 
  7610  0013                     	;# 
  7611  0014                     	;# 
  7612  0015                     	;# 
  7613  0015                     	;# 
  7614  0016                     	;# 
  7615  0016                     	;# 
  7616  0017                     	;# 
  7617  0018                     	;# 
  7618  0019                     	;# 
  7619  0019                     	;# 
  7620  001A                     	;# 
  7621  001B                     	;# 
  7622  001C                     	;# 
  7623  001D                     	;# 
  7624  001E                     	;# 
  7625  001F                     	;# 
  7626  008C                     	;# 
  7627  008D                     	;# 
  7628  008E                     	;# 
  7629  0090                     	;# 
  7630  0091                     	;# 
  7631  0092                     	;# 
  7632  0093                     	;# 
  7633  0094                     	;# 
  7634  0097                     	;# 
  7635  009B                     	;# 
  7636  009B                     	;# 
  7637  009C                     	;# 
  7638  009D                     	;# 
  7639  009E                     	;# 
  7640  009F                     	;# 
  7641  010C                     	;# 
  7642  010D                     	;# 
  7643  010E                     	;# 
  7644  0111                     	;# 
  7645  0112                     	;# 
  7646  0113                     	;# 
  7647  0114                     	;# 
  7648  0115                     	;# 
  7649  0116                     	;# 
  7650  0117                     	;# 
  7651  0118                     	;# 
  7652  0119                     	;# 
  7653  018C                     	;# 
  7654  018D                     	;# 
  7655  018E                     	;# 
  7656  0199                     	;# 
  7657  0199                     	;# 
  7658  0199                     	;# 
  7659  019A                     	;# 
  7660  019A                     	;# 
  7661  019A                     	;# 
  7662  019B                     	;# 
  7663  019B                     	;# 
  7664  019B                     	;# 
  7665  019B                     	;# 
  7666  019B                     	;# 
  7667  019C                     	;# 
  7668  019C                     	;# 
  7669  019C                     	;# 
  7670  019D                     	;# 
  7671  019D                     	;# 
  7672  019D                     	;# 
  7673  019E                     	;# 
  7674  019E                     	;# 
  7675  019E                     	;# 
  7676  019F                     	;# 
  7677  019F                     	;# 
  7678  019F                     	;# 
  7679  019F                     	;# 
  7680  019F                     	;# 
  7681  020C                     	;# 
  7682  020D                     	;# 
  7683  020E                     	;# 
  7684  0211                     	;# 
  7685  0211                     	;# 
  7686  0212                     	;# 
  7687  0212                     	;# 
  7688  0213                     	;# 
  7689  0213                     	;# 
  7690  0214                     	;# 
  7691  0214                     	;# 
  7692  0215                     	;# 
  7693  0215                     	;# 
  7694  0215                     	;# 
  7695  0215                     	;# 
  7696  0216                     	;# 
  7697  0216                     	;# 
  7698  0217                     	;# 
  7699  0217                     	;# 
  7700  0219                     	;# 
  7701  021A                     	;# 
  7702  021B                     	;# 
  7703  021C                     	;# 
  7704  021D                     	;# 
  7705  021D                     	;# 
  7706  021E                     	;# 
  7707  021F                     	;# 
  7708  028C                     	;# 
  7709  028D                     	;# 
  7710  028E                     	;# 
  7711  0291                     	;# 
  7712  0291                     	;# 
  7713  0292                     	;# 
  7714  0293                     	;# 
  7715  0294                     	;# 
  7716  0295                     	;# 
  7717  0295                     	;# 
  7718  0296                     	;# 
  7719  0297                     	;# 
  7720  0298                     	;# 
  7721  029F                     	;# 
  7722  030C                     	;# 
  7723  030D                     	;# 
  7724  030E                     	;# 
  7725  0311                     	;# 
  7726  0311                     	;# 
  7727  0312                     	;# 
  7728  0313                     	;# 
  7729  0314                     	;# 
  7730  0315                     	;# 
  7731  0315                     	;# 
  7732  0316                     	;# 
  7733  0317                     	;# 
  7734  0318                     	;# 
  7735  038C                     	;# 
  7736  038D                     	;# 
  7737  038E                     	;# 
  7738  0391                     	;# 
  7739  0392                     	;# 
  7740  0393                     	;# 
  7741  0394                     	;# 
  7742  0395                     	;# 
  7743  0396                     	;# 
  7744  0397                     	;# 
  7745  0398                     	;# 
  7746  0399                     	;# 
  7747  039A                     	;# 
  7748  039C                     	;# 
  7749  039D                     	;# 
  7750  039E                     	;# 
  7751  039F                     	;# 
  7752  0411                     	;# 
  7753  0411                     	;# 
  7754  0412                     	;# 
  7755  0413                     	;# 
  7756  0414                     	;# 
  7757  0415                     	;# 
  7758  0416                     	;# 
  7759  0417                     	;# 
  7760  0418                     	;# 
  7761  0418                     	;# 
  7762  0419                     	;# 
  7763  041A                     	;# 
  7764  041B                     	;# 
  7765  041C                     	;# 
  7766  041D                     	;# 
  7767  041E                     	;# 
  7768  041F                     	;# 
  7769  0498                     	;# 
  7770  0498                     	;# 
  7771  0499                     	;# 
  7772  049A                     	;# 
  7773  049B                     	;# 
  7774  049B                     	;# 
  7775  049C                     	;# 
  7776  049D                     	;# 
  7777  049E                     	;# 
  7778  049F                     	;# 
  7779  0617                     	;# 
  7780  0618                     	;# 
  7781  0619                     	;# 
  7782  0619                     	;# 
  7783  061A                     	;# 
  7784  061B                     	;# 
  7785  061C                     	;# 
  7786  061C                     	;# 
  7787  061F                     	;# 
  7788  0691                     	;# 
  7789  0692                     	;# 
  7790  0693                     	;# 
  7791  0694                     	;# 
  7792  0695                     	;# 
  7793  0696                     	;# 
  7794  0697                     	;# 
  7795  0698                     	;# 
  7796  0699                     	;# 
  7797  0711                     	;# 
  7798  0712                     	;# 
  7799  0713                     	;# 
  7800  0714                     	;# 
  7801  0715                     	;# 
  7802  0716                     	;# 
  7803  0717                     	;# 
  7804  0718                     	;# 
  7805  0719                     	;# 
  7806  0891                     	;# 
  7807  0891                     	;# 
  7808  0891                     	;# 
  7809  0891                     	;# 
  7810  0891                     	;# 
  7811  0891                     	;# 
  7812  0892                     	;# 
  7813  0892                     	;# 
  7814  0892                     	;# 
  7815  0893                     	;# 
  7816  0893                     	;# 
  7817  0893                     	;# 
  7818  0893                     	;# 
  7819  0893                     	;# 
  7820  0893                     	;# 
  7821  0894                     	;# 
  7822  0894                     	;# 
  7823  0894                     	;# 
  7824  0895                     	;# 
  7825  0895                     	;# 
  7826  0895                     	;# 
  7827  0896                     	;# 
  7828  0896                     	;# 
  7829  0896                     	;# 
  7830  089B                     	;# 
  7831  0911                     	;# 
  7832  0912                     	;# 
  7833  0913                     	;# 
  7834  0914                     	;# 
  7835  0915                     	;# 
  7836  0916                     	;# 
  7837  0918                     	;# 
  7838  0919                     	;# 
  7839  091A                     	;# 
  7840  091B                     	;# 
  7841  091C                     	;# 
  7842  091D                     	;# 
  7843  091E                     	;# 
  7844  091F                     	;# 
  7845  0E0F                     	;# 
  7846  0E10                     	;# 
  7847  0E11                     	;# 
  7848  0E12                     	;# 
  7849  0E13                     	;# 
  7850  0E14                     	;# 
  7851  0E15                     	;# 
  7852  0E16                     	;# 
  7853  0E17                     	;# 
  7854  0E18                     	;# 
  7855  0E19                     	;# 
  7856  0E1A                     	;# 
  7857  0E1B                     	;# 
  7858  0E1C                     	;# 
  7859  0E1D                     	;# 
  7860  0E1E                     	;# 
  7861  0E1F                     	;# 
  7862  0E20                     	;# 
  7863  0E21                     	;# 
  7864  0E22                     	;# 
  7865  0E24                     	;# 
  7866  0E25                     	;# 
  7867  0E28                     	;# 
  7868  0E29                     	;# 
  7869  0E2A                     	;# 
  7870  0E2B                     	;# 
  7871  0E2C                     	;# 
  7872  0E2D                     	;# 
  7873  0E2E                     	;# 
  7874  0E2F                     	;# 
  7875  0E90                     	;# 
  7876  0E91                     	;# 
  7877  0E92                     	;# 
  7878  0E94                     	;# 
  7879  0E95                     	;# 
  7880  0E9C                     	;# 
  7881  0E9D                     	;# 
  7882  0E9E                     	;# 
  7883  0E9F                     	;# 
  7884  0EA0                     	;# 
  7885  0EA1                     	;# 
  7886  0EA2                     	;# 
  7887  0EA3                     	;# 
  7888  0EA4                     	;# 
  7889  0EA5                     	;# 
  7890  0EA6                     	;# 
  7891  0EA7                     	;# 
  7892  0F0F                     	;# 
  7893  0F10                     	;# 
  7894  0F11                     	;# 
  7895  0F12                     	;# 
  7896  0F13                     	;# 
  7897  0F14                     	;# 
  7898  0F15                     	;# 
  7899  0F16                     	;# 
  7900  0F17                     	;# 
  7901  0F18                     	;# 
  7902  0F19                     	;# 
  7903  0F1A                     	;# 
  7904  0F1B                     	;# 
  7905  0F1C                     	;# 
  7906  0F1D                     	;# 
  7907  0F1E                     	;# 
  7908  0F1F                     	;# 
  7909  0F20                     	;# 
  7910  0F21                     	;# 
  7911  0F22                     	;# 
  7912  0F23                     	;# 
  7913  0F24                     	;# 
  7914  0F25                     	;# 
  7915  0F26                     	;# 
  7916  0F27                     	;# 
  7917  0F28                     	;# 
  7918  0F29                     	;# 
  7919  0F2A                     	;# 
  7920  0F2B                     	;# 
  7921  0F2C                     	;# 
  7922  0F2D                     	;# 
  7923  0F2E                     	;# 
  7924  0F2F                     	;# 
  7925  0F30                     	;# 
  7926  0F31                     	;# 
  7927  0F32                     	;# 
  7928  0F33                     	;# 
  7929  0F34                     	;# 
  7930  0F35                     	;# 
  7931  0F36                     	;# 
  7932  0F37                     	;# 
  7933  0FE4                     	;# 
  7934  0FE5                     	;# 
  7935  0FE6                     	;# 
  7936  0FE7                     	;# 
  7937  0FE8                     	;# 
  7938  0FE9                     	;# 
  7939  0FEA                     	;# 
  7940  0FEB                     	;# 
  7941  0FED                     	;# 
  7942  0FEE                     	;# 
  7943  0FEF                     	;# 
  7944  0000                     	;# 
  7945  0001                     	;# 
  7946  0002                     	;# 
  7947  0003                     	;# 
  7948  0004                     	;# 
  7949  0005                     	;# 
  7950  0006                     	;# 
  7951  0007                     	;# 
  7952  0008                     	;# 
  7953  0009                     	;# 
  7954  000A                     	;# 
  7955  000B                     	;# 
  7956  000C                     	;# 
  7957  000D                     	;# 
  7958  000E                     	;# 
  7959  0010                     	;# 
  7960  0011                     	;# 
  7961  0012                     	;# 
  7962  0013                     	;# 
  7963  0014                     	;# 
  7964  0015                     	;# 
  7965  0015                     	;# 
  7966  0016                     	;# 
  7967  0016                     	;# 
  7968  0017                     	;# 
  7969  0018                     	;# 
  7970  0019                     	;# 
  7971  0019                     	;# 
  7972  001A                     	;# 
  7973  001B                     	;# 
  7974  001C                     	;# 
  7975  001D                     	;# 
  7976  001E                     	;# 
  7977  001F                     	;# 
  7978  008C                     	;# 
  7979  008D                     	;# 
  7980  008E                     	;# 
  7981  0090                     	;# 
  7982  0091                     	;# 
  7983  0092                     	;# 
  7984  0093                     	;# 
  7985  0094                     	;# 
  7986  0097                     	;# 
  7987  009B                     	;# 
  7988  009B                     	;# 
  7989  009C                     	;# 
  7990  009D                     	;# 
  7991  009E                     	;# 
  7992  009F                     	;# 
  7993  010C                     	;# 
  7994  010D                     	;# 
  7995  010E                     	;# 
  7996  0111                     	;# 
  7997  0112                     	;# 
  7998  0113                     	;# 
  7999  0114                     	;# 
  8000  0115                     	;# 
  8001  0116                     	;# 
  8002  0117                     	;# 
  8003  0118                     	;# 
  8004  0119                     	;# 
  8005  018C                     	;# 
  8006  018D                     	;# 
  8007  018E                     	;# 
  8008  0199                     	;# 
  8009  0199                     	;# 
  8010  0199                     	;# 
  8011  019A                     	;# 
  8012  019A                     	;# 
  8013  019A                     	;# 
  8014  019B                     	;# 
  8015  019B                     	;# 
  8016  019B                     	;# 
  8017  019B                     	;# 
  8018  019B                     	;# 
  8019  019C                     	;# 
  8020  019C                     	;# 
  8021  019C                     	;# 
  8022  019D                     	;# 
  8023  019D                     	;# 
  8024  019D                     	;# 
  8025  019E                     	;# 
  8026  019E                     	;# 
  8027  019E                     	;# 
  8028  019F                     	;# 
  8029  019F                     	;# 
  8030  019F                     	;# 
  8031  019F                     	;# 
  8032  019F                     	;# 
  8033  020C                     	;# 
  8034  020D                     	;# 
  8035  020E                     	;# 
  8036  0211                     	;# 
  8037  0211                     	;# 
  8038  0212                     	;# 
  8039  0212                     	;# 
  8040  0213                     	;# 
  8041  0213                     	;# 
  8042  0214                     	;# 
  8043  0214                     	;# 
  8044  0215                     	;# 
  8045  0215                     	;# 
  8046  0215                     	;# 
  8047  0215                     	;# 
  8048  0216                     	;# 
  8049  0216                     	;# 
  8050  0217                     	;# 
  8051  0217                     	;# 
  8052  0219                     	;# 
  8053  021A                     	;# 
  8054  021B                     	;# 
  8055  021C                     	;# 
  8056  021D                     	;# 
  8057  021D                     	;# 
  8058  021E                     	;# 
  8059  021F                     	;# 
  8060  028C                     	;# 
  8061  028D                     	;# 
  8062  028E                     	;# 
  8063  0291                     	;# 
  8064  0291                     	;# 
  8065  0292                     	;# 
  8066  0293                     	;# 
  8067  0294                     	;# 
  8068  0295                     	;# 
  8069  0295                     	;# 
  8070  0296                     	;# 
  8071  0297                     	;# 
  8072  0298                     	;# 
  8073  029F                     	;# 
  8074  030C                     	;# 
  8075  030D                     	;# 
  8076  030E                     	;# 
  8077  0311                     	;# 
  8078  0311                     	;# 
  8079  0312                     	;# 
  8080  0313                     	;# 
  8081  0314                     	;# 
  8082  0315                     	;# 
  8083  0315                     	;# 
  8084  0316                     	;# 
  8085  0317                     	;# 
  8086  0318                     	;# 
  8087  038C                     	;# 
  8088  038D                     	;# 
  8089  038E                     	;# 
  8090  0391                     	;# 
  8091  0392                     	;# 
  8092  0393                     	;# 
  8093  0394                     	;# 
  8094  0395                     	;# 
  8095  0396                     	;# 
  8096  0397                     	;# 
  8097  0398                     	;# 
  8098  0399                     	;# 
  8099  039A                     	;# 
  8100  039C                     	;# 
  8101  039D                     	;# 
  8102  039E                     	;# 
  8103  039F                     	;# 
  8104  0411                     	;# 
  8105  0411                     	;# 
  8106  0412                     	;# 
  8107  0413                     	;# 
  8108  0414                     	;# 
  8109  0415                     	;# 
  8110  0416                     	;# 
  8111  0417                     	;# 
  8112  0418                     	;# 
  8113  0418                     	;# 
  8114  0419                     	;# 
  8115  041A                     	;# 
  8116  041B                     	;# 
  8117  041C                     	;# 
  8118  041D                     	;# 
  8119  041E                     	;# 
  8120  041F                     	;# 
  8121  0498                     	;# 
  8122  0498                     	;# 
  8123  0499                     	;# 
  8124  049A                     	;# 
  8125  049B                     	;# 
  8126  049B                     	;# 
  8127  049C                     	;# 
  8128  049D                     	;# 
  8129  049E                     	;# 
  8130  049F                     	;# 
  8131  0617                     	;# 
  8132  0618                     	;# 
  8133  0619                     	;# 
  8134  0619                     	;# 
  8135  061A                     	;# 
  8136  061B                     	;# 
  8137  061C                     	;# 
  8138  061C                     	;# 
  8139  061F                     	;# 
  8140  0691                     	;# 
  8141  0692                     	;# 
  8142  0693                     	;# 
  8143  0694                     	;# 
  8144  0695                     	;# 
  8145  0696                     	;# 
  8146  0697                     	;# 
  8147  0698                     	;# 
  8148  0699                     	;# 
  8149  0711                     	;# 
  8150  0712                     	;# 
  8151  0713                     	;# 
  8152  0714                     	;# 
  8153  0715                     	;# 
  8154  0716                     	;# 
  8155  0717                     	;# 
  8156  0718                     	;# 
  8157  0719                     	;# 
  8158  0891                     	;# 
  8159  0891                     	;# 
  8160  0891                     	;# 
  8161  0891                     	;# 
  8162  0891                     	;# 
  8163  0891                     	;# 
  8164  0892                     	;# 
  8165  0892                     	;# 
  8166  0892                     	;# 
  8167  0893                     	;# 
  8168  0893                     	;# 
  8169  0893                     	;# 
  8170  0893                     	;# 
  8171  0893                     	;# 
  8172  0893                     	;# 
  8173  0894                     	;# 
  8174  0894                     	;# 
  8175  0894                     	;# 
  8176  0895                     	;# 
  8177  0895                     	;# 
  8178  0895                     	;# 
  8179  0896                     	;# 
  8180  0896                     	;# 
  8181  0896                     	;# 
  8182  089B                     	;# 
  8183  0911                     	;# 
  8184  0912                     	;# 
  8185  0913                     	;# 
  8186  0914                     	;# 
  8187  0915                     	;# 
  8188  0916                     	;# 
  8189  0918                     	;# 
  8190  0919                     	;# 
  8191  091A                     	;# 
  8192  091B                     	;# 
  8193  091C                     	;# 
  8194  091D                     	;# 
  8195  091E                     	;# 
  8196  091F                     	;# 
  8197  0E0F                     	;# 
  8198  0E10                     	;# 
  8199  0E11                     	;# 
  8200  0E12                     	;# 
  8201  0E13                     	;# 
  8202  0E14                     	;# 
  8203  0E15                     	;# 
  8204  0E16                     	;# 
  8205  0E17                     	;# 
  8206  0E18                     	;# 
  8207  0E19                     	;# 
  8208  0E1A                     	;# 
  8209  0E1B                     	;# 
  8210  0E1C                     	;# 
  8211  0E1D                     	;# 
  8212  0E1E                     	;# 
  8213  0E1F                     	;# 
  8214  0E20                     	;# 
  8215  0E21                     	;# 
  8216  0E22                     	;# 
  8217  0E24                     	;# 
  8218  0E25                     	;# 
  8219  0E28                     	;# 
  8220  0E29                     	;# 
  8221  0E2A                     	;# 
  8222  0E2B                     	;# 
  8223  0E2C                     	;# 
  8224  0E2D                     	;# 
  8225  0E2E                     	;# 
  8226  0E2F                     	;# 
  8227  0E90                     	;# 
  8228  0E91                     	;# 
  8229  0E92                     	;# 
  8230  0E94                     	;# 
  8231  0E95                     	;# 
  8232  0E9C                     	;# 
  8233  0E9D                     	;# 
  8234  0E9E                     	;# 
  8235  0E9F                     	;# 
  8236  0EA0                     	;# 
  8237  0EA1                     	;# 
  8238  0EA2                     	;# 
  8239  0EA3                     	;# 
  8240  0EA4                     	;# 
  8241  0EA5                     	;# 
  8242  0EA6                     	;# 
  8243  0EA7                     	;# 
  8244  0F0F                     	;# 
  8245  0F10                     	;# 
  8246  0F11                     	;# 
  8247  0F12                     	;# 
  8248  0F13                     	;# 
  8249  0F14                     	;# 
  8250  0F15                     	;# 
  8251  0F16                     	;# 
  8252  0F17                     	;# 
  8253  0F18                     	;# 
  8254  0F19                     	;# 
  8255  0F1A                     	;# 
  8256  0F1B                     	;# 
  8257  0F1C                     	;# 
  8258  0F1D                     	;# 
  8259  0F1E                     	;# 
  8260  0F1F                     	;# 
  8261  0F20                     	;# 
  8262  0F21                     	;# 
  8263  0F22                     	;# 
  8264  0F23                     	;# 
  8265  0F24                     	;# 
  8266  0F25                     	;# 
  8267  0F26                     	;# 
  8268  0F27                     	;# 
  8269  0F28                     	;# 
  8270  0F29                     	;# 
  8271  0F2A                     	;# 
  8272  0F2B                     	;# 
  8273  0F2C                     	;# 
  8274  0F2D                     	;# 
  8275  0F2E                     	;# 
  8276  0F2F                     	;# 
  8277  0F30                     	;# 
  8278  0F31                     	;# 
  8279  0F32                     	;# 
  8280  0F33                     	;# 
  8281  0F34                     	;# 
  8282  0F35                     	;# 
  8283  0F36                     	;# 
  8284  0F37                     	;# 
  8285  0FE4                     	;# 
  8286  0FE5                     	;# 
  8287  0FE6                     	;# 
  8288  0FE7                     	;# 
  8289  0FE8                     	;# 
  8290  0FE9                     	;# 
  8291  0FEA                     	;# 
  8292  0FEB                     	;# 
  8293  0FED                     	;# 
  8294  0FEE                     	;# 
  8295  0FEF                     	;# 
  8296  0000                     	;# 
  8297  0001                     	;# 
  8298  0002                     	;# 
  8299  0003                     	;# 
  8300  0004                     	;# 
  8301  0005                     	;# 
  8302  0006                     	;# 
  8303  0007                     	;# 
  8304  0008                     	;# 
  8305  0009                     	;# 
  8306  000A                     	;# 
  8307  000B                     	;# 
  8308  000C                     	;# 
  8309  000D                     	;# 
  8310  000E                     	;# 
  8311  0010                     	;# 
  8312  0011                     	;# 
  8313  0012                     	;# 
  8314  0013                     	;# 
  8315  0014                     	;# 
  8316  0015                     	;# 
  8317  0015                     	;# 
  8318  0016                     	;# 
  8319  0016                     	;# 
  8320  0017                     	;# 
  8321  0018                     	;# 
  8322  0019                     	;# 
  8323  0019                     	;# 
  8324  001A                     	;# 
  8325  001B                     	;# 
  8326  001C                     	;# 
  8327  001D                     	;# 
  8328  001E                     	;# 
  8329  001F                     	;# 
  8330  008C                     	;# 
  8331  008D                     	;# 
  8332  008E                     	;# 
  8333  0090                     	;# 
  8334  0091                     	;# 
  8335  0092                     	;# 
  8336  0093                     	;# 
  8337  0094                     	;# 
  8338  0097                     	;# 
  8339  009B                     	;# 
  8340  009B                     	;# 
  8341  009C                     	;# 
  8342  009D                     	;# 
  8343  009E                     	;# 
  8344  009F                     	;# 
  8345  010C                     	;# 
  8346  010D                     	;# 
  8347  010E                     	;# 
  8348  0111                     	;# 
  8349  0112                     	;# 
  8350  0113                     	;# 
  8351  0114                     	;# 
  8352  0115                     	;# 
  8353  0116                     	;# 
  8354  0117                     	;# 
  8355  0118                     	;# 
  8356  0119                     	;# 
  8357  018C                     	;# 
  8358  018D                     	;# 
  8359  018E                     	;# 
  8360  0199                     	;# 
  8361  0199                     	;# 
  8362  0199                     	;# 
  8363  019A                     	;# 
  8364  019A                     	;# 
  8365  019A                     	;# 
  8366  019B                     	;# 
  8367  019B                     	;# 
  8368  019B                     	;# 
  8369  019B                     	;# 
  8370  019B                     	;# 
  8371  019C                     	;# 
  8372  019C                     	;# 
  8373  019C                     	;# 
  8374  019D                     	;# 
  8375  019D                     	;# 
  8376  019D                     	;# 
  8377  019E                     	;# 
  8378  019E                     	;# 
  8379  019E                     	;# 
  8380  019F                     	;# 
  8381  019F                     	;# 
  8382  019F                     	;# 
  8383  019F                     	;# 
  8384  019F                     	;# 
  8385  020C                     	;# 
  8386  020D                     	;# 
  8387  020E                     	;# 
  8388  0211                     	;# 
  8389  0211                     	;# 
  8390  0212                     	;# 
  8391  0212                     	;# 
  8392  0213                     	;# 
  8393  0213                     	;# 
  8394  0214                     	;# 
  8395  0214                     	;# 
  8396  0215                     	;# 
  8397  0215                     	;# 
  8398  0215                     	;# 
  8399  0215                     	;# 
  8400  0216                     	;# 
  8401  0216                     	;# 
  8402  0217                     	;# 
  8403  0217                     	;# 
  8404  0219                     	;# 
  8405  021A                     	;# 
  8406  021B                     	;# 
  8407  021C                     	;# 
  8408  021D                     	;# 
  8409  021D                     	;# 
  8410  021E                     	;# 
  8411  021F                     	;# 
  8412  028C                     	;# 
  8413  028D                     	;# 
  8414  028E                     	;# 
  8415  0291                     	;# 
  8416  0291                     	;# 
  8417  0292                     	;# 
  8418  0293                     	;# 
  8419  0294                     	;# 
  8420  0295                     	;# 
  8421  0295                     	;# 
  8422  0296                     	;# 
  8423  0297                     	;# 
  8424  0298                     	;# 
  8425  029F                     	;# 
  8426  030C                     	;# 
  8427  030D                     	;# 
  8428  030E                     	;# 
  8429  0311                     	;# 
  8430  0311                     	;# 
  8431  0312                     	;# 
  8432  0313                     	;# 
  8433  0314                     	;# 
  8434  0315                     	;# 
  8435  0315                     	;# 
  8436  0316                     	;# 
  8437  0317                     	;# 
  8438  0318                     	;# 
  8439  038C                     	;# 
  8440  038D                     	;# 
  8441  038E                     	;# 
  8442  0391                     	;# 
  8443  0392                     	;# 
  8444  0393                     	;# 
  8445  0394                     	;# 
  8446  0395                     	;# 
  8447  0396                     	;# 
  8448  0397                     	;# 
  8449  0398                     	;# 
  8450  0399                     	;# 
  8451  039A                     	;# 
  8452  039C                     	;# 
  8453  039D                     	;# 
  8454  039E                     	;# 
  8455  039F                     	;# 
  8456  0411                     	;# 
  8457  0411                     	;# 
  8458  0412                     	;# 
  8459  0413                     	;# 
  8460  0414                     	;# 
  8461  0415                     	;# 
  8462  0416                     	;# 
  8463  0417                     	;# 
  8464  0418                     	;# 
  8465  0418                     	;# 
  8466  0419                     	;# 
  8467  041A                     	;# 
  8468  041B                     	;# 
  8469  041C                     	;# 
  8470  041D                     	;# 
  8471  041E                     	;# 
  8472  041F                     	;# 
  8473  0498                     	;# 
  8474  0498                     	;# 
  8475  0499                     	;# 
  8476  049A                     	;# 
  8477  049B                     	;# 
  8478  049B                     	;# 
  8479  049C                     	;# 
  8480  049D                     	;# 
  8481  049E                     	;# 
  8482  049F                     	;# 
  8483  0617                     	;# 
  8484  0618                     	;# 
  8485  0619                     	;# 
  8486  0619                     	;# 
  8487  061A                     	;# 
  8488  061B                     	;# 
  8489  061C                     	;# 
  8490  061C                     	;# 
  8491  061F                     	;# 
  8492  0691                     	;# 
  8493  0692                     	;# 
  8494  0693                     	;# 
  8495  0694                     	;# 
  8496  0695                     	;# 
  8497  0696                     	;# 
  8498  0697                     	;# 
  8499  0698                     	;# 
  8500  0699                     	;# 
  8501  0711                     	;# 
  8502  0712                     	;# 
  8503  0713                     	;# 
  8504  0714                     	;# 
  8505  0715                     	;# 
  8506  0716                     	;# 
  8507  0717                     	;# 
  8508  0718                     	;# 
  8509  0719                     	;# 
  8510  0891                     	;# 
  8511  0891                     	;# 
  8512  0891                     	;# 
  8513  0891                     	;# 
  8514  0891                     	;# 
  8515  0891                     	;# 
  8516  0892                     	;# 
  8517  0892                     	;# 
  8518  0892                     	;# 
  8519  0893                     	;# 
  8520  0893                     	;# 
  8521  0893                     	;# 
  8522  0893                     	;# 
  8523  0893                     	;# 
  8524  0893                     	;# 
  8525  0894                     	;# 
  8526  0894                     	;# 
  8527  0894                     	;# 
  8528  0895                     	;# 
  8529  0895                     	;# 
  8530  0895                     	;# 
  8531  0896                     	;# 
  8532  0896                     	;# 
  8533  0896                     	;# 
  8534  089B                     	;# 
  8535  0911                     	;# 
  8536  0912                     	;# 
  8537  0913                     	;# 
  8538  0914                     	;# 
  8539  0915                     	;# 
  8540  0916                     	;# 
  8541  0918                     	;# 
  8542  0919                     	;# 
  8543  091A                     	;# 
  8544  091B                     	;# 
  8545  091C                     	;# 
  8546  091D                     	;# 
  8547  091E                     	;# 
  8548  091F                     	;# 
  8549  0E0F                     	;# 
  8550  0E10                     	;# 
  8551  0E11                     	;# 
  8552  0E12                     	;# 
  8553  0E13                     	;# 
  8554  0E14                     	;# 
  8555  0E15                     	;# 
  8556  0E16                     	;# 
  8557  0E17                     	;# 
  8558  0E18                     	;# 
  8559  0E19                     	;# 
  8560  0E1A                     	;# 
  8561  0E1B                     	;# 
  8562  0E1C                     	;# 
  8563  0E1D                     	;# 
  8564  0E1E                     	;# 
  8565  0E1F                     	;# 
  8566  0E20                     	;# 
  8567  0E21                     	;# 
  8568  0E22                     	;# 
  8569  0E24                     	;# 
  8570  0E25                     	;# 
  8571  0E28                     	;# 
  8572  0E29                     	;# 
  8573  0E2A                     	;# 
  8574  0E2B                     	;# 
  8575  0E2C                     	;# 
  8576  0E2D                     	;# 
  8577  0E2E                     	;# 
  8578  0E2F                     	;# 
  8579  0E90                     	;# 
  8580  0E91                     	;# 
  8581  0E92                     	;# 
  8582  0E94                     	;# 
  8583  0E95                     	;# 
  8584  0E9C                     	;# 
  8585  0E9D                     	;# 
  8586  0E9E                     	;# 
  8587  0E9F                     	;# 
  8588  0EA0                     	;# 
  8589  0EA1                     	;# 
  8590  0EA2                     	;# 
  8591  0EA3                     	;# 
  8592  0EA4                     	;# 
  8593  0EA5                     	;# 
  8594  0EA6                     	;# 
  8595  0EA7                     	;# 
  8596  0F0F                     	;# 
  8597  0F10                     	;# 
  8598  0F11                     	;# 
  8599  0F12                     	;# 
  8600  0F13                     	;# 
  8601  0F14                     	;# 
  8602  0F15                     	;# 
  8603  0F16                     	;# 
  8604  0F17                     	;# 
  8605  0F18                     	;# 
  8606  0F19                     	;# 
  8607  0F1A                     	;# 
  8608  0F1B                     	;# 
  8609  0F1C                     	;# 
  8610  0F1D                     	;# 
  8611  0F1E                     	;# 
  8612  0F1F                     	;# 
  8613  0F20                     	;# 
  8614  0F21                     	;# 
  8615  0F22                     	;# 
  8616  0F23                     	;# 
  8617  0F24                     	;# 
  8618  0F25                     	;# 
  8619  0F26                     	;# 
  8620  0F27                     	;# 
  8621  0F28                     	;# 
  8622  0F29                     	;# 
  8623  0F2A                     	;# 
  8624  0F2B                     	;# 
  8625  0F2C                     	;# 
  8626  0F2D                     	;# 
  8627  0F2E                     	;# 
  8628  0F2F                     	;# 
  8629  0F30                     	;# 
  8630  0F31                     	;# 
  8631  0F32                     	;# 
  8632  0F33                     	;# 
  8633  0F34                     	;# 
  8634  0F35                     	;# 
  8635  0F36                     	;# 
  8636  0F37                     	;# 
  8637  0FE4                     	;# 
  8638  0FE5                     	;# 
  8639  0FE6                     	;# 
  8640  0FE7                     	;# 
  8641  0FE8                     	;# 
  8642  0FE9                     	;# 
  8643  0FEA                     	;# 
  8644  0FEB                     	;# 
  8645  0FED                     	;# 
  8646  0FEE                     	;# 
  8647  0FEF                     	;_asciiCharTableLookup
  8648                           
  8649 ;; Function _menu_Exit is unused but had its address taken
  8650  0000                     
  8651 ;; Function _flashy_Exit is unused but had its address taken
  8652  0000                     
  8653 ;; Function _locked_Exit is unused but had its address taken
  8654  0000                     
  8655 ;; Function _secret_Exit is unused but had its address taken
  8656  0000                     
  8657 ;; Function _slot_Exit is unused but had its address taken
  8658  0000                     
  8659                           	psect	idataBANK1
  8660  25D5                     __pidataBANK1:	
  8661                           
  8662                           ;initializer for marquee_speedy@F14033
  8663  25D5  3420               	retlw	32
  8664  25D6  3420               	retlw	32
  8665  25D7  3420               	retlw	32
  8666  25D8  3420               	retlw	32
  8667  25D9  3400               	retlw	0
  8668                           
  8669                           ;initializer for _randx
  8670  25DA  3401               	retlw	1
  8671  25DB  3400               	retlw	0
  8672  25DC  3400               	retlw	0
  8673  25DD  3400               	retlw	0
  8674                           
  8675                           ;initializer for _locked_lock_base_leds
  8676  25DE  341F               	retlw	31
  8677  25DF  34F8               	retlw	248
  8678                           
  8679                           ;initializer for _FLASHY_TEXT_SECRET_TEST
  8680  25E0  34AA               	retlw	low (STR_9| (0+32768))
  8681  25E1  34A8               	retlw	high (STR_9| (0+32768))
  8682                           
  8683                           ;initializer for _FLASHY_TEXT
  8684  25E2  340A               	retlw	low (STR_8| (0+32768))
  8685  25E3  34A9               	retlw	high (STR_8| (0+32768))
  8686                           
  8687                           	psect	idataBANK2
  8688  258E                     __pidataBANK2:	
  8689                           
  8690                           ;initializer for _menu_option
  8691  258E  340F               	retlw	low (STR_4| (0+32768))
  8692  258F  34A9               	retlw	high (STR_4| (0+32768))
  8693  2590  34F0               	retlw	low (STR_5| (0+32768))
  8694  2591  34A8               	retlw	high (STR_5| (0+32768))
  8695  2592  34C9               	retlw	low (STR_6| (0+32768))
  8696  2593  34A8               	retlw	high (STR_6| (0+32768))
  8697  2594  34EA               	retlw	low (STR_7| (0+32768))
  8698  2595  34A8               	retlw	high (STR_7| (0+32768))
  8699                           
  8700                           ;initializer for marquee@F14042
  8701  2596  3420               	retlw	32
  8702  2597  3420               	retlw	32
  8703  2598  3420               	retlw	32
  8704  2599  3420               	retlw	32
  8705  259A  3400               	retlw	0
  8706                           
  8707                           	psect	idataBANK3
  8708  18C5                     __pidataBANK3:	
  8709                           
  8710                           ;initializer for _locked_locking_leds
  8711  18C5  3400               	retlw	0
  8712  18C6  3400               	retlw	0
  8713  18C7  3420               	retlw	32
  8714  18C8  3400               	retlw	0
  8715  18C9  3460               	retlw	96
  8716  18CA  3400               	retlw	0
  8717  18CB  34E0               	retlw	224
  8718  18CC  3400               	retlw	0
  8719  18CD  34E0               	retlw	224
  8720  18CE  3401               	retlw	1
  8721  18CF  34E0               	retlw	224
  8722  18D0  3403               	retlw	3
  8723                           
  8724                           ;initializer for _menu_options_leds
  8725  18D1  3400               	retlw	0
  8726  18D2  3402               	retlw	2
  8727  18D3  3400               	retlw	0
  8728  18D4  3401               	retlw	1
  8729  18D5  3480               	retlw	128
  8730  18D6  3400               	retlw	0
  8731  18D7  3440               	retlw	64
  8732  18D8  3400               	retlw	0
  8733  18D9  3420               	retlw	32
  8734  18DA  3400               	retlw	0
  8735                           
  8736                           ;initializer for _secret_inputs
  8737  18DB  3401               	retlw	1
  8738  18DC  3401               	retlw	1
  8739  18DD  3402               	retlw	2
  8740  18DE  3402               	retlw	2
  8741  18DF  3401               	retlw	1
  8742  18E0  3402               	retlw	2
  8743  18E1  3401               	retlw	1
  8744  18E2  3402               	retlw	2
  8745  18E3  3404               	retlw	4
  8746  18E4  3408               	retlw	8
  8747  18E5  3400               	retlw	0
  8748  18E6  3400               	retlw	0
  8749  18E7  3400               	retlw	0
  8750  18E8  3400               	retlw	0
  8751  18E9  3400               	retlw	0
  8752  18EA  3400               	retlw	0
  8753  18EB  3400               	retlw	0
  8754  18EC  3400               	retlw	0
  8755  18ED  3400               	retlw	0
  8756  18EE  3400               	retlw	0
  8757  18EF  3400               	retlw	0
  8758  18F0  3400               	retlw	0
  8759  18F1  34DC               	retlw	low (_secret_value| 0)
  8760  18F2  3401               	retlw	1
  8761  18F3  3400               	retlw	0
  8762                           
  8763                           	psect	idataBANK5
  8764  19F5                     __pidataBANK5:	
  8765                           
  8766                           ;initializer for _flashy_option
  8767  19F5  340A               	retlw	low (STR_8| (0+32768))
  8768  19F6  34A9               	retlw	high (STR_8| (0+32768))
  8769  19F7  34D3               	retlw	low (STR_11| (0+32768))
  8770  19F8  34A8               	retlw	high (STR_11| (0+32768))
  8771  19F9  34DC               	retlw	low (STR_12| (0+32768))
  8772  19FA  34A8               	retlw	high (STR_12| (0+32768))
  8773  19FB  34E4               	retlw	low (STR_13| (0+32768))
  8774  19FC  34A8               	retlw	high (STR_13| (0+32768))
  8775  19FD  3497               	retlw	low (STR_14| (0+32768))
  8776  19FE  34A8               	retlw	high (STR_14| (0+32768))
  8777  19FF  3482               	retlw	low (STR_15| (0+32768))
  8778  1A00  34A8               	retlw	high (STR_15| (0+32768))
  8779  1A01  3439               	retlw	low (STR_16| (0+32768))
  8780  1A02  34A8               	retlw	high (STR_16| (0+32768))
  8781  1A03  346C               	retlw	low (STR_17| (0+32768))
  8782  1A04  34A8               	retlw	high (STR_17| (0+32768))
  8783  1A05  345D               	retlw	low (STR_18| (0+32768))
  8784  1A06  34A0               	retlw	high (STR_18| (0+32768))
  8785  1A07  3400               	retlw	low (STR_19| (0+32768))
  8786  1A08  34A8               	retlw	high (STR_19| (0+32768))
  8787  1A09  3453               	retlw	low (STR_20| (0+32768))
  8788  1A0A  34A8               	retlw	high (STR_20| (0+32768))
  8789  1A0B  341E               	retlw	low (STR_21| (0+32768))
  8790  1A0C  34A8               	retlw	high (STR_21| (0+32768))
  8791  1A0D  3435               	retlw	low (STR_22| (0+32768))
  8792  1A0E  34A0               	retlw	high (STR_22| (0+32768))
  8793  1A0F  340A               	retlw	low (STR_23| (0+32768))
  8794  1A10  34A0               	retlw	high (STR_23| (0+32768))
  8795                           
  8796                           ;initializer for _roundabout_leds
  8797  1A11  3480               	retlw	128
  8798  1A12  3400               	retlw	0
  8799  1A13  3400               	retlw	0
  8800  1A14  3401               	retlw	1
  8801  1A15  3400               	retlw	0
  8802  1A16  3402               	retlw	2
  8803  1A17  3400               	retlw	0
  8804  1A18  3408               	retlw	8
  8805  1A19  3400               	retlw	0
  8806  1A1A  3410               	retlw	16
  8807  1A1B  3400               	retlw	0
  8808  1A1C  3420               	retlw	32
  8809  1A1D  3400               	retlw	0
  8810  1A1E  3440               	retlw	64
  8811  1A1F  3400               	retlw	0
  8812  1A20  3480               	retlw	128
  8813  1A21  3400               	retlw	0
  8814  1A22  3440               	retlw	64
  8815  1A23  3400               	retlw	0
  8816  1A24  3420               	retlw	32
  8817  1A25  3400               	retlw	0
  8818  1A26  3410               	retlw	16
  8819  1A27  3400               	retlw	0
  8820  1A28  3408               	retlw	8
  8821  1A29  3400               	retlw	0
  8822  1A2A  3402               	retlw	2
  8823  1A2B  3400               	retlw	0
  8824  1A2C  3401               	retlw	1
  8825                           
  8826                           	psect	idataBANK6
  8827  19BD                     __pidataBANK6:	
  8828                           
  8829                           ;initializer for _curtain_leds
  8830  19BD  3480               	retlw	128
  8831  19BE  3400               	retlw	0
  8832  19BF  3480               	retlw	128
  8833  19C0  3401               	retlw	1
  8834  19C1  3480               	retlw	128
  8835  19C2  3403               	retlw	3
  8836  19C3  3480               	retlw	128
  8837  19C4  340B               	retlw	11
  8838  19C5  3480               	retlw	128
  8839  19C6  341B               	retlw	27
  8840  19C7  3480               	retlw	128
  8841  19C8  343B               	retlw	59
  8842  19C9  3480               	retlw	128
  8843  19CA  347B               	retlw	123
  8844  19CB  3480               	retlw	128
  8845  19CC  34FB               	retlw	251
  8846  19CD  3480               	retlw	128
  8847  19CE  347B               	retlw	123
  8848  19CF  3480               	retlw	128
  8849  19D0  343B               	retlw	59
  8850  19D1  3480               	retlw	128
  8851  19D2  341B               	retlw	27
  8852  19D3  3480               	retlw	128
  8853  19D4  340B               	retlw	11
  8854  19D5  3480               	retlw	128
  8855  19D6  3403               	retlw	3
  8856  19D7  3480               	retlw	128
  8857  19D8  3401               	retlw	1
  8858                           
  8859                           ;initializer for _roundabout_leds_inverse
  8860  19D9  3480               	retlw	128
  8861  19DA  3400               	retlw	0
  8862  19DB  3440               	retlw	64
  8863  19DC  3400               	retlw	0
  8864  19DD  3420               	retlw	32
  8865  19DE  3400               	retlw	0
  8866  19DF  3410               	retlw	16
  8867  19E0  3400               	retlw	0
  8868  19E1  3408               	retlw	8
  8869  19E2  3400               	retlw	0
  8870  19E3  3404               	retlw	4
  8871  19E4  3400               	retlw	0
  8872  19E5  3402               	retlw	2
  8873  19E6  3400               	retlw	0
  8874  19E7  3401               	retlw	1
  8875  19E8  3400               	retlw	0
  8876  19E9  3402               	retlw	2
  8877  19EA  3400               	retlw	0
  8878  19EB  3404               	retlw	4
  8879  19EC  3400               	retlw	0
  8880  19ED  3408               	retlw	8
  8881  19EE  3400               	retlw	0
  8882  19EF  3410               	retlw	16
  8883  19F0  3400               	retlw	0
  8884  19F1  3420               	retlw	32
  8885  19F2  3400               	retlw	0
  8886  19F3  3440               	retlw	64
  8887  19F4  3400               	retlw	0
  8888                           
  8889                           	psect	idataBANK7
  8890  0800                     __pidataBANK7:	
  8891                           
  8892                           ;initializer for _curtain_leds_inverse
  8893  0800  3480               	retlw	128
  8894  0801  3400               	retlw	0
  8895  0802  34C0               	retlw	192
  8896  0803  3400               	retlw	0
  8897  0804  34E0               	retlw	224
  8898  0805  3400               	retlw	0
  8899  0806  34F0               	retlw	240
  8900  0807  3400               	retlw	0
  8901  0808  34F8               	retlw	248
  8902  0809  3400               	retlw	0
  8903  080A  34FC               	retlw	252
  8904  080B  3400               	retlw	0
  8905  080C  34FE               	retlw	254
  8906  080D  3400               	retlw	0
  8907  080E  34FF               	retlw	255
  8908  080F  3400               	retlw	0
  8909  0810  34FE               	retlw	254
  8910  0811  3400               	retlw	0
  8911  0812  34FC               	retlw	252
  8912  0813  3400               	retlw	0
  8913  0814  34F8               	retlw	248
  8914  0815  3400               	retlw	0
  8915  0816  34F0               	retlw	240
  8916  0817  3400               	retlw	0
  8917  0818  34E0               	retlw	224
  8918  0819  3400               	retlw	0
  8919  081A  34C0               	retlw	192
  8920  081B  3400               	retlw	0
  8921                           
  8922                           	psect	idataBIGRAM
  8923  1700                     __pidataBIGRAM:	
  8924                           
  8925                           ;initializer for _asciiCharTableLookup
  8926  1700  3400               	retlw	0
  8927  1701  3400               	retlw	0
  8928  1702  3400               	retlw	0
  8929  1703  3420               	retlw	32
  8930  1704  3410               	retlw	16
  8931  1705  3410               	retlw	16
  8932  1706  3420               	retlw	32
  8933  1707  3400               	retlw	0
  8934  1708  34A5               	retlw	165
  8935  1709  3421               	retlw	33
  8936  170A  34A5               	retlw	165
  8937  170B  3460               	retlw	96
  8938  170C  3400               	retlw	0
  8939  170D  3412               	retlw	18
  8940  170E  3410               	retlw	16
  8941  170F  3408               	retlw	8
  8942  1710  3420               	retlw	32
  8943  1711  3420               	retlw	32
  8944  1712  34B1               	retlw	177
  8945  1713  3430               	retlw	48
  8946  1714  3485               	retlw	133
  8947  1715  3445               	retlw	69
  8948  1716  3410               	retlw	16
  8949  1717  3430               	retlw	48
  8950  1718  3410               	retlw	16
  8951  1719  3410               	retlw	16
  8952  171A  3410               	retlw	16
  8953  171B  3410               	retlw	16
  8954  171C  3410               	retlw	16
  8955  171D  3410               	retlw	16
  8956  171E  3410               	retlw	16
  8957  171F  3410               	retlw	16
  8958  1720  3410               	retlw	16
  8959  1721  3410               	retlw	16
  8960  1722  3410               	retlw	16
  8961  1723  3410               	retlw	16
  8962  1724  3410               	retlw	16
  8963  1725  3410               	retlw	16
  8964  1726  3410               	retlw	16
  8965  1727  3410               	retlw	16
  8966  1728  3410               	retlw	16
  8967  1729  3410               	retlw	16
  8968  172A  3410               	retlw	16
  8969  172B  3410               	retlw	16
  8970  172C  3410               	retlw	16
  8971  172D  3410               	retlw	16
  8972  172E  3410               	retlw	16
  8973  172F  3410               	retlw	16
  8974  1730  3410               	retlw	16
  8975  1731  3410               	retlw	16
  8976  1732  3410               	retlw	16
  8977  1733  3410               	retlw	16
  8978  1734  3410               	retlw	16
  8979  1735  3410               	retlw	16
  8980  1736  3410               	retlw	16
  8981  1737  3410               	retlw	16
  8982  1738  3410               	retlw	16
  8983  1739  3410               	retlw	16
  8984  173A  3410               	retlw	16
  8985  173B  3410               	retlw	16
  8986  173C  3410               	retlw	16
  8987  173D  3410               	retlw	16
  8988  173E  3410               	retlw	16
  8989  173F  3410               	retlw	16
  8990  1740  3400               	retlw	0
  8991  1741  3400               	retlw	0
  8992  1742  34C0               	retlw	192
  8993  1743  3440               	retlw	64
  8994  1744  3400               	retlw	0
  8995  1745  3444               	retlw	68
  8996  1746  3410               	retlw	16
  8997  1747  3410               	retlw	16
  8998  1748  34B4               	retlw	180
  8999  1749  3435               	retlw	53
  9000  174A  3410               	retlw	16
  9001  174B  3410               	retlw	16
  9002  174C  3410               	retlw	16
  9003  174D  3410               	retlw	16
  9004  174E  3400               	retlw	0
  9005  174F  3404               	retlw	4
  9006  1750  3408               	retlw	8
  9007  1751  3408               	retlw	8
  9008  1752  3402               	retlw	2
  9009  1753  3402               	retlw	2
  9010  1754  341E               	retlw	30
  9011  1755  341E               	retlw	30
  9012  1756  3414               	retlw	20
  9013  1757  3414               	retlw	20
  9014  1758  3440               	retlw	64
  9015  1759  3400               	retlw	0
  9016  175A  3410               	retlw	16
  9017  175B  3410               	retlw	16
  9018  175C  3440               	retlw	64
  9019  175D  3400               	retlw	0
  9020  175E  3402               	retlw	2
  9021  175F  3408               	retlw	8
  9022  1760  34A9               	retlw	169
  9023  1761  3463               	retlw	99
  9024  1762  3480               	retlw	128
  9025  1763  3440               	retlw	64
  9026  1764  3431               	retlw	49
  9027  1765  3470               	retlw	112
  9028  1766  34B0               	retlw	176
  9029  1767  3460               	retlw	96
  9030  1768  3490               	retlw	144
  9031  1769  3451               	retlw	81
  9032  176A  34B0               	retlw	176
  9033  176B  3431               	retlw	49
  9034  176C  34B1               	retlw	177
  9035  176D  3431               	retlw	49
  9036  176E  3480               	retlw	128
  9037  176F  3460               	retlw	96
  9038  1770  34B1               	retlw	177
  9039  1771  3471               	retlw	113
  9040  1772  3490               	retlw	144
  9041  1773  3471               	retlw	113
  9042  1774  3410               	retlw	16
  9043  1775  3410               	retlw	16
  9044  1776  3410               	retlw	16
  9045  1777  3410               	retlw	16
  9046  1778  3408               	retlw	8
  9047  1779  3408               	retlw	8
  9048  177A  3430               	retlw	48
  9049  177B  3410               	retlw	16
  9050  177C  3402               	retlw	2
  9051  177D  3402               	retlw	2
  9052  177E  3414               	retlw	20
  9053  177F  34E1               	retlw	225
  9054  1780  3410               	retlw	16
  9055  1781  3410               	retlw	16
  9056  1782  3491               	retlw	145
  9057  1783  3471               	retlw	113
  9058  1784  34B1               	retlw	177
  9059  1785  3411               	retlw	17
  9060  1786  3421               	retlw	33
  9061  1787  3421               	retlw	33
  9062  1788  34B1               	retlw	177
  9063  1789  3450               	retlw	80
  9064  178A  3421               	retlw	33
  9065  178B  3431               	retlw	49
  9066  178C  3401               	retlw	1
  9067  178D  3431               	retlw	49
  9068  178E  34B1               	retlw	177
  9069  178F  3421               	retlw	33
  9070  1790  3491               	retlw	145
  9071  1791  3451               	retlw	81
  9072  1792  3424               	retlw	36
  9073  1793  3424               	retlw	36
  9074  1794  34A1               	retlw	161
  9075  1795  3440               	retlw	64
  9076  1796  3409               	retlw	9
  9077  1797  3419               	retlw	25
  9078  1798  3421               	retlw	33
  9079  1799  3401               	retlw	1
  9080  179A  3481               	retlw	129
  9081  179B  344B               	retlw	75
  9082  179C  3489               	retlw	137
  9083  179D  3443               	retlw	67
  9084  179E  34A1               	retlw	161
  9085  179F  3461               	retlw	97
  9086  17A0  3411               	retlw	17
  9087  17A1  3471               	retlw	113
  9088  17A2  34A9               	retlw	169
  9089  17A3  3461               	retlw	97
  9090  17A4  3419               	retlw	25
  9091  17A5  3471               	retlw	113
  9092  17A6  34B0               	retlw	176
  9093  17A7  3431               	retlw	49
  9094  17A8  3404               	retlw	4
  9095  17A9  3424               	retlw	36
  9096  17AA  34A1               	retlw	161
  9097  17AB  3441               	retlw	65
  9098  17AC  3403               	retlw	3
  9099  17AD  3409               	retlw	9
  9100  17AE  348B               	retlw	139
  9101  17AF  3441               	retlw	65
  9102  17B0  340A               	retlw	10
  9103  17B1  340A               	retlw	10
  9104  17B2  3404               	retlw	4
  9105  17B3  340A               	retlw	10
  9106  17B4  3422               	retlw	34
  9107  17B5  3428               	retlw	40
  9108  17B6  3421               	retlw	33
  9109  17B7  3421               	retlw	33
  9110  17B8  3408               	retlw	8
  9111  17B9  3402               	retlw	2
  9112  17BA  340A               	retlw	10
  9113  17BB  3400               	retlw	0
  9114  17BC  3420               	retlw	32
  9115  17BD  3400               	retlw	0
  9116  17BE  3410               	retlw	16
  9117  17BF  3410               	retlw	16
  9118  17C0  3491               	retlw	145
  9119  17C1  3471               	retlw	113
  9120  17C2  34B1               	retlw	177
  9121  17C3  3411               	retlw	17
  9122  17C4  3431               	retlw	49
  9123  17C5  3410               	retlw	16
  9124  17C6  34B1               	retlw	177
  9125  17C7  3450               	retlw	80
  9126  17C8  3421               	retlw	33
  9127  17C9  3431               	retlw	49
  9128  17CA  3401               	retlw	1
  9129  17CB  3431               	retlw	49
  9130  17CC  34B1               	retlw	177
  9131  17CD  3421               	retlw	33
  9132  17CE  3491               	retlw	145
  9133  17CF  3451               	retlw	81
  9134  17D0  3424               	retlw	36
  9135  17D1  3424               	retlw	36
  9136  17D2  34A1               	retlw	161
  9137  17D3  3440               	retlw	64
  9138  17D4  3409               	retlw	9
  9139  17D5  3419               	retlw	25
  9140  17D6  3421               	retlw	33
  9141  17D7  3401               	retlw	1
  9142  17D8  3481               	retlw	129
  9143  17D9  344B               	retlw	75
  9144  17DA  3489               	retlw	137
  9145  17DB  3443               	retlw	67
  9146  17DC  34A1               	retlw	161
  9147  17DD  3461               	retlw	97
  9148  17DE  3411               	retlw	17
  9149  17DF  3471               	retlw	113
  9150  17E0  34A9               	retlw	169
  9151  17E1  3461               	retlw	97
  9152  17E2  3419               	retlw	25
  9153  17E3  3471               	retlw	113
  9154  17E4  34B0               	retlw	176
  9155  17E5  3431               	retlw	49
  9156  17E6  3404               	retlw	4
  9157  17E7  3424               	retlw	36
  9158  17E8  34A1               	retlw	161
  9159  17E9  3441               	retlw	65
  9160  17EA  3403               	retlw	3
  9161  17EB  3409               	retlw	9
  9162  17EC  348B               	retlw	139
  9163  17ED  3441               	retlw	65
  9164  17EE  340A               	retlw	10
  9165  17EF  340A               	retlw	10
  9166  17F0  3404               	retlw	4
  9167  17F1  340A               	retlw	10
  9168  17F2  3422               	retlw	34
  9169  17F3  3428               	retlw	40
  9170  17F4  3408               	retlw	8
  9171  17F5  3408               	retlw	8
  9172  17F6  3404               	retlw	4
  9173  17F7  3404               	retlw	4
  9174  17F8  3402               	retlw	2
  9175  17F9  3402               	retlw	2
  9176  17FA  3410               	retlw	16
  9177  17FB  3410               	retlw	16
  9178  17FC  34FF               	retlw	255
  9179  17FD  34FF               	retlw	255
  9180  17FE  3400               	retlw	0
  9181  17FF  3400               	retlw	0
  9182                           
  9183                           	psect	stringtext1
  9184  1000                     __pstringtext1:	
  9185  1000                     _gamma_table_256x1k:	
  9186  1000  3400               	retlw	0
  9187  1001  3400               	retlw	0
  9188  1002  3400               	retlw	0
  9189  1003  3400               	retlw	0
  9190  1004  3400               	retlw	0
  9191  1005  3400               	retlw	0
  9192  1006  3400               	retlw	0
  9193  1007  3400               	retlw	0
  9194  1008  3400               	retlw	0
  9195  1009  3400               	retlw	0
  9196  100A  3400               	retlw	0
  9197  100B  3400               	retlw	0
  9198  100C  3400               	retlw	0
  9199  100D  3400               	retlw	0
  9200  100E  3400               	retlw	0
  9201  100F  3400               	retlw	0
  9202  1010  3400               	retlw	0
  9203  1011  3400               	retlw	0
  9204  1012  3400               	retlw	0
  9205  1013  3400               	retlw	0
  9206  1014  3400               	retlw	0
  9207  1015  3400               	retlw	0
  9208  1016  3400               	retlw	0
  9209  1017  3400               	retlw	0
  9210  1018  3400               	retlw	0
  9211  1019  3400               	retlw	0
  9212  101A  3400               	retlw	0
  9213  101B  3400               	retlw	0
  9214  101C  3400               	retlw	0
  9215  101D  3400               	retlw	0
  9216  101E  3401               	retlw	1
  9217  101F  3400               	retlw	0
  9218  1020  3401               	retlw	1
  9219  1021  3400               	retlw	0
  9220  1022  3401               	retlw	1
  9221  1023  3400               	retlw	0
  9222  1024  3401               	retlw	1
  9223  1025  3400               	retlw	0
  9224  1026  3401               	retlw	1
  9225  1027  3400               	retlw	0
  9226  1028  3401               	retlw	1
  9227  1029  3400               	retlw	0
  9228  102A  3402               	retlw	2
  9229  102B  3400               	retlw	0
  9230  102C  3402               	retlw	2
  9231  102D  3400               	retlw	0
  9232  102E  3402               	retlw	2
  9233  102F  3400               	retlw	0
  9234  1030  3403               	retlw	3
  9235  1031  3400               	retlw	0
  9236  1032  3403               	retlw	3
  9237  1033  3400               	retlw	0
  9238  1034  3403               	retlw	3
  9239  1035  3400               	retlw	0
  9240  1036  3404               	retlw	4
  9241  1037  3400               	retlw	0
  9242  1038  3404               	retlw	4
  9243  1039  3400               	retlw	0
  9244  103A  3404               	retlw	4
  9245  103B  3400               	retlw	0
  9246  103C  3405               	retlw	5
  9247  103D  3400               	retlw	0
  9248  103E  3405               	retlw	5
  9249  103F  3400               	retlw	0
  9250  1040  3406               	retlw	6
  9251  1041  3400               	retlw	0
  9252  1042  3406               	retlw	6
  9253  1043  3400               	retlw	0
  9254  1044  3407               	retlw	7
  9255  1045  3400               	retlw	0
  9256  1046  3407               	retlw	7
  9257  1047  3400               	retlw	0
  9258  1048  3408               	retlw	8
  9259  1049  3400               	retlw	0
  9260  104A  3408               	retlw	8
  9261  104B  3400               	retlw	0
  9262  104C  3409               	retlw	9
  9263  104D  3400               	retlw	0
  9264  104E  3409               	retlw	9
  9265  104F  3400               	retlw	0
  9266  1050  340A               	retlw	10
  9267  1051  3400               	retlw	0
  9268  1052  340B               	retlw	11
  9269  1053  3400               	retlw	0
  9270  1054  340B               	retlw	11
  9271  1055  3400               	retlw	0
  9272  1056  340C               	retlw	12
  9273  1057  3400               	retlw	0
  9274  1058  340D               	retlw	13
  9275  1059  3400               	retlw	0
  9276  105A  340E               	retlw	14
  9277  105B  3400               	retlw	0
  9278  105C  340E               	retlw	14
  9279  105D  3400               	retlw	0
  9280  105E  340F               	retlw	15
  9281  105F  3400               	retlw	0
  9282  1060  3410               	retlw	16
  9283  1061  3400               	retlw	0
  9284  1062  3411               	retlw	17
  9285  1063  3400               	retlw	0
  9286  1064  3412               	retlw	18
  9287  1065  3400               	retlw	0
  9288  1066  3413               	retlw	19
  9289  1067  3400               	retlw	0
  9290  1068  3413               	retlw	19
  9291  1069  3400               	retlw	0
  9292  106A  3414               	retlw	20
  9293  106B  3400               	retlw	0
  9294  106C  3415               	retlw	21
  9295  106D  3400               	retlw	0
  9296  106E  3416               	retlw	22
  9297  106F  3400               	retlw	0
  9298  1070  3417               	retlw	23
  9299  1071  3400               	retlw	0
  9300  1072  3419               	retlw	25
  9301  1073  3400               	retlw	0
  9302  1074  341A               	retlw	26
  9303  1075  3400               	retlw	0
  9304  1076  341B               	retlw	27
  9305  1077  3400               	retlw	0
  9306  1078  341C               	retlw	28
  9307  1079  3400               	retlw	0
  9308  107A  341D               	retlw	29
  9309  107B  3400               	retlw	0
  9310  107C  341E               	retlw	30
  9311  107D  3400               	retlw	0
  9312  107E  3420               	retlw	32
  9313  107F  3400               	retlw	0
  9314  1080  3421               	retlw	33
  9315  1081  3400               	retlw	0
  9316  1082  3422               	retlw	34
  9317  1083  3400               	retlw	0
  9318  1084  3423               	retlw	35
  9319  1085  3400               	retlw	0
  9320  1086  3425               	retlw	37
  9321  1087  3400               	retlw	0
  9322  1088  3426               	retlw	38
  9323  1089  3400               	retlw	0
  9324  108A  3428               	retlw	40
  9325  108B  3400               	retlw	0
  9326  108C  3429               	retlw	41
  9327  108D  3400               	retlw	0
  9328  108E  342A               	retlw	42
  9329  108F  3400               	retlw	0
  9330  1090  342C               	retlw	44
  9331  1091  3400               	retlw	0
  9332  1092  342E               	retlw	46
  9333  1093  3400               	retlw	0
  9334  1094  342F               	retlw	47
  9335  1095  3400               	retlw	0
  9336  1096  3431               	retlw	49
  9337  1097  3400               	retlw	0
  9338  1098  3432               	retlw	50
  9339  1099  3400               	retlw	0
  9340  109A  3434               	retlw	52
  9341  109B  3400               	retlw	0
  9342  109C  3436               	retlw	54
  9343  109D  3400               	retlw	0
  9344  109E  3437               	retlw	55
  9345  109F  3400               	retlw	0
  9346  10A0  3439               	retlw	57
  9347  10A1  3400               	retlw	0
  9348  10A2  343B               	retlw	59
  9349  10A3  3400               	retlw	0
  9350  10A4  343D               	retlw	61
  9351  10A5  3400               	retlw	0
  9352  10A6  343F               	retlw	63
  9353  10A7  3400               	retlw	0
  9354  10A8  3441               	retlw	65
  9355  10A9  3400               	retlw	0
  9356  10AA  3442               	retlw	66
  9357  10AB  3400               	retlw	0
  9358  10AC  3444               	retlw	68
  9359  10AD  3400               	retlw	0
  9360  10AE  3446               	retlw	70
  9361  10AF  3400               	retlw	0
  9362  10B0  3448               	retlw	72
  9363  10B1  3400               	retlw	0
  9364  10B2  344B               	retlw	75
  9365  10B3  3400               	retlw	0
  9366  10B4  344D               	retlw	77
  9367  10B5  3400               	retlw	0
  9368  10B6  344F               	retlw	79
  9369  10B7  3400               	retlw	0
  9370  10B8  3451               	retlw	81
  9371  10B9  3400               	retlw	0
  9372  10BA  3453               	retlw	83
  9373  10BB  3400               	retlw	0
  9374  10BC  3455               	retlw	85
  9375  10BD  3400               	retlw	0
  9376  10BE  3458               	retlw	88
  9377  10BF  3400               	retlw	0
  9378  10C0  345A               	retlw	90
  9379  10C1  3400               	retlw	0
  9380  10C2  345C               	retlw	92
  9381  10C3  3400               	retlw	0
  9382  10C4  345F               	retlw	95
  9383  10C5  3400               	retlw	0
  9384  10C6  3461               	retlw	97
  9385  10C7  3400               	retlw	0
  9386  10C8  3464               	retlw	100
  9387  10C9  3400               	retlw	0
  9388  10CA  3466               	retlw	102
  9389  10CB  3400               	retlw	0
  9390  10CC  3469               	retlw	105
  9391  10CD  3400               	retlw	0
  9392  10CE  346B               	retlw	107
  9393  10CF  3400               	retlw	0
  9394  10D0  346E               	retlw	110
  9395  10D1  3400               	retlw	0
  9396  10D2  3470               	retlw	112
  9397  10D3  3400               	retlw	0
  9398  10D4  3473               	retlw	115
  9399  10D5  3400               	retlw	0
  9400  10D6  3476               	retlw	118
  9401  10D7  3400               	retlw	0
  9402  10D8  3479               	retlw	121
  9403  10D9  3400               	retlw	0
  9404  10DA  347B               	retlw	123
  9405  10DB  3400               	retlw	0
  9406  10DC  347E               	retlw	126
  9407  10DD  3400               	retlw	0
  9408  10DE  3481               	retlw	129
  9409  10DF  3400               	retlw	0
  9410  10E0  3484               	retlw	132
  9411  10E1  3400               	retlw	0
  9412  10E2  3487               	retlw	135
  9413  10E3  3400               	retlw	0
  9414  10E4  348A               	retlw	138
  9415  10E5  3400               	retlw	0
  9416  10E6  348D               	retlw	141
  9417  10E7  3400               	retlw	0
  9418  10E8  3490               	retlw	144
  9419  10E9  3400               	retlw	0
  9420  10EA  3493               	retlw	147
  9421  10EB  3400               	retlw	0
  9422  10EC  3496               	retlw	150
  9423  10ED  3400               	retlw	0
  9424  10EE  349A               	retlw	154
  9425  10EF  3400               	retlw	0
  9426  10F0  349D               	retlw	157
  9427  10F1  3400               	retlw	0
  9428  10F2  34A0               	retlw	160
  9429  10F3  3400               	retlw	0
  9430  10F4  34A3               	retlw	163
  9431  10F5  3400               	retlw	0
  9432  10F6  34A7               	retlw	167
  9433  10F7  3400               	retlw	0
  9434  10F8  34AA               	retlw	170
  9435  10F9  3400               	retlw	0
  9436  10FA  34AE               	retlw	174
  9437  10FB  3400               	retlw	0
  9438  10FC  34B1               	retlw	177
  9439  10FD  3400               	retlw	0
  9440  10FE  34B5               	retlw	181
  9441  10FF  3400               	retlw	0
  9442  1100  34B8               	retlw	184
  9443  1101  3400               	retlw	0
  9444  1102  34BC               	retlw	188
  9445  1103  3400               	retlw	0
  9446  1104  34BF               	retlw	191
  9447  1105  3400               	retlw	0
  9448  1106  34C3               	retlw	195
  9449  1107  3400               	retlw	0
  9450  1108  34C7               	retlw	199
  9451  1109  3400               	retlw	0
  9452  110A  34CA               	retlw	202
  9453  110B  3400               	retlw	0
  9454  110C  34CE               	retlw	206
  9455  110D  3400               	retlw	0
  9456  110E  34D2               	retlw	210
  9457  110F  3400               	retlw	0
  9458  1110  34D6               	retlw	214
  9459  1111  3400               	retlw	0
  9460  1112  34DA               	retlw	218
  9461  1113  3400               	retlw	0
  9462  1114  34DE               	retlw	222
  9463  1115  3400               	retlw	0
  9464  1116  34E2               	retlw	226
  9465  1117  3400               	retlw	0
  9466  1118  34E6               	retlw	230
  9467  1119  3400               	retlw	0
  9468  111A  34EA               	retlw	234
  9469  111B  3400               	retlw	0
  9470  111C  34EE               	retlw	238
  9471  111D  3400               	retlw	0
  9472  111E  34F3               	retlw	243
  9473  111F  3400               	retlw	0
  9474  1120  34F7               	retlw	247
  9475  1121  3400               	retlw	0
  9476  1122  34FB               	retlw	251
  9477  1123  3400               	retlw	0
  9478  1124  34FF               	retlw	255
  9479  1125  3400               	retlw	0
  9480  1126  3404               	retlw	4
  9481  1127  3401               	retlw	1
  9482  1128  3408               	retlw	8
  9483  1129  3401               	retlw	1
  9484  112A  340D               	retlw	13
  9485  112B  3401               	retlw	1
  9486  112C  3411               	retlw	17
  9487  112D  3401               	retlw	1
  9488  112E  3416               	retlw	22
  9489  112F  3401               	retlw	1
  9490  1130  341A               	retlw	26
  9491  1131  3401               	retlw	1
  9492  1132  341F               	retlw	31
  9493  1133  3401               	retlw	1
  9494  1134  3424               	retlw	36
  9495  1135  3401               	retlw	1
  9496  1136  3428               	retlw	40
  9497  1137  3401               	retlw	1
  9498  1138  342D               	retlw	45
  9499  1139  3401               	retlw	1
  9500  113A  3432               	retlw	50
  9501  113B  3401               	retlw	1
  9502  113C  3437               	retlw	55
  9503  113D  3401               	retlw	1
  9504  113E  343C               	retlw	60
  9505  113F  3401               	retlw	1
  9506  1140  3441               	retlw	65
  9507  1141  3401               	retlw	1
  9508  1142  3446               	retlw	70
  9509  1143  3401               	retlw	1
  9510  1144  344B               	retlw	75
  9511  1145  3401               	retlw	1
  9512  1146  3450               	retlw	80
  9513  1147  3401               	retlw	1
  9514  1148  3455               	retlw	85
  9515  1149  3401               	retlw	1
  9516  114A  345A               	retlw	90
  9517  114B  3401               	retlw	1
  9518  114C  345F               	retlw	95
  9519  114D  3401               	retlw	1
  9520  114E  3465               	retlw	101
  9521  114F  3401               	retlw	1
  9522  1150  346A               	retlw	106
  9523  1151  3401               	retlw	1
  9524  1152  346F               	retlw	111
  9525  1153  3401               	retlw	1
  9526  1154  3475               	retlw	117
  9527  1155  3401               	retlw	1
  9528  1156  347A               	retlw	122
  9529  1157  3401               	retlw	1
  9530  1158  3480               	retlw	128
  9531  1159  3401               	retlw	1
  9532  115A  3486               	retlw	134
  9533  115B  3401               	retlw	1
  9534  115C  348B               	retlw	139
  9535  115D  3401               	retlw	1
  9536  115E  3491               	retlw	145
  9537  115F  3401               	retlw	1
  9538  1160  3497               	retlw	151
  9539  1161  3401               	retlw	1
  9540  1162  349C               	retlw	156
  9541  1163  3401               	retlw	1
  9542  1164  34A2               	retlw	162
  9543  1165  3401               	retlw	1
  9544  1166  34A8               	retlw	168
  9545  1167  3401               	retlw	1
  9546  1168  34AE               	retlw	174
  9547  1169  3401               	retlw	1
  9548  116A  34B4               	retlw	180
  9549  116B  3401               	retlw	1
  9550  116C  34BA               	retlw	186
  9551  116D  3401               	retlw	1
  9552  116E  34C0               	retlw	192
  9553  116F  3401               	retlw	1
  9554  1170  34C6               	retlw	198
  9555  1171  3401               	retlw	1
  9556  1172  34CC               	retlw	204
  9557  1173  3401               	retlw	1
  9558  1174  34D2               	retlw	210
  9559  1175  3401               	retlw	1
  9560  1176  34D9               	retlw	217
  9561  1177  3401               	retlw	1
  9562  1178  34DF               	retlw	223
  9563  1179  3401               	retlw	1
  9564  117A  34E5               	retlw	229
  9565  117B  3401               	retlw	1
  9566  117C  34EC               	retlw	236
  9567  117D  3401               	retlw	1
  9568  117E  34F2               	retlw	242
  9569  117F  3401               	retlw	1
  9570  1180  34F9               	retlw	249
  9571  1181  3401               	retlw	1
  9572  1182  34FF               	retlw	255
  9573  1183  3401               	retlw	1
  9574  1184  3406               	retlw	6
  9575  1185  3402               	retlw	2
  9576  1186  340D               	retlw	13
  9577  1187  3402               	retlw	2
  9578  1188  3413               	retlw	19
  9579  1189  3402               	retlw	2
  9580  118A  341A               	retlw	26
  9581  118B  3402               	retlw	2
  9582  118C  3421               	retlw	33
  9583  118D  3402               	retlw	2
  9584  118E  3428               	retlw	40
  9585  118F  3402               	retlw	2
  9586  1190  342F               	retlw	47
  9587  1191  3402               	retlw	2
  9588  1192  3436               	retlw	54
  9589  1193  3402               	retlw	2
  9590  1194  343D               	retlw	61
  9591  1195  3402               	retlw	2
  9592  1196  3444               	retlw	68
  9593  1197  3402               	retlw	2
  9594  1198  344B               	retlw	75
  9595  1199  3402               	retlw	2
  9596  119A  3452               	retlw	82
  9597  119B  3402               	retlw	2
  9598  119C  345A               	retlw	90
  9599  119D  3402               	retlw	2
  9600  119E  3461               	retlw	97
  9601  119F  3402               	retlw	2
  9602  11A0  3468               	retlw	104
  9603  11A1  3402               	retlw	2
  9604  11A2  3470               	retlw	112
  9605  11A3  3402               	retlw	2
  9606  11A4  3477               	retlw	119
  9607  11A5  3402               	retlw	2
  9608  11A6  347F               	retlw	127
  9609  11A7  3402               	retlw	2
  9610  11A8  3486               	retlw	134
  9611  11A9  3402               	retlw	2
  9612  11AA  348E               	retlw	142
  9613  11AB  3402               	retlw	2
  9614  11AC  3495               	retlw	149
  9615  11AD  3402               	retlw	2
  9616  11AE  349D               	retlw	157
  9617  11AF  3402               	retlw	2
  9618  11B0  34A5               	retlw	165
  9619  11B1  3402               	retlw	2
  9620  11B2  34AD               	retlw	173
  9621  11B3  3402               	retlw	2
  9622  11B4  34B5               	retlw	181
  9623  11B5  3402               	retlw	2
  9624  11B6  34BD               	retlw	189
  9625  11B7  3402               	retlw	2
  9626  11B8  34C5               	retlw	197
  9627  11B9  3402               	retlw	2
  9628  11BA  34CD               	retlw	205
  9629  11BB  3402               	retlw	2
  9630  11BC  34D5               	retlw	213
  9631  11BD  3402               	retlw	2
  9632  11BE  34DD               	retlw	221
  9633  11BF  3402               	retlw	2
  9634  11C0  34E5               	retlw	229
  9635  11C1  3402               	retlw	2
  9636  11C2  34ED               	retlw	237
  9637  11C3  3402               	retlw	2
  9638  11C4  34F6               	retlw	246
  9639  11C5  3402               	retlw	2
  9640  11C6  34FE               	retlw	254
  9641  11C7  3402               	retlw	2
  9642  11C8  3406               	retlw	6
  9643  11C9  3403               	retlw	3
  9644  11CA  340F               	retlw	15
  9645  11CB  3403               	retlw	3
  9646  11CC  3418               	retlw	24
  9647  11CD  3403               	retlw	3
  9648  11CE  3420               	retlw	32
  9649  11CF  3403               	retlw	3
  9650  11D0  3429               	retlw	41
  9651  11D1  3403               	retlw	3
  9652  11D2  3431               	retlw	49
  9653  11D3  3403               	retlw	3
  9654  11D4  343A               	retlw	58
  9655  11D5  3403               	retlw	3
  9656  11D6  3443               	retlw	67
  9657  11D7  3403               	retlw	3
  9658  11D8  344C               	retlw	76
  9659  11D9  3403               	retlw	3
  9660  11DA  3455               	retlw	85
  9661  11DB  3403               	retlw	3
  9662  11DC  345E               	retlw	94
  9663  11DD  3403               	retlw	3
  9664  11DE  3467               	retlw	103
  9665  11DF  3403               	retlw	3
  9666  11E0  3470               	retlw	112
  9667  11E1  3403               	retlw	3
  9668  11E2  3479               	retlw	121
  9669  11E3  3403               	retlw	3
  9670  11E4  3482               	retlw	130
  9671  11E5  3403               	retlw	3
  9672  11E6  348C               	retlw	140
  9673  11E7  3403               	retlw	3
  9674  11E8  3495               	retlw	149
  9675  11E9  3403               	retlw	3
  9676  11EA  349E               	retlw	158
  9677  11EB  3403               	retlw	3
  9678  11EC  34A8               	retlw	168
  9679  11ED  3403               	retlw	3
  9680  11EE  34B1               	retlw	177
  9681  11EF  3403               	retlw	3
  9682  11F0  34BB               	retlw	187
  9683  11F1  3403               	retlw	3
  9684  11F2  34C5               	retlw	197
  9685  11F3  3403               	retlw	3
  9686  11F4  34CE               	retlw	206
  9687  11F5  3403               	retlw	3
  9688  11F6  34D8               	retlw	216
  9689  11F7  3403               	retlw	3
  9690  11F8  34E2               	retlw	226
  9691  11F9  3403               	retlw	3
  9692  11FA  34EC               	retlw	236
  9693  11FB  3403               	retlw	3
  9694  11FC  34F6               	retlw	246
  9695  11FD  3403               	retlw	3
  9696  11FE  34FF               	retlw	255
  9697  11FF  3403               	retlw	3
  9698  1200                     __end_of_gamma_table_256x1k:	
  9699                           
  9700                           	psect	stringtext2
  9701  2000                     __pstringtext2:	
  9702  2000                     _dpowers:	
  9703  2000  3401               	retlw	1
  9704  2001  3400               	retlw	0
  9705  2002  340A               	retlw	10
  9706  2003  3400               	retlw	0
  9707  2004  3464               	retlw	100
  9708  2005  3400               	retlw	0
  9709  2006  34E8               	retlw	232
  9710  2007  3403               	retlw	3
  9711  2008  3410               	retlw	16
  9712  2009  3427               	retlw	39
  9713  200A                     __end_of_dpowers:	
  9714  000D                     _PORTBbits	set	13
  9715  000C                     _PORTAbits	set	12
  9716  000E                     _PORTCbits	set	14
  9717  000B                     _INTCONbits	set	11
  9718  0017                     _T0CON0bits	set	23
  9719  0010                     _PIR0bits	set	16
  9720  0015                     _TMR0L	set	21
  9721  0016                     _TMR0H	set	22
  9722  0018                     _T0CON1	set	24
  9723  0017                     _T0CON0	set	23
  9724  0012                     _PIR2bits	set	18
  9725  001F                     _T2CONbits	set	31
  9726  0011                     _PIR1bits	set	17
  9727  001D                     _TMR2	set	29
  9728  001E                     _PR2	set	30
  9729  001F                     _T2CON	set	31
  9730  005F                     _GIE	set	95
  9731  0090                     _PIE0bits	set	144
  9732  008E                     _TRISC	set	142
  9733  008D                     _TRISB	set	141
  9734  008C                     _TRISA	set	140
  9735  0097                     _WDTCON	set	151
  9736  010E                     _LATCbits	set	270
  9737  010D                     _LATBbits	set	269
  9738  010E                     _LATC	set	270
  9739  010D                     _LATB	set	269
  9740  010C                     _LATA	set	268
  9741  018C                     _ANSELA	set	396
  9742  018D                     _ANSELB	set	397
  9743  018E                     _ANSELC	set	398
  9744  020E                     _WPUC	set	526
  9745  020C                     _WPUA	set	524
  9746  020D                     _WPUB	set	525
  9747  0214                     _SSP1STATbits	set	532
  9748  0211                     _SSP1BUF	set	529
  9749  0215                     _SSP1CON1bits	set	533
  9750  0212                     _SSP1ADD	set	530
  9751  0215                     _SSP1CON1	set	533
  9752  0214                     _SSP1STAT	set	532
  9753  0297                     _CCP2CONbits	set	663
  9754  0295                     _CCPR2L	set	661
  9755  0296                     _CCPR2H	set	662
  9756  0297                     _CCP2CON	set	663
  9757  028E                     _ODCONC	set	654
  9758  028D                     _ODCONB	set	653
  9759  028C                     _ODCONA	set	652
  9760  0293                     _CCP1CONbits	set	659
  9761  029F                     _CCPTMRSbits	set	671
  9762  0291                     _CCPR1L	set	657
  9763  0292                     _CCPR1H	set	658
  9764  0293                     _CCP1CON	set	659
  9765  0417                     _T4CONbits	set	1047
  9766  0415                     _TMR4	set	1045
  9767  0416                     _PR4	set	1046
  9768  0417                     _T4CON	set	1047
  9769  061A                     _PWM6DCL	set	1562
  9770  061B                     _PWM6DCH	set	1563
  9771  061C                     _PWM6CON	set	1564
  9772  061F                     _PWMTMRSbits	set	1567
  9773  0617                     _PWM5DCL	set	1559
  9774  0618                     _PWM5DCH	set	1560
  9775  0619                     _PWM5CON	set	1561
  9776  0896                     _NVMCON2	set	2198
  9777  0893                     _NVMDATL	set	2195
  9778  0894                     _NVMDATH	set	2196
  9779  0895                     _NVMCON1bits	set	2197
  9780  0892                     _NVMADRH	set	2194
  9781  0891                     _NVMADRL	set	2193
  9782  091E                     _OSCTUNE	set	2334
  9783  091F                     _OSCFRQ	set	2335
  9784  091D                     _OSCEN	set	2333
  9785  091B                     _OSCCON3	set	2331
  9786  0919                     _OSCCON1	set	2329
  9787  48E0                     _PLLR	set	18656
  9788  0E20                     _SSP1CLKPPSbits	set	3616
  9789  0E21                     _SSP1DATPPSbits	set	3617
  9790  0E0F                     _PPSLOCKbits	set	3599
  9791  0E0F                     _PPSLOCK	set	3599
  9792  0EA2                     _RC2PPSbits	set	3746
  9793  0E9E                     _RB6PPSbits	set	3742
  9794  0EA3                     _RC3PPSbits	set	3747
  9795  0EA0                     _RC0PPSbits	set	3744
  9796  0EA4                     _RC4PPSbits	set	3748
  9797  0EA1                     _RC1PPSbits	set	3745
  9798  200A                     STR_23:	
  9799  200A  3448               	retlw	72	;'H'
  9800  200B  3454               	retlw	84	;'T'
  9801  200C  3454               	retlw	84	;'T'
  9802  200D  3450               	retlw	80	;'P'
  9803  200E  3453               	retlw	83	;'S'
  9804  200F  343A               	retlw	58	;':'
  9805  2010  342F               	retlw	47	;'/'
  9806  2011  342F               	retlw	47	;'/'
  9807  2012  3447               	retlw	71	;'G'
  9808  2013  3449               	retlw	73	;'I'
  9809  2014  3454               	retlw	84	;'T'
  9810  2015  3448               	retlw	72	;'H'
  9811  2016  3455               	retlw	85	;'U'
  9812  2017  3442               	retlw	66	;'B'
  9813  2018  342E               	retlw	46	;'.'
  9814  2019  3443               	retlw	67	;'C'
  9815  201A  344F               	retlw	79	;'O'
  9816  201B  344D               	retlw	77	;'M'
  9817  201C  342F               	retlw	47	;'/'
  9818  201D  344E               	retlw	78	;'N'
  9819  201E  3455               	retlw	85	;'U'
  9820  201F  344C               	retlw	76	;'L'
  9821  2020  344C               	retlw	76	;'L'
  9822  2021  3449               	retlw	73	;'I'
  9823  2022  3442               	retlw	66	;'B'
  9824  2023  3441               	retlw	65	;'A'
  9825  2024  3444               	retlw	68	;'D'
  9826  2025  3447               	retlw	71	;'G'
  9827  2026  3445               	retlw	69	;'E'
  9828  2027  342F               	retlw	47	;'/'
  9829  2028  3444               	retlw	68	;'D'
  9830  2029  3445               	retlw	69	;'E'
  9831  202A  3446               	retlw	70	;'F'
  9832  202B  3443               	retlw	67	;'C'
  9833  202C  344F               	retlw	79	;'O'
  9834  202D  344E               	retlw	78	;'N'
  9835  202E  3432               	retlw	50	;'2'
  9836  202F  3435               	retlw	53	;'5'
  9837  2030  3420               	retlw	32	;' '
  9838  2031  3420               	retlw	32	;' '
  9839  2032  3420               	retlw	32	;' '
  9840  2033  3420               	retlw	32	;' '
  9841  2034  3400               	retlw	0
  9842                           
  9843                           	psect	stringtext3
  9844  2035                     __pstringtext3:	
  9845  2035                     STR_22:	
  9846  2035  3447               	retlw	71	;'G'
  9847  2036  3455               	retlw	85	;'U'
  9848  2037  3459               	retlw	89	;'Y'
  9849  2038  3453               	retlw	83	;'S'
  9850  2039  3420               	retlw	32	;' '
  9851  203A  3449               	retlw	73	;'I'
  9852  203B  3420               	retlw	32	;' '
  9853  203C  3448               	retlw	72	;'H'
  9854  203D  3441               	retlw	65	;'A'
  9855  203E  3456               	retlw	86	;'V'
  9856  203F  3445               	retlw	69	;'E'
  9857  2040  3420               	retlw	32	;' '
  9858  2041  3441               	retlw	65	;'A'
  9859  2042  3420               	retlw	32	;' '
  9860  2043  3447               	retlw	71	;'G'
  9861  2044  3452               	retlw	82	;'R'
  9862  2045  3445               	retlw	69	;'E'
  9863  2046  3441               	retlw	65	;'A'
  9864  2047  3454               	retlw	84	;'T'
  9865  2048  3420               	retlw	32	;' '
  9866  2049  3449               	retlw	73	;'I'
  9867  204A  3444               	retlw	68	;'D'
  9868  204B  3445               	retlw	69	;'E'
  9869  204C  3441               	retlw	65	;'A'
  9870  204D  3420               	retlw	32	;' '
  9871  204E  342D               	retlw	45	;'-'
  9872  204F  344D               	retlw	77	;'M'
  9873  2050  3449               	retlw	73	;'I'
  9874  2051  344B               	retlw	75	;'K'
  9875  2052  3445               	retlw	69	;'E'
  9876  2053  3420               	retlw	32	;' '
  9877  2054  344B               	retlw	75	;'K'
  9878  2055  342E               	retlw	46	;'.'
  9879  2056  3420               	retlw	32	;' '
  9880  2057  3420               	retlw	32	;' '
  9881  2058  3420               	retlw	32	;' '
  9882  2059  3420               	retlw	32	;' '
  9883  205A  3420               	retlw	32	;' '
  9884  205B  3420               	retlw	32	;' '
  9885  205C  3400               	retlw	0
  9886                           
  9887                           	psect	stringtext4
  9888  205D                     __pstringtext4:	
  9889  205D                     STR_18:	
  9890  205D  3441               	retlw	65	;'A'
  9891  205E  344C               	retlw	76	;'L'
  9892  205F  344C               	retlw	76	;'L'
  9893  2060  3420               	retlw	32	;' '
  9894  2061  3459               	retlw	89	;'Y'
  9895  2062  344F               	retlw	79	;'O'
  9896  2063  3455               	retlw	85	;'U'
  9897  2064  3420               	retlw	32	;' '
  9898  2065  3442               	retlw	66	;'B'
  9899  2066  3441               	retlw	65	;'A'
  9900  2067  3453               	retlw	83	;'S'
  9901  2068  3445               	retlw	69	;'E'
  9902  2069  3420               	retlw	32	;' '
  9903  206A  3441               	retlw	65	;'A'
  9904  206B  3452               	retlw	82	;'R'
  9905  206C  3445               	retlw	69	;'E'
  9906  206D  3420               	retlw	32	;' '
  9907  206E  3442               	retlw	66	;'B'
  9908  206F  3445               	retlw	69	;'E'
  9909  2070  344C               	retlw	76	;'L'
  9910  2071  344F               	retlw	79	;'O'
  9911  2072  344E               	retlw	78	;'N'
  9912  2073  3447               	retlw	71	;'G'
  9913  2074  3420               	retlw	32	;' '
  9914  2075  3454               	retlw	84	;'T'
  9915  2076  344F               	retlw	79	;'O'
  9916  2077  3420               	retlw	32	;' '
  9917  2078  3455               	retlw	85	;'U'
  9918  2079  3453               	retlw	83	;'S'
  9919  207A  3420               	retlw	32	;' '
  9920  207B  3420               	retlw	32	;' '
  9921  207C  3420               	retlw	32	;' '
  9922  207D  3420               	retlw	32	;' '
  9923  207E  3420               	retlw	32	;' '
  9924  207F  3400               	retlw	0
  9925                           
  9926                           	psect	stringtext5
  9927  2800                     __pstringtext5:	
  9928  2800                     STR_19:	
  9929  2800  3444               	retlw	68	;'D'
  9930  2801  344F               	retlw	79	;'O'
  9931  2802  3445               	retlw	69	;'E'
  9932  2803  3453               	retlw	83	;'S'
  9933  2804  3420               	retlw	32	;' '
  9934  2805  3444               	retlw	68	;'D'
  9935  2806  3445               	retlw	69	;'E'
  9936  2807  3456               	retlw	86	;'V'
  9937  2808  3441               	retlw	65	;'A'
  9938  2809  344E               	retlw	78	;'N'
  9939  280A  3420               	retlw	32	;' '
  9940  280B  3448               	retlw	72	;'H'
  9941  280C  3441               	retlw	65	;'A'
  9942  280D  3453               	retlw	83	;'S'
  9943  280E  3420               	retlw	32	;' '
  9944  280F  3448               	retlw	72	;'H'
  9945  2810  3449               	retlw	73	;'I'
  9946  2811  3453               	retlw	83	;'S'
  9947  2812  3420               	retlw	32	;' '
  9948  2813  3450               	retlw	80	;'P'
  9949  2814  3448               	retlw	72	;'H'
  9950  2815  344F               	retlw	79	;'O'
  9951  2816  344E               	retlw	78	;'N'
  9952  2817  3445               	retlw	69	;'E'
  9953  2818  343F               	retlw	63	;'?'
  9954  2819  3420               	retlw	32	;' '
  9955  281A  3420               	retlw	32	;' '
  9956  281B  3420               	retlw	32	;' '
  9957  281C  3420               	retlw	32	;' '
  9958  281D  3400               	retlw	0
  9959                           
  9960                           	psect	stringtext6
  9961  281E                     __pstringtext6:	
  9962  281E                     STR_21:	
  9963  281E  344E               	retlw	78	;'N'
  9964  281F  344F               	retlw	79	;'O'
  9965  2820  3454               	retlw	84	;'T'
  9966  2821  3448               	retlw	72	;'H'
  9967  2822  3449               	retlw	73	;'I'
  9968  2823  344E               	retlw	78	;'N'
  9969  2824  3447               	retlw	71	;'G'
  9970  2825  3420               	retlw	32	;' '
  9971  2826  3454               	retlw	84	;'T'
  9972  2827  344F               	retlw	79	;'O'
  9973  2828  3420               	retlw	32	;' '
  9974  2829  3453               	retlw	83	;'S'
  9975  282A  3445               	retlw	69	;'E'
  9976  282B  3445               	retlw	69	;'E'
  9977  282C  3420               	retlw	32	;' '
  9978  282D  3448               	retlw	72	;'H'
  9979  282E  3445               	retlw	69	;'E'
  9980  282F  3452               	retlw	82	;'R'
  9981  2830  3445               	retlw	69	;'E'
  9982  2831  342E               	retlw	46	;'.'
  9983  2832  342E               	retlw	46	;'.'
  9984  2833  342E               	retlw	46	;'.'
  9985  2834  3420               	retlw	32	;' '
  9986  2835  3420               	retlw	32	;' '
  9987  2836  3420               	retlw	32	;' '
  9988  2837  3420               	retlw	32	;' '
  9989  2838  3400               	retlw	0
  9990                           
  9991                           	psect	stringtext7
  9992  2839                     __pstringtext7:	
  9993  2839                     STR_16:	
  9994  2839  3448               	retlw	72	;'H'
  9995  283A  3454               	retlw	84	;'T'
  9996  283B  3454               	retlw	84	;'T'
  9997  283C  3450               	retlw	80	;'P'
  9998  283D  3420               	retlw	32	;' '
  9999  283E  3434               	retlw	52	;'4'
 10000  283F  3431               	retlw	49	;'1'
 10001  2840  3438               	retlw	56	;'8'
 10002  2841  3420               	retlw	32	;' '
 10003  2842  3449               	retlw	73	;'I'
 10004  2843  3427               	retlw	39	;'''
 10005  2844  344D               	retlw	77	;'M'
 10006  2845  3420               	retlw	32	;' '
 10007  2846  3441               	retlw	65	;'A'
 10008  2847  3420               	retlw	32	;' '
 10009  2848  3454               	retlw	84	;'T'
 10010  2849  3445               	retlw	69	;'E'
 10011  284A  3441               	retlw	65	;'A'
 10012  284B  3450               	retlw	80	;'P'
 10013  284C  344F               	retlw	79	;'O'
 10014  284D  3454               	retlw	84	;'T'
 10015  284E  3420               	retlw	32	;' '
 10016  284F  3420               	retlw	32	;' '
 10017  2850  3420               	retlw	32	;' '
 10018  2851  3420               	retlw	32	;' '
 10019  2852  3400               	retlw	0
 10020                           
 10021                           	psect	stringtext8
 10022  2853                     __pstringtext8:	
 10023  2853                     STR_20:	
 10024  2853  3459               	retlw	89	;'Y'
 10025  2854  344F               	retlw	79	;'O'
 10026  2855  3455               	retlw	85	;'U'
 10027  2856  3420               	retlw	32	;' '
 10028  2857  344A               	retlw	74	;'J'
 10029  2858  3455               	retlw	85	;'U'
 10030  2859  3453               	retlw	83	;'S'
 10031  285A  3454               	retlw	84	;'T'
 10032  285B  3420               	retlw	32	;' '
 10033  285C  3448               	retlw	72	;'H'
 10034  285D  3441               	retlw	65	;'A'
 10035  285E  3456               	retlw	86	;'V'
 10036  285F  3445               	retlw	69	;'E'
 10037  2860  3420               	retlw	32	;' '
 10038  2861  3454               	retlw	84	;'T'
 10039  2862  344F               	retlw	79	;'O'
 10040  2863  3420               	retlw	32	;' '
 10041  2864  3442               	retlw	66	;'B'
 10042  2865  3445               	retlw	69	;'E'
 10043  2866  344C               	retlw	76	;'L'
 10044  2867  3449               	retlw	73	;'I'
 10045  2868  3445               	retlw	69	;'E'
 10046  2869  3456               	retlw	86	;'V'
 10047  286A  3445               	retlw	69	;'E'
 10048  286B  3400               	retlw	0
 10049                           
 10050                           	psect	stringtext9
 10051  286C                     __pstringtext9:	
 10052  286C                     STR_17:	
 10053  286C  3449               	retlw	73	;'I'
 10054  286D  3420               	retlw	32	;' '
 10055  286E  3441               	retlw	65	;'A'
 10056  286F  344D               	retlw	77	;'M'
 10057  2870  3420               	retlw	32	;' '
 10058  2871  344A               	retlw	74	;'J'
 10059  2872  3455               	retlw	85	;'U'
 10060  2873  3453               	retlw	83	;'S'
 10061  2874  3454               	retlw	84	;'T'
 10062  2875  3420               	retlw	32	;' '
 10063  2876  3441               	retlw	65	;'A'
 10064  2877  3420               	retlw	32	;' '
 10065  2878  3442               	retlw	66	;'B'
 10066  2879  3441               	retlw	65	;'A'
 10067  287A  3444               	retlw	68	;'D'
 10068  287B  3447               	retlw	71	;'G'
 10069  287C  3445               	retlw	69	;'E'
 10070  287D  3420               	retlw	32	;' '
 10071  287E  3420               	retlw	32	;' '
 10072  287F  3420               	retlw	32	;' '
 10073  2880  3420               	retlw	32	;' '
 10074  2881  3400               	retlw	0
 10075                           
 10076                           	psect	stringtext10
 10077  2882                     __pstringtext10:	
 10078  2882                     STR_15:	
 10079  2882  3457               	retlw	87	;'W'
 10080  2883  3449               	retlw	73	;'I'
 10081  2884  344C               	retlw	76	;'L'
 10082  2885  344C               	retlw	76	;'L'
 10083  2886  3420               	retlw	32	;' '
 10084  2887  3448               	retlw	72	;'H'
 10085  2888  3441               	retlw	65	;'A'
 10086  2889  3443               	retlw	67	;'C'
 10087  288A  344B               	retlw	75	;'K'
 10088  288B  3420               	retlw	32	;' '
 10089  288C  3446               	retlw	70	;'F'
 10090  288D  344F               	retlw	79	;'O'
 10091  288E  3452               	retlw	82	;'R'
 10092  288F  3420               	retlw	32	;' '
 10093  2890  3441               	retlw	65	;'A'
 10094  2891  342F               	retlw	47	;'/'
 10095  2892  3443               	retlw	67	;'C'
 10096  2893  3420               	retlw	32	;' '
 10097  2894  3420               	retlw	32	;' '
 10098  2895  3420               	retlw	32	;' '
 10099  2896  3400               	retlw	0
 10100                           
 10101                           	psect	stringtext11
 10102  2897                     __pstringtext11:	
 10103  2897                     STR_14:	
 10104  2897  3448               	retlw	72	;'H'
 10105  2898  3441               	retlw	65	;'A'
 10106  2899  3443               	retlw	67	;'C'
 10107  289A  344B               	retlw	75	;'K'
 10108  289B  3420               	retlw	32	;' '
 10109  289C  3454               	retlw	84	;'T'
 10110  289D  3448               	retlw	72	;'H'
 10111  289E  3445               	retlw	69	;'E'
 10112  289F  3420               	retlw	32	;' '
 10113  28A0  3450               	retlw	80	;'P'
 10114  28A1  344C               	retlw	76	;'L'
 10115  28A2  3441               	retlw	65	;'A'
 10116  28A3  344E               	retlw	78	;'N'
 10117  28A4  3445               	retlw	69	;'E'
 10118  28A5  3454               	retlw	84	;'T'
 10119  28A6  3420               	retlw	32	;' '
 10120  28A7  3420               	retlw	32	;' '
 10121  28A8  3420               	retlw	32	;' '
 10122  28A9  3400               	retlw	0
 10123                           
 10124                           	psect	stringtext12
 10125  28AA                     __pstringtext12:	
 10126  28AA                     STR_9:	
 10127  28AA  3405               	retlw	5
 10128  28AB  3407               	retlw	7
 10129  28AC  3407               	retlw	7
 10130  28AD  3408               	retlw	8
 10131  28AE  342D               	retlw	45	;'-'
 10132  28AF  342D               	retlw	45	;'-'
 10133  28B0  3420               	retlw	32	;' '
 10134  28B1  3420               	retlw	32	;' '
 10135  28B2  342D               	retlw	45	;'-'
 10136  28B3  342D               	retlw	45	;'-'
 10137  28B4  3409               	retlw	9
 10138  28B5  3407               	retlw	7
 10139  28B6  3407               	retlw	7
 10140  28B7  3406               	retlw	6
 10141  28B8  3420               	retlw	32	;' '
 10142  28B9  340B               	retlw	11
 10143  28BA  3420               	retlw	32	;' '
 10144  28BB  3400               	retlw	0
 10145                           
 10146                           	psect	stringtext13
 10147  28BC                     __pstringtext13:	
 10148  28BC                     STR_26:	
 10149  28BC  3455               	retlw	85	;'U'
 10150  28BD  344E               	retlw	78	;'N'
 10151  28BE  344C               	retlw	76	;'L'
 10152  28BF  344F               	retlw	79	;'O'
 10153  28C0  3443               	retlw	67	;'C'
 10154  28C1  344B               	retlw	75	;'K'
 10155  28C2  3449               	retlw	73	;'I'
 10156  28C3  344E               	retlw	78	;'N'
 10157  28C4  3447               	retlw	71	;'G'
 10158  28C5  342E               	retlw	46	;'.'
 10159  28C6  342E               	retlw	46	;'.'
 10160  28C7  342E               	retlw	46	;'.'
 10161  28C8  3400               	retlw	0
 10162                           
 10163                           	psect	stringtext14
 10164  28C9                     __pstringtext14:	
 10165  28C9                     STR_6:	
 10166  28C9  3450               	retlw	80	;'P'
 10167  28CA  3441               	retlw	65	;'A'
 10168  28CB  3453               	retlw	83	;'S'
 10169  28CC  3453               	retlw	83	;'S'
 10170  28CD  3457               	retlw	87	;'W'
 10171  28CE  344F               	retlw	79	;'O'
 10172  28CF  3452               	retlw	82	;'R'
 10173  28D0  3444               	retlw	68	;'D'
 10174  28D1  3420               	retlw	32	;' '
 10175  28D2  3400               	retlw	0
 10176                           
 10177                           	psect	stringtext15
 10178  28D3                     __pstringtext15:	
 10179  28D3                     STR_11:	
 10180  28D3  344E               	retlw	78	;'N'
 10181  28D4  3455               	retlw	85	;'U'
 10182  28D5  344C               	retlw	76	;'L'
 10183  28D6  344C               	retlw	76	;'L'
 10184  28D7  3449               	retlw	73	;'I'
 10185  28D8  3446               	retlw	70	;'F'
 10186  28D9  3459               	retlw	89	;'Y'
 10187  28DA  3420               	retlw	32	;' '
 10188  28DB  3400               	retlw	0
 10189                           
 10190                           	psect	stringtext16
 10191  28DC                     __pstringtext16:	
 10192  28DC                     STR_12:	
 10193  28DC  3444               	retlw	68	;'D'
 10194  28DD  3445               	retlw	69	;'E'
 10195  28DE  3446               	retlw	70	;'F'
 10196  28DF  3443               	retlw	67	;'C'
 10197  28E0  344F               	retlw	79	;'O'
 10198  28E1  344E               	retlw	78	;'N'
 10199  28E2  3420               	retlw	32	;' '
 10200  28E3  3400               	retlw	0
 10201                           
 10202                           	psect	stringtext17
 10203  28E4                     __pstringtext17:	
 10204  28E4                     STR_13:	
 10205  28E4  3448               	retlw	72	;'H'
 10206  28E5  3441               	retlw	65	;'A'
 10207  28E6  3458               	retlw	88	;'X'
 10208  28E7  3420               	retlw	32	;' '
 10209  28E8  3420               	retlw	32	;' '
 10210  28E9  3400               	retlw	0
 10211                           
 10212                           	psect	stringtext18
 10213  28EA                     __pstringtext18:	
 10214  28EA                     STR_7:	
 10215  28EA  3445               	retlw	69	;'E'
 10216  28EB  3458               	retlw	88	;'X'
 10217  28EC  3449               	retlw	73	;'I'
 10218  28ED  3454               	retlw	84	;'T'
 10219  28EE  3420               	retlw	32	;' '
 10220  28EF  3400               	retlw	0
 10221                           
 10222                           	psect	stringtext19
 10223  28F0                     __pstringtext19:	
 10224  28F0                     STR_5:	
 10225  28F0  3453               	retlw	83	;'S'
 10226  28F1  344C               	retlw	76	;'L'
 10227  28F2  344F               	retlw	79	;'O'
 10228  28F3  3454               	retlw	84	;'T'
 10229  28F4  3420               	retlw	32	;' '
 10230  28F5  3400               	retlw	0
 10231                           
 10232                           	psect	stringtext20
 10233  28F6                     __pstringtext20:	
 10234  28F6                     STR_30:	
 10235  28F6  3424               	retlw	36	;'$'
 10236  28F7  3424               	retlw	36	;'$'
 10237  28F8  3424               	retlw	36	;'$'
 10238  28F9  3420               	retlw	32	;' '
 10239  28FA  3400               	retlw	0
 10240                           
 10241                           	psect	stringtext21
 10242  28FB                     __pstringtext21:	
 10243  28FB                     STR_29:	
 10244  28FB  344C               	retlw	76	;'L'
 10245  28FC  344F               	retlw	79	;'O'
 10246  28FD  3443               	retlw	67	;'C'
 10247  28FE  344B               	retlw	75	;'K'
 10248  28FF  3400               	retlw	0
 10249                           
 10250                           	psect	stringtext22
 10251  2900                     __pstringtext22:	
 10252  2900                     STR_28:	
 10253  2900  344F               	retlw	79	;'O'
 10254  2901  3450               	retlw	80	;'P'
 10255  2902  3445               	retlw	69	;'E'
 10256  2903  344E               	retlw	78	;'N'
 10257  2904  3400               	retlw	0
 10258                           
 10259                           	psect	stringtext23
 10260  2905                     __pstringtext23:	
 10261  2905                     STR_24:	
 10262  2905  3450               	retlw	80	;'P'
 10263  2906  3445               	retlw	69	;'E'
 10264  2907  3457               	retlw	87	;'W'
 10265  2908  3420               	retlw	32	;' '
 10266  2909  3400               	retlw	0
 10267                           
 10268                           	psect	stringtext24
 10269  290A                     __pstringtext24:	
 10270  290A                     STR_8:	
 10271  290A  344E               	retlw	78	;'N'
 10272  290B  3455               	retlw	85	;'U'
 10273  290C  344C               	retlw	76	;'L'
 10274  290D  344C               	retlw	76	;'L'
 10275  290E  3400               	retlw	0
 10276                           
 10277                           	psect	stringtext25
 10278  290F                     __pstringtext25:	
 10279  290F                     STR_4:	
 10280  290F  344D               	retlw	77	;'M'
 10281  2910  3445               	retlw	69	;'E'
 10282  2911  344E               	retlw	78	;'N'
 10283  2912  3455               	retlw	85	;'U'
 10284  2913  3400               	retlw	0
 10285                           
 10286                           	psect	stringtext26
 10287  2914                     __pstringtext26:	
 10288  2914                     STR_2:	
 10289  2914  3444               	retlw	68	;'D'
 10290  2915  344F               	retlw	79	;'O'
 10291  2916  3457               	retlw	87	;'W'
 10292  2917  344E               	retlw	78	;'N'
 10293  2918  3400               	retlw	0
 10294                           
 10295                           	psect	stringtext27
 10296  2919                     __pstringtext27:	
 10297  2919                     STR_1:	
 10298  2919  3420               	retlw	32	;' '
 10299  291A  3420               	retlw	32	;' '
 10300  291B  3455               	retlw	85	;'U'
 10301  291C  3450               	retlw	80	;'P'
 10302  291D  3400               	retlw	0
 10303                           
 10304                           	psect	stringtext28
 10305  291E                     __pstringtext28:	
 10306  291E                     STR_25:	
 10307  291E  3425               	retlw	37	;'%'
 10308  291F  3434               	retlw	52	;'4'
 10309  2920  3464               	retlw	100	;'d'
 10310  2921  3400               	retlw	0
 10311                           
 10312                           	psect	stringtext29
 10313  0000                     __pstringtext29:	
 10314  2058                     
 10315                           ; #config settings
 10316  0000                     
 10317                           	psect	cinit
 10318  0018                     start_initialization:	
 10319  0018                     __initialization:		;BIGRAM
 10320                           
 10321                           ; Initialize objects allocated to BIGRAM
 10322  0018  3000               	movlw	low __pidataBIGRAM
 10323  0019  0084               	movwf	4
 10324  001A  3097               	movlw	(high __pidataBIGRAM)| (0+128)
 10325  001B  0085               	movwf	5
 10326  001C  30F0               	movlw	low (0+9968)
 10327  001D  0086               	movwf	6
 10328  001E  3026               	movlw	high (0+9968)
 10329  001F  0087               	movwf	7
 10330  0020  3001               	movlw	1
 10331  0021  00FF               	movwf	btemp+1
 10332  0022  3000               	movlw	0
 10333  0023  31A5  2568  3180   	fcall	init_ram
 10334                           
 10335                           ; Initialize objects allocated to BANK1
 10336  0026  30D5               	movlw	low __pidataBANK1
 10337  0027  0084               	movwf	4
 10338  0028  30A5               	movlw	(high __pidataBANK1)| (0+128)
 10339  0029  0085               	movwf	5
 10340  002A  30DE               	movlw	low __pdataBANK1
 10341  002B  0086               	movwf	6
 10342  002C  3000               	movlw	high __pdataBANK1
 10343  002D  0087               	movwf	7
 10344  002E  3000               	movlw	0
 10345  002F  00FF               	movwf	btemp+1
 10346  0030  300F               	movlw	15
 10347  0031  31A5  2568  3180   	fcall	init_ram
 10348                           
 10349                           ; Initialize objects allocated to BANK2
 10350  0034  308E               	movlw	low __pidataBANK2
 10351  0035  0084               	movwf	4
 10352  0036  30A5               	movlw	(high __pidataBANK2)| (0+128)
 10353  0037  0085               	movwf	5
 10354  0038  3059               	movlw	low __pdataBANK2
 10355  0039  0086               	movwf	6
 10356  003A  3001               	movlw	high __pdataBANK2
 10357  003B  0087               	movwf	7
 10358  003C  3000               	movlw	0
 10359  003D  00FF               	movwf	btemp+1
 10360  003E  300D               	movlw	13
 10361  003F  31A5  2568  3180   	fcall	init_ram
 10362                           
 10363                           ; Initialize objects allocated to BANK3
 10364  0042  30C5               	movlw	low __pidataBANK3
 10365  0043  0084               	movwf	4
 10366  0044  3098               	movlw	(high __pidataBANK3)| (0+128)
 10367  0045  0085               	movwf	5
 10368  0046  30A0               	movlw	low __pdataBANK3
 10369  0047  0086               	movwf	6
 10370  0048  3001               	movlw	high __pdataBANK3
 10371  0049  0087               	movwf	7
 10372  004A  3000               	movlw	0
 10373  004B  00FF               	movwf	btemp+1
 10374  004C  302F               	movlw	47
 10375  004D  31A5  2568  3180   	fcall	init_ram
 10376                           
 10377                           ; Initialize objects allocated to BANK5
 10378  0050  30F5               	movlw	low __pidataBANK5
 10379  0051  0084               	movwf	4
 10380  0052  3099               	movlw	(high __pidataBANK5)| (0+128)
 10381  0053  0085               	movwf	5
 10382  0054  30A0               	movlw	low __pdataBANK5
 10383  0055  0086               	movwf	6
 10384  0056  3002               	movlw	high __pdataBANK5
 10385  0057  0087               	movwf	7
 10386  0058  3000               	movlw	0
 10387  0059  00FF               	movwf	btemp+1
 10388  005A  3038               	movlw	56
 10389  005B  31A5  2568  3180   	fcall	init_ram
 10390                           
 10391                           ; Initialize objects allocated to BANK6
 10392  005E  30BD               	movlw	low __pidataBANK6
 10393  005F  0084               	movwf	4
 10394  0060  3099               	movlw	(high __pidataBANK6)| (0+128)
 10395  0061  0085               	movwf	5
 10396  0062  3020               	movlw	low __pdataBANK6
 10397  0063  0086               	movwf	6
 10398  0064  3003               	movlw	high __pdataBANK6
 10399  0065  0087               	movwf	7
 10400  0066  3000               	movlw	0
 10401  0067  00FF               	movwf	btemp+1
 10402  0068  3038               	movlw	56
 10403  0069  31A5  2568  3180   	fcall	init_ram
 10404                           
 10405                           ; Initialize objects allocated to BANK7
 10406  006C  3000               	movlw	low __pidataBANK7
 10407  006D  0084               	movwf	4
 10408  006E  3088               	movlw	(high __pidataBANK7)| (0+128)
 10409  006F  0085               	movwf	5
 10410  0070  30BE               	movlw	low __pdataBANK7
 10411  0071  0086               	movwf	6
 10412  0072  3003               	movlw	high __pdataBANK7
 10413  0073  0087               	movwf	7
 10414  0074  3000               	movlw	0
 10415  0075  00FF               	movwf	btemp+1
 10416  0076  301C               	movlw	28
 10417  0077  31A5  2568  3180   	fcall	init_ram
 10418                           
 10419                           ; Clear objects allocated to COMMON
 10420  007A  01FC               	clrf	__pbssCOMMON& (0+127)
 10421                           
 10422                           ; Clear objects allocated to BANK1
 10423  007B  30A0               	movlw	low __pbssBANK1
 10424  007C  0084               	movwf	4
 10425  007D  3000               	movlw	high __pbssBANK1
 10426  007E  0085               	movwf	5
 10427  007F  303E               	movlw	62
 10428  0080  00FE               	movwf	btemp
 10429  0081  3000               	movlw	0
 10430  0082  00FF               	movwf	btemp+1
 10431  0083  31A5  255C  3180   	fcall	clear_ram0
 10432                           
 10433                           ; Clear objects allocated to BANK2
 10434  0086  3020               	movlw	low __pbssBANK2
 10435  0087  0084               	movwf	4
 10436  0088  3001               	movlw	high __pbssBANK2
 10437  0089  0085               	movwf	5
 10438  008A  3039               	movlw	57
 10439  008B  00FE               	movwf	btemp
 10440  008C  3000               	movlw	0
 10441  008D  00FF               	movwf	btemp+1
 10442  008E  31A5  255C  3180   	fcall	clear_ram0
 10443                           
 10444                           ; Clear objects allocated to BANK3
 10445  0091  30CF               	movlw	low __pbssBANK3
 10446  0092  0084               	movwf	4
 10447  0093  3001               	movlw	high __pbssBANK3
 10448  0094  0085               	movwf	5
 10449  0095  300E               	movlw	14
 10450  0096  00FE               	movwf	btemp
 10451  0097  3000               	movlw	0
 10452  0098  00FF               	movwf	btemp+1
 10453  0099  31A5  255C  3180   	fcall	clear_ram0
 10454                           
 10455                           ; Clear objects allocated to BANK4
 10456  009C  3020               	movlw	low __pbssBANK4
 10457  009D  0084               	movwf	4
 10458  009E  3002               	movlw	high __pbssBANK4
 10459  009F  0085               	movwf	5
 10460  00A0  304C               	movlw	76
 10461  00A1  00FE               	movwf	btemp
 10462  00A2  3000               	movlw	0
 10463  00A3  00FF               	movwf	btemp+1
 10464  00A4  31A5  255C  3180   	fcall	clear_ram0
 10465                           
 10466                           ; Clear objects allocated to BANK7
 10467  00A7  30A0               	movlw	low __pbssBANK7
 10468  00A8  0084               	movwf	4
 10469  00A9  3003               	movlw	high __pbssBANK7
 10470  00AA  0085               	movwf	5
 10471  00AB  301E               	movlw	30
 10472  00AC  00FE               	movwf	btemp
 10473  00AD  3000               	movlw	0
 10474  00AE  00FF               	movwf	btemp+1
 10475  00AF  31A5  255C         	fcall	clear_ram0
 10476  00B1                     end_of_initialization:	
 10477                           ;End of C runtime variable initialization code
 10478                           
 10479  00B1                     __end_of__initialization:	
 10480  00B1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10481  00B2  0020               	movlb	0
 10482  00B3  3196  2E16         	ljmp	_main	;jump to C main() function
 10483                           
 10484                           	psect	bssCOMMON
 10485  007C                     __pbssCOMMON:	
 10486  007C                     _badge_locked:	
 10487  007C                     	ds	1
 10488                           
 10489                           	psect	bssBANK1
 10490  00A0                     __pbssBANK1:	
 10491  00A0                     _locked_leds:	
 10492  00A0                     	ds	2
 10493  00A2                     _locked_locking_leds_idx:	
 10494  00A2                     	ds	2
 10495  00A4                     _flashy_option_size:	
 10496  00A4                     	ds	2
 10497  00A6                     _flashy_option_idx:	
 10498  00A6                     	ds	2
 10499  00A8                     _deaths:	
 10500  00A8                     	ds	2
 10501  00AA                     _flashy_scroll_rate:	
 10502  00AA                     	ds	2
 10503  00AC                     _flashy_sparkle_rate:	
 10504  00AC                     	ds	2
 10505  00AE                     _flashy_leds_state_track:	
 10506  00AE                     	ds	2
 10507  00B0                     _flashy_leds_idx:	
 10508  00B0                     	ds	2
 10509  00B2                     _menu_option_size:	
 10510  00B2                     	ds	2
 10511  00B4                     _menu_option_idx:	
 10512  00B4                     	ds	2
 10513  00B6                     _oddeven:	
 10514  00B6                     	ds	2
 10515  00B8                     _currentTask:	
 10516  00B8                     	ds	2
 10517  00BA                     _TMR0_InterruptHandler:	
 10518  00BA                     	ds	2
 10519  00BC                     _timer0ReloadVal16bit:	
 10520  00BC                     	ds	2
 10521  00BE                     _TMR4_InterruptHandler:	
 10522  00BE                     	ds	2
 10523  00C0                     _TMR2_InterruptHandler:	
 10524  00C0                     	ds	2
 10525  00C2                     _menu_task:	
 10526  00C2                     	ds	13
 10527  00CF                     _flashy_task:	
 10528  00CF                     	ds	13
 10529  00DC                     _secret_value:	
 10530  00DC                     	ds	2
 10531                           
 10532                           	psect	dataBANK1
 10533  00DE                     __pdataBANK1:	
 10534  00DE                     marquee_speedy@F14033:	
 10535  00DE                     	ds	5
 10536  00E3                     _randx:	
 10537  00E3                     	ds	4
 10538  00E7                     _locked_lock_base_leds:	
 10539  00E7                     	ds	2
 10540  00E9                     _FLASHY_TEXT_SECRET_TEST:	
 10541  00E9                     	ds	2
 10542  00EB                     _FLASHY_TEXT:	
 10543  00EB                     	ds	2
 10544                           
 10545                           	psect	bssBANK2
 10546  0120                     __pbssBANK2:	
 10547  0120                     _badge_inst:	
 10548  0120                     	ds	18
 10549  0132                     _secret_task:	
 10550  0132                     	ds	13
 10551  013F                     _locked_task:	
 10552  013F                     	ds	13
 10553  014C                     _slot_task:	
 10554  014C                     	ds	13
 10555                           
 10556                           	psect	dataBANK2
 10557  0159                     __pdataBANK2:	
 10558  0159                     _menu_option:	
 10559  0159                     	ds	8
 10560  0161                     marquee@F14042:	
 10561  0161                     	ds	5
 10562                           
 10563                           	psect	bssBANK3
 10564  01CF                     __pbssBANK3:	
 10565  01CF                     _menu_TaskData:	
 10566  01CF                     	ds	14
 10567                           
 10568                           	psect	dataBANK3
 10569  01A0                     __pdataBANK3:	
 10570  01A0                     _locked_locking_leds:	
 10571  01A0                     	ds	12
 10572  01AC                     _menu_options_leds:	
 10573  01AC                     	ds	10
 10574  01B6                     _secret_inputs:	
 10575  01B6                     	ds	25
 10576                           
 10577                           	psect	bssBANK4
 10578  0220                     __pbssBANK4:	
 10579  0220                     _schedulerInst:	
 10580  0220                     	ds	34
 10581  0242                     _secret_TaskData:	
 10582  0242                     	ds	14
 10583  0250                     _locked_TaskData:	
 10584  0250                     	ds	14
 10585  025E                     _slot_TaskData:	
 10586  025E                     	ds	14
 10587                           
 10588                           	psect	dataBANK5
 10589  02A0                     __pdataBANK5:	
 10590  02A0                     _flashy_option:	
 10591  02A0                     	ds	28
 10592  02BC                     _roundabout_leds:	
 10593  02BC                     	ds	28
 10594                           
 10595                           	psect	dataBANK6
 10596  0320                     __pdataBANK6:	
 10597  0320                     _curtain_leds:	
 10598  0320                     	ds	28
 10599  033C                     _roundabout_leds_inverse:	
 10600  033C                     	ds	28
 10601                           
 10602                           	psect	bssBANK7
 10603  03A0                     __pbssBANK7:	
 10604  03A0                     _flashy_TaskData:	
 10605  03A0                     	ds	30
 10606                           
 10607                           	psect	dataBANK7
 10608  03BE                     __pdataBANK7:	
 10609  03BE                     _curtain_leds_inverse:	
 10610  03BE                     	ds	28
 10611                           
 10612                           	psect	inittext
 10613  2568                     init_ram:	
 10614  2568  00FE               	movwf	126
 10615  2569                     initloop:	
 10616  2569  0012               	moviw fsr0++
 10617  256A  001E               	movwi fsr1++
 10618  256B  3001               	movlw	1
 10619  256C  02FE               	subwf	126,f
 10620  256D  3000               	movlw	0
 10621  256E  3BFF               	subwfb	127,f
 10622  256F  087F               	movf	127,w
 10623  2570  047E               	iorwf	126,w
 10624  2571  1903               	btfsc	3,2
 10625  2572  3400               	retlw	0
 10626  2573  2D69               	goto	initloop
 10627                           
 10628                           	psect	clrtext
 10629  255C                     clear_ram0:	
 10630                           ;	Called with FSR0 containing the base address, and
 10631                           ;	btemp/btemp+1 has the size to clear
 10632                           
 10633  255C  0064               	clrwdt	;clear the watchdog before getting into this loop
 10634  255D                     clrloop0:	
 10635  255D  0180               	clrf	0	;clear RAM location pointed to by FSR
 10636  255E  3101               	addfsr 0,1
 10637  255F  3001               	movlw	1
 10638  2560  02FE               	subwf	126,f
 10639  2561  3000               	movlw	0
 10640  2562  3BFF               	subwfb	127,f
 10641  2563  087F               	movf	127,w
 10642  2564  047E               	iorwf	126,w
 10643  2565  1903               	btfsc	3,2
 10644  2566  3400               	retlw	0	;all done for this memory range, return
 10645  2567  2D5D               	goto	clrloop0	;have we reached the end yet?
 10646                           
 10647                           	psect	cstackBANK1
 10648  00ED                     __pcstackBANK1:	
 10649  00ED                     ??_main:	
 10650                           
 10651                           ; 1 bytes @ 0x0
 10652  00ED                     	ds	1
 10653                           
 10654                           	psect	cstackCOMMON
 10655  0070                     __pcstackCOMMON:	
 10656  0070                     ?_isdigit:	
 10657  0070                     ?_TMR2_StartTimer:	
 10658                           ; 1 bit 
 10659                           
 10660  0070                     ?_TMR4_StartTimer:	
 10661                           ; 1 bytes @ 0x0
 10662                           
 10663  0070                     ?_PIN_MANAGER_Initialize:	
 10664                           ; 1 bytes @ 0x0
 10665                           
 10666  0070                     ?_OSCILLATOR_Initialize:	
 10667                           ; 1 bytes @ 0x0
 10668                           
 10669  0070                     ?_WDT_Initialize:	
 10670                           ; 1 bytes @ 0x0
 10671                           
 10672  0070                     ?_PWM2_Initialize:	
 10673                           ; 1 bytes @ 0x0
 10674                           
 10675  0070                     ?_TMR0_Initialize:	
 10676                           ; 1 bytes @ 0x0
 10677                           
 10678  0070                     ?_TMR0_DefaultInterruptHandler:	
 10679                           ; 1 bytes @ 0x0
 10680                           
 10681  0070                     ??_TMR0_DefaultInterruptHandler:	
 10682                           ; 1 bytes @ 0x0
 10683                           
 10684  0070                     ?_TMR0_StartTimer:	
 10685                           ; 1 bytes @ 0x0
 10686                           
 10687  0070                     ?_TMR0_CallBack:	
 10688                           ; 1 bytes @ 0x0
 10689                           
 10690  0070                     ??_TMR0_CallBack:	
 10691                           ; 1 bytes @ 0x0
 10692                           
 10693  0070                     ?_nullifyBadge_segDisplayRegister:	
 10694                           ; 1 bytes @ 0x0
 10695                           
 10696  0070                     ?_nullifyBadge_segDisplayErase:	
 10697                           ; 1 bytes @ 0x0
 10698                           
 10699  0070                     ?_nullifyBadge_segDisplayForceUpdate:	
 10700                           ; 1 bytes @ 0x0
 10701                           
 10702  0070                     ?_nullifyBadge_platformInit:	
 10703                           ; 1 bytes @ 0x0
 10704                           
 10705  0070                     ?_displayL2_Initialize:	
 10706                           ; 1 bytes @ 0x0
 10707                           
 10708  0070                     ?_displayL2_ForceUpdate:	
 10709                           ; 1 bytes @ 0x0
 10710                           
 10711  0070                     ?_displayL2_EraseSegDisplay:	
 10712                           ; 1 bytes @ 0x0
 10713                           
 10714  0070                     ?_displayL2_ClrUserLeds:	
 10715                           ; 1 bytes @ 0x0
 10716                           
 10717  0070                     ?_displayL1_Update:	
 10718                           ; 1 bytes @ 0x0
 10719                           
 10720  0070                     ?_SPI1_Initialize:	
 10721                           ; 1 bytes @ 0x0
 10722                           
 10723  0070                     ?_SPI1_Exchange8bit:	
 10724                           ; 1 bytes @ 0x0
 10725                           
 10726  0070                     ?_PWM5_Initialize:	
 10727                           ; 1 bytes @ 0x0
 10728                           
 10729  0070                     ?_PWM6_Initialize:	
 10730                           ; 1 bytes @ 0x0
 10731                           
 10732  0070                     ?_PWM1_Initialize:	
 10733                           ; 1 bytes @ 0x0
 10734                           
 10735  0070                     ?_TMR2_Initialize:	
 10736                           ; 1 bytes @ 0x0
 10737                           
 10738  0070                     ?_TMR4_Initialize:	
 10739                           ; 1 bytes @ 0x0
 10740                           
 10741  0070                     ?_SYSTEM_Initialize:	
 10742                           ; 1 bytes @ 0x0
 10743                           
 10744  0070                     ?_TMR0_ISR:	
 10745                           ; 1 bytes @ 0x0
 10746                           
 10747  0070                     ??_TMR0_ISR:	
 10748                           ; 1 bytes @ 0x0
 10749                           
 10750  0070                     ?_INTERRUPT_InterruptManager:	
 10751                           ; 1 bytes @ 0x0
 10752                           
 10753  0070                     ??_INTERRUPT_InterruptManager:	
 10754                           ; 1 bytes @ 0x0
 10755                           
 10756  0070                     ?_scheduler_Init:	
 10757                           ; 1 bytes @ 0x0
 10758                           
 10759  0070                     ?_schedulerExecute:	
 10760                           ; 1 bytes @ 0x0
 10761                           
 10762  0070                     ?_led_rand:	
 10763                           ; 1 bytes @ 0x0
 10764                           
 10765  0070                     ?_main:	
 10766                           ; 1 bytes @ 0x0
 10767                           
 10768  0070                     ?_nullifyBadge_userLedsRegister:	
 10769                           ; 1 bytes @ 0x0
 10770                           
 10771  0070                     ?_nullifyBadge_userLedsClr:	
 10772                           ; 1 bytes @ 0x0
 10773                           
 10774  0070                     ?_nullifyBadge_buttonsGet:	
 10775                           ; 1 bytes @ 0x0
 10776                           
 10777  0070                     ?_nullifyBadge_irGet:	
 10778                           ; 1 bytes @ 0x0
 10779                           
 10780  0070                     ?_nullifyBadge_irTxRegister:	
 10781                           ; 1 bytes @ 0x0
 10782                           
 10783  0070                     ?_nullifyBadge_irTxRelease:	
 10784                           ; 1 bytes @ 0x0
 10785                           
 10786  0070                     ?_nullifyBadge_irTxSet:	
 10787                           ; 1 bytes @ 0x0
 10788                           
 10789  0070                     ?_nullifyBadge_irTxClr:	
 10790                           ; 1 bytes @ 0x0
 10791                           
 10792  0070                     ?_displayL1_Initialize:	
 10793                           ; 1 bytes @ 0x0
 10794                           
 10795  0070                     ?_locked_lock_leds:	
 10796                           ; 1 bytes @ 0x0
 10797                           
 10798  0070                     ?_locked_unlock_leds:	
 10799                           ; 2 bytes @ 0x0
 10800                           
 10801                           
 10802                           ; 2 bytes @ 0x0
 10803  0070                     	ds	1
 10804  0071                     ??_TMR2_StartTimer:	
 10805  0071                     ??_TMR4_StartTimer:	
 10806                           ; 1 bytes @ 0x1
 10807                           
 10808  0071                     ??_PIN_MANAGER_Initialize:	
 10809                           ; 1 bytes @ 0x1
 10810                           
 10811  0071                     ??_OSCILLATOR_Initialize:	
 10812                           ; 1 bytes @ 0x1
 10813                           
 10814  0071                     ??_WDT_Initialize:	
 10815                           ; 1 bytes @ 0x1
 10816                           
 10817  0071                     ??_PWM2_Initialize:	
 10818                           ; 1 bytes @ 0x1
 10819                           
 10820  0071                     ?_TMR0_SetInterruptHandler:	
 10821                           ; 1 bytes @ 0x1
 10822                           
 10823  0071                     ??_TMR0_StartTimer:	
 10824                           ; 1 bytes @ 0x1
 10825                           
 10826  0071                     ??_nullifyBadge_segDisplayRegister:	
 10827                           ; 1 bytes @ 0x1
 10828                           
 10829  0071                     ?_memset:	
 10830                           ; 1 bytes @ 0x1
 10831                           
 10832  0071                     ?_secret_clear:	
 10833                           ; 1 bytes @ 0x1
 10834                           
 10835  0071                     ??_isdigit:	
 10836                           ; 1 bytes @ 0x1
 10837                           
 10838  0071                     ??_SPI1_Initialize:	
 10839                           ; 1 bytes @ 0x1
 10840                           
 10841  0071                     ??_SPI1_Exchange8bit:	
 10842                           ; 1 bytes @ 0x1
 10843                           
 10844  0071                     ??_PWM5_Initialize:	
 10845                           ; 1 bytes @ 0x1
 10846                           
 10847  0071                     ?_PWM5_LoadDutyValue:	
 10848                           ; 1 bytes @ 0x1
 10849                           
 10850  0071                     ??_PWM6_Initialize:	
 10851                           ; 1 bytes @ 0x1
 10852                           
 10853  0071                     ?_PWM6_LoadDutyValue:	
 10854                           ; 1 bytes @ 0x1
 10855                           
 10856  0071                     ??_PWM1_Initialize:	
 10857                           ; 1 bytes @ 0x1
 10858                           
 10859  0071                     ?_PWM1_LoadDutyValue:	
 10860                           ; 1 bytes @ 0x1
 10861                           
 10862  0071                     ??_TMR2_Initialize:	
 10863                           ; 1 bytes @ 0x1
 10864                           
 10865  0071                     ??_TMR4_Initialize:	
 10866                           ; 1 bytes @ 0x1
 10867                           
 10868  0071                     ?_PWM2_LoadDutyValue:	
 10869                           ; 1 bytes @ 0x1
 10870                           
 10871  0071                     ??_scheduler_Init:	
 10872                           ; 1 bytes @ 0x1
 10873                           
 10874  0071                     ?_scheduler_TaskInit:	
 10875                           ; 1 bytes @ 0x1
 10876                           
 10877  0071                     ??_nullifyBadge_userLedsRegister:	
 10878                           ; 1 bytes @ 0x1
 10879                           
 10880  0071                     ??_nullifyBadge_buttonsGet:	
 10881                           ; 1 bytes @ 0x1
 10882                           
 10883  0071                     ??_nullifyBadge_irGet:	
 10884                           ; 1 bytes @ 0x1
 10885                           
 10886  0071                     ??_nullifyBadge_irTxRegister:	
 10887                           ; 1 bytes @ 0x1
 10888                           
 10889  0071                     ??_nullifyBadge_irTxRelease:	
 10890                           ; 1 bytes @ 0x1
 10891                           
 10892  0071                     ??_nullifyBadge_irTxSet:	
 10893                           ; 1 bytes @ 0x1
 10894                           
 10895  0071                     ??_nullifyBadge_irTxClr:	
 10896                           ; 1 bytes @ 0x1
 10897                           
 10898  0071                     ?_displayL1_SetUserLed:	
 10899                           ; 1 bytes @ 0x1
 10900                           
 10901  0071                     ??_locked_lock_leds:	
 10902                           ; 1 bytes @ 0x1
 10903                           
 10904  0071                     ??_locked_unlock_leds:	
 10905                           ; 1 bytes @ 0x1
 10906                           
 10907  0071                     ?___bmul:	
 10908                           ; 1 bytes @ 0x1
 10909                           
 10910  0071                     ?_strlen:	
 10911                           ; 1 bytes @ 0x1
 10912                           
 10913  0071                     ?_displayCharReverse:	
 10914                           ; 2 bytes @ 0x1
 10915                           
 10916  0071                     ?_TMR0_Read16bitTimer:	
 10917                           ; 2 bytes @ 0x1
 10918                           
 10919  0071                     ?_locked_get_lock_leds:	
 10920                           ; 2 bytes @ 0x1
 10921                           
 10922  0071                     ?_locked_get_unlock_leds:	
 10923                           ; 2 bytes @ 0x1
 10924                           
 10925  0071                     ?___wmul:	
 10926                           ; 2 bytes @ 0x1
 10927                           
 10928  0071                     ?___lwdiv:	
 10929                           ; 2 bytes @ 0x1
 10930                           
 10931  0071                     ?___lmul:	
 10932                           ; 2 bytes @ 0x1
 10933                           
 10934  0071                     SPI1_Exchange8bit@data:	
 10935                           ; 4 bytes @ 0x1
 10936                           
 10937  0071                     PIN_MANAGER_Initialize@state:	
 10938                           ; 1 bytes @ 0x1
 10939                           
 10940  0071                     nullifyBadge_segDisplayRegister@badge:	
 10941                           ; 1 bytes @ 0x1
 10942                           
 10943  0071                     nullifyBadge_userLedsRegister@badge:	
 10944                           ; 1 bytes @ 0x1
 10945                           
 10946  0071                     nullifyBadge_irTxRegister@badge:	
 10947                           ; 1 bytes @ 0x1
 10948                           
 10949  0071                     ___bmul@multiplicand:	
 10950                           ; 1 bytes @ 0x1
 10951                           
 10952  0071                     _isdigit$3118:	
 10953                           ; 1 bytes @ 0x1
 10954                           
 10955  0071                     PWM5_LoadDutyValue@dutyValue:	
 10956                           ; 1 bytes @ 0x1
 10957                           
 10958  0071                     PWM6_LoadDutyValue@dutyValue:	
 10959                           ; 2 bytes @ 0x1
 10960                           
 10961  0071                     PWM1_LoadDutyValue@dutyValue:	
 10962                           ; 2 bytes @ 0x1
 10963                           
 10964  0071                     PWM2_LoadDutyValue@dutyValue:	
 10965                           ; 2 bytes @ 0x1
 10966                           
 10967  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
 10968                           ; 2 bytes @ 0x1
 10969                           
 10970  0071                     scheduler_TaskInit@task:	
 10971                           ; 2 bytes @ 0x1
 10972                           
 10973  0071                     displayL1_SetUserLed@userLedVect:	
 10974                           ; 2 bytes @ 0x1
 10975                           
 10976  0071                     displayCharReverse@cVal:	
 10977                           ; 2 bytes @ 0x1
 10978                           
 10979  0071                     secret_clear@data:	
 10980                           ; 2 bytes @ 0x1
 10981                           
 10982  0071                     ___wmul@multiplier:	
 10983                           ; 2 bytes @ 0x1
 10984                           
 10985  0071                     ___lwdiv@divisor:	
 10986                           ; 2 bytes @ 0x1
 10987                           
 10988  0071                     memset@c:	
 10989                           ; 2 bytes @ 0x1
 10990                           
 10991  0071                     strlen@s:	
 10992                           ; 2 bytes @ 0x1
 10993                           
 10994  0071                     ___lmul@multiplier:	
 10995                           ; 2 bytes @ 0x1
 10996                           
 10997                           
 10998                           ; 4 bytes @ 0x1
 10999  0071                     	ds	1
 11000  0072                     ?_SPI1_Exchange8bitBuffer:	
 11001  0072                     ??___bmul:	
 11002                           ; 1 bytes @ 0x2
 11003                           
 11004  0072                     SPI1_Exchange8bitBuffer@bufLen:	
 11005                           ; 1 bytes @ 0x2
 11006                           
 11007  0072                     scheduler_Init@scheduler:	
 11008                           ; 1 bytes @ 0x2
 11009                           
 11010  0072                     nullifyBadge_irTxRelease@badge:	
 11011                           ; 1 bytes @ 0x2
 11012                           
 11013  0072                     isdigit@c:	
 11014                           ; 1 bytes @ 0x2
 11015                           
 11016                           
 11017                           ; 1 bytes @ 0x2
 11018  0072                     	ds	1
 11019  0073                     ??_TMR0_Initialize:	
 11020  0073                     ??_TMR0_SetInterruptHandler:	
 11021                           ; 1 bytes @ 0x3
 11022                           
 11023  0073                     ??_strlen:	
 11024                           ; 1 bytes @ 0x3
 11025                           
 11026  0073                     ??_displayCharReverse:	
 11027                           ; 1 bytes @ 0x3
 11028                           
 11029  0073                     ??_secret_clear:	
 11030                           ; 1 bytes @ 0x3
 11031                           
 11032  0073                     ??_PWM5_LoadDutyValue:	
 11033                           ; 1 bytes @ 0x3
 11034                           
 11035  0073                     ??_PWM6_LoadDutyValue:	
 11036                           ; 1 bytes @ 0x3
 11037                           
 11038  0073                     ??_PWM1_LoadDutyValue:	
 11039                           ; 1 bytes @ 0x3
 11040                           
 11041  0073                     ??_SYSTEM_Initialize:	
 11042                           ; 1 bytes @ 0x3
 11043                           
 11044  0073                     ??_PWM2_LoadDutyValue:	
 11045                           ; 1 bytes @ 0x3
 11046                           
 11047  0073                     ??_TMR0_Read16bitTimer:	
 11048                           ; 1 bytes @ 0x3
 11049                           
 11050  0073                     ??_scheduler_TaskInit:	
 11051                           ; 1 bytes @ 0x3
 11052                           
 11053  0073                     ??_displayL1_SetUserLed:	
 11054                           ; 1 bytes @ 0x3
 11055                           
 11056  0073                     ??_locked_get_lock_leds:	
 11057                           ; 1 bytes @ 0x3
 11058                           
 11059  0073                     ??_locked_get_unlock_leds:	
 11060                           ; 1 bytes @ 0x3
 11061                           
 11062  0073                     SPI1_Exchange8bitBuffer@dataOut:	
 11063                           ; 1 bytes @ 0x3
 11064                           
 11065  0073                     scheduler_Init@k:	
 11066                           ; 1 bytes @ 0x3
 11067                           
 11068  0073                     nullifyBadge_buttonsGet@retVal:	
 11069                           ; 1 bytes @ 0x3
 11070                           
 11071  0073                     ___bmul@product:	
 11072                           ; 1 bytes @ 0x3
 11073                           
 11074  0073                     locked_lock_leds@size:	
 11075                           ; 1 bytes @ 0x3
 11076                           
 11077  0073                     locked_get_unlock_leds@leds:	
 11078                           ; 2 bytes @ 0x3
 11079                           
 11080  0073                     ___wmul@multiplicand:	
 11081                           ; 2 bytes @ 0x3
 11082                           
 11083  0073                     ___lwdiv@dividend:	
 11084                           ; 2 bytes @ 0x3
 11085                           
 11086  0073                     memset@n:	
 11087                           ; 2 bytes @ 0x3
 11088                           
 11089                           
 11090                           ; 2 bytes @ 0x3
 11091  0073                     	ds	1
 11092  0074                     ??_SPI1_Exchange8bitBuffer:	
 11093  0074                     displayL1_SetUserLed@display:	
 11094                           ; 1 bytes @ 0x4
 11095                           
 11096  0074                     ___bmul@multiplier:	
 11097                           ; 1 bytes @ 0x4
 11098                           
 11099                           
 11100                           ; 1 bytes @ 0x4
 11101  0074                     	ds	1
 11102  0075                     ??_memset:	
 11103  0075                     ??___wmul:	
 11104                           ; 1 bytes @ 0x5
 11105                           
 11106  0075                     ??___lwdiv:	
 11107                           ; 1 bytes @ 0x5
 11108                           
 11109  0075                     locked_get_lock_leds@size:	
 11110                           ; 1 bytes @ 0x5
 11111                           
 11112  0075                     ___wmul@product:	
 11113                           ; 2 bytes @ 0x5
 11114                           
 11115  0075                     strlen@cp:	
 11116                           ; 2 bytes @ 0x5
 11117                           
 11118  0075                     ___lmul@multiplicand:	
 11119                           ; 2 bytes @ 0x5
 11120                           
 11121                           
 11122                           ; 4 bytes @ 0x5
 11123  0075                     	ds	1
 11124  0076                     ___lwdiv@counter:	
 11125  0076                     memset@p:	
 11126                           ; 1 bytes @ 0x6
 11127                           
 11128                           
 11129                           ; 1 bytes @ 0x6
 11130  0076                     	ds	1
 11131  0077                     ?_secret_check:	
 11132  0077                     SPI1_Exchange8bitBuffer@dataIn:	
 11133                           ; 1 bytes @ 0x7
 11134                           
 11135  0077                     memset@p1:	
 11136                           ; 1 bytes @ 0x7
 11137                           
 11138  0077                     locked_get_lock_leds@leds:	
 11139                           ; 1 bytes @ 0x7
 11140                           
 11141  0077                     secret_check@data:	
 11142                           ; 2 bytes @ 0x7
 11143                           
 11144  0077                     ___lwdiv@quotient:	
 11145                           ; 2 bytes @ 0x7
 11146                           
 11147                           
 11148                           ; 2 bytes @ 0x7
 11149  0077                     	ds	1
 11150  0078                     SPI1_Exchange8bitBuffer@bytesWritten:	
 11151  0078                     displayCharReverse@retValLower:	
 11152                           ; 1 bytes @ 0x8
 11153                           
 11154  0078                     TMR0_Read16bitTimer@readVal:	
 11155                           ; 1 bytes @ 0x8
 11156                           
 11157                           
 11158                           ; 2 bytes @ 0x8
 11159  0078                     	ds	1
 11160  0079                     ??_displayL1_Update:	
 11161  0079                     ??___lmul:	
 11162                           ; 1 bytes @ 0x9
 11163                           
 11164  0079                     ??___almod:	
 11165                           ; 1 bytes @ 0x9
 11166                           
 11167  0079                     ??___lwmod:	
 11168                           ; 1 bytes @ 0x9
 11169                           
 11170  0079                     displayCharReverse@retValUpper:	
 11171                           ; 1 bytes @ 0x9
 11172                           
 11173  0079                     secret_check@buttonPressed:	
 11174                           ; 1 bytes @ 0x9
 11175                           
 11176                           
 11177                           ; 1 bytes @ 0x9
 11178  0079                     	ds	1
 11179  007A                     TMR0_Read16bitTimer@readValLow:	
 11180  007A                     displayCharReverse@retValUpperRev:	
 11181                           ; 1 bytes @ 0xA
 11182                           
 11183  007A                     ___almod@counter:	
 11184                           ; 1 bytes @ 0xA
 11185                           
 11186  007A                     ___lwmod@counter:	
 11187                           ; 1 bytes @ 0xA
 11188                           
 11189                           
 11190                           ; 1 bytes @ 0xA
 11191  007A                     	ds	1
 11192  007B                     ??_displayL2_ForceUpdate:	
 11193  007B                     ??_displayL2_SetUserLeds:	
 11194                           ; 1 bytes @ 0xB
 11195                           
 11196  007B                     ??_displayL2_ClrUserLeds:	
 11197                           ; 1 bytes @ 0xB
 11198                           
 11199  007B                     ??_displayL1_Initialize:	
 11200                           ; 1 bytes @ 0xB
 11201                           
 11202  007B                     TMR0_Read16bitTimer@readValHigh:	
 11203                           ; 1 bytes @ 0xB
 11204                           
 11205  007B                     displayL1_Initialize@display:	
 11206                           ; 1 bytes @ 0xB
 11207                           
 11208  007B                     displayCharReverse@k:	
 11209                           ; 1 bytes @ 0xB
 11210                           
 11211  007B                     displayL2_ForceUpdate@display:	
 11212                           ; 1 bytes @ 0xB
 11213                           
 11214  007B                     displayL2_SetUserLeds@display:	
 11215                           ; 1 bytes @ 0xB
 11216                           
 11217  007B                     displayL2_ClrUserLeds@display:	
 11218                           ; 1 bytes @ 0xB
 11219                           
 11220  007B                     ___almod@sign:	
 11221                           ; 1 bytes @ 0xB
 11222                           
 11223                           
 11224                           ; 1 bytes @ 0xB
 11225  007B                     	ds	1
 11226  007C                     ??_nullifyBadge_segDisplayErase:	
 11227  007C                     ??_nullifyBadge_segDisplayPutStr:	
 11228                           ; 1 bytes @ 0xC
 11229                           
 11230  007C                     ??_nullifyBadge_segDisplayForceUpdate:	
 11231                           ; 1 bytes @ 0xC
 11232                           
 11233  007C                     ??_nullifyBadge_userLedsSet:	
 11234                           ; 1 bytes @ 0xC
 11235                           
 11236  007C                     ??_nullifyBadge_platformInit:	
 11237                           ; 1 bytes @ 0xC
 11238                           
 11239  007C                     ??_flashy_Init:	
 11240                           ; 1 bytes @ 0xC
 11241                           
 11242  007C                     ??_menu_Init:	
 11243                           ; 1 bytes @ 0xC
 11244                           
 11245  007C                     ??_slot_Init:	
 11246                           ; 1 bytes @ 0xC
 11247                           
 11248  007C                     ??_locked_Init:	
 11249                           ; 1 bytes @ 0xC
 11250                           
 11251  007C                     ??_secret_Init:	
 11252                           ; 1 bytes @ 0xC
 11253                           
 11254  007C                     ??_displayL2_Initialize:	
 11255                           ; 1 bytes @ 0xC
 11256                           
 11257  007C                     ??_displayL2_EraseSegDisplay:	
 11258                           ; 1 bytes @ 0xC
 11259                           
 11260  007C                     ??_menu_clear:	
 11261                           ; 1 bytes @ 0xC
 11262                           
 11263  007C                     ??_menu_display_option:	
 11264                           ; 1 bytes @ 0xC
 11265                           
 11266  007C                     ??_menu_run_option:	
 11267                           ; 1 bytes @ 0xC
 11268                           
 11269  007C                     ??_locked_clear:	
 11270                           ; 1 bytes @ 0xC
 11271                           
 11272  007C                     ??_scheduler_TaskRun:	
 11273                           ; 1 bytes @ 0xC
 11274                           
 11275  007C                     ??_led_circle:	
 11276                           ; 1 bytes @ 0xC
 11277                           
 11278  007C                     ??_let_alternate:	
 11279                           ; 1 bytes @ 0xC
 11280                           
 11281  007C                     ??_nullifyBadge_userLedsClr:	
 11282                           ; 1 bytes @ 0xC
 11283                           
 11284  007C                     ??_flashy_display_option:	
 11285                           ; 1 bytes @ 0xC
 11286                           
 11287                           
 11288                           	psect	cstackBANK0
 11289  0020                     __pcstackBANK0:	
 11290                           ; 1 bytes @ 0xC
 11291                           
 11292  0020                     ?_displayL1_SetSegChar:	
 11293  0020                     ??_secret_check:	
 11294                           ; 1 bytes @ 0x0
 11295                           
 11296  0020                     ?___lwmod:	
 11297                           ; 1 bytes @ 0x0
 11298                           
 11299  0020                     displayL1_SetSegChar@c:	
 11300                           ; 2 bytes @ 0x0
 11301                           
 11302  0020                     ___lwmod@divisor:	
 11303                           ; 1 bytes @ 0x0
 11304                           
 11305  0020                     ___lmul@product:	
 11306                           ; 2 bytes @ 0x0
 11307                           
 11308  0020                     displayL1_Update@tmpRxBuf:	
 11309                           ; 4 bytes @ 0x0
 11310                           
 11311                           
 11312                           ; 10 bytes @ 0x0
 11313  0020                     	ds	1
 11314  0021                     displayL1_SetSegChar@charPos:	
 11315                           
 11316                           ; 1 bytes @ 0x1
 11317  0021                     	ds	1
 11318  0022                     ??_displayL1_SetSegChar:	
 11319  0022                     ___lwmod@dividend:	
 11320                           ; 1 bytes @ 0x2
 11321                           
 11322                           
 11323                           ; 2 bytes @ 0x2
 11324  0022                     	ds	1
 11325  0023                     secret_check@size:	
 11326                           
 11327                           ; 2 bytes @ 0x3
 11328  0023                     	ds	1
 11329  0024                     ?_rand:	
 11330  0024                     ?_sprintf:	
 11331                           ; 2 bytes @ 0x4
 11332                           
 11333  0024                     sprintf@f:	
 11334                           ; 2 bytes @ 0x4
 11335                           
 11336                           
 11337                           ; 2 bytes @ 0x4
 11338  0024                     	ds	1
 11339  0025                     secret_check@currents_size:	
 11340                           
 11341                           ; 2 bytes @ 0x5
 11342  0025                     	ds	1
 11343  0026                     ??_rand:	
 11344  0026                     displayL1_SetSegChar@dispDataVectBaseIdx:	
 11345                           ; 1 bytes @ 0x6
 11346                           
 11347                           
 11348                           ; 1 bytes @ 0x6
 11349  0026                     	ds	1
 11350  0027                     displayL1_SetSegChar@display:	
 11351  0027                     secret_check@inputs:	
 11352                           ; 1 bytes @ 0x7
 11353                           
 11354                           
 11355                           ; 1 bytes @ 0x7
 11356  0027                     	ds	1
 11357  0028                     ??_sprintf:	
 11358  0028                     displayL1_SetSegChar@charData:	
 11359                           ; 1 bytes @ 0x8
 11360                           
 11361  0028                     secret_check@i:	
 11362                           ; 2 bytes @ 0x8
 11363                           
 11364                           
 11365                           ; 2 bytes @ 0x8
 11366  0028                     	ds	2
 11367  002A                     ?_displayL2_PutChar:	
 11368  002A                     displayL1_Update@display:	
 11369                           ; 1 bytes @ 0xA
 11370                           
 11371  002A                     displayL2_PutChar@c:	
 11372                           ; 1 bytes @ 0xA
 11373                           
 11374                           
 11375                           ; 1 bytes @ 0xA
 11376  002A                     	ds	1
 11377  002B                     ??_displayL2_PutChar:	
 11378  002B                     ?_displayL2_SetUserLeds:	
 11379                           ; 1 bytes @ 0xB
 11380                           
 11381  002B                     ?___almod:	
 11382                           ; 1 bytes @ 0xB
 11383                           
 11384  002B                     nullifyBadge_segDisplayForceUpdate@badge:	
 11385                           ; 4 bytes @ 0xB
 11386                           
 11387  002B                     nullifyBadge_userLedsClr@badge:	
 11388                           ; 1 bytes @ 0xB
 11389                           
 11390  002B                     displayL2_Initialize@display:	
 11391                           ; 1 bytes @ 0xB
 11392                           
 11393  002B                     displayL2_SetUserLeds@userLedData:	
 11394                           ; 1 bytes @ 0xB
 11395                           
 11396  002B                     ___almod@divisor:	
 11397                           ; 2 bytes @ 0xB
 11398                           
 11399                           
 11400                           ; 4 bytes @ 0xB
 11401  002B                     	ds	1
 11402  002C                     nullifyBadge_platformInit@badge:	
 11403  002C                     sprintf@ap:	
 11404                           ; 1 bytes @ 0xC
 11405                           
 11406                           
 11407                           ; 1 bytes @ 0xC
 11408  002C                     	ds	1
 11409  002D                     ?_nullifyBadge_userLedsSet:	
 11410  002D                     sprintf@prec:	
 11411                           ; 1 bytes @ 0xD
 11412                           
 11413  002D                     nullifyBadge_userLedsSet@userLedData:	
 11414                           ; 1 bytes @ 0xD
 11415                           
 11416                           
 11417                           ; 2 bytes @ 0xD
 11418  002D                     	ds	1
 11419  002E                     displayL2_PutChar@k:	
 11420  002E                     sprintf@flag:	
 11421                           ; 1 bytes @ 0xE
 11422                           
 11423                           
 11424                           ; 1 bytes @ 0xE
 11425  002E                     	ds	1
 11426  002F                     nullifyBadge_userLedsSet@badge:	
 11427  002F                     displayL2_PutChar@display:	
 11428                           ; 1 bytes @ 0xF
 11429                           
 11430  002F                     sprintf@val:	
 11431                           ; 1 bytes @ 0xF
 11432                           
 11433  002F                     ___almod@dividend:	
 11434                           ; 2 bytes @ 0xF
 11435                           
 11436                           
 11437                           ; 4 bytes @ 0xF
 11438  002F                     	ds	1
 11439  0030                     ?_displayL2_PutStr:	
 11440  0030                     ?_led_roundabout:	
 11441                           ; 1 bytes @ 0x10
 11442                           
 11443  0030                     ?_led_curtain:	
 11444                           ; 1 bytes @ 0x10
 11445                           
 11446  0030                     ?_led_circle:	
 11447                           ; 1 bytes @ 0x10
 11448                           
 11449  0030                     ?_let_alternate:	
 11450                           ; 1 bytes @ 0x10
 11451                           
 11452  0030                     ?_led_Parody:	
 11453                           ; 1 bytes @ 0x10
 11454                           
 11455  0030                     led_roundabout@counter:	
 11456                           ; 1 bytes @ 0x10
 11457                           
 11458  0030                     led_curtain@counter:	
 11459                           ; 2 bytes @ 0x10
 11460                           
 11461  0030                     led_circle@count:	
 11462                           ; 2 bytes @ 0x10
 11463                           
 11464  0030                     let_alternate@count:	
 11465                           ; 2 bytes @ 0x10
 11466                           
 11467  0030                     led_Parody@count:	
 11468                           ; 2 bytes @ 0x10
 11469                           
 11470  0030                     displayL2_PutStr@str:	
 11471                           ; 2 bytes @ 0x10
 11472                           
 11473                           
 11474                           ; 2 bytes @ 0x10
 11475  0030                     	ds	1
 11476  0031                     sprintf@sp:	
 11477                           
 11478                           ; 1 bytes @ 0x11
 11479  0031                     	ds	1
 11480  0032                     ??_displayL2_PutStr:	
 11481  0032                     ??_led_roundabout:	
 11482                           ; 1 bytes @ 0x12
 11483                           
 11484  0032                     ??_led_curtain:	
 11485                           ; 1 bytes @ 0x12
 11486                           
 11487  0032                     ??_led_Parody:	
 11488                           ; 1 bytes @ 0x12
 11489                           
 11490  0032                     sprintf@width:	
 11491                           ; 1 bytes @ 0x12
 11492                           
 11493                           
 11494                           ; 2 bytes @ 0x12
 11495  0032                     	ds	1
 11496  0033                     ??_led_rand:	
 11497                           
 11498                           ; 1 bytes @ 0x13
 11499  0033                     	ds	1
 11500  0034                     sprintf@c:	
 11501  0034                     led_roundabout@leds:	
 11502                           ; 1 bytes @ 0x14
 11503                           
 11504  0034                     led_curtain@leds:	
 11505                           ; 2 bytes @ 0x14
 11506                           
 11507  0034                     led_Parody@leds:	
 11508                           ; 2 bytes @ 0x14
 11509                           
 11510                           
 11511                           ; 2 bytes @ 0x14
 11512  0034                     	ds	1
 11513  0035                     displayL2_PutStr@display:	
 11514                           
 11515                           ; 1 bytes @ 0x15
 11516  0035                     	ds	1
 11517  0036                     displayL2_PutStr@k:	
 11518  0036                     led_roundabout@size:	
 11519                           ; 1 bytes @ 0x16
 11520                           
 11521  0036                     led_curtain@size:	
 11522                           ; 2 bytes @ 0x16
 11523                           
 11524  0036                     led_Parody@size:	
 11525                           ; 2 bytes @ 0x16
 11526                           
 11527                           
 11528                           ; 2 bytes @ 0x16
 11529  0036                     	ds	1
 11530  0037                     ?_nullifyBadge_segDisplayPutStr:	
 11531  0037                     displayL2_EraseSegDisplay@display:	
 11532                           ; 1 bytes @ 0x17
 11533                           
 11534  0037                     nullifyBadge_segDisplayPutStr@str:	
 11535                           ; 1 bytes @ 0x17
 11536                           
 11537                           
 11538                           ; 2 bytes @ 0x17
 11539  0037                     	ds	1
 11540  0038                     nullifyBadge_segDisplayErase@badge:	
 11541                           
 11542                           ; 1 bytes @ 0x18
 11543  0038                     	ds	1
 11544  0039                     ?_flashy_Init:	
 11545  0039                     ?_menu_Init:	
 11546                           ; 1 bytes @ 0x19
 11547                           
 11548  0039                     ?_slot_Init:	
 11549                           ; 1 bytes @ 0x19
 11550                           
 11551  0039                     ?_locked_Init:	
 11552                           ; 1 bytes @ 0x19
 11553                           
 11554  0039                     ?_secret_Init:	
 11555                           ; 1 bytes @ 0x19
 11556                           
 11557  0039                     ?_menu_clear:	
 11558                           ; 1 bytes @ 0x19
 11559                           
 11560  0039                     ?_locked_clear:	
 11561                           ; 1 bytes @ 0x19
 11562                           
 11563  0039                     nullifyBadge_segDisplayPutStr@badge:	
 11564                           ; 1 bytes @ 0x19
 11565                           
 11566  0039                     menu_Init@taskData:	
 11567                           ; 1 bytes @ 0x19
 11568                           
 11569  0039                     menu_clear@data:	
 11570                           ; 2 bytes @ 0x19
 11571                           
 11572  0039                     flashy_Init@taskData:	
 11573                           ; 2 bytes @ 0x19
 11574                           
 11575  0039                     locked_Init@taskData:	
 11576                           ; 2 bytes @ 0x19
 11577                           
 11578  0039                     locked_clear@data:	
 11579                           ; 2 bytes @ 0x19
 11580                           
 11581  0039                     secret_Init@taskData:	
 11582                           ; 2 bytes @ 0x19
 11583                           
 11584  0039                     slot_Init@taskData:	
 11585                           ; 2 bytes @ 0x19
 11586                           
 11587                           
 11588                           ; 2 bytes @ 0x19
 11589  0039                     	ds	1
 11590  003A                     ?_marquee_speedy:	
 11591  003A                     ?_marquee:	
 11592                           ; 1 bytes @ 0x1A
 11593                           
 11594  003A                     marquee_speedy@string:	
 11595                           ; 1 bytes @ 0x1A
 11596                           
 11597  003A                     marquee@string:	
 11598                           ; 2 bytes @ 0x1A
 11599                           
 11600                           
 11601                           ; 2 bytes @ 0x1A
 11602  003A                     	ds	1
 11603  003B                     ?_menu_run_option:	
 11604  003B                     led_rand@spark:	
 11605                           ; 1 bytes @ 0x1B
 11606                           
 11607  003B                     menu_Init@data:	
 11608                           ; 2 bytes @ 0x1B
 11609                           
 11610  003B                     menu_run_option@data:	
 11611                           ; 2 bytes @ 0x1B
 11612                           
 11613  003B                     flashy_Init@data:	
 11614                           ; 2 bytes @ 0x1B
 11615                           
 11616  003B                     locked_Init@data:	
 11617                           ; 2 bytes @ 0x1B
 11618                           
 11619  003B                     secret_Init@data:	
 11620                           ; 2 bytes @ 0x1B
 11621                           
 11622  003B                     slot_Init@data:	
 11623                           ; 2 bytes @ 0x1B
 11624                           
 11625                           
 11626                           ; 2 bytes @ 0x1B
 11627  003B                     	ds	1
 11628  003C                     marquee_speedy@count:	
 11629  003C                     marquee@count:	
 11630                           ; 2 bytes @ 0x1C
 11631                           
 11632                           
 11633                           ; 2 bytes @ 0x1C
 11634  003C                     	ds	1
 11635  003D                     ?_scheduler_TaskAdd:	
 11636  003D                     scheduler_TaskAdd@task:	
 11637                           ; 1 bytes @ 0x1D
 11638                           
 11639                           
 11640                           ; 2 bytes @ 0x1D
 11641  003D                     	ds	1
 11642  003E                     ??_marquee:	
 11643  003E                     marquee_speedy@multiplier:	
 11644                           ; 1 bytes @ 0x1E
 11645                           
 11646                           
 11647                           ; 2 bytes @ 0x1E
 11648  003E                     	ds	1
 11649  003F                     ??_scheduler_TaskAdd:	
 11650  003F                     marquee@display_string:	
 11651                           ; 1 bytes @ 0x1F
 11652                           
 11653                           
 11654                           ; 5 bytes @ 0x1F
 11655  003F                     	ds	1
 11656  0040                     ??_marquee_speedy:	
 11657                           
 11658                           ; 1 bytes @ 0x20
 11659  0040                     	ds	1
 11660  0041                     marquee_speedy@display_string:	
 11661                           
 11662                           ; 5 bytes @ 0x21
 11663  0041                     	ds	3
 11664  0044                     marquee@multiplier:	
 11665                           
 11666                           ; 2 bytes @ 0x24
 11667  0044                     	ds	1
 11668  0045                     scheduler_TaskAdd@scheduler:	
 11669                           
 11670                           ; 1 bytes @ 0x25
 11671  0045                     	ds	1
 11672  0046                     scheduler_TaskAdd@k:	
 11673  0046                     marquee_speedy@i:	
 11674                           ; 1 bytes @ 0x26
 11675                           
 11676  0046                     marquee@i:	
 11677                           ; 2 bytes @ 0x26
 11678                           
 11679                           
 11680                           ; 2 bytes @ 0x26
 11681  0046                     	ds	2
 11682  0048                     marquee_speedy@string_length:	
 11683  0048                     marquee@string_length:	
 11684                           ; 2 bytes @ 0x28
 11685                           
 11686                           
 11687                           ; 2 bytes @ 0x28
 11688  0048                     	ds	2
 11689  004A                     marquee_speedy@j:	
 11690  004A                     marquee@j:	
 11691                           ; 2 bytes @ 0x2A
 11692                           
 11693                           
 11694                           ; 2 bytes @ 0x2A
 11695  004A                     	ds	2
 11696  004C                     ?_menu_display_option:	
 11697  004C                     ?_flashy_display_option:	
 11698                           ; 1 bytes @ 0x2C
 11699                           
 11700  004C                     menu_display_option@data:	
 11701                           ; 1 bytes @ 0x2C
 11702                           
 11703  004C                     flashy_display_option@data:	
 11704                           ; 2 bytes @ 0x2C
 11705                           
 11706                           
 11707                           ; 2 bytes @ 0x2C
 11708  004C                     	ds	2
 11709  004E                     menu_display_option@size:	
 11710                           
 11711                           ; 2 bytes @ 0x2E
 11712  004E                     	ds	2
 11713  0050                     menu_display_option@led:	
 11714                           
 11715                           ; 2 bytes @ 0x30
 11716  0050                     	ds	2
 11717  0052                     ?_flashy_Main:	
 11718  0052                     ?_menu_Main:	
 11719                           ; 1 bytes @ 0x32
 11720                           
 11721  0052                     ?_slot_Main:	
 11722                           ; 1 bytes @ 0x32
 11723                           
 11724  0052                     ?_locked_Main:	
 11725                           ; 1 bytes @ 0x32
 11726                           
 11727  0052                     ?_secret_Main:	
 11728                           ; 1 bytes @ 0x32
 11729                           
 11730  0052                     menu_Main@taskData:	
 11731                           ; 1 bytes @ 0x32
 11732                           
 11733  0052                     flashy_Main@taskData:	
 11734                           ; 2 bytes @ 0x32
 11735                           
 11736  0052                     locked_Main@taskData:	
 11737                           ; 2 bytes @ 0x32
 11738                           
 11739  0052                     secret_Main@taskData:	
 11740                           ; 2 bytes @ 0x32
 11741                           
 11742  0052                     slot_Main@taskData:	
 11743                           ; 2 bytes @ 0x32
 11744                           
 11745                           
 11746                           ; 2 bytes @ 0x32
 11747  0052                     	ds	2
 11748  0054                     ??_flashy_Main:	
 11749  0054                     ??_menu_Main:	
 11750                           ; 1 bytes @ 0x34
 11751                           
 11752  0054                     ??_slot_Main:	
 11753                           ; 1 bytes @ 0x34
 11754                           
 11755  0054                     ??_locked_Main:	
 11756                           ; 1 bytes @ 0x34
 11757                           
 11758  0054                     ??_secret_Main:	
 11759                           ; 1 bytes @ 0x34
 11760                           
 11761                           
 11762                           ; 1 bytes @ 0x34
 11763  0054                     	ds	1
 11764  0055                     slot_Main@buttonPressed:	
 11765                           
 11766                           ; 1 bytes @ 0x35
 11767  0055                     	ds	1
 11768  0056                     menu_Main@buttonPressed:	
 11769  0056                     locked_Main@buttonPressed:	
 11770                           ; 1 bytes @ 0x36
 11771                           
 11772  0056                     secret_Main@secret_found:	
 11773                           ; 1 bytes @ 0x36
 11774                           
 11775  0056                     slot_Main@data:	
 11776                           ; 1 bytes @ 0x36
 11777                           
 11778  0056                     flashy_Main@hit_counter:	
 11779                           ; 2 bytes @ 0x36
 11780                           
 11781                           
 11782                           ; 6 bytes @ 0x36
 11783  0056                     	ds	1
 11784  0057                     secret_Main@buttonPressed:	
 11785  0057                     menu_Main@data:	
 11786                           ; 1 bytes @ 0x37
 11787                           
 11788  0057                     locked_Main@data:	
 11789                           ; 2 bytes @ 0x37
 11790                           
 11791                           
 11792                           ; 2 bytes @ 0x37
 11793  0057                     	ds	1
 11794  0058                     secret_Main@data:	
 11795                           
 11796                           ; 2 bytes @ 0x38
 11797  0058                     	ds	4
 11798  005C                     flashy_Main@buttonPressed:	
 11799                           
 11800                           ; 2 bytes @ 0x3C
 11801  005C                     	ds	2
 11802  005E                     flashy_Main@data:	
 11803                           
 11804                           ; 2 bytes @ 0x3E
 11805  005E                     	ds	2
 11806  0060                     ?_scheduler_TaskRun:	
 11807  0060                     scheduler_TaskRun@task:	
 11808                           ; 1 bytes @ 0x40
 11809                           
 11810                           
 11811                           ; 2 bytes @ 0x40
 11812  0060                     	ds	2
 11813  0062                     ??_schedulerExecute:	
 11814                           
 11815                           ; 1 bytes @ 0x42
 11816  0062                     	ds	6
 11817  0068                     schedulerExecute@currentSystemTick:	
 11818                           
 11819                           ; 2 bytes @ 0x48
 11820  0068                     	ds	2
 11821  006A                     schedulerExecute@taskLastSystemTick:	
 11822                           
 11823                           ; 2 bytes @ 0x4A
 11824  006A                     	ds	2
 11825  006C                     schedulerExecute@tickDelta:	
 11826                           
 11827                           ; 2 bytes @ 0x4C
 11828  006C                     	ds	2
 11829  006E                     schedulerExecute@scheduler:	
 11830                           
 11831                           ; 1 bytes @ 0x4E
 11832  006E                     	ds	1
 11833  006F                     schedulerExecute@k:	
 11834                           
 11835                           ; 1 bytes @ 0x4F
 11836  006F                     	ds	1
 11837                           
 11838                           	psect	maintext
 11839  1616                     __pmaintext:	
 11840 ;;
 11841 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 11842 ;;
 11843 ;; *************** function _main *****************
 11844 ;; Defined at:
 11845 ;;		line 222 in file "main.c"
 11846 ;; Parameters:    Size  Location     Type
 11847 ;;		None
 11848 ;; Auto vars:     Size  Location     Type
 11849 ;;		None
 11850 ;; Return value:  Size  Location     Type
 11851 ;;                  1    wreg      void 
 11852 ;; Registers used:
 11853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11854 ;; Tracked objects:
 11855 ;;		On entry : B1F/0
 11856 ;;		On exit  : 0/0
 11857 ;;		Unchanged: 0/0
 11858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11861 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11862 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11863 ;;Total ram usage:        1 bytes
 11864 ;; Hardware stack levels required when called:   15
 11865 ;; This function calls:
 11866 ;;		_nullifyBadge_platformInit
 11867 ;;		_schedulerExecute
 11868 ;;		_scheduler_Init
 11869 ;;		_scheduler_TaskAdd
 11870 ;;		_scheduler_TaskInit
 11871 ;; This function is called by:
 11872 ;;		Startup code after reset
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           
 11876                           
 11877                           ;psect for function _main
 11878  1616                     _main:	
 11879                           
 11880                           ;main.c: 225: nullifyBadge_platformInit(&badge_inst);
 11881                           
 11882                           ;incstack = 0
 11883                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11884  1616  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11885  1617  319D  2570  3196   	fcall	_nullifyBadge_platformInit
 11886                           
 11887                           ;main.c: 228: scheduler_Init(&schedulerInst);
 11888  161A  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11889  161B  31A7  2725  3196   	fcall	_scheduler_Init
 11890                           
 11891                           ;main.c: 231: scheduler_TaskInit(&flashy_task);
 11892  161E  30CF               	movlw	low _flashy_task
 11893  161F  00F1               	movwf	scheduler_TaskInit@task
 11894  1620  3000               	movlw	high _flashy_task
 11895  1621  00F2               	movwf	scheduler_TaskInit@task+1
 11896  1622  319A  2267  3196   	fcall	_scheduler_TaskInit
 11897                           
 11898                           ;main.c: 232: scheduler_TaskInit(&menu_task);
 11899  1625  30C2               	movlw	low _menu_task
 11900  1626  00F1               	movwf	scheduler_TaskInit@task
 11901  1627  3000               	movlw	high _menu_task
 11902  1628  00F2               	movwf	scheduler_TaskInit@task+1
 11903  1629  319A  2267  3196   	fcall	_scheduler_TaskInit
 11904                           
 11905                           ;main.c: 233: scheduler_TaskInit(&slot_task);
 11906  162C  304C               	movlw	low _slot_task
 11907  162D  00F1               	movwf	scheduler_TaskInit@task
 11908  162E  3001               	movlw	high _slot_task
 11909  162F  00F2               	movwf	scheduler_TaskInit@task+1
 11910  1630  319A  2267  3196   	fcall	_scheduler_TaskInit
 11911                           
 11912                           ;main.c: 234: scheduler_TaskInit(&locked_task);
 11913  1633  303F               	movlw	low _locked_task
 11914  1634  00F1               	movwf	scheduler_TaskInit@task
 11915  1635  3001               	movlw	high _locked_task
 11916  1636  00F2               	movwf	scheduler_TaskInit@task+1
 11917  1637  319A  2267  3196   	fcall	_scheduler_TaskInit
 11918                           
 11919                           ;main.c: 235: scheduler_TaskInit(&secret_task);
 11920  163A  3032               	movlw	low _secret_task
 11921  163B  00F1               	movwf	scheduler_TaskInit@task
 11922  163C  3001               	movlw	high _secret_task
 11923  163D  00F2               	movwf	scheduler_TaskInit@task+1
 11924  163E  319A  2267  3196   	fcall	_scheduler_TaskInit
 11925                           
 11926                           ;main.c: 238: flashy_TaskData.badge = &badge_inst;
 11927  1641  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11928  1642  0021               	movlb	1	; select bank1
 11929  1643  00ED               	movwf	??_main^(0+128)
 11930  1644  086D               	movf	??_main^(0+128),w
 11931  1645  0027               	movlb	7	; select bank7
 11932  1646  00A0               	movwf	_flashy_TaskData^(0+896)
 11933                           
 11934                           ;main.c: 239: menu_TaskData.badge = &badge_inst;
 11935  1647  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11936  1648  0021               	movlb	1	; select bank1
 11937  1649  00ED               	movwf	??_main^(0+128)
 11938  164A  086D               	movf	??_main^(0+128),w
 11939  164B  0023               	movlb	3	; select bank3
 11940  164C  00CF               	movwf	_menu_TaskData^(0+384)
 11941                           
 11942                           ;main.c: 240: slot_TaskData.badge = &badge_inst;
 11943  164D  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11944  164E  0021               	movlb	1	; select bank1
 11945  164F  00ED               	movwf	??_main^(0+128)
 11946  1650  086D               	movf	??_main^(0+128),w
 11947  1651  0024               	movlb	4	; select bank4
 11948  1652  00DE               	movwf	_slot_TaskData^(0+512)
 11949                           
 11950                           ;main.c: 241: locked_TaskData.badge = &badge_inst;
 11951  1653  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11952  1654  0021               	movlb	1	; select bank1
 11953  1655  00ED               	movwf	??_main^(0+128)
 11954  1656  086D               	movf	??_main^(0+128),w
 11955  1657  0024               	movlb	4	; select bank4
 11956  1658  00D0               	movwf	_locked_TaskData^(0+512)
 11957                           
 11958                           ;main.c: 242: secret_TaskData.badge = &badge_inst;
 11959  1659  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11960  165A  0021               	movlb	1	; select bank1
 11961  165B  00ED               	movwf	??_main^(0+128)
 11962  165C  086D               	movf	??_main^(0+128),w
 11963  165D  0024               	movlb	4	; select bank4
 11964  165E  00C2               	movwf	_secret_TaskData^(0+512)
 11965                           
 11966                           ;main.c: 245: badge_locked = 1;
 11967  165F  01FC               	clrf	_badge_locked
 11968  1660  0AFC               	incf	_badge_locked,f
 11969                           
 11970                           ;main.c: 248: flashy_task.taskData = (void *) &flashy_TaskData;
 11971  1661  30A0               	movlw	low _flashy_TaskData
 11972  1662  0021               	movlb	1	; select bank1
 11973  1663  00D1               	movwf	(low ((_flashy_task| 0+2)))^(0+128)
 11974  1664  3003               	movlw	high _flashy_TaskData
 11975  1665  00D2               	movwf	((low ((_flashy_task| 0+2))+1))^(0+128)
 11976                           
 11977                           ;main.c: 249: flashy_task.taskInitCallback = flashy_Init;
 11978  1666  30C5               	movlw	low _flashy_Init
 11979  1667  00D3               	movwf	(low ((_flashy_task| 0+4)))^(0+128)
 11980  1668  3014               	movlw	high _flashy_Init
 11981  1669  00D4               	movwf	((low ((_flashy_task| 0+4)))^(0+128)+1)
 11982                           
 11983                           ;main.c: 250: flashy_task.taskExecuteCallback = flashy_Main;
 11984  166A  301C               	movlw	low _flashy_Main
 11985  166B  00D7               	movwf	(low ((_flashy_task| 0+8)))^(0+128)
 11986  166C  3008               	movlw	high _flashy_Main
 11987  166D  00D8               	movwf	((low ((_flashy_task| 0+8)))^(0+128)+1)
 11988                           
 11989                           ;main.c: 251: flashy_task.taskExitCallback = flashy_Exit;
 11990  166E  3000               	movlw	0
 11991  166F  00D5               	movwf	(low ((_flashy_task| 0+6)))^(0+128)
 11992  1670  3000               	movlw	0
 11993  1671  00D6               	movwf	((low ((_flashy_task| 0+6)))^(0+128)+1)
 11994                           
 11995                           ;main.c: 252: flashy_task.taskInterval = 10;
 11996  1672  300A               	movlw	10
 11997  1673  00D9               	movwf	(_flashy_task^(0+128)+10)
 11998  1674  3000               	movlw	0
 11999  1675  00DA               	movwf	(_flashy_task^(0+128)+11)
 12000                           
 12001                           ;main.c: 254: menu_task.taskData = (void *) &menu_TaskData;
 12002  1676  30CF               	movlw	low _menu_TaskData
 12003  1677  00C4               	movwf	(low ((_menu_task| 0+2)))^(0+128)
 12004  1678  3001               	movlw	high _menu_TaskData
 12005  1679  00C5               	movwf	((low ((_menu_task| 0+2))+1))^(0+128)
 12006                           
 12007                           ;main.c: 255: menu_task.taskInitCallback = menu_Init;
 12008  167A  303B               	movlw	low _menu_Init
 12009  167B  00C6               	movwf	(low ((_menu_task| 0+4)))^(0+128)
 12010  167C  301F               	movlw	high _menu_Init
 12011  167D  00C7               	movwf	((low ((_menu_task| 0+4)))^(0+128)+1)
 12012                           
 12013                           ;main.c: 256: menu_task.taskExecuteCallback = menu_Main;
 12014  167E  30B5               	movlw	low _menu_Main
 12015  167F  00CA               	movwf	(low ((_menu_task| 0+8)))^(0+128)
 12016  1680  3000               	movlw	high _menu_Main
 12017  1681  00CB               	movwf	((low ((_menu_task| 0+8)))^(0+128)+1)
 12018                           
 12019                           ;main.c: 257: menu_task.taskExitCallback = menu_Exit;
 12020  1682  3000               	movlw	0
 12021  1683  00C8               	movwf	(low ((_menu_task| 0+6)))^(0+128)
 12022  1684  3000               	movlw	0
 12023  1685  00C9               	movwf	((low ((_menu_task| 0+6)))^(0+128)+1)
 12024                           
 12025                           ;main.c: 258: menu_task.taskInterval = 10;
 12026  1686  300A               	movlw	10
 12027  1687  00CC               	movwf	(_menu_task^(0+128)+10)
 12028  1688  3000               	movlw	0
 12029  1689  00CD               	movwf	(_menu_task^(0+128)+11)
 12030                           
 12031                           ;main.c: 260: slot_task.taskData = (void *) &slot_TaskData;
 12032  168A  305E               	movlw	low _slot_TaskData
 12033  168B  0022               	movlb	2	; select bank2
 12034  168C  00CE               	movwf	(low ((_slot_task| (0+256)+2)))^0
 12035  168D  3002               	movlw	high _slot_TaskData
 12036  168E  00CF               	movwf	((low ((_slot_task| (0+256)+2))+1))^0
 12037                           
 12038                           ;main.c: 261: slot_task.taskInitCallback = slot_Init;
 12039  168F  30C5               	movlw	low _slot_Init
 12040  1690  00D0               	movwf	(low ((_slot_task| (0+256)+4)))^0
 12041  1691  301D               	movlw	high _slot_Init
 12042  1692  00D1               	movwf	((low ((_slot_task| (0+256)+4)))^0+1)
 12043                           
 12044                           ;main.c: 262: slot_task.taskExecuteCallback = slot_Main;
 12045  1693  3043               	movlw	low _slot_Main
 12046  1694  00D4               	movwf	(low ((_slot_task| (0+256)+8)))^0
 12047  1695  3014               	movlw	high _slot_Main
 12048  1696  00D5               	movwf	((low ((_slot_task| (0+256)+8)))^0+1)
 12049                           
 12050                           ;main.c: 263: slot_task.taskExitCallback = slot_Exit;
 12051  1697  3000               	movlw	0
 12052  1698  00D2               	movwf	(low ((_slot_task| (0+256)+6)))^0
 12053  1699  3000               	movlw	0
 12054  169A  00D3               	movwf	((low ((_slot_task| (0+256)+6)))^0+1)
 12055                           
 12056                           ;main.c: 264: slot_task.taskInterval = 10;
 12057  169B  300A               	movlw	10
 12058  169C  00D6               	movwf	(_slot_task^(0+256)+10)
 12059  169D  3000               	movlw	0
 12060  169E  00D7               	movwf	(_slot_task^(0+256)+11)
 12061                           
 12062                           ;main.c: 266: locked_task.taskData = (void *) &locked_TaskData;
 12063  169F  3050               	movlw	low _locked_TaskData
 12064  16A0  00C1               	movwf	(low ((_locked_task| (0+256)+2)))^0
 12065  16A1  3002               	movlw	high _locked_TaskData
 12066  16A2  00C2               	movwf	((low ((_locked_task| (0+256)+2))+1))^0
 12067                           
 12068                           ;main.c: 267: locked_task.taskInitCallback = locked_Init;
 12069  16A3  309D               	movlw	low _locked_Init
 12070  16A4  00C3               	movwf	(low ((_locked_task| (0+256)+4)))^0
 12071  16A5  301F               	movlw	high _locked_Init
 12072  16A6  00C4               	movwf	((low ((_locked_task| (0+256)+4)))^0+1)
 12073                           
 12074                           ;main.c: 268: locked_task.taskExecuteCallback = locked_Main;
 12075  16A7  30A1               	movlw	low _locked_Main
 12076  16A8  00C7               	movwf	(low ((_locked_task| (0+256)+8)))^0
 12077  16A9  3002               	movlw	high _locked_Main
 12078  16AA  00C8               	movwf	((low ((_locked_task| (0+256)+8)))^0+1)
 12079                           
 12080                           ;main.c: 269: locked_task.taskExitCallback = locked_Exit;
 12081  16AB  3000               	movlw	0
 12082  16AC  00C5               	movwf	(low ((_locked_task| (0+256)+6)))^0
 12083  16AD  3000               	movlw	0
 12084  16AE  00C6               	movwf	((low ((_locked_task| (0+256)+6)))^0+1)
 12085                           
 12086                           ;main.c: 270: locked_task.taskInterval = 10;
 12087  16AF  300A               	movlw	10
 12088  16B0  00C9               	movwf	(_locked_task^(0+256)+10)
 12089  16B1  3000               	movlw	0
 12090  16B2  00CA               	movwf	(_locked_task^(0+256)+11)
 12091                           
 12092                           ;main.c: 272: secret_task.taskData = (void *) &secret_TaskData;
 12093  16B3  3042               	movlw	low _secret_TaskData
 12094  16B4  00B4               	movwf	(low ((_secret_task| (0+256)+2)))^0
 12095  16B5  3002               	movlw	high _secret_TaskData
 12096  16B6  00B5               	movwf	((low ((_secret_task| (0+256)+2))+1))^0
 12097                           
 12098                           ;main.c: 273: secret_task.taskInitCallback = secret_Init;
 12099  16B7  301F               	movlw	low _secret_Init
 12100  16B8  00B6               	movwf	(low ((_secret_task| (0+256)+4)))^0
 12101  16B9  301E               	movlw	high _secret_Init
 12102  16BA  00B7               	movwf	((low ((_secret_task| (0+256)+4)))^0+1)
 12103                           
 12104                           ;main.c: 274: secret_task.taskExecuteCallback = secret_Main;
 12105  16BB  306B               	movlw	low _secret_Main
 12106  16BC  00BA               	movwf	(low ((_secret_task| (0+256)+8)))^0
 12107  16BD  3004               	movlw	high _secret_Main
 12108  16BE  00BB               	movwf	((low ((_secret_task| (0+256)+8)))^0+1)
 12109                           
 12110                           ;main.c: 275: secret_task.taskExitCallback = secret_Exit;
 12111  16BF  3000               	movlw	0
 12112  16C0  00B8               	movwf	(low ((_secret_task| (0+256)+6)))^0
 12113  16C1  3000               	movlw	0
 12114  16C2  00B9               	movwf	((low ((_secret_task| (0+256)+6)))^0+1)
 12115                           
 12116                           ;main.c: 276: secret_task.taskInterval = 10;
 12117  16C3  300A               	movlw	10
 12118  16C4  00BC               	movwf	(_secret_task^(0+256)+10)
 12119  16C5  3000               	movlw	0
 12120  16C6  00BD               	movwf	(_secret_task^(0+256)+11)
 12121                           
 12122                           ;main.c: 279: secret_value = SECRET_VALUE_INIT;
 12123  16C7  0021               	movlb	1	; select bank1
 12124  16C8  01DC               	clrf	_secret_value^(0+128)
 12125  16C9  01DD               	clrf	(_secret_value+1)^(0+128)
 12126                           
 12127                           ;main.c: 282: currentTask = FLASHY_TASK;
 12128  16CA  3002               	movlw	2
 12129  16CB  00B8               	movwf	_currentTask^(0+128)
 12130  16CC  3000               	movlw	0
 12131  16CD  00B9               	movwf	(_currentTask^(0+128)+1)
 12132                           
 12133                           ;main.c: 283: scheduler_TaskAdd(&schedulerInst, &flashy_task);
 12134  16CE  30CF               	movlw	low _flashy_task
 12135  16CF  0020               	movlb	0	; select bank0
 12136  16D0  00BD               	movwf	scheduler_TaskAdd@task
 12137  16D1  3000               	movlw	high _flashy_task
 12138  16D2  00BE               	movwf	scheduler_TaskAdd@task+1
 12139  16D3  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 12140  16D4  3187  2779  3196   	fcall	_scheduler_TaskAdd
 12141                           
 12142                           ;main.c: 284: scheduler_TaskAdd(&schedulerInst, &menu_task);
 12143  16D7  30C2               	movlw	low _menu_task
 12144  16D8  0020               	movlb	0	; select bank0
 12145  16D9  00BD               	movwf	scheduler_TaskAdd@task
 12146  16DA  3000               	movlw	high _menu_task
 12147  16DB  00BE               	movwf	scheduler_TaskAdd@task+1
 12148  16DC  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 12149  16DD  3187  2779  3196   	fcall	_scheduler_TaskAdd
 12150                           
 12151                           ;main.c: 285: scheduler_TaskAdd(&schedulerInst, &slot_task);
 12152  16E0  304C               	movlw	low _slot_task
 12153  16E1  0020               	movlb	0	; select bank0
 12154  16E2  00BD               	movwf	scheduler_TaskAdd@task
 12155  16E3  3001               	movlw	high _slot_task
 12156  16E4  00BE               	movwf	scheduler_TaskAdd@task+1
 12157  16E5  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 12158  16E6  3187  2779  3196   	fcall	_scheduler_TaskAdd
 12159                           
 12160                           ;main.c: 286: scheduler_TaskAdd(&schedulerInst, &locked_task);
 12161  16E9  303F               	movlw	low _locked_task
 12162  16EA  0020               	movlb	0	; select bank0
 12163  16EB  00BD               	movwf	scheduler_TaskAdd@task
 12164  16EC  3001               	movlw	high _locked_task
 12165  16ED  00BE               	movwf	scheduler_TaskAdd@task+1
 12166  16EE  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 12167  16EF  3187  2779  3196   	fcall	_scheduler_TaskAdd
 12168                           
 12169                           ;main.c: 287: scheduler_TaskAdd(&schedulerInst, &secret_task);
 12170  16F2  3032               	movlw	low _secret_task
 12171  16F3  0020               	movlb	0	; select bank0
 12172  16F4  00BD               	movwf	scheduler_TaskAdd@task
 12173  16F5  3001               	movlw	high _secret_task
 12174  16F6  00BE               	movwf	scheduler_TaskAdd@task+1
 12175  16F7  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 12176  16F8  3187  2779  3196   	fcall	_scheduler_TaskAdd
 12177  16FB                     l8673:	
 12178                           ;main.c: 289: while(1){
 12179                           
 12180                           
 12181                           ;main.c: 290: schedulerExecute(&schedulerInst);
 12182  16FB  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 12183  16FC  3193  23C7  3196   	fcall	_schedulerExecute
 12184  16FF  2EFB               	goto	l8673
 12185  1700                     __end_of_main:	
 12186                           
 12187                           	psect	text1
 12188  1A67                     __ptext1:	
 12189 ;; *************** function _scheduler_TaskInit *****************
 12190 ;; Defined at:
 12191 ;;		line 36 in file "cooperative_scheduler.c"
 12192 ;; Parameters:    Size  Location     Type
 12193 ;;  task            2    1[COMMON] PTR struct t_schedulerTa
 12194 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 12195 ;;		 -> flashy_task(13), 
 12196 ;; Auto vars:     Size  Location     Type
 12197 ;;		None
 12198 ;; Return value:  Size  Location     Type
 12199 ;;                  1    wreg      void 
 12200 ;; Registers used:
 12201 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12202 ;; Tracked objects:
 12203 ;;		On entry : 0/0
 12204 ;;		On exit  : 0/0
 12205 ;;		Unchanged: 0/0
 12206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12209 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12210 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12211 ;;Total ram usage:        4 bytes
 12212 ;; Hardware stack levels used:    1
 12213 ;; Hardware stack levels required when called:    4
 12214 ;; This function calls:
 12215 ;;		Nothing
 12216 ;; This function is called by:
 12217 ;;		_main
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           
 12222                           ;psect for function _scheduler_TaskInit
 12223  1A67                     _scheduler_TaskInit:	
 12224                           
 12225                           ;cooperative_scheduler.c: 37: task->systemTickLastExecuted = 0;
 12226                           
 12227                           ;incstack = 0
 12228                           ; Regs used in _scheduler_TaskInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 12229  1A67  0871               	movf	scheduler_TaskInit@task,w
 12230  1A68  0086               	movwf	6
 12231  1A69  0872               	movf	scheduler_TaskInit@task+1,w
 12232  1A6A  0087               	movwf	7
 12233  1A6B  3000               	movlw	0
 12234  1A6C  3FC0               	movwi [0]fsr1
 12235  1A6D  3FC1               	movwi [1]fsr1
 12236                           
 12237                           ;cooperative_scheduler.c: 38: task->taskData = (0);
 12238  1A6E  0871               	movf	scheduler_TaskInit@task,w
 12239  1A6F  0086               	movwf	6
 12240  1A70  0872               	movf	scheduler_TaskInit@task+1,w
 12241  1A71  0087               	movwf	7
 12242  1A72  3142               	addfsr 1,2
 12243  1A73  3000               	movlw	0
 12244  1A74  3FC0               	movwi [0]fsr1
 12245  1A75  3FC1               	movwi [1]fsr1
 12246                           
 12247                           ;cooperative_scheduler.c: 39: task->taskInitCallback = (0);
 12248  1A76  0871               	movf	scheduler_TaskInit@task,w
 12249  1A77  0086               	movwf	6
 12250  1A78  0872               	movf	scheduler_TaskInit@task+1,w
 12251  1A79  0087               	movwf	7
 12252  1A7A  3144               	addfsr 1,4
 12253  1A7B  3000               	movlw	0
 12254  1A7C  3FC0               	movwi [0]fsr1
 12255  1A7D  3FC1               	movwi [1]fsr1
 12256                           
 12257                           ;cooperative_scheduler.c: 40: task->taskExitCallback = (0);
 12258  1A7E  0871               	movf	scheduler_TaskInit@task,w
 12259  1A7F  0086               	movwf	6
 12260  1A80  0872               	movf	scheduler_TaskInit@task+1,w
 12261  1A81  0087               	movwf	7
 12262  1A82  3146               	addfsr 1,6
 12263  1A83  3000               	movlw	0
 12264  1A84  3FC0               	movwi [0]fsr1
 12265  1A85  3FC1               	movwi [1]fsr1
 12266                           
 12267                           ;cooperative_scheduler.c: 41: task->taskExecuteCallback = (0);
 12268  1A86  0871               	movf	scheduler_TaskInit@task,w
 12269  1A87  0086               	movwf	6
 12270  1A88  0872               	movf	scheduler_TaskInit@task+1,w
 12271  1A89  0087               	movwf	7
 12272  1A8A  3148               	addfsr 1,8
 12273  1A8B  3000               	movlw	0
 12274  1A8C  3FC0               	movwi [0]fsr1
 12275  1A8D  3FC1               	movwi [1]fsr1
 12276                           
 12277                           ;cooperative_scheduler.c: 42: task->taskInterval = 65535;
 12278  1A8E  0871               	movf	scheduler_TaskInit@task,w
 12279  1A8F  0086               	movwf	6
 12280  1A90  0872               	movf	scheduler_TaskInit@task+1,w
 12281  1A91  0087               	movwf	7
 12282  1A92  314A               	addfsr 1,10
 12283  1A93  30FF               	movlw	255
 12284  1A94  3FC0               	movwi [0]fsr1
 12285  1A95  30FF               	movlw	255
 12286  1A96  3FC1               	movwi [1]fsr1
 12287                           
 12288                           ;cooperative_scheduler.c: 43: task->taskId = -1;
 12289  1A97  0871               	movf	scheduler_TaskInit@task,w
 12290  1A98  3E0C               	addlw	12
 12291  1A99  00F3               	movwf	??_scheduler_TaskInit
 12292  1A9A  3000               	movlw	0
 12293  1A9B  3D72               	addwfc	scheduler_TaskInit@task+1,w
 12294  1A9C  00F4               	movwf	??_scheduler_TaskInit+1
 12295  1A9D  0873               	movf	??_scheduler_TaskInit,w
 12296  1A9E  0086               	movwf	6
 12297  1A9F  0874               	movf	??_scheduler_TaskInit+1,w
 12298  1AA0  0087               	movwf	7
 12299  1AA1  30FF               	movlw	-1
 12300  1AA2  0081               	movwf	1
 12301  1AA3  0008               	return
 12302  1AA4                     __end_of_scheduler_TaskInit:	
 12303                           
 12304                           	psect	text2
 12305  0779                     __ptext2:	
 12306 ;; *************** function _scheduler_TaskAdd *****************
 12307 ;; Defined at:
 12308 ;;		line 46 in file "cooperative_scheduler.c"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;  scheduler       1    wreg     PTR struct t_scheduler
 12311 ;;		 -> schedulerInst(34), 
 12312 ;;  task            2   29[BANK0 ] PTR struct t_schedulerTa
 12313 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 12314 ;;		 -> flashy_task(13), 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;  scheduler       1   37[BANK0 ] PTR struct t_scheduler
 12317 ;;		 -> schedulerInst(34), 
 12318 ;;  k               1   38[BANK0 ] unsigned char 
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  1    wreg      char 
 12321 ;; Registers used:
 12322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12330 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12331 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12332 ;;Total ram usage:       10 bytes
 12333 ;; Hardware stack levels used:    1
 12334 ;; Hardware stack levels required when called:   11
 12335 ;; This function calls:
 12336 ;;		Absolute function
 12337 ;;		_flashy_Init
 12338 ;;		_locked_Init
 12339 ;;		_menu_Init
 12340 ;;		_secret_Init
 12341 ;;		_slot_Init
 12342 ;; This function is called by:
 12343 ;;		_main
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           
 12348                           ;psect for function _scheduler_TaskAdd
 12349  0779                     _scheduler_TaskAdd:	
 12350                           
 12351                           ;incstack = 0
 12352                           ; Regs used in _scheduler_TaskAdd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12353                           ;scheduler_TaskAdd@scheduler stored from wreg
 12354  0779  0020               	movlb	0	; select bank0
 12355  077A  00C5               	movwf	scheduler_TaskAdd@scheduler
 12356                           
 12357                           ;cooperative_scheduler.c: 47: u8 k;
 12358                           ;cooperative_scheduler.c: 48: for (k = 0; k < 16; k++) {
 12359  077B  01C6               	clrf	scheduler_TaskAdd@k
 12360  077C  3010               	movlw	16
 12361  077D  0246               	subwf	scheduler_TaskAdd@k,w
 12362  077E  1803               	btfsc	3,0
 12363  077F  2FEE               	goto	l8243
 12364  0780                     l8229:	
 12365                           
 12366                           ;cooperative_scheduler.c: 49: if (!(scheduler->taskEntryVector & (1 << k)) ) {
 12367  0780  0845               	movf	scheduler_TaskAdd@scheduler,w
 12368  0781  3E20               	addlw	32
 12369  0782  0086               	movwf	6
 12370  0783  3002               	movlw	2	; select bank4/5
 12371  0784  0087               	movwf	7
 12372  0785  3F40               	moviw [0]fsr1
 12373  0786  00BF               	movwf	??_scheduler_TaskAdd
 12374  0787  3F41               	moviw [1]fsr1
 12375  0788  00C0               	movwf	??_scheduler_TaskAdd+1
 12376  0789  3001               	movlw	1
 12377  078A  00C1               	movwf	??_scheduler_TaskAdd+2
 12378  078B  3000               	movlw	0
 12379  078C  00C2               	movwf	??_scheduler_TaskAdd+3
 12380  078D  0A46               	incf	scheduler_TaskAdd@k,w
 12381  078E  2F91               	goto	u5134
 12382  078F                     u5135:	
 12383  078F  35C1               	lslf	??_scheduler_TaskAdd+2,f
 12384  0790  0DC2               	rlf	??_scheduler_TaskAdd+3,f
 12385  0791                     u5134:	
 12386  0791  0B89               	decfsz	9,f
 12387  0792  2F8F               	goto	u5135
 12388  0793  083F               	movf	??_scheduler_TaskAdd,w
 12389  0794  0541               	andwf	??_scheduler_TaskAdd+2,w
 12390  0795  00C3               	movwf	??_scheduler_TaskAdd+4
 12391  0796  0840               	movf	??_scheduler_TaskAdd+1,w
 12392  0797  0542               	andwf	??_scheduler_TaskAdd+3,w
 12393  0798  00C4               	movwf	??_scheduler_TaskAdd+5
 12394  0799  0843               	movf	??_scheduler_TaskAdd+4,w
 12395  079A  0444               	iorwf	??_scheduler_TaskAdd+5,w
 12396  079B  1D03               	btfss	3,2
 12397  079C  2FE6               	goto	l8239
 12398                           
 12399                           ;cooperative_scheduler.c: 50: scheduler->tasks[k] = task;
 12400  079D  3546               	lslf	scheduler_TaskAdd@k,w
 12401  079E  0745               	addwf	scheduler_TaskAdd@scheduler,w
 12402  079F  00BF               	movwf	??_scheduler_TaskAdd
 12403  07A0  083F               	movf	??_scheduler_TaskAdd,w
 12404  07A1  0086               	movwf	6
 12405  07A2  3002               	movlw	2	; select bank4/5
 12406  07A3  0087               	movwf	7
 12407  07A4  083D               	movf	scheduler_TaskAdd@task,w
 12408  07A5  3FC0               	movwi [0]fsr1
 12409  07A6  083E               	movf	scheduler_TaskAdd@task+1,w
 12410  07A7  3FC1               	movwi [1]fsr1
 12411                           
 12412                           ;cooperative_scheduler.c: 51: scheduler->taskEntryVector |= (1 << k);
 12413  07A8  3001               	movlw	1
 12414  07A9  00BF               	movwf	??_scheduler_TaskAdd
 12415  07AA  3000               	movlw	0
 12416  07AB  00C0               	movwf	??_scheduler_TaskAdd+1
 12417  07AC  0A46               	incf	scheduler_TaskAdd@k,w
 12418  07AD  2FB0               	goto	u5154
 12419  07AE                     u5155:	
 12420  07AE  35BF               	lslf	??_scheduler_TaskAdd,f
 12421  07AF  0DC0               	rlf	??_scheduler_TaskAdd+1,f
 12422  07B0                     u5154:	
 12423  07B0  0B89               	decfsz	9,f
 12424  07B1  2FAE               	goto	u5155
 12425  07B2  0845               	movf	scheduler_TaskAdd@scheduler,w
 12426  07B3  3E20               	addlw	32
 12427  07B4  0086               	movwf	6
 12428  07B5  3002               	movlw	2	; select bank4/5
 12429  07B6  0087               	movwf	7
 12430  07B7  083F               	movf	??_scheduler_TaskAdd,w
 12431  07B8  0481               	iorwf	1,f
 12432  07B9  3141               	addfsr 1,1
 12433  07BA  0840               	movf	??_scheduler_TaskAdd+1,w
 12434  07BB  0481               	iorwf	1,f
 12435                           
 12436                           ;cooperative_scheduler.c: 53: if (task->taskInitCallback != (0)) {
 12437  07BC  083D               	movf	scheduler_TaskAdd@task,w
 12438  07BD  0086               	movwf	6
 12439  07BE  083E               	movf	scheduler_TaskAdd@task+1,w
 12440  07BF  0087               	movwf	7
 12441  07C0  3144               	addfsr 1,4
 12442  07C1  0016               	moviw fsr1++
 12443  07C2  0401               	iorwf	1,w
 12444  07C3  1903               	btfsc	3,2
 12445  07C4  2FD8               	goto	l8235
 12446                           
 12447                           ;cooperative_scheduler.c: 54: task->taskInitCallback (task->taskData);
 12448  07C5  083D               	movf	scheduler_TaskAdd@task,w
 12449  07C6  0086               	movwf	6
 12450  07C7  083E               	movf	scheduler_TaskAdd@task+1,w
 12451  07C8  0087               	movwf	7
 12452  07C9  3142               	addfsr 1,2
 12453  07CA  3F40               	moviw [0]fsr1
 12454  07CB  00B9               	movwf	secret_Init@taskData
 12455  07CC  3F41               	moviw [1]fsr1
 12456  07CD  00BA               	movwf	secret_Init@taskData+1
 12457  07CE  083D               	movf	scheduler_TaskAdd@task,w
 12458  07CF  0086               	movwf	6
 12459  07D0  083E               	movf	scheduler_TaskAdd@task+1,w
 12460  07D1  0087               	movwf	7
 12461  07D2  3144               	addfsr 1,4
 12462  07D3  3F41               	moviw [1]fsr1
 12463  07D4  008A               	movwf	10
 12464  07D5  3F40               	moviw [0]fsr1
 12465  07D6  000A               	callw
 12466  07D7  3187               	pagesel	$
 12467  07D8                     l8235:	
 12468                           
 12469                           ;cooperative_scheduler.c: 55: }
 12470                           ;cooperative_scheduler.c: 57: task->taskId = (s8) k;
 12471  07D8  0020               	movlb	0	; select bank0
 12472  07D9  083D               	movf	scheduler_TaskAdd@task,w
 12473  07DA  3E0C               	addlw	12
 12474  07DB  00BF               	movwf	??_scheduler_TaskAdd
 12475  07DC  3000               	movlw	0
 12476  07DD  3D3E               	addwfc	scheduler_TaskAdd@task+1,w
 12477  07DE  00C0               	movwf	??_scheduler_TaskAdd+1
 12478  07DF  083F               	movf	??_scheduler_TaskAdd,w
 12479  07E0  0086               	movwf	6
 12480  07E1  0840               	movf	??_scheduler_TaskAdd+1,w
 12481  07E2  0087               	movwf	7
 12482  07E3  0846               	movf	scheduler_TaskAdd@k,w
 12483  07E4  0081               	movwf	1
 12484                           
 12485                           ;cooperative_scheduler.c: 58: return k;
 12486                           ;	Return value of _scheduler_TaskAdd is never used
 12487  07E5  0008               	return
 12488  07E6                     l8239:	
 12489  07E6  3001               	movlw	1
 12490  07E7  00BF               	movwf	??_scheduler_TaskAdd
 12491  07E8  083F               	movf	??_scheduler_TaskAdd,w
 12492  07E9  07C6               	addwf	scheduler_TaskAdd@k,f
 12493  07EA  3010               	movlw	16
 12494  07EB  0246               	subwf	scheduler_TaskAdd@k,w
 12495  07EC  1C03               	skipc
 12496  07ED  2F80               	goto	l8229
 12497  07EE                     l8243:	
 12498                           
 12499                           ;cooperative_scheduler.c: 59: }
 12500                           ;cooperative_scheduler.c: 60: }
 12501                           ;cooperative_scheduler.c: 62: task->taskId = -1;
 12502  07EE  083D               	movf	scheduler_TaskAdd@task,w
 12503  07EF  3E0C               	addlw	12
 12504  07F0  00BF               	movwf	??_scheduler_TaskAdd
 12505  07F1  3000               	movlw	0
 12506  07F2  3D3E               	addwfc	scheduler_TaskAdd@task+1,w
 12507  07F3  00C0               	movwf	??_scheduler_TaskAdd+1
 12508  07F4  083F               	movf	??_scheduler_TaskAdd,w
 12509  07F5  0086               	movwf	6
 12510  07F6  0840               	movf	??_scheduler_TaskAdd+1,w
 12511  07F7  0087               	movwf	7
 12512  07F8  30FF               	movlw	-1
 12513  07F9  0081               	movwf	1
 12514  07FA  0008               	return
 12515  07FB                     __end_of_scheduler_TaskAdd:	
 12516                           ;cooperative_scheduler.c: 63: return -1;
 12517                           ;	Return value of _scheduler_TaskAdd is never used
 12518                           
 12519                           
 12520                           	psect	text3
 12521  1E1F                     __ptext3:	
 12522 ;; *************** function _secret_Init *****************
 12523 ;; Defined at:
 12524 ;;		line 51 in file "secret_task.c"
 12525 ;; Parameters:    Size  Location     Type
 12526 ;;  taskData        2   25[BANK0 ] PTR void 
 12527 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12528 ;;		 -> flashy_TaskData(30), NULL(0), 
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;  data            2   27[BANK0 ] PTR struct t_secret_task
 12531 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12532 ;;		 -> flashy_TaskData(30), NULL(0), 
 12533 ;; Return value:  Size  Location     Type
 12534 ;;                  1    wreg      void 
 12535 ;; Registers used:
 12536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12537 ;; Tracked objects:
 12538 ;;		On entry : 0/0
 12539 ;;		On exit  : 0/0
 12540 ;;		Unchanged: 0/0
 12541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12543 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12545 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12546 ;;Total ram usage:        4 bytes
 12547 ;; Hardware stack levels used:    1
 12548 ;; Hardware stack levels required when called:   10
 12549 ;; This function calls:
 12550 ;;		_nullifyBadge_segDisplayErase
 12551 ;;		_nullifyBadge_segDisplayRegister
 12552 ;;		_nullifyBadge_userLedsClr
 12553 ;;		_nullifyBadge_userLedsRegister
 12554 ;; This function is called by:
 12555 ;;		_main
 12556 ;;		_scheduler_TaskAdd
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560                           
 12561                           ;psect for function _secret_Init
 12562  1E1F                     _secret_Init:	
 12563                           
 12564                           ;secret_task.c: 52: struct t_secret_taskData *data = (struct t_secret_taskData *) taskDa
      +                          ta;
 12565                           
 12566                           ;incstack = 0
 12567                           ; Regs used in _secret_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12568  1E1F  0020               	movlb	0	; select bank0
 12569  1E20  083A               	movf	secret_Init@taskData+1,w
 12570  1E21  00BC               	movwf	secret_Init@data+1
 12571  1E22  0839               	movf	secret_Init@taskData,w
 12572  1E23  00BB               	movwf	secret_Init@data
 12573                           
 12574                           ;secret_task.c: 55: nullifyBadge_userLedsRegister(data->badge);
 12575  1E24  083B               	movf	secret_Init@data,w
 12576  1E25  0086               	movwf	6
 12577  1E26  083C               	movf	secret_Init@data+1,w
 12578  1E27  0087               	movwf	7
 12579  1E28  0801               	movf	1,w
 12580  1E29  31A5  25C6  319E   	fcall	_nullifyBadge_userLedsRegister
 12581                           
 12582                           ;secret_task.c: 56: nullifyBadge_userLedsClr(data->badge);
 12583  1E2C  0020               	movlb	0	; select bank0
 12584  1E2D  083B               	movf	secret_Init@data,w
 12585  1E2E  0086               	movwf	6
 12586  1E2F  083C               	movf	secret_Init@data+1,w
 12587  1E30  0087               	movwf	7
 12588  1E31  0801               	movf	1,w
 12589  1E32  31A4  24D1  319E   	fcall	_nullifyBadge_userLedsClr
 12590                           
 12591                           ;secret_task.c: 57: nullifyBadge_segDisplayRegister(data->badge);
 12592  1E35  0020               	movlb	0	; select bank0
 12593  1E36  083B               	movf	secret_Init@data,w
 12594  1E37  0086               	movwf	6
 12595  1E38  083C               	movf	secret_Init@data+1,w
 12596  1E39  0087               	movwf	7
 12597  1E3A  0801               	movf	1,w
 12598  1E3B  31A4  24DF  319E   	fcall	_nullifyBadge_segDisplayRegister
 12599                           
 12600                           ;secret_task.c: 58: nullifyBadge_segDisplayErase(data->badge);
 12601  1E3E  0020               	movlb	0	; select bank0
 12602  1E3F  083B               	movf	secret_Init@data,w
 12603  1E40  0086               	movwf	6
 12604  1E41  083C               	movf	secret_Init@data+1,w
 12605  1E42  0087               	movwf	7
 12606  1E43  0801               	movf	1,w
 12607  1E44  31A4  24CB  319E   	fcall	_nullifyBadge_segDisplayErase
 12608                           
 12609                           ;secret_task.c: 61: data->delayTickCount = 300;
 12610  1E47  0020               	movlb	0	; select bank0
 12611  1E48  083B               	movf	secret_Init@data,w
 12612  1E49  0086               	movwf	6
 12613  1E4A  083C               	movf	secret_Init@data+1,w
 12614  1E4B  0087               	movwf	7
 12615  1E4C  3142               	addfsr 1,2
 12616  1E4D  302C               	movlw	44
 12617  1E4E  3FC0               	movwi [0]fsr1
 12618  1E4F  3001               	movlw	1
 12619  1E50  3FC1               	movwi [1]fsr1
 12620                           
 12621                           ;secret_task.c: 62: data->holdCountA = 0;
 12622  1E51  083B               	movf	secret_Init@data,w
 12623  1E52  0086               	movwf	6
 12624  1E53  083C               	movf	secret_Init@data+1,w
 12625  1E54  0087               	movwf	7
 12626  1E55  3144               	addfsr 1,4
 12627  1E56  3000               	movlw	0
 12628  1E57  3FC0               	movwi [0]fsr1
 12629  1E58  3FC1               	movwi [1]fsr1
 12630                           
 12631                           ;secret_task.c: 63: data->holdCountB = 0;
 12632  1E59  083B               	movf	secret_Init@data,w
 12633  1E5A  0086               	movwf	6
 12634  1E5B  083C               	movf	secret_Init@data+1,w
 12635  1E5C  0087               	movwf	7
 12636  1E5D  3146               	addfsr 1,6
 12637  1E5E  3000               	movlw	0
 12638  1E5F  3FC0               	movwi [0]fsr1
 12639  1E60  3FC1               	movwi [1]fsr1
 12640                           
 12641                           ;secret_task.c: 64: data->holdCountX = 0;
 12642  1E61  083B               	movf	secret_Init@data,w
 12643  1E62  0086               	movwf	6
 12644  1E63  083C               	movf	secret_Init@data+1,w
 12645  1E64  0087               	movwf	7
 12646  1E65  3148               	addfsr 1,8
 12647  1E66  3000               	movlw	0
 12648  1E67  3FC0               	movwi [0]fsr1
 12649  1E68  3FC1               	movwi [1]fsr1
 12650                           
 12651                           ;secret_task.c: 65: data->holdCountY = 0;
 12652  1E69  083B               	movf	secret_Init@data,w
 12653  1E6A  0086               	movwf	6
 12654  1E6B  083C               	movf	secret_Init@data+1,w
 12655  1E6C  0087               	movwf	7
 12656  1E6D  314A               	addfsr 1,10
 12657  1E6E  3000               	movlw	0
 12658  1E6F  3FC0               	movwi [0]fsr1
 12659  1E70  3FC1               	movwi [1]fsr1
 12660                           
 12661                           ;secret_task.c: 66: data->noholdCount = 0;
 12662  1E71  083B               	movf	secret_Init@data,w
 12663  1E72  0086               	movwf	6
 12664  1E73  083C               	movf	secret_Init@data+1,w
 12665  1E74  0087               	movwf	7
 12666  1E75  314C               	addfsr 1,12
 12667  1E76  3000               	movlw	0
 12668  1E77  3FC0               	movwi [0]fsr1
 12669  1E78  3FC1               	movwi [1]fsr1
 12670  1E79  0008               	return
 12671  1E7A                     __end_of_secret_Init:	
 12672                           
 12673                           	psect	text4
 12674  1F9D                     __ptext4:	
 12675 ;; *************** function _locked_Init *****************
 12676 ;; Defined at:
 12677 ;;		line 64 in file "locked_task.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;  taskData        2   25[BANK0 ] PTR void 
 12680 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12681 ;;		 -> flashy_TaskData(30), NULL(0), 
 12682 ;; Auto vars:     Size  Location     Type
 12683 ;;  data            2   27[BANK0 ] PTR struct t_locked_task
 12684 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12685 ;;		 -> flashy_TaskData(30), NULL(0), 
 12686 ;; Return value:  Size  Location     Type
 12687 ;;                  1    wreg      void 
 12688 ;; Registers used:
 12689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12690 ;; Tracked objects:
 12691 ;;		On entry : 0/0
 12692 ;;		On exit  : 0/0
 12693 ;;		Unchanged: 0/0
 12694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12696 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12698 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12699 ;;Total ram usage:        4 bytes
 12700 ;; Hardware stack levels used:    1
 12701 ;; Hardware stack levels required when called:   10
 12702 ;; This function calls:
 12703 ;;		_locked_lock_leds
 12704 ;;		_nullifyBadge_segDisplayErase
 12705 ;;		_nullifyBadge_segDisplayRegister
 12706 ;;		_nullifyBadge_userLedsClr
 12707 ;;		_nullifyBadge_userLedsRegister
 12708 ;; This function is called by:
 12709 ;;		_main
 12710 ;;		_scheduler_TaskAdd
 12711 ;; This function uses a non-reentrant model
 12712 ;;
 12713                           
 12714                           
 12715                           ;psect for function _locked_Init
 12716  1F9D                     _locked_Init:	
 12717                           
 12718                           ;locked_task.c: 65: struct t_locked_taskData *data = (struct t_locked_taskData *) taskDa
      +                          ta;
 12719                           
 12720                           ;incstack = 0
 12721                           ; Regs used in _locked_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12722  1F9D  0020               	movlb	0	; select bank0
 12723  1F9E  083A               	movf	locked_Init@taskData+1,w
 12724  1F9F  00BC               	movwf	locked_Init@data+1
 12725  1FA0  0839               	movf	locked_Init@taskData,w
 12726  1FA1  00BB               	movwf	locked_Init@data
 12727                           
 12728                           ;locked_task.c: 68: nullifyBadge_userLedsRegister(data->badge);
 12729  1FA2  083B               	movf	locked_Init@data,w
 12730  1FA3  0086               	movwf	6
 12731  1FA4  083C               	movf	locked_Init@data+1,w
 12732  1FA5  0087               	movwf	7
 12733  1FA6  0801               	movf	1,w
 12734  1FA7  31A5  25C6  319F   	fcall	_nullifyBadge_userLedsRegister
 12735                           
 12736                           ;locked_task.c: 69: nullifyBadge_userLedsClr(data->badge);
 12737  1FAA  0020               	movlb	0	; select bank0
 12738  1FAB  083B               	movf	locked_Init@data,w
 12739  1FAC  0086               	movwf	6
 12740  1FAD  083C               	movf	locked_Init@data+1,w
 12741  1FAE  0087               	movwf	7
 12742  1FAF  0801               	movf	1,w
 12743  1FB0  31A4  24D1  319F   	fcall	_nullifyBadge_userLedsClr
 12744                           
 12745                           ;locked_task.c: 70: nullifyBadge_segDisplayRegister(data->badge);
 12746  1FB3  0020               	movlb	0	; select bank0
 12747  1FB4  083B               	movf	locked_Init@data,w
 12748  1FB5  0086               	movwf	6
 12749  1FB6  083C               	movf	locked_Init@data+1,w
 12750  1FB7  0087               	movwf	7
 12751  1FB8  0801               	movf	1,w
 12752  1FB9  31A4  24DF  319F   	fcall	_nullifyBadge_segDisplayRegister
 12753                           
 12754                           ;locked_task.c: 71: nullifyBadge_segDisplayErase(data->badge);
 12755  1FBC  0020               	movlb	0	; select bank0
 12756  1FBD  083B               	movf	locked_Init@data,w
 12757  1FBE  0086               	movwf	6
 12758  1FBF  083C               	movf	locked_Init@data+1,w
 12759  1FC0  0087               	movwf	7
 12760  1FC1  0801               	movf	1,w
 12761  1FC2  31A4  24CB  319F   	fcall	_nullifyBadge_segDisplayErase
 12762                           
 12763                           ;locked_task.c: 74: locked_lock_leds();
 12764  1FC5  31A6  26ED  319F   	fcall	_locked_lock_leds
 12765                           
 12766                           ;locked_task.c: 75: data->state = LOCKED_LOCKED_STATE;
 12767  1FC8  0020               	movlb	0	; select bank0
 12768  1FC9  083B               	movf	locked_Init@data,w
 12769  1FCA  0086               	movwf	6
 12770  1FCB  083C               	movf	locked_Init@data+1,w
 12771  1FCC  0087               	movwf	7
 12772  1FCD  314D               	addfsr 1,13
 12773  1FCE  0181               	clrf	1
 12774                           
 12775                           ;locked_task.c: 76: data->delayTickCount = 0;
 12776  1FCF  083B               	movf	locked_Init@data,w
 12777  1FD0  0086               	movwf	6
 12778  1FD1  083C               	movf	locked_Init@data+1,w
 12779  1FD2  0087               	movwf	7
 12780  1FD3  3141               	addfsr 1,1
 12781  1FD4  3000               	movlw	0
 12782  1FD5  3FC0               	movwi [0]fsr1
 12783  1FD6  3FC1               	movwi [1]fsr1
 12784                           
 12785                           ;locked_task.c: 77: data->holdCountA = 0;
 12786  1FD7  083B               	movf	locked_Init@data,w
 12787  1FD8  0086               	movwf	6
 12788  1FD9  083C               	movf	locked_Init@data+1,w
 12789  1FDA  0087               	movwf	7
 12790  1FDB  3143               	addfsr 1,3
 12791  1FDC  3000               	movlw	0
 12792  1FDD  3FC0               	movwi [0]fsr1
 12793  1FDE  3FC1               	movwi [1]fsr1
 12794                           
 12795                           ;locked_task.c: 78: data->holdCountB = 0;
 12796  1FDF  083B               	movf	locked_Init@data,w
 12797  1FE0  0086               	movwf	6
 12798  1FE1  083C               	movf	locked_Init@data+1,w
 12799  1FE2  0087               	movwf	7
 12800  1FE3  3145               	addfsr 1,5
 12801  1FE4  3000               	movlw	0
 12802  1FE5  3FC0               	movwi [0]fsr1
 12803  1FE6  3FC1               	movwi [1]fsr1
 12804                           
 12805                           ;locked_task.c: 79: data->holdCountX = 0;
 12806  1FE7  083B               	movf	locked_Init@data,w
 12807  1FE8  0086               	movwf	6
 12808  1FE9  083C               	movf	locked_Init@data+1,w
 12809  1FEA  0087               	movwf	7
 12810  1FEB  3147               	addfsr 1,7
 12811  1FEC  3000               	movlw	0
 12812  1FED  3FC0               	movwi [0]fsr1
 12813  1FEE  3FC1               	movwi [1]fsr1
 12814                           
 12815                           ;locked_task.c: 80: data->holdCountY = 0;
 12816  1FEF  083B               	movf	locked_Init@data,w
 12817  1FF0  0086               	movwf	6
 12818  1FF1  083C               	movf	locked_Init@data+1,w
 12819  1FF2  0087               	movwf	7
 12820  1FF3  3149               	addfsr 1,9
 12821  1FF4  3000               	movlw	0
 12822  1FF5  3FC0               	movwi [0]fsr1
 12823  1FF6  3FC1               	movwi [1]fsr1
 12824                           
 12825                           ;locked_task.c: 81: data->noholdCount = 0;
 12826  1FF7  083B               	movf	locked_Init@data,w
 12827  1FF8  0086               	movwf	6
 12828  1FF9  083C               	movf	locked_Init@data+1,w
 12829  1FFA  0087               	movwf	7
 12830  1FFB  314B               	addfsr 1,11
 12831  1FFC  3000               	movlw	0
 12832  1FFD  3FC0               	movwi [0]fsr1
 12833  1FFE  3FC1               	movwi [1]fsr1
 12834  1FFF  0008               	return
 12835  2000                     __end_of_locked_Init:	
 12836                           
 12837                           	psect	text5
 12838  1F3B                     __ptext5:	
 12839 ;; *************** function _menu_Init *****************
 12840 ;; Defined at:
 12841 ;;		line 32 in file "menu_task.c"
 12842 ;; Parameters:    Size  Location     Type
 12843 ;;  taskData        2   25[BANK0 ] PTR void 
 12844 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12845 ;;		 -> flashy_TaskData(30), NULL(0), 
 12846 ;; Auto vars:     Size  Location     Type
 12847 ;;  data            2   27[BANK0 ] PTR struct t_menu_taskDa
 12848 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12849 ;;		 -> flashy_TaskData(30), NULL(0), 
 12850 ;; Return value:  Size  Location     Type
 12851 ;;                  1    wreg      void 
 12852 ;; Registers used:
 12853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12854 ;; Tracked objects:
 12855 ;;		On entry : 0/0
 12856 ;;		On exit  : 0/0
 12857 ;;		Unchanged: 0/0
 12858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12860 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12862 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12863 ;;Total ram usage:        4 bytes
 12864 ;; Hardware stack levels used:    1
 12865 ;; Hardware stack levels required when called:   10
 12866 ;; This function calls:
 12867 ;;		_nullifyBadge_segDisplayErase
 12868 ;;		_nullifyBadge_segDisplayRegister
 12869 ;;		_nullifyBadge_userLedsClr
 12870 ;;		_nullifyBadge_userLedsRegister
 12871 ;; This function is called by:
 12872 ;;		_main
 12873 ;;		_scheduler_TaskAdd
 12874 ;; This function uses a non-reentrant model
 12875 ;;
 12876                           
 12877                           
 12878                           ;psect for function _menu_Init
 12879  1F3B                     _menu_Init:	
 12880                           
 12881                           ;menu_task.c: 33: struct t_menu_taskData *data = (struct t_menu_taskData *) taskData;
 12882                           
 12883                           ;incstack = 0
 12884                           ; Regs used in _menu_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12885  1F3B  0020               	movlb	0	; select bank0
 12886  1F3C  083A               	movf	menu_Init@taskData+1,w
 12887  1F3D  00BC               	movwf	menu_Init@data+1
 12888  1F3E  0839               	movf	menu_Init@taskData,w
 12889  1F3F  00BB               	movwf	menu_Init@data
 12890                           
 12891                           ;menu_task.c: 36: nullifyBadge_userLedsRegister(data->badge);
 12892  1F40  083B               	movf	menu_Init@data,w
 12893  1F41  0086               	movwf	6
 12894  1F42  083C               	movf	menu_Init@data+1,w
 12895  1F43  0087               	movwf	7
 12896  1F44  0801               	movf	1,w
 12897  1F45  31A5  25C6  319F   	fcall	_nullifyBadge_userLedsRegister
 12898                           
 12899                           ;menu_task.c: 37: nullifyBadge_userLedsClr(data->badge);
 12900  1F48  0020               	movlb	0	; select bank0
 12901  1F49  083B               	movf	menu_Init@data,w
 12902  1F4A  0086               	movwf	6
 12903  1F4B  083C               	movf	menu_Init@data+1,w
 12904  1F4C  0087               	movwf	7
 12905  1F4D  0801               	movf	1,w
 12906  1F4E  31A4  24D1  319F   	fcall	_nullifyBadge_userLedsClr
 12907                           
 12908                           ;menu_task.c: 38: nullifyBadge_segDisplayRegister(data->badge);
 12909  1F51  0020               	movlb	0	; select bank0
 12910  1F52  083B               	movf	menu_Init@data,w
 12911  1F53  0086               	movwf	6
 12912  1F54  083C               	movf	menu_Init@data+1,w
 12913  1F55  0087               	movwf	7
 12914  1F56  0801               	movf	1,w
 12915  1F57  31A4  24DF  319F   	fcall	_nullifyBadge_segDisplayRegister
 12916                           
 12917                           ;menu_task.c: 39: nullifyBadge_segDisplayErase(data->badge);
 12918  1F5A  0020               	movlb	0	; select bank0
 12919  1F5B  083B               	movf	menu_Init@data,w
 12920  1F5C  0086               	movwf	6
 12921  1F5D  083C               	movf	menu_Init@data+1,w
 12922  1F5E  0087               	movwf	7
 12923  1F5F  0801               	movf	1,w
 12924  1F60  31A4  24CB  319F   	fcall	_nullifyBadge_segDisplayErase
 12925                           
 12926                           ;menu_task.c: 42: data->delayTickCount = 50;
 12927  1F63  0020               	movlb	0	; select bank0
 12928  1F64  083B               	movf	menu_Init@data,w
 12929  1F65  0086               	movwf	6
 12930  1F66  083C               	movf	menu_Init@data+1,w
 12931  1F67  0087               	movwf	7
 12932  1F68  3142               	addfsr 1,2
 12933  1F69  3032               	movlw	50
 12934  1F6A  3FC0               	movwi [0]fsr1
 12935  1F6B  3000               	movlw	0
 12936  1F6C  3FC1               	movwi [1]fsr1
 12937                           
 12938                           ;menu_task.c: 43: data->holdCountA = 0;
 12939  1F6D  083B               	movf	menu_Init@data,w
 12940  1F6E  0086               	movwf	6
 12941  1F6F  083C               	movf	menu_Init@data+1,w
 12942  1F70  0087               	movwf	7
 12943  1F71  3144               	addfsr 1,4
 12944  1F72  3000               	movlw	0
 12945  1F73  3FC0               	movwi [0]fsr1
 12946  1F74  3FC1               	movwi [1]fsr1
 12947                           
 12948                           ;menu_task.c: 44: data->holdCountB = 0;
 12949  1F75  083B               	movf	menu_Init@data,w
 12950  1F76  0086               	movwf	6
 12951  1F77  083C               	movf	menu_Init@data+1,w
 12952  1F78  0087               	movwf	7
 12953  1F79  3146               	addfsr 1,6
 12954  1F7A  3000               	movlw	0
 12955  1F7B  3FC0               	movwi [0]fsr1
 12956  1F7C  3FC1               	movwi [1]fsr1
 12957                           
 12958                           ;menu_task.c: 45: data->holdCountX = 0;
 12959  1F7D  083B               	movf	menu_Init@data,w
 12960  1F7E  0086               	movwf	6
 12961  1F7F  083C               	movf	menu_Init@data+1,w
 12962  1F80  0087               	movwf	7
 12963  1F81  3148               	addfsr 1,8
 12964  1F82  3000               	movlw	0
 12965  1F83  3FC0               	movwi [0]fsr1
 12966  1F84  3FC1               	movwi [1]fsr1
 12967                           
 12968                           ;menu_task.c: 46: data->holdCountY = 0;
 12969  1F85  083B               	movf	menu_Init@data,w
 12970  1F86  0086               	movwf	6
 12971  1F87  083C               	movf	menu_Init@data+1,w
 12972  1F88  0087               	movwf	7
 12973  1F89  314A               	addfsr 1,10
 12974  1F8A  3000               	movlw	0
 12975  1F8B  3FC0               	movwi [0]fsr1
 12976  1F8C  3FC1               	movwi [1]fsr1
 12977                           
 12978                           ;menu_task.c: 47: data->noholdCount = 0;
 12979  1F8D  083B               	movf	menu_Init@data,w
 12980  1F8E  0086               	movwf	6
 12981  1F8F  083C               	movf	menu_Init@data+1,w
 12982  1F90  0087               	movwf	7
 12983  1F91  314C               	addfsr 1,12
 12984  1F92  3000               	movlw	0
 12985  1F93  3FC0               	movwi [0]fsr1
 12986  1F94  3FC1               	movwi [1]fsr1
 12987                           
 12988                           ;menu_task.c: 49: menu_option_idx = 0;
 12989  1F95  0021               	movlb	1	; select bank1
 12990  1F96  01B4               	clrf	_menu_option_idx^(0+128)
 12991  1F97  01B5               	clrf	(_menu_option_idx+1)^(0+128)
 12992                           
 12993                           ;menu_task.c: 51: menu_option_size = sizeof(menu_option)/sizeof(menu_option[0]);
 12994  1F98  3004               	movlw	4
 12995  1F99  00B2               	movwf	_menu_option_size^(0+128)
 12996  1F9A  3000               	movlw	0
 12997  1F9B  00B3               	movwf	(_menu_option_size^(0+128)+1)
 12998  1F9C  0008               	return
 12999  1F9D                     __end_of_menu_Init:	
 13000                           
 13001                           	psect	text6
 13002  14C5                     __ptext6:	
 13003 ;; *************** function _flashy_Init *****************
 13004 ;; Defined at:
 13005 ;;		line 50 in file "flashy_task.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;  taskData        2   25[BANK0 ] PTR void 
 13008 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13009 ;;		 -> flashy_TaskData(30), NULL(0), 
 13010 ;; Auto vars:     Size  Location     Type
 13011 ;;  data            2   27[BANK0 ] PTR struct t_flashy_task
 13012 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13013 ;;		 -> flashy_TaskData(30), NULL(0), 
 13014 ;; Return value:  Size  Location     Type
 13015 ;;                  1    wreg      void 
 13016 ;; Registers used:
 13017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13018 ;; Tracked objects:
 13019 ;;		On entry : 0/0
 13020 ;;		On exit  : 0/0
 13021 ;;		Unchanged: 0/0
 13022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13026 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13027 ;;Total ram usage:        4 bytes
 13028 ;; Hardware stack levels used:    1
 13029 ;; Hardware stack levels required when called:   10
 13030 ;; This function calls:
 13031 ;;		_nullifyBadge_segDisplayErase
 13032 ;;		_nullifyBadge_segDisplayRegister
 13033 ;;		_nullifyBadge_userLedsClr
 13034 ;;		_nullifyBadge_userLedsRegister
 13035 ;; This function is called by:
 13036 ;;		_main
 13037 ;;		_scheduler_TaskAdd
 13038 ;; This function uses a non-reentrant model
 13039 ;;
 13040                           
 13041                           
 13042                           ;psect for function _flashy_Init
 13043  14C5                     _flashy_Init:	
 13044                           
 13045                           ;flashy_task.c: 51: struct t_flashy_taskData *data = (struct t_flashy_taskData *) taskDa
      +                          ta;
 13046                           
 13047                           ;incstack = 0
 13048                           ; Regs used in _flashy_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13049  14C5  0020               	movlb	0	; select bank0
 13050  14C6  083A               	movf	flashy_Init@taskData+1,w
 13051  14C7  00BC               	movwf	flashy_Init@data+1
 13052  14C8  0839               	movf	flashy_Init@taskData,w
 13053  14C9  00BB               	movwf	flashy_Init@data
 13054                           
 13055                           ;flashy_task.c: 54: nullifyBadge_userLedsRegister(data->badge);
 13056  14CA  083B               	movf	flashy_Init@data,w
 13057  14CB  0086               	movwf	6
 13058  14CC  083C               	movf	flashy_Init@data+1,w
 13059  14CD  0087               	movwf	7
 13060  14CE  0801               	movf	1,w
 13061  14CF  31A5  25C6  3194   	fcall	_nullifyBadge_userLedsRegister
 13062                           
 13063                           ;flashy_task.c: 55: nullifyBadge_userLedsClr(data->badge);
 13064  14D2  0020               	movlb	0	; select bank0
 13065  14D3  083B               	movf	flashy_Init@data,w
 13066  14D4  0086               	movwf	6
 13067  14D5  083C               	movf	flashy_Init@data+1,w
 13068  14D6  0087               	movwf	7
 13069  14D7  0801               	movf	1,w
 13070  14D8  31A4  24D1  3194   	fcall	_nullifyBadge_userLedsClr
 13071                           
 13072                           ;flashy_task.c: 56: nullifyBadge_segDisplayRegister(data->badge);
 13073  14DB  0020               	movlb	0	; select bank0
 13074  14DC  083B               	movf	flashy_Init@data,w
 13075  14DD  0086               	movwf	6
 13076  14DE  083C               	movf	flashy_Init@data+1,w
 13077  14DF  0087               	movwf	7
 13078  14E0  0801               	movf	1,w
 13079  14E1  31A4  24DF  3194   	fcall	_nullifyBadge_segDisplayRegister
 13080                           
 13081                           ;flashy_task.c: 57: nullifyBadge_segDisplayErase(data->badge);
 13082  14E4  0020               	movlb	0	; select bank0
 13083  14E5  083B               	movf	flashy_Init@data,w
 13084  14E6  0086               	movwf	6
 13085  14E7  083C               	movf	flashy_Init@data+1,w
 13086  14E8  0087               	movwf	7
 13087  14E9  0801               	movf	1,w
 13088  14EA  31A4  24CB  3194   	fcall	_nullifyBadge_segDisplayErase
 13089                           
 13090                           ;flashy_task.c: 63: data->delayTickCount = 35;
 13091  14ED  0020               	movlb	0	; select bank0
 13092  14EE  083B               	movf	flashy_Init@data,w
 13093  14EF  0086               	movwf	6
 13094  14F0  083C               	movf	flashy_Init@data+1,w
 13095  14F1  0087               	movwf	7
 13096  14F2  3141               	addfsr 1,1
 13097  14F3  3023               	movlw	35
 13098  14F4  3FC0               	movwi [0]fsr1
 13099  14F5  3000               	movlw	0
 13100  14F6  3FC1               	movwi [1]fsr1
 13101                           
 13102                           ;flashy_task.c: 64: data->displayTickCount = 0;
 13103  14F7  083B               	movf	flashy_Init@data,w
 13104  14F8  0086               	movwf	6
 13105  14F9  083C               	movf	flashy_Init@data+1,w
 13106  14FA  0087               	movwf	7
 13107  14FB  3144               	addfsr 1,4
 13108  14FC  3000               	movlw	0
 13109  14FD  3FC0               	movwi [0]fsr1
 13110  14FE  3FC1               	movwi [1]fsr1
 13111                           
 13112                           ;flashy_task.c: 67: data->holdCountA = 0;
 13113  14FF  083B               	movf	flashy_Init@data,w
 13114  1500  0086               	movwf	6
 13115  1501  083C               	movf	flashy_Init@data+1,w
 13116  1502  0087               	movwf	7
 13117  1503  314A               	addfsr 1,10
 13118  1504  3000               	movlw	0
 13119  1505  3FC0               	movwi [0]fsr1
 13120  1506  3FC1               	movwi [1]fsr1
 13121                           
 13122                           ;flashy_task.c: 68: data->holdCountB = 0;
 13123  1507  083B               	movf	flashy_Init@data,w
 13124  1508  0086               	movwf	6
 13125  1509  083C               	movf	flashy_Init@data+1,w
 13126  150A  0087               	movwf	7
 13127  150B  314C               	addfsr 1,12
 13128  150C  3000               	movlw	0
 13129  150D  3FC0               	movwi [0]fsr1
 13130  150E  3FC1               	movwi [1]fsr1
 13131                           
 13132                           ;flashy_task.c: 69: data->holdCountX = 0;
 13133  150F  083B               	movf	flashy_Init@data,w
 13134  1510  0086               	movwf	6
 13135  1511  083C               	movf	flashy_Init@data+1,w
 13136  1512  0087               	movwf	7
 13137  1513  314E               	addfsr 1,14
 13138  1514  3000               	movlw	0
 13139  1515  3FC0               	movwi [0]fsr1
 13140  1516  3FC1               	movwi [1]fsr1
 13141                           
 13142                           ;flashy_task.c: 70: data->holdCountY = 0;
 13143  1517  083B               	movf	flashy_Init@data,w
 13144  1518  0086               	movwf	6
 13145  1519  083C               	movf	flashy_Init@data+1,w
 13146  151A  0087               	movwf	7
 13147  151B  3150               	addfsr 1,16
 13148  151C  3000               	movlw	0
 13149  151D  3FC0               	movwi [0]fsr1
 13150  151E  3FC1               	movwi [1]fsr1
 13151                           
 13152                           ;flashy_task.c: 71: data->holdCountXY = 0;
 13153  151F  083B               	movf	flashy_Init@data,w
 13154  1520  0086               	movwf	6
 13155  1521  083C               	movf	flashy_Init@data+1,w
 13156  1522  0087               	movwf	7
 13157  1523  3152               	addfsr 1,18
 13158  1524  3000               	movlw	0
 13159  1525  3FC0               	movwi [0]fsr1
 13160  1526  3FC1               	movwi [1]fsr1
 13161                           
 13162                           ;flashy_task.c: 72: data->holdCountAY = 0;
 13163  1527  083B               	movf	flashy_Init@data,w
 13164  1528  0086               	movwf	6
 13165  1529  083C               	movf	flashy_Init@data+1,w
 13166  152A  0087               	movwf	7
 13167  152B  3154               	addfsr 1,20
 13168  152C  3000               	movlw	0
 13169  152D  3FC0               	movwi [0]fsr1
 13170  152E  3FC1               	movwi [1]fsr1
 13171                           
 13172                           ;flashy_task.c: 73: data->holdCountAX = 0;
 13173  152F  083B               	movf	flashy_Init@data,w
 13174  1530  0086               	movwf	6
 13175  1531  083C               	movf	flashy_Init@data+1,w
 13176  1532  0087               	movwf	7
 13177  1533  3156               	addfsr 1,22
 13178  1534  3000               	movlw	0
 13179  1535  3FC0               	movwi [0]fsr1
 13180  1536  3FC1               	movwi [1]fsr1
 13181                           
 13182                           ;flashy_task.c: 74: data->noholdCount = 0;
 13183  1537  083B               	movf	flashy_Init@data,w
 13184  1538  0086               	movwf	6
 13185  1539  083C               	movf	flashy_Init@data+1,w
 13186  153A  0087               	movwf	7
 13187  153B  315C               	addfsr 1,28
 13188  153C  3000               	movlw	0
 13189  153D  3FC0               	movwi [0]fsr1
 13190  153E  3FC1               	movwi [1]fsr1
 13191                           
 13192                           ;flashy_task.c: 76: flashy_leds_idx = 0;
 13193  153F  0021               	movlb	1	; select bank1
 13194  1540  01B0               	clrf	_flashy_leds_idx^(0+128)
 13195  1541  01B1               	clrf	(_flashy_leds_idx+1)^(0+128)
 13196                           
 13197                           ;flashy_task.c: 77: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 13198  1542  0020               	movlb	0	; select bank0
 13199  1543  083B               	movf	flashy_Init@data,w
 13200  1544  0086               	movwf	6
 13201  1545  083C               	movf	flashy_Init@data+1,w
 13202  1546  0087               	movwf	7
 13203  1547  3143               	addfsr 1,3
 13204  1548  0181               	clrf	1
 13205                           
 13206                           ;flashy_task.c: 78: flashy_option_idx = 0;
 13207  1549  0021               	movlb	1	; select bank1
 13208  154A  01A6               	clrf	_flashy_option_idx^(0+128)
 13209  154B  01A7               	clrf	(_flashy_option_idx+1)^(0+128)
 13210                           
 13211                           ;flashy_task.c: 80: flashy_option_size = sizeof(flashy_option)/sizeof(flashy_option[0]);
 13212  154C  300E               	movlw	14
 13213  154D  00A4               	movwf	_flashy_option_size^(0+128)
 13214  154E  3000               	movlw	0
 13215  154F  00A5               	movwf	(_flashy_option_size^(0+128)+1)
 13216                           
 13217                           ;flashy_task.c: 82: flashy_sparkle_rate =50;
 13218  1550  3032               	movlw	50
 13219  1551  00AC               	movwf	_flashy_sparkle_rate^(0+128)
 13220  1552  3000               	movlw	0
 13221  1553  00AD               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 13222                           
 13223                           ;flashy_task.c: 83: flashy_scroll_rate=50;
 13224  1554  3032               	movlw	50
 13225  1555  00AA               	movwf	_flashy_scroll_rate^(0+128)
 13226  1556  3000               	movlw	0
 13227  1557  00AB               	movwf	(_flashy_scroll_rate^(0+128)+1)
 13228                           
 13229                           ;flashy_task.c: 84: flashy_leds_state_track =0;
 13230  1558  01AE               	clrf	_flashy_leds_state_track^(0+128)
 13231  1559  01AF               	clrf	(_flashy_leds_state_track+1)^(0+128)
 13232  155A  0008               	return
 13233  155B                     __end_of_flashy_Init:	
 13234                           
 13235                           	psect	text7
 13236  1DC5                     __ptext7:	
 13237 ;; *************** function _slot_Init *****************
 13238 ;; Defined at:
 13239 ;;		line 16 in file "slot_task.c"
 13240 ;; Parameters:    Size  Location     Type
 13241 ;;  taskData        2   25[BANK0 ] PTR void 
 13242 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13243 ;;		 -> flashy_TaskData(30), NULL(0), 
 13244 ;; Auto vars:     Size  Location     Type
 13245 ;;  data            2   27[BANK0 ] PTR struct t_slot_taskDa
 13246 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13247 ;;		 -> flashy_TaskData(30), NULL(0), 
 13248 ;; Return value:  Size  Location     Type
 13249 ;;                  1    wreg      void 
 13250 ;; Registers used:
 13251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13252 ;; Tracked objects:
 13253 ;;		On entry : 0/0
 13254 ;;		On exit  : 0/0
 13255 ;;		Unchanged: 0/0
 13256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13257 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13260 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13261 ;;Total ram usage:        4 bytes
 13262 ;; Hardware stack levels used:    1
 13263 ;; Hardware stack levels required when called:   10
 13264 ;; This function calls:
 13265 ;;		_nullifyBadge_segDisplayErase
 13266 ;;		_nullifyBadge_segDisplayRegister
 13267 ;;		_nullifyBadge_userLedsClr
 13268 ;;		_nullifyBadge_userLedsRegister
 13269 ;; This function is called by:
 13270 ;;		_main
 13271 ;;		_scheduler_TaskAdd
 13272 ;; This function uses a non-reentrant model
 13273 ;;
 13274                           
 13275                           
 13276                           ;psect for function _slot_Init
 13277  1DC5                     _slot_Init:	
 13278                           
 13279                           ;slot_task.c: 17: struct t_slot_taskData *data = (struct t_slot_taskData *) taskData;
 13280                           
 13281                           ;incstack = 0
 13282                           ; Regs used in _slot_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13283  1DC5  0020               	movlb	0	; select bank0
 13284  1DC6  083A               	movf	slot_Init@taskData+1,w
 13285  1DC7  00BC               	movwf	slot_Init@data+1
 13286  1DC8  0839               	movf	slot_Init@taskData,w
 13287  1DC9  00BB               	movwf	slot_Init@data
 13288                           
 13289                           ;slot_task.c: 20: nullifyBadge_userLedsRegister(data->badge);
 13290  1DCA  083B               	movf	slot_Init@data,w
 13291  1DCB  0086               	movwf	6
 13292  1DCC  083C               	movf	slot_Init@data+1,w
 13293  1DCD  0087               	movwf	7
 13294  1DCE  0801               	movf	1,w
 13295  1DCF  31A5  25C6  319D   	fcall	_nullifyBadge_userLedsRegister
 13296                           
 13297                           ;slot_task.c: 21: nullifyBadge_userLedsClr(data->badge);
 13298  1DD2  0020               	movlb	0	; select bank0
 13299  1DD3  083B               	movf	slot_Init@data,w
 13300  1DD4  0086               	movwf	6
 13301  1DD5  083C               	movf	slot_Init@data+1,w
 13302  1DD6  0087               	movwf	7
 13303  1DD7  0801               	movf	1,w
 13304  1DD8  31A4  24D1  319D   	fcall	_nullifyBadge_userLedsClr
 13305                           
 13306                           ;slot_task.c: 22: nullifyBadge_segDisplayRegister(data->badge);
 13307  1DDB  0020               	movlb	0	; select bank0
 13308  1DDC  083B               	movf	slot_Init@data,w
 13309  1DDD  0086               	movwf	6
 13310  1DDE  083C               	movf	slot_Init@data+1,w
 13311  1DDF  0087               	movwf	7
 13312  1DE0  0801               	movf	1,w
 13313  1DE1  31A4  24DF  319D   	fcall	_nullifyBadge_segDisplayRegister
 13314                           
 13315                           ;slot_task.c: 23: nullifyBadge_segDisplayErase(data->badge);
 13316  1DE4  0020               	movlb	0	; select bank0
 13317  1DE5  083B               	movf	slot_Init@data,w
 13318  1DE6  0086               	movwf	6
 13319  1DE7  083C               	movf	slot_Init@data+1,w
 13320  1DE8  0087               	movwf	7
 13321  1DE9  0801               	movf	1,w
 13322  1DEA  31A4  24CB  319D   	fcall	_nullifyBadge_segDisplayErase
 13323                           
 13324                           ;slot_task.c: 26: data->displayTickCount = 0;
 13325  1DED  0020               	movlb	0	; select bank0
 13326  1DEE  083B               	movf	slot_Init@data,w
 13327  1DEF  0086               	movwf	6
 13328  1DF0  083C               	movf	slot_Init@data+1,w
 13329  1DF1  0087               	movwf	7
 13330  1DF2  3142               	addfsr 1,2
 13331  1DF3  3000               	movlw	0
 13332  1DF4  3FC0               	movwi [0]fsr1
 13333  1DF5  3FC1               	movwi [1]fsr1
 13334                           
 13335                           ;slot_task.c: 27: data->holdCountA = 0;
 13336  1DF6  083B               	movf	slot_Init@data,w
 13337  1DF7  0086               	movwf	6
 13338  1DF8  083C               	movf	slot_Init@data+1,w
 13339  1DF9  0087               	movwf	7
 13340  1DFA  3144               	addfsr 1,4
 13341  1DFB  3000               	movlw	0
 13342  1DFC  3FC0               	movwi [0]fsr1
 13343  1DFD  3FC1               	movwi [1]fsr1
 13344                           
 13345                           ;slot_task.c: 28: data->holdCountB = 0;
 13346  1DFE  083B               	movf	slot_Init@data,w
 13347  1DFF  0086               	movwf	6
 13348  1E00  083C               	movf	slot_Init@data+1,w
 13349  1E01  0087               	movwf	7
 13350  1E02  3146               	addfsr 1,6
 13351  1E03  3000               	movlw	0
 13352  1E04  3FC0               	movwi [0]fsr1
 13353  1E05  3FC1               	movwi [1]fsr1
 13354                           
 13355                           ;slot_task.c: 29: data->holdCountX = 0;
 13356  1E06  083B               	movf	slot_Init@data,w
 13357  1E07  0086               	movwf	6
 13358  1E08  083C               	movf	slot_Init@data+1,w
 13359  1E09  0087               	movwf	7
 13360  1E0A  3148               	addfsr 1,8
 13361  1E0B  3000               	movlw	0
 13362  1E0C  3FC0               	movwi [0]fsr1
 13363  1E0D  3FC1               	movwi [1]fsr1
 13364                           
 13365                           ;slot_task.c: 30: data->holdCountY = 0;
 13366  1E0E  083B               	movf	slot_Init@data,w
 13367  1E0F  0086               	movwf	6
 13368  1E10  083C               	movf	slot_Init@data+1,w
 13369  1E11  0087               	movwf	7
 13370  1E12  314A               	addfsr 1,10
 13371  1E13  3000               	movlw	0
 13372  1E14  3FC0               	movwi [0]fsr1
 13373  1E15  3FC1               	movwi [1]fsr1
 13374                           
 13375                           ;slot_task.c: 31: data->noholdCount = 0;
 13376  1E16  083B               	movf	slot_Init@data,w
 13377  1E17  0086               	movwf	6
 13378  1E18  083C               	movf	slot_Init@data+1,w
 13379  1E19  0087               	movwf	7
 13380  1E1A  314C               	addfsr 1,12
 13381  1E1B  3000               	movlw	0
 13382  1E1C  3FC0               	movwi [0]fsr1
 13383  1E1D  3FC1               	movwi [1]fsr1
 13384  1E1E  0008               	return
 13385  1E1F                     __end_of_slot_Init:	
 13386                           
 13387                           	psect	text8
 13388  25C6                     __ptext8:	
 13389 ;; *************** function _nullifyBadge_userLedsRegister *****************
 13390 ;; Defined at:
 13391 ;;		line 133 in file "nullifyBadge.c"
 13392 ;; Parameters:    Size  Location     Type
 13393 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 13394 ;;		 -> badge_inst(18), 
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 13397 ;;		 -> badge_inst(18), 
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      char 
 13400 ;; Registers used:
 13401 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13411 ;;Total ram usage:        1 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; Hardware stack levels required when called:    4
 13414 ;; This function calls:
 13415 ;;		Nothing
 13416 ;; This function is called by:
 13417 ;;		_menu_Init
 13418 ;;		_flashy_Init
 13419 ;;		_locked_Init
 13420 ;;		_secret_Init
 13421 ;;		_slot_Init
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           
 13426                           ;psect for function _nullifyBadge_userLedsRegister
 13427  25C6                     _nullifyBadge_userLedsRegister:	
 13428                           
 13429                           ;incstack = 0
 13430                           ; Regs used in _nullifyBadge_userLedsRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 13431                           ;nullifyBadge_userLedsRegister@badge stored from wreg
 13432  25C6  00F1               	movwf	nullifyBadge_userLedsRegister@badge
 13433                           
 13434                           ;nullifyBadge.c: 134: if (badge->registeredHw & HW_USER_LEDS) {
 13435  25C7  0871               	movf	nullifyBadge_userLedsRegister@badge,w
 13436  25C8  3E11               	addlw	17
 13437  25C9  0086               	movwf	6
 13438  25CA  3001               	movlw	1	; select bank2/3
 13439  25CB  0087               	movwf	7
 13440  25CC  1801               	btfsc	1,0
 13441  25CD  0008               	return
 13442                           
 13443                           ;nullifyBadge.c: 137: else {
 13444                           ;nullifyBadge.c: 138: badge->registeredHw |= (1 << HW_USER_LEDS);
 13445                           
 13446                           ;nullifyBadge.c: 136: }
 13447                           
 13448                           ;nullifyBadge.c: 135: return -1;
 13449                           ;	Return value of _nullifyBadge_userLedsRegister is never used
 13450  25CE  0871               	movf	nullifyBadge_userLedsRegister@badge,w
 13451  25CF  3E11               	addlw	17
 13452  25D0  0086               	movwf	6
 13453  25D1  3001               	movlw	1	; select bank2/3
 13454  25D2  0087               	movwf	7
 13455  25D3  1481               	bsf	1,1
 13456                           
 13457                           ;nullifyBadge.c: 139: return 0;
 13458                           ;	Return value of _nullifyBadge_userLedsRegister is never used
 13459  25D4  0008               	return
 13460  25D5                     __end_of_nullifyBadge_userLedsRegister:	
 13461                           
 13462                           	psect	text9
 13463  24DF                     __ptext9:	
 13464 ;; *************** function _nullifyBadge_segDisplayRegister *****************
 13465 ;; Defined at:
 13466 ;;		line 68 in file "nullifyBadge.c"
 13467 ;; Parameters:    Size  Location     Type
 13468 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 13469 ;;		 -> badge_inst(18), 
 13470 ;; Auto vars:     Size  Location     Type
 13471 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 13472 ;;		 -> badge_inst(18), 
 13473 ;; Return value:  Size  Location     Type
 13474 ;;                  1    wreg      char 
 13475 ;; Registers used:
 13476 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13477 ;; Tracked objects:
 13478 ;;		On entry : 0/0
 13479 ;;		On exit  : 0/0
 13480 ;;		Unchanged: 0/0
 13481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13486 ;;Total ram usage:        1 bytes
 13487 ;; Hardware stack levels used:    1
 13488 ;; Hardware stack levels required when called:    4
 13489 ;; This function calls:
 13490 ;;		Nothing
 13491 ;; This function is called by:
 13492 ;;		_menu_Init
 13493 ;;		_flashy_Init
 13494 ;;		_locked_Init
 13495 ;;		_secret_Init
 13496 ;;		_slot_Init
 13497 ;;		_fadeDisplay_Init
 13498 ;; This function uses a non-reentrant model
 13499 ;;
 13500                           
 13501                           
 13502                           ;psect for function _nullifyBadge_segDisplayRegister
 13503  24DF                     _nullifyBadge_segDisplayRegister:	
 13504                           
 13505                           ;incstack = 0
 13506                           ; Regs used in _nullifyBadge_segDisplayRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 13507                           ;nullifyBadge_segDisplayRegister@badge stored from wreg
 13508  24DF  00F1               	movwf	nullifyBadge_segDisplayRegister@badge
 13509                           
 13510                           ;nullifyBadge.c: 72: else {
 13511                           ;nullifyBadge.c: 73: badge->registeredHw |= (1 << HW_SEG_DISPLAY);
 13512                           
 13513                           ;nullifyBadge.c: 71: }
 13514                           
 13515                           ;nullifyBadge.c: 70: return -1;
 13516                           ;	Return value of _nullifyBadge_segDisplayRegister is never used
 13517                           
 13518                           ;nullifyBadge.c: 69: if (badge->registeredHw & HW_SEG_DISPLAY) {
 13519  24E0  0871               	movf	nullifyBadge_segDisplayRegister@badge,w
 13520  24E1  3E11               	addlw	17
 13521  24E2  0086               	movwf	6
 13522  24E3  3001               	movlw	1	; select bank2/3
 13523  24E4  0087               	movwf	7
 13524  24E5  1401               	bsf	1,0
 13525                           
 13526                           ;nullifyBadge.c: 74: return 0;
 13527                           ;	Return value of _nullifyBadge_segDisplayRegister is never used
 13528  24E6  0008               	return
 13529  24E7                     __end_of_nullifyBadge_segDisplayRegister:	
 13530                           
 13531                           	psect	text10
 13532  2725                     __ptext10:	
 13533 ;; *************** function _scheduler_Init *****************
 13534 ;; Defined at:
 13535 ;;		line 27 in file "cooperative_scheduler.c"
 13536 ;; Parameters:    Size  Location     Type
 13537 ;;  scheduler       1    wreg     PTR struct t_scheduler
 13538 ;;		 -> schedulerInst(34), 
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;  scheduler       1    2[COMMON] PTR struct t_scheduler
 13541 ;;		 -> schedulerInst(34), 
 13542 ;;  k               1    3[COMMON] unsigned char 
 13543 ;; Return value:  Size  Location     Type
 13544 ;;                  1    wreg      void 
 13545 ;; Registers used:
 13546 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13547 ;; Tracked objects:
 13548 ;;		On entry : 0/0
 13549 ;;		On exit  : 0/0
 13550 ;;		Unchanged: 0/0
 13551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13555 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13556 ;;Total ram usage:        3 bytes
 13557 ;; Hardware stack levels used:    1
 13558 ;; Hardware stack levels required when called:    4
 13559 ;; This function calls:
 13560 ;;		Nothing
 13561 ;; This function is called by:
 13562 ;;		_main
 13563 ;; This function uses a non-reentrant model
 13564 ;;
 13565                           
 13566                           
 13567                           ;psect for function _scheduler_Init
 13568  2725                     _scheduler_Init:	
 13569                           
 13570                           ;incstack = 0
 13571                           ; Regs used in _scheduler_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
 13572                           ;scheduler_Init@scheduler stored from wreg
 13573  2725  00F2               	movwf	scheduler_Init@scheduler
 13574                           
 13575                           ;cooperative_scheduler.c: 28: scheduler->taskEntryVector = 0x0;
 13576  2726  0872               	movf	scheduler_Init@scheduler,w
 13577  2727  3E20               	addlw	32
 13578  2728  0086               	movwf	6
 13579  2729  3002               	movlw	2	; select bank4/5
 13580  272A  0087               	movwf	7
 13581  272B  3000               	movlw	0
 13582  272C  3FC0               	movwi [0]fsr1
 13583  272D  3FC1               	movwi [1]fsr1
 13584                           
 13585                           ;cooperative_scheduler.c: 29: u8 k;
 13586                           ;cooperative_scheduler.c: 31: for (k = 0; k < 16; k++) {
 13587  272E  01F3               	clrf	scheduler_Init@k
 13588  272F                     L1:	
 13589  272F  3010               	movlw	16
 13590  2730  0273               	subwf	scheduler_Init@k,w
 13591  2731  1803               	btfsc	3,0
 13592  2732  0008               	return
 13593                           
 13594                           ;cooperative_scheduler.c: 32: scheduler->tasks[k] = (0);
 13595  2733  3573               	lslf	scheduler_Init@k,w
 13596  2734  0772               	addwf	scheduler_Init@scheduler,w
 13597  2735  00F1               	movwf	??_scheduler_Init
 13598  2736  0871               	movf	??_scheduler_Init,w
 13599  2737  0086               	movwf	6
 13600  2738  3002               	movlw	2	; select bank4/5
 13601  2739  0087               	movwf	7
 13602  273A  3000               	movlw	0
 13603  273B  3FC0               	movwi [0]fsr1
 13604  273C  3FC1               	movwi [1]fsr1
 13605  273D  3001               	movlw	1
 13606  273E  00F1               	movwf	??_scheduler_Init
 13607  273F  0871               	movf	??_scheduler_Init,w
 13608  2740  07F3               	addwf	scheduler_Init@k,f
 13609  2741  2F2F               	goto	L1
 13610  2742                     __end_of_scheduler_Init:	
 13611                           
 13612                           	psect	text11
 13613  13C7                     __ptext11:	
 13614 ;; *************** function _schedulerExecute *****************
 13615 ;; Defined at:
 13616 ;;		line 77 in file "cooperative_scheduler.c"
 13617 ;; Parameters:    Size  Location     Type
 13618 ;;  scheduler       1    wreg     PTR struct t_scheduler
 13619 ;;		 -> schedulerInst(34), 
 13620 ;; Auto vars:     Size  Location     Type
 13621 ;;  scheduler       1   78[BANK0 ] PTR struct t_scheduler
 13622 ;;		 -> schedulerInst(34), 
 13623 ;;  tickDelta       2   76[BANK0 ] unsigned int 
 13624 ;;  taskLastSyst    2   74[BANK0 ] unsigned int 
 13625 ;;  currentSyste    2   72[BANK0 ] unsigned int 
 13626 ;;  k               1   79[BANK0 ] unsigned char 
 13627 ;; Return value:  Size  Location     Type
 13628 ;;                  1    wreg      void 
 13629 ;; Registers used:
 13630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13631 ;; Tracked objects:
 13632 ;;		On entry : 0/0
 13633 ;;		On exit  : 0/0
 13634 ;;		Unchanged: 0/0
 13635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13637 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13638 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13639 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13640 ;;Total ram usage:       14 bytes
 13641 ;; Hardware stack levels used:    1
 13642 ;; Hardware stack levels required when called:   14
 13643 ;; This function calls:
 13644 ;;		_TMR0_Read16bitTimer
 13645 ;;		_scheduler_TaskRun
 13646 ;; This function is called by:
 13647 ;;		_main
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           
 13652                           ;psect for function _schedulerExecute
 13653  13C7                     _schedulerExecute:	
 13654                           
 13655                           ;incstack = 0
 13656                           ; Regs used in _schedulerExecute: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13657                           ;schedulerExecute@scheduler stored from wreg
 13658  13C7  0020               	movlb	0	; select bank0
 13659  13C8  00EE               	movwf	schedulerExecute@scheduler
 13660                           
 13661                           ;cooperative_scheduler.c: 78: u16 currentSystemTick;
 13662                           ;cooperative_scheduler.c: 79: u16 taskLastSystemTick;
 13663                           ;cooperative_scheduler.c: 80: u16 tickDelta;
 13664                           ;cooperative_scheduler.c: 81: u8 k;
 13665                           ;cooperative_scheduler.c: 83: for (k = 0; k < 16; k++) {
 13666  13C9  01EF               	clrf	schedulerExecute@k
 13667  13CA                     L2:	
 13668  13CA  3010               	movlw	16
 13669  13CB  026F               	subwf	schedulerExecute@k,w
 13670  13CC  1803               	btfsc	3,0
 13671  13CD  0008               	return
 13672                           
 13673                           ;cooperative_scheduler.c: 86: if (!(scheduler->taskEntryVector & (1 << k)) ) {
 13674  13CE  086E               	movf	schedulerExecute@scheduler,w
 13675  13CF  3E20               	addlw	32
 13676  13D0  0086               	movwf	6
 13677  13D1  3002               	movlw	2	; select bank4/5
 13678  13D2  0087               	movwf	7
 13679  13D3  3F40               	moviw [0]fsr1
 13680  13D4  00E2               	movwf	??_schedulerExecute
 13681  13D5  3F41               	moviw [1]fsr1
 13682  13D6  00E3               	movwf	??_schedulerExecute+1
 13683  13D7  3001               	movlw	1
 13684  13D8  00E4               	movwf	??_schedulerExecute+2
 13685  13D9  3000               	movlw	0
 13686  13DA  00E5               	movwf	??_schedulerExecute+3
 13687  13DB  0A6F               	incf	schedulerExecute@k,w
 13688  13DC  2BDF               	goto	u5194
 13689  13DD                     u5195:	
 13690  13DD  35E4               	lslf	??_schedulerExecute+2,f
 13691  13DE  0DE5               	rlf	??_schedulerExecute+3,f
 13692  13DF                     u5194:	
 13693  13DF  0B89               	decfsz	9,f
 13694  13E0  2BDD               	goto	u5195
 13695  13E1  0862               	movf	??_schedulerExecute,w
 13696  13E2  0564               	andwf	??_schedulerExecute+2,w
 13697  13E3  00E6               	movwf	??_schedulerExecute+4
 13698  13E4  0863               	movf	??_schedulerExecute+1,w
 13699  13E5  0565               	andwf	??_schedulerExecute+3,w
 13700  13E6  00E7               	movwf	??_schedulerExecute+5
 13701  13E7  0866               	movf	??_schedulerExecute+4,w
 13702  13E8  0467               	iorwf	??_schedulerExecute+5,w
 13703  13E9  1903               	btfsc	3,2
 13704  13EA  2C3D               	goto	l8267
 13705                           
 13706                           ;cooperative_scheduler.c: 88: }
 13707                           ;cooperative_scheduler.c: 90: currentSystemTick = TMR0_Read16bitTimer();
 13708                           
 13709                           ;cooperative_scheduler.c: 87: continue;
 13710  13EB  31A7  2708  3193   	fcall	_TMR0_Read16bitTimer
 13711  13EE  0872               	movf	?_TMR0_Read16bitTimer+1,w
 13712  13EF  0020               	movlb	0	; select bank0
 13713  13F0  00E9               	movwf	schedulerExecute@currentSystemTick+1
 13714  13F1  0871               	movf	?_TMR0_Read16bitTimer,w
 13715  13F2  00E8               	movwf	schedulerExecute@currentSystemTick
 13716                           
 13717                           ;cooperative_scheduler.c: 91: taskLastSystemTick = scheduler->tasks[k]->systemTickLastEx
      +                          ecuted;
 13718  13F3  356F               	lslf	schedulerExecute@k,w
 13719  13F4  076E               	addwf	schedulerExecute@scheduler,w
 13720  13F5  00E2               	movwf	??_schedulerExecute
 13721  13F6  0862               	movf	??_schedulerExecute,w
 13722  13F7  0086               	movwf	6
 13723  13F8  3002               	movlw	2	; select bank4/5
 13724  13F9  0087               	movwf	7
 13725  13FA  3F40               	moviw [0]fsr1
 13726  13FB  00E3               	movwf	??_schedulerExecute+1
 13727  13FC  3F41               	moviw [1]fsr1
 13728  13FD  00E4               	movwf	??_schedulerExecute+2
 13729  13FE  0863               	movf	??_schedulerExecute+1,w
 13730  13FF  0086               	movwf	6
 13731  1400  0864               	movf	??_schedulerExecute+2,w
 13732  1401  0087               	movwf	7
 13733  1402  3F40               	moviw [0]fsr1
 13734  1403  00EA               	movwf	schedulerExecute@taskLastSystemTick
 13735  1404  3F41               	moviw [1]fsr1
 13736  1405  00EB               	movwf	schedulerExecute@taskLastSystemTick+1
 13737                           
 13738                           ;cooperative_scheduler.c: 99: tickDelta = currentSystemTick - taskLastSystemTick;
 13739  1406  096A               	comf	schedulerExecute@taskLastSystemTick,w
 13740  1407  00E2               	movwf	??_schedulerExecute
 13741  1408  096B               	comf	schedulerExecute@taskLastSystemTick+1,w
 13742  1409  00E3               	movwf	??_schedulerExecute+1
 13743  140A  0AE2               	incf	??_schedulerExecute,f
 13744  140B  1903               	skipnz
 13745  140C  0AE3               	incf	??_schedulerExecute+1,f
 13746  140D  0868               	movf	schedulerExecute@currentSystemTick,w
 13747  140E  0762               	addwf	??_schedulerExecute,w
 13748  140F  00EC               	movwf	schedulerExecute@tickDelta
 13749  1410  0869               	movf	schedulerExecute@currentSystemTick+1,w
 13750  1411  3D63               	addwfc	??_schedulerExecute+1,w
 13751  1412  00ED               	movwf	schedulerExecute@tickDelta+1
 13752                           
 13753                           ;cooperative_scheduler.c: 103: if (tickDelta >= scheduler->tasks[k]->taskInterval) {
 13754  1413  356F               	lslf	schedulerExecute@k,w
 13755  1414  076E               	addwf	schedulerExecute@scheduler,w
 13756  1415  00E2               	movwf	??_schedulerExecute
 13757  1416  0862               	movf	??_schedulerExecute,w
 13758  1417  0086               	movwf	6
 13759  1418  3002               	movlw	2	; select bank4/5
 13760  1419  0087               	movwf	7
 13761  141A  3F40               	moviw [0]fsr1
 13762  141B  00E3               	movwf	??_schedulerExecute+1
 13763  141C  3F41               	moviw [1]fsr1
 13764  141D  00E4               	movwf	??_schedulerExecute+2
 13765  141E  0863               	movf	??_schedulerExecute+1,w
 13766  141F  0086               	movwf	6
 13767  1420  0864               	movf	??_schedulerExecute+2,w
 13768  1421  0087               	movwf	7
 13769  1422  314A               	addfsr 1,10
 13770  1423  3F40               	moviw [0]fsr1
 13771  1424  00E5               	movwf	??_schedulerExecute+3
 13772  1425  3F41               	moviw [1]fsr1
 13773  1426  00E6               	movwf	??_schedulerExecute+4
 13774  1427  0866               	movf	??_schedulerExecute+4,w
 13775  1428  026D               	subwf	schedulerExecute@tickDelta+1,w
 13776  1429  1D03               	skipz
 13777  142A  2C2D               	goto	u5215
 13778  142B  0865               	movf	??_schedulerExecute+3,w
 13779  142C  026C               	subwf	schedulerExecute@tickDelta,w
 13780  142D                     u5215:	
 13781  142D  1C03               	skipc
 13782  142E  2C3D               	goto	l8267
 13783                           
 13784                           ;cooperative_scheduler.c: 104: scheduler_TaskRun(scheduler->tasks[k]);
 13785  142F  356F               	lslf	schedulerExecute@k,w
 13786  1430  076E               	addwf	schedulerExecute@scheduler,w
 13787  1431  00E2               	movwf	??_schedulerExecute
 13788  1432  0862               	movf	??_schedulerExecute,w
 13789  1433  0086               	movwf	6
 13790  1434  3002               	movlw	2	; select bank4/5
 13791  1435  0087               	movwf	7
 13792  1436  3F40               	moviw [0]fsr1
 13793  1437  00E0               	movwf	scheduler_TaskRun@task
 13794  1438  3F41               	moviw [1]fsr1
 13795  1439  00E1               	movwf	scheduler_TaskRun@task+1
 13796  143A  31A7  279C  3193   	fcall	_scheduler_TaskRun
 13797  143D                     l8267:	
 13798  143D  3001               	movlw	1
 13799  143E  0020               	movlb	0	; select bank0
 13800  143F  00E2               	movwf	??_schedulerExecute
 13801  1440  0862               	movf	??_schedulerExecute,w
 13802  1441  07EF               	addwf	schedulerExecute@k,f
 13803  1442  2BCA               	goto	L2
 13804  1443                     __end_of_schedulerExecute:	
 13805                           
 13806                           	psect	text12
 13807  279C                     __ptext12:	
 13808 ;; *************** function _scheduler_TaskRun *****************
 13809 ;; Defined at:
 13810 ;;		line 20 in file "cooperative_scheduler.c"
 13811 ;; Parameters:    Size  Location     Type
 13812 ;;  task            2   64[BANK0 ] PTR struct t_schedulerTa
 13813 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 13814 ;;		 -> flashy_task(13), NULL(0), 
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;		None
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  1    wreg      void 
 13819 ;; Registers used:
 13820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13821 ;; Tracked objects:
 13822 ;;		On entry : 0/0
 13823 ;;		On exit  : 0/0
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13829 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13830 ;;Total ram usage:        2 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:   13
 13833 ;; This function calls:
 13834 ;;		Absolute function
 13835 ;;		_TMR0_Read16bitTimer
 13836 ;;		_flashy_Main
 13837 ;;		_locked_Main
 13838 ;;		_menu_Main
 13839 ;;		_secret_Main
 13840 ;;		_slot_Main
 13841 ;; This function is called by:
 13842 ;;		_schedulerExecute
 13843 ;; This function uses a non-reentrant model
 13844 ;;
 13845                           
 13846                           
 13847                           ;psect for function _scheduler_TaskRun
 13848  279C                     _scheduler_TaskRun:	
 13849                           
 13850                           ;cooperative_scheduler.c: 21: task->taskExecuteCallback (task->taskData);
 13851                           
 13852                           ;incstack = 0
 13853                           ; Regs used in _scheduler_TaskRun: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13854  279C  0020               	movlb	0	; select bank0
 13855  279D  0860               	movf	scheduler_TaskRun@task,w
 13856  279E  0086               	movwf	6
 13857  279F  0861               	movf	scheduler_TaskRun@task+1,w
 13858  27A0  0087               	movwf	7
 13859  27A1  3142               	addfsr 1,2
 13860  27A2  3F40               	moviw [0]fsr1
 13861  27A3  00D2               	movwf	secret_Main@taskData
 13862  27A4  3F41               	moviw [1]fsr1
 13863  27A5  00D3               	movwf	secret_Main@taskData+1
 13864  27A6  0860               	movf	scheduler_TaskRun@task,w
 13865  27A7  0086               	movwf	6
 13866  27A8  0861               	movf	scheduler_TaskRun@task+1,w
 13867  27A9  0087               	movwf	7
 13868  27AA  3148               	addfsr 1,8
 13869  27AB  3F41               	moviw [1]fsr1
 13870  27AC  008A               	movwf	10
 13871  27AD  3F40               	moviw [0]fsr1
 13872  27AE  000A               	callw
 13873  27AF  31A7               	pagesel	$
 13874                           
 13875                           ;cooperative_scheduler.c: 22: task->systemTickLastExecuted = TMR0_Read16bitTimer();
 13876  27B0  31A7  2708         	fcall	_TMR0_Read16bitTimer
 13877  27B2  0020               	movlb	0	; select bank0
 13878  27B3  0860               	movf	scheduler_TaskRun@task,w
 13879  27B4  0086               	movwf	6
 13880  27B5  0861               	movf	scheduler_TaskRun@task+1,w
 13881  27B6  0087               	movwf	7
 13882  27B7  0871               	movf	?_TMR0_Read16bitTimer,w
 13883  27B8  3FC0               	movwi [0]fsr1
 13884  27B9  0872               	movf	?_TMR0_Read16bitTimer+1,w
 13885  27BA  3FC1               	movwi [1]fsr1
 13886  27BB  0008               	return
 13887  27BC                     __end_of_scheduler_TaskRun:	
 13888                           
 13889                           	psect	text13
 13890  046B                     __ptext13:	
 13891 ;; *************** function _secret_Main *****************
 13892 ;; Defined at:
 13893 ;;		line 99 in file "secret_task.c"
 13894 ;; Parameters:    Size  Location     Type
 13895 ;;  taskData        2   50[BANK0 ] PTR void 
 13896 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13897 ;;		 -> flashy_TaskData(30), NULL(0), 
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;  data            2   56[BANK0 ] PTR struct t_secret_task
 13900 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13901 ;;		 -> flashy_TaskData(30), NULL(0), 
 13902 ;;  buttonPresse    1   55[BANK0 ] unsigned char 
 13903 ;;  secret_found    1   54[BANK0 ] unsigned char 
 13904 ;; Return value:  Size  Location     Type
 13905 ;;                  1    wreg      void 
 13906 ;; Registers used:
 13907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13908 ;; Tracked objects:
 13909 ;;		On entry : 0/0
 13910 ;;		On exit  : 0/0
 13911 ;;		Unchanged: 0/0
 13912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13914 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13917 ;;Total ram usage:        8 bytes
 13918 ;; Hardware stack levels used:    1
 13919 ;; Hardware stack levels required when called:    6
 13920 ;; This function calls:
 13921 ;;		_nullifyBadge_buttonsGet
 13922 ;;		_secret_check
 13923 ;;		_secret_clear
 13924 ;; This function is called by:
 13925 ;;		_main
 13926 ;;		_scheduler_TaskRun
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           
 13931                           ;psect for function _secret_Main
 13932  046B                     _secret_Main:	
 13933                           
 13934                           ;secret_task.c: 100: struct t_secret_taskData *data = (struct t_secret_taskData *) taskD
      +                          ata;
 13935                           
 13936                           ;incstack = 0
 13937                           ; Regs used in _secret_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13938  046B  0020               	movlb	0	; select bank0
 13939  046C  0853               	movf	secret_Main@taskData+1,w
 13940  046D  00D9               	movwf	secret_Main@data+1
 13941  046E  0852               	movf	secret_Main@taskData,w
 13942  046F  00D8               	movwf	secret_Main@data
 13943                           
 13944                           ;secret_task.c: 101: u8 buttonPressed, secret_found = 0;
 13945  0470  01D6               	clrf	secret_Main@secret_found
 13946                           
 13947                           ;secret_task.c: 103: buttonPressed = nullifyBadge_buttonsGet();
 13948  0471  3198  20F4  3184   	fcall	_nullifyBadge_buttonsGet
 13949  0474  0020               	movlb	0	; select bank0
 13950  0475  00D4               	movwf	??_secret_Main
 13951  0476  0854               	movf	??_secret_Main,w
 13952  0477  00D7               	movwf	secret_Main@buttonPressed
 13953                           
 13954                           ;secret_task.c: 104: switch (buttonPressed) {
 13955  0478  2E0B               	goto	l7987
 13956  0479                     l7901:	
 13957                           ;secret_task.c: 105: case 0:
 13958                           
 13959                           
 13960                           ;secret_task.c: 107: if (data->delayTickCount == 0){
 13961  0479  0858               	movf	secret_Main@data,w
 13962  047A  0086               	movwf	6
 13963  047B  0859               	movf	secret_Main@data+1,w
 13964  047C  0087               	movwf	7
 13965  047D  3142               	addfsr 1,2
 13966  047E  0016               	moviw fsr1++
 13967  047F  0401               	iorwf	1,w
 13968  0480  1D03               	btfss	3,2
 13969  0481  2C93               	goto	l7907
 13970                           
 13971                           ;secret_task.c: 108: data->delayTickCount = 300;
 13972  0482  0858               	movf	secret_Main@data,w
 13973  0483  0086               	movwf	6
 13974  0484  0859               	movf	secret_Main@data+1,w
 13975  0485  0087               	movwf	7
 13976  0486  3142               	addfsr 1,2
 13977  0487  302C               	movlw	44
 13978  0488  3FC0               	movwi [0]fsr1
 13979  0489  3001               	movlw	1
 13980  048A  3FC1               	movwi [1]fsr1
 13981                           
 13982                           ;secret_task.c: 109: secret_check(data, 0);
 13983  048B  0859               	movf	secret_Main@data+1,w
 13984  048C  00F8               	movwf	secret_check@data+1
 13985  048D  0858               	movf	secret_Main@data,w
 13986  048E  00F7               	movwf	secret_check@data
 13987  048F  01F9               	clrf	secret_check@buttonPressed
 13988  0490  3195  255B  3184   	fcall	_secret_check
 13989  0493                     l7907:	
 13990                           
 13991                           ;secret_task.c: 110: }
 13992                           ;secret_task.c: 111: data->holdCountA = 0;
 13993  0493  0020               	movlb	0	; select bank0
 13994  0494  0858               	movf	secret_Main@data,w
 13995  0495  0086               	movwf	6
 13996  0496  0859               	movf	secret_Main@data+1,w
 13997  0497  0087               	movwf	7
 13998  0498  3144               	addfsr 1,4
 13999  0499  3000               	movlw	0
 14000  049A  3FC0               	movwi [0]fsr1
 14001  049B  3FC1               	movwi [1]fsr1
 14002                           
 14003                           ;secret_task.c: 112: data->holdCountB = 0;
 14004  049C  0858               	movf	secret_Main@data,w
 14005  049D  0086               	movwf	6
 14006  049E  0859               	movf	secret_Main@data+1,w
 14007  049F  0087               	movwf	7
 14008  04A0  3146               	addfsr 1,6
 14009  04A1  3000               	movlw	0
 14010  04A2  3FC0               	movwi [0]fsr1
 14011  04A3  3FC1               	movwi [1]fsr1
 14012                           
 14013                           ;secret_task.c: 113: data->holdCountX = 0;
 14014  04A4  0858               	movf	secret_Main@data,w
 14015  04A5  0086               	movwf	6
 14016  04A6  0859               	movf	secret_Main@data+1,w
 14017  04A7  0087               	movwf	7
 14018  04A8  3148               	addfsr 1,8
 14019  04A9  3000               	movlw	0
 14020  04AA  3FC0               	movwi [0]fsr1
 14021  04AB  3FC1               	movwi [1]fsr1
 14022                           
 14023                           ;secret_task.c: 114: data->holdCountY = 0;
 14024  04AC  0858               	movf	secret_Main@data,w
 14025  04AD  0086               	movwf	6
 14026  04AE  0859               	movf	secret_Main@data+1,w
 14027  04AF  0087               	movwf	7
 14028  04B0  314A               	addfsr 1,10
 14029  04B1  3000               	movlw	0
 14030  04B2  3FC0               	movwi [0]fsr1
 14031  04B3  3FC1               	movwi [1]fsr1
 14032                           
 14033                           ;secret_task.c: 115: data->noholdCount += 1;
 14034  04B4  0858               	movf	secret_Main@data,w
 14035  04B5  0086               	movwf	6
 14036  04B6  0859               	movf	secret_Main@data+1,w
 14037  04B7  0087               	movwf	7
 14038  04B8  314C               	addfsr 1,12
 14039  04B9  3001               	movlw	1
 14040  04BA  0781               	addwf	1,f
 14041  04BB  3141               	addfsr 1,1
 14042  04BC  1803               	skipnc
 14043  04BD  0A81               	incf	1,f
 14044                           
 14045                           ;secret_task.c: 116: data->delayTickCount -= 1;
 14046  04BE  0858               	movf	secret_Main@data,w
 14047  04BF  0086               	movwf	6
 14048  04C0  0859               	movf	secret_Main@data+1,w
 14049  04C1  0087               	movwf	7
 14050  04C2  3142               	addfsr 1,2
 14051  04C3  3001               	movlw	1
 14052  04C4  0281               	subwf	1,f
 14053  04C5  3141               	addfsr 1,1
 14054  04C6  3000               	movlw	0
 14055  04C7  3B81               	subwfb	1,f
 14056  04C8  317F               	addfsr 1,-1
 14057                           
 14058                           ;secret_task.c: 117: break;
 14059  04C9  2E1D               	goto	l7989
 14060  04CA                     l7919:	
 14061                           ;secret_task.c: 118: case 1:
 14062                           
 14063                           
 14064                           ;secret_task.c: 120: if (data->holdCountA == 0){
 14065  04CA  0858               	movf	secret_Main@data,w
 14066  04CB  0086               	movwf	6
 14067  04CC  0859               	movf	secret_Main@data+1,w
 14068  04CD  0087               	movwf	7
 14069  04CE  3144               	addfsr 1,4
 14070  04CF  0016               	moviw fsr1++
 14071  04D0  0401               	iorwf	1,w
 14072  04D1  1D03               	btfss	3,2
 14073  04D2  2CE2               	goto	l7923
 14074                           
 14075                           ;secret_task.c: 121: secret_found = secret_check(data, buttonPressed);
 14076  04D3  0859               	movf	secret_Main@data+1,w
 14077  04D4  00F8               	movwf	secret_check@data+1
 14078  04D5  0858               	movf	secret_Main@data,w
 14079  04D6  00F7               	movwf	secret_check@data
 14080  04D7  0857               	movf	secret_Main@buttonPressed,w
 14081  04D8  00D4               	movwf	??_secret_Main
 14082  04D9  0854               	movf	??_secret_Main,w
 14083  04DA  00F9               	movwf	secret_check@buttonPressed
 14084  04DB  3195  255B  3184   	fcall	_secret_check
 14085  04DE  0020               	movlb	0	; select bank0
 14086  04DF  00D5               	movwf	??_secret_Main+1
 14087  04E0  0855               	movf	??_secret_Main+1,w
 14088  04E1  00D6               	movwf	secret_Main@secret_found
 14089  04E2                     l7923:	
 14090                           
 14091                           ;secret_task.c: 122: }
 14092                           ;secret_task.c: 123: data->holdCountA += 1;
 14093  04E2  0858               	movf	secret_Main@data,w
 14094  04E3  0086               	movwf	6
 14095  04E4  0859               	movf	secret_Main@data+1,w
 14096  04E5  0087               	movwf	7
 14097  04E6  3144               	addfsr 1,4
 14098  04E7  3001               	movlw	1
 14099  04E8  0781               	addwf	1,f
 14100  04E9  3141               	addfsr 1,1
 14101  04EA  1803               	skipnc
 14102  04EB  0A81               	incf	1,f
 14103                           
 14104                           ;secret_task.c: 124: data->holdCountB = 0;
 14105  04EC  0858               	movf	secret_Main@data,w
 14106  04ED  0086               	movwf	6
 14107  04EE  0859               	movf	secret_Main@data+1,w
 14108  04EF  0087               	movwf	7
 14109  04F0  3146               	addfsr 1,6
 14110  04F1  3000               	movlw	0
 14111  04F2  3FC0               	movwi [0]fsr1
 14112  04F3  3FC1               	movwi [1]fsr1
 14113                           
 14114                           ;secret_task.c: 125: data->holdCountX = 0;
 14115  04F4  0858               	movf	secret_Main@data,w
 14116  04F5  0086               	movwf	6
 14117  04F6  0859               	movf	secret_Main@data+1,w
 14118  04F7  0087               	movwf	7
 14119  04F8  3148               	addfsr 1,8
 14120  04F9  3000               	movlw	0
 14121  04FA  3FC0               	movwi [0]fsr1
 14122  04FB  3FC1               	movwi [1]fsr1
 14123                           
 14124                           ;secret_task.c: 126: data->holdCountY = 0;
 14125  04FC  0858               	movf	secret_Main@data,w
 14126  04FD  0086               	movwf	6
 14127  04FE  0859               	movf	secret_Main@data+1,w
 14128  04FF  0087               	movwf	7
 14129  0500  314A               	addfsr 1,10
 14130  0501  3000               	movlw	0
 14131  0502  3FC0               	movwi [0]fsr1
 14132  0503  3FC1               	movwi [1]fsr1
 14133                           
 14134                           ;secret_task.c: 127: data->noholdCount = 0;
 14135  0504  0858               	movf	secret_Main@data,w
 14136  0505  0086               	movwf	6
 14137  0506  0859               	movf	secret_Main@data+1,w
 14138  0507  0087               	movwf	7
 14139  0508  314C               	addfsr 1,12
 14140  0509  3000               	movlw	0
 14141  050A  3FC0               	movwi [0]fsr1
 14142  050B  3FC1               	movwi [1]fsr1
 14143                           
 14144                           ;secret_task.c: 128: data->delayTickCount = 300;
 14145  050C  0858               	movf	secret_Main@data,w
 14146  050D  0086               	movwf	6
 14147  050E  0859               	movf	secret_Main@data+1,w
 14148  050F  0087               	movwf	7
 14149  0510  3142               	addfsr 1,2
 14150  0511  302C               	movlw	44
 14151  0512  3FC0               	movwi [0]fsr1
 14152  0513  3001               	movlw	1
 14153  0514  3FC1               	movwi [1]fsr1
 14154                           
 14155                           ;secret_task.c: 129: break;
 14156  0515  2E1D               	goto	l7989
 14157  0516                     l7935:	
 14158                           ;secret_task.c: 130: case 2:
 14159                           
 14160                           
 14161                           ;secret_task.c: 132: if (data->holdCountB == 0){
 14162  0516  0858               	movf	secret_Main@data,w
 14163  0517  0086               	movwf	6
 14164  0518  0859               	movf	secret_Main@data+1,w
 14165  0519  0087               	movwf	7
 14166  051A  3146               	addfsr 1,6
 14167  051B  0016               	moviw fsr1++
 14168  051C  0401               	iorwf	1,w
 14169  051D  1D03               	btfss	3,2
 14170  051E  2D2E               	goto	l7939
 14171                           
 14172                           ;secret_task.c: 133: secret_found = secret_check(data, buttonPressed);
 14173  051F  0859               	movf	secret_Main@data+1,w
 14174  0520  00F8               	movwf	secret_check@data+1
 14175  0521  0858               	movf	secret_Main@data,w
 14176  0522  00F7               	movwf	secret_check@data
 14177  0523  0857               	movf	secret_Main@buttonPressed,w
 14178  0524  00D4               	movwf	??_secret_Main
 14179  0525  0854               	movf	??_secret_Main,w
 14180  0526  00F9               	movwf	secret_check@buttonPressed
 14181  0527  3195  255B  3184   	fcall	_secret_check
 14182  052A  0020               	movlb	0	; select bank0
 14183  052B  00D5               	movwf	??_secret_Main+1
 14184  052C  0855               	movf	??_secret_Main+1,w
 14185  052D  00D6               	movwf	secret_Main@secret_found
 14186  052E                     l7939:	
 14187                           
 14188                           ;secret_task.c: 134: }
 14189                           ;secret_task.c: 135: data->holdCountA = 0;
 14190  052E  0858               	movf	secret_Main@data,w
 14191  052F  0086               	movwf	6
 14192  0530  0859               	movf	secret_Main@data+1,w
 14193  0531  0087               	movwf	7
 14194  0532  3144               	addfsr 1,4
 14195  0533  3000               	movlw	0
 14196  0534  3FC0               	movwi [0]fsr1
 14197  0535  3FC1               	movwi [1]fsr1
 14198                           
 14199                           ;secret_task.c: 136: data->holdCountB += 1;
 14200  0536  0858               	movf	secret_Main@data,w
 14201  0537  0086               	movwf	6
 14202  0538  0859               	movf	secret_Main@data+1,w
 14203  0539  0087               	movwf	7
 14204  053A  3146               	addfsr 1,6
 14205  053B  3001               	movlw	1
 14206  053C  0781               	addwf	1,f
 14207  053D  3141               	addfsr 1,1
 14208  053E  1803               	skipnc
 14209  053F  0A81               	incf	1,f
 14210                           
 14211                           ;secret_task.c: 137: data->holdCountX = 0;
 14212  0540  0858               	movf	secret_Main@data,w
 14213  0541  0086               	movwf	6
 14214  0542  0859               	movf	secret_Main@data+1,w
 14215  0543  0087               	movwf	7
 14216  0544  3148               	addfsr 1,8
 14217  0545  3000               	movlw	0
 14218  0546  3FC0               	movwi [0]fsr1
 14219  0547  3FC1               	movwi [1]fsr1
 14220                           
 14221                           ;secret_task.c: 138: data->holdCountY = 0;
 14222  0548  0858               	movf	secret_Main@data,w
 14223  0549  0086               	movwf	6
 14224  054A  0859               	movf	secret_Main@data+1,w
 14225  054B  0087               	movwf	7
 14226  054C  314A               	addfsr 1,10
 14227  054D  3000               	movlw	0
 14228  054E  3FC0               	movwi [0]fsr1
 14229  054F  3FC1               	movwi [1]fsr1
 14230                           
 14231                           ;secret_task.c: 139: data->noholdCount = 0;
 14232  0550  0858               	movf	secret_Main@data,w
 14233  0551  0086               	movwf	6
 14234  0552  0859               	movf	secret_Main@data+1,w
 14235  0553  0087               	movwf	7
 14236  0554  314C               	addfsr 1,12
 14237  0555  3000               	movlw	0
 14238  0556  3FC0               	movwi [0]fsr1
 14239  0557  3FC1               	movwi [1]fsr1
 14240                           
 14241                           ;secret_task.c: 140: data->delayTickCount = 300;
 14242  0558  0858               	movf	secret_Main@data,w
 14243  0559  0086               	movwf	6
 14244  055A  0859               	movf	secret_Main@data+1,w
 14245  055B  0087               	movwf	7
 14246  055C  3142               	addfsr 1,2
 14247  055D  302C               	movlw	44
 14248  055E  3FC0               	movwi [0]fsr1
 14249  055F  3001               	movlw	1
 14250  0560  3FC1               	movwi [1]fsr1
 14251                           
 14252                           ;secret_task.c: 141: break;
 14253  0561  2E1D               	goto	l7989
 14254  0562                     l7951:	
 14255                           ;secret_task.c: 142: case 4:
 14256                           
 14257                           
 14258                           ;secret_task.c: 144: if (data->holdCountX == 0){
 14259  0562  0858               	movf	secret_Main@data,w
 14260  0563  0086               	movwf	6
 14261  0564  0859               	movf	secret_Main@data+1,w
 14262  0565  0087               	movwf	7
 14263  0566  3148               	addfsr 1,8
 14264  0567  0016               	moviw fsr1++
 14265  0568  0401               	iorwf	1,w
 14266  0569  1D03               	btfss	3,2
 14267  056A  2D7A               	goto	l7955
 14268                           
 14269                           ;secret_task.c: 145: secret_found = secret_check(data, buttonPressed);
 14270  056B  0859               	movf	secret_Main@data+1,w
 14271  056C  00F8               	movwf	secret_check@data+1
 14272  056D  0858               	movf	secret_Main@data,w
 14273  056E  00F7               	movwf	secret_check@data
 14274  056F  0857               	movf	secret_Main@buttonPressed,w
 14275  0570  00D4               	movwf	??_secret_Main
 14276  0571  0854               	movf	??_secret_Main,w
 14277  0572  00F9               	movwf	secret_check@buttonPressed
 14278  0573  3195  255B  3184   	fcall	_secret_check
 14279  0576  0020               	movlb	0	; select bank0
 14280  0577  00D5               	movwf	??_secret_Main+1
 14281  0578  0855               	movf	??_secret_Main+1,w
 14282  0579  00D6               	movwf	secret_Main@secret_found
 14283  057A                     l7955:	
 14284                           
 14285                           ;secret_task.c: 146: }
 14286                           ;secret_task.c: 147: data->holdCountA = 0;
 14287  057A  0858               	movf	secret_Main@data,w
 14288  057B  0086               	movwf	6
 14289  057C  0859               	movf	secret_Main@data+1,w
 14290  057D  0087               	movwf	7
 14291  057E  3144               	addfsr 1,4
 14292  057F  3000               	movlw	0
 14293  0580  3FC0               	movwi [0]fsr1
 14294  0581  3FC1               	movwi [1]fsr1
 14295                           
 14296                           ;secret_task.c: 148: data->holdCountB = 0;
 14297  0582  0858               	movf	secret_Main@data,w
 14298  0583  0086               	movwf	6
 14299  0584  0859               	movf	secret_Main@data+1,w
 14300  0585  0087               	movwf	7
 14301  0586  3146               	addfsr 1,6
 14302  0587  3000               	movlw	0
 14303  0588  3FC0               	movwi [0]fsr1
 14304  0589  3FC1               	movwi [1]fsr1
 14305                           
 14306                           ;secret_task.c: 149: data->holdCountX += 1;
 14307  058A  0858               	movf	secret_Main@data,w
 14308  058B  0086               	movwf	6
 14309  058C  0859               	movf	secret_Main@data+1,w
 14310  058D  0087               	movwf	7
 14311  058E  3148               	addfsr 1,8
 14312  058F  3001               	movlw	1
 14313  0590  0781               	addwf	1,f
 14314  0591  3141               	addfsr 1,1
 14315  0592  1803               	skipnc
 14316  0593  0A81               	incf	1,f
 14317                           
 14318                           ;secret_task.c: 150: data->holdCountY = 0;
 14319  0594  0858               	movf	secret_Main@data,w
 14320  0595  0086               	movwf	6
 14321  0596  0859               	movf	secret_Main@data+1,w
 14322  0597  0087               	movwf	7
 14323  0598  314A               	addfsr 1,10
 14324  0599  3000               	movlw	0
 14325  059A  3FC0               	movwi [0]fsr1
 14326  059B  3FC1               	movwi [1]fsr1
 14327                           
 14328                           ;secret_task.c: 151: data->noholdCount = 0;
 14329  059C  0858               	movf	secret_Main@data,w
 14330  059D  0086               	movwf	6
 14331  059E  0859               	movf	secret_Main@data+1,w
 14332  059F  0087               	movwf	7
 14333  05A0  314C               	addfsr 1,12
 14334  05A1  3000               	movlw	0
 14335  05A2  3FC0               	movwi [0]fsr1
 14336  05A3  3FC1               	movwi [1]fsr1
 14337                           
 14338                           ;secret_task.c: 152: data->delayTickCount = 300;
 14339  05A4  0858               	movf	secret_Main@data,w
 14340  05A5  0086               	movwf	6
 14341  05A6  0859               	movf	secret_Main@data+1,w
 14342  05A7  0087               	movwf	7
 14343  05A8  3142               	addfsr 1,2
 14344  05A9  302C               	movlw	44
 14345  05AA  3FC0               	movwi [0]fsr1
 14346  05AB  3001               	movlw	1
 14347  05AC  3FC1               	movwi [1]fsr1
 14348                           
 14349                           ;secret_task.c: 153: break;
 14350  05AD  2E1D               	goto	l7989
 14351  05AE                     l7967:	
 14352                           ;secret_task.c: 154: case 8:
 14353                           
 14354                           
 14355                           ;secret_task.c: 156: if (data->holdCountY == 0){
 14356  05AE  0858               	movf	secret_Main@data,w
 14357  05AF  0086               	movwf	6
 14358  05B0  0859               	movf	secret_Main@data+1,w
 14359  05B1  0087               	movwf	7
 14360  05B2  314A               	addfsr 1,10
 14361  05B3  0016               	moviw fsr1++
 14362  05B4  0401               	iorwf	1,w
 14363  05B5  1D03               	btfss	3,2
 14364  05B6  2DC6               	goto	l7971
 14365                           
 14366                           ;secret_task.c: 157: secret_found = secret_check(data, buttonPressed);
 14367  05B7  0859               	movf	secret_Main@data+1,w
 14368  05B8  00F8               	movwf	secret_check@data+1
 14369  05B9  0858               	movf	secret_Main@data,w
 14370  05BA  00F7               	movwf	secret_check@data
 14371  05BB  0857               	movf	secret_Main@buttonPressed,w
 14372  05BC  00D4               	movwf	??_secret_Main
 14373  05BD  0854               	movf	??_secret_Main,w
 14374  05BE  00F9               	movwf	secret_check@buttonPressed
 14375  05BF  3195  255B  3184   	fcall	_secret_check
 14376  05C2  0020               	movlb	0	; select bank0
 14377  05C3  00D5               	movwf	??_secret_Main+1
 14378  05C4  0855               	movf	??_secret_Main+1,w
 14379  05C5  00D6               	movwf	secret_Main@secret_found
 14380  05C6                     l7971:	
 14381                           
 14382                           ;secret_task.c: 158: }
 14383                           ;secret_task.c: 159: data->holdCountA = 0;
 14384  05C6  0858               	movf	secret_Main@data,w
 14385  05C7  0086               	movwf	6
 14386  05C8  0859               	movf	secret_Main@data+1,w
 14387  05C9  0087               	movwf	7
 14388  05CA  3144               	addfsr 1,4
 14389  05CB  3000               	movlw	0
 14390  05CC  3FC0               	movwi [0]fsr1
 14391  05CD  3FC1               	movwi [1]fsr1
 14392                           
 14393                           ;secret_task.c: 160: data->holdCountB = 0;
 14394  05CE  0858               	movf	secret_Main@data,w
 14395  05CF  0086               	movwf	6
 14396  05D0  0859               	movf	secret_Main@data+1,w
 14397  05D1  0087               	movwf	7
 14398  05D2  3146               	addfsr 1,6
 14399  05D3  3000               	movlw	0
 14400  05D4  3FC0               	movwi [0]fsr1
 14401  05D5  3FC1               	movwi [1]fsr1
 14402                           
 14403                           ;secret_task.c: 161: data->holdCountX = 0;
 14404  05D6  0858               	movf	secret_Main@data,w
 14405  05D7  0086               	movwf	6
 14406  05D8  0859               	movf	secret_Main@data+1,w
 14407  05D9  0087               	movwf	7
 14408  05DA  3148               	addfsr 1,8
 14409  05DB  3000               	movlw	0
 14410  05DC  3FC0               	movwi [0]fsr1
 14411  05DD  3FC1               	movwi [1]fsr1
 14412                           
 14413                           ;secret_task.c: 162: data->holdCountY += 1;
 14414  05DE  0858               	movf	secret_Main@data,w
 14415  05DF  0086               	movwf	6
 14416  05E0  0859               	movf	secret_Main@data+1,w
 14417  05E1  0087               	movwf	7
 14418  05E2  314A               	addfsr 1,10
 14419  05E3  3001               	movlw	1
 14420  05E4  0781               	addwf	1,f
 14421  05E5  3141               	addfsr 1,1
 14422  05E6  1803               	skipnc
 14423  05E7  0A81               	incf	1,f
 14424                           
 14425                           ;secret_task.c: 163: data->noholdCount = 0;
 14426  05E8  0858               	movf	secret_Main@data,w
 14427  05E9  0086               	movwf	6
 14428  05EA  0859               	movf	secret_Main@data+1,w
 14429  05EB  0087               	movwf	7
 14430  05EC  314C               	addfsr 1,12
 14431  05ED  3000               	movlw	0
 14432  05EE  3FC0               	movwi [0]fsr1
 14433  05EF  3FC1               	movwi [1]fsr1
 14434                           
 14435                           ;secret_task.c: 164: data->delayTickCount = 300;
 14436  05F0  0858               	movf	secret_Main@data,w
 14437  05F1  0086               	movwf	6
 14438  05F2  0859               	movf	secret_Main@data+1,w
 14439  05F3  0087               	movwf	7
 14440  05F4  3142               	addfsr 1,2
 14441  05F5  302C               	movlw	44
 14442  05F6  3FC0               	movwi [0]fsr1
 14443  05F7  3001               	movlw	1
 14444  05F8  3FC1               	movwi [1]fsr1
 14445                           
 14446                           ;secret_task.c: 165: break;
 14447  05F9  2E1D               	goto	l7989
 14448  05FA                     l7983:	
 14449                           ;secret_task.c: 166: default:
 14450                           
 14451                           
 14452                           ;secret_task.c: 168: secret_check(data, 0);
 14453  05FA  0859               	movf	secret_Main@data+1,w
 14454  05FB  00F8               	movwf	secret_check@data+1
 14455  05FC  0858               	movf	secret_Main@data,w
 14456  05FD  00F7               	movwf	secret_check@data
 14457  05FE  01F9               	clrf	secret_check@buttonPressed
 14458  05FF  3195  255B  3184   	fcall	_secret_check
 14459                           
 14460                           ;secret_task.c: 169: secret_clear(data);
 14461  0602  0020               	movlb	0	; select bank0
 14462  0603  0859               	movf	secret_Main@data+1,w
 14463  0604  00F2               	movwf	secret_clear@data+1
 14464  0605  0858               	movf	secret_Main@data,w
 14465  0606  00F1               	movwf	secret_clear@data
 14466  0607  3199  2157  3184   	fcall	_secret_clear
 14467                           
 14468                           ;secret_task.c: 170: }
 14469  060A  2E1D               	goto	l7989
 14470  060B                     l7987:	
 14471  060B  0020               	movlb	0	; select bank0
 14472  060C  0857               	movf	secret_Main@buttonPressed,w
 14473                           
 14474                           ; Switch size 1, requested type "space"
 14475                           ; Number of cases is 5, Range of values is 0 to 8
 14476                           ; switch strategies available:
 14477                           ; Name         Instructions Cycles
 14478                           ; simple_byte           16     9 (average)
 14479                           ; direct_byte           24     6 (fixed)
 14480                           ; jumptable            260     6 (fixed)
 14481                           ;	Chosen strategy is simple_byte
 14482  060D  3A00               	xorlw	0	; case 0
 14483  060E  1903               	skipnz
 14484  060F  2C79               	goto	l7901
 14485  0610  3A01               	xorlw	1	; case 1
 14486  0611  1903               	skipnz
 14487  0612  2CCA               	goto	l7919
 14488  0613  3A03               	xorlw	3	; case 2
 14489  0614  1903               	skipnz
 14490  0615  2D16               	goto	l7935
 14491  0616  3A06               	xorlw	6	; case 4
 14492  0617  1903               	skipnz
 14493  0618  2D62               	goto	l7951
 14494  0619  3A0C               	xorlw	12	; case 8
 14495  061A  1903               	skipnz
 14496  061B  2DAE               	goto	l7967
 14497  061C  2DFA               	goto	l7983
 14498  061D                     l7989:	
 14499                           
 14500                           ;secret_task.c: 173: if (secret_found){
 14501  061D  0020               	movlb	0	; select bank0
 14502  061E  0856               	movf	secret_Main@secret_found,w
 14503  061F  1903               	btfsc	3,2
 14504  0620  0008               	return
 14505                           
 14506                           ;secret_task.c: 174: secret_clear(data);
 14507  0621  0859               	movf	secret_Main@data+1,w
 14508  0622  00F2               	movwf	secret_clear@data+1
 14509  0623  0858               	movf	secret_Main@data,w
 14510  0624  00F1               	movwf	secret_clear@data
 14511  0625  3199  2157         	fcall	_secret_clear
 14512  0627  0008               	return
 14513  0628                     __end_of_secret_Main:	
 14514                           
 14515                           	psect	text14
 14516  02A1                     __ptext14:	
 14517 ;; *************** function _locked_Main *****************
 14518 ;; Defined at:
 14519 ;;		line 84 in file "locked_task.c"
 14520 ;; Parameters:    Size  Location     Type
 14521 ;;  taskData        2   50[BANK0 ] PTR void 
 14522 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14523 ;;		 -> flashy_TaskData(30), NULL(0), 
 14524 ;; Auto vars:     Size  Location     Type
 14525 ;;  data            2   55[BANK0 ] PTR struct t_locked_task
 14526 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14527 ;;		 -> flashy_TaskData(30), NULL(0), 
 14528 ;;  buttonPresse    1   54[BANK0 ] unsigned char 
 14529 ;; Return value:  Size  Location     Type
 14530 ;;                  1    wreg      void 
 14531 ;; Registers used:
 14532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14533 ;; Tracked objects:
 14534 ;;		On entry : 0/0
 14535 ;;		On exit  : 0/0
 14536 ;;		Unchanged: 0/0
 14537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14539 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14541 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14542 ;;Total ram usage:        7 bytes
 14543 ;; Hardware stack levels used:    1
 14544 ;; Hardware stack levels required when called:   11
 14545 ;; This function calls:
 14546 ;;		___lwmod
 14547 ;;		_locked_clear
 14548 ;;		_locked_get_lock_leds
 14549 ;;		_locked_get_unlock_leds
 14550 ;;		_locked_lock_leds
 14551 ;;		_locked_unlock_leds
 14552 ;;		_marquee
 14553 ;;		_nullifyBadge_buttonsGet
 14554 ;;		_nullifyBadge_userLedsSet
 14555 ;; This function is called by:
 14556 ;;		_main
 14557 ;;		_scheduler_TaskRun
 14558 ;; This function uses a non-reentrant model
 14559 ;;
 14560                           
 14561                           
 14562                           ;psect for function _locked_Main
 14563  02A1                     _locked_Main:	
 14564                           
 14565                           ;locked_task.c: 85: struct t_locked_taskData *data = (struct t_locked_taskData *) taskDa
      +                          ta;
 14566                           
 14567                           ;incstack = 0
 14568                           ; Regs used in _locked_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14569  02A1  0020               	movlb	0	; select bank0
 14570  02A2  0853               	movf	locked_Main@taskData+1,w
 14571  02A3  00D8               	movwf	locked_Main@data+1
 14572  02A4  0852               	movf	locked_Main@taskData,w
 14573  02A5  00D7               	movwf	locked_Main@data
 14574                           
 14575                           ;locked_task.c: 86: u8 buttonPressed;
 14576                           ;locked_task.c: 88: if ( currentTask != LOCKED_TASK ){
 14577  02A6  3003               	movlw	3
 14578  02A7  0021               	movlb	1	; select bank1
 14579  02A8  0638               	xorwf	_currentTask^(0+128),w
 14580  02A9  0439               	iorwf	(_currentTask+1)^(0+128),w
 14581  02AA  1903               	btfsc	3,2
 14582  02AB  2BA9               	goto	l7861
 14583                           
 14584                           ;locked_task.c: 89: data->holdCountA = 1;
 14585  02AC  0020               	movlb	0	; select bank0
 14586  02AD  0857               	movf	locked_Main@data,w
 14587  02AE  0086               	movwf	6
 14588  02AF  0858               	movf	locked_Main@data+1,w
 14589  02B0  0087               	movwf	7
 14590  02B1  3143               	addfsr 1,3
 14591  02B2  3001               	movlw	1
 14592  02B3  3FC0               	movwi [0]fsr1
 14593  02B4  3000               	movlw	0
 14594  02B5  3FC1               	movwi [1]fsr1
 14595                           
 14596                           ;locked_task.c: 90: data->holdCountB = 1;
 14597  02B6  0857               	movf	locked_Main@data,w
 14598  02B7  0086               	movwf	6
 14599  02B8  0858               	movf	locked_Main@data+1,w
 14600  02B9  0087               	movwf	7
 14601  02BA  3145               	addfsr 1,5
 14602  02BB  3001               	movlw	1
 14603  02BC  3FC0               	movwi [0]fsr1
 14604  02BD  3000               	movlw	0
 14605  02BE  3FC1               	movwi [1]fsr1
 14606                           
 14607                           ;locked_task.c: 91: data->holdCountX = 1;
 14608  02BF  0857               	movf	locked_Main@data,w
 14609  02C0  0086               	movwf	6
 14610  02C1  0858               	movf	locked_Main@data+1,w
 14611  02C2  0087               	movwf	7
 14612  02C3  3147               	addfsr 1,7
 14613  02C4  3001               	movlw	1
 14614  02C5  3FC0               	movwi [0]fsr1
 14615  02C6  3000               	movlw	0
 14616  02C7  3FC1               	movwi [1]fsr1
 14617                           
 14618                           ;locked_task.c: 92: data->holdCountY = 1;
 14619  02C8  0857               	movf	locked_Main@data,w
 14620  02C9  0086               	movwf	6
 14621  02CA  0858               	movf	locked_Main@data+1,w
 14622  02CB  0087               	movwf	7
 14623  02CC  3149               	addfsr 1,9
 14624  02CD  3001               	movlw	1
 14625  02CE  3FC0               	movwi [0]fsr1
 14626  02CF  3000               	movlw	0
 14627  02D0  3FC1               	movwi [1]fsr1
 14628                           
 14629                           ;locked_task.c: 93: return;
 14630  02D1  0008               	return
 14631  02D2                     l7819:	
 14632                           ;locked_task.c: 100: case LOCKED_UNLOCKING_STATE:
 14633                           
 14634                           ;locked_task.c: 94: }
 14635                           ;locked_task.c: 99: switch (data->state){
 14636                           
 14637                           
 14638                           ;locked_task.c: 101: badge_locked = 0;
 14639  02D2  01FC               	clrf	_badge_locked
 14640                           
 14641                           ;locked_task.c: 102: marquee("UNLOCKING...", data->delayTickCount);
 14642  02D3  30BC               	movlw	low (STR_26| (0+32768))
 14643  02D4  00BA               	movwf	marquee@string
 14644  02D5  30A8               	movlw	high (STR_26| (0+32768))
 14645  02D6  00BB               	movwf	marquee@string+1
 14646  02D7  0857               	movf	locked_Main@data,w
 14647  02D8  0086               	movwf	6
 14648  02D9  0858               	movf	locked_Main@data+1,w
 14649  02DA  0087               	movwf	7
 14650  02DB  3141               	addfsr 1,1
 14651  02DC  3F40               	moviw [0]fsr1
 14652  02DD  00BC               	movwf	marquee@count
 14653  02DE  3F41               	moviw [1]fsr1
 14654  02DF  00BD               	movwf	marquee@count+1
 14655  02E0  3193  2350  3182   	fcall	_marquee
 14656                           
 14657                           ;locked_task.c: 104: if (data->delayTickCount % 75 == 0){
 14658  02E3  304B               	movlw	75
 14659  02E4  0020               	movlb	0	; select bank0
 14660  02E5  00A0               	movwf	___lwmod@divisor
 14661  02E6  3000               	movlw	0
 14662  02E7  00A1               	movwf	___lwmod@divisor+1
 14663  02E8  0857               	movf	locked_Main@data,w
 14664  02E9  0086               	movwf	6
 14665  02EA  0858               	movf	locked_Main@data+1,w
 14666  02EB  0087               	movwf	7
 14667  02EC  3141               	addfsr 1,1
 14668  02ED  3F40               	moviw [0]fsr1
 14669  02EE  00A2               	movwf	___lwmod@dividend
 14670  02EF  3F41               	moviw [1]fsr1
 14671  02F0  00A3               	movwf	___lwmod@dividend+1
 14672  02F1  3198  2069  3182   	fcall	___lwmod
 14673  02F4  0020               	movlb	0	; select bank0
 14674  02F5  0820               	movf	?___lwmod,w
 14675  02F6  0421               	iorwf	?___lwmod+1,w
 14676  02F7  1D03               	btfss	3,2
 14677  02F8  2B03               	goto	l7827
 14678                           
 14679                           ;locked_task.c: 105: locked_leds = locked_lock_base_leds | locked_get_unlock_leds();
 14680  02F9  3198  2001  3182   	fcall	_locked_get_unlock_leds
 14681  02FC  0021               	movlb	1	; select bank1
 14682  02FD  0867               	movf	_locked_lock_base_leds^(0+128),w
 14683  02FE  0471               	iorwf	?_locked_get_unlock_leds,w
 14684  02FF  00A0               	movwf	_locked_leds^(0+128)
 14685  0300  0868               	movf	(_locked_lock_base_leds+1)^(0+128),w
 14686  0301  0472               	iorwf	?_locked_get_unlock_leds+1,w
 14687  0302  00A1               	movwf	(_locked_leds+1)^(0+128)
 14688  0303                     l7827:	
 14689                           
 14690                           ;locked_task.c: 106: }
 14691                           ;locked_task.c: 109: if (data->delayTickCount == 375){
 14692  0303  0020               	movlb	0	; select bank0
 14693  0304  0857               	movf	locked_Main@data,w
 14694  0305  0086               	movwf	6
 14695  0306  0858               	movf	locked_Main@data+1,w
 14696  0307  0087               	movwf	7
 14697  0308  3141               	addfsr 1,1
 14698  0309  0016               	moviw fsr1++
 14699  030A  3A77               	xorlw	119
 14700  030B  00D4               	movwf	??_locked_Main
 14701  030C  0016               	moviw fsr1++
 14702  030D  3A01               	xorlw	1
 14703  030E  04D4               	iorwf	??_locked_Main,f
 14704  030F  1D03               	btfss	3,2
 14705  0310  2B73               	goto	l7847
 14706                           
 14707                           ;locked_task.c: 110: data->state = LOCKED_UNLOCKED_STATE;
 14708  0311  0857               	movf	locked_Main@data,w
 14709  0312  3E0D               	addlw	13
 14710  0313  00D4               	movwf	??_locked_Main
 14711  0314  3000               	movlw	0
 14712  0315  3D58               	addwfc	locked_Main@data+1,w
 14713  0316  00D5               	movwf	??_locked_Main+1
 14714  0317  0854               	movf	??_locked_Main,w
 14715  0318  0086               	movwf	6
 14716  0319  0855               	movf	??_locked_Main+1,w
 14717  031A  0087               	movwf	7
 14718  031B  3002               	movlw	2
 14719  031C  0081               	movwf	1
 14720                           
 14721                           ;locked_task.c: 111: data->delayTickCount = 0;
 14722  031D  0857               	movf	locked_Main@data,w
 14723  031E  0086               	movwf	6
 14724  031F  0858               	movf	locked_Main@data+1,w
 14725  0320  0087               	movwf	7
 14726  0321  3141               	addfsr 1,1
 14727  0322  3000               	movlw	0
 14728  0323  3FC0               	movwi [0]fsr1
 14729  0324  3FC1               	movwi [1]fsr1
 14730  0325  2BBD               	goto	l7863
 14731  0326                     l7835:	
 14732                           ;locked_task.c: 117: case LOCKED_LOCKING_STATE:
 14733                           
 14734                           ;locked_task.c: 115: }
 14735                           ;locked_task.c: 116: break;
 14736                           
 14737                           ;locked_task.c: 113: else {
 14738                           ;locked_task.c: 114: data->delayTickCount += 1;
 14739                           
 14740                           ;locked_task.c: 112: }
 14741                           
 14742                           
 14743                           ;locked_task.c: 118: marquee("LOCKING...", data->delayTickCount);
 14744  0326  30BE               	movlw	low ((STR_26+2)| (0+32768))
 14745  0327  00BA               	movwf	marquee@string
 14746  0328  30A8               	movlw	high ((STR_26+2)| (0+32768))
 14747  0329  00BB               	movwf	marquee@string+1
 14748  032A  0857               	movf	locked_Main@data,w
 14749  032B  0086               	movwf	6
 14750  032C  0858               	movf	locked_Main@data+1,w
 14751  032D  0087               	movwf	7
 14752  032E  3141               	addfsr 1,1
 14753  032F  3F40               	moviw [0]fsr1
 14754  0330  00BC               	movwf	marquee@count
 14755  0331  3F41               	moviw [1]fsr1
 14756  0332  00BD               	movwf	marquee@count+1
 14757  0333  3193  2350  3182   	fcall	_marquee
 14758                           
 14759                           ;locked_task.c: 120: if (data->delayTickCount % 75 == 0){
 14760  0336  304B               	movlw	75
 14761  0337  0020               	movlb	0	; select bank0
 14762  0338  00A0               	movwf	___lwmod@divisor
 14763  0339  3000               	movlw	0
 14764  033A  00A1               	movwf	___lwmod@divisor+1
 14765  033B  0857               	movf	locked_Main@data,w
 14766  033C  0086               	movwf	6
 14767  033D  0858               	movf	locked_Main@data+1,w
 14768  033E  0087               	movwf	7
 14769  033F  3141               	addfsr 1,1
 14770  0340  3F40               	moviw [0]fsr1
 14771  0341  00A2               	movwf	___lwmod@dividend
 14772  0342  3F41               	moviw [1]fsr1
 14773  0343  00A3               	movwf	___lwmod@dividend+1
 14774  0344  3198  2069  3182   	fcall	___lwmod
 14775  0347  0020               	movlb	0	; select bank0
 14776  0348  0820               	movf	?___lwmod,w
 14777  0349  0421               	iorwf	?___lwmod+1,w
 14778  034A  1D03               	btfss	3,2
 14779  034B  2B56               	goto	l7841
 14780                           
 14781                           ;locked_task.c: 121: locked_leds = locked_lock_base_leds | locked_get_lock_leds();
 14782  034C  3198  201A  3182   	fcall	_locked_get_lock_leds
 14783  034F  0021               	movlb	1	; select bank1
 14784  0350  0867               	movf	_locked_lock_base_leds^(0+128),w
 14785  0351  0471               	iorwf	?_locked_get_lock_leds,w
 14786  0352  00A0               	movwf	_locked_leds^(0+128)
 14787  0353  0868               	movf	(_locked_lock_base_leds+1)^(0+128),w
 14788  0354  0472               	iorwf	?_locked_get_lock_leds+1,w
 14789  0355  00A1               	movwf	(_locked_leds+1)^(0+128)
 14790  0356                     l7841:	
 14791                           
 14792                           ;locked_task.c: 122: }
 14793                           ;locked_task.c: 125: if (data->delayTickCount == 375){
 14794  0356  0020               	movlb	0	; select bank0
 14795  0357  0857               	movf	locked_Main@data,w
 14796  0358  0086               	movwf	6
 14797  0359  0858               	movf	locked_Main@data+1,w
 14798  035A  0087               	movwf	7
 14799  035B  3141               	addfsr 1,1
 14800  035C  0016               	moviw fsr1++
 14801  035D  3A77               	xorlw	119
 14802  035E  00D4               	movwf	??_locked_Main
 14803  035F  0016               	moviw fsr1++
 14804  0360  3A01               	xorlw	1
 14805  0361  04D4               	iorwf	??_locked_Main,f
 14806  0362  1D03               	btfss	3,2
 14807  0363  2B73               	goto	l7847
 14808                           
 14809                           ;locked_task.c: 126: data->state = LOCKED_LOCKED_STATE;
 14810  0364  0857               	movf	locked_Main@data,w
 14811  0365  0086               	movwf	6
 14812  0366  0858               	movf	locked_Main@data+1,w
 14813  0367  0087               	movwf	7
 14814  0368  314D               	addfsr 1,13
 14815  0369  0181               	clrf	1
 14816                           
 14817                           ;locked_task.c: 127: data->delayTickCount = 0;
 14818  036A  0857               	movf	locked_Main@data,w
 14819  036B  0086               	movwf	6
 14820  036C  0858               	movf	locked_Main@data+1,w
 14821  036D  0087               	movwf	7
 14822  036E  3141               	addfsr 1,1
 14823  036F  3000               	movlw	0
 14824  0370  3FC0               	movwi [0]fsr1
 14825  0371  3FC1               	movwi [1]fsr1
 14826                           
 14827                           ;locked_task.c: 128: }
 14828  0372  2BBD               	goto	l7863
 14829  0373                     l7847:	
 14830                           
 14831                           ;locked_task.c: 129: else {
 14832                           ;locked_task.c: 130: data->delayTickCount += 1;
 14833  0373  0857               	movf	locked_Main@data,w
 14834  0374  0086               	movwf	6
 14835  0375  0858               	movf	locked_Main@data+1,w
 14836  0376  0087               	movwf	7
 14837  0377  3141               	addfsr 1,1
 14838  0378  3001               	movlw	1
 14839  0379  0781               	addwf	1,f
 14840  037A  3141               	addfsr 1,1
 14841  037B  1803               	skipnc
 14842  037C  0A81               	incf	1,f
 14843                           
 14844                           ;locked_task.c: 131: }
 14845                           ;locked_task.c: 132: break;
 14846  037D  2BBD               	goto	l7863
 14847  037E                     l7849:	
 14848                           ;locked_task.c: 133: case LOCKED_UNLOCKED_STATE:
 14849                           
 14850                           
 14851                           ;locked_task.c: 134: badge_locked = 0;
 14852  037E  01FC               	clrf	_badge_locked
 14853                           
 14854                           ;locked_task.c: 136: marquee("OPEN", data->delayTickCount);
 14855  037F  3000               	movlw	low (STR_28| (0+32768))
 14856  0380  00BA               	movwf	marquee@string
 14857  0381  30A9               	movlw	high (STR_28| (0+32768))
 14858  0382  00BB               	movwf	marquee@string+1
 14859  0383  0857               	movf	locked_Main@data,w
 14860  0384  0086               	movwf	6
 14861  0385  0858               	movf	locked_Main@data+1,w
 14862  0386  0087               	movwf	7
 14863  0387  3141               	addfsr 1,1
 14864  0388  3F40               	moviw [0]fsr1
 14865  0389  00BC               	movwf	marquee@count
 14866  038A  3F41               	moviw [1]fsr1
 14867  038B  00BD               	movwf	marquee@count+1
 14868  038C  3193  2350  3182   	fcall	_marquee
 14869                           
 14870                           ;locked_task.c: 137: locked_unlock_leds();
 14871  038F  31A6  2638  3182   	fcall	_locked_unlock_leds
 14872                           
 14873                           ;locked_task.c: 138: break;
 14874  0392  2BBD               	goto	l7863
 14875  0393                     l1232:	
 14876                           ;locked_task.c: 139: case LOCKED_LOCKED_STATE:
 14877                           
 14878                           
 14879                           ;locked_task.c: 140: badge_locked = 1;
 14880  0393  01FC               	clrf	_badge_locked
 14881  0394  0AFC               	incf	_badge_locked,f
 14882                           
 14883                           ;locked_task.c: 141: marquee("LOCK", data->delayTickCount);
 14884  0395  30FB               	movlw	low (STR_29| (0+32768))
 14885  0396  00BA               	movwf	marquee@string
 14886  0397  30A8               	movlw	high (STR_29| (0+32768))
 14887  0398  00BB               	movwf	marquee@string+1
 14888  0399  0857               	movf	locked_Main@data,w
 14889  039A  0086               	movwf	6
 14890  039B  0858               	movf	locked_Main@data+1,w
 14891  039C  0087               	movwf	7
 14892  039D  3141               	addfsr 1,1
 14893  039E  3F40               	moviw [0]fsr1
 14894  039F  00BC               	movwf	marquee@count
 14895  03A0  3F41               	moviw [1]fsr1
 14896  03A1  00BD               	movwf	marquee@count+1
 14897  03A2  3193  2350  3182   	fcall	_marquee
 14898                           
 14899                           ;locked_task.c: 143: locked_lock_leds();
 14900  03A5  31A6  26ED  3182   	fcall	_locked_lock_leds
 14901                           
 14902                           ;locked_task.c: 145: }
 14903                           
 14904                           ;locked_task.c: 144: break;
 14905  03A8  2BBD               	goto	l7863
 14906  03A9                     l7861:	
 14907  03A9  0020               	movlb	0	; select bank0
 14908  03AA  0857               	movf	locked_Main@data,w
 14909  03AB  0086               	movwf	6
 14910  03AC  0858               	movf	locked_Main@data+1,w
 14911  03AD  0087               	movwf	7
 14912  03AE  314D               	addfsr 1,13
 14913  03AF  0801               	movf	1,w
 14914                           
 14915                           ; Switch size 1, requested type "space"
 14916                           ; Number of cases is 4, Range of values is 0 to 3
 14917                           ; switch strategies available:
 14918                           ; Name         Instructions Cycles
 14919                           ; simple_byte           13     7 (average)
 14920                           ; direct_byte           14     6 (fixed)
 14921                           ; jumptable            260     6 (fixed)
 14922                           ;	Chosen strategy is simple_byte
 14923  03B0  3A00               	xorlw	0	; case 0
 14924  03B1  1903               	skipnz
 14925  03B2  2B93               	goto	l1232
 14926  03B3  3A01               	xorlw	1	; case 1
 14927  03B4  1903               	skipnz
 14928  03B5  2B26               	goto	l7835
 14929  03B6  3A03               	xorlw	3	; case 2
 14930  03B7  1903               	skipnz
 14931  03B8  2B7E               	goto	l7849
 14932  03B9  3A01               	xorlw	1	; case 3
 14933  03BA  1903               	skipnz
 14934  03BB  2AD2               	goto	l7819
 14935  03BC  2BBD               	goto	l7863
 14936  03BD                     l7863:	
 14937                           
 14938                           ;locked_task.c: 146: nullifyBadge_userLedsSet(data->badge, locked_leds);
 14939  03BD  0021               	movlb	1	; select bank1
 14940  03BE  0821               	movf	(_locked_leds+1)^(0+128),w
 14941  03BF  0020               	movlb	0	; select bank0
 14942  03C0  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 14943  03C1  0021               	movlb	1	; select bank1
 14944  03C2  0820               	movf	_locked_leds^(0+128),w
 14945  03C3  0020               	movlb	0	; select bank0
 14946  03C4  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 14947  03C5  0857               	movf	locked_Main@data,w
 14948  03C6  0086               	movwf	6
 14949  03C7  0858               	movf	locked_Main@data+1,w
 14950  03C8  0087               	movwf	7
 14951  03C9  0801               	movf	1,w
 14952  03CA  31A5  2581  3182   	fcall	_nullifyBadge_userLedsSet
 14953                           
 14954                           ;locked_task.c: 149: buttonPressed = nullifyBadge_buttonsGet();
 14955  03CD  3198  20F4  3182   	fcall	_nullifyBadge_buttonsGet
 14956  03D0  0020               	movlb	0	; select bank0
 14957  03D1  00D4               	movwf	??_locked_Main
 14958  03D2  0854               	movf	??_locked_Main,w
 14959  03D3  00D6               	movwf	locked_Main@buttonPressed
 14960                           
 14961                           ;locked_task.c: 150: switch (buttonPressed) {
 14962  03D4  2C62               	goto	l7893
 14963  03D5                     l7867:	
 14964                           ;locked_task.c: 151: case 4:
 14965                           
 14966                           
 14967                           ;locked_task.c: 152: locked_clear(data);
 14968  03D5  0858               	movf	locked_Main@data+1,w
 14969  03D6  00BA               	movwf	locked_clear@data+1
 14970  03D7  0857               	movf	locked_Main@data,w
 14971  03D8  00B9               	movwf	locked_clear@data
 14972  03D9  319B  2367         	fcall	_locked_clear
 14973                           
 14974                           ;locked_task.c: 153: currentTask = MENU_TASK;
 14975  03DB  0021               	movlb	1	; select bank1
 14976  03DC  01B8               	clrf	_currentTask^(0+128)
 14977  03DD  01B9               	clrf	(_currentTask+1)^(0+128)
 14978                           
 14979                           ;locked_task.c: 154: break;
 14980  03DE  0008               	return
 14981  03DF                     l7871:	
 14982                           ;locked_task.c: 155: case 8:
 14983                           
 14984                           
 14985                           ;locked_task.c: 156: if (data->holdCountY == 0){
 14986  03DF  0020               	movlb	0	; select bank0
 14987  03E0  0857               	movf	locked_Main@data,w
 14988  03E1  0086               	movwf	6
 14989  03E2  0858               	movf	locked_Main@data+1,w
 14990  03E3  0087               	movwf	7
 14991  03E4  3149               	addfsr 1,9
 14992  03E5  0016               	moviw fsr1++
 14993  03E6  0401               	iorwf	1,w
 14994  03E7  1D03               	btfss	3,2
 14995  03E8  2C0C               	goto	l7881
 14996                           
 14997                           ;locked_task.c: 159: data->delayTickCount = 0;
 14998  03E9  0857               	movf	locked_Main@data,w
 14999  03EA  0086               	movwf	6
 15000  03EB  0858               	movf	locked_Main@data+1,w
 15001  03EC  0087               	movwf	7
 15002  03ED  3141               	addfsr 1,1
 15003  03EE  3000               	movlw	0
 15004  03EF  3FC0               	movwi [0]fsr1
 15005  03F0  3FC1               	movwi [1]fsr1
 15006                           
 15007                           ;locked_task.c: 160: if (badge_locked){
 15008  03F1  087C               	movf	_badge_locked,w
 15009  03F2  1903               	btfsc	3,2
 15010  03F3  2C00               	goto	l7879
 15011                           
 15012                           ;locked_task.c: 162: data->state = LOCKED_UNLOCKING_STATE;
 15013  03F4  0857               	movf	locked_Main@data,w
 15014  03F5  3E0D               	addlw	13
 15015  03F6  00D4               	movwf	??_locked_Main
 15016  03F7  3000               	movlw	0
 15017  03F8  3D58               	addwfc	locked_Main@data+1,w
 15018  03F9  00D5               	movwf	??_locked_Main+1
 15019  03FA  0854               	movf	??_locked_Main,w
 15020  03FB  0086               	movwf	6
 15021  03FC  0855               	movf	??_locked_Main+1,w
 15022  03FD  0087               	movwf	7
 15023  03FE  3003               	movlw	3
 15024  03FF  2C0B               	goto	L3
 15025  0400                     l7879:	
 15026                           ;locked_task.c: 163: }
 15027                           
 15028                           
 15029                           ;locked_task.c: 164: else {
 15030                           ;locked_task.c: 166: data->state = LOCKED_LOCKING_STATE;
 15031  0400  0857               	movf	locked_Main@data,w
 15032  0401  3E0D               	addlw	13
 15033  0402  00D4               	movwf	??_locked_Main
 15034  0403  3000               	movlw	0
 15035  0404  3D58               	addwfc	locked_Main@data+1,w
 15036  0405  00D5               	movwf	??_locked_Main+1
 15037  0406  0854               	movf	??_locked_Main,w
 15038  0407  0086               	movwf	6
 15039  0408  0855               	movf	??_locked_Main+1,w
 15040  0409  0087               	movwf	7
 15041  040A  3001               	movlw	1
 15042  040B                     L3:	
 15043  040B  0081               	movwf	1
 15044  040C                     l7881:	
 15045                           
 15046                           ;locked_task.c: 167: }
 15047                           ;locked_task.c: 168: }
 15048                           ;locked_task.c: 169: data->holdCountA = 0;
 15049  040C  0857               	movf	locked_Main@data,w
 15050  040D  0086               	movwf	6
 15051  040E  0858               	movf	locked_Main@data+1,w
 15052  040F  0087               	movwf	7
 15053  0410  3143               	addfsr 1,3
 15054  0411  3000               	movlw	0
 15055  0412  3FC0               	movwi [0]fsr1
 15056  0413  3FC1               	movwi [1]fsr1
 15057                           
 15058                           ;locked_task.c: 170: data->holdCountB = 0;
 15059  0414  0857               	movf	locked_Main@data,w
 15060  0415  0086               	movwf	6
 15061  0416  0858               	movf	locked_Main@data+1,w
 15062  0417  0087               	movwf	7
 15063  0418  3145               	addfsr 1,5
 15064  0419  3000               	movlw	0
 15065  041A  3FC0               	movwi [0]fsr1
 15066  041B  3FC1               	movwi [1]fsr1
 15067                           
 15068                           ;locked_task.c: 171: data->holdCountX = 0;
 15069  041C  0857               	movf	locked_Main@data,w
 15070  041D  0086               	movwf	6
 15071  041E  0858               	movf	locked_Main@data+1,w
 15072  041F  0087               	movwf	7
 15073  0420  3147               	addfsr 1,7
 15074  0421  3000               	movlw	0
 15075  0422  3FC0               	movwi [0]fsr1
 15076  0423  3FC1               	movwi [1]fsr1
 15077                           
 15078                           ;locked_task.c: 172: data->holdCountY += 1;
 15079  0424  0857               	movf	locked_Main@data,w
 15080  0425  0086               	movwf	6
 15081  0426  0858               	movf	locked_Main@data+1,w
 15082  0427  0087               	movwf	7
 15083  0428  3149               	addfsr 1,9
 15084  0429  3001               	movlw	1
 15085  042A  0781               	addwf	1,f
 15086  042B  3141               	addfsr 1,1
 15087  042C  1803               	skipnc
 15088  042D  0A81               	incf	1,f
 15089                           
 15090                           ;locked_task.c: 173: data->noholdCount = 0;
 15091  042E  0857               	movf	locked_Main@data,w
 15092  042F  0086               	movwf	6
 15093  0430  0858               	movf	locked_Main@data+1,w
 15094  0431  0087               	movwf	7
 15095  0432  314B               	addfsr 1,11
 15096  0433  3000               	movlw	0
 15097  0434  3FC0               	movwi [0]fsr1
 15098  0435  3FC1               	movwi [1]fsr1
 15099                           
 15100                           ;locked_task.c: 174: break;
 15101  0436  0008               	return
 15102  0437                     l7889:	
 15103                           ;locked_task.c: 175: default:
 15104                           
 15105                           
 15106                           ;locked_task.c: 176: data->holdCountA = 0;
 15107  0437  0857               	movf	locked_Main@data,w
 15108  0438  0086               	movwf	6
 15109  0439  0858               	movf	locked_Main@data+1,w
 15110  043A  0087               	movwf	7
 15111  043B  3143               	addfsr 1,3
 15112  043C  3000               	movlw	0
 15113  043D  3FC0               	movwi [0]fsr1
 15114  043E  3FC1               	movwi [1]fsr1
 15115                           
 15116                           ;locked_task.c: 177: data->holdCountB = 0;
 15117  043F  0857               	movf	locked_Main@data,w
 15118  0440  0086               	movwf	6
 15119  0441  0858               	movf	locked_Main@data+1,w
 15120  0442  0087               	movwf	7
 15121  0443  3145               	addfsr 1,5
 15122  0444  3000               	movlw	0
 15123  0445  3FC0               	movwi [0]fsr1
 15124  0446  3FC1               	movwi [1]fsr1
 15125                           
 15126                           ;locked_task.c: 178: data->holdCountX = 0;
 15127  0447  0857               	movf	locked_Main@data,w
 15128  0448  0086               	movwf	6
 15129  0449  0858               	movf	locked_Main@data+1,w
 15130  044A  0087               	movwf	7
 15131  044B  3147               	addfsr 1,7
 15132  044C  3000               	movlw	0
 15133  044D  3FC0               	movwi [0]fsr1
 15134  044E  3FC1               	movwi [1]fsr1
 15135                           
 15136                           ;locked_task.c: 179: data->holdCountY = 0;
 15137  044F  0857               	movf	locked_Main@data,w
 15138  0450  0086               	movwf	6
 15139  0451  0858               	movf	locked_Main@data+1,w
 15140  0452  0087               	movwf	7
 15141  0453  3149               	addfsr 1,9
 15142  0454  3000               	movlw	0
 15143  0455  3FC0               	movwi [0]fsr1
 15144  0456  3FC1               	movwi [1]fsr1
 15145                           
 15146                           ;locked_task.c: 180: data->noholdCount += 1;
 15147  0457  0857               	movf	locked_Main@data,w
 15148  0458  0086               	movwf	6
 15149  0459  0858               	movf	locked_Main@data+1,w
 15150  045A  0087               	movwf	7
 15151  045B  314B               	addfsr 1,11
 15152  045C  3001               	movlw	1
 15153  045D  0781               	addwf	1,f
 15154  045E  3141               	addfsr 1,1
 15155  045F  1803               	skipnc
 15156  0460  0A81               	incf	1,f
 15157                           
 15158                           ;locked_task.c: 181: }
 15159  0461  0008               	return
 15160  0462                     l7893:	
 15161  0462  0856               	movf	locked_Main@buttonPressed,w
 15162                           
 15163                           ; Switch size 1, requested type "space"
 15164                           ; Number of cases is 2, Range of values is 4 to 8
 15165                           ; switch strategies available:
 15166                           ; Name         Instructions Cycles
 15167                           ; simple_byte            7     4 (average)
 15168                           ; direct_byte           19     9 (fixed)
 15169                           ; jumptable            263     9 (fixed)
 15170                           ;	Chosen strategy is simple_byte
 15171  0463  3A04               	xorlw	4	; case 4
 15172  0464  1903               	skipnz
 15173  0465  2BD5               	goto	l7867
 15174  0466  3A0C               	xorlw	12	; case 8
 15175  0467  1903               	skipnz
 15176  0468  2BDF               	goto	l7871
 15177  0469  2C37               	goto	l7889
 15178  046A  0008               	return
 15179  046B                     __end_of_locked_Main:	
 15180                           
 15181                           	psect	text15
 15182  00B5                     __ptext15:	
 15183 ;; *************** function _menu_Main *****************
 15184 ;; Defined at:
 15185 ;;		line 54 in file "menu_task.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;  taskData        2   50[BANK0 ] PTR void 
 15188 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15189 ;;		 -> flashy_TaskData(30), NULL(0), 
 15190 ;; Auto vars:     Size  Location     Type
 15191 ;;  data            2   55[BANK0 ] PTR struct t_menu_taskDa
 15192 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15193 ;;		 -> flashy_TaskData(30), NULL(0), 
 15194 ;;  buttonPresse    1   54[BANK0 ] unsigned char 
 15195 ;; Return value:  Size  Location     Type
 15196 ;;                  1    wreg      void 
 15197 ;; Registers used:
 15198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15199 ;; Tracked objects:
 15200 ;;		On entry : 0/0
 15201 ;;		On exit  : 0/0
 15202 ;;		Unchanged: 0/0
 15203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15205 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15206 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15207 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15208 ;;Total ram usage:        7 bytes
 15209 ;; Hardware stack levels used:    1
 15210 ;; Hardware stack levels required when called:   12
 15211 ;; This function calls:
 15212 ;;		_menu_clear
 15213 ;;		_menu_display_option
 15214 ;;		_menu_run_option
 15215 ;;		_nullifyBadge_buttonsGet
 15216 ;; This function is called by:
 15217 ;;		_main
 15218 ;;		_scheduler_TaskRun
 15219 ;; This function uses a non-reentrant model
 15220 ;;
 15221                           
 15222                           
 15223                           ;psect for function _menu_Main
 15224  00B5                     _menu_Main:	
 15225                           
 15226                           ;menu_task.c: 55: struct t_menu_taskData *data = (struct t_menu_taskData *) taskData;
 15227                           
 15228                           ;incstack = 0
 15229                           ; Regs used in _menu_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15230  00B5  0020               	movlb	0	; select bank0
 15231  00B6  0853               	movf	menu_Main@taskData+1,w
 15232  00B7  00D8               	movwf	menu_Main@data+1
 15233  00B8  0852               	movf	menu_Main@taskData,w
 15234  00B9  00D7               	movwf	menu_Main@data
 15235                           
 15236                           ;menu_task.c: 56: u8 buttonPressed;
 15237                           ;menu_task.c: 58: if ( currentTask != MENU_TASK ){
 15238  00BA  0021               	movlb	1	; select bank1
 15239  00BB  0838               	movf	_currentTask^(0+128),w
 15240  00BC  0439               	iorwf	(_currentTask+1)^(0+128),w
 15241  00BD  1903               	btfsc	3,2
 15242  00BE  292E               	goto	l7273
 15243                           
 15244                           ;menu_task.c: 60: buttonPressed = nullifyBadge_buttonsGet();
 15245  00BF  3198  20F4  3180   	fcall	_nullifyBadge_buttonsGet
 15246  00C2  0020               	movlb	0	; select bank0
 15247  00C3  00D4               	movwf	??_menu_Main
 15248  00C4  0854               	movf	??_menu_Main,w
 15249  00C5  00D6               	movwf	menu_Main@buttonPressed
 15250                           
 15251                           ;menu_task.c: 61: switch (buttonPressed) {
 15252  00C6  2928               	goto	l7271
 15253  00C7                     l7253:	
 15254                           ;menu_task.c: 62: case 1 | 2 | 8:
 15255                           
 15256                           
 15257                           ;menu_task.c: 63: currentTask = MENU_TASK;
 15258  00C7  0021               	movlb	1	; select bank1
 15259  00C8  01B8               	clrf	_currentTask^(0+128)
 15260  00C9  01B9               	clrf	(_currentTask+1)^(0+128)
 15261                           
 15262                           ;menu_task.c: 64: menu_clear(data);
 15263  00CA  0020               	movlb	0	; select bank0
 15264  00CB  0858               	movf	menu_Main@data+1,w
 15265  00CC  00BA               	movwf	menu_clear@data+1
 15266  00CD  0857               	movf	menu_Main@data,w
 15267  00CE  00B9               	movwf	menu_clear@data
 15268  00CF  319B  23EC  3180   	fcall	_menu_clear
 15269                           
 15270                           ;menu_task.c: 67: data->holdCountA = 1;
 15271  00D2  0020               	movlb	0	; select bank0
 15272  00D3  0857               	movf	menu_Main@data,w
 15273  00D4  0086               	movwf	6
 15274  00D5  0858               	movf	menu_Main@data+1,w
 15275  00D6  0087               	movwf	7
 15276  00D7  3144               	addfsr 1,4
 15277  00D8  3001               	movlw	1
 15278  00D9  3FC0               	movwi [0]fsr1
 15279  00DA  3000               	movlw	0
 15280  00DB  3FC1               	movwi [1]fsr1
 15281                           
 15282                           ;menu_task.c: 68: data->holdCountB = 1;
 15283  00DC  0857               	movf	menu_Main@data,w
 15284  00DD  0086               	movwf	6
 15285  00DE  0858               	movf	menu_Main@data+1,w
 15286  00DF  0087               	movwf	7
 15287  00E0  3146               	addfsr 1,6
 15288  00E1  3001               	movlw	1
 15289  00E2  3FC0               	movwi [0]fsr1
 15290  00E3  3000               	movlw	0
 15291  00E4  3FC1               	movwi [1]fsr1
 15292                           
 15293                           ;menu_task.c: 69: data->holdCountX = 1;
 15294  00E5  0857               	movf	menu_Main@data,w
 15295  00E6  0086               	movwf	6
 15296  00E7  0858               	movf	menu_Main@data+1,w
 15297  00E8  0087               	movwf	7
 15298  00E9  3148               	addfsr 1,8
 15299  00EA  3001               	movlw	1
 15300  00EB  3FC0               	movwi [0]fsr1
 15301  00EC  3000               	movlw	0
 15302  00ED  3FC1               	movwi [1]fsr1
 15303                           
 15304                           ;menu_task.c: 70: data->holdCountY = 1;
 15305  00EE  0857               	movf	menu_Main@data,w
 15306  00EF  0086               	movwf	6
 15307  00F0  0858               	movf	menu_Main@data+1,w
 15308  00F1  0087               	movwf	7
 15309  00F2  314A               	addfsr 1,10
 15310  00F3  3001               	movlw	1
 15311  00F4  3FC0               	movwi [0]fsr1
 15312  00F5  3000               	movlw	0
 15313  00F6  3FC1               	movwi [1]fsr1
 15314                           
 15315                           ;menu_task.c: 72: menu_option_idx = 0;
 15316  00F7  0021               	movlb	1	; select bank1
 15317  00F8  01B4               	clrf	_menu_option_idx^(0+128)
 15318  00F9  01B5               	clrf	(_menu_option_idx+1)^(0+128)
 15319                           
 15320                           ;menu_task.c: 73: menu_display_option(data);
 15321  00FA  0020               	movlb	0	; select bank0
 15322  00FB  0858               	movf	menu_Main@data+1,w
 15323  00FC  00CD               	movwf	menu_display_option@data+1
 15324  00FD  0857               	movf	menu_Main@data,w
 15325  00FE  00CC               	movwf	menu_display_option@data
 15326  00FF  319E  26D9         	fcall	_menu_display_option
 15327                           
 15328                           ;menu_task.c: 74: break;
 15329  0101  0008               	return
 15330  0102                     l7267:	
 15331                           ;menu_task.c: 75: default:
 15332                           
 15333                           
 15334                           ;menu_task.c: 77: data->holdCountA = 1;
 15335  0102  0020               	movlb	0	; select bank0
 15336  0103  0857               	movf	menu_Main@data,w
 15337  0104  0086               	movwf	6
 15338  0105  0858               	movf	menu_Main@data+1,w
 15339  0106  0087               	movwf	7
 15340  0107  3144               	addfsr 1,4
 15341  0108  3001               	movlw	1
 15342  0109  3FC0               	movwi [0]fsr1
 15343  010A  3000               	movlw	0
 15344  010B  3FC1               	movwi [1]fsr1
 15345                           
 15346                           ;menu_task.c: 78: data->holdCountB = 1;
 15347  010C  0857               	movf	menu_Main@data,w
 15348  010D  0086               	movwf	6
 15349  010E  0858               	movf	menu_Main@data+1,w
 15350  010F  0087               	movwf	7
 15351  0110  3146               	addfsr 1,6
 15352  0111  3001               	movlw	1
 15353  0112  3FC0               	movwi [0]fsr1
 15354  0113  3000               	movlw	0
 15355  0114  3FC1               	movwi [1]fsr1
 15356                           
 15357                           ;menu_task.c: 79: data->holdCountX = 1;
 15358  0115  0857               	movf	menu_Main@data,w
 15359  0116  0086               	movwf	6
 15360  0117  0858               	movf	menu_Main@data+1,w
 15361  0118  0087               	movwf	7
 15362  0119  3148               	addfsr 1,8
 15363  011A  3001               	movlw	1
 15364  011B  3FC0               	movwi [0]fsr1
 15365  011C  3000               	movlw	0
 15366  011D  3FC1               	movwi [1]fsr1
 15367                           
 15368                           ;menu_task.c: 80: data->holdCountY = 1;
 15369  011E  0857               	movf	menu_Main@data,w
 15370  011F  0086               	movwf	6
 15371  0120  0858               	movf	menu_Main@data+1,w
 15372  0121  0087               	movwf	7
 15373  0122  314A               	addfsr 1,10
 15374  0123  3001               	movlw	1
 15375  0124  3FC0               	movwi [0]fsr1
 15376  0125  3000               	movlw	0
 15377  0126  3FC1               	movwi [1]fsr1
 15378                           
 15379                           ;menu_task.c: 82: }
 15380                           
 15381                           ;menu_task.c: 81: break;
 15382  0127  0008               	return
 15383  0128                     l7271:	
 15384  0128  0856               	movf	menu_Main@buttonPressed,w
 15385                           
 15386                           ; Switch size 1, requested type "space"
 15387                           ; Number of cases is 1, Range of values is 11 to 11
 15388                           ; switch strategies available:
 15389                           ; Name         Instructions Cycles
 15390                           ; simple_byte            4     3 (average)
 15391                           ; direct_byte           11     9 (fixed)
 15392                           ; jumptable            263     9 (fixed)
 15393                           ;	Chosen strategy is simple_byte
 15394  0129  3A0B               	xorlw	11	; case 11
 15395  012A  1903               	skipnz
 15396  012B  28C7               	goto	l7253
 15397  012C  2902               	goto	l7267
 15398                           
 15399                           ;menu_task.c: 83: return;
 15400  012D  0008               	return
 15401  012E                     l7273:	
 15402                           
 15403                           ;menu_task.c: 84: }
 15404                           ;menu_task.c: 86: buttonPressed = nullifyBadge_buttonsGet();
 15405  012E  3198  20F4  3180   	fcall	_nullifyBadge_buttonsGet
 15406  0131  0020               	movlb	0	; select bank0
 15407  0132  00D4               	movwf	??_menu_Main
 15408  0133  0854               	movf	??_menu_Main,w
 15409  0134  00D6               	movwf	menu_Main@buttonPressed
 15410                           
 15411                           ;menu_task.c: 87: switch (buttonPressed) {
 15412  0135  2A8F               	goto	l7357
 15413  0136                     l7275:	
 15414                           ;menu_task.c: 88: case 1:
 15415                           
 15416                           
 15417                           ;menu_task.c: 90: if (data->holdCountA == 0){
 15418  0136  0857               	movf	menu_Main@data,w
 15419  0137  0086               	movwf	6
 15420  0138  0858               	movf	menu_Main@data+1,w
 15421  0139  0087               	movwf	7
 15422  013A  3144               	addfsr 1,4
 15423  013B  0016               	moviw fsr1++
 15424  013C  0401               	iorwf	1,w
 15425  013D  1D03               	btfss	3,2
 15426  013E  294F               	goto	l7283
 15427                           
 15428                           ;menu_task.c: 92: if (menu_option_idx == 0){
 15429  013F  0021               	movlb	1	; select bank1
 15430  0140  0834               	movf	_menu_option_idx^(0+128),w
 15431  0141  0435               	iorwf	(_menu_option_idx+1)^(0+128),w
 15432  0142  1D03               	btfss	3,2
 15433  0143  294B               	goto	l7281
 15434                           
 15435                           ;menu_task.c: 93: menu_option_idx = menu_option_size - 1;
 15436  0144  0832               	movf	_menu_option_size^(0+128),w
 15437  0145  3EFF               	addlw	255
 15438  0146  00B4               	movwf	_menu_option_idx^(0+128)
 15439  0147  30FF               	movlw	255
 15440  0148  3D33               	addwfc	(_menu_option_size+1)^(0+128),w
 15441  0149  00B5               	movwf	(_menu_option_idx+1)^(0+128)
 15442                           
 15443                           ;menu_task.c: 94: }
 15444  014A  294F               	goto	l7283
 15445  014B                     l7281:	
 15446                           
 15447                           ;menu_task.c: 95: else {
 15448                           ;menu_task.c: 96: menu_option_idx -= 1;
 15449  014B  3001               	movlw	1
 15450  014C  02B4               	subwf	_menu_option_idx^(0+128),f
 15451  014D  3000               	movlw	0
 15452  014E  3BB5               	subwfb	(_menu_option_idx+1)^(0+128),f
 15453  014F                     l7283:	
 15454                           
 15455                           ;menu_task.c: 97: }
 15456                           ;menu_task.c: 98: }
 15457                           ;menu_task.c: 99: menu_display_option(data);
 15458  014F  0020               	movlb	0	; select bank0
 15459  0150  0858               	movf	menu_Main@data+1,w
 15460  0151  00CD               	movwf	menu_display_option@data+1
 15461  0152  0857               	movf	menu_Main@data,w
 15462  0153  00CC               	movwf	menu_display_option@data
 15463  0154  319E  26D9  3180   	fcall	_menu_display_option
 15464                           
 15465                           ;menu_task.c: 100: data->holdCountA += 1;
 15466  0157  0020               	movlb	0	; select bank0
 15467  0158  0857               	movf	menu_Main@data,w
 15468  0159  0086               	movwf	6
 15469  015A  0858               	movf	menu_Main@data+1,w
 15470  015B  0087               	movwf	7
 15471  015C  3144               	addfsr 1,4
 15472  015D  3001               	movlw	1
 15473  015E  0781               	addwf	1,f
 15474  015F  3141               	addfsr 1,1
 15475  0160  1803               	skipnc
 15476  0161  0A81               	incf	1,f
 15477                           
 15478                           ;menu_task.c: 101: data->holdCountB = 0;
 15479  0162  0857               	movf	menu_Main@data,w
 15480  0163  0086               	movwf	6
 15481  0164  0858               	movf	menu_Main@data+1,w
 15482  0165  0087               	movwf	7
 15483  0166  3146               	addfsr 1,6
 15484  0167  3000               	movlw	0
 15485  0168  3FC0               	movwi [0]fsr1
 15486  0169  3FC1               	movwi [1]fsr1
 15487                           
 15488                           ;menu_task.c: 102: data->holdCountX = 0;
 15489  016A  0857               	movf	menu_Main@data,w
 15490  016B  0086               	movwf	6
 15491  016C  0858               	movf	menu_Main@data+1,w
 15492  016D  0087               	movwf	7
 15493  016E  3148               	addfsr 1,8
 15494  016F  3000               	movlw	0
 15495  0170  3FC0               	movwi [0]fsr1
 15496  0171  3FC1               	movwi [1]fsr1
 15497                           
 15498                           ;menu_task.c: 103: data->holdCountY = 0;
 15499  0172  0857               	movf	menu_Main@data,w
 15500  0173  0086               	movwf	6
 15501  0174  0858               	movf	menu_Main@data+1,w
 15502  0175  0087               	movwf	7
 15503  0176  314A               	addfsr 1,10
 15504  0177  3000               	movlw	0
 15505  0178  3FC0               	movwi [0]fsr1
 15506  0179  3FC1               	movwi [1]fsr1
 15507                           
 15508                           ;menu_task.c: 104: data->noholdCount = 0;
 15509  017A  0857               	movf	menu_Main@data,w
 15510  017B  0086               	movwf	6
 15511  017C  0858               	movf	menu_Main@data+1,w
 15512  017D  0087               	movwf	7
 15513  017E  314C               	addfsr 1,12
 15514  017F  3000               	movlw	0
 15515  0180  3FC0               	movwi [0]fsr1
 15516  0181  3FC1               	movwi [1]fsr1
 15517                           
 15518                           ;menu_task.c: 105: break;
 15519  0182  0008               	return
 15520  0183                     l7295:	
 15521                           ;menu_task.c: 106: case 2:
 15522                           
 15523                           
 15524                           ;menu_task.c: 108: if (data->holdCountB == 0){
 15525  0183  0857               	movf	menu_Main@data,w
 15526  0184  0086               	movwf	6
 15527  0185  0858               	movf	menu_Main@data+1,w
 15528  0186  0087               	movwf	7
 15529  0187  3146               	addfsr 1,6
 15530  0188  0016               	moviw fsr1++
 15531  0189  0401               	iorwf	1,w
 15532  018A  1D03               	btfss	3,2
 15533  018B  29AB               	goto	l7303
 15534                           
 15535                           ;menu_task.c: 110: if (menu_option_idx == menu_option_size - 1){
 15536  018C  0021               	movlb	1	; select bank1
 15537  018D  0832               	movf	_menu_option_size^(0+128),w
 15538  018E  3EFF               	addlw	255
 15539  018F  0020               	movlb	0	; select bank0
 15540  0190  00D4               	movwf	??_menu_Main
 15541  0191  30FF               	movlw	255
 15542  0192  0021               	movlb	1	; select bank1
 15543  0193  3D33               	addwfc	(_menu_option_size+1)^(0+128),w
 15544  0194  0020               	movlb	0	; select bank0
 15545  0195  00D5               	movwf	??_menu_Main+1
 15546  0196  0021               	movlb	1	; select bank1
 15547  0197  0835               	movf	(_menu_option_idx+1)^(0+128),w
 15548  0198  0020               	movlb	0	; select bank0
 15549  0199  0655               	xorwf	??_menu_Main+1,w
 15550  019A  1D03               	skipz
 15551  019B  29A0               	goto	u4505
 15552  019C  0021               	movlb	1	; select bank1
 15553  019D  0834               	movf	_menu_option_idx^(0+128),w
 15554  019E  0020               	movlb	0	; select bank0
 15555  019F  0654               	xorwf	??_menu_Main,w
 15556  01A0                     u4505:	
 15557  01A0  1D03               	skipz
 15558  01A1  29A6               	goto	l7301
 15559                           
 15560                           ;menu_task.c: 111: menu_option_idx = 0;
 15561  01A2  0021               	movlb	1	; select bank1
 15562  01A3  01B4               	clrf	_menu_option_idx^(0+128)
 15563  01A4  01B5               	clrf	(_menu_option_idx+1)^(0+128)
 15564                           
 15565                           ;menu_task.c: 112: }
 15566  01A5  29AB               	goto	l7303
 15567  01A6                     l7301:	
 15568                           
 15569                           ;menu_task.c: 113: else {
 15570                           ;menu_task.c: 114: menu_option_idx += 1;
 15571  01A6  3001               	movlw	1
 15572  01A7  0021               	movlb	1	; select bank1
 15573  01A8  07B4               	addwf	_menu_option_idx^(0+128),f
 15574  01A9  3000               	movlw	0
 15575  01AA  3DB5               	addwfc	(_menu_option_idx+1)^(0+128),f
 15576  01AB                     l7303:	
 15577                           
 15578                           ;menu_task.c: 115: }
 15579                           ;menu_task.c: 116: }
 15580                           ;menu_task.c: 117: menu_display_option(data);
 15581  01AB  0020               	movlb	0	; select bank0
 15582  01AC  0858               	movf	menu_Main@data+1,w
 15583  01AD  00CD               	movwf	menu_display_option@data+1
 15584  01AE  0857               	movf	menu_Main@data,w
 15585  01AF  00CC               	movwf	menu_display_option@data
 15586  01B0  319E  26D9  3180   	fcall	_menu_display_option
 15587                           
 15588                           ;menu_task.c: 118: data->holdCountA = 0;
 15589  01B3  0020               	movlb	0	; select bank0
 15590  01B4  0857               	movf	menu_Main@data,w
 15591  01B5  0086               	movwf	6
 15592  01B6  0858               	movf	menu_Main@data+1,w
 15593  01B7  0087               	movwf	7
 15594  01B8  3144               	addfsr 1,4
 15595  01B9  3000               	movlw	0
 15596  01BA  3FC0               	movwi [0]fsr1
 15597  01BB  3FC1               	movwi [1]fsr1
 15598                           
 15599                           ;menu_task.c: 119: data->holdCountB += 1;
 15600  01BC  0857               	movf	menu_Main@data,w
 15601  01BD  0086               	movwf	6
 15602  01BE  0858               	movf	menu_Main@data+1,w
 15603  01BF  0087               	movwf	7
 15604  01C0  3146               	addfsr 1,6
 15605  01C1  3001               	movlw	1
 15606  01C2  0781               	addwf	1,f
 15607  01C3  3141               	addfsr 1,1
 15608  01C4  1803               	skipnc
 15609  01C5  0A81               	incf	1,f
 15610                           
 15611                           ;menu_task.c: 120: data->holdCountX = 0;
 15612  01C6  0857               	movf	menu_Main@data,w
 15613  01C7  0086               	movwf	6
 15614  01C8  0858               	movf	menu_Main@data+1,w
 15615  01C9  0087               	movwf	7
 15616  01CA  3148               	addfsr 1,8
 15617  01CB  3000               	movlw	0
 15618  01CC  3FC0               	movwi [0]fsr1
 15619  01CD  3FC1               	movwi [1]fsr1
 15620                           
 15621                           ;menu_task.c: 121: data->holdCountY = 0;
 15622  01CE  0857               	movf	menu_Main@data,w
 15623  01CF  0086               	movwf	6
 15624  01D0  0858               	movf	menu_Main@data+1,w
 15625  01D1  0087               	movwf	7
 15626  01D2  314A               	addfsr 1,10
 15627  01D3  3000               	movlw	0
 15628  01D4  3FC0               	movwi [0]fsr1
 15629  01D5  3FC1               	movwi [1]fsr1
 15630                           
 15631                           ;menu_task.c: 122: data->noholdCount = 0;
 15632  01D6  0857               	movf	menu_Main@data,w
 15633  01D7  0086               	movwf	6
 15634  01D8  0858               	movf	menu_Main@data+1,w
 15635  01D9  0087               	movwf	7
 15636  01DA  314C               	addfsr 1,12
 15637  01DB  3000               	movlw	0
 15638  01DC  3FC0               	movwi [0]fsr1
 15639  01DD  3FC1               	movwi [1]fsr1
 15640                           
 15641                           ;menu_task.c: 123: break;
 15642  01DE  0008               	return
 15643  01DF                     l7315:	
 15644                           ;menu_task.c: 124: case 4:
 15645                           
 15646                           
 15647                           ;menu_task.c: 125: if (data->holdCountX == 0){
 15648  01DF  0857               	movf	menu_Main@data,w
 15649  01E0  0086               	movwf	6
 15650  01E1  0858               	movf	menu_Main@data+1,w
 15651  01E2  0087               	movwf	7
 15652  01E3  3148               	addfsr 1,8
 15653  01E4  0016               	moviw fsr1++
 15654  01E5  0401               	iorwf	1,w
 15655  01E6  1D03               	btfss	3,2
 15656  01E7  29F4               	goto	l7321
 15657                           
 15658                           ;menu_task.c: 127: menu_clear(data);
 15659  01E8  0858               	movf	menu_Main@data+1,w
 15660  01E9  00BA               	movwf	menu_clear@data+1
 15661  01EA  0857               	movf	menu_Main@data,w
 15662  01EB  00B9               	movwf	menu_clear@data
 15663  01EC  319B  23EC  3180   	fcall	_menu_clear
 15664                           
 15665                           ;menu_task.c: 128: currentTask = FLASHY_TASK;
 15666  01EF  3002               	movlw	2
 15667  01F0  0021               	movlb	1	; select bank1
 15668  01F1  00B8               	movwf	_currentTask^(0+128)
 15669  01F2  3000               	movlw	0
 15670  01F3  00B9               	movwf	(_currentTask^(0+128)+1)
 15671  01F4                     l7321:	
 15672                           
 15673                           ;menu_task.c: 129: }
 15674                           ;menu_task.c: 130: data->holdCountA = 0;
 15675  01F4  0020               	movlb	0	; select bank0
 15676  01F5  0857               	movf	menu_Main@data,w
 15677  01F6  0086               	movwf	6
 15678  01F7  0858               	movf	menu_Main@data+1,w
 15679  01F8  0087               	movwf	7
 15680  01F9  3144               	addfsr 1,4
 15681  01FA  3000               	movlw	0
 15682  01FB  3FC0               	movwi [0]fsr1
 15683  01FC  3FC1               	movwi [1]fsr1
 15684                           
 15685                           ;menu_task.c: 131: data->holdCountB = 0;
 15686  01FD  0857               	movf	menu_Main@data,w
 15687  01FE  0086               	movwf	6
 15688  01FF  0858               	movf	menu_Main@data+1,w
 15689  0200  0087               	movwf	7
 15690  0201  3146               	addfsr 1,6
 15691  0202  3000               	movlw	0
 15692  0203  3FC0               	movwi [0]fsr1
 15693  0204  3FC1               	movwi [1]fsr1
 15694                           
 15695                           ;menu_task.c: 132: data->holdCountX += 1;
 15696  0205  0857               	movf	menu_Main@data,w
 15697  0206  0086               	movwf	6
 15698  0207  0858               	movf	menu_Main@data+1,w
 15699  0208  0087               	movwf	7
 15700  0209  3148               	addfsr 1,8
 15701  020A  3001               	movlw	1
 15702  020B  0781               	addwf	1,f
 15703  020C  3141               	addfsr 1,1
 15704  020D  1803               	skipnc
 15705  020E  0A81               	incf	1,f
 15706                           
 15707                           ;menu_task.c: 133: data->holdCountY = 0;
 15708  020F  0857               	movf	menu_Main@data,w
 15709  0210  0086               	movwf	6
 15710  0211  0858               	movf	menu_Main@data+1,w
 15711  0212  0087               	movwf	7
 15712  0213  314A               	addfsr 1,10
 15713  0214  3000               	movlw	0
 15714  0215  3FC0               	movwi [0]fsr1
 15715  0216  3FC1               	movwi [1]fsr1
 15716                           
 15717                           ;menu_task.c: 134: data->noholdCount = 0;
 15718  0217  0857               	movf	menu_Main@data,w
 15719  0218  0086               	movwf	6
 15720  0219  0858               	movf	menu_Main@data+1,w
 15721  021A  0087               	movwf	7
 15722  021B  314C               	addfsr 1,12
 15723  021C  3000               	movlw	0
 15724  021D  3FC0               	movwi [0]fsr1
 15725  021E  3FC1               	movwi [1]fsr1
 15726                           
 15727                           ;menu_task.c: 135: break;
 15728  021F  0008               	return
 15729  0220                     l7331:	
 15730                           ;menu_task.c: 136: case 8:
 15731                           
 15732                           
 15733                           ;menu_task.c: 137: if (data->holdCountY == 0){
 15734  0220  0857               	movf	menu_Main@data,w
 15735  0221  0086               	movwf	6
 15736  0222  0858               	movf	menu_Main@data+1,w
 15737  0223  0087               	movwf	7
 15738  0224  314A               	addfsr 1,10
 15739  0225  0016               	moviw fsr1++
 15740  0226  0401               	iorwf	1,w
 15741  0227  1D03               	btfss	3,2
 15742  0228  2A30               	goto	l7335
 15743                           
 15744                           ;menu_task.c: 138: menu_run_option(data);
 15745  0229  0858               	movf	menu_Main@data+1,w
 15746  022A  00BC               	movwf	menu_run_option@data+1
 15747  022B  0857               	movf	menu_Main@data,w
 15748  022C  00BB               	movwf	menu_run_option@data
 15749  022D  319A  222D  3180   	fcall	_menu_run_option
 15750  0230                     l7335:	
 15751                           
 15752                           ;menu_task.c: 139: }
 15753                           ;menu_task.c: 140: data->holdCountA = 0;
 15754  0230  0020               	movlb	0	; select bank0
 15755  0231  0857               	movf	menu_Main@data,w
 15756  0232  0086               	movwf	6
 15757  0233  0858               	movf	menu_Main@data+1,w
 15758  0234  0087               	movwf	7
 15759  0235  3144               	addfsr 1,4
 15760  0236  3000               	movlw	0
 15761  0237  3FC0               	movwi [0]fsr1
 15762  0238  3FC1               	movwi [1]fsr1
 15763                           
 15764                           ;menu_task.c: 141: data->holdCountB = 0;
 15765  0239  0857               	movf	menu_Main@data,w
 15766  023A  0086               	movwf	6
 15767  023B  0858               	movf	menu_Main@data+1,w
 15768  023C  0087               	movwf	7
 15769  023D  3146               	addfsr 1,6
 15770  023E  3000               	movlw	0
 15771  023F  3FC0               	movwi [0]fsr1
 15772  0240  3FC1               	movwi [1]fsr1
 15773                           
 15774                           ;menu_task.c: 142: data->holdCountX = 0;
 15775  0241  0857               	movf	menu_Main@data,w
 15776  0242  0086               	movwf	6
 15777  0243  0858               	movf	menu_Main@data+1,w
 15778  0244  0087               	movwf	7
 15779  0245  3148               	addfsr 1,8
 15780  0246  3000               	movlw	0
 15781  0247  3FC0               	movwi [0]fsr1
 15782  0248  3FC1               	movwi [1]fsr1
 15783                           
 15784                           ;menu_task.c: 143: data->holdCountY += 1;
 15785  0249  0857               	movf	menu_Main@data,w
 15786  024A  0086               	movwf	6
 15787  024B  0858               	movf	menu_Main@data+1,w
 15788  024C  0087               	movwf	7
 15789  024D  314A               	addfsr 1,10
 15790  024E  3001               	movlw	1
 15791  024F  0781               	addwf	1,f
 15792  0250  3141               	addfsr 1,1
 15793  0251  1803               	skipnc
 15794  0252  0A81               	incf	1,f
 15795                           
 15796                           ;menu_task.c: 144: data->noholdCount = 0;
 15797  0253  0857               	movf	menu_Main@data,w
 15798  0254  0086               	movwf	6
 15799  0255  0858               	movf	menu_Main@data+1,w
 15800  0256  0087               	movwf	7
 15801  0257  314C               	addfsr 1,12
 15802  0258  3000               	movlw	0
 15803  0259  3FC0               	movwi [0]fsr1
 15804  025A  3FC1               	movwi [1]fsr1
 15805                           
 15806                           ;menu_task.c: 145: break;
 15807  025B  0008               	return
 15808  025C                     l7345:	
 15809                           ;menu_task.c: 147: default:
 15810                           
 15811                           ;menu_task.c: 146: case 1 | 2 | 8:
 15812                           
 15813                           
 15814                           ;menu_task.c: 148: menu_display_option(data);
 15815  025C  0858               	movf	menu_Main@data+1,w
 15816  025D  00CD               	movwf	menu_display_option@data+1
 15817  025E  0857               	movf	menu_Main@data,w
 15818  025F  00CC               	movwf	menu_display_option@data
 15819  0260  319E  26D9  3180   	fcall	_menu_display_option
 15820                           
 15821                           ;menu_task.c: 149: data->holdCountA = 0;
 15822  0263  0020               	movlb	0	; select bank0
 15823  0264  0857               	movf	menu_Main@data,w
 15824  0265  0086               	movwf	6
 15825  0266  0858               	movf	menu_Main@data+1,w
 15826  0267  0087               	movwf	7
 15827  0268  3144               	addfsr 1,4
 15828  0269  3000               	movlw	0
 15829  026A  3FC0               	movwi [0]fsr1
 15830  026B  3FC1               	movwi [1]fsr1
 15831                           
 15832                           ;menu_task.c: 150: data->holdCountB = 0;
 15833  026C  0857               	movf	menu_Main@data,w
 15834  026D  0086               	movwf	6
 15835  026E  0858               	movf	menu_Main@data+1,w
 15836  026F  0087               	movwf	7
 15837  0270  3146               	addfsr 1,6
 15838  0271  3000               	movlw	0
 15839  0272  3FC0               	movwi [0]fsr1
 15840  0273  3FC1               	movwi [1]fsr1
 15841                           
 15842                           ;menu_task.c: 151: data->holdCountX = 0;
 15843  0274  0857               	movf	menu_Main@data,w
 15844  0275  0086               	movwf	6
 15845  0276  0858               	movf	menu_Main@data+1,w
 15846  0277  0087               	movwf	7
 15847  0278  3148               	addfsr 1,8
 15848  0279  3000               	movlw	0
 15849  027A  3FC0               	movwi [0]fsr1
 15850  027B  3FC1               	movwi [1]fsr1
 15851                           
 15852                           ;menu_task.c: 152: data->holdCountY = 0;
 15853  027C  0857               	movf	menu_Main@data,w
 15854  027D  0086               	movwf	6
 15855  027E  0858               	movf	menu_Main@data+1,w
 15856  027F  0087               	movwf	7
 15857  0280  314A               	addfsr 1,10
 15858  0281  3000               	movlw	0
 15859  0282  3FC0               	movwi [0]fsr1
 15860  0283  3FC1               	movwi [1]fsr1
 15861                           
 15862                           ;menu_task.c: 153: data->noholdCount += 1;
 15863  0284  0857               	movf	menu_Main@data,w
 15864  0285  0086               	movwf	6
 15865  0286  0858               	movf	menu_Main@data+1,w
 15866  0287  0087               	movwf	7
 15867  0288  314C               	addfsr 1,12
 15868  0289  3001               	movlw	1
 15869  028A  0781               	addwf	1,f
 15870  028B  3141               	addfsr 1,1
 15871  028C  1803               	skipnc
 15872  028D  0A81               	incf	1,f
 15873                           
 15874                           ;menu_task.c: 154: }
 15875  028E  0008               	return
 15876  028F                     l7357:	
 15877  028F  0856               	movf	menu_Main@buttonPressed,w
 15878                           
 15879                           ; Switch size 1, requested type "space"
 15880                           ; Number of cases is 5, Range of values is 1 to 11
 15881                           ; switch strategies available:
 15882                           ; Name         Instructions Cycles
 15883                           ; simple_byte           16     9 (average)
 15884                           ; direct_byte           31     9 (fixed)
 15885                           ; jumptable            263     9 (fixed)
 15886                           ;	Chosen strategy is simple_byte
 15887  0290  3A01               	xorlw	1	; case 1
 15888  0291  1903               	skipnz
 15889  0292  2936               	goto	l7275
 15890  0293  3A03               	xorlw	3	; case 2
 15891  0294  1903               	skipnz
 15892  0295  2983               	goto	l7295
 15893  0296  3A06               	xorlw	6	; case 4
 15894  0297  1903               	skipnz
 15895  0298  29DF               	goto	l7315
 15896  0299  3A0C               	xorlw	12	; case 8
 15897  029A  1903               	skipnz
 15898  029B  2A20               	goto	l7331
 15899  029C  3A03               	xorlw	3	; case 11
 15900  029D  1903               	skipnz
 15901  029E  2A5C               	goto	l7345
 15902  029F  2A5C               	goto	l7345
 15903  02A0  0008               	return
 15904  02A1                     __end_of_menu_Main:	
 15905                           
 15906                           	psect	text16
 15907  081C                     __ptext16:	
 15908 ;; *************** function _flashy_Main *****************
 15909 ;; Defined at:
 15910 ;;		line 106 in file "flashy_task.c"
 15911 ;; Parameters:    Size  Location     Type
 15912 ;;  taskData        2   50[BANK0 ] PTR void 
 15913 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15914 ;;		 -> flashy_TaskData(30), NULL(0), 
 15915 ;; Auto vars:     Size  Location     Type
 15916 ;;  hit_counter     6   54[BANK0 ] unsigned char [6]
 15917 ;;  data            2   62[BANK0 ] PTR struct t_flashy_task
 15918 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15919 ;;		 -> flashy_TaskData(30), NULL(0), 
 15920 ;;  buttonPresse    2   60[BANK0 ] unsigned int 
 15921 ;; Return value:  Size  Location     Type
 15922 ;;                  1    wreg      void 
 15923 ;; Registers used:
 15924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15925 ;; Tracked objects:
 15926 ;;		On entry : 0/0
 15927 ;;		On exit  : 0/0
 15928 ;;		Unchanged: 0/0
 15929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15930 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15931 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15933 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15934 ;;Total ram usage:       14 bytes
 15935 ;; Hardware stack levels used:    1
 15936 ;; Hardware stack levels required when called:   11
 15937 ;; This function calls:
 15938 ;;		_flashy_display_option
 15939 ;;		_led_Parody
 15940 ;;		_led_circle
 15941 ;;		_led_curtain
 15942 ;;		_led_rand
 15943 ;;		_led_roundabout
 15944 ;;		_let_alternate
 15945 ;;		_marquee
 15946 ;;		_nullifyBadge_buttonsGet
 15947 ;;		_nullifyBadge_irGet
 15948 ;;		_nullifyBadge_irTxClr
 15949 ;;		_nullifyBadge_irTxRegister
 15950 ;;		_nullifyBadge_irTxRelease
 15951 ;;		_nullifyBadge_irTxSet
 15952 ;;		_nullifyBadge_segDisplayForceUpdate
 15953 ;;		_nullifyBadge_segDisplayPutStr
 15954 ;;		_nullifyBadge_userLedsSet
 15955 ;;		_sprintf
 15956 ;; This function is called by:
 15957 ;;		_main
 15958 ;;		_scheduler_TaskRun
 15959 ;; This function uses a non-reentrant model
 15960 ;;
 15961                           
 15962                           
 15963                           ;psect for function _flashy_Main
 15964  081C                     _flashy_Main:	
 15965                           
 15966                           ;flashy_task.c: 107: struct t_flashy_taskData *data = (struct t_flashy_taskData *) taskD
      +                          ata;
 15967                           
 15968                           ;incstack = 0
 15969                           ; Regs used in _flashy_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15970  081C  0020               	movlb	0	; select bank0
 15971  081D  0853               	movf	flashy_Main@taskData+1,w
 15972  081E  00DF               	movwf	flashy_Main@data+1
 15973  081F  0852               	movf	flashy_Main@taskData,w
 15974  0820  00DE               	movwf	flashy_Main@data
 15975                           
 15976                           ;flashy_task.c: 108: u16 buttonPressed;
 15977                           ;flashy_task.c: 109: char hit_counter[6];
 15978                           ;flashy_task.c: 111: if ( currentTask != FLASHY_TASK ){
 15979  0821  3002               	movlw	2
 15980  0822  0021               	movlb	1	; select bank1
 15981  0823  0638               	xorwf	_currentTask^(0+128),w
 15982  0824  0439               	iorwf	(_currentTask+1)^(0+128),w
 15983  0825  1903               	btfsc	3,2
 15984  0826  28C9               	goto	l7395
 15985                           
 15986                           ;flashy_task.c: 112: data->holdCountA = 1;
 15987  0827  0020               	movlb	0	; select bank0
 15988  0828  085E               	movf	flashy_Main@data,w
 15989  0829  0086               	movwf	6
 15990  082A  085F               	movf	flashy_Main@data+1,w
 15991  082B  0087               	movwf	7
 15992  082C  314A               	addfsr 1,10
 15993  082D  3001               	movlw	1
 15994  082E  3FC0               	movwi [0]fsr1
 15995  082F  3000               	movlw	0
 15996  0830  3FC1               	movwi [1]fsr1
 15997                           
 15998                           ;flashy_task.c: 113: data->holdCountB = 1;
 15999  0831  085E               	movf	flashy_Main@data,w
 16000  0832  0086               	movwf	6
 16001  0833  085F               	movf	flashy_Main@data+1,w
 16002  0834  0087               	movwf	7
 16003  0835  314C               	addfsr 1,12
 16004  0836  3001               	movlw	1
 16005  0837  3FC0               	movwi [0]fsr1
 16006  0838  3000               	movlw	0
 16007  0839  3FC1               	movwi [1]fsr1
 16008                           
 16009                           ;flashy_task.c: 114: data->holdCountX = 1;
 16010  083A  085E               	movf	flashy_Main@data,w
 16011  083B  0086               	movwf	6
 16012  083C  085F               	movf	flashy_Main@data+1,w
 16013  083D  0087               	movwf	7
 16014  083E  314E               	addfsr 1,14
 16015  083F  3001               	movlw	1
 16016  0840  3FC0               	movwi [0]fsr1
 16017  0841  3000               	movlw	0
 16018  0842  3FC1               	movwi [1]fsr1
 16019                           
 16020                           ;flashy_task.c: 115: data->holdCountY = 1;
 16021  0843  085E               	movf	flashy_Main@data,w
 16022  0844  0086               	movwf	6
 16023  0845  085F               	movf	flashy_Main@data+1,w
 16024  0846  0087               	movwf	7
 16025  0847  3150               	addfsr 1,16
 16026  0848  3001               	movlw	1
 16027  0849  3FC0               	movwi [0]fsr1
 16028  084A  3000               	movlw	0
 16029  084B  3FC1               	movwi [1]fsr1
 16030                           
 16031                           ;flashy_task.c: 116: data->holdCountXY = 1;
 16032  084C  085E               	movf	flashy_Main@data,w
 16033  084D  0086               	movwf	6
 16034  084E  085F               	movf	flashy_Main@data+1,w
 16035  084F  0087               	movwf	7
 16036  0850  3152               	addfsr 1,18
 16037  0851  3001               	movlw	1
 16038  0852  3FC0               	movwi [0]fsr1
 16039  0853  3000               	movlw	0
 16040  0854  3FC1               	movwi [1]fsr1
 16041                           
 16042                           ;flashy_task.c: 117: data->holdCountAY = 1;
 16043  0855  085E               	movf	flashy_Main@data,w
 16044  0856  0086               	movwf	6
 16045  0857  085F               	movf	flashy_Main@data+1,w
 16046  0858  0087               	movwf	7
 16047  0859  3154               	addfsr 1,20
 16048  085A  3001               	movlw	1
 16049  085B  3FC0               	movwi [0]fsr1
 16050  085C  3000               	movlw	0
 16051  085D  3FC1               	movwi [1]fsr1
 16052                           
 16053                           ;flashy_task.c: 118: data->holdCountAX = 1;
 16054  085E  085E               	movf	flashy_Main@data,w
 16055  085F  0086               	movwf	6
 16056  0860  085F               	movf	flashy_Main@data+1,w
 16057  0861  0087               	movwf	7
 16058  0862  3156               	addfsr 1,22
 16059  0863  3001               	movlw	1
 16060  0864  3FC0               	movwi [0]fsr1
 16061  0865  3000               	movlw	0
 16062  0866  3FC1               	movwi [1]fsr1
 16063                           
 16064                           ;flashy_task.c: 119: return;
 16065  0867  0008               	return
 16066  0868                     l7367:	
 16067                           ;flashy_task.c: 126: case SECRET_VALUE_TEST:
 16068                           
 16069                           ;flashy_task.c: 125: break;
 16070                           
 16071                           ;flashy_task.c: 124: case SECRET_VALUE_INIT:
 16072                           
 16073                           ;flashy_task.c: 120: }
 16074                           ;flashy_task.c: 123: switch (secret_value){
 16075                           
 16076                           
 16077                           ;flashy_task.c: 127: secret_value = SECRET_VALUE_INIT;
 16078  0868  0021               	movlb	1	; select bank1
 16079  0869  01DC               	clrf	_secret_value^(0+128)
 16080  086A  01DD               	clrf	(_secret_value+1)^(0+128)
 16081                           
 16082                           ;flashy_task.c: 128: data->displayTickCount = 0;
 16083  086B  0020               	movlb	0	; select bank0
 16084  086C  085E               	movf	flashy_Main@data,w
 16085  086D  0086               	movwf	6
 16086  086E  085F               	movf	flashy_Main@data+1,w
 16087  086F  0087               	movwf	7
 16088  0870  3144               	addfsr 1,4
 16089  0871  3000               	movlw	0
 16090  0872  3FC0               	movwi [0]fsr1
 16091  0873  3FC1               	movwi [1]fsr1
 16092                           
 16093                           ;flashy_task.c: 129: data->display_state = FLASHY_STATE_DISPLAY_SECRET_TEST;
 16094  0874  085E               	movf	flashy_Main@data,w
 16095  0875  3E06               	addlw	6
 16096  0876  00D4               	movwf	??_flashy_Main
 16097  0877  3000               	movlw	0
 16098  0878  3D5F               	addwfc	flashy_Main@data+1,w
 16099  0879  00D5               	movwf	??_flashy_Main+1
 16100  087A  0854               	movf	??_flashy_Main,w
 16101  087B  0086               	movwf	6
 16102  087C  0855               	movf	??_flashy_Main+1,w
 16103  087D  0087               	movwf	7
 16104  087E  3005               	movlw	5
 16105  087F  0081               	movwf	1
 16106                           
 16107                           ;flashy_task.c: 131: data->holdCountA = 1;
 16108  0880  085E               	movf	flashy_Main@data,w
 16109  0881  0086               	movwf	6
 16110  0882  085F               	movf	flashy_Main@data+1,w
 16111  0883  0087               	movwf	7
 16112  0884  314A               	addfsr 1,10
 16113  0885  3001               	movlw	1
 16114  0886  3FC0               	movwi [0]fsr1
 16115  0887  3000               	movlw	0
 16116  0888  3FC1               	movwi [1]fsr1
 16117                           
 16118                           ;flashy_task.c: 132: data->holdCountB = 1;
 16119  0889  085E               	movf	flashy_Main@data,w
 16120  088A  0086               	movwf	6
 16121  088B  085F               	movf	flashy_Main@data+1,w
 16122  088C  0087               	movwf	7
 16123  088D  314C               	addfsr 1,12
 16124  088E  3001               	movlw	1
 16125  088F  3FC0               	movwi [0]fsr1
 16126  0890  3000               	movlw	0
 16127  0891  3FC1               	movwi [1]fsr1
 16128                           
 16129                           ;flashy_task.c: 133: data->holdCountX = 1;
 16130  0892  085E               	movf	flashy_Main@data,w
 16131  0893  0086               	movwf	6
 16132  0894  085F               	movf	flashy_Main@data+1,w
 16133  0895  0087               	movwf	7
 16134  0896  314E               	addfsr 1,14
 16135  0897  3001               	movlw	1
 16136  0898  3FC0               	movwi [0]fsr1
 16137  0899  3000               	movlw	0
 16138  089A  3FC1               	movwi [1]fsr1
 16139                           
 16140                           ;flashy_task.c: 134: data->holdCountY = 1;
 16141  089B  085E               	movf	flashy_Main@data,w
 16142  089C  0086               	movwf	6
 16143  089D  085F               	movf	flashy_Main@data+1,w
 16144  089E  0087               	movwf	7
 16145  089F  3150               	addfsr 1,16
 16146  08A0  3001               	movlw	1
 16147  08A1  3FC0               	movwi [0]fsr1
 16148  08A2  3000               	movlw	0
 16149  08A3  3FC1               	movwi [1]fsr1
 16150                           
 16151                           ;flashy_task.c: 135: data->holdCountXY = 1;
 16152  08A4  085E               	movf	flashy_Main@data,w
 16153  08A5  0086               	movwf	6
 16154  08A6  085F               	movf	flashy_Main@data+1,w
 16155  08A7  0087               	movwf	7
 16156  08A8  3152               	addfsr 1,18
 16157  08A9  3001               	movlw	1
 16158  08AA  3FC0               	movwi [0]fsr1
 16159  08AB  3000               	movlw	0
 16160  08AC  3FC1               	movwi [1]fsr1
 16161                           
 16162                           ;flashy_task.c: 136: data->holdCountAY = 1;
 16163  08AD  085E               	movf	flashy_Main@data,w
 16164  08AE  0086               	movwf	6
 16165  08AF  085F               	movf	flashy_Main@data+1,w
 16166  08B0  0087               	movwf	7
 16167  08B1  3154               	addfsr 1,20
 16168  08B2  3001               	movlw	1
 16169  08B3  3FC0               	movwi [0]fsr1
 16170  08B4  3000               	movlw	0
 16171  08B5  3FC1               	movwi [1]fsr1
 16172                           
 16173                           ;flashy_task.c: 137: data->holdCountAX = 1;
 16174  08B6  085E               	movf	flashy_Main@data,w
 16175  08B7  0086               	movwf	6
 16176  08B8  085F               	movf	flashy_Main@data+1,w
 16177  08B9  0087               	movwf	7
 16178  08BA  3156               	addfsr 1,22
 16179  08BB  3001               	movlw	1
 16180  08BC  3FC0               	movwi [0]fsr1
 16181  08BD  3000               	movlw	0
 16182  08BE  3FC1               	movwi [1]fsr1
 16183                           
 16184                           ;flashy_task.c: 138: data->noholdCount = 1;
 16185  08BF  085E               	movf	flashy_Main@data,w
 16186  08C0  0086               	movwf	6
 16187  08C1  085F               	movf	flashy_Main@data+1,w
 16188  08C2  0087               	movwf	7
 16189  08C3  315C               	addfsr 1,28
 16190  08C4  3001               	movlw	1
 16191  08C5  3FC0               	movwi [0]fsr1
 16192  08C6  3000               	movlw	0
 16193  08C7  3FC1               	movwi [1]fsr1
 16194                           
 16195                           ;flashy_task.c: 139: return;
 16196  08C8  0008               	return
 16197  08C9                     l7395:	
 16198                           ;flashy_task.c: 141: }
 16199                           
 16200                           ;flashy_task.c: 140: break;
 16201                           
 16202                           
 16203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16204                           ; Switch size 1, requested type "space"
 16205                           ; Number of cases is 1, Range of values is 0 to 0
 16206                           ; switch strategies available:
 16207                           ; Name         Instructions Cycles
 16208                           ; simple_byte            4     3 (average)
 16209                           ; direct_byte            8     6 (fixed)
 16210                           ; jumptable            260     6 (fixed)
 16211                           ;	Chosen strategy is simple_byte
 16212  08C9  0021               	movlb	1	; select bank1
 16213  08CA  085D               	movf	(_secret_value+1)^(0+128),w
 16214  08CB  3A00               	xorlw	0	; case 0
 16215  08CC  1903               	skipnz
 16216  08CD  28CF               	goto	l8755
 16217  08CE  29C7               	goto	l7465
 16218  08CF                     l8755:	
 16219                           
 16220                           ; Switch size 1, requested type "space"
 16221                           ; Number of cases is 2, Range of values is 0 to 1
 16222                           ; switch strategies available:
 16223                           ; Name         Instructions Cycles
 16224                           ; simple_byte            7     4 (average)
 16225                           ; direct_byte           10     6 (fixed)
 16226                           ; jumptable            260     6 (fixed)
 16227                           ;	Chosen strategy is simple_byte
 16228  08CF  085C               	movf	_secret_value^(0+128),w
 16229  08D0  3A00               	xorlw	0	; case 0
 16230  08D1  1903               	skipnz
 16231  08D2  29C7               	goto	l7465
 16232  08D3  3A01               	xorlw	1	; case 1
 16233  08D4  1903               	skipnz
 16234  08D5  2868               	goto	l7367
 16235  08D6  29C7               	goto	l7465
 16236                           
 16237                           ;flashy_task.c: 144: switch (data->led_state){
 16238  08D7  29C7               	goto	l7465
 16239  08D8                     l7397:	
 16240                           ;flashy_task.c: 145: case FLASHY_STATE_LED_ROUNDABOUT:
 16241                           
 16242                           
 16243                           ;flashy_task.c: 146: if (data->delayTickCount == 0){
 16244  08D8  0020               	movlb	0	; select bank0
 16245  08D9  085E               	movf	flashy_Main@data,w
 16246  08DA  0086               	movwf	6
 16247  08DB  085F               	movf	flashy_Main@data+1,w
 16248  08DC  0087               	movwf	7
 16249  08DD  3141               	addfsr 1,1
 16250  08DE  0016               	moviw fsr1++
 16251  08DF  0401               	iorwf	1,w
 16252  08E0  1D03               	btfss	3,2
 16253  08E1  29BB               	goto	L8
 16254                           
 16255                           ;flashy_task.c: 147: led_roundabout(flashy_leds_idx);
 16256  08E2  0021               	movlb	1	; select bank1
 16257  08E3  0831               	movf	(_flashy_leds_idx+1)^(0+128),w
 16258  08E4  0020               	movlb	0	; select bank0
 16259  08E5  00B1               	movwf	led_roundabout@counter+1
 16260  08E6  0021               	movlb	1	; select bank1
 16261  08E7  0830               	movf	_flashy_leds_idx^(0+128),w
 16262  08E8  0020               	movlb	0	; select bank0
 16263  08E9  00B0               	movwf	led_roundabout@counter
 16264  08EA  319B  2326  3188   	fcall	_led_roundabout
 16265                           
 16266                           ;flashy_task.c: 148: flashy_leds_idx += 1;
 16267  08ED  3001               	movlw	1
 16268  08EE  0021               	movlb	1	; select bank1
 16269  08EF  07B0               	addwf	_flashy_leds_idx^(0+128),f
 16270  08F0  3000               	movlw	0
 16271  08F1  3DB1               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 16272                           
 16273                           ;flashy_task.c: 149: data->delayTickCount = 35;
 16274  08F2  0020               	movlb	0	; select bank0
 16275  08F3  085E               	movf	flashy_Main@data,w
 16276  08F4  0086               	movwf	6
 16277  08F5  085F               	movf	flashy_Main@data+1,w
 16278  08F6  0087               	movwf	7
 16279  08F7  3141               	addfsr 1,1
 16280  08F8  3023               	movlw	35
 16281  08F9  3FC0               	movwi [0]fsr1
 16282  08FA  3000               	movlw	0
 16283  08FB  3FC1               	movwi [1]fsr1
 16284                           
 16285                           ;flashy_task.c: 150: }
 16286  08FC  2A5E               	goto	l7495
 16287  08FD                     l7407:	
 16288                           ;flashy_task.c: 155: case FLASHY_STATE_LED_SHOT:
 16289                           
 16290                           ;flashy_task.c: 153: }
 16291                           ;flashy_task.c: 154: break;
 16292                           
 16293                           ;flashy_task.c: 151: else {
 16294                           ;flashy_task.c: 152: data->delayTickCount -= 1;
 16295                           
 16296                           
 16297                           ;flashy_task.c: 156: if (data->delayTickCount == 0){
 16298  08FD  085E               	movf	flashy_Main@data,w
 16299  08FE  0086               	movwf	6
 16300  08FF  085F               	movf	flashy_Main@data+1,w
 16301  0900  0087               	movwf	7
 16302  0901  3141               	addfsr 1,1
 16303  0902  0016               	moviw fsr1++
 16304  0903  0401               	iorwf	1,w
 16305  0904  1D03               	btfss	3,2
 16306  0905  29BB               	goto	L8
 16307                           
 16308                           ;flashy_task.c: 157: led_curtain(flashy_leds_idx);
 16309  0906  0021               	movlb	1	; select bank1
 16310  0907  0831               	movf	(_flashy_leds_idx+1)^(0+128),w
 16311  0908  0020               	movlb	0	; select bank0
 16312  0909  00B1               	movwf	led_curtain@counter+1
 16313  090A  0021               	movlb	1	; select bank1
 16314  090B  0830               	movf	_flashy_leds_idx^(0+128),w
 16315  090C  0020               	movlb	0	; select bank0
 16316  090D  00B0               	movwf	led_curtain@counter
 16317  090E  319A  22E5  3188   	fcall	_led_curtain
 16318                           
 16319                           ;flashy_task.c: 158: flashy_leds_idx += 1;
 16320  0911  3001               	movlw	1
 16321  0912  0021               	movlb	1	; select bank1
 16322  0913  07B0               	addwf	_flashy_leds_idx^(0+128),f
 16323  0914  3000               	movlw	0
 16324  0915  3DB1               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 16325                           
 16326                           ;flashy_task.c: 159: data->delayTickCount = 5;
 16327  0916  0020               	movlb	0	; select bank0
 16328  0917  085E               	movf	flashy_Main@data,w
 16329  0918  0086               	movwf	6
 16330  0919  085F               	movf	flashy_Main@data+1,w
 16331  091A  0087               	movwf	7
 16332  091B  3141               	addfsr 1,1
 16333  091C  3005               	movlw	5
 16334  091D  3FC0               	movwi [0]fsr1
 16335  091E  3000               	movlw	0
 16336  091F  3FC1               	movwi [1]fsr1
 16337                           
 16338                           ;flashy_task.c: 160: }
 16339  0920  2A5E               	goto	l7495
 16340  0921                     l7417:	
 16341                           ;flashy_task.c: 165: case FLASHY_STATE_SPARKLE:
 16342                           
 16343                           ;flashy_task.c: 163: }
 16344                           ;flashy_task.c: 164: break;
 16345                           
 16346                           ;flashy_task.c: 161: else {
 16347                           ;flashy_task.c: 162: data->delayTickCount -= 1;
 16348                           
 16349                           
 16350                           ;flashy_task.c: 166: if (data->delayTickCount < 1){
 16351  0921  085E               	movf	flashy_Main@data,w
 16352  0922  0086               	movwf	6
 16353  0923  085F               	movf	flashy_Main@data+1,w
 16354  0924  0087               	movwf	7
 16355  0925  3141               	addfsr 1,1
 16356  0926  0016               	moviw fsr1++
 16357  0927  0401               	iorwf	1,w
 16358  0928  1D03               	btfss	3,2
 16359  0929  29BA               	goto	l7461
 16360                           
 16361                           ;flashy_task.c: 167: led_rand();
 16362  092A  319C  2433  3188   	fcall	_led_rand
 16363                           
 16364                           ;flashy_task.c: 168: data->delayTickCount = flashy_sparkle_rate;
 16365  092D  0020               	movlb	0	; select bank0
 16366  092E  085E               	movf	flashy_Main@data,w
 16367  092F  0086               	movwf	6
 16368  0930  085F               	movf	flashy_Main@data+1,w
 16369  0931  0087               	movwf	7
 16370  0932  3141               	addfsr 1,1
 16371  0933  0021               	movlb	1	; select bank1
 16372  0934  082C               	movf	_flashy_sparkle_rate^(0+128),w
 16373  0935  3FC0               	movwi [0]fsr1
 16374  0936  082D               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 16375  0937  3FC1               	movwi [1]fsr1
 16376  0938  2A5E               	goto	l7495
 16377  0939                     l7425:	
 16378                           ;flashy_task.c: 174: case FLASHY_STATE_CIRCLE:
 16379                           
 16380                           ;flashy_task.c: 172: }
 16381                           ;flashy_task.c: 173: break;
 16382                           
 16383                           ;flashy_task.c: 170: else {
 16384                           ;flashy_task.c: 171: data->delayTickCount -= 1;
 16385                           
 16386                           ;flashy_task.c: 169: }
 16387                           
 16388                           
 16389                           ;flashy_task.c: 175: if (data->delayTickCount ==0 ){
 16390  0939  085E               	movf	flashy_Main@data,w
 16391  093A  0086               	movwf	6
 16392  093B  085F               	movf	flashy_Main@data+1,w
 16393  093C  0087               	movwf	7
 16394  093D  3141               	addfsr 1,1
 16395  093E  0016               	moviw fsr1++
 16396  093F  0401               	iorwf	1,w
 16397  0940  1D03               	btfss	3,2
 16398  0941  29BA               	goto	l7461
 16399                           
 16400                           ;flashy_task.c: 176: if (flashy_leds_idx == 1024 ){
 16401  0942  3004               	movlw	4
 16402  0943  0021               	movlb	1	; select bank1
 16403  0944  0631               	xorwf	(_flashy_leds_idx+1)^(0+128),w
 16404  0945  0430               	iorwf	_flashy_leds_idx^(0+128),w
 16405  0946  1D03               	btfss	3,2
 16406  0947  294C               	goto	l7431
 16407                           
 16408                           ;flashy_task.c: 177: flashy_leds_idx = flashy_leds_idx << 1;
 16409  0948  3530               	lslf	_flashy_leds_idx^(0+128),w
 16410  0949  00B0               	movwf	_flashy_leds_idx^(0+128)
 16411  094A  0D31               	rlf	(_flashy_leds_idx+1)^(0+128),w
 16412  094B  00B1               	movwf	(_flashy_leds_idx+1)^(0+128)
 16413  094C                     l7431:	
 16414                           
 16415                           ;flashy_task.c: 178: }
 16416                           ;flashy_task.c: 179: led_circle(flashy_leds_idx);
 16417  094C  0831               	movf	(_flashy_leds_idx+1)^(0+128),w
 16418  094D  0020               	movlb	0	; select bank0
 16419  094E  00B1               	movwf	led_circle@count+1
 16420  094F  0021               	movlb	1	; select bank1
 16421  0950  0830               	movf	_flashy_leds_idx^(0+128),w
 16422  0951  0020               	movlb	0	; select bank0
 16423  0952  00B0               	movwf	led_circle@count
 16424  0953  31A4  24F0  3188   	fcall	_led_circle
 16425                           
 16426                           ;flashy_task.c: 180: if (flashy_leds_idx < 1 ){
 16427  0956  0021               	movlb	1	; select bank1
 16428  0957  0830               	movf	_flashy_leds_idx^(0+128),w
 16429  0958  0431               	iorwf	(_flashy_leds_idx+1)^(0+128),w
 16430  0959  1D03               	btfss	3,2
 16431  095A  2960               	goto	l7437
 16432                           
 16433                           ;flashy_task.c: 181: flashy_leds_idx = 1;
 16434  095B  3001               	movlw	1
 16435  095C  00B0               	movwf	_flashy_leds_idx^(0+128)
 16436  095D  3000               	movlw	0
 16437  095E  00B1               	movwf	(_flashy_leds_idx^(0+128)+1)
 16438                           
 16439                           ;flashy_task.c: 182: break;
 16440  095F  2A5E               	goto	l7495
 16441  0960                     l7437:	
 16442                           
 16443                           ;flashy_task.c: 183: }
 16444                           ;flashy_task.c: 184: flashy_leds_idx = flashy_leds_idx << 1;
 16445  0960  3530               	lslf	_flashy_leds_idx^(0+128),w
 16446  0961  00B0               	movwf	_flashy_leds_idx^(0+128)
 16447  0962  0D31               	rlf	(_flashy_leds_idx+1)^(0+128),w
 16448  0963  00B1               	movwf	(_flashy_leds_idx+1)^(0+128)
 16449                           
 16450                           ;flashy_task.c: 186: data->delayTickCount = flashy_sparkle_rate;
 16451  0964  0020               	movlb	0	; select bank0
 16452  0965  085E               	movf	flashy_Main@data,w
 16453  0966  0086               	movwf	6
 16454  0967  085F               	movf	flashy_Main@data+1,w
 16455  0968  0087               	movwf	7
 16456  0969  3141               	addfsr 1,1
 16457  096A  0021               	movlb	1	; select bank1
 16458  096B  082C               	movf	_flashy_sparkle_rate^(0+128),w
 16459  096C  3FC0               	movwi [0]fsr1
 16460  096D  082D               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 16461  096E  3FC1               	movwi [1]fsr1
 16462  096F  2A5E               	goto	l7495
 16463  0970                     l7443:	
 16464                           ;flashy_task.c: 192: case FLASHY_STATE_LED_ALT:
 16465                           
 16466                           ;flashy_task.c: 190: }
 16467                           ;flashy_task.c: 191: break;
 16468                           
 16469                           ;flashy_task.c: 188: else {
 16470                           ;flashy_task.c: 189: data->delayTickCount -= 1;
 16471                           
 16472                           ;flashy_task.c: 187: }
 16473                           
 16474                           
 16475                           ;flashy_task.c: 193: if (data->delayTickCount == 0){
 16476  0970  085E               	movf	flashy_Main@data,w
 16477  0971  0086               	movwf	6
 16478  0972  085F               	movf	flashy_Main@data+1,w
 16479  0973  0087               	movwf	7
 16480  0974  3141               	addfsr 1,1
 16481  0975  0016               	moviw fsr1++
 16482  0976  0401               	iorwf	1,w
 16483  0977  1D03               	btfss	3,2
 16484  0978  29BA               	goto	l7461
 16485                           
 16486                           ;flashy_task.c: 194: let_alternate(flashy_leds_idx);
 16487  0979  0021               	movlb	1	; select bank1
 16488  097A  0831               	movf	(_flashy_leds_idx+1)^(0+128),w
 16489  097B  0020               	movlb	0	; select bank0
 16490  097C  00B1               	movwf	let_alternate@count+1
 16491  097D  0021               	movlb	1	; select bank1
 16492  097E  0830               	movf	_flashy_leds_idx^(0+128),w
 16493  097F  0020               	movlb	0	; select bank0
 16494  0980  00B0               	movwf	let_alternate@count
 16495  0981  31A6  264B  3188   	fcall	_let_alternate
 16496                           
 16497                           ;flashy_task.c: 195: flashy_leds_idx += 1;
 16498  0984  3001               	movlw	1
 16499  0985  0021               	movlb	1	; select bank1
 16500  0986  07B0               	addwf	_flashy_leds_idx^(0+128),f
 16501  0987  3000               	movlw	0
 16502  0988  3DB1               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 16503                           
 16504                           ;flashy_task.c: 196: data->delayTickCount = flashy_sparkle_rate;
 16505  0989  0020               	movlb	0	; select bank0
 16506  098A  085E               	movf	flashy_Main@data,w
 16507  098B  0086               	movwf	6
 16508  098C  085F               	movf	flashy_Main@data+1,w
 16509  098D  0087               	movwf	7
 16510  098E  3141               	addfsr 1,1
 16511  098F  0021               	movlb	1	; select bank1
 16512  0990  082C               	movf	_flashy_sparkle_rate^(0+128),w
 16513  0991  3FC0               	movwi [0]fsr1
 16514  0992  082D               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 16515  0993  3FC1               	movwi [1]fsr1
 16516  0994  2A5E               	goto	l7495
 16517  0995                     l7453:	
 16518                           ;flashy_task.c: 202: case FLASHY_STATE_LED_PARODY:
 16519                           
 16520                           ;flashy_task.c: 200: }
 16521                           ;flashy_task.c: 201: break;
 16522                           
 16523                           ;flashy_task.c: 198: else {
 16524                           ;flashy_task.c: 199: data->delayTickCount -= 1;
 16525                           
 16526                           ;flashy_task.c: 197: }
 16527                           
 16528                           
 16529                           ;flashy_task.c: 203: if (data->delayTickCount == 0){
 16530  0995  085E               	movf	flashy_Main@data,w
 16531  0996  0086               	movwf	6
 16532  0997  085F               	movf	flashy_Main@data+1,w
 16533  0998  0087               	movwf	7
 16534  0999  3141               	addfsr 1,1
 16535  099A  0016               	moviw fsr1++
 16536  099B  0401               	iorwf	1,w
 16537  099C  1D03               	btfss	3,2
 16538  099D  29BA               	goto	l7461
 16539                           
 16540                           ;flashy_task.c: 204: led_Parody(flashy_leds_idx);
 16541  099E  0021               	movlb	1	; select bank1
 16542  099F  0831               	movf	(_flashy_leds_idx+1)^(0+128),w
 16543  09A0  0020               	movlb	0	; select bank0
 16544  09A1  00B1               	movwf	led_Parody@count+1
 16545  09A2  0021               	movlb	1	; select bank1
 16546  09A3  0830               	movf	_flashy_leds_idx^(0+128),w
 16547  09A4  0020               	movlb	0	; select bank0
 16548  09A5  00B0               	movwf	led_Parody@count
 16549  09A6  3192  220A  3188   	fcall	_led_Parody
 16550                           
 16551                           ;flashy_task.c: 205: flashy_leds_idx += 1;
 16552  09A9  3001               	movlw	1
 16553  09AA  0021               	movlb	1	; select bank1
 16554  09AB  07B0               	addwf	_flashy_leds_idx^(0+128),f
 16555  09AC  3000               	movlw	0
 16556  09AD  3DB1               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 16557                           
 16558                           ;flashy_task.c: 206: data->delayTickCount = flashy_sparkle_rate;
 16559  09AE  0020               	movlb	0	; select bank0
 16560  09AF  085E               	movf	flashy_Main@data,w
 16561  09B0  0086               	movwf	6
 16562  09B1  085F               	movf	flashy_Main@data+1,w
 16563  09B2  0087               	movwf	7
 16564  09B3  3141               	addfsr 1,1
 16565  09B4  0021               	movlb	1	; select bank1
 16566  09B5  082C               	movf	_flashy_sparkle_rate^(0+128),w
 16567  09B6  3FC0               	movwi [0]fsr1
 16568  09B7  082D               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 16569  09B8  3FC1               	movwi [1]fsr1
 16570                           
 16571                           ;flashy_task.c: 207: }
 16572  09B9  2A5E               	goto	l7495
 16573  09BA                     l7461:	
 16574                           
 16575                           ;flashy_task.c: 208: else {
 16576                           ;flashy_task.c: 209: data->delayTickCount -= 1;
 16577  09BA  0020               	movlb	0	; select bank0
 16578  09BB                     L8:	
 16579  09BB  085E               	movf	flashy_Main@data,w
 16580  09BC  0086               	movwf	6
 16581  09BD  085F               	movf	flashy_Main@data+1,w
 16582  09BE  0087               	movwf	7
 16583  09BF  3141               	addfsr 1,1
 16584  09C0  3001               	movlw	1
 16585  09C1  0281               	subwf	1,f
 16586  09C2  3141               	addfsr 1,1
 16587  09C3  3000               	movlw	0
 16588  09C4  3B81               	subwfb	1,f
 16589  09C5  317F               	addfsr 1,-1
 16590                           
 16591                           ;flashy_task.c: 213: }
 16592                           
 16593                           ;flashy_task.c: 210: }
 16594                           ;flashy_task.c: 211: break;
 16595  09C6  2A5E               	goto	l7495
 16596  09C7                     l7465:	
 16597  09C7  0020               	movlb	0	; select bank0
 16598  09C8  085E               	movf	flashy_Main@data,w
 16599  09C9  0086               	movwf	6
 16600  09CA  085F               	movf	flashy_Main@data+1,w
 16601  09CB  0087               	movwf	7
 16602  09CC  3143               	addfsr 1,3
 16603  09CD  0801               	movf	1,w
 16604                           
 16605                           ; Switch size 1, requested type "space"
 16606                           ; Number of cases is 6, Range of values is 0 to 5
 16607                           ; switch strategies available:
 16608                           ; Name         Instructions Cycles
 16609                           ; direct_byte           18     6 (fixed)
 16610                           ; simple_byte           19    10 (average)
 16611                           ; jumptable            260     6 (fixed)
 16612                           ;	Chosen strategy is direct_byte
 16613  09CE  0084               	movwf	4
 16614  09CF  3006               	movlw	6
 16615  09D0  0204               	subwf	4,w
 16616  09D1  1803               	skipnc
 16617  09D2  2A5E               	goto	l7495
 16618  09D3  31A0               	movlp	high S8757
 16619  09D4  3504               	lslf	4,w
 16620  09D5  3E80               	addlw	low S8757
 16621  09D6  0082               	movwf	2
 16622                           
 16623                           ;flashy_task.c: 216: switch (data->display_state){
 16624  09D7  2A5E               	goto	l7495
 16625  09D8                     l7467:	
 16626                           ;flashy_task.c: 217: case FLASHY_STATE_DISPLAY_BLASTER:
 16627                           
 16628                           
 16629                           ;flashy_task.c: 218: nullifyBadge_segDisplayPutStr(data->badge, "PEW ");
 16630  09D8  3005               	movlw	low (STR_24| (0+32768))
 16631  09D9  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 16632  09DA  30A9               	movlw	high (STR_24| (0+32768))
 16633  09DB  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 16634  09DC  085E               	movf	flashy_Main@data,w
 16635  09DD  0086               	movwf	6
 16636  09DE  085F               	movf	flashy_Main@data+1,w
 16637  09DF  0087               	movwf	7
 16638  09E0  0801               	movf	1,w
 16639  09E1  3192  2200  3188   	fcall	_nullifyBadge_segDisplayPutStr
 16640                           
 16641                           ;flashy_task.c: 219: nullifyBadge_segDisplayForceUpdate(data->badge);
 16642  09E4  0020               	movlb	0	; select bank0
 16643  09E5  085E               	movf	flashy_Main@data,w
 16644  09E6  0086               	movwf	6
 16645  09E7  085F               	movf	flashy_Main@data+1,w
 16646  09E8  0087               	movwf	7
 16647  09E9  0801               	movf	1,w
 16648  09EA  31A4  24C5  3188   	fcall	_nullifyBadge_segDisplayForceUpdate
 16649  09ED  2A52               	goto	L11
 16650  09EE                     l7473:	
 16651                           ;flashy_task.c: 222: case FLASHY_STATE_DISPLAY_SHOT:
 16652                           
 16653                           ;flashy_task.c: 221: break;
 16654                           
 16655                           ;flashy_task.c: 220: data->displayTickCount += 1;
 16656                           
 16657                           
 16658                           ;flashy_task.c: 223: sprintf((char *)hit_counter, "%4d", deaths);
 16659  09EE  301E               	movlw	low (STR_25| (0+32768))
 16660  09EF  00A4               	movwf	sprintf@f
 16661  09F0  30A9               	movlw	high (STR_25| (0+32768))
 16662  09F1  00A5               	movwf	sprintf@f+1
 16663  09F2  0021               	movlb	1	; select bank1
 16664  09F3  0829               	movf	(_deaths+1)^(0+128),w
 16665  09F4  0020               	movlb	0	; select bank0
 16666  09F5  00A7               	movwf	?_sprintf+3
 16667  09F6  0021               	movlb	1	; select bank1
 16668  09F7  0828               	movf	_deaths^(0+128),w
 16669  09F8  0020               	movlb	0	; select bank0
 16670  09F9  00A6               	movwf	?_sprintf+2
 16671  09FA  3056               	movlw	(low (flashy_Main@hit_counter| 0))& (0+255)
 16672  09FB  3186  2628  3188   	fcall	_sprintf
 16673                           
 16674                           ;flashy_task.c: 225: nullifyBadge_segDisplayPutStr(data->badge, hit_counter);
 16675  09FE  3056               	movlw	low flashy_Main@hit_counter
 16676  09FF  0020               	movlb	0	; select bank0
 16677  0A00  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 16678  0A01  3000               	movlw	high flashy_Main@hit_counter
 16679  0A02  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 16680  0A03  085E               	movf	flashy_Main@data,w
 16681  0A04  0086               	movwf	6
 16682  0A05  085F               	movf	flashy_Main@data+1,w
 16683  0A06  0087               	movwf	7
 16684  0A07  0801               	movf	1,w
 16685  0A08  3192  2200  3188   	fcall	_nullifyBadge_segDisplayPutStr
 16686                           
 16687                           ;flashy_task.c: 226: nullifyBadge_segDisplayForceUpdate(data->badge);
 16688  0A0B  0020               	movlb	0	; select bank0
 16689  0A0C  085E               	movf	flashy_Main@data,w
 16690  0A0D  0086               	movwf	6
 16691  0A0E  085F               	movf	flashy_Main@data+1,w
 16692  0A0F  0087               	movwf	7
 16693  0A10  0801               	movf	1,w
 16694  0A11  31A4  24C5  3188   	fcall	_nullifyBadge_segDisplayForceUpdate
 16695                           
 16696                           ;flashy_task.c: 227: if (data->displayTickCount == 150){
 16697  0A14  0020               	movlb	0	; select bank0
 16698  0A15  085E               	movf	flashy_Main@data,w
 16699  0A16  0086               	movwf	6
 16700  0A17  085F               	movf	flashy_Main@data+1,w
 16701  0A18  0087               	movwf	7
 16702  0A19  3144               	addfsr 1,4
 16703  0A1A  0016               	moviw fsr1++
 16704  0A1B  3A96               	xorlw	150
 16705  0A1C  00D4               	movwf	??_flashy_Main
 16706  0A1D  0016               	moviw fsr1++
 16707  0A1E  04D4               	iorwf	??_flashy_Main,f
 16708  0A1F  1D03               	btfss	3,2
 16709  0A20  2A53               	goto	L10
 16710                           
 16711                           ;flashy_task.c: 228: data->displayTickCount = 0;
 16712  0A21  085E               	movf	flashy_Main@data,w
 16713  0A22  0086               	movwf	6
 16714  0A23  085F               	movf	flashy_Main@data+1,w
 16715  0A24  0087               	movwf	7
 16716  0A25  3144               	addfsr 1,4
 16717  0A26  3000               	movlw	0
 16718  0A27  3FC0               	movwi [0]fsr1
 16719  0A28  3FC1               	movwi [1]fsr1
 16720                           
 16721                           ;flashy_task.c: 229: data->display_state = 35;
 16722  0A29  085E               	movf	flashy_Main@data,w
 16723  0A2A  3E06               	addlw	6
 16724  0A2B  00D4               	movwf	??_flashy_Main
 16725  0A2C  3000               	movlw	0
 16726  0A2D  3D5F               	addwfc	flashy_Main@data+1,w
 16727  0A2E  00D5               	movwf	??_flashy_Main+1
 16728  0A2F  0854               	movf	??_flashy_Main,w
 16729  0A30  0086               	movwf	6
 16730  0A31  0855               	movf	??_flashy_Main+1,w
 16731  0A32  0087               	movwf	7
 16732  0A33  3023               	movlw	35
 16733  0A34  0081               	movwf	1
 16734  0A35  2A53               	goto	L10
 16735  0A36                     l7485:	
 16736                           ;flashy_task.c: 233: case FLASHY_STATE_DISPLAY_SECRET_TEST:
 16737                           
 16738                           ;flashy_task.c: 232: break;
 16739                           
 16740                           ;flashy_task.c: 230: }
 16741                           ;flashy_task.c: 231: data->displayTickCount += 1;
 16742                           
 16743                           
 16744                           ;flashy_task.c: 234: marquee(FLASHY_TEXT_SECRET_TEST, data->displayTickCount);
 16745  0A36  0021               	movlb	1	; select bank1
 16746  0A37  086A               	movf	(_FLASHY_TEXT_SECRET_TEST+1)^(0+128),w
 16747  0A38  0020               	movlb	0	; select bank0
 16748  0A39  00BB               	movwf	marquee@string+1
 16749  0A3A  0021               	movlb	1	; select bank1
 16750  0A3B  0869               	movf	_FLASHY_TEXT_SECRET_TEST^(0+128),w
 16751  0A3C  0020               	movlb	0	; select bank0
 16752  0A3D  00BA               	movwf	marquee@string
 16753  0A3E  085E               	movf	flashy_Main@data,w
 16754  0A3F  0086               	movwf	6
 16755  0A40  085F               	movf	flashy_Main@data+1,w
 16756  0A41  0087               	movwf	7
 16757  0A42  3144               	addfsr 1,4
 16758  0A43  3F40               	moviw [0]fsr1
 16759  0A44  00BC               	movwf	marquee@count
 16760  0A45  3F41               	moviw [1]fsr1
 16761  0A46  00BD               	movwf	marquee@count+1
 16762  0A47  3193  2350  3188   	fcall	_marquee
 16763  0A4A  2A52               	goto	L11
 16764  0A4B                     l7489:	
 16765                           ;flashy_task.c: 239: default:
 16766                           
 16767                           ;flashy_task.c: 237: case FLASHY_STATE_DISPLAY:
 16768                           
 16769                           ;flashy_task.c: 236: break;
 16770                           
 16771                           ;flashy_task.c: 235: data->displayTickCount += 1;
 16772                           
 16773                           
 16774                           ;flashy_task.c: 240: flashy_display_option(data);
 16775  0A4B  085F               	movf	flashy_Main@data+1,w
 16776  0A4C  00CD               	movwf	flashy_display_option@data+1
 16777  0A4D  085E               	movf	flashy_Main@data,w
 16778  0A4E  00CC               	movwf	flashy_display_option@data
 16779  0A4F  319E  267A  3188   	fcall	_flashy_display_option
 16780  0A52                     L11:	
 16781                           
 16782                           ;flashy_task.c: 241: data->displayTickCount += 1;
 16783  0A52  0020               	movlb	0	; select bank0
 16784  0A53                     L10:	
 16785  0A53  085E               	movf	flashy_Main@data,w
 16786  0A54  0086               	movwf	6
 16787  0A55  085F               	movf	flashy_Main@data+1,w
 16788  0A56  0087               	movwf	7
 16789  0A57  3144               	addfsr 1,4
 16790  0A58  3001               	movlw	1
 16791  0A59  0781               	addwf	1,f
 16792  0A5A  3141               	addfsr 1,1
 16793  0A5B  1803               	skipnc
 16794  0A5C  0A81               	incf	1,f
 16795                           
 16796                           ;flashy_task.c: 243: }
 16797                           
 16798                           ;flashy_task.c: 242: break;
 16799  0A5D  2A72               	goto	l7497
 16800  0A5E                     l7495:	
 16801  0A5E  0020               	movlb	0	; select bank0
 16802  0A5F  085E               	movf	flashy_Main@data,w
 16803  0A60  0086               	movwf	6
 16804  0A61  085F               	movf	flashy_Main@data+1,w
 16805  0A62  0087               	movwf	7
 16806  0A63  3146               	addfsr 1,6
 16807  0A64  0801               	movf	1,w
 16808                           
 16809                           ; Switch size 1, requested type "space"
 16810                           ; Number of cases is 4, Range of values is 0 to 5
 16811                           ; switch strategies available:
 16812                           ; Name         Instructions Cycles
 16813                           ; simple_byte           13     7 (average)
 16814                           ; direct_byte           18     6 (fixed)
 16815                           ; jumptable            260     6 (fixed)
 16816                           ;	Chosen strategy is simple_byte
 16817  0A65  3A00               	xorlw	0	; case 0
 16818  0A66  1903               	skipnz
 16819  0A67  2A4B               	goto	l7489
 16820  0A68  3A02               	xorlw	2	; case 2
 16821  0A69  1903               	skipnz
 16822  0A6A  29D8               	goto	l7467
 16823  0A6B  3A01               	xorlw	1	; case 3
 16824  0A6C  1903               	skipnz
 16825  0A6D  29EE               	goto	l7473
 16826  0A6E  3A06               	xorlw	6	; case 5
 16827  0A6F  1903               	skipnz
 16828  0A70  2A36               	goto	l7485
 16829  0A71  2A4B               	goto	l7489
 16830  0A72                     l7497:	
 16831                           
 16832                           ;flashy_task.c: 246: buttonPressed = nullifyBadge_buttonsGet();
 16833  0A72  3198  20F4  3188   	fcall	_nullifyBadge_buttonsGet
 16834  0A75  0020               	movlb	0	; select bank0
 16835  0A76  00D4               	movwf	??_flashy_Main
 16836  0A77  01D5               	clrf	??_flashy_Main+1
 16837  0A78  0854               	movf	??_flashy_Main,w
 16838  0A79  00DC               	movwf	flashy_Main@buttonPressed
 16839  0A7A  0855               	movf	??_flashy_Main+1,w
 16840  0A7B  00DD               	movwf	flashy_Main@buttonPressed+1
 16841                           
 16842                           ;flashy_task.c: 247: switch (buttonPressed) {
 16843  0A7C  2F36               	goto	l7757
 16844  0A7D                     l7499:	
 16845                           ;flashy_task.c: 248: case 4 | 8:
 16846                           
 16847                           
 16848                           ;flashy_task.c: 249: if (data->holdCountXY == 0 ){
 16849  0A7D  085E               	movf	flashy_Main@data,w
 16850  0A7E  0086               	movwf	6
 16851  0A7F  085F               	movf	flashy_Main@data+1,w
 16852  0A80  0087               	movwf	7
 16853  0A81  3152               	addfsr 1,18
 16854  0A82  0016               	moviw fsr1++
 16855  0A83  0401               	iorwf	1,w
 16856  0A84  1D03               	btfss	3,2
 16857  0A85  2A8C               	goto	l7503
 16858                           
 16859                           ;flashy_task.c: 251: data->display_state = FLASHY_STATE_DISPLAY;
 16860  0A86  085E               	movf	flashy_Main@data,w
 16861  0A87  0086               	movwf	6
 16862  0A88  085F               	movf	flashy_Main@data+1,w
 16863  0A89  0087               	movwf	7
 16864  0A8A  3146               	addfsr 1,6
 16865  0A8B  0181               	clrf	1
 16866  0A8C                     l7503:	
 16867                           
 16868                           ;flashy_task.c: 252: }
 16869                           ;flashy_task.c: 254: data->holdCountA = 0;
 16870  0A8C  085E               	movf	flashy_Main@data,w
 16871  0A8D  0086               	movwf	6
 16872  0A8E  085F               	movf	flashy_Main@data+1,w
 16873  0A8F  0087               	movwf	7
 16874  0A90  314A               	addfsr 1,10
 16875  0A91  3000               	movlw	0
 16876  0A92  3FC0               	movwi [0]fsr1
 16877  0A93  3FC1               	movwi [1]fsr1
 16878                           
 16879                           ;flashy_task.c: 255: data->holdCountB = 0;
 16880  0A94  085E               	movf	flashy_Main@data,w
 16881  0A95  0086               	movwf	6
 16882  0A96  085F               	movf	flashy_Main@data+1,w
 16883  0A97  0087               	movwf	7
 16884  0A98  314C               	addfsr 1,12
 16885  0A99  3000               	movlw	0
 16886  0A9A  3FC0               	movwi [0]fsr1
 16887  0A9B  3FC1               	movwi [1]fsr1
 16888                           
 16889                           ;flashy_task.c: 256: data->holdCountX = 0;
 16890  0A9C  085E               	movf	flashy_Main@data,w
 16891  0A9D  0086               	movwf	6
 16892  0A9E  085F               	movf	flashy_Main@data+1,w
 16893  0A9F  0087               	movwf	7
 16894  0AA0  314E               	addfsr 1,14
 16895  0AA1  3000               	movlw	0
 16896  0AA2  3FC0               	movwi [0]fsr1
 16897  0AA3  3FC1               	movwi [1]fsr1
 16898                           
 16899                           ;flashy_task.c: 257: data->holdCountY = 0;
 16900  0AA4  085E               	movf	flashy_Main@data,w
 16901  0AA5  0086               	movwf	6
 16902  0AA6  085F               	movf	flashy_Main@data+1,w
 16903  0AA7  0087               	movwf	7
 16904  0AA8  3150               	addfsr 1,16
 16905  0AA9  3000               	movlw	0
 16906  0AAA  3FC0               	movwi [0]fsr1
 16907  0AAB  3FC1               	movwi [1]fsr1
 16908                           
 16909                           ;flashy_task.c: 258: data->holdCountXY += 1;
 16910  0AAC  085E               	movf	flashy_Main@data,w
 16911  0AAD  0086               	movwf	6
 16912  0AAE  085F               	movf	flashy_Main@data+1,w
 16913  0AAF  0087               	movwf	7
 16914  0AB0  3152               	addfsr 1,18
 16915  0AB1  3001               	movlw	1
 16916  0AB2  0781               	addwf	1,f
 16917  0AB3  3141               	addfsr 1,1
 16918  0AB4  1803               	skipnc
 16919  0AB5  0A81               	incf	1,f
 16920                           
 16921                           ;flashy_task.c: 259: data->holdCountAY = 0;
 16922  0AB6  085E               	movf	flashy_Main@data,w
 16923  0AB7  0086               	movwf	6
 16924  0AB8  085F               	movf	flashy_Main@data+1,w
 16925  0AB9  0087               	movwf	7
 16926  0ABA  3154               	addfsr 1,20
 16927  0ABB  3000               	movlw	0
 16928  0ABC  3FC0               	movwi [0]fsr1
 16929  0ABD  3FC1               	movwi [1]fsr1
 16930                           
 16931                           ;flashy_task.c: 260: data->holdCountAX = 0;
 16932  0ABE  085E               	movf	flashy_Main@data,w
 16933  0ABF  0086               	movwf	6
 16934  0AC0  085F               	movf	flashy_Main@data+1,w
 16935  0AC1  0087               	movwf	7
 16936  0AC2  3156               	addfsr 1,22
 16937  0AC3  3000               	movlw	0
 16938  0AC4  3FC0               	movwi [0]fsr1
 16939  0AC5  3FC1               	movwi [1]fsr1
 16940                           
 16941                           ;flashy_task.c: 261: data->holdCountBX = 0;
 16942  0AC6  085E               	movf	flashy_Main@data,w
 16943  0AC7  0086               	movwf	6
 16944  0AC8  085F               	movf	flashy_Main@data+1,w
 16945  0AC9  0087               	movwf	7
 16946  0ACA  3158               	addfsr 1,24
 16947  0ACB  3000               	movlw	0
 16948  0ACC  3FC0               	movwi [0]fsr1
 16949  0ACD  3FC1               	movwi [1]fsr1
 16950                           
 16951                           ;flashy_task.c: 262: data->holdCountBY = 0;
 16952  0ACE  085E               	movf	flashy_Main@data,w
 16953  0ACF  0086               	movwf	6
 16954  0AD0  085F               	movf	flashy_Main@data+1,w
 16955  0AD1  0087               	movwf	7
 16956  0AD2  315A               	addfsr 1,26
 16957  0AD3  3000               	movlw	0
 16958  0AD4  3FC0               	movwi [0]fsr1
 16959  0AD5  3FC1               	movwi [1]fsr1
 16960                           
 16961                           ;flashy_task.c: 263: data->noholdCount = 0;
 16962  0AD6  085E               	movf	flashy_Main@data,w
 16963  0AD7  0086               	movwf	6
 16964  0AD8  085F               	movf	flashy_Main@data+1,w
 16965  0AD9  0087               	movwf	7
 16966  0ADA  315C               	addfsr 1,28
 16967  0ADB  3000               	movlw	0
 16968  0ADC  3FC0               	movwi [0]fsr1
 16969  0ADD  3FC1               	movwi [1]fsr1
 16970                           
 16971                           ;flashy_task.c: 264: break;
 16972  0ADE  2FC9               	goto	l7787
 16973  0ADF                     l7523:	
 16974                           ;flashy_task.c: 265: case 1 | 8:
 16975                           
 16976                           
 16977                           ;flashy_task.c: 266: if ( data->holdCountAY == 0 ){
 16978  0ADF  085E               	movf	flashy_Main@data,w
 16979  0AE0  0086               	movwf	6
 16980  0AE1  085F               	movf	flashy_Main@data+1,w
 16981  0AE2  0087               	movwf	7
 16982  0AE3  3154               	addfsr 1,20
 16983  0AE4  0016               	moviw fsr1++
 16984  0AE5  0401               	iorwf	1,w
 16985  0AE6  1D03               	btfss	3,2
 16986  0AE7  2AF8               	goto	l7529
 16987                           
 16988                           ;flashy_task.c: 267: if (flashy_sparkle_rate > 1000){
 16989  0AE8  3003               	movlw	3
 16990  0AE9  0021               	movlb	1	; select bank1
 16991  0AEA  022D               	subwf	(_flashy_sparkle_rate+1)^(0+128),w
 16992  0AEB  30E9               	movlw	233
 16993  0AEC  1903               	skipnz
 16994  0AED  022C               	subwf	_flashy_sparkle_rate^(0+128),w
 16995  0AEE  1C03               	skipc
 16996  0AEF  2AF4               	goto	l1122
 16997                           
 16998                           ;flashy_task.c: 268: flashy_sparkle_rate = 1000;
 16999  0AF0  30E8               	movlw	232
 17000  0AF1  00AC               	movwf	_flashy_sparkle_rate^(0+128)
 17001  0AF2  3003               	movlw	3
 17002  0AF3  00AD               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 17003  0AF4                     l1122:	
 17004                           
 17005                           ;flashy_task.c: 269: }
 17006                           ;flashy_task.c: 270: flashy_sparkle_rate += 5;
 17007  0AF4  3005               	movlw	5
 17008  0AF5  07AC               	addwf	_flashy_sparkle_rate^(0+128),f
 17009  0AF6  3000               	movlw	0
 17010  0AF7  3DAD               	addwfc	(_flashy_sparkle_rate+1)^(0+128),f
 17011  0AF8                     l7529:	
 17012                           
 17013                           ;flashy_task.c: 271: }
 17014                           ;flashy_task.c: 273: data->holdCountA = 0;
 17015  0AF8  0020               	movlb	0	; select bank0
 17016  0AF9  085E               	movf	flashy_Main@data,w
 17017  0AFA  0086               	movwf	6
 17018  0AFB  085F               	movf	flashy_Main@data+1,w
 17019  0AFC  0087               	movwf	7
 17020  0AFD  314A               	addfsr 1,10
 17021  0AFE  3000               	movlw	0
 17022  0AFF  3FC0               	movwi [0]fsr1
 17023  0B00  3FC1               	movwi [1]fsr1
 17024                           
 17025                           ;flashy_task.c: 274: data->holdCountB = 0;
 17026  0B01  085E               	movf	flashy_Main@data,w
 17027  0B02  0086               	movwf	6
 17028  0B03  085F               	movf	flashy_Main@data+1,w
 17029  0B04  0087               	movwf	7
 17030  0B05  314C               	addfsr 1,12
 17031  0B06  3000               	movlw	0
 17032  0B07  3FC0               	movwi [0]fsr1
 17033  0B08  3FC1               	movwi [1]fsr1
 17034                           
 17035                           ;flashy_task.c: 275: data->holdCountX = 0;
 17036  0B09  085E               	movf	flashy_Main@data,w
 17037  0B0A  0086               	movwf	6
 17038  0B0B  085F               	movf	flashy_Main@data+1,w
 17039  0B0C  0087               	movwf	7
 17040  0B0D  314E               	addfsr 1,14
 17041  0B0E  3000               	movlw	0
 17042  0B0F  3FC0               	movwi [0]fsr1
 17043  0B10  3FC1               	movwi [1]fsr1
 17044                           
 17045                           ;flashy_task.c: 276: data->holdCountY = 0;
 17046  0B11  085E               	movf	flashy_Main@data,w
 17047  0B12  0086               	movwf	6
 17048  0B13  085F               	movf	flashy_Main@data+1,w
 17049  0B14  0087               	movwf	7
 17050  0B15  3150               	addfsr 1,16
 17051  0B16  3000               	movlw	0
 17052  0B17  3FC0               	movwi [0]fsr1
 17053  0B18  3FC1               	movwi [1]fsr1
 17054                           
 17055                           ;flashy_task.c: 277: data->holdCountXY = 0;
 17056  0B19  085E               	movf	flashy_Main@data,w
 17057  0B1A  0086               	movwf	6
 17058  0B1B  085F               	movf	flashy_Main@data+1,w
 17059  0B1C  0087               	movwf	7
 17060  0B1D  3152               	addfsr 1,18
 17061  0B1E  3000               	movlw	0
 17062  0B1F  3FC0               	movwi [0]fsr1
 17063  0B20  3FC1               	movwi [1]fsr1
 17064                           
 17065                           ;flashy_task.c: 278: data->holdCountAY += 1;
 17066  0B21  085E               	movf	flashy_Main@data,w
 17067  0B22  0086               	movwf	6
 17068  0B23  085F               	movf	flashy_Main@data+1,w
 17069  0B24  0087               	movwf	7
 17070  0B25  3154               	addfsr 1,20
 17071  0B26  3001               	movlw	1
 17072  0B27  0781               	addwf	1,f
 17073  0B28  3141               	addfsr 1,1
 17074  0B29  1803               	skipnc
 17075  0B2A  0A81               	incf	1,f
 17076                           
 17077                           ;flashy_task.c: 279: data->holdCountAX = 0;
 17078  0B2B  085E               	movf	flashy_Main@data,w
 17079  0B2C  0086               	movwf	6
 17080  0B2D  085F               	movf	flashy_Main@data+1,w
 17081  0B2E  0087               	movwf	7
 17082  0B2F  3156               	addfsr 1,22
 17083  0B30  3000               	movlw	0
 17084  0B31  3FC0               	movwi [0]fsr1
 17085  0B32  3FC1               	movwi [1]fsr1
 17086                           
 17087                           ;flashy_task.c: 280: data->holdCountBX = 0;
 17088  0B33  085E               	movf	flashy_Main@data,w
 17089  0B34  0086               	movwf	6
 17090  0B35  085F               	movf	flashy_Main@data+1,w
 17091  0B36  0087               	movwf	7
 17092  0B37  3158               	addfsr 1,24
 17093  0B38  3000               	movlw	0
 17094  0B39  3FC0               	movwi [0]fsr1
 17095  0B3A  3FC1               	movwi [1]fsr1
 17096                           
 17097                           ;flashy_task.c: 281: data->holdCountBY = 0;
 17098  0B3B  085E               	movf	flashy_Main@data,w
 17099  0B3C  0086               	movwf	6
 17100  0B3D  085F               	movf	flashy_Main@data+1,w
 17101  0B3E  0087               	movwf	7
 17102  0B3F  315A               	addfsr 1,26
 17103  0B40  3000               	movlw	0
 17104  0B41  3FC0               	movwi [0]fsr1
 17105  0B42  3FC1               	movwi [1]fsr1
 17106                           
 17107                           ;flashy_task.c: 282: data->noholdCount = 0;
 17108  0B43  085E               	movf	flashy_Main@data,w
 17109  0B44  0086               	movwf	6
 17110  0B45  085F               	movf	flashy_Main@data+1,w
 17111  0B46  0087               	movwf	7
 17112  0B47  315C               	addfsr 1,28
 17113  0B48  3000               	movlw	0
 17114  0B49  3FC0               	movwi [0]fsr1
 17115  0B4A  3FC1               	movwi [1]fsr1
 17116                           
 17117                           ;flashy_task.c: 283: break;
 17118  0B4B  2FC9               	goto	l7787
 17119  0B4C                     l7549:	
 17120                           ;flashy_task.c: 284: case 1 | 4:
 17121                           
 17122                           
 17123                           ;flashy_task.c: 285: if ( data->holdCountAX == 0 ){
 17124  0B4C  085E               	movf	flashy_Main@data,w
 17125  0B4D  0086               	movwf	6
 17126  0B4E  085F               	movf	flashy_Main@data+1,w
 17127  0B4F  0087               	movwf	7
 17128  0B50  3156               	addfsr 1,22
 17129  0B51  0016               	moviw fsr1++
 17130  0B52  0401               	iorwf	1,w
 17131  0B53  1D03               	btfss	3,2
 17132  0B54  2B65               	goto	l7555
 17133                           
 17134                           ;flashy_task.c: 286: if (flashy_sparkle_rate < 5)
 17135  0B55  3000               	movlw	0
 17136  0B56  0021               	movlb	1	; select bank1
 17137  0B57  022D               	subwf	(_flashy_sparkle_rate+1)^(0+128),w
 17138  0B58  3005               	movlw	5
 17139  0B59  1903               	skipnz
 17140  0B5A  022C               	subwf	_flashy_sparkle_rate^(0+128),w
 17141  0B5B  1803               	skipnc
 17142  0B5C  2B61               	goto	l1125
 17143                           
 17144                           ;flashy_task.c: 287: flashy_sparkle_rate=5;
 17145  0B5D  3005               	movlw	5
 17146  0B5E  00AC               	movwf	_flashy_sparkle_rate^(0+128)
 17147  0B5F  3000               	movlw	0
 17148  0B60  00AD               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 17149  0B61                     l1125:	
 17150                           
 17151                           ;flashy_task.c: 288: flashy_sparkle_rate -= 5;
 17152  0B61  3005               	movlw	5
 17153  0B62  02AC               	subwf	_flashy_sparkle_rate^(0+128),f
 17154  0B63  3000               	movlw	0
 17155  0B64  3BAD               	subwfb	(_flashy_sparkle_rate+1)^(0+128),f
 17156  0B65                     l7555:	
 17157                           
 17158                           ;flashy_task.c: 289: }
 17159                           ;flashy_task.c: 291: data->holdCountA = 0;
 17160  0B65  0020               	movlb	0	; select bank0
 17161  0B66  085E               	movf	flashy_Main@data,w
 17162  0B67  0086               	movwf	6
 17163  0B68  085F               	movf	flashy_Main@data+1,w
 17164  0B69  0087               	movwf	7
 17165  0B6A  314A               	addfsr 1,10
 17166  0B6B  3000               	movlw	0
 17167  0B6C  3FC0               	movwi [0]fsr1
 17168  0B6D  3FC1               	movwi [1]fsr1
 17169                           
 17170                           ;flashy_task.c: 292: data->holdCountB = 0;
 17171  0B6E  085E               	movf	flashy_Main@data,w
 17172  0B6F  0086               	movwf	6
 17173  0B70  085F               	movf	flashy_Main@data+1,w
 17174  0B71  0087               	movwf	7
 17175  0B72  314C               	addfsr 1,12
 17176  0B73  3000               	movlw	0
 17177  0B74  3FC0               	movwi [0]fsr1
 17178  0B75  3FC1               	movwi [1]fsr1
 17179                           
 17180                           ;flashy_task.c: 293: data->holdCountX += 1;
 17181  0B76  085E               	movf	flashy_Main@data,w
 17182  0B77  0086               	movwf	6
 17183  0B78  085F               	movf	flashy_Main@data+1,w
 17184  0B79  0087               	movwf	7
 17185  0B7A  314E               	addfsr 1,14
 17186  0B7B  3001               	movlw	1
 17187  0B7C  0781               	addwf	1,f
 17188  0B7D  3141               	addfsr 1,1
 17189  0B7E  1803               	skipnc
 17190  0B7F  0A81               	incf	1,f
 17191                           
 17192                           ;flashy_task.c: 294: data->holdCountY = 0;
 17193  0B80  085E               	movf	flashy_Main@data,w
 17194  0B81  0086               	movwf	6
 17195  0B82  085F               	movf	flashy_Main@data+1,w
 17196  0B83  0087               	movwf	7
 17197  0B84  3150               	addfsr 1,16
 17198  0B85  3000               	movlw	0
 17199  0B86  3FC0               	movwi [0]fsr1
 17200  0B87  3FC1               	movwi [1]fsr1
 17201                           
 17202                           ;flashy_task.c: 295: data->holdCountXY = 0;
 17203  0B88  085E               	movf	flashy_Main@data,w
 17204  0B89  0086               	movwf	6
 17205  0B8A  085F               	movf	flashy_Main@data+1,w
 17206  0B8B  0087               	movwf	7
 17207  0B8C  3152               	addfsr 1,18
 17208  0B8D  3000               	movlw	0
 17209  0B8E  3FC0               	movwi [0]fsr1
 17210  0B8F  3FC1               	movwi [1]fsr1
 17211                           
 17212                           ;flashy_task.c: 296: data->holdCountAY = 0;
 17213  0B90  085E               	movf	flashy_Main@data,w
 17214  0B91  0086               	movwf	6
 17215  0B92  085F               	movf	flashy_Main@data+1,w
 17216  0B93  0087               	movwf	7
 17217  0B94  3154               	addfsr 1,20
 17218  0B95  3000               	movlw	0
 17219  0B96  3FC0               	movwi [0]fsr1
 17220  0B97  3FC1               	movwi [1]fsr1
 17221                           
 17222                           ;flashy_task.c: 297: data->holdCountAX += 1;
 17223  0B98  085E               	movf	flashy_Main@data,w
 17224  0B99  0086               	movwf	6
 17225  0B9A  085F               	movf	flashy_Main@data+1,w
 17226  0B9B  0087               	movwf	7
 17227  0B9C  3156               	addfsr 1,22
 17228  0B9D  3001               	movlw	1
 17229  0B9E  0781               	addwf	1,f
 17230  0B9F  3141               	addfsr 1,1
 17231  0BA0  1803               	skipnc
 17232  0BA1  0A81               	incf	1,f
 17233                           
 17234                           ;flashy_task.c: 298: data->holdCountBX = 0;
 17235  0BA2  085E               	movf	flashy_Main@data,w
 17236  0BA3  0086               	movwf	6
 17237  0BA4  085F               	movf	flashy_Main@data+1,w
 17238  0BA5  0087               	movwf	7
 17239  0BA6  3158               	addfsr 1,24
 17240  0BA7  3000               	movlw	0
 17241  0BA8  3FC0               	movwi [0]fsr1
 17242  0BA9  3FC1               	movwi [1]fsr1
 17243                           
 17244                           ;flashy_task.c: 299: data->holdCountBY = 0;
 17245  0BAA  085E               	movf	flashy_Main@data,w
 17246  0BAB  0086               	movwf	6
 17247  0BAC  085F               	movf	flashy_Main@data+1,w
 17248  0BAD  0087               	movwf	7
 17249  0BAE  315A               	addfsr 1,26
 17250  0BAF  3000               	movlw	0
 17251  0BB0  3FC0               	movwi [0]fsr1
 17252  0BB1  3FC1               	movwi [1]fsr1
 17253                           
 17254                           ;flashy_task.c: 300: data->noholdCount = 0;
 17255  0BB2  085E               	movf	flashy_Main@data,w
 17256  0BB3  0086               	movwf	6
 17257  0BB4  085F               	movf	flashy_Main@data+1,w
 17258  0BB5  0087               	movwf	7
 17259  0BB6  315C               	addfsr 1,28
 17260  0BB7  3000               	movlw	0
 17261  0BB8  3FC0               	movwi [0]fsr1
 17262  0BB9  3FC1               	movwi [1]fsr1
 17263                           
 17264                           ;flashy_task.c: 301: break;
 17265  0BBA  2FC9               	goto	l7787
 17266  0BBB                     l7575:	
 17267                           ;flashy_task.c: 302: case 2 | 8:
 17268                           
 17269                           
 17270                           ;flashy_task.c: 303: if (data->holdCountBY == 0){
 17271  0BBB  085E               	movf	flashy_Main@data,w
 17272  0BBC  0086               	movwf	6
 17273  0BBD  085F               	movf	flashy_Main@data+1,w
 17274  0BBE  0087               	movwf	7
 17275  0BBF  315A               	addfsr 1,26
 17276  0BC0  0016               	moviw fsr1++
 17277  0BC1  0401               	iorwf	1,w
 17278  0BC2  1D03               	btfss	3,2
 17279  0BC3  2BD8               	goto	l7585
 17280                           
 17281                           ;flashy_task.c: 304: if (flashy_option_idx == 0){
 17282  0BC4  0021               	movlb	1	; select bank1
 17283  0BC5  0826               	movf	_flashy_option_idx^(0+128),w
 17284  0BC6  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 17285  0BC7  1903               	btfsc	3,2
 17286  0BC8  2BD8               	goto	l7585
 17287                           
 17288                           ;flashy_task.c: 307: else {
 17289                           ;flashy_task.c: 308: if (flashy_scroll_rate > 150){
 17290                           
 17291                           ;flashy_task.c: 306: }
 17292  0BC9  3000               	movlw	0
 17293  0BCA  022B               	subwf	(_flashy_scroll_rate+1)^(0+128),w
 17294  0BCB  3097               	movlw	151
 17295  0BCC  1903               	skipnz
 17296  0BCD  022A               	subwf	_flashy_scroll_rate^(0+128),w
 17297  0BCE  1C03               	skipc
 17298  0BCF  2BD4               	goto	l1130
 17299                           
 17300                           ;flashy_task.c: 309: flashy_scroll_rate =150;
 17301  0BD0  3096               	movlw	150
 17302  0BD1  00AA               	movwf	_flashy_scroll_rate^(0+128)
 17303  0BD2  3000               	movlw	0
 17304  0BD3  00AB               	movwf	(_flashy_scroll_rate^(0+128)+1)
 17305  0BD4                     l1130:	
 17306                           
 17307                           ;flashy_task.c: 310: }
 17308                           ;flashy_task.c: 311: flashy_scroll_rate +=2;
 17309  0BD4  3002               	movlw	2
 17310  0BD5  07AA               	addwf	_flashy_scroll_rate^(0+128),f
 17311  0BD6  3000               	movlw	0
 17312  0BD7  3DAB               	addwfc	(_flashy_scroll_rate+1)^(0+128),f
 17313  0BD8                     l7585:	
 17314                           
 17315                           ;flashy_task.c: 312: }
 17316                           ;flashy_task.c: 314: }
 17317                           ;flashy_task.c: 315: data->holdCountA = 0;
 17318  0BD8  0020               	movlb	0	; select bank0
 17319  0BD9  085E               	movf	flashy_Main@data,w
 17320  0BDA  0086               	movwf	6
 17321  0BDB  085F               	movf	flashy_Main@data+1,w
 17322  0BDC  0087               	movwf	7
 17323  0BDD  314A               	addfsr 1,10
 17324  0BDE  3000               	movlw	0
 17325  0BDF  3FC0               	movwi [0]fsr1
 17326  0BE0  3FC1               	movwi [1]fsr1
 17327                           
 17328                           ;flashy_task.c: 316: data->holdCountB += 1;
 17329  0BE1  085E               	movf	flashy_Main@data,w
 17330  0BE2  0086               	movwf	6
 17331  0BE3  085F               	movf	flashy_Main@data+1,w
 17332  0BE4  0087               	movwf	7
 17333  0BE5  314C               	addfsr 1,12
 17334  0BE6  3001               	movlw	1
 17335  0BE7  0781               	addwf	1,f
 17336  0BE8  3141               	addfsr 1,1
 17337  0BE9  1803               	skipnc
 17338  0BEA  0A81               	incf	1,f
 17339                           
 17340                           ;flashy_task.c: 317: data->holdCountX = 0;
 17341  0BEB  085E               	movf	flashy_Main@data,w
 17342  0BEC  0086               	movwf	6
 17343  0BED  085F               	movf	flashy_Main@data+1,w
 17344  0BEE  0087               	movwf	7
 17345  0BEF  314E               	addfsr 1,14
 17346  0BF0  3000               	movlw	0
 17347  0BF1  3FC0               	movwi [0]fsr1
 17348  0BF2  3FC1               	movwi [1]fsr1
 17349                           
 17350                           ;flashy_task.c: 318: data->holdCountY += 1;
 17351  0BF3  085E               	movf	flashy_Main@data,w
 17352  0BF4  0086               	movwf	6
 17353  0BF5  085F               	movf	flashy_Main@data+1,w
 17354  0BF6  0087               	movwf	7
 17355  0BF7  3150               	addfsr 1,16
 17356  0BF8  3001               	movlw	1
 17357  0BF9  0781               	addwf	1,f
 17358  0BFA  3141               	addfsr 1,1
 17359  0BFB  1803               	skipnc
 17360  0BFC  0A81               	incf	1,f
 17361                           
 17362                           ;flashy_task.c: 319: data->holdCountXY = 0;
 17363  0BFD  085E               	movf	flashy_Main@data,w
 17364  0BFE  0086               	movwf	6
 17365  0BFF  085F               	movf	flashy_Main@data+1,w
 17366  0C00  0087               	movwf	7
 17367  0C01  3152               	addfsr 1,18
 17368  0C02  3000               	movlw	0
 17369  0C03  3FC0               	movwi [0]fsr1
 17370  0C04  3FC1               	movwi [1]fsr1
 17371                           
 17372                           ;flashy_task.c: 320: data->holdCountAY = 0;
 17373  0C05  085E               	movf	flashy_Main@data,w
 17374  0C06  0086               	movwf	6
 17375  0C07  085F               	movf	flashy_Main@data+1,w
 17376  0C08  0087               	movwf	7
 17377  0C09  3154               	addfsr 1,20
 17378  0C0A  3000               	movlw	0
 17379  0C0B  3FC0               	movwi [0]fsr1
 17380  0C0C  3FC1               	movwi [1]fsr1
 17381                           
 17382                           ;flashy_task.c: 321: data->holdCountAX = 0;
 17383  0C0D  085E               	movf	flashy_Main@data,w
 17384  0C0E  0086               	movwf	6
 17385  0C0F  085F               	movf	flashy_Main@data+1,w
 17386  0C10  0087               	movwf	7
 17387  0C11  3156               	addfsr 1,22
 17388  0C12  3000               	movlw	0
 17389  0C13  3FC0               	movwi [0]fsr1
 17390  0C14  3FC1               	movwi [1]fsr1
 17391                           
 17392                           ;flashy_task.c: 322: data->holdCountBX = 0;
 17393  0C15  085E               	movf	flashy_Main@data,w
 17394  0C16  0086               	movwf	6
 17395  0C17  085F               	movf	flashy_Main@data+1,w
 17396  0C18  0087               	movwf	7
 17397  0C19  3158               	addfsr 1,24
 17398  0C1A  3000               	movlw	0
 17399  0C1B  3FC0               	movwi [0]fsr1
 17400  0C1C  3FC1               	movwi [1]fsr1
 17401                           
 17402                           ;flashy_task.c: 323: data->holdCountBY += 1;
 17403  0C1D  085E               	movf	flashy_Main@data,w
 17404  0C1E  0086               	movwf	6
 17405  0C1F  085F               	movf	flashy_Main@data+1,w
 17406  0C20  0087               	movwf	7
 17407  0C21  315A               	addfsr 1,26
 17408  0C22  3001               	movlw	1
 17409  0C23  0781               	addwf	1,f
 17410  0C24  3141               	addfsr 1,1
 17411  0C25  1803               	skipnc
 17412  0C26  0A81               	incf	1,f
 17413                           
 17414                           ;flashy_task.c: 324: data->noholdCount = 0;
 17415  0C27  085E               	movf	flashy_Main@data,w
 17416  0C28  0086               	movwf	6
 17417  0C29  085F               	movf	flashy_Main@data+1,w
 17418  0C2A  0087               	movwf	7
 17419  0C2B  315C               	addfsr 1,28
 17420  0C2C  3000               	movlw	0
 17421  0C2D  3FC0               	movwi [0]fsr1
 17422  0C2E  3FC1               	movwi [1]fsr1
 17423                           
 17424                           ;flashy_task.c: 325: break;
 17425  0C2F  2FC9               	goto	l7787
 17426  0C30                     l7605:	
 17427                           ;flashy_task.c: 326: case 2 | 4:
 17428                           
 17429                           
 17430                           ;flashy_task.c: 327: if (data-> holdCountBX == 0){
 17431  0C30  085E               	movf	flashy_Main@data,w
 17432  0C31  0086               	movwf	6
 17433  0C32  085F               	movf	flashy_Main@data+1,w
 17434  0C33  0087               	movwf	7
 17435  0C34  3158               	addfsr 1,24
 17436  0C35  0016               	moviw fsr1++
 17437  0C36  0401               	iorwf	1,w
 17438  0C37  1D03               	btfss	3,2
 17439  0C38  2C4D               	goto	l7615
 17440                           
 17441                           ;flashy_task.c: 328: if (flashy_option_idx == 0){
 17442  0C39  0021               	movlb	1	; select bank1
 17443  0C3A  0826               	movf	_flashy_option_idx^(0+128),w
 17444  0C3B  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 17445  0C3C  1903               	btfsc	3,2
 17446  0C3D  2C4D               	goto	l7615
 17447                           
 17448                           ;flashy_task.c: 331: else {
 17449                           ;flashy_task.c: 332: if (flashy_scroll_rate < 5){
 17450                           
 17451                           ;flashy_task.c: 330: }
 17452  0C3E  3000               	movlw	0
 17453  0C3F  022B               	subwf	(_flashy_scroll_rate+1)^(0+128),w
 17454  0C40  3005               	movlw	5
 17455  0C41  1903               	skipnz
 17456  0C42  022A               	subwf	_flashy_scroll_rate^(0+128),w
 17457  0C43  1803               	skipnc
 17458  0C44  2C49               	goto	l1135
 17459                           
 17460                           ;flashy_task.c: 333: flashy_scroll_rate =5;
 17461  0C45  3005               	movlw	5
 17462  0C46  00AA               	movwf	_flashy_scroll_rate^(0+128)
 17463  0C47  3000               	movlw	0
 17464  0C48  00AB               	movwf	(_flashy_scroll_rate^(0+128)+1)
 17465  0C49                     l1135:	
 17466                           
 17467                           ;flashy_task.c: 334: }
 17468                           ;flashy_task.c: 335: flashy_scroll_rate -=3;
 17469  0C49  3003               	movlw	3
 17470  0C4A  02AA               	subwf	_flashy_scroll_rate^(0+128),f
 17471  0C4B  3000               	movlw	0
 17472  0C4C  3BAB               	subwfb	(_flashy_scroll_rate+1)^(0+128),f
 17473  0C4D                     l7615:	
 17474                           
 17475                           ;flashy_task.c: 336: }
 17476                           ;flashy_task.c: 338: }
 17477                           ;flashy_task.c: 339: data->holdCountA = 0;
 17478  0C4D  0020               	movlb	0	; select bank0
 17479  0C4E  085E               	movf	flashy_Main@data,w
 17480  0C4F  0086               	movwf	6
 17481  0C50  085F               	movf	flashy_Main@data+1,w
 17482  0C51  0087               	movwf	7
 17483  0C52  314A               	addfsr 1,10
 17484  0C53  3000               	movlw	0
 17485  0C54  3FC0               	movwi [0]fsr1
 17486  0C55  3FC1               	movwi [1]fsr1
 17487                           
 17488                           ;flashy_task.c: 340: data->holdCountB += 1;
 17489  0C56  085E               	movf	flashy_Main@data,w
 17490  0C57  0086               	movwf	6
 17491  0C58  085F               	movf	flashy_Main@data+1,w
 17492  0C59  0087               	movwf	7
 17493  0C5A  314C               	addfsr 1,12
 17494  0C5B  3001               	movlw	1
 17495  0C5C  0781               	addwf	1,f
 17496  0C5D  3141               	addfsr 1,1
 17497  0C5E  1803               	skipnc
 17498  0C5F  0A81               	incf	1,f
 17499                           
 17500                           ;flashy_task.c: 341: data->holdCountX += 1;
 17501  0C60  085E               	movf	flashy_Main@data,w
 17502  0C61  0086               	movwf	6
 17503  0C62  085F               	movf	flashy_Main@data+1,w
 17504  0C63  0087               	movwf	7
 17505  0C64  314E               	addfsr 1,14
 17506  0C65  3001               	movlw	1
 17507  0C66  0781               	addwf	1,f
 17508  0C67  3141               	addfsr 1,1
 17509  0C68  1803               	skipnc
 17510  0C69  0A81               	incf	1,f
 17511                           
 17512                           ;flashy_task.c: 342: data->holdCountY = 0;
 17513  0C6A  085E               	movf	flashy_Main@data,w
 17514  0C6B  0086               	movwf	6
 17515  0C6C  085F               	movf	flashy_Main@data+1,w
 17516  0C6D  0087               	movwf	7
 17517  0C6E  3150               	addfsr 1,16
 17518  0C6F  3000               	movlw	0
 17519  0C70  3FC0               	movwi [0]fsr1
 17520  0C71  3FC1               	movwi [1]fsr1
 17521                           
 17522                           ;flashy_task.c: 343: data->holdCountXY = 0;
 17523  0C72  085E               	movf	flashy_Main@data,w
 17524  0C73  0086               	movwf	6
 17525  0C74  085F               	movf	flashy_Main@data+1,w
 17526  0C75  0087               	movwf	7
 17527  0C76  3152               	addfsr 1,18
 17528  0C77  3000               	movlw	0
 17529  0C78  3FC0               	movwi [0]fsr1
 17530  0C79  3FC1               	movwi [1]fsr1
 17531                           
 17532                           ;flashy_task.c: 344: data->holdCountAY = 0;
 17533  0C7A  085E               	movf	flashy_Main@data,w
 17534  0C7B  0086               	movwf	6
 17535  0C7C  085F               	movf	flashy_Main@data+1,w
 17536  0C7D  0087               	movwf	7
 17537  0C7E  3154               	addfsr 1,20
 17538  0C7F  3000               	movlw	0
 17539  0C80  3FC0               	movwi [0]fsr1
 17540  0C81  3FC1               	movwi [1]fsr1
 17541                           
 17542                           ;flashy_task.c: 345: data->holdCountAX = 0;
 17543  0C82  085E               	movf	flashy_Main@data,w
 17544  0C83  0086               	movwf	6
 17545  0C84  085F               	movf	flashy_Main@data+1,w
 17546  0C85  0087               	movwf	7
 17547  0C86  3156               	addfsr 1,22
 17548  0C87  3000               	movlw	0
 17549  0C88  3FC0               	movwi [0]fsr1
 17550  0C89  3FC1               	movwi [1]fsr1
 17551                           
 17552                           ;flashy_task.c: 346: data->holdCountBX += 1;
 17553  0C8A  085E               	movf	flashy_Main@data,w
 17554  0C8B  0086               	movwf	6
 17555  0C8C  085F               	movf	flashy_Main@data+1,w
 17556  0C8D  0087               	movwf	7
 17557  0C8E  3158               	addfsr 1,24
 17558  0C8F  3001               	movlw	1
 17559  0C90  0781               	addwf	1,f
 17560  0C91  3141               	addfsr 1,1
 17561  0C92  1803               	skipnc
 17562  0C93  0A81               	incf	1,f
 17563                           
 17564                           ;flashy_task.c: 347: data->holdCountBY = 0;
 17565  0C94  085E               	movf	flashy_Main@data,w
 17566  0C95  0086               	movwf	6
 17567  0C96  085F               	movf	flashy_Main@data+1,w
 17568  0C97  0087               	movwf	7
 17569  0C98  315A               	addfsr 1,26
 17570  0C99  3000               	movlw	0
 17571  0C9A  3FC0               	movwi [0]fsr1
 17572  0C9B  3FC1               	movwi [1]fsr1
 17573                           
 17574                           ;flashy_task.c: 348: data->noholdCount = 0;
 17575  0C9C  085E               	movf	flashy_Main@data,w
 17576  0C9D  0086               	movwf	6
 17577  0C9E  085F               	movf	flashy_Main@data+1,w
 17578  0C9F  0087               	movwf	7
 17579  0CA0  315C               	addfsr 1,28
 17580  0CA1  3000               	movlw	0
 17581  0CA2  3FC0               	movwi [0]fsr1
 17582  0CA3  3FC1               	movwi [1]fsr1
 17583                           
 17584                           ;flashy_task.c: 349: break;
 17585  0CA4  2FC9               	goto	l7787
 17586  0CA5                     l7635:	
 17587                           ;flashy_task.c: 350: case 8:
 17588                           
 17589                           
 17590                           ;flashy_task.c: 352: if (data->holdCountY == 0 && data->blasterTickCount == 0){
 17591  0CA5  085E               	movf	flashy_Main@data,w
 17592  0CA6  0086               	movwf	6
 17593  0CA7  085F               	movf	flashy_Main@data+1,w
 17594  0CA8  0087               	movwf	7
 17595  0CA9  3150               	addfsr 1,16
 17596  0CAA  0016               	moviw fsr1++
 17597  0CAB  0401               	iorwf	1,w
 17598  0CAC  1D03               	btfss	3,2
 17599  0CAD  2CFB               	goto	l7653
 17600  0CAE  085E               	movf	flashy_Main@data,w
 17601  0CAF  0086               	movwf	6
 17602  0CB0  085F               	movf	flashy_Main@data+1,w
 17603  0CB1  0087               	movwf	7
 17604  0CB2  3147               	addfsr 1,7
 17605  0CB3  0016               	moviw fsr1++
 17606  0CB4  0401               	iorwf	1,w
 17607  0CB5  1D03               	btfss	3,2
 17608  0CB6  2CFB               	goto	l7653
 17609                           
 17610                           ;flashy_task.c: 354: nullifyBadge_userLedsSet(data->badge, 0x0);
 17611  0CB7  3000               	movlw	0
 17612  0CB8  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 17613  0CB9  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 17614  0CBA  085E               	movf	flashy_Main@data,w
 17615  0CBB  0086               	movwf	6
 17616  0CBC  085F               	movf	flashy_Main@data+1,w
 17617  0CBD  0087               	movwf	7
 17618  0CBE  0801               	movf	1,w
 17619  0CBF  31A5  2581  3188   	fcall	_nullifyBadge_userLedsSet
 17620                           
 17621                           ;flashy_task.c: 356: data->displayTickCount = 0;
 17622  0CC2  0020               	movlb	0	; select bank0
 17623  0CC3  085E               	movf	flashy_Main@data,w
 17624  0CC4  0086               	movwf	6
 17625  0CC5  085F               	movf	flashy_Main@data+1,w
 17626  0CC6  0087               	movwf	7
 17627  0CC7  3144               	addfsr 1,4
 17628  0CC8  3000               	movlw	0
 17629  0CC9  3FC0               	movwi [0]fsr1
 17630  0CCA  3FC1               	movwi [1]fsr1
 17631                           
 17632                           ;flashy_task.c: 357: data->blasterTickCount = 100;
 17633  0CCB  085E               	movf	flashy_Main@data,w
 17634  0CCC  0086               	movwf	6
 17635  0CCD  085F               	movf	flashy_Main@data+1,w
 17636  0CCE  0087               	movwf	7
 17637  0CCF  3147               	addfsr 1,7
 17638  0CD0  3064               	movlw	100
 17639  0CD1  3FC0               	movwi [0]fsr1
 17640  0CD2  3000               	movlw	0
 17641  0CD3  3FC1               	movwi [1]fsr1
 17642                           
 17643                           ;flashy_task.c: 358: data->delayTickCount = 5;
 17644  0CD4  085E               	movf	flashy_Main@data,w
 17645  0CD5  0086               	movwf	6
 17646  0CD6  085F               	movf	flashy_Main@data+1,w
 17647  0CD7  0087               	movwf	7
 17648  0CD8  3141               	addfsr 1,1
 17649  0CD9  3005               	movlw	5
 17650  0CDA  3FC0               	movwi [0]fsr1
 17651  0CDB  3000               	movlw	0
 17652  0CDC  3FC1               	movwi [1]fsr1
 17653                           
 17654                           ;flashy_task.c: 360: data->led_state = FLASHY_STATE_LED_SHOT;
 17655  0CDD  085E               	movf	flashy_Main@data,w
 17656  0CDE  3E03               	addlw	3
 17657  0CDF  00D4               	movwf	??_flashy_Main
 17658  0CE0  3000               	movlw	0
 17659  0CE1  3D5F               	addwfc	flashy_Main@data+1,w
 17660  0CE2  00D5               	movwf	??_flashy_Main+1
 17661  0CE3  0854               	movf	??_flashy_Main,w
 17662  0CE4  0086               	movwf	6
 17663  0CE5  0855               	movf	??_flashy_Main+1,w
 17664  0CE6  0087               	movwf	7
 17665  0CE7  3001               	movlw	1
 17666  0CE8  0081               	movwf	1
 17667                           
 17668                           ;flashy_task.c: 361: data->display_state = FLASHY_STATE_DISPLAY_BLASTER;
 17669  0CE9  085E               	movf	flashy_Main@data,w
 17670  0CEA  3E06               	addlw	6
 17671  0CEB  00D4               	movwf	??_flashy_Main
 17672  0CEC  3000               	movlw	0
 17673  0CED  3D5F               	addwfc	flashy_Main@data+1,w
 17674  0CEE  00D5               	movwf	??_flashy_Main+1
 17675  0CEF  0854               	movf	??_flashy_Main,w
 17676  0CF0  0086               	movwf	6
 17677  0CF1  0855               	movf	??_flashy_Main+1,w
 17678  0CF2  0087               	movwf	7
 17679  0CF3  3002               	movlw	2
 17680  0CF4  0081               	movwf	1
 17681                           
 17682                           ;flashy_task.c: 362: data->blaster_state = FLASHY_BLASTER_SHOOTING_STATE;
 17683  0CF5  085E               	movf	flashy_Main@data,w
 17684  0CF6  0086               	movwf	6
 17685  0CF7  085F               	movf	flashy_Main@data+1,w
 17686  0CF8  0087               	movwf	7
 17687  0CF9  3149               	addfsr 1,9
 17688  0CFA  0181               	clrf	1
 17689  0CFB                     l7653:	
 17690                           
 17691                           ;flashy_task.c: 363: }
 17692                           ;flashy_task.c: 365: data->holdCountA = 0;
 17693  0CFB  085E               	movf	flashy_Main@data,w
 17694  0CFC  0086               	movwf	6
 17695  0CFD  085F               	movf	flashy_Main@data+1,w
 17696  0CFE  0087               	movwf	7
 17697  0CFF  314A               	addfsr 1,10
 17698  0D00  3000               	movlw	0
 17699  0D01  3FC0               	movwi [0]fsr1
 17700  0D02  3FC1               	movwi [1]fsr1
 17701                           
 17702                           ;flashy_task.c: 366: data->holdCountB = 0;
 17703  0D03  085E               	movf	flashy_Main@data,w
 17704  0D04  0086               	movwf	6
 17705  0D05  085F               	movf	flashy_Main@data+1,w
 17706  0D06  0087               	movwf	7
 17707  0D07  314C               	addfsr 1,12
 17708  0D08  3000               	movlw	0
 17709  0D09  3FC0               	movwi [0]fsr1
 17710  0D0A  3FC1               	movwi [1]fsr1
 17711                           
 17712                           ;flashy_task.c: 367: data->holdCountX = 0;
 17713  0D0B  085E               	movf	flashy_Main@data,w
 17714  0D0C  0086               	movwf	6
 17715  0D0D  085F               	movf	flashy_Main@data+1,w
 17716  0D0E  0087               	movwf	7
 17717  0D0F  314E               	addfsr 1,14
 17718  0D10  3000               	movlw	0
 17719  0D11  3FC0               	movwi [0]fsr1
 17720  0D12  3FC1               	movwi [1]fsr1
 17721                           
 17722                           ;flashy_task.c: 368: data->holdCountY += 1;
 17723  0D13  085E               	movf	flashy_Main@data,w
 17724  0D14  0086               	movwf	6
 17725  0D15  085F               	movf	flashy_Main@data+1,w
 17726  0D16  0087               	movwf	7
 17727  0D17  3150               	addfsr 1,16
 17728  0D18  3001               	movlw	1
 17729  0D19  0781               	addwf	1,f
 17730  0D1A  3141               	addfsr 1,1
 17731  0D1B  1803               	skipnc
 17732  0D1C  0A81               	incf	1,f
 17733                           
 17734                           ;flashy_task.c: 369: data->holdCountXY = 0;
 17735  0D1D  085E               	movf	flashy_Main@data,w
 17736  0D1E  0086               	movwf	6
 17737  0D1F  085F               	movf	flashy_Main@data+1,w
 17738  0D20  0087               	movwf	7
 17739  0D21  3152               	addfsr 1,18
 17740  0D22  3000               	movlw	0
 17741  0D23  3FC0               	movwi [0]fsr1
 17742  0D24  3FC1               	movwi [1]fsr1
 17743                           
 17744                           ;flashy_task.c: 370: data->holdCountAY = 0;
 17745  0D25  085E               	movf	flashy_Main@data,w
 17746  0D26  0086               	movwf	6
 17747  0D27  085F               	movf	flashy_Main@data+1,w
 17748  0D28  0087               	movwf	7
 17749  0D29  3154               	addfsr 1,20
 17750  0D2A  3000               	movlw	0
 17751  0D2B  3FC0               	movwi [0]fsr1
 17752  0D2C  3FC1               	movwi [1]fsr1
 17753                           
 17754                           ;flashy_task.c: 371: data->holdCountAX = 0;
 17755  0D2D  085E               	movf	flashy_Main@data,w
 17756  0D2E  0086               	movwf	6
 17757  0D2F  085F               	movf	flashy_Main@data+1,w
 17758  0D30  0087               	movwf	7
 17759  0D31  3156               	addfsr 1,22
 17760  0D32  3000               	movlw	0
 17761  0D33  3FC0               	movwi [0]fsr1
 17762  0D34  3FC1               	movwi [1]fsr1
 17763                           
 17764                           ;flashy_task.c: 372: data->holdCountBX = 0;
 17765  0D35  085E               	movf	flashy_Main@data,w
 17766  0D36  0086               	movwf	6
 17767  0D37  085F               	movf	flashy_Main@data+1,w
 17768  0D38  0087               	movwf	7
 17769  0D39  3158               	addfsr 1,24
 17770  0D3A  3000               	movlw	0
 17771  0D3B  3FC0               	movwi [0]fsr1
 17772  0D3C  3FC1               	movwi [1]fsr1
 17773                           
 17774                           ;flashy_task.c: 373: data->holdCountBY = 0;
 17775  0D3D  085E               	movf	flashy_Main@data,w
 17776  0D3E  0086               	movwf	6
 17777  0D3F  085F               	movf	flashy_Main@data+1,w
 17778  0D40  0087               	movwf	7
 17779  0D41  315A               	addfsr 1,26
 17780  0D42  3000               	movlw	0
 17781  0D43  3FC0               	movwi [0]fsr1
 17782  0D44  3FC1               	movwi [1]fsr1
 17783                           
 17784                           ;flashy_task.c: 374: data->noholdCount = 0;
 17785  0D45  085E               	movf	flashy_Main@data,w
 17786  0D46  0086               	movwf	6
 17787  0D47  085F               	movf	flashy_Main@data+1,w
 17788  0D48  0087               	movwf	7
 17789  0D49  315C               	addfsr 1,28
 17790  0D4A  3000               	movlw	0
 17791  0D4B  3FC0               	movwi [0]fsr1
 17792  0D4C  3FC1               	movwi [1]fsr1
 17793                           
 17794                           ;flashy_task.c: 375: break;
 17795  0D4D  2FC9               	goto	l7787
 17796  0D4E                     l7673:	
 17797                           ;flashy_task.c: 376: case 2:
 17798                           
 17799                           
 17800                           ;flashy_task.c: 378: if (data->holdCountB == 0){
 17801  0D4E  085E               	movf	flashy_Main@data,w
 17802  0D4F  0086               	movwf	6
 17803  0D50  085F               	movf	flashy_Main@data+1,w
 17804  0D51  0087               	movwf	7
 17805  0D52  314C               	addfsr 1,12
 17806  0D53  0016               	moviw fsr1++
 17807  0D54  0401               	iorwf	1,w
 17808  0D55  1D03               	btfss	3,2
 17809  0D56  2D7C               	goto	l7683
 17810                           
 17811                           ;flashy_task.c: 379: data->display_state = FLASHY_STATE_DISPLAY;
 17812  0D57  085E               	movf	flashy_Main@data,w
 17813  0D58  0086               	movwf	6
 17814  0D59  085F               	movf	flashy_Main@data+1,w
 17815  0D5A  0087               	movwf	7
 17816  0D5B  3146               	addfsr 1,6
 17817  0D5C  0181               	clrf	1
 17818                           
 17819                           ;flashy_task.c: 380: if (flashy_option_idx == flashy_option_size - 1){
 17820  0D5D  0021               	movlb	1	; select bank1
 17821  0D5E  0824               	movf	_flashy_option_size^(0+128),w
 17822  0D5F  3EFF               	addlw	255
 17823  0D60  0020               	movlb	0	; select bank0
 17824  0D61  00D4               	movwf	??_flashy_Main
 17825  0D62  30FF               	movlw	255
 17826  0D63  0021               	movlb	1	; select bank1
 17827  0D64  3D25               	addwfc	(_flashy_option_size+1)^(0+128),w
 17828  0D65  0020               	movlb	0	; select bank0
 17829  0D66  00D5               	movwf	??_flashy_Main+1
 17830  0D67  0021               	movlb	1	; select bank1
 17831  0D68  0827               	movf	(_flashy_option_idx+1)^(0+128),w
 17832  0D69  0020               	movlb	0	; select bank0
 17833  0D6A  0655               	xorwf	??_flashy_Main+1,w
 17834  0D6B  1D03               	skipz
 17835  0D6C  2D71               	goto	u4775
 17836  0D6D  0021               	movlb	1	; select bank1
 17837  0D6E  0826               	movf	_flashy_option_idx^(0+128),w
 17838  0D6F  0020               	movlb	0	; select bank0
 17839  0D70  0654               	xorwf	??_flashy_Main,w
 17840  0D71                     u4775:	
 17841  0D71  1D03               	skipz
 17842  0D72  2D77               	goto	l7681
 17843                           
 17844                           ;flashy_task.c: 381: flashy_option_idx = 0;
 17845  0D73  0021               	movlb	1	; select bank1
 17846  0D74  01A6               	clrf	_flashy_option_idx^(0+128)
 17847  0D75  01A7               	clrf	(_flashy_option_idx+1)^(0+128)
 17848                           
 17849                           ;flashy_task.c: 382: }
 17850  0D76  2D7C               	goto	l7683
 17851  0D77                     l7681:	
 17852                           
 17853                           ;flashy_task.c: 383: else {
 17854                           ;flashy_task.c: 384: flashy_option_idx += 1;
 17855  0D77  3001               	movlw	1
 17856  0D78  0021               	movlb	1	; select bank1
 17857  0D79  07A6               	addwf	_flashy_option_idx^(0+128),f
 17858  0D7A  3000               	movlw	0
 17859  0D7B  3DA7               	addwfc	(_flashy_option_idx+1)^(0+128),f
 17860  0D7C                     l7683:	
 17861                           
 17862                           ;flashy_task.c: 385: }
 17863                           ;flashy_task.c: 386: }
 17864                           ;flashy_task.c: 387: data->holdCountA = 0;
 17865  0D7C  0020               	movlb	0	; select bank0
 17866  0D7D  085E               	movf	flashy_Main@data,w
 17867  0D7E  0086               	movwf	6
 17868  0D7F  085F               	movf	flashy_Main@data+1,w
 17869  0D80  0087               	movwf	7
 17870  0D81  314A               	addfsr 1,10
 17871  0D82  3000               	movlw	0
 17872  0D83  3FC0               	movwi [0]fsr1
 17873  0D84  3FC1               	movwi [1]fsr1
 17874                           
 17875                           ;flashy_task.c: 388: data->holdCountB += 1;
 17876  0D85  085E               	movf	flashy_Main@data,w
 17877  0D86  0086               	movwf	6
 17878  0D87  085F               	movf	flashy_Main@data+1,w
 17879  0D88  0087               	movwf	7
 17880  0D89  314C               	addfsr 1,12
 17881  0D8A  3001               	movlw	1
 17882  0D8B  0781               	addwf	1,f
 17883  0D8C  3141               	addfsr 1,1
 17884  0D8D  1803               	skipnc
 17885  0D8E  0A81               	incf	1,f
 17886                           
 17887                           ;flashy_task.c: 389: data->holdCountX = 0;
 17888  0D8F  085E               	movf	flashy_Main@data,w
 17889  0D90  0086               	movwf	6
 17890  0D91  085F               	movf	flashy_Main@data+1,w
 17891  0D92  0087               	movwf	7
 17892  0D93  314E               	addfsr 1,14
 17893  0D94  3000               	movlw	0
 17894  0D95  3FC0               	movwi [0]fsr1
 17895  0D96  3FC1               	movwi [1]fsr1
 17896                           
 17897                           ;flashy_task.c: 390: data->holdCountY = 0;
 17898  0D97  085E               	movf	flashy_Main@data,w
 17899  0D98  0086               	movwf	6
 17900  0D99  085F               	movf	flashy_Main@data+1,w
 17901  0D9A  0087               	movwf	7
 17902  0D9B  3150               	addfsr 1,16
 17903  0D9C  3000               	movlw	0
 17904  0D9D  3FC0               	movwi [0]fsr1
 17905  0D9E  3FC1               	movwi [1]fsr1
 17906                           
 17907                           ;flashy_task.c: 391: data->holdCountXY = 0;
 17908  0D9F  085E               	movf	flashy_Main@data,w
 17909  0DA0  0086               	movwf	6
 17910  0DA1  085F               	movf	flashy_Main@data+1,w
 17911  0DA2  0087               	movwf	7
 17912  0DA3  3152               	addfsr 1,18
 17913  0DA4  3000               	movlw	0
 17914  0DA5  3FC0               	movwi [0]fsr1
 17915  0DA6  3FC1               	movwi [1]fsr1
 17916                           
 17917                           ;flashy_task.c: 392: data->holdCountAY = 0;
 17918  0DA7  085E               	movf	flashy_Main@data,w
 17919  0DA8  0086               	movwf	6
 17920  0DA9  085F               	movf	flashy_Main@data+1,w
 17921  0DAA  0087               	movwf	7
 17922  0DAB  3154               	addfsr 1,20
 17923  0DAC  3000               	movlw	0
 17924  0DAD  3FC0               	movwi [0]fsr1
 17925  0DAE  3FC1               	movwi [1]fsr1
 17926                           
 17927                           ;flashy_task.c: 393: data->holdCountAX = 0;
 17928  0DAF  085E               	movf	flashy_Main@data,w
 17929  0DB0  0086               	movwf	6
 17930  0DB1  085F               	movf	flashy_Main@data+1,w
 17931  0DB2  0087               	movwf	7
 17932  0DB3  3156               	addfsr 1,22
 17933  0DB4  3000               	movlw	0
 17934  0DB5  3FC0               	movwi [0]fsr1
 17935  0DB6  3FC1               	movwi [1]fsr1
 17936                           
 17937                           ;flashy_task.c: 394: data->holdCountBX = 0;
 17938  0DB7  085E               	movf	flashy_Main@data,w
 17939  0DB8  0086               	movwf	6
 17940  0DB9  085F               	movf	flashy_Main@data+1,w
 17941  0DBA  0087               	movwf	7
 17942  0DBB  3158               	addfsr 1,24
 17943  0DBC  3000               	movlw	0
 17944  0DBD  3FC0               	movwi [0]fsr1
 17945  0DBE  3FC1               	movwi [1]fsr1
 17946                           
 17947                           ;flashy_task.c: 395: data->holdCountBY = 0;
 17948  0DBF  085E               	movf	flashy_Main@data,w
 17949  0DC0  0086               	movwf	6
 17950  0DC1  085F               	movf	flashy_Main@data+1,w
 17951  0DC2  0087               	movwf	7
 17952  0DC3  315A               	addfsr 1,26
 17953  0DC4  3000               	movlw	0
 17954  0DC5  3FC0               	movwi [0]fsr1
 17955  0DC6  3FC1               	movwi [1]fsr1
 17956                           
 17957                           ;flashy_task.c: 396: data->noholdCount = 0;
 17958  0DC7  085E               	movf	flashy_Main@data,w
 17959  0DC8  0086               	movwf	6
 17960  0DC9  085F               	movf	flashy_Main@data+1,w
 17961  0DCA  0087               	movwf	7
 17962  0DCB  315C               	addfsr 1,28
 17963  0DCC  3000               	movlw	0
 17964  0DCD  3FC0               	movwi [0]fsr1
 17965  0DCE  3FC1               	movwi [1]fsr1
 17966                           
 17967                           ;flashy_task.c: 397: break;
 17968  0DCF  2FC9               	goto	l7787
 17969  0DD0                     l7703:	
 17970                           ;flashy_task.c: 398: case 1:
 17971                           
 17972                           
 17973                           ;flashy_task.c: 399: if ( data->holdCountA == 0){
 17974  0DD0  085E               	movf	flashy_Main@data,w
 17975  0DD1  0086               	movwf	6
 17976  0DD2  085F               	movf	flashy_Main@data+1,w
 17977  0DD3  0087               	movwf	7
 17978  0DD4  314A               	addfsr 1,10
 17979  0DD5  0016               	moviw fsr1++
 17980  0DD6  0401               	iorwf	1,w
 17981  0DD7  1D03               	btfss	3,2
 17982  0DD8  2E3E               	goto	l7731
 17983                           
 17984                           ;flashy_task.c: 402: if (flashy_leds_state_track > 4){
 17985  0DD9  3000               	movlw	0
 17986  0DDA  0021               	movlb	1	; select bank1
 17987  0DDB  022F               	subwf	(_flashy_leds_state_track+1)^(0+128),w
 17988  0DDC  3005               	movlw	5
 17989  0DDD  1903               	skipnz
 17990  0DDE  022E               	subwf	_flashy_leds_state_track^(0+128),w
 17991  0DDF  1C03               	skipc
 17992  0DE0  2DE3               	goto	l7709
 17993                           
 17994                           ;flashy_task.c: 403: flashy_leds_state_track=0;
 17995  0DE1  01AE               	clrf	_flashy_leds_state_track^(0+128)
 17996  0DE2  01AF               	clrf	(_flashy_leds_state_track+1)^(0+128)
 17997  0DE3                     l7709:	
 17998                           
 17999                           ;flashy_task.c: 404: }
 18000                           ;flashy_task.c: 405: if (flashy_leds_state_track== 0){
 18001  0DE3  082E               	movf	_flashy_leds_state_track^(0+128),w
 18002  0DE4  042F               	iorwf	(_flashy_leds_state_track+1)^(0+128),w
 18003  0DE5  1D03               	btfss	3,2
 18004  0DE6  2DF4               	goto	l7713
 18005                           
 18006                           ;flashy_task.c: 406: data->led_state = FLASHY_STATE_LED_ALT;
 18007  0DE7  0020               	movlb	0	; select bank0
 18008  0DE8  085E               	movf	flashy_Main@data,w
 18009  0DE9  3E03               	addlw	3
 18010  0DEA  00D4               	movwf	??_flashy_Main
 18011  0DEB  3000               	movlw	0
 18012  0DEC  3D5F               	addwfc	flashy_Main@data+1,w
 18013  0DED  00D5               	movwf	??_flashy_Main+1
 18014  0DEE  0854               	movf	??_flashy_Main,w
 18015  0DEF  0086               	movwf	6
 18016  0DF0  0855               	movf	??_flashy_Main+1,w
 18017  0DF1  0087               	movwf	7
 18018  0DF2  3004               	movlw	4
 18019  0DF3  0081               	movwf	1
 18020  0DF4                     l7713:	
 18021                           
 18022                           ;flashy_task.c: 407: }
 18023                           ;flashy_task.c: 408: if (flashy_leds_state_track ==1){
 18024  0DF4  0021               	movlb	1	; select bank1
 18025  0DF5  032E               	decf	_flashy_leds_state_track^(0+128),w
 18026  0DF6  042F               	iorwf	(_flashy_leds_state_track+1)^(0+128),w
 18027  0DF7  1D03               	btfss	3,2
 18028  0DF8  2E06               	goto	l7717
 18029                           
 18030                           ;flashy_task.c: 409: data->led_state = FLASHY_STATE_SPARKLE;
 18031  0DF9  0020               	movlb	0	; select bank0
 18032  0DFA  085E               	movf	flashy_Main@data,w
 18033  0DFB  3E03               	addlw	3
 18034  0DFC  00D4               	movwf	??_flashy_Main
 18035  0DFD  3000               	movlw	0
 18036  0DFE  3D5F               	addwfc	flashy_Main@data+1,w
 18037  0DFF  00D5               	movwf	??_flashy_Main+1
 18038  0E00  0854               	movf	??_flashy_Main,w
 18039  0E01  0086               	movwf	6
 18040  0E02  0855               	movf	??_flashy_Main+1,w
 18041  0E03  0087               	movwf	7
 18042  0E04  3002               	movlw	2
 18043  0E05  0081               	movwf	1
 18044  0E06                     l7717:	
 18045                           
 18046                           ;flashy_task.c: 410: }
 18047                           ;flashy_task.c: 411: if (flashy_leds_state_track == 2){
 18048  0E06  3002               	movlw	2
 18049  0E07  0021               	movlb	1	; select bank1
 18050  0E08  062E               	xorwf	_flashy_leds_state_track^(0+128),w
 18051  0E09  042F               	iorwf	(_flashy_leds_state_track+1)^(0+128),w
 18052  0E0A  1D03               	btfss	3,2
 18053  0E0B  2E19               	goto	l7721
 18054                           
 18055                           ;flashy_task.c: 412: data->led_state = FLASHY_STATE_CIRCLE;
 18056  0E0C  0020               	movlb	0	; select bank0
 18057  0E0D  085E               	movf	flashy_Main@data,w
 18058  0E0E  3E03               	addlw	3
 18059  0E0F  00D4               	movwf	??_flashy_Main
 18060  0E10  3000               	movlw	0
 18061  0E11  3D5F               	addwfc	flashy_Main@data+1,w
 18062  0E12  00D5               	movwf	??_flashy_Main+1
 18063  0E13  0854               	movf	??_flashy_Main,w
 18064  0E14  0086               	movwf	6
 18065  0E15  0855               	movf	??_flashy_Main+1,w
 18066  0E16  0087               	movwf	7
 18067  0E17  3003               	movlw	3
 18068  0E18  0081               	movwf	1
 18069  0E19                     l7721:	
 18070                           
 18071                           ;flashy_task.c: 413: }
 18072                           ;flashy_task.c: 414: if (flashy_leds_state_track == 3){
 18073  0E19  3003               	movlw	3
 18074  0E1A  0021               	movlb	1	; select bank1
 18075  0E1B  062E               	xorwf	_flashy_leds_state_track^(0+128),w
 18076  0E1C  042F               	iorwf	(_flashy_leds_state_track+1)^(0+128),w
 18077  0E1D  1D03               	btfss	3,2
 18078  0E1E  2E26               	goto	l7725
 18079                           
 18080                           ;flashy_task.c: 415: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 18081  0E1F  0020               	movlb	0	; select bank0
 18082  0E20  085E               	movf	flashy_Main@data,w
 18083  0E21  0086               	movwf	6
 18084  0E22  085F               	movf	flashy_Main@data+1,w
 18085  0E23  0087               	movwf	7
 18086  0E24  3143               	addfsr 1,3
 18087  0E25  0181               	clrf	1
 18088  0E26                     l7725:	
 18089                           
 18090                           ;flashy_task.c: 416: }
 18091                           ;flashy_task.c: 417: if (flashy_leds_state_track ==4 ){
 18092  0E26  3004               	movlw	4
 18093  0E27  0021               	movlb	1	; select bank1
 18094  0E28  062E               	xorwf	_flashy_leds_state_track^(0+128),w
 18095  0E29  042F               	iorwf	(_flashy_leds_state_track+1)^(0+128),w
 18096  0E2A  1D03               	btfss	3,2
 18097  0E2B  2E39               	goto	l7729
 18098                           
 18099                           ;flashy_task.c: 418: data->led_state = FLASHY_STATE_LED_PARODY;
 18100  0E2C  0020               	movlb	0	; select bank0
 18101  0E2D  085E               	movf	flashy_Main@data,w
 18102  0E2E  3E03               	addlw	3
 18103  0E2F  00D4               	movwf	??_flashy_Main
 18104  0E30  3000               	movlw	0
 18105  0E31  3D5F               	addwfc	flashy_Main@data+1,w
 18106  0E32  00D5               	movwf	??_flashy_Main+1
 18107  0E33  0854               	movf	??_flashy_Main,w
 18108  0E34  0086               	movwf	6
 18109  0E35  0855               	movf	??_flashy_Main+1,w
 18110  0E36  0087               	movwf	7
 18111  0E37  3005               	movlw	5
 18112  0E38  0081               	movwf	1
 18113  0E39                     l7729:	
 18114                           
 18115                           ;flashy_task.c: 419: }
 18116                           ;flashy_task.c: 420: flashy_leds_state_track +=1;
 18117  0E39  3001               	movlw	1
 18118  0E3A  0021               	movlb	1	; select bank1
 18119  0E3B  07AE               	addwf	_flashy_leds_state_track^(0+128),f
 18120  0E3C  3000               	movlw	0
 18121  0E3D  3DAF               	addwfc	(_flashy_leds_state_track+1)^(0+128),f
 18122  0E3E                     l7731:	
 18123                           
 18124                           ;flashy_task.c: 421: }
 18125                           ;flashy_task.c: 423: data->holdCountA += 1;
 18126  0E3E  0020               	movlb	0	; select bank0
 18127  0E3F  085E               	movf	flashy_Main@data,w
 18128  0E40  0086               	movwf	6
 18129  0E41  085F               	movf	flashy_Main@data+1,w
 18130  0E42  0087               	movwf	7
 18131  0E43  314A               	addfsr 1,10
 18132  0E44  3001               	movlw	1
 18133  0E45  0781               	addwf	1,f
 18134  0E46  3141               	addfsr 1,1
 18135  0E47  1803               	skipnc
 18136  0E48  0A81               	incf	1,f
 18137                           
 18138                           ;flashy_task.c: 424: data->holdCountB = 0;
 18139  0E49  085E               	movf	flashy_Main@data,w
 18140  0E4A  0086               	movwf	6
 18141  0E4B  085F               	movf	flashy_Main@data+1,w
 18142  0E4C  0087               	movwf	7
 18143  0E4D  314C               	addfsr 1,12
 18144  0E4E  3000               	movlw	0
 18145  0E4F  3FC0               	movwi [0]fsr1
 18146  0E50  3FC1               	movwi [1]fsr1
 18147                           
 18148                           ;flashy_task.c: 425: data->holdCountX = 0;
 18149  0E51  085E               	movf	flashy_Main@data,w
 18150  0E52  0086               	movwf	6
 18151  0E53  085F               	movf	flashy_Main@data+1,w
 18152  0E54  0087               	movwf	7
 18153  0E55  314E               	addfsr 1,14
 18154  0E56  3000               	movlw	0
 18155  0E57  3FC0               	movwi [0]fsr1
 18156  0E58  3FC1               	movwi [1]fsr1
 18157                           
 18158                           ;flashy_task.c: 426: data->holdCountY = 0;
 18159  0E59  085E               	movf	flashy_Main@data,w
 18160  0E5A  0086               	movwf	6
 18161  0E5B  085F               	movf	flashy_Main@data+1,w
 18162  0E5C  0087               	movwf	7
 18163  0E5D  3150               	addfsr 1,16
 18164  0E5E  3000               	movlw	0
 18165  0E5F  3FC0               	movwi [0]fsr1
 18166  0E60  3FC1               	movwi [1]fsr1
 18167                           
 18168                           ;flashy_task.c: 427: data->holdCountXY = 0;
 18169  0E61  085E               	movf	flashy_Main@data,w
 18170  0E62  0086               	movwf	6
 18171  0E63  085F               	movf	flashy_Main@data+1,w
 18172  0E64  0087               	movwf	7
 18173  0E65  3152               	addfsr 1,18
 18174  0E66  3000               	movlw	0
 18175  0E67  3FC0               	movwi [0]fsr1
 18176  0E68  3FC1               	movwi [1]fsr1
 18177                           
 18178                           ;flashy_task.c: 428: data->holdCountAY = 0;
 18179  0E69  085E               	movf	flashy_Main@data,w
 18180  0E6A  0086               	movwf	6
 18181  0E6B  085F               	movf	flashy_Main@data+1,w
 18182  0E6C  0087               	movwf	7
 18183  0E6D  3154               	addfsr 1,20
 18184  0E6E  3000               	movlw	0
 18185  0E6F  3FC0               	movwi [0]fsr1
 18186  0E70  3FC1               	movwi [1]fsr1
 18187                           
 18188                           ;flashy_task.c: 429: data->holdCountAX = 0;
 18189  0E71  085E               	movf	flashy_Main@data,w
 18190  0E72  0086               	movwf	6
 18191  0E73  085F               	movf	flashy_Main@data+1,w
 18192  0E74  0087               	movwf	7
 18193  0E75  3156               	addfsr 1,22
 18194  0E76  3000               	movlw	0
 18195  0E77  3FC0               	movwi [0]fsr1
 18196  0E78  3FC1               	movwi [1]fsr1
 18197                           
 18198                           ;flashy_task.c: 430: data->holdCountBX = 0;
 18199  0E79  085E               	movf	flashy_Main@data,w
 18200  0E7A  0086               	movwf	6
 18201  0E7B  085F               	movf	flashy_Main@data+1,w
 18202  0E7C  0087               	movwf	7
 18203  0E7D  3158               	addfsr 1,24
 18204  0E7E  3000               	movlw	0
 18205  0E7F  3FC0               	movwi [0]fsr1
 18206  0E80  3FC1               	movwi [1]fsr1
 18207                           
 18208                           ;flashy_task.c: 431: data->holdCountBY = 0;
 18209  0E81  085E               	movf	flashy_Main@data,w
 18210  0E82  0086               	movwf	6
 18211  0E83  085F               	movf	flashy_Main@data+1,w
 18212  0E84  0087               	movwf	7
 18213  0E85  315A               	addfsr 1,26
 18214  0E86  3000               	movlw	0
 18215  0E87  3FC0               	movwi [0]fsr1
 18216  0E88  3FC1               	movwi [1]fsr1
 18217                           
 18218                           ;flashy_task.c: 432: data->noholdCount = 0;
 18219  0E89  085E               	movf	flashy_Main@data,w
 18220  0E8A  0086               	movwf	6
 18221  0E8B  085F               	movf	flashy_Main@data+1,w
 18222  0E8C  0087               	movwf	7
 18223  0E8D  315C               	addfsr 1,28
 18224  0E8E  3000               	movlw	0
 18225  0E8F  3FC0               	movwi [0]fsr1
 18226  0E90  3FC1               	movwi [1]fsr1
 18227                           
 18228                           ;flashy_task.c: 433: break;
 18229  0E91  2FC9               	goto	l7787
 18230  0E92                     l7751:	
 18231                           ;flashy_task.c: 434: case 0:
 18232                           
 18233                           
 18234                           ;flashy_task.c: 436: data->holdCountA = 0;
 18235  0E92  085E               	movf	flashy_Main@data,w
 18236  0E93  0086               	movwf	6
 18237  0E94  085F               	movf	flashy_Main@data+1,w
 18238  0E95  0087               	movwf	7
 18239  0E96  314A               	addfsr 1,10
 18240  0E97  3000               	movlw	0
 18241  0E98  3FC0               	movwi [0]fsr1
 18242  0E99  3FC1               	movwi [1]fsr1
 18243                           
 18244                           ;flashy_task.c: 437: data->holdCountB = 0;
 18245  0E9A  085E               	movf	flashy_Main@data,w
 18246  0E9B  0086               	movwf	6
 18247  0E9C  085F               	movf	flashy_Main@data+1,w
 18248  0E9D  0087               	movwf	7
 18249  0E9E  314C               	addfsr 1,12
 18250  0E9F  3000               	movlw	0
 18251  0EA0  3FC0               	movwi [0]fsr1
 18252  0EA1  3FC1               	movwi [1]fsr1
 18253                           
 18254                           ;flashy_task.c: 438: data->holdCountX = 0;
 18255  0EA2  085E               	movf	flashy_Main@data,w
 18256  0EA3  0086               	movwf	6
 18257  0EA4  085F               	movf	flashy_Main@data+1,w
 18258  0EA5  0087               	movwf	7
 18259  0EA6  314E               	addfsr 1,14
 18260  0EA7  3000               	movlw	0
 18261  0EA8  3FC0               	movwi [0]fsr1
 18262  0EA9  3FC1               	movwi [1]fsr1
 18263                           
 18264                           ;flashy_task.c: 439: data->holdCountY = 0;
 18265  0EAA  085E               	movf	flashy_Main@data,w
 18266  0EAB  0086               	movwf	6
 18267  0EAC  085F               	movf	flashy_Main@data+1,w
 18268  0EAD  0087               	movwf	7
 18269  0EAE  3150               	addfsr 1,16
 18270  0EAF  3000               	movlw	0
 18271  0EB0  3FC0               	movwi [0]fsr1
 18272  0EB1  3FC1               	movwi [1]fsr1
 18273                           
 18274                           ;flashy_task.c: 440: data->holdCountXY = 0;
 18275  0EB2  085E               	movf	flashy_Main@data,w
 18276  0EB3  0086               	movwf	6
 18277  0EB4  085F               	movf	flashy_Main@data+1,w
 18278  0EB5  0087               	movwf	7
 18279  0EB6  3152               	addfsr 1,18
 18280  0EB7  3000               	movlw	0
 18281  0EB8  3FC0               	movwi [0]fsr1
 18282  0EB9  3FC1               	movwi [1]fsr1
 18283                           
 18284                           ;flashy_task.c: 441: data->holdCountAY = 0;
 18285  0EBA  085E               	movf	flashy_Main@data,w
 18286  0EBB  0086               	movwf	6
 18287  0EBC  085F               	movf	flashy_Main@data+1,w
 18288  0EBD  0087               	movwf	7
 18289  0EBE  3154               	addfsr 1,20
 18290  0EBF  3000               	movlw	0
 18291  0EC0  3FC0               	movwi [0]fsr1
 18292  0EC1  3FC1               	movwi [1]fsr1
 18293                           
 18294                           ;flashy_task.c: 442: data->holdCountAX = 0;
 18295  0EC2  085E               	movf	flashy_Main@data,w
 18296  0EC3  0086               	movwf	6
 18297  0EC4  085F               	movf	flashy_Main@data+1,w
 18298  0EC5  0087               	movwf	7
 18299  0EC6  3156               	addfsr 1,22
 18300  0EC7  3000               	movlw	0
 18301  0EC8  3FC0               	movwi [0]fsr1
 18302  0EC9  3FC1               	movwi [1]fsr1
 18303                           
 18304                           ;flashy_task.c: 443: data->holdCountBX = 0;
 18305  0ECA  085E               	movf	flashy_Main@data,w
 18306  0ECB  0086               	movwf	6
 18307  0ECC  085F               	movf	flashy_Main@data+1,w
 18308  0ECD  0087               	movwf	7
 18309  0ECE  3158               	addfsr 1,24
 18310  0ECF  3000               	movlw	0
 18311  0ED0  3FC0               	movwi [0]fsr1
 18312  0ED1  3FC1               	movwi [1]fsr1
 18313                           
 18314                           ;flashy_task.c: 444: data->holdCountBY = 0;
 18315  0ED2  085E               	movf	flashy_Main@data,w
 18316  0ED3  0086               	movwf	6
 18317  0ED4  085F               	movf	flashy_Main@data+1,w
 18318  0ED5  0087               	movwf	7
 18319  0ED6  315A               	addfsr 1,26
 18320  0ED7  3000               	movlw	0
 18321  0ED8  3FC0               	movwi [0]fsr1
 18322  0ED9  3FC1               	movwi [1]fsr1
 18323                           
 18324                           ;flashy_task.c: 445: data->noholdCount += 1;
 18325  0EDA  085E               	movf	flashy_Main@data,w
 18326  0EDB  0086               	movwf	6
 18327  0EDC  085F               	movf	flashy_Main@data+1,w
 18328  0EDD  0087               	movwf	7
 18329  0EDE  315C               	addfsr 1,28
 18330  0EDF  3001               	movlw	1
 18331  0EE0  0781               	addwf	1,f
 18332  0EE1  3141               	addfsr 1,1
 18333  0EE2  1803               	skipnc
 18334  0EE3  0A81               	incf	1,f
 18335                           
 18336                           ;flashy_task.c: 446: break;
 18337  0EE4  2FC9               	goto	l7787
 18338  0EE5                     l7755:	
 18339                           ;flashy_task.c: 447: default:
 18340                           
 18341                           
 18342                           ;flashy_task.c: 448: data->holdCountA = 0;
 18343  0EE5  085E               	movf	flashy_Main@data,w
 18344  0EE6  0086               	movwf	6
 18345  0EE7  085F               	movf	flashy_Main@data+1,w
 18346  0EE8  0087               	movwf	7
 18347  0EE9  314A               	addfsr 1,10
 18348  0EEA  3000               	movlw	0
 18349  0EEB  3FC0               	movwi [0]fsr1
 18350  0EEC  3FC1               	movwi [1]fsr1
 18351                           
 18352                           ;flashy_task.c: 449: data->holdCountB = 0;
 18353  0EED  085E               	movf	flashy_Main@data,w
 18354  0EEE  0086               	movwf	6
 18355  0EEF  085F               	movf	flashy_Main@data+1,w
 18356  0EF0  0087               	movwf	7
 18357  0EF1  314C               	addfsr 1,12
 18358  0EF2  3000               	movlw	0
 18359  0EF3  3FC0               	movwi [0]fsr1
 18360  0EF4  3FC1               	movwi [1]fsr1
 18361                           
 18362                           ;flashy_task.c: 450: data->holdCountX = 0;
 18363  0EF5  085E               	movf	flashy_Main@data,w
 18364  0EF6  0086               	movwf	6
 18365  0EF7  085F               	movf	flashy_Main@data+1,w
 18366  0EF8  0087               	movwf	7
 18367  0EF9  314E               	addfsr 1,14
 18368  0EFA  3000               	movlw	0
 18369  0EFB  3FC0               	movwi [0]fsr1
 18370  0EFC  3FC1               	movwi [1]fsr1
 18371                           
 18372                           ;flashy_task.c: 451: data->holdCountY = 0;
 18373  0EFD  085E               	movf	flashy_Main@data,w
 18374  0EFE  0086               	movwf	6
 18375  0EFF  085F               	movf	flashy_Main@data+1,w
 18376  0F00  0087               	movwf	7
 18377  0F01  3150               	addfsr 1,16
 18378  0F02  3000               	movlw	0
 18379  0F03  3FC0               	movwi [0]fsr1
 18380  0F04  3FC1               	movwi [1]fsr1
 18381                           
 18382                           ;flashy_task.c: 452: data->holdCountXY = 0;
 18383  0F05  085E               	movf	flashy_Main@data,w
 18384  0F06  0086               	movwf	6
 18385  0F07  085F               	movf	flashy_Main@data+1,w
 18386  0F08  0087               	movwf	7
 18387  0F09  3152               	addfsr 1,18
 18388  0F0A  3000               	movlw	0
 18389  0F0B  3FC0               	movwi [0]fsr1
 18390  0F0C  3FC1               	movwi [1]fsr1
 18391                           
 18392                           ;flashy_task.c: 453: data->holdCountAY = 0;
 18393  0F0D  085E               	movf	flashy_Main@data,w
 18394  0F0E  0086               	movwf	6
 18395  0F0F  085F               	movf	flashy_Main@data+1,w
 18396  0F10  0087               	movwf	7
 18397  0F11  3154               	addfsr 1,20
 18398  0F12  3000               	movlw	0
 18399  0F13  3FC0               	movwi [0]fsr1
 18400  0F14  3FC1               	movwi [1]fsr1
 18401                           
 18402                           ;flashy_task.c: 454: data->holdCountAX = 0;
 18403  0F15  085E               	movf	flashy_Main@data,w
 18404  0F16  0086               	movwf	6
 18405  0F17  085F               	movf	flashy_Main@data+1,w
 18406  0F18  0087               	movwf	7
 18407  0F19  3156               	addfsr 1,22
 18408  0F1A  3000               	movlw	0
 18409  0F1B  3FC0               	movwi [0]fsr1
 18410  0F1C  3FC1               	movwi [1]fsr1
 18411                           
 18412                           ;flashy_task.c: 455: data->holdCountBX = 0;
 18413  0F1D  085E               	movf	flashy_Main@data,w
 18414  0F1E  0086               	movwf	6
 18415  0F1F  085F               	movf	flashy_Main@data+1,w
 18416  0F20  0087               	movwf	7
 18417  0F21  3158               	addfsr 1,24
 18418  0F22  3000               	movlw	0
 18419  0F23  3FC0               	movwi [0]fsr1
 18420  0F24  3FC1               	movwi [1]fsr1
 18421                           
 18422                           ;flashy_task.c: 456: data->holdCountBY = 0;
 18423  0F25  085E               	movf	flashy_Main@data,w
 18424  0F26  0086               	movwf	6
 18425  0F27  085F               	movf	flashy_Main@data+1,w
 18426  0F28  0087               	movwf	7
 18427  0F29  315A               	addfsr 1,26
 18428  0F2A  3000               	movlw	0
 18429  0F2B  3FC0               	movwi [0]fsr1
 18430  0F2C  3FC1               	movwi [1]fsr1
 18431                           
 18432                           ;flashy_task.c: 457: data->noholdCount = 0;
 18433  0F2D  085E               	movf	flashy_Main@data,w
 18434  0F2E  0086               	movwf	6
 18435  0F2F  085F               	movf	flashy_Main@data+1,w
 18436  0F30  0087               	movwf	7
 18437  0F31  315C               	addfsr 1,28
 18438  0F32  3000               	movlw	0
 18439  0F33  3FC0               	movwi [0]fsr1
 18440  0F34  3FC1               	movwi [1]fsr1
 18441                           
 18442                           ;flashy_task.c: 458: }
 18443  0F35  2FC9               	goto	l7787
 18444  0F36                     l7757:	
 18445                           
 18446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18447                           ; Switch size 1, requested type "space"
 18448                           ; Number of cases is 1, Range of values is 0 to 0
 18449                           ; switch strategies available:
 18450                           ; Name         Instructions Cycles
 18451                           ; simple_byte            4     3 (average)
 18452                           ; direct_byte            8     6 (fixed)
 18453                           ; jumptable            260     6 (fixed)
 18454                           ;	Chosen strategy is simple_byte
 18455  0F36  085D               	movf	flashy_Main@buttonPressed+1,w
 18456  0F37  3A00               	xorlw	0	; case 0
 18457  0F38  1903               	skipnz
 18458  0F39  2F3B               	goto	l8759
 18459  0F3A  2EE5               	goto	l7755
 18460  0F3B                     l8759:	
 18461                           
 18462                           ; Switch size 1, requested type "space"
 18463                           ; Number of cases is 9, Range of values is 0 to 12
 18464                           ; switch strategies available:
 18465                           ; Name         Instructions Cycles
 18466                           ; simple_byte           28    15 (average)
 18467                           ; direct_byte           32     6 (fixed)
 18468                           ; jumptable            260     6 (fixed)
 18469                           ;	Chosen strategy is simple_byte
 18470  0F3B  085C               	movf	flashy_Main@buttonPressed,w
 18471  0F3C  3A00               	xorlw	0	; case 0
 18472  0F3D  1903               	skipnz
 18473  0F3E  2E92               	goto	l7751
 18474  0F3F  3A01               	xorlw	1	; case 1
 18475  0F40  1903               	skipnz
 18476  0F41  2DD0               	goto	l7703
 18477  0F42  3A03               	xorlw	3	; case 2
 18478  0F43  1903               	skipnz
 18479  0F44  2D4E               	goto	l7673
 18480  0F45  3A07               	xorlw	7	; case 5
 18481  0F46  1903               	skipnz
 18482  0F47  2B4C               	goto	l7549
 18483  0F48  3A03               	xorlw	3	; case 6
 18484  0F49  1903               	skipnz
 18485  0F4A  2C30               	goto	l7605
 18486  0F4B  3A0E               	xorlw	14	; case 8
 18487  0F4C  1903               	skipnz
 18488  0F4D  2CA5               	goto	l7635
 18489  0F4E  3A01               	xorlw	1	; case 9
 18490  0F4F  1903               	skipnz
 18491  0F50  2ADF               	goto	l7523
 18492  0F51  3A03               	xorlw	3	; case 10
 18493  0F52  1903               	skipnz
 18494  0F53  2BBB               	goto	l7575
 18495  0F54  3A06               	xorlw	6	; case 12
 18496  0F55  1903               	skipnz
 18497  0F56  2A7D               	goto	l7499
 18498  0F57  2EE5               	goto	l7755
 18499                           
 18500                           ;flashy_task.c: 461: switch (data->blaster_state) {
 18501  0F58  2FC9               	goto	l7787
 18502  0F59                     l7759:	
 18503                           ;flashy_task.c: 462: case FLASHY_BLASTER_SHOOTING_STATE:
 18504                           
 18505                           
 18506                           ;flashy_task.c: 464: if (data->blasterTickCount == 100) {
 18507  0F59  085E               	movf	flashy_Main@data,w
 18508  0F5A  0086               	movwf	6
 18509  0F5B  085F               	movf	flashy_Main@data+1,w
 18510  0F5C  0087               	movwf	7
 18511  0F5D  3147               	addfsr 1,7
 18512  0F5E  0016               	moviw fsr1++
 18513  0F5F  3A64               	xorlw	100
 18514  0F60  00D4               	movwf	??_flashy_Main
 18515  0F61  0016               	moviw fsr1++
 18516  0F62  04D4               	iorwf	??_flashy_Main,f
 18517  0F63  1D03               	btfss	3,2
 18518  0F64  2F70               	goto	l7765
 18519                           
 18520                           ;flashy_task.c: 465: nullifyBadge_irTxRegister(data->badge);
 18521  0F65  085E               	movf	flashy_Main@data,w
 18522  0F66  0086               	movwf	6
 18523  0F67  085F               	movf	flashy_Main@data+1,w
 18524  0F68  0087               	movwf	7
 18525  0F69  0801               	movf	1,w
 18526  0F6A  31A5  25B7  3188   	fcall	_nullifyBadge_irTxRegister
 18527                           
 18528                           ;flashy_task.c: 466: nullifyBadge_irTxSet();
 18529  0F6D  31A4  24B2  3188   	fcall	_nullifyBadge_irTxSet
 18530  0F70                     l7765:	
 18531                           
 18532                           ;flashy_task.c: 467: }
 18533                           ;flashy_task.c: 468: if (data->blasterTickCount == 100 - 1 ){
 18534  0F70  0020               	movlb	0	; select bank0
 18535  0F71  085E               	movf	flashy_Main@data,w
 18536  0F72  0086               	movwf	6
 18537  0F73  085F               	movf	flashy_Main@data+1,w
 18538  0F74  0087               	movwf	7
 18539  0F75  3147               	addfsr 1,7
 18540  0F76  0016               	moviw fsr1++
 18541  0F77  3A63               	xorlw	99
 18542  0F78  00D4               	movwf	??_flashy_Main
 18543  0F79  0016               	moviw fsr1++
 18544  0F7A  04D4               	iorwf	??_flashy_Main,f
 18545  0F7B  1D03               	btfss	3,2
 18546  0F7C  2F89               	goto	l7771
 18547                           
 18548                           ;flashy_task.c: 469: nullifyBadge_irTxClr();
 18549  0F7D  31A4  24AF  3188   	fcall	_nullifyBadge_irTxClr
 18550                           
 18551                           ;flashy_task.c: 470: nullifyBadge_irTxRelease(data->badge);
 18552  0F80  0020               	movlb	0	; select bank0
 18553  0F81  085E               	movf	flashy_Main@data,w
 18554  0F82  0086               	movwf	6
 18555  0F83  085F               	movf	flashy_Main@data+1,w
 18556  0F84  0087               	movwf	7
 18557  0F85  0801               	movf	1,w
 18558  0F86  31A5  2539  3188   	fcall	_nullifyBadge_irTxRelease
 18559  0F89                     l7771:	
 18560                           
 18561                           ;flashy_task.c: 471: }
 18562                           ;flashy_task.c: 472: if (data->blasterTickCount == 0){
 18563  0F89  0020               	movlb	0	; select bank0
 18564  0F8A  085E               	movf	flashy_Main@data,w
 18565  0F8B  0086               	movwf	6
 18566  0F8C  085F               	movf	flashy_Main@data+1,w
 18567  0F8D  0087               	movwf	7
 18568  0F8E  3147               	addfsr 1,7
 18569  0F8F  0016               	moviw fsr1++
 18570  0F90  0401               	iorwf	1,w
 18571  0F91  1D03               	btfss	3,2
 18572  0F92  2FBD               	goto	l7783
 18573                           
 18574                           ;flashy_task.c: 473: data->displayTickCount = 0;
 18575  0F93  085E               	movf	flashy_Main@data,w
 18576  0F94  0086               	movwf	6
 18577  0F95  085F               	movf	flashy_Main@data+1,w
 18578  0F96  0087               	movwf	7
 18579  0F97  3144               	addfsr 1,4
 18580  0F98  3000               	movlw	0
 18581  0F99  3FC0               	movwi [0]fsr1
 18582  0F9A  3FC1               	movwi [1]fsr1
 18583                           
 18584                           ;flashy_task.c: 474: data->delayTickCount = 5;
 18585  0F9B  085E               	movf	flashy_Main@data,w
 18586  0F9C  0086               	movwf	6
 18587  0F9D  085F               	movf	flashy_Main@data+1,w
 18588  0F9E  0087               	movwf	7
 18589  0F9F  3141               	addfsr 1,1
 18590  0FA0  3005               	movlw	5
 18591  0FA1  3FC0               	movwi [0]fsr1
 18592  0FA2  3000               	movlw	0
 18593  0FA3  3FC1               	movwi [1]fsr1
 18594                           
 18595                           ;flashy_task.c: 476: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 18596  0FA4  085E               	movf	flashy_Main@data,w
 18597  0FA5  0086               	movwf	6
 18598  0FA6  085F               	movf	flashy_Main@data+1,w
 18599  0FA7  0087               	movwf	7
 18600  0FA8  3143               	addfsr 1,3
 18601  0FA9  0181               	clrf	1
 18602                           
 18603                           ;flashy_task.c: 477: data->display_state = FLASHY_STATE_DISPLAY;
 18604  0FAA  085E               	movf	flashy_Main@data,w
 18605  0FAB  0086               	movwf	6
 18606  0FAC  085F               	movf	flashy_Main@data+1,w
 18607  0FAD  0087               	movwf	7
 18608  0FAE  3146               	addfsr 1,6
 18609  0FAF  0181               	clrf	1
 18610                           
 18611                           ;flashy_task.c: 478: data->blaster_state = FLASHY_BLASTER_IDLE_STATE;
 18612  0FB0  085E               	movf	flashy_Main@data,w
 18613  0FB1  3E09               	addlw	9
 18614  0FB2  00D4               	movwf	??_flashy_Main
 18615  0FB3  3000               	movlw	0
 18616  0FB4  3D5F               	addwfc	flashy_Main@data+1,w
 18617  0FB5  00D5               	movwf	??_flashy_Main+1
 18618  0FB6  0854               	movf	??_flashy_Main,w
 18619  0FB7  0086               	movwf	6
 18620  0FB8  0855               	movf	??_flashy_Main+1,w
 18621  0FB9  0087               	movwf	7
 18622  0FBA  3001               	movlw	1
 18623  0FBB  0081               	movwf	1
 18624                           
 18625                           ;flashy_task.c: 479: }
 18626  0FBC  2FD6               	goto	l7789
 18627  0FBD                     l7783:	
 18628                           
 18629                           ;flashy_task.c: 480: else {
 18630                           ;flashy_task.c: 481: data->blasterTickCount -= 1;
 18631  0FBD  085E               	movf	flashy_Main@data,w
 18632  0FBE  0086               	movwf	6
 18633  0FBF  085F               	movf	flashy_Main@data+1,w
 18634  0FC0  0087               	movwf	7
 18635  0FC1  3147               	addfsr 1,7
 18636  0FC2  3001               	movlw	1
 18637  0FC3  0281               	subwf	1,f
 18638  0FC4  3141               	addfsr 1,1
 18639  0FC5  3000               	movlw	0
 18640  0FC6  3B81               	subwfb	1,f
 18641  0FC7  317F               	addfsr 1,-1
 18642                           
 18643                           ;flashy_task.c: 486: }
 18644                           
 18645                           ;flashy_task.c: 485: break;
 18646                           
 18647                           ;flashy_task.c: 484: case FLASHY_BLASTER_IDLE_STATE:
 18648                           
 18649                           ;flashy_task.c: 482: }
 18650                           ;flashy_task.c: 483: break;
 18651  0FC8  2FD6               	goto	l7789
 18652  0FC9                     l7787:	
 18653  0FC9  085E               	movf	flashy_Main@data,w
 18654  0FCA  0086               	movwf	6
 18655  0FCB  085F               	movf	flashy_Main@data+1,w
 18656  0FCC  0087               	movwf	7
 18657  0FCD  3149               	addfsr 1,9
 18658  0FCE  0801               	movf	1,w
 18659                           
 18660                           ; Switch size 1, requested type "space"
 18661                           ; Number of cases is 2, Range of values is 0 to 1
 18662                           ; switch strategies available:
 18663                           ; Name         Instructions Cycles
 18664                           ; simple_byte            7     4 (average)
 18665                           ; direct_byte           10     6 (fixed)
 18666                           ; jumptable            260     6 (fixed)
 18667                           ;	Chosen strategy is simple_byte
 18668  0FCF  3A00               	xorlw	0	; case 0
 18669  0FD0  1903               	skipnz
 18670  0FD1  2F59               	goto	l7759
 18671  0FD2  3A01               	xorlw	1	; case 1
 18672  0FD3  1903               	skipnz
 18673  0FD4  2FD6               	goto	l7789
 18674  0FD5  2FD6               	goto	l7789
 18675  0FD6                     l7789:	
 18676                           
 18677                           ;flashy_task.c: 489: if (nullifyBadge_irGet() && (data->blaster_state != FLASHY_BLASTER_
      +                          SHOOTING_STATE)) {
 18678  0FD6  3187  27FB  3188   	fcall	_nullifyBadge_irGet
 18679  0FD9  3A00               	xorlw	0
 18680  0FDA  1903               	skipnz
 18681  0FDB  0008               	return
 18682  0FDC  0020               	movlb	0	; select bank0
 18683  0FDD  085E               	movf	flashy_Main@data,w
 18684  0FDE  0086               	movwf	6
 18685  0FDF  085F               	movf	flashy_Main@data+1,w
 18686  0FE0  0087               	movwf	7
 18687  0FE1  3149               	addfsr 1,9
 18688  0FE2  0801               	movf	1,w
 18689  0FE3  1903               	btfsc	3,2
 18690  0FE4  0008               	return
 18691                           
 18692                           ;flashy_task.c: 490: data->displayTickCount = 0;
 18693  0FE5  085E               	movf	flashy_Main@data,w
 18694  0FE6  0086               	movwf	6
 18695  0FE7  085F               	movf	flashy_Main@data+1,w
 18696  0FE8  0087               	movwf	7
 18697  0FE9  3144               	addfsr 1,4
 18698  0FEA  3000               	movlw	0
 18699  0FEB  3FC0               	movwi [0]fsr1
 18700  0FEC  3FC1               	movwi [1]fsr1
 18701                           
 18702                           ;flashy_task.c: 491: deaths += 1;
 18703  0FED  3001               	movlw	1
 18704  0FEE  0021               	movlb	1	; select bank1
 18705  0FEF  07A8               	addwf	_deaths^(0+128),f
 18706  0FF0  3000               	movlw	0
 18707  0FF1  3DA9               	addwfc	(_deaths+1)^(0+128),f
 18708                           
 18709                           ;flashy_task.c: 492: data->display_state = FLASHY_STATE_DISPLAY_SHOT;
 18710  0FF2  0020               	movlb	0	; select bank0
 18711  0FF3  085E               	movf	flashy_Main@data,w
 18712  0FF4  3E06               	addlw	6
 18713  0FF5  00D4               	movwf	??_flashy_Main
 18714  0FF6  3000               	movlw	0
 18715  0FF7  3D5F               	addwfc	flashy_Main@data+1,w
 18716  0FF8  00D5               	movwf	??_flashy_Main+1
 18717  0FF9  0854               	movf	??_flashy_Main,w
 18718  0FFA  0086               	movwf	6
 18719  0FFB  0855               	movf	??_flashy_Main+1,w
 18720  0FFC  0087               	movwf	7
 18721  0FFD  3003               	movlw	3
 18722  0FFE  0081               	movwf	1
 18723  0FFF  0008               	return
 18724  1000                     __end_of_flashy_Main:	
 18725                           
 18726                           	psect	swtext1
 18727  2080                     __pswtext1:	
 18728  2080                     S8757:	
 18729  2080  3188  28D8         	ljmp	l7397
 18730  2082  3188  28FD         	ljmp	l7407
 18731  2084  3189  2921         	ljmp	l7417
 18732  2086  3189  2939         	ljmp	l7425
 18733  2088  3189  2970         	ljmp	l7443
 18734  208A  3189  2995         	ljmp	l7453
 18735                           
 18736                           	psect	text17
 18737  1443                     __ptext17:	
 18738 ;; *************** function _slot_Main *****************
 18739 ;; Defined at:
 18740 ;;		line 34 in file "slot_task.c"
 18741 ;; Parameters:    Size  Location     Type
 18742 ;;  taskData        2   50[BANK0 ] PTR void 
 18743 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18744 ;;		 -> flashy_TaskData(30), NULL(0), 
 18745 ;; Auto vars:     Size  Location     Type
 18746 ;;  data            2   54[BANK0 ] PTR struct t_slot_taskDa
 18747 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18748 ;;		 -> flashy_TaskData(30), NULL(0), 
 18749 ;;  buttonPresse    1   53[BANK0 ] unsigned char 
 18750 ;; Return value:  Size  Location     Type
 18751 ;;                  1    wreg      void 
 18752 ;; Registers used:
 18753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18754 ;; Tracked objects:
 18755 ;;		On entry : 0/0
 18756 ;;		On exit  : 0/0
 18757 ;;		Unchanged: 0/0
 18758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18759 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18760 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18762 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18763 ;;Total ram usage:        6 bytes
 18764 ;; Hardware stack levels used:    1
 18765 ;; Hardware stack levels required when called:   10
 18766 ;; This function calls:
 18767 ;;		_marquee
 18768 ;;		_nullifyBadge_buttonsGet
 18769 ;; This function is called by:
 18770 ;;		_main
 18771 ;;		_scheduler_TaskRun
 18772 ;; This function uses a non-reentrant model
 18773 ;;
 18774                           
 18775                           
 18776                           ;psect for function _slot_Main
 18777  1443                     _slot_Main:	
 18778                           
 18779                           ;slot_task.c: 35: struct t_slot_taskData *data = (struct t_slot_taskData *) taskData;
 18780                           
 18781                           ;incstack = 0
 18782                           ; Regs used in _slot_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18783  1443  0020               	movlb	0	; select bank0
 18784  1444  0853               	movf	slot_Main@taskData+1,w
 18785  1445  00D7               	movwf	slot_Main@data+1
 18786  1446  0852               	movf	slot_Main@taskData,w
 18787  1447  00D6               	movwf	slot_Main@data
 18788                           
 18789                           ;slot_task.c: 36: u8 buttonPressed;
 18790                           ;slot_task.c: 39: if ( currentTask != SLOT_TASK ){
 18791  1448  0021               	movlb	1	; select bank1
 18792  1449  0338               	decf	_currentTask^(0+128),w
 18793  144A  0439               	iorwf	(_currentTask+1)^(0+128),w
 18794  144B  1903               	btfsc	3,2
 18795  144C  2C78               	goto	l8003
 18796                           
 18797                           ;slot_task.c: 40: buttonPressed = nullifyBadge_buttonsGet();
 18798  144D  3198  20F4         	fcall	_nullifyBadge_buttonsGet
 18799  144F  0020               	movlb	0	; select bank0
 18800  1450  00D4               	movwf	??_slot_Main
 18801  1451  0854               	movf	??_slot_Main,w
 18802  1452  00D5               	movwf	slot_Main@buttonPressed
 18803                           
 18804                           ;slot_task.c: 44: data->holdCountA = 1;
 18805                           
 18806                           ;slot_task.c: 42: default:
 18807                           
 18808                           ;slot_task.c: 41: switch (buttonPressed) {
 18809  1453  0856               	movf	slot_Main@data,w
 18810  1454  0086               	movwf	6
 18811  1455  0857               	movf	slot_Main@data+1,w
 18812  1456  0087               	movwf	7
 18813  1457  3144               	addfsr 1,4
 18814  1458  3001               	movlw	1
 18815  1459  3FC0               	movwi [0]fsr1
 18816  145A  3000               	movlw	0
 18817  145B  3FC1               	movwi [1]fsr1
 18818                           
 18819                           ;slot_task.c: 45: data->holdCountB = 1;
 18820  145C  0856               	movf	slot_Main@data,w
 18821  145D  0086               	movwf	6
 18822  145E  0857               	movf	slot_Main@data+1,w
 18823  145F  0087               	movwf	7
 18824  1460  3146               	addfsr 1,6
 18825  1461  3001               	movlw	1
 18826  1462  3FC0               	movwi [0]fsr1
 18827  1463  3000               	movlw	0
 18828  1464  3FC1               	movwi [1]fsr1
 18829                           
 18830                           ;slot_task.c: 46: data->holdCountX = 1;
 18831  1465  0856               	movf	slot_Main@data,w
 18832  1466  0086               	movwf	6
 18833  1467  0857               	movf	slot_Main@data+1,w
 18834  1468  0087               	movwf	7
 18835  1469  3148               	addfsr 1,8
 18836  146A  3001               	movlw	1
 18837  146B  3FC0               	movwi [0]fsr1
 18838  146C  3000               	movlw	0
 18839  146D  3FC1               	movwi [1]fsr1
 18840                           
 18841                           ;slot_task.c: 47: data->holdCountY = 1;
 18842  146E  0856               	movf	slot_Main@data,w
 18843  146F  0086               	movwf	6
 18844  1470  0857               	movf	slot_Main@data+1,w
 18845  1471  0087               	movwf	7
 18846  1472  314A               	addfsr 1,10
 18847  1473  3001               	movlw	1
 18848  1474  3FC0               	movwi [0]fsr1
 18849  1475  3000               	movlw	0
 18850  1476  3FC1               	movwi [1]fsr1
 18851                           
 18852                           ;slot_task.c: 49: }
 18853                           
 18854                           ;slot_task.c: 48: break;
 18855  1477  0008               	return
 18856  1478                     l8003:	
 18857                           ;slot_task.c: 50: return;
 18858                           
 18859                           
 18860                           ;slot_task.c: 51: }
 18861                           ;slot_task.c: 53: buttonPressed = nullifyBadge_buttonsGet();
 18862  1478  3198  20F4  3194   	fcall	_nullifyBadge_buttonsGet
 18863  147B  0020               	movlb	0	; select bank0
 18864  147C  00D4               	movwf	??_slot_Main
 18865  147D  0854               	movf	??_slot_Main,w
 18866  147E  00D5               	movwf	slot_Main@buttonPressed
 18867                           
 18868                           ;slot_task.c: 56: marquee("$$$ ", data->displayTickCount);
 18869                           
 18870                           ;slot_task.c: 55: default:
 18871                           
 18872                           ;slot_task.c: 54: switch (buttonPressed) {
 18873  147F  30F6               	movlw	low (STR_30| (0+32768))
 18874  1480  00BA               	movwf	marquee@string
 18875  1481  30A8               	movlw	high (STR_30| (0+32768))
 18876  1482  00BB               	movwf	marquee@string+1
 18877  1483  0856               	movf	slot_Main@data,w
 18878  1484  0086               	movwf	6
 18879  1485  0857               	movf	slot_Main@data+1,w
 18880  1486  0087               	movwf	7
 18881  1487  3142               	addfsr 1,2
 18882  1488  3F40               	moviw [0]fsr1
 18883  1489  00BC               	movwf	marquee@count
 18884  148A  3F41               	moviw [1]fsr1
 18885  148B  00BD               	movwf	marquee@count+1
 18886  148C  3193  2350  3194   	fcall	_marquee
 18887                           
 18888                           ;slot_task.c: 57: data->displayTickCount += 1;
 18889  148F  0020               	movlb	0	; select bank0
 18890  1490  0856               	movf	slot_Main@data,w
 18891  1491  0086               	movwf	6
 18892  1492  0857               	movf	slot_Main@data+1,w
 18893  1493  0087               	movwf	7
 18894  1494  3142               	addfsr 1,2
 18895  1495  3001               	movlw	1
 18896  1496  0781               	addwf	1,f
 18897  1497  3141               	addfsr 1,1
 18898  1498  1803               	skipnc
 18899  1499  0A81               	incf	1,f
 18900                           
 18901                           ;slot_task.c: 59: data->holdCountA = 0;
 18902  149A  0856               	movf	slot_Main@data,w
 18903  149B  0086               	movwf	6
 18904  149C  0857               	movf	slot_Main@data+1,w
 18905  149D  0087               	movwf	7
 18906  149E  3144               	addfsr 1,4
 18907  149F  3000               	movlw	0
 18908  14A0  3FC0               	movwi [0]fsr1
 18909  14A1  3FC1               	movwi [1]fsr1
 18910                           
 18911                           ;slot_task.c: 60: data->holdCountB = 0;
 18912  14A2  0856               	movf	slot_Main@data,w
 18913  14A3  0086               	movwf	6
 18914  14A4  0857               	movf	slot_Main@data+1,w
 18915  14A5  0087               	movwf	7
 18916  14A6  3146               	addfsr 1,6
 18917  14A7  3000               	movlw	0
 18918  14A8  3FC0               	movwi [0]fsr1
 18919  14A9  3FC1               	movwi [1]fsr1
 18920                           
 18921                           ;slot_task.c: 61: data->holdCountX = 0;
 18922  14AA  0856               	movf	slot_Main@data,w
 18923  14AB  0086               	movwf	6
 18924  14AC  0857               	movf	slot_Main@data+1,w
 18925  14AD  0087               	movwf	7
 18926  14AE  3148               	addfsr 1,8
 18927  14AF  3000               	movlw	0
 18928  14B0  3FC0               	movwi [0]fsr1
 18929  14B1  3FC1               	movwi [1]fsr1
 18930                           
 18931                           ;slot_task.c: 62: data->holdCountY = 0;
 18932  14B2  0856               	movf	slot_Main@data,w
 18933  14B3  0086               	movwf	6
 18934  14B4  0857               	movf	slot_Main@data+1,w
 18935  14B5  0087               	movwf	7
 18936  14B6  314A               	addfsr 1,10
 18937  14B7  3000               	movlw	0
 18938  14B8  3FC0               	movwi [0]fsr1
 18939  14B9  3FC1               	movwi [1]fsr1
 18940                           
 18941                           ;slot_task.c: 63: data->noholdCount += 1;
 18942  14BA  0856               	movf	slot_Main@data,w
 18943  14BB  0086               	movwf	6
 18944  14BC  0857               	movf	slot_Main@data+1,w
 18945  14BD  0087               	movwf	7
 18946  14BE  314C               	addfsr 1,12
 18947  14BF  3001               	movlw	1
 18948  14C0  0781               	addwf	1,f
 18949  14C1  3141               	addfsr 1,1
 18950  14C2  1803               	skipnc
 18951  14C3  0A81               	incf	1,f
 18952                           
 18953                           ;slot_task.c: 64: }
 18954  14C4  0008               	return
 18955  14C5                     __end_of_slot_Main:	
 18956                           
 18957                           	psect	text18
 18958  1957                     __ptext18:	
 18959 ;; *************** function _secret_clear *****************
 18960 ;; Defined at:
 18961 ;;		line 178 in file "secret_task.c"
 18962 ;; Parameters:    Size  Location     Type
 18963 ;;  data            2    1[COMMON] PTR struct t_secret_task
 18964 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18965 ;;		 -> flashy_TaskData(30), NULL(0), 
 18966 ;; Auto vars:     Size  Location     Type
 18967 ;;		None
 18968 ;; Return value:  Size  Location     Type
 18969 ;;                  1    wreg      void 
 18970 ;; Registers used:
 18971 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18972 ;; Tracked objects:
 18973 ;;		On entry : 0/0
 18974 ;;		On exit  : 0/0
 18975 ;;		Unchanged: 0/0
 18976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18981 ;;Total ram usage:        2 bytes
 18982 ;; Hardware stack levels used:    1
 18983 ;; Hardware stack levels required when called:    4
 18984 ;; This function calls:
 18985 ;;		Nothing
 18986 ;; This function is called by:
 18987 ;;		_secret_Main
 18988 ;; This function uses a non-reentrant model
 18989 ;;
 18990                           
 18991                           
 18992                           ;psect for function _secret_clear
 18993  1957                     _secret_clear:	
 18994                           
 18995                           ;secret_task.c: 180: data->delayTickCount = 300;
 18996                           
 18997                           ;incstack = 0
 18998                           ; Regs used in _secret_clear: [wreg+fsr1l+fsr1h+status,2+status,0]
 18999  1957  0871               	movf	secret_clear@data,w
 19000  1958  0086               	movwf	6
 19001  1959  0872               	movf	secret_clear@data+1,w
 19002  195A  0087               	movwf	7
 19003  195B  3142               	addfsr 1,2
 19004  195C  302C               	movlw	44
 19005  195D  3FC0               	movwi [0]fsr1
 19006  195E  3001               	movlw	1
 19007  195F  3FC1               	movwi [1]fsr1
 19008                           
 19009                           ;secret_task.c: 181: data->holdCountA = 0;
 19010  1960  0871               	movf	secret_clear@data,w
 19011  1961  0086               	movwf	6
 19012  1962  0872               	movf	secret_clear@data+1,w
 19013  1963  0087               	movwf	7
 19014  1964  3144               	addfsr 1,4
 19015  1965  3000               	movlw	0
 19016  1966  3FC0               	movwi [0]fsr1
 19017  1967  3FC1               	movwi [1]fsr1
 19018                           
 19019                           ;secret_task.c: 182: data->holdCountB = 0;
 19020  1968  0871               	movf	secret_clear@data,w
 19021  1969  0086               	movwf	6
 19022  196A  0872               	movf	secret_clear@data+1,w
 19023  196B  0087               	movwf	7
 19024  196C  3146               	addfsr 1,6
 19025  196D  3000               	movlw	0
 19026  196E  3FC0               	movwi [0]fsr1
 19027  196F  3FC1               	movwi [1]fsr1
 19028                           
 19029                           ;secret_task.c: 183: data->holdCountX = 0;
 19030  1970  0871               	movf	secret_clear@data,w
 19031  1971  0086               	movwf	6
 19032  1972  0872               	movf	secret_clear@data+1,w
 19033  1973  0087               	movwf	7
 19034  1974  3148               	addfsr 1,8
 19035  1975  3000               	movlw	0
 19036  1976  3FC0               	movwi [0]fsr1
 19037  1977  3FC1               	movwi [1]fsr1
 19038                           
 19039                           ;secret_task.c: 184: data->holdCountY = 0;
 19040  1978  0871               	movf	secret_clear@data,w
 19041  1979  0086               	movwf	6
 19042  197A  0872               	movf	secret_clear@data+1,w
 19043  197B  0087               	movwf	7
 19044  197C  314A               	addfsr 1,10
 19045  197D  3000               	movlw	0
 19046  197E  3FC0               	movwi [0]fsr1
 19047  197F  3FC1               	movwi [1]fsr1
 19048                           
 19049                           ;secret_task.c: 185: data->noholdCount = 0;
 19050  1980  0871               	movf	secret_clear@data,w
 19051  1981  0086               	movwf	6
 19052  1982  0872               	movf	secret_clear@data+1,w
 19053  1983  0087               	movwf	7
 19054  1984  314C               	addfsr 1,12
 19055  1985  3000               	movlw	0
 19056  1986  3FC0               	movwi [0]fsr1
 19057  1987  3FC1               	movwi [1]fsr1
 19058  1988  0008               	return
 19059  1989                     __end_of_secret_clear:	
 19060                           
 19061                           	psect	text19
 19062  155B                     __ptext19:	
 19063 ;; *************** function _secret_check *****************
 19064 ;; Defined at:
 19065 ;;		line 69 in file "secret_task.c"
 19066 ;; Parameters:    Size  Location     Type
 19067 ;;  data            2    7[COMMON] PTR struct t_secret_task
 19068 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19069 ;;		 -> flashy_TaskData(30), NULL(0), 
 19070 ;;  buttonPresse    1    9[COMMON] unsigned char 
 19071 ;; Auto vars:     Size  Location     Type
 19072 ;;  i               2    8[BANK0 ] unsigned int 
 19073 ;;  hit_counter     6    0        unsigned char [6]
 19074 ;;  currents_siz    2    5[BANK0 ] unsigned int 
 19075 ;;  size            2    3[BANK0 ] unsigned int 
 19076 ;;  inputs          1    7[BANK0 ] PTR unsigned char 
 19077 ;;		 -> secret_inputs.inputs(20), secret_inputs(25), 
 19078 ;; Return value:  Size  Location     Type
 19079 ;;                  1    wreg      unsigned char 
 19080 ;; Registers used:
 19081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19082 ;; Tracked objects:
 19083 ;;		On entry : 0/0
 19084 ;;		On exit  : 0/0
 19085 ;;		Unchanged: 0/0
 19086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19087 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19088 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19089 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19090 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19091 ;;Total ram usage:       13 bytes
 19092 ;; Hardware stack levels used:    1
 19093 ;; Hardware stack levels required when called:    5
 19094 ;; This function calls:
 19095 ;;		___bmul
 19096 ;;		_strlen
 19097 ;; This function is called by:
 19098 ;;		_secret_Main
 19099 ;; This function uses a non-reentrant model
 19100 ;;
 19101                           
 19102                           
 19103                           ;psect for function _secret_check
 19104  155B                     _secret_check:	
 19105                           
 19106                           ;secret_task.c: 70: u8 *inputs;
 19107                           ;secret_task.c: 71: u16 size = sizeof(secret_inputs) / sizeof(secret_inputs[0]);
 19108                           
 19109                           ;incstack = 0
 19110                           ; Regs used in _secret_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19111  155B  3001               	movlw	1
 19112  155C  0020               	movlb	0	; select bank0
 19113  155D  00A3               	movwf	secret_check@size
 19114  155E  3000               	movlw	0
 19115  155F  00A4               	movwf	secret_check@size+1
 19116                           
 19117                           ;secret_task.c: 72: u16 currents_size;
 19118                           ;secret_task.c: 73: char hit_counter[6];
 19119                           ;secret_task.c: 75: for (u16 i = 0; i < size; i++){
 19120  1560  01A8               	clrf	secret_check@i
 19121  1561  01A9               	clrf	secret_check@i+1
 19122  1562                     l7081:	
 19123  1562  0824               	movf	secret_check@size+1,w
 19124  1563  0229               	subwf	secret_check@i+1,w
 19125  1564  1D03               	skipz
 19126  1565  2D68               	goto	u4415
 19127  1566  0823               	movf	secret_check@size,w
 19128  1567  0228               	subwf	secret_check@i,w
 19129  1568                     u4415:	
 19130  1568  1803               	btfsc	3,0
 19131  1569  2E14               	goto	l7083
 19132                           
 19133                           ;secret_task.c: 76: inputs = secret_inputs[i].inputs;
 19134  156A  3019               	movlw	25
 19135  156B  00A0               	movwf	??_secret_check
 19136  156C  0820               	movf	??_secret_check,w
 19137  156D  00F1               	movwf	___bmul@multiplicand
 19138  156E  0828               	movf	secret_check@i,w
 19139  156F  31A6  2615  3195   	fcall	___bmul
 19140  1572  3EB6               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19141  1573  0020               	movlb	0	; select bank0
 19142  1574  00A1               	movwf	??_secret_check+1
 19143  1575  0821               	movf	??_secret_check+1,w
 19144  1576  00A7               	movwf	secret_check@inputs
 19145                           
 19146                           ;secret_task.c: 78: if (buttonPressed == inputs[secret_inputs[i].idx]){
 19147  1577  3019               	movlw	25
 19148  1578  00A0               	movwf	??_secret_check
 19149  1579  0820               	movf	??_secret_check,w
 19150  157A  00F1               	movwf	___bmul@multiplicand
 19151  157B  0828               	movf	secret_check@i,w
 19152  157C  31A6  2615  3195   	fcall	___bmul
 19153  157F  3E14               	addlw	20
 19154  1580  3EB6               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19155  1581  0086               	movwf	6
 19156  1582  3001               	movlw	1	; select bank3/4
 19157  1583  0087               	movwf	7
 19158  1584  0801               	movf	1,w
 19159  1585  0020               	movlb	0	; select bank0
 19160  1586  0727               	addwf	secret_check@inputs,w
 19161  1587  00A1               	movwf	??_secret_check+1
 19162  1588  0821               	movf	??_secret_check+1,w
 19163  1589  0086               	movwf	6
 19164  158A  3001               	movlw	1	; select bank2/3
 19165  158B  0087               	movwf	7
 19166  158C  0801               	movf	1,w
 19167  158D  0679               	xorwf	secret_check@buttonPressed,w
 19168  158E  1D03               	skipz
 19169  158F  2DFD               	goto	l7077
 19170                           
 19171                           ;secret_task.c: 79: currents_size = strlen((const char *)inputs);
 19172  1590  0827               	movf	secret_check@inputs,w
 19173  1591  00F1               	movwf	strlen@s
 19174  1592  3001               	movlw	1
 19175  1593  00F2               	movwf	strlen@s+1
 19176  1594  31A7  2760  3195   	fcall	_strlen
 19177  1597  0872               	movf	?_strlen+1,w
 19178  1598  0020               	movlb	0	; select bank0
 19179  1599  00A6               	movwf	secret_check@currents_size+1
 19180  159A  0871               	movf	?_strlen,w
 19181  159B  00A5               	movwf	secret_check@currents_size
 19182                           
 19183                           ;secret_task.c: 80: secret_inputs[i].idx++;
 19184  159C  3019               	movlw	25
 19185  159D  00A0               	movwf	??_secret_check
 19186  159E  0820               	movf	??_secret_check,w
 19187  159F  00F1               	movwf	___bmul@multiplicand
 19188  15A0  0828               	movf	secret_check@i,w
 19189  15A1  31A6  2615  3195   	fcall	___bmul
 19190  15A4  3E14               	addlw	20
 19191  15A5  3EB6               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19192  15A6  0086               	movwf	6
 19193  15A7  3001               	movlw	1	; select bank3/4
 19194  15A8  0087               	movwf	7
 19195  15A9  3001               	movlw	1
 19196  15AA  0781               	addwf	1,f
 19197  15AB  3141               	addfsr 1,1
 19198  15AC  1803               	skipnc
 19199  15AD  0A81               	incf	1,f
 19200                           
 19201                           ;secret_task.c: 82: if (secret_inputs[i].idx == currents_size) {
 19202  15AE  3019               	movlw	25
 19203  15AF  0020               	movlb	0	; select bank0
 19204  15B0  00A0               	movwf	??_secret_check
 19205  15B1  0820               	movf	??_secret_check,w
 19206  15B2  00F1               	movwf	___bmul@multiplicand
 19207  15B3  0828               	movf	secret_check@i,w
 19208  15B4  31A6  2615  3195   	fcall	___bmul
 19209  15B7  3E14               	addlw	20
 19210  15B8  3EB6               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19211  15B9  0086               	movwf	6
 19212  15BA  3001               	movlw	1	; select bank3/4
 19213  15BB  0087               	movwf	7
 19214  15BC  3F40               	moviw [0]fsr1
 19215  15BD  0020               	movlb	0	; select bank0
 19216  15BE  00A1               	movwf	??_secret_check+1
 19217  15BF  3F41               	moviw [1]fsr1
 19218  15C0  00A2               	movwf	??_secret_check+2
 19219  15C1  0826               	movf	secret_check@currents_size+1,w
 19220  15C2  0622               	xorwf	??_secret_check+2,w
 19221  15C3  1D03               	skipz
 19222  15C4  2DC7               	goto	u4405
 19223  15C5  0825               	movf	secret_check@currents_size,w
 19224  15C6  0621               	xorwf	??_secret_check+1,w
 19225  15C7                     u4405:	
 19226  15C7  1D03               	skipz
 19227  15C8  2E0E               	goto	l7079
 19228                           
 19229                           ;secret_task.c: 84: secret_inputs[i].idx = 0;
 19230  15C9  3019               	movlw	25
 19231  15CA  00A0               	movwf	??_secret_check
 19232  15CB  0820               	movf	??_secret_check,w
 19233  15CC  00F1               	movwf	___bmul@multiplicand
 19234  15CD  0828               	movf	secret_check@i,w
 19235  15CE  31A6  2615  3195   	fcall	___bmul
 19236  15D1  3E14               	addlw	20
 19237  15D2  3EB6               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19238  15D3  0086               	movwf	6
 19239  15D4  3001               	movlw	1	; select bank3/4
 19240  15D5  0087               	movwf	7
 19241  15D6  3000               	movlw	0
 19242  15D7  3FC0               	movwi [0]fsr1
 19243  15D8  3FC1               	movwi [1]fsr1
 19244                           
 19245                           ;secret_task.c: 87: *(secret_inputs[i].variable) = (u16) secret_inputs[i].value;
 19246  15D9  3019               	movlw	25
 19247  15DA  0020               	movlb	0	; select bank0
 19248  15DB  00A0               	movwf	??_secret_check
 19249  15DC  0820               	movf	??_secret_check,w
 19250  15DD  00F1               	movwf	___bmul@multiplicand
 19251  15DE  0828               	movf	secret_check@i,w
 19252  15DF  31A6  2615  3195   	fcall	___bmul
 19253  15E2  3E17               	addlw	23
 19254  15E3  3EB6               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19255  15E4  0086               	movwf	6
 19256  15E5  3001               	movlw	1	; select bank3/4
 19257  15E6  0087               	movwf	7
 19258  15E7  3019               	movlw	25
 19259  15E8  0020               	movlb	0	; select bank0
 19260  15E9  00A1               	movwf	??_secret_check+1
 19261  15EA  0821               	movf	??_secret_check+1,w
 19262  15EB  00F1               	movwf	___bmul@multiplicand
 19263  15EC  0828               	movf	secret_check@i,w
 19264  15ED  31A6  2615         	fcall	___bmul
 19265  15EF  3E16               	addlw	22
 19266  15F0  3EB6               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19267  15F1  0084               	movwf	4
 19268  15F2  3001               	movlw	1	; select bank3/4
 19269  15F3  0085               	movwf	5
 19270  15F4  0800               	movf	0,w
 19271  15F5  0084               	movwf	4
 19272  15F6  0185               	clrf	5
 19273  15F7  3F40               	moviw [0]fsr1
 19274  15F8  3F80               	movwi [0]fsr0
 19275  15F9  3F41               	moviw [1]fsr1
 19276  15FA  3F81               	movwi [1]fsr0
 19277                           
 19278                           ;secret_task.c: 89: return 1;
 19279  15FB  3001               	movlw	1
 19280  15FC  0008               	return
 19281  15FD                     l7077:	
 19282                           ;secret_task.c: 90: }
 19283                           ;secret_task.c: 91: } else {
 19284                           
 19285                           
 19286                           ;secret_task.c: 93: secret_inputs[i].idx = 0;
 19287  15FD  3019               	movlw	25
 19288  15FE  0020               	movlb	0	; select bank0
 19289  15FF  00A0               	movwf	??_secret_check
 19290  1600  0820               	movf	??_secret_check,w
 19291  1601  00F1               	movwf	___bmul@multiplicand
 19292  1602  0828               	movf	secret_check@i,w
 19293  1603  31A6  2615  3195   	fcall	___bmul
 19294  1606  3E14               	addlw	20
 19295  1607  3EB6               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19296  1608  0086               	movwf	6
 19297  1609  3001               	movlw	1	; select bank3/4
 19298  160A  0087               	movwf	7
 19299  160B  3000               	movlw	0
 19300  160C  3FC0               	movwi [0]fsr1
 19301  160D  3FC1               	movwi [1]fsr1
 19302  160E                     l7079:	
 19303  160E  3001               	movlw	1
 19304  160F  0020               	movlb	0	; select bank0
 19305  1610  07A8               	addwf	secret_check@i,f
 19306  1611  3000               	movlw	0
 19307  1612  3DA9               	addwfc	secret_check@i+1,f
 19308  1613  2D62               	goto	l7081
 19309  1614                     l7083:	
 19310                           
 19311                           ;secret_task.c: 94: }
 19312                           ;secret_task.c: 95: }
 19313                           ;secret_task.c: 96: return 0;
 19314  1614  3000               	movlw	0
 19315  1615  0008               	return
 19316  1616                     __end_of_secret_check:	
 19317                           
 19318                           	psect	text20
 19319  2615                     __ptext20:	
 19320 ;; *************** function ___bmul *****************
 19321 ;; Defined at:
 19322 ;;		line 4 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul8.c"
 19323 ;; Parameters:    Size  Location     Type
 19324 ;;  multiplier      1    wreg     unsigned char 
 19325 ;;  multiplicand    1    1[COMMON] unsigned char 
 19326 ;; Auto vars:     Size  Location     Type
 19327 ;;  multiplier      1    4[COMMON] unsigned char 
 19328 ;;  product         1    3[COMMON] unsigned char 
 19329 ;; Return value:  Size  Location     Type
 19330 ;;                  1    wreg      unsigned char 
 19331 ;; Registers used:
 19332 ;;		wreg, status,2, status,0
 19333 ;; Tracked objects:
 19334 ;;		On entry : 0/0
 19335 ;;		On exit  : 0/0
 19336 ;;		Unchanged: 0/0
 19337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19341 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19342 ;;Total ram usage:        4 bytes
 19343 ;; Hardware stack levels used:    1
 19344 ;; Hardware stack levels required when called:    4
 19345 ;; This function calls:
 19346 ;;		Nothing
 19347 ;; This function is called by:
 19348 ;;		_secret_check
 19349 ;; This function uses a non-reentrant model
 19350 ;;
 19351                           
 19352                           
 19353                           ;psect for function ___bmul
 19354  2615                     ___bmul:	
 19355                           
 19356                           ;incstack = 0
 19357                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 19358                           ;___bmul@multiplier stored from wreg
 19359  2615  00F4               	movwf	___bmul@multiplier
 19360  2616  01F3               	clrf	___bmul@product
 19361  2617                     l6751:	
 19362  2617  1C74               	btfss	___bmul@multiplier,0
 19363  2618  2E1D               	goto	l6755
 19364  2619  0871               	movf	___bmul@multiplicand,w
 19365  261A  00F2               	movwf	??___bmul
 19366  261B  0872               	movf	??___bmul,w
 19367  261C  07F3               	addwf	___bmul@product,f
 19368  261D                     l6755:	
 19369  261D  1003               	clrc
 19370  261E  0DF1               	rlf	___bmul@multiplicand,f
 19371  261F  1003               	clrc
 19372  2620  0CF4               	rrf	___bmul@multiplier,f
 19373  2621  0874               	movf	___bmul@multiplier,w
 19374  2622  1D03               	btfss	3,2
 19375  2623  2E17               	goto	l6751
 19376  2624  0873               	movf	___bmul@product,w
 19377  2625  0008               	return
 19378  2626                     __end_of___bmul:	
 19379                           
 19380                           	psect	text21
 19381  1A2D                     __ptext21:	
 19382 ;; *************** function _menu_run_option *****************
 19383 ;; Defined at:
 19384 ;;		line 177 in file "menu_task.c"
 19385 ;; Parameters:    Size  Location     Type
 19386 ;;  data            2   27[BANK0 ] PTR struct t_menu_taskDa
 19387 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19388 ;;		 -> flashy_TaskData(30), NULL(0), 
 19389 ;; Auto vars:     Size  Location     Type
 19390 ;;		None
 19391 ;; Return value:  Size  Location     Type
 19392 ;;                  1    wreg      void 
 19393 ;; Registers used:
 19394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19395 ;; Tracked objects:
 19396 ;;		On entry : 0/0
 19397 ;;		On exit  : 0/0
 19398 ;;		Unchanged: 0/0
 19399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19403 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19404 ;;Total ram usage:        2 bytes
 19405 ;; Hardware stack levels used:    1
 19406 ;; Hardware stack levels required when called:   11
 19407 ;; This function calls:
 19408 ;;		_menu_clear
 19409 ;; This function is called by:
 19410 ;;		_menu_Main
 19411 ;; This function uses a non-reentrant model
 19412 ;;
 19413                           
 19414                           
 19415                           ;psect for function _menu_run_option
 19416  1A2D                     _menu_run_option:	
 19417                           
 19418                           ;menu_task.c: 178: switch (menu_option_idx){
 19419                           
 19420                           ;incstack = 0
 19421                           ; Regs used in _menu_run_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19422  1A2D  2A55               	goto	l6911
 19423  1A2E                     l6897:	
 19424                           ;menu_task.c: 179: case 1:
 19425                           
 19426                           
 19427                           ;menu_task.c: 180: menu_clear(data);
 19428  1A2E  0020               	movlb	0	; select bank0
 19429  1A2F  083C               	movf	menu_run_option@data+1,w
 19430  1A30  00BA               	movwf	menu_clear@data+1
 19431  1A31  083B               	movf	menu_run_option@data,w
 19432  1A32  00B9               	movwf	menu_clear@data
 19433  1A33  319B  23EC         	fcall	_menu_clear
 19434                           
 19435                           ;menu_task.c: 181: currentTask = SLOT_TASK;
 19436  1A35  3001               	movlw	1
 19437  1A36  0021               	movlb	1	; select bank1
 19438  1A37  00B8               	movwf	_currentTask^(0+128)
 19439  1A38  3000               	movlw	0
 19440  1A39  00B9               	movwf	(_currentTask^(0+128)+1)
 19441                           
 19442                           ;menu_task.c: 182: break;
 19443  1A3A  0008               	return
 19444  1A3B                     l6901:	
 19445                           ;menu_task.c: 183: case 2:
 19446                           
 19447                           
 19448                           ;menu_task.c: 184: menu_clear(data);
 19449  1A3B  0020               	movlb	0	; select bank0
 19450  1A3C  083C               	movf	menu_run_option@data+1,w
 19451  1A3D  00BA               	movwf	menu_clear@data+1
 19452  1A3E  083B               	movf	menu_run_option@data,w
 19453  1A3F  00B9               	movwf	menu_clear@data
 19454  1A40  319B  23EC         	fcall	_menu_clear
 19455                           
 19456                           ;menu_task.c: 185: currentTask = LOCKED_TASK;
 19457  1A42  3003               	movlw	3
 19458  1A43  0021               	movlb	1	; select bank1
 19459  1A44  00B8               	movwf	_currentTask^(0+128)
 19460  1A45  3000               	movlw	0
 19461  1A46  00B9               	movwf	(_currentTask^(0+128)+1)
 19462                           
 19463                           ;menu_task.c: 186: break;
 19464  1A47  0008               	return
 19465  1A48                     l6905:	
 19466                           ;menu_task.c: 187: case 3:
 19467                           
 19468                           
 19469                           ;menu_task.c: 188: menu_clear(data);
 19470  1A48  0020               	movlb	0	; select bank0
 19471  1A49  083C               	movf	menu_run_option@data+1,w
 19472  1A4A  00BA               	movwf	menu_clear@data+1
 19473  1A4B  083B               	movf	menu_run_option@data,w
 19474  1A4C  00B9               	movwf	menu_clear@data
 19475  1A4D  319B  23EC         	fcall	_menu_clear
 19476                           
 19477                           ;menu_task.c: 189: currentTask = FLASHY_TASK;
 19478  1A4F  3002               	movlw	2
 19479  1A50  0021               	movlb	1	; select bank1
 19480  1A51  00B8               	movwf	_currentTask^(0+128)
 19481  1A52  3000               	movlw	0
 19482  1A53  00B9               	movwf	(_currentTask^(0+128)+1)
 19483                           
 19484                           ;menu_task.c: 191: }
 19485                           
 19486                           ;menu_task.c: 190: break;
 19487  1A54  0008               	return
 19488  1A55                     l6911:	
 19489                           
 19490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19491                           ; Switch size 1, requested type "space"
 19492                           ; Number of cases is 1, Range of values is 0 to 0
 19493                           ; switch strategies available:
 19494                           ; Name         Instructions Cycles
 19495                           ; simple_byte            4     3 (average)
 19496                           ; direct_byte            8     6 (fixed)
 19497                           ; jumptable            260     6 (fixed)
 19498                           ;	Chosen strategy is simple_byte
 19499  1A55  0021               	movlb	1	; select bank1
 19500  1A56  0835               	movf	(_menu_option_idx+1)^(0+128),w
 19501  1A57  3A00               	xorlw	0	; case 0
 19502  1A58  1903               	skipnz
 19503  1A59  2A5B               	goto	l8761
 19504  1A5A  2A66               	goto	l985
 19505  1A5B                     l8761:	
 19506                           
 19507                           ; Switch size 1, requested type "space"
 19508                           ; Number of cases is 3, Range of values is 1 to 3
 19509                           ; switch strategies available:
 19510                           ; Name         Instructions Cycles
 19511                           ; simple_byte           10     6 (average)
 19512                           ; direct_byte           15     9 (fixed)
 19513                           ; jumptable            263     9 (fixed)
 19514                           ;	Chosen strategy is simple_byte
 19515  1A5B  0834               	movf	_menu_option_idx^(0+128),w
 19516  1A5C  3A01               	xorlw	1	; case 1
 19517  1A5D  1903               	skipnz
 19518  1A5E  2A2E               	goto	l6897
 19519  1A5F  3A03               	xorlw	3	; case 2
 19520  1A60  1903               	skipnz
 19521  1A61  2A3B               	goto	l6901
 19522  1A62  3A01               	xorlw	1	; case 3
 19523  1A63  1903               	skipnz
 19524  1A64  2A48               	goto	l6905
 19525  1A65  2A66               	goto	l985
 19526  1A66                     l985:	
 19527  1A66  0008               	return
 19528  1A67                     __end_of_menu_run_option:	
 19529                           
 19530                           	psect	text22
 19531  1BEC                     __ptext22:	
 19532 ;; *************** function _menu_clear *****************
 19533 ;; Defined at:
 19534 ;;		line 194 in file "menu_task.c"
 19535 ;; Parameters:    Size  Location     Type
 19536 ;;  data            2   25[BANK0 ] PTR struct t_menu_taskDa
 19537 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19538 ;;		 -> flashy_TaskData(30), NULL(0), 
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;		None
 19541 ;; Return value:  Size  Location     Type
 19542 ;;                  1    wreg      void 
 19543 ;; Registers used:
 19544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19545 ;; Tracked objects:
 19546 ;;		On entry : 0/0
 19547 ;;		On exit  : 0/0
 19548 ;;		Unchanged: 0/0
 19549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19550 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19553 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19554 ;;Total ram usage:        2 bytes
 19555 ;; Hardware stack levels used:    1
 19556 ;; Hardware stack levels required when called:   10
 19557 ;; This function calls:
 19558 ;;		_nullifyBadge_segDisplayErase
 19559 ;;		_nullifyBadge_userLedsClr
 19560 ;; This function is called by:
 19561 ;;		_menu_Main
 19562 ;;		_menu_run_option
 19563 ;; This function uses a non-reentrant model
 19564 ;;
 19565                           
 19566                           
 19567                           ;psect for function _menu_clear
 19568  1BEC                     _menu_clear:	
 19569                           
 19570                           ;menu_task.c: 196: data->delayTickCount = 50;
 19571                           
 19572                           ;incstack = 0
 19573                           ; Regs used in _menu_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19574  1BEC  0020               	movlb	0	; select bank0
 19575  1BED  0839               	movf	menu_clear@data,w
 19576  1BEE  0086               	movwf	6
 19577  1BEF  083A               	movf	menu_clear@data+1,w
 19578  1BF0  0087               	movwf	7
 19579  1BF1  3142               	addfsr 1,2
 19580  1BF2  3032               	movlw	50
 19581  1BF3  3FC0               	movwi [0]fsr1
 19582  1BF4  3000               	movlw	0
 19583  1BF5  3FC1               	movwi [1]fsr1
 19584                           
 19585                           ;menu_task.c: 197: data->holdCountA = 0;
 19586  1BF6  0839               	movf	menu_clear@data,w
 19587  1BF7  0086               	movwf	6
 19588  1BF8  083A               	movf	menu_clear@data+1,w
 19589  1BF9  0087               	movwf	7
 19590  1BFA  3144               	addfsr 1,4
 19591  1BFB  3000               	movlw	0
 19592  1BFC  3FC0               	movwi [0]fsr1
 19593  1BFD  3FC1               	movwi [1]fsr1
 19594                           
 19595                           ;menu_task.c: 198: data->holdCountB = 0;
 19596  1BFE  0839               	movf	menu_clear@data,w
 19597  1BFF  0086               	movwf	6
 19598  1C00  083A               	movf	menu_clear@data+1,w
 19599  1C01  0087               	movwf	7
 19600  1C02  3146               	addfsr 1,6
 19601  1C03  3000               	movlw	0
 19602  1C04  3FC0               	movwi [0]fsr1
 19603  1C05  3FC1               	movwi [1]fsr1
 19604                           
 19605                           ;menu_task.c: 199: data->holdCountX = 0;
 19606  1C06  0839               	movf	menu_clear@data,w
 19607  1C07  0086               	movwf	6
 19608  1C08  083A               	movf	menu_clear@data+1,w
 19609  1C09  0087               	movwf	7
 19610  1C0A  3148               	addfsr 1,8
 19611  1C0B  3000               	movlw	0
 19612  1C0C  3FC0               	movwi [0]fsr1
 19613  1C0D  3FC1               	movwi [1]fsr1
 19614                           
 19615                           ;menu_task.c: 200: data->holdCountY = 0;
 19616  1C0E  0839               	movf	menu_clear@data,w
 19617  1C0F  0086               	movwf	6
 19618  1C10  083A               	movf	menu_clear@data+1,w
 19619  1C11  0087               	movwf	7
 19620  1C12  314A               	addfsr 1,10
 19621  1C13  3000               	movlw	0
 19622  1C14  3FC0               	movwi [0]fsr1
 19623  1C15  3FC1               	movwi [1]fsr1
 19624                           
 19625                           ;menu_task.c: 201: data->noholdCount = 0;
 19626  1C16  0839               	movf	menu_clear@data,w
 19627  1C17  0086               	movwf	6
 19628  1C18  083A               	movf	menu_clear@data+1,w
 19629  1C19  0087               	movwf	7
 19630  1C1A  314C               	addfsr 1,12
 19631  1C1B  3000               	movlw	0
 19632  1C1C  3FC0               	movwi [0]fsr1
 19633  1C1D  3FC1               	movwi [1]fsr1
 19634                           
 19635                           ;menu_task.c: 203: menu_option_idx = 0;
 19636  1C1E  0021               	movlb	1	; select bank1
 19637  1C1F  01B4               	clrf	_menu_option_idx^(0+128)
 19638  1C20  01B5               	clrf	(_menu_option_idx+1)^(0+128)
 19639                           
 19640                           ;menu_task.c: 206: nullifyBadge_userLedsClr(data->badge);
 19641  1C21  0020               	movlb	0	; select bank0
 19642  1C22  0839               	movf	menu_clear@data,w
 19643  1C23  0086               	movwf	6
 19644  1C24  083A               	movf	menu_clear@data+1,w
 19645  1C25  0087               	movwf	7
 19646  1C26  0801               	movf	1,w
 19647  1C27  31A4  24D1  319B   	fcall	_nullifyBadge_userLedsClr
 19648                           
 19649                           ;menu_task.c: 207: nullifyBadge_segDisplayErase(data->badge);
 19650  1C2A  0020               	movlb	0	; select bank0
 19651  1C2B  0839               	movf	menu_clear@data,w
 19652  1C2C  0086               	movwf	6
 19653  1C2D  083A               	movf	menu_clear@data+1,w
 19654  1C2E  0087               	movwf	7
 19655  1C2F  0801               	movf	1,w
 19656  1C30  31A4  24CB         	fcall	_nullifyBadge_segDisplayErase
 19657  1C32  0008               	return
 19658  1C33                     __end_of_menu_clear:	
 19659                           
 19660                           	psect	text23
 19661  1ED9                     __ptext23:	
 19662 ;; *************** function _menu_display_option *****************
 19663 ;; Defined at:
 19664 ;;		line 158 in file "menu_task.c"
 19665 ;; Parameters:    Size  Location     Type
 19666 ;;  data            2   44[BANK0 ] PTR struct t_menu_taskDa
 19667 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19668 ;;		 -> flashy_TaskData(30), NULL(0), 
 19669 ;; Auto vars:     Size  Location     Type
 19670 ;;  led             2   48[BANK0 ] unsigned int 
 19671 ;;  size            2   46[BANK0 ] unsigned int 
 19672 ;; Return value:  Size  Location     Type
 19673 ;;                  1    wreg      void 
 19674 ;; Registers used:
 19675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19676 ;; Tracked objects:
 19677 ;;		On entry : 0/0
 19678 ;;		On exit  : 0/0
 19679 ;;		Unchanged: 0/0
 19680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19682 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19684 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19685 ;;Total ram usage:        6 bytes
 19686 ;; Hardware stack levels used:    1
 19687 ;; Hardware stack levels required when called:   10
 19688 ;; This function calls:
 19689 ;;		___lwmod
 19690 ;;		_marquee
 19691 ;;		_nullifyBadge_segDisplayForceUpdate
 19692 ;;		_nullifyBadge_segDisplayPutStr
 19693 ;;		_nullifyBadge_userLedsSet
 19694 ;; This function is called by:
 19695 ;;		_menu_Main
 19696 ;; This function uses a non-reentrant model
 19697 ;;
 19698                           
 19699                           
 19700                           ;psect for function _menu_display_option
 19701  1ED9                     _menu_display_option:	
 19702                           
 19703                           ;menu_task.c: 159: u16 size = sizeof(menu_options_leds)/sizeof(menu_options_leds[0]);
 19704                           
 19705                           ;incstack = 0
 19706                           ; Regs used in _menu_display_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19707  1ED9  3005               	movlw	5
 19708  1EDA  0020               	movlb	0	; select bank0
 19709  1EDB  00CE               	movwf	menu_display_option@size
 19710  1EDC  3000               	movlw	0
 19711  1EDD  00CF               	movwf	menu_display_option@size+1
 19712                           
 19713                           ;menu_task.c: 160: u16 led = menu_options_leds[menu_option_idx % size];
 19714  1EDE  084F               	movf	menu_display_option@size+1,w
 19715  1EDF  00A1               	movwf	___lwmod@divisor+1
 19716  1EE0  084E               	movf	menu_display_option@size,w
 19717  1EE1  00A0               	movwf	___lwmod@divisor
 19718  1EE2  0021               	movlb	1	; select bank1
 19719  1EE3  0835               	movf	(_menu_option_idx+1)^(0+128),w
 19720  1EE4  0020               	movlb	0	; select bank0
 19721  1EE5  00A3               	movwf	___lwmod@dividend+1
 19722  1EE6  0021               	movlb	1	; select bank1
 19723  1EE7  0834               	movf	_menu_option_idx^(0+128),w
 19724  1EE8  0020               	movlb	0	; select bank0
 19725  1EE9  00A2               	movwf	___lwmod@dividend
 19726  1EEA  3198  2069  319E   	fcall	___lwmod
 19727  1EED  0020               	movlb	0	; select bank0
 19728  1EEE  0820               	movf	?___lwmod,w
 19729  1EEF  0709               	addwf	9,w
 19730  1EF0  3EAC               	addlw	(low (_menu_options_leds| (0+256)))& (0+255)
 19731  1EF1  0086               	movwf	6
 19732  1EF2  3001               	movlw	1	; select bank3/4
 19733  1EF3  0087               	movwf	7
 19734  1EF4  3F40               	moviw [0]fsr1
 19735  1EF5  00D0               	movwf	menu_display_option@led
 19736  1EF6  3F41               	moviw [1]fsr1
 19737  1EF7  00D1               	movwf	menu_display_option@led+1
 19738                           
 19739                           ;menu_task.c: 166: nullifyBadge_userLedsSet(data->badge, led);
 19740  1EF8  0851               	movf	menu_display_option@led+1,w
 19741  1EF9  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 19742  1EFA  0850               	movf	menu_display_option@led,w
 19743  1EFB  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 19744  1EFC  084C               	movf	menu_display_option@data,w
 19745  1EFD  0086               	movwf	6
 19746  1EFE  084D               	movf	menu_display_option@data+1,w
 19747  1EFF  0087               	movwf	7
 19748  1F00  0801               	movf	1,w
 19749  1F01  31A5  2581  319E   	fcall	_nullifyBadge_userLedsSet
 19750                           
 19751                           ;menu_task.c: 168: if (menu_option_idx == 0){
 19752  1F04  0021               	movlb	1	; select bank1
 19753  1F05  0834               	movf	_menu_option_idx^(0+128),w
 19754  1F06  0435               	iorwf	(_menu_option_idx+1)^(0+128),w
 19755  1F07  1D03               	btfss	3,2
 19756  1F08  2F24               	goto	l6893
 19757                           
 19758                           ;menu_task.c: 169: nullifyBadge_segDisplayPutStr(data->badge, menu_option[menu_option_id
      +                          x]);
 19759  1F09  3534               	lslf	_menu_option_idx^(0+128),w
 19760  1F0A  3E59               	addlw	(low (_menu_option| (0+256)))& (0+255)
 19761  1F0B  0086               	movwf	6
 19762  1F0C  3001               	movlw	1	; select bank2/3
 19763  1F0D  0087               	movwf	7
 19764  1F0E  3F40               	moviw [0]fsr1
 19765  1F0F  0020               	movlb	0	; select bank0
 19766  1F10  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 19767  1F11  3F41               	moviw [1]fsr1
 19768  1F12  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 19769  1F13  084C               	movf	menu_display_option@data,w
 19770  1F14  0086               	movwf	6
 19771  1F15  084D               	movf	menu_display_option@data+1,w
 19772  1F16  0087               	movwf	7
 19773  1F17  0801               	movf	1,w
 19774  1F18  3192  2200  319E   	fcall	_nullifyBadge_segDisplayPutStr
 19775                           
 19776                           ;menu_task.c: 170: nullifyBadge_segDisplayForceUpdate(data->badge);
 19777  1F1B  0020               	movlb	0	; select bank0
 19778  1F1C  084C               	movf	menu_display_option@data,w
 19779  1F1D  0086               	movwf	6
 19780  1F1E  084D               	movf	menu_display_option@data+1,w
 19781  1F1F  0087               	movwf	7
 19782  1F20  0801               	movf	1,w
 19783  1F21  31A4  24C5         	fcall	_nullifyBadge_segDisplayForceUpdate
 19784                           
 19785                           ;menu_task.c: 171: }
 19786  1F23  0008               	return
 19787  1F24                     l6893:	
 19788                           
 19789                           ;menu_task.c: 172: else {
 19790                           ;menu_task.c: 173: marquee(menu_option[menu_option_idx], data->noholdCount);
 19791  1F24  0021               	movlb	1	; select bank1
 19792  1F25  3534               	lslf	_menu_option_idx^(0+128),w
 19793  1F26  3E59               	addlw	(low (_menu_option| (0+256)))& (0+255)
 19794  1F27  0086               	movwf	6
 19795  1F28  3001               	movlw	1	; select bank2/3
 19796  1F29  0087               	movwf	7
 19797  1F2A  3F40               	moviw [0]fsr1
 19798  1F2B  0020               	movlb	0	; select bank0
 19799  1F2C  00BA               	movwf	marquee@string
 19800  1F2D  3F41               	moviw [1]fsr1
 19801  1F2E  00BB               	movwf	marquee@string+1
 19802  1F2F  084C               	movf	menu_display_option@data,w
 19803  1F30  0086               	movwf	6
 19804  1F31  084D               	movf	menu_display_option@data+1,w
 19805  1F32  0087               	movwf	7
 19806  1F33  314C               	addfsr 1,12
 19807  1F34  3F40               	moviw [0]fsr1
 19808  1F35  00BC               	movwf	marquee@count
 19809  1F36  3F41               	moviw [1]fsr1
 19810  1F37  00BD               	movwf	marquee@count+1
 19811  1F38  3193  2350         	fcall	_marquee
 19812  1F3A  0008               	return
 19813  1F3B                     __end_of_menu_display_option:	
 19814                           
 19815                           	psect	text24
 19816  2638                     __ptext24:	
 19817 ;; *************** function _locked_unlock_leds *****************
 19818 ;; Defined at:
 19819 ;;		line 36 in file "locked_task.c"
 19820 ;; Parameters:    Size  Location     Type
 19821 ;;		None
 19822 ;; Auto vars:     Size  Location     Type
 19823 ;;		None
 19824 ;; Return value:  Size  Location     Type
 19825 ;;                  2  1204[None  ] unsigned int 
 19826 ;; Registers used:
 19827 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19828 ;; Tracked objects:
 19829 ;;		On entry : 0/0
 19830 ;;		On exit  : 0/0
 19831 ;;		Unchanged: 0/0
 19832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19837 ;;Total ram usage:        2 bytes
 19838 ;; Hardware stack levels used:    1
 19839 ;; Hardware stack levels required when called:    4
 19840 ;; This function calls:
 19841 ;;		Nothing
 19842 ;; This function is called by:
 19843 ;;		_locked_Main
 19844 ;; This function uses a non-reentrant model
 19845 ;;
 19846                           
 19847                           
 19848                           ;psect for function _locked_unlock_leds
 19849  2638                     _locked_unlock_leds:	
 19850                           
 19851                           ;locked_task.c: 37: locked_locking_leds_idx = 0;
 19852                           
 19853                           ;incstack = 0
 19854                           ; Regs used in _locked_unlock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19855  2638  0021               	movlb	1	; select bank1
 19856  2639  01A2               	clrf	_locked_locking_leds_idx^(0+128)
 19857  263A  01A3               	clrf	(_locked_locking_leds_idx+1)^(0+128)
 19858                           
 19859                           ;locked_task.c: 38: locked_leds = locked_lock_base_leds | locked_locking_leds[locked_loc
      +                          king_leds_idx];
 19860  263B  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19861  263C  3EA0               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19862  263D  0086               	movwf	6
 19863  263E  3001               	movlw	1	; select bank3/4
 19864  263F  0087               	movwf	7
 19865  2640  3F40               	moviw [0]fsr1
 19866  2641  00F1               	movwf	??_locked_unlock_leds
 19867  2642  3F41               	moviw [1]fsr1
 19868  2643  00F2               	movwf	??_locked_unlock_leds+1
 19869  2644  0867               	movf	_locked_lock_base_leds^(0+128),w
 19870  2645  0471               	iorwf	??_locked_unlock_leds,w
 19871  2646  00A0               	movwf	_locked_leds^(0+128)
 19872  2647  0868               	movf	(_locked_lock_base_leds+1)^(0+128),w
 19873  2648  0472               	iorwf	??_locked_unlock_leds+1,w
 19874  2649  00A1               	movwf	(_locked_leds+1)^(0+128)
 19875  264A  0008               	return
 19876  264B                     __end_of_locked_unlock_leds:	
 19877                           ;locked_task.c: 39: return locked_leds;
 19878                           ;	Return value of _locked_unlock_leds is never used
 19879                           
 19880                           
 19881                           	psect	text25
 19882  26ED                     __ptext25:	
 19883 ;; *************** function _locked_lock_leds *****************
 19884 ;; Defined at:
 19885 ;;		line 28 in file "locked_task.c"
 19886 ;; Parameters:    Size  Location     Type
 19887 ;;		None
 19888 ;; Auto vars:     Size  Location     Type
 19889 ;;  size            2    3[COMMON] unsigned int 
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  2  1201[None  ] unsigned int 
 19892 ;; Registers used:
 19893 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19894 ;; Tracked objects:
 19895 ;;		On entry : 0/0
 19896 ;;		On exit  : 0/0
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19903 ;;Total ram usage:        4 bytes
 19904 ;; Hardware stack levels used:    1
 19905 ;; Hardware stack levels required when called:    4
 19906 ;; This function calls:
 19907 ;;		Nothing
 19908 ;; This function is called by:
 19909 ;;		_locked_Init
 19910 ;;		_locked_Main
 19911 ;; This function uses a non-reentrant model
 19912 ;;
 19913                           
 19914                           
 19915                           ;psect for function _locked_lock_leds
 19916  26ED                     _locked_lock_leds:	
 19917                           
 19918                           ;locked_task.c: 29: u16 size = sizeof(locked_locking_leds) / sizeof(locked_locking_leds[
      +                          0]);
 19919                           
 19920                           ;incstack = 0
 19921                           ; Regs used in _locked_lock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19922  26ED  3006               	movlw	6
 19923  26EE  00F3               	movwf	locked_lock_leds@size
 19924  26EF  3000               	movlw	0
 19925  26F0  00F4               	movwf	locked_lock_leds@size+1
 19926                           
 19927                           ;locked_task.c: 30: locked_locking_leds_idx = size - 1;
 19928  26F1  0873               	movf	locked_lock_leds@size,w
 19929  26F2  3EFF               	addlw	255
 19930  26F3  0021               	movlb	1	; select bank1
 19931  26F4  00A2               	movwf	_locked_locking_leds_idx^(0+128)
 19932  26F5  30FF               	movlw	255
 19933  26F6  3D74               	addwfc	locked_lock_leds@size+1,w
 19934  26F7  00A3               	movwf	(_locked_locking_leds_idx+1)^(0+128)
 19935                           
 19936                           ;locked_task.c: 31: locked_leds = locked_lock_base_leds | locked_locking_leds[locked_loc
      +                          king_leds_idx];
 19937  26F8  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19938  26F9  3EA0               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19939  26FA  0086               	movwf	6
 19940  26FB  3001               	movlw	1	; select bank3/4
 19941  26FC  0087               	movwf	7
 19942  26FD  3F40               	moviw [0]fsr1
 19943  26FE  00F1               	movwf	??_locked_lock_leds
 19944  26FF  3F41               	moviw [1]fsr1
 19945  2700  00F2               	movwf	??_locked_lock_leds+1
 19946  2701  0867               	movf	_locked_lock_base_leds^(0+128),w
 19947  2702  0471               	iorwf	??_locked_lock_leds,w
 19948  2703  00A0               	movwf	_locked_leds^(0+128)
 19949  2704  0868               	movf	(_locked_lock_base_leds+1)^(0+128),w
 19950  2705  0472               	iorwf	??_locked_lock_leds+1,w
 19951  2706  00A1               	movwf	(_locked_leds+1)^(0+128)
 19952  2707  0008               	return
 19953  2708                     __end_of_locked_lock_leds:	
 19954                           ;locked_task.c: 32: return locked_leds;
 19955                           ;	Return value of _locked_lock_leds is never used
 19956                           
 19957                           
 19958                           	psect	text26
 19959  1801                     __ptext26:	
 19960 ;; *************** function _locked_get_unlock_leds *****************
 19961 ;; Defined at:
 19962 ;;		line 53 in file "locked_task.c"
 19963 ;; Parameters:    Size  Location     Type
 19964 ;;		None
 19965 ;; Auto vars:     Size  Location     Type
 19966 ;;  leds            2    3[COMMON] unsigned int 
 19967 ;; Return value:  Size  Location     Type
 19968 ;;                  2    1[COMMON] unsigned int 
 19969 ;; Registers used:
 19970 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19971 ;; Tracked objects:
 19972 ;;		On entry : 0/0
 19973 ;;		On exit  : 0/0
 19974 ;;		Unchanged: 0/0
 19975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19980 ;;Total ram usage:        4 bytes
 19981 ;; Hardware stack levels used:    1
 19982 ;; Hardware stack levels required when called:    4
 19983 ;; This function calls:
 19984 ;;		Nothing
 19985 ;; This function is called by:
 19986 ;;		_locked_Main
 19987 ;; This function uses a non-reentrant model
 19988 ;;
 19989                           
 19990                           
 19991                           ;psect for function _locked_get_unlock_leds
 19992  1801                     _locked_get_unlock_leds:	
 19993                           
 19994                           ;locked_task.c: 54: u16 leds = locked_locking_leds[locked_locking_leds_idx];
 19995                           
 19996                           ;incstack = 0
 19997                           ; Regs used in _locked_get_unlock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19998  1801  0021               	movlb	1	; select bank1
 19999  1802  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 20000  1803  3EA0               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 20001  1804  0086               	movwf	6
 20002  1805  3001               	movlw	1	; select bank3/4
 20003  1806  0087               	movwf	7
 20004  1807  3F40               	moviw [0]fsr1
 20005  1808  00F3               	movwf	locked_get_unlock_leds@leds
 20006  1809  3F41               	moviw [1]fsr1
 20007  180A  00F4               	movwf	locked_get_unlock_leds@leds+1
 20008                           
 20009                           ;locked_task.c: 57: if (locked_locking_leds_idx > 0){
 20010  180B  0822               	movf	_locked_locking_leds_idx^(0+128),w
 20011  180C  0423               	iorwf	(_locked_locking_leds_idx+1)^(0+128),w
 20012  180D  1903               	btfsc	3,2
 20013  180E  2813               	goto	l1212
 20014                           
 20015                           ;locked_task.c: 58: locked_locking_leds_idx -= 1;
 20016  180F  3001               	movlw	1
 20017  1810  02A2               	subwf	_locked_locking_leds_idx^(0+128),f
 20018  1811  3000               	movlw	0
 20019  1812  3BA3               	subwfb	(_locked_locking_leds_idx+1)^(0+128),f
 20020  1813                     l1212:	
 20021                           
 20022                           ;locked_task.c: 59: }
 20023                           ;locked_task.c: 60: return locked_lock_base_leds | leds;
 20024  1813  0873               	movf	locked_get_unlock_leds@leds,w
 20025  1814  0467               	iorwf	_locked_lock_base_leds^(0+128),w
 20026  1815  00F1               	movwf	?_locked_get_unlock_leds
 20027  1816  0874               	movf	locked_get_unlock_leds@leds+1,w
 20028  1817  0468               	iorwf	(_locked_lock_base_leds+1)^(0+128),w
 20029  1818  00F2               	movwf	?_locked_get_unlock_leds+1
 20030  1819  0008               	return
 20031  181A                     __end_of_locked_get_unlock_leds:	
 20032                           
 20033                           	psect	text27
 20034  181A                     __ptext27:	
 20035 ;; *************** function _locked_get_lock_leds *****************
 20036 ;; Defined at:
 20037 ;;		line 42 in file "locked_task.c"
 20038 ;; Parameters:    Size  Location     Type
 20039 ;;		None
 20040 ;; Auto vars:     Size  Location     Type
 20041 ;;  leds            2    7[COMMON] unsigned int 
 20042 ;;  size            2    5[COMMON] unsigned int 
 20043 ;; Return value:  Size  Location     Type
 20044 ;;                  2    1[COMMON] unsigned int 
 20045 ;; Registers used:
 20046 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20047 ;; Tracked objects:
 20048 ;;		On entry : 0/0
 20049 ;;		On exit  : 0/0
 20050 ;;		Unchanged: 0/0
 20051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20053 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20055 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20056 ;;Total ram usage:        8 bytes
 20057 ;; Hardware stack levels used:    1
 20058 ;; Hardware stack levels required when called:    4
 20059 ;; This function calls:
 20060 ;;		Nothing
 20061 ;; This function is called by:
 20062 ;;		_locked_Main
 20063 ;; This function uses a non-reentrant model
 20064 ;;
 20065                           
 20066                           
 20067                           ;psect for function _locked_get_lock_leds
 20068  181A                     _locked_get_lock_leds:	
 20069                           
 20070                           ;locked_task.c: 43: u16 size = sizeof(locked_locking_leds) / sizeof(locked_locking_leds[
      +                          0]);
 20071                           
 20072                           ;incstack = 0
 20073                           ; Regs used in _locked_get_lock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 20074  181A  3006               	movlw	6
 20075  181B  00F5               	movwf	locked_get_lock_leds@size
 20076  181C  3000               	movlw	0
 20077  181D  00F6               	movwf	locked_get_lock_leds@size+1
 20078                           
 20079                           ;locked_task.c: 44: u16 leds = locked_locking_leds[locked_locking_leds_idx];
 20080  181E  0021               	movlb	1	; select bank1
 20081  181F  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 20082  1820  3EA0               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 20083  1821  0086               	movwf	6
 20084  1822  3001               	movlw	1	; select bank3/4
 20085  1823  0087               	movwf	7
 20086  1824  3F40               	moviw [0]fsr1
 20087  1825  00F7               	movwf	locked_get_lock_leds@leds
 20088  1826  3F41               	moviw [1]fsr1
 20089  1827  00F8               	movwf	locked_get_lock_leds@leds+1
 20090                           
 20091                           ;locked_task.c: 47: if (locked_locking_leds_idx < size - 1){
 20092  1828  0875               	movf	locked_get_lock_leds@size,w
 20093  1829  3EFF               	addlw	255
 20094  182A  00F3               	movwf	??_locked_get_lock_leds
 20095  182B  30FF               	movlw	255
 20096  182C  3D76               	addwfc	locked_get_lock_leds@size+1,w
 20097  182D  00F4               	movwf	??_locked_get_lock_leds+1
 20098  182E  0874               	movf	??_locked_get_lock_leds+1,w
 20099  182F  0223               	subwf	(_locked_locking_leds_idx+1)^(0+128),w
 20100  1830  1D03               	skipz
 20101  1831  2834               	goto	u4375
 20102  1832  0873               	movf	??_locked_get_lock_leds,w
 20103  1833  0222               	subwf	_locked_locking_leds_idx^(0+128),w
 20104  1834                     u4375:	
 20105  1834  1803               	skipnc
 20106  1835  283A               	goto	l1208
 20107                           
 20108                           ;locked_task.c: 48: locked_locking_leds_idx += 1;
 20109  1836  3001               	movlw	1
 20110  1837  07A2               	addwf	_locked_locking_leds_idx^(0+128),f
 20111  1838  3000               	movlw	0
 20112  1839  3DA3               	addwfc	(_locked_locking_leds_idx+1)^(0+128),f
 20113  183A                     l1208:	
 20114                           
 20115                           ;locked_task.c: 49: }
 20116                           ;locked_task.c: 50: return leds;
 20117  183A  0878               	movf	locked_get_lock_leds@leds+1,w
 20118  183B  00F2               	movwf	?_locked_get_lock_leds+1
 20119  183C  0877               	movf	locked_get_lock_leds@leds,w
 20120  183D  00F1               	movwf	?_locked_get_lock_leds
 20121  183E  0008               	return
 20122  183F                     __end_of_locked_get_lock_leds:	
 20123                           
 20124                           	psect	text28
 20125  1B67                     __ptext28:	
 20126 ;; *************** function _locked_clear *****************
 20127 ;; Defined at:
 20128 ;;		line 184 in file "locked_task.c"
 20129 ;; Parameters:    Size  Location     Type
 20130 ;;  data            2   25[BANK0 ] PTR struct t_locked_task
 20131 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 20132 ;;		 -> flashy_TaskData(30), NULL(0), 
 20133 ;; Auto vars:     Size  Location     Type
 20134 ;;		None
 20135 ;; Return value:  Size  Location     Type
 20136 ;;                  1    wreg      void 
 20137 ;; Registers used:
 20138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20139 ;; Tracked objects:
 20140 ;;		On entry : 0/0
 20141 ;;		On exit  : 0/0
 20142 ;;		Unchanged: 0/0
 20143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20147 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20148 ;;Total ram usage:        2 bytes
 20149 ;; Hardware stack levels used:    1
 20150 ;; Hardware stack levels required when called:   10
 20151 ;; This function calls:
 20152 ;;		_nullifyBadge_segDisplayErase
 20153 ;;		_nullifyBadge_userLedsClr
 20154 ;; This function is called by:
 20155 ;;		_locked_Main
 20156 ;; This function uses a non-reentrant model
 20157 ;;
 20158                           
 20159                           
 20160                           ;psect for function _locked_clear
 20161  1B67                     _locked_clear:	
 20162                           
 20163                           ;locked_task.c: 186: data->delayTickCount = 0;
 20164                           
 20165                           ;incstack = 0
 20166                           ; Regs used in _locked_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20167  1B67  0020               	movlb	0	; select bank0
 20168  1B68  0839               	movf	locked_clear@data,w
 20169  1B69  0086               	movwf	6
 20170  1B6A  083A               	movf	locked_clear@data+1,w
 20171  1B6B  0087               	movwf	7
 20172  1B6C  3141               	addfsr 1,1
 20173  1B6D  3000               	movlw	0
 20174  1B6E  3FC0               	movwi [0]fsr1
 20175  1B6F  3FC1               	movwi [1]fsr1
 20176                           
 20177                           ;locked_task.c: 187: data->holdCountA = 0;
 20178  1B70  0839               	movf	locked_clear@data,w
 20179  1B71  0086               	movwf	6
 20180  1B72  083A               	movf	locked_clear@data+1,w
 20181  1B73  0087               	movwf	7
 20182  1B74  3143               	addfsr 1,3
 20183  1B75  3000               	movlw	0
 20184  1B76  3FC0               	movwi [0]fsr1
 20185  1B77  3FC1               	movwi [1]fsr1
 20186                           
 20187                           ;locked_task.c: 188: data->holdCountB = 0;
 20188  1B78  0839               	movf	locked_clear@data,w
 20189  1B79  0086               	movwf	6
 20190  1B7A  083A               	movf	locked_clear@data+1,w
 20191  1B7B  0087               	movwf	7
 20192  1B7C  3145               	addfsr 1,5
 20193  1B7D  3000               	movlw	0
 20194  1B7E  3FC0               	movwi [0]fsr1
 20195  1B7F  3FC1               	movwi [1]fsr1
 20196                           
 20197                           ;locked_task.c: 189: data->holdCountX = 0;
 20198  1B80  0839               	movf	locked_clear@data,w
 20199  1B81  0086               	movwf	6
 20200  1B82  083A               	movf	locked_clear@data+1,w
 20201  1B83  0087               	movwf	7
 20202  1B84  3147               	addfsr 1,7
 20203  1B85  3000               	movlw	0
 20204  1B86  3FC0               	movwi [0]fsr1
 20205  1B87  3FC1               	movwi [1]fsr1
 20206                           
 20207                           ;locked_task.c: 190: data->holdCountY = 0;
 20208  1B88  0839               	movf	locked_clear@data,w
 20209  1B89  0086               	movwf	6
 20210  1B8A  083A               	movf	locked_clear@data+1,w
 20211  1B8B  0087               	movwf	7
 20212  1B8C  3149               	addfsr 1,9
 20213  1B8D  3000               	movlw	0
 20214  1B8E  3FC0               	movwi [0]fsr1
 20215  1B8F  3FC1               	movwi [1]fsr1
 20216                           
 20217                           ;locked_task.c: 191: data->noholdCount = 0;
 20218  1B90  0839               	movf	locked_clear@data,w
 20219  1B91  0086               	movwf	6
 20220  1B92  083A               	movf	locked_clear@data+1,w
 20221  1B93  0087               	movwf	7
 20222  1B94  314B               	addfsr 1,11
 20223  1B95  3000               	movlw	0
 20224  1B96  3FC0               	movwi [0]fsr1
 20225  1B97  3FC1               	movwi [1]fsr1
 20226                           
 20227                           ;locked_task.c: 194: nullifyBadge_userLedsClr(data->badge);
 20228  1B98  0839               	movf	locked_clear@data,w
 20229  1B99  0086               	movwf	6
 20230  1B9A  083A               	movf	locked_clear@data+1,w
 20231  1B9B  0087               	movwf	7
 20232  1B9C  0801               	movf	1,w
 20233  1B9D  31A4  24D1  319B   	fcall	_nullifyBadge_userLedsClr
 20234                           
 20235                           ;locked_task.c: 195: nullifyBadge_segDisplayErase(data->badge);
 20236  1BA0  0020               	movlb	0	; select bank0
 20237  1BA1  0839               	movf	locked_clear@data,w
 20238  1BA2  0086               	movwf	6
 20239  1BA3  083A               	movf	locked_clear@data+1,w
 20240  1BA4  0087               	movwf	7
 20241  1BA5  0801               	movf	1,w
 20242  1BA6  31A4  24CB         	fcall	_nullifyBadge_segDisplayErase
 20243  1BA8  0008               	return
 20244  1BA9                     __end_of_locked_clear:	
 20245                           
 20246                           	psect	text29
 20247  24D1                     __ptext29:	
 20248 ;; *************** function _nullifyBadge_userLedsClr *****************
 20249 ;; Defined at:
 20250 ;;		line 177 in file "nullifyBadge.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20253 ;;		 -> badge_inst(18), 
 20254 ;; Auto vars:     Size  Location     Type
 20255 ;;  badge           1   11[BANK0 ] PTR struct t_nullifyBadg
 20256 ;;		 -> badge_inst(18), 
 20257 ;; Return value:  Size  Location     Type
 20258 ;;                  1    wreg      void 
 20259 ;; Registers used:
 20260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20261 ;; Tracked objects:
 20262 ;;		On entry : 0/0
 20263 ;;		On exit  : 0/0
 20264 ;;		Unchanged: 0/0
 20265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20270 ;;Total ram usage:        1 bytes
 20271 ;; Hardware stack levels used:    1
 20272 ;; Hardware stack levels required when called:    8
 20273 ;; This function calls:
 20274 ;;		_displayL2_ClrUserLeds
 20275 ;; This function is called by:
 20276 ;;		_menu_Init
 20277 ;;		_menu_clear
 20278 ;;		_menu_Exit
 20279 ;;		_flashy_Init
 20280 ;;		_flashy_Exit
 20281 ;;		_locked_Init
 20282 ;;		_locked_clear
 20283 ;;		_locked_Exit
 20284 ;;		_secret_Init
 20285 ;;		_secret_Exit
 20286 ;;		_slot_Init
 20287 ;;		_slot_Exit
 20288 ;; This function uses a non-reentrant model
 20289 ;;
 20290                           
 20291                           
 20292                           ;psect for function _nullifyBadge_userLedsClr
 20293  24D1                     _nullifyBadge_userLedsClr:	
 20294                           
 20295                           ;incstack = 0
 20296                           ; Regs used in _nullifyBadge_userLedsClr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 20297                           ;nullifyBadge_userLedsClr@badge stored from wreg
 20298  24D1  0020               	movlb	0	; select bank0
 20299  24D2  00AB               	movwf	nullifyBadge_userLedsClr@badge
 20300                           
 20301                           ;nullifyBadge.c: 178: displayL2_ClrUserLeds(&badge->display);
 20302  24D3  082B               	movf	nullifyBadge_userLedsClr@badge,w
 20303  24D4  31A5  25A9         	fcall	_displayL2_ClrUserLeds
 20304  24D6  0008               	return
 20305  24D7                     __end_of_nullifyBadge_userLedsClr:	
 20306                           
 20307                           	psect	text30
 20308  25A9                     __ptext30:	
 20309 ;; *************** function _displayL2_ClrUserLeds *****************
 20310 ;; Defined at:
 20311 ;;		line 94 in file "nullifyBadge_displayL2.c"
 20312 ;; Parameters:    Size  Location     Type
 20313 ;;  display         1    wreg     PTR struct t_nullifyDisp
 20314 ;;		 -> badge_inst(18), 
 20315 ;; Auto vars:     Size  Location     Type
 20316 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 20317 ;;		 -> badge_inst(18), 
 20318 ;; Return value:  Size  Location     Type
 20319 ;;                  1    wreg      void 
 20320 ;; Registers used:
 20321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20322 ;; Tracked objects:
 20323 ;;		On entry : 0/0
 20324 ;;		On exit  : 0/0
 20325 ;;		Unchanged: 0/0
 20326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20331 ;;Total ram usage:        1 bytes
 20332 ;; Hardware stack levels used:    1
 20333 ;; Hardware stack levels required when called:    7
 20334 ;; This function calls:
 20335 ;;		_displayL1_SetUserLed
 20336 ;;		_displayL1_Update
 20337 ;; This function is called by:
 20338 ;;		_nullifyBadge_userLedsClr
 20339 ;; This function uses a non-reentrant model
 20340 ;;
 20341                           
 20342                           
 20343                           ;psect for function _displayL2_ClrUserLeds
 20344  25A9                     _displayL2_ClrUserLeds:	
 20345                           
 20346                           ;incstack = 0
 20347                           ; Regs used in _displayL2_ClrUserLeds: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20348                           ;displayL2_ClrUserLeds@display stored from wreg
 20349  25A9  00FB               	movwf	displayL2_ClrUserLeds@display
 20350                           
 20351                           ;nullifyBadge_displayL2.c: 95: displayL1_SetUserLed(&display->display_l1, 0);
 20352  25AA  3000               	movlw	0
 20353  25AB  00F1               	movwf	displayL1_SetUserLed@userLedVect
 20354  25AC  00F2               	movwf	displayL1_SetUserLed@userLedVect+1
 20355  25AD  087B               	movf	displayL2_ClrUserLeds@display,w
 20356  25AE  3E07               	addlw	7
 20357  25AF  31A6  2626  31A5   	fcall	_displayL1_SetUserLed
 20358                           
 20359                           ;nullifyBadge_displayL2.c: 96: displayL1_Update(&display->display_l1);
 20360  25B2  087B               	movf	displayL2_ClrUserLeds@display,w
 20361  25B3  3E07               	addlw	7
 20362  25B4  31A6  2604         	fcall	_displayL1_Update
 20363  25B6  0008               	return
 20364  25B7                     __end_of_displayL2_ClrUserLeds:	
 20365                           
 20366                           	psect	text31
 20367  24CB                     __ptext31:	
 20368 ;; *************** function _nullifyBadge_segDisplayErase *****************
 20369 ;; Defined at:
 20370 ;;		line 123 in file "nullifyBadge.c"
 20371 ;; Parameters:    Size  Location     Type
 20372 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20373 ;;		 -> badge_inst(18), 
 20374 ;; Auto vars:     Size  Location     Type
 20375 ;;  badge           1   24[BANK0 ] PTR struct t_nullifyBadg
 20376 ;;		 -> badge_inst(18), 
 20377 ;; Return value:  Size  Location     Type
 20378 ;;                  1    wreg      void 
 20379 ;; Registers used:
 20380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20381 ;; Tracked objects:
 20382 ;;		On entry : 0/0
 20383 ;;		On exit  : 0/0
 20384 ;;		Unchanged: 0/0
 20385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20389 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20390 ;;Total ram usage:        1 bytes
 20391 ;; Hardware stack levels used:    1
 20392 ;; Hardware stack levels required when called:    9
 20393 ;; This function calls:
 20394 ;;		_displayL2_EraseSegDisplay
 20395 ;; This function is called by:
 20396 ;;		_menu_Init
 20397 ;;		_menu_clear
 20398 ;;		_menu_Exit
 20399 ;;		_flashy_Init
 20400 ;;		_flashy_Exit
 20401 ;;		_locked_Init
 20402 ;;		_locked_clear
 20403 ;;		_locked_Exit
 20404 ;;		_secret_Init
 20405 ;;		_secret_Exit
 20406 ;;		_slot_Init
 20407 ;;		_slot_Exit
 20408 ;;		_fadeDisplay_Init
 20409 ;;		_fadeDisplay_Exit
 20410 ;; This function uses a non-reentrant model
 20411 ;;
 20412                           
 20413                           
 20414                           ;psect for function _nullifyBadge_segDisplayErase
 20415  24CB                     _nullifyBadge_segDisplayErase:	
 20416                           
 20417                           ;incstack = 0
 20418                           ; Regs used in _nullifyBadge_segDisplayErase: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20419                           ;nullifyBadge_segDisplayErase@badge stored from wreg
 20420  24CB  0020               	movlb	0	; select bank0
 20421  24CC  00B8               	movwf	nullifyBadge_segDisplayErase@badge
 20422                           
 20423                           ;nullifyBadge.c: 124: displayL2_EraseSegDisplay(&badge->display);
 20424  24CD  0838               	movf	nullifyBadge_segDisplayErase@badge,w
 20425  24CE  31A5  25F4         	fcall	_displayL2_EraseSegDisplay
 20426  24D0  0008               	return
 20427  24D1                     __end_of_nullifyBadge_segDisplayErase:	
 20428                           
 20429                           	psect	text32
 20430  25F4                     __ptext32:	
 20431 ;; *************** function _displayL2_EraseSegDisplay *****************
 20432 ;; Defined at:
 20433 ;;		line 83 in file "nullifyBadge_displayL2.c"
 20434 ;; Parameters:    Size  Location     Type
 20435 ;;  display         1    wreg     PTR struct t_nullifyDisp
 20436 ;;		 -> badge_inst(18), 
 20437 ;; Auto vars:     Size  Location     Type
 20438 ;;  display         1   23[BANK0 ] PTR struct t_nullifyDisp
 20439 ;;		 -> badge_inst(18), 
 20440 ;; Return value:  Size  Location     Type
 20441 ;;                  1    wreg      void 
 20442 ;; Registers used:
 20443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20444 ;; Tracked objects:
 20445 ;;		On entry : 0/0
 20446 ;;		On exit  : 0/0
 20447 ;;		Unchanged: 0/0
 20448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20453 ;;Total ram usage:        1 bytes
 20454 ;; Hardware stack levels used:    1
 20455 ;; Hardware stack levels required when called:    8
 20456 ;; This function calls:
 20457 ;;		_displayL1_Update
 20458 ;;		_displayL2_PutStr
 20459 ;; This function is called by:
 20460 ;;		_nullifyBadge_segDisplayErase
 20461 ;; This function uses a non-reentrant model
 20462 ;;
 20463                           
 20464                           
 20465                           ;psect for function _displayL2_EraseSegDisplay
 20466  25F4                     _displayL2_EraseSegDisplay:	
 20467                           
 20468                           ;incstack = 0
 20469                           ; Regs used in _displayL2_EraseSegDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20470                           ;displayL2_EraseSegDisplay@display stored from wreg
 20471  25F4  0020               	movlb	0	; select bank0
 20472  25F5  00B7               	movwf	displayL2_EraseSegDisplay@display
 20473                           
 20474                           ;nullifyBadge_displayL2.c: 84: displayL2_PutStr(display, "    ");
 20475  25F6  3058               	movlw	low ((STR_22+35)| (0+32768))
 20476  25F7  00B0               	movwf	displayL2_PutStr@str
 20477  25F8  30A0               	movlw	high ((STR_22+35)| (0+32768))
 20478  25F9  00B1               	movwf	displayL2_PutStr@str+1
 20479  25FA  0837               	movf	displayL2_EraseSegDisplay@display,w
 20480  25FB  3198  203F  31A5   	fcall	_displayL2_PutStr
 20481                           
 20482                           ;nullifyBadge_displayL2.c: 85: displayL1_Update(&display->display_l1);
 20483  25FE  0020               	movlb	0	; select bank0
 20484  25FF  0837               	movf	displayL2_EraseSegDisplay@display,w
 20485  2600  3E07               	addlw	7
 20486  2601  31A6  2604         	fcall	_displayL1_Update
 20487  2603  0008               	return
 20488  2604                     __end_of_displayL2_EraseSegDisplay:	
 20489                           
 20490                           	psect	text33
 20491  0628                     __ptext33:	
 20492 ;; *************** function _sprintf *****************
 20493 ;; Defined at:
 20494 ;;		line 492 in file "/Applications/microchip/xc8/v1.42/sources/common/doprnt.c"
 20495 ;; Parameters:    Size  Location     Type
 20496 ;;  sp              1    wreg     PTR unsigned char 
 20497 ;;		 -> flashy_Main@hit_counter(6), 
 20498 ;;  f               2    4[BANK0 ] PTR const unsigned char 
 20499 ;;		 -> STR_25(4), 
 20500 ;; Auto vars:     Size  Location     Type
 20501 ;;  sp              1   17[BANK0 ] PTR unsigned char 
 20502 ;;		 -> flashy_Main@hit_counter(6), 
 20503 ;;  tmpval          4    0        struct .
 20504 ;;  width           2   18[BANK0 ] int 
 20505 ;;  val             2   15[BANK0 ] unsigned int 
 20506 ;;  cp              2    0        PTR const unsigned char 
 20507 ;;  len             2    0        unsigned int 
 20508 ;;  c               1   20[BANK0 ] char 
 20509 ;;  flag            1   14[BANK0 ] unsigned char 
 20510 ;;  prec            1   13[BANK0 ] char 
 20511 ;;  ap              1   12[BANK0 ] PTR void [1]
 20512 ;;		 -> ?_sprintf(2), 
 20513 ;; Return value:  Size  Location     Type
 20514 ;;                  2    4[BANK0 ] int 
 20515 ;; Registers used:
 20516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20517 ;; Tracked objects:
 20518 ;;		On entry : 0/0
 20519 ;;		On exit  : 0/0
 20520 ;;		Unchanged: 0/0
 20521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20522 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20523 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20524 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20525 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20526 ;;Total ram usage:       17 bytes
 20527 ;; Hardware stack levels used:    1
 20528 ;; Hardware stack levels required when called:    5
 20529 ;; This function calls:
 20530 ;;		___lwdiv
 20531 ;;		___lwmod
 20532 ;;		___wmul
 20533 ;;		_isdigit
 20534 ;; This function is called by:
 20535 ;;		_flashy_Main
 20536 ;; This function uses a non-reentrant model
 20537 ;;
 20538                           
 20539                           
 20540                           ;psect for function _sprintf
 20541  0628                     _sprintf:	
 20542                           
 20543                           ;incstack = 0
 20544                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20545                           ;sprintf@sp stored from wreg
 20546  0628  0020               	movlb	0	; select bank0
 20547  0629  00B1               	movwf	sprintf@sp
 20548                           
 20549                           ;doprnt.c: 494: va_list ap;
 20550                           ;doprnt.c: 499: signed char c;
 20551                           ;doprnt.c: 501: int width;
 20552                           ;doprnt.c: 506: signed char prec;
 20553                           ;doprnt.c: 508: unsigned char flag;
 20554                           ;doprnt.c: 523: union {
 20555                           ;doprnt.c: 524: unsigned long vd;
 20556                           ;doprnt.c: 525: double integ;
 20557                           ;doprnt.c: 526: } tmpval;
 20558                           ;doprnt.c: 528: unsigned int val;
 20559                           ;doprnt.c: 529: unsigned len;
 20560                           ;doprnt.c: 530: const char * cp;
 20561                           ;doprnt.c: 533: *ap = __va_start();
 20562  062A  3026               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 20563  062B  00A8               	movwf	??_sprintf
 20564  062C  0828               	movf	??_sprintf,w
 20565  062D  00AC               	movwf	sprintf@ap
 20566  062E                     l7011:	
 20567                           ;doprnt.c: 536: while(c = *f++) {
 20568                           
 20569  062E  0020               	movlb	0	; select bank0
 20570  062F  0825               	movf	sprintf@f+1,w
 20571  0630  00A9               	movwf	??_sprintf+1
 20572  0631  0824               	movf	sprintf@f,w
 20573  0632  00A8               	movwf	??_sprintf
 20574  0633  0AA4               	incf	sprintf@f,f
 20575  0634  1903               	skipnz
 20576  0635  0AA5               	incf	sprintf@f+1,f
 20577  0636  0828               	movf	??_sprintf,w
 20578  0637  0084               	movwf	4
 20579  0638  0829               	movf	??_sprintf+1,w
 20580  0639  0085               	movwf	5
 20581  063A  0800               	movf	0,w	;code access
 20582  063B  00AA               	movwf	??_sprintf+2
 20583  063C  082A               	movf	??_sprintf+2,w
 20584  063D  00B4               	movwf	sprintf@c
 20585  063E  0834               	movf	sprintf@c,w
 20586  063F  1903               	btfsc	3,2
 20587  0640  2F73               	goto	l7013
 20588                           
 20589                           ;doprnt.c: 538: if(c != '%')
 20590  0641  3025               	movlw	37
 20591  0642  0634               	xorwf	sprintf@c,w
 20592  0643  1903               	btfsc	3,2
 20593  0644  2E51               	goto	l6937
 20594                           
 20595                           ;doprnt.c: 540: {
 20596                           ;doprnt.c: 541: ((*sp++ = (c)));
 20597  0645  0834               	movf	sprintf@c,w
 20598  0646  00A8               	movwf	??_sprintf
 20599  0647  0831               	movf	sprintf@sp,w
 20600  0648  0086               	movwf	6
 20601  0649  0187               	clrf	7
 20602  064A  0828               	movf	??_sprintf,w
 20603  064B  0081               	movwf	1
 20604  064C  3001               	movlw	1
 20605  064D  00A8               	movwf	??_sprintf
 20606  064E  0828               	movf	??_sprintf,w
 20607  064F  07B1               	addwf	sprintf@sp,f
 20608                           
 20609                           ;doprnt.c: 542: continue;
 20610  0650  2E2E               	goto	l7011
 20611  0651                     l6937:	
 20612                           
 20613                           ;doprnt.c: 543: }
 20614                           ;doprnt.c: 546: width = 0;
 20615  0651  01B2               	clrf	sprintf@width
 20616  0652  01B3               	clrf	sprintf@width+1
 20617                           
 20618                           ;doprnt.c: 548: flag = 0;
 20619  0653  01AE               	clrf	sprintf@flag
 20620                           
 20621                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 20622  0654  0824               	movf	sprintf@f,w
 20623  0655  0084               	movwf	4
 20624  0656  0825               	movf	sprintf@f+1,w
 20625  0657  0085               	movwf	5
 20626  0658  0800               	movf	0,w	;code access
 20627  0659  31A5  259B  3186   	fcall	_isdigit
 20628  065C  1C03               	btfss	3,0
 20629  065D  2E8F               	goto	l6953
 20630                           
 20631                           ;doprnt.c: 598: width = 0;
 20632  065E  0020               	movlb	0	; select bank0
 20633  065F  01B2               	clrf	sprintf@width
 20634  0660  01B3               	clrf	sprintf@width+1
 20635  0661                     l6943:	
 20636                           ;doprnt.c: 599: do {
 20637                           
 20638                           
 20639                           ;doprnt.c: 600: width *= 10;
 20640  0661  300A               	movlw	10
 20641  0662  00F1               	movwf	___wmul@multiplier
 20642  0663  3000               	movlw	0
 20643  0664  00F2               	movwf	___wmul@multiplier+1
 20644  0665  0020               	movlb	0	; select bank0
 20645  0666  0833               	movf	sprintf@width+1,w
 20646  0667  00F4               	movwf	___wmul@multiplicand+1
 20647  0668  0832               	movf	sprintf@width,w
 20648  0669  00F3               	movwf	___wmul@multiplicand
 20649  066A  31A6  26D2  3186   	fcall	___wmul
 20650  066D  0872               	movf	?___wmul+1,w
 20651  066E  0020               	movlb	0	; select bank0
 20652  066F  00B3               	movwf	sprintf@width+1
 20653  0670  0871               	movf	?___wmul,w
 20654  0671  00B2               	movwf	sprintf@width
 20655                           
 20656                           ;doprnt.c: 601: width += *f++ - '0';
 20657  0672  0824               	movf	sprintf@f,w
 20658  0673  0084               	movwf	4
 20659  0674  0825               	movf	sprintf@f+1,w
 20660  0675  0085               	movwf	5
 20661  0676  0800               	movf	0,w	;code access
 20662  0677  3ED0               	addlw	208
 20663  0678  00A8               	movwf	??_sprintf
 20664  0679  30FF               	movlw	255
 20665  067A  1803               	skipnc
 20666  067B  3000               	movlw	0
 20667  067C  00A9               	movwf	??_sprintf+1
 20668  067D  0828               	movf	??_sprintf,w
 20669  067E  07B2               	addwf	sprintf@width,f
 20670  067F  0829               	movf	??_sprintf+1,w
 20671  0680  3DB3               	addwfc	sprintf@width+1,f
 20672  0681  3001               	movlw	1
 20673  0682  07A4               	addwf	sprintf@f,f
 20674  0683  3000               	movlw	0
 20675  0684  3DA5               	addwfc	sprintf@f+1,f
 20676                           
 20677                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20678  0685  0824               	movf	sprintf@f,w
 20679  0686  0084               	movwf	4
 20680  0687  0825               	movf	sprintf@f+1,w
 20681  0688  0085               	movwf	5
 20682  0689  0800               	movf	0,w	;code access
 20683  068A  31A5  259B  3186   	fcall	_isdigit
 20684  068D  1803               	btfsc	3,0
 20685  068E  2E61               	goto	l6943
 20686  068F                     l6953:	
 20687                           ;doprnt.c: 822: }
 20688                           
 20689                           ;doprnt.c: 813: continue;
 20690                           
 20691                           ;doprnt.c: 802: default:
 20692                           
 20693                           ;doprnt.c: 698: case 'i':
 20694                           ;doprnt.c: 699: break;
 20695                           
 20696                           ;doprnt.c: 697: case 'd':
 20697                           
 20698                           ;doprnt.c: 638: goto alldone;
 20699                           
 20700                           ;doprnt.c: 637: case 0:
 20701                           
 20702                           ;doprnt.c: 608: }
 20703                           ;doprnt.c: 635: switch(c = *f++) {
 20704                           
 20705  068F  0020               	movlb	0	; select bank0
 20706  0690  0825               	movf	sprintf@f+1,w
 20707  0691  00A9               	movwf	??_sprintf+1
 20708  0692  0824               	movf	sprintf@f,w
 20709  0693  00A8               	movwf	??_sprintf
 20710  0694  0AA4               	incf	sprintf@f,f
 20711  0695  1903               	skipnz
 20712  0696  0AA5               	incf	sprintf@f+1,f
 20713  0697  0828               	movf	??_sprintf,w
 20714  0698  0084               	movwf	4
 20715  0699  0829               	movf	??_sprintf+1,w
 20716  069A  0085               	movwf	5
 20717  069B  0800               	movf	0,w	;code access
 20718  069C  00B4               	movwf	sprintf@c
 20719                           
 20720                           ; Switch size 1, requested type "space"
 20721                           ; Number of cases is 3, Range of values is 0 to 105
 20722                           ; switch strategies available:
 20723                           ; Name         Instructions Cycles
 20724                           ; simple_byte           10     6 (average)
 20725                           ; direct_byte          218     6 (fixed)
 20726                           ; jumptable            260     6 (fixed)
 20727                           ;	Chosen strategy is simple_byte
 20728  069D  3A00               	xorlw	0	; case 0
 20729  069E  1903               	skipnz
 20730  069F  2F73               	goto	l7013
 20731  06A0  3A64               	xorlw	100	; case 100
 20732  06A1  1903               	skipnz
 20733  06A2  2EA7               	goto	l6955
 20734  06A3  3A0D               	xorlw	13	; case 105
 20735  06A4  1903               	skipnz
 20736  06A5  2EA7               	goto	l6955
 20737  06A6  2E2E               	goto	l7011
 20738  06A7                     l6955:	
 20739                           
 20740                           ;doprnt.c: 1253: {
 20741                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 20742  06A7  0020               	movlb	0	; select bank0
 20743  06A8  082C               	movf	sprintf@ap,w
 20744  06A9  0086               	movwf	6
 20745  06AA  0187               	clrf	7
 20746  06AB  3F40               	moviw [0]fsr1
 20747  06AC  00AF               	movwf	sprintf@val
 20748  06AD  3F41               	moviw [1]fsr1
 20749  06AE  00B0               	movwf	sprintf@val+1
 20750  06AF  3002               	movlw	2
 20751  06B0  00A8               	movwf	??_sprintf
 20752  06B1  0828               	movf	??_sprintf,w
 20753  06B2  07AC               	addwf	sprintf@ap,f
 20754                           
 20755                           ;doprnt.c: 1261: if((int)val < 0) {
 20756  06B3  1FB0               	btfss	sprintf@val+1,7
 20757  06B4  2EBE               	goto	l6965
 20758                           
 20759                           ;doprnt.c: 1262: flag |= 0x03;
 20760  06B5  3003               	movlw	3
 20761  06B6  00A8               	movwf	??_sprintf
 20762  06B7  0828               	movf	??_sprintf,w
 20763  06B8  04AE               	iorwf	sprintf@flag,f
 20764                           
 20765                           ;doprnt.c: 1263: val = -val;
 20766  06B9  09AF               	comf	sprintf@val,f
 20767  06BA  09B0               	comf	sprintf@val+1,f
 20768  06BB  0AAF               	incf	sprintf@val,f
 20769  06BC  1903               	skipnz
 20770  06BD  0AB0               	incf	sprintf@val+1,f
 20771  06BE                     l6965:	
 20772                           
 20773                           ;doprnt.c: 1264: }
 20774                           ;doprnt.c: 1266: }
 20775                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20776  06BE  01B4               	clrf	sprintf@c
 20777  06BF  0AB4               	incf	sprintf@c,f
 20778  06C0  3005               	movlw	5
 20779  06C1  0634               	xorwf	sprintf@c,w
 20780  06C2  1903               	btfsc	3,2
 20781  06C3  2EE3               	goto	l6977
 20782  06C4                     l6971:	
 20783                           
 20784                           ;doprnt.c: 1306: if(val < dpowers[c])
 20785  06C4  0834               	movf	sprintf@c,w
 20786  06C5  00A8               	movwf	??_sprintf
 20787  06C6  01A9               	clrf	??_sprintf+1
 20788  06C7  35A8               	lslf	??_sprintf,f
 20789  06C8  0DA9               	rlf	??_sprintf+1,f
 20790  06C9  3000               	movlw	low (_dpowers| (0+32768))
 20791  06CA  0728               	addwf	??_sprintf,w
 20792  06CB  0084               	movwf	4
 20793  06CC  30A0               	movlw	high (_dpowers| (0+32768))
 20794  06CD  3D29               	addwfc	??_sprintf+1,w
 20795  06CE  0085               	movwf	5
 20796  06CF  3F00               	moviw [0]fsr0
 20797  06D0  00AA               	movwf	??_sprintf+2
 20798  06D1  3F01               	moviw [1]fsr0
 20799  06D2  00AB               	movwf	??_sprintf+3
 20800  06D3  082B               	movf	??_sprintf+3,w
 20801  06D4  0230               	subwf	sprintf@val+1,w
 20802  06D5  1D03               	skipz
 20803  06D6  2ED9               	goto	u4275
 20804  06D7  082A               	movf	??_sprintf+2,w
 20805  06D8  022F               	subwf	sprintf@val,w
 20806  06D9                     u4275:	
 20807  06D9  1C03               	btfss	3,0
 20808  06DA  2EE3               	goto	l6977
 20809                           
 20810                           ;doprnt.c: 1307: break;
 20811  06DB  3001               	movlw	1
 20812  06DC  00A8               	movwf	??_sprintf
 20813  06DD  0828               	movf	??_sprintf,w
 20814  06DE  07B4               	addwf	sprintf@c,f
 20815  06DF  3005               	movlw	5
 20816  06E0  0634               	xorwf	sprintf@c,w
 20817  06E1  1D03               	btfss	3,2
 20818  06E2  2EC4               	goto	l6971
 20819  06E3                     l6977:	
 20820                           
 20821                           ;doprnt.c: 1345: if(width && flag & 0x03)
 20822  06E3  0832               	movf	sprintf@width,w
 20823  06E4  0433               	iorwf	sprintf@width+1,w
 20824  06E5  1903               	btfsc	3,2
 20825  06E6  2EEF               	goto	l1373
 20826  06E7  082E               	movf	sprintf@flag,w
 20827  06E8  3903               	andlw	3
 20828  06E9  1903               	btfsc	3,2
 20829  06EA  2EEF               	goto	l1373
 20830                           
 20831                           ;doprnt.c: 1346: width--;
 20832  06EB  30FF               	movlw	255
 20833  06EC  07B2               	addwf	sprintf@width,f
 20834  06ED  30FF               	movlw	255
 20835  06EE  3DB3               	addwfc	sprintf@width+1,f
 20836  06EF                     l1373:	
 20837                           
 20838                           ;doprnt.c: 1381: if(width > c)
 20839  06EF  0834               	movf	sprintf@c,w
 20840  06F0  00A8               	movwf	??_sprintf
 20841  06F1  01A9               	clrf	??_sprintf+1
 20842  06F2  1BA8               	btfsc	??_sprintf,7
 20843  06F3  03A9               	decf	??_sprintf+1,f
 20844  06F4  0829               	movf	??_sprintf+1,w
 20845  06F5  3A80               	xorlw	128
 20846  06F6  00AA               	movwf	??_sprintf+2
 20847  06F7  0833               	movf	sprintf@width+1,w
 20848  06F8  3A80               	xorlw	128
 20849  06F9  022A               	subwf	??_sprintf+2,w
 20850  06FA  1D03               	skipz
 20851  06FB  2EFE               	goto	u4315
 20852  06FC  0832               	movf	sprintf@width,w
 20853  06FD  0228               	subwf	??_sprintf,w
 20854  06FE                     u4315:	
 20855  06FE  1803               	skipnc
 20856  06FF  2F0B               	goto	l6985
 20857                           
 20858                           ;doprnt.c: 1382: width -= c;
 20859  0700  0020               	movlb	0	; select bank0
 20860  0701  0834               	movf	sprintf@c,w
 20861  0702  00A8               	movwf	??_sprintf
 20862  0703  01A9               	clrf	??_sprintf+1
 20863  0704  1BA8               	btfsc	??_sprintf,7
 20864  0705  03A9               	decf	??_sprintf+1,f
 20865  0706  0828               	movf	??_sprintf,w
 20866  0707  02B2               	subwf	sprintf@width,f
 20867  0708  0829               	movf	??_sprintf+1,w
 20868  0709  3BB3               	subwfb	sprintf@width+1,f
 20869  070A  2F0E               	goto	l6987
 20870  070B                     l6985:	
 20871                           
 20872                           ;doprnt.c: 1383: else
 20873                           ;doprnt.c: 1384: width = 0;
 20874  070B  0020               	movlb	0	; select bank0
 20875  070C  01B2               	clrf	sprintf@width
 20876  070D  01B3               	clrf	sprintf@width+1
 20877  070E                     l6987:	
 20878                           
 20879                           ;doprnt.c: 1422: {
 20880                           ;doprnt.c: 1424: if(width
 20881                           ;doprnt.c: 1428: )
 20882  070E  0832               	movf	sprintf@width,w
 20883  070F  0433               	iorwf	sprintf@width+1,w
 20884  0710  1903               	btfsc	3,2
 20885  0711  2F25               	goto	l6995
 20886  0712                     l6989:	
 20887                           ;doprnt.c: 1429: do
 20888                           
 20889                           
 20890                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 20891  0712  3020               	movlw	32
 20892  0713  00A8               	movwf	??_sprintf
 20893  0714  0831               	movf	sprintf@sp,w
 20894  0715  0086               	movwf	6
 20895  0716  0187               	clrf	7
 20896  0717  0828               	movf	??_sprintf,w
 20897  0718  0081               	movwf	1
 20898  0719  3001               	movlw	1
 20899  071A  00A8               	movwf	??_sprintf
 20900  071B  0828               	movf	??_sprintf,w
 20901  071C  07B1               	addwf	sprintf@sp,f
 20902                           
 20903                           ;doprnt.c: 1431: while(--width);
 20904  071D  30FF               	movlw	255
 20905  071E  07B2               	addwf	sprintf@width,f
 20906  071F  30FF               	movlw	255
 20907  0720  3DB3               	addwfc	sprintf@width+1,f
 20908  0721  0832               	movf	sprintf@width,w
 20909  0722  0433               	iorwf	sprintf@width+1,w
 20910  0723  1D03               	btfss	3,2
 20911  0724  2F12               	goto	l6989
 20912  0725                     l6995:	
 20913                           
 20914                           ;doprnt.c: 1438: if(flag & 0x03)
 20915  0725  082E               	movf	sprintf@flag,w
 20916  0726  3903               	andlw	3
 20917  0727  1903               	btfsc	3,2
 20918  0728  2F34               	goto	l7001
 20919                           
 20920                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 20921  0729  302D               	movlw	45
 20922  072A  00A8               	movwf	??_sprintf
 20923  072B  0831               	movf	sprintf@sp,w
 20924  072C  0086               	movwf	6
 20925  072D  0187               	clrf	7
 20926  072E  0828               	movf	??_sprintf,w
 20927  072F  0081               	movwf	1
 20928  0730  3001               	movlw	1
 20929  0731  00A8               	movwf	??_sprintf
 20930  0732  0828               	movf	??_sprintf,w
 20931  0733  07B1               	addwf	sprintf@sp,f
 20932  0734                     l7001:	
 20933                           
 20934                           ;doprnt.c: 1469: }
 20935                           ;doprnt.c: 1472: prec = c;
 20936  0734  0834               	movf	sprintf@c,w
 20937  0735  00A8               	movwf	??_sprintf
 20938  0736  0828               	movf	??_sprintf,w
 20939  0737  00AD               	movwf	sprintf@prec
 20940  0738                     l7009:	
 20941                           ;doprnt.c: 1474: while(prec--) {
 20942                           
 20943  0738  30FF               	movlw	255
 20944  0739  00A8               	movwf	??_sprintf
 20945  073A  0828               	movf	??_sprintf,w
 20946  073B  07AD               	addwf	sprintf@prec,f
 20947  073C  0A2D               	incf	sprintf@prec,w
 20948  073D  1903               	btfsc	3,2
 20949  073E  2E2E               	goto	l7011
 20950                           
 20951                           ;doprnt.c: 1478: {
 20952                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 20953  073F  300A               	movlw	10
 20954  0740  00A0               	movwf	___lwmod@divisor
 20955  0741  3000               	movlw	0
 20956  0742  00A1               	movwf	___lwmod@divisor+1
 20957  0743  082D               	movf	sprintf@prec,w
 20958  0744  00A8               	movwf	??_sprintf
 20959  0745  01A9               	clrf	??_sprintf+1
 20960  0746  35A8               	lslf	??_sprintf,f
 20961  0747  0DA9               	rlf	??_sprintf+1,f
 20962  0748  3000               	movlw	low (_dpowers| (0+32768))
 20963  0749  0728               	addwf	??_sprintf,w
 20964  074A  0084               	movwf	4
 20965  074B  30A0               	movlw	high (_dpowers| (0+32768))
 20966  074C  3D29               	addwfc	??_sprintf+1,w
 20967  074D  0085               	movwf	5
 20968  074E  3F00               	moviw [0]fsr0
 20969  074F  00F1               	movwf	___lwdiv@divisor
 20970  0750  3F01               	moviw [1]fsr0
 20971  0751  00F2               	movwf	___lwdiv@divisor+1
 20972  0752  0830               	movf	sprintf@val+1,w
 20973  0753  00F4               	movwf	___lwdiv@dividend+1
 20974  0754  082F               	movf	sprintf@val,w
 20975  0755  00F3               	movwf	___lwdiv@dividend
 20976  0756  3199  2189  3186   	fcall	___lwdiv
 20977  0759  0872               	movf	?___lwdiv+1,w
 20978  075A  0020               	movlb	0	; select bank0
 20979  075B  00A3               	movwf	___lwmod@dividend+1
 20980  075C  0871               	movf	?___lwdiv,w
 20981  075D  00A2               	movwf	___lwmod@dividend
 20982  075E  3198  2069  3186   	fcall	___lwmod
 20983  0761  0020               	movlb	0	; select bank0
 20984  0762  0820               	movf	?___lwmod,w
 20985  0763  3E30               	addlw	48
 20986  0764  00AA               	movwf	??_sprintf+2
 20987  0765  082A               	movf	??_sprintf+2,w
 20988  0766  00B4               	movwf	sprintf@c
 20989                           
 20990                           ;doprnt.c: 1523: }
 20991                           ;doprnt.c: 1524: ((*sp++ = (c)));
 20992  0767  0834               	movf	sprintf@c,w
 20993  0768  00A8               	movwf	??_sprintf
 20994  0769  0831               	movf	sprintf@sp,w
 20995  076A  0086               	movwf	6
 20996  076B  0187               	clrf	7
 20997  076C  0828               	movf	??_sprintf,w
 20998  076D  0081               	movwf	1
 20999  076E  3001               	movlw	1
 21000  076F  00A8               	movwf	??_sprintf
 21001  0770  0828               	movf	??_sprintf,w
 21002  0771  07B1               	addwf	sprintf@sp,f
 21003  0772  2F38               	goto	l7009
 21004  0773                     l7013:	
 21005                           ;doprnt.c: 1525: }
 21006                           ;doprnt.c: 1533: }
 21007                           ;doprnt.c: 1535: alldone:
 21008                           
 21009                           
 21010                           ;doprnt.c: 1538: *sp = 0;
 21011  0773  0020               	movlb	0	; select bank0
 21012  0774  0831               	movf	sprintf@sp,w
 21013  0775  0086               	movwf	6
 21014  0776  0187               	clrf	7
 21015  0777  0181               	clrf	1
 21016  0778  0008               	return
 21017  0779                     __end_of_sprintf:	
 21018                           ;doprnt.c: 1540: return 0;
 21019                           ;	Return value of _sprintf is never used
 21020                           
 21021                           
 21022                           	psect	text34
 21023  259B                     __ptext34:	
 21024 ;; *************** function _isdigit *****************
 21025 ;; Defined at:
 21026 ;;		line 8 in file "/Applications/microchip/xc8/v1.42/sources/common/isdigit.c"
 21027 ;; Parameters:    Size  Location     Type
 21028 ;;  c               1    wreg     unsigned char 
 21029 ;; Auto vars:     Size  Location     Type
 21030 ;;  c               1    2[COMMON] unsigned char 
 21031 ;; Return value:  Size  Location     Type
 21032 ;;		None               void
 21033 ;; Registers used:
 21034 ;;		wreg, status,2, status,0
 21035 ;; Tracked objects:
 21036 ;;		On entry : 0/0
 21037 ;;		On exit  : 0/0
 21038 ;;		Unchanged: 0/0
 21039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21044 ;;Total ram usage:        2 bytes
 21045 ;; Hardware stack levels used:    1
 21046 ;; Hardware stack levels required when called:    4
 21047 ;; This function calls:
 21048 ;;		Nothing
 21049 ;; This function is called by:
 21050 ;;		_sprintf
 21051 ;; This function uses a non-reentrant model
 21052 ;;
 21053                           
 21054                           
 21055                           ;psect for function _isdigit
 21056  259B                     _isdigit:	
 21057                           
 21058                           ;incstack = 0
 21059                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 21060                           ;isdigit@c stored from wreg
 21061  259B  00F2               	movwf	isdigit@c
 21062  259C  01F1               	clrf	_isdigit$3118
 21063  259D  303A               	movlw	58
 21064  259E  0272               	subwf	isdigit@c,w
 21065  259F  1803               	skipnc
 21066  25A0  2DA7               	goto	l6731
 21067  25A1  3030               	movlw	48
 21068  25A2  0272               	subwf	isdigit@c,w
 21069  25A3  1C03               	skipc
 21070  25A4  2DA7               	goto	l6731
 21071  25A5  01F1               	clrf	_isdigit$3118
 21072  25A6  0AF1               	incf	_isdigit$3118,f
 21073  25A7                     l6731:	
 21074  25A7  0C71               	rrf	_isdigit$3118,w
 21075  25A8  0008               	return
 21076  25A9                     __end_of_isdigit:	
 21077                           
 21078                           	psect	text35
 21079  26D2                     __ptext35:	
 21080 ;; *************** function ___wmul *****************
 21081 ;; Defined at:
 21082 ;;		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul16.c"
 21083 ;; Parameters:    Size  Location     Type
 21084 ;;  multiplier      2    1[COMMON] unsigned int 
 21085 ;;  multiplicand    2    3[COMMON] unsigned int 
 21086 ;; Auto vars:     Size  Location     Type
 21087 ;;  product         2    5[COMMON] unsigned int 
 21088 ;; Return value:  Size  Location     Type
 21089 ;;                  2    1[COMMON] unsigned int 
 21090 ;; Registers used:
 21091 ;;		wreg, status,2, status,0
 21092 ;; Tracked objects:
 21093 ;;		On entry : 0/0
 21094 ;;		On exit  : 0/0
 21095 ;;		Unchanged: 0/0
 21096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21100 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21101 ;;Total ram usage:        6 bytes
 21102 ;; Hardware stack levels used:    1
 21103 ;; Hardware stack levels required when called:    4
 21104 ;; This function calls:
 21105 ;;		Nothing
 21106 ;; This function is called by:
 21107 ;;		_secret_check
 21108 ;;		_sprintf
 21109 ;; This function uses a non-reentrant model
 21110 ;;
 21111                           
 21112                           
 21113                           ;psect for function ___wmul
 21114  26D2                     ___wmul:	
 21115                           
 21116                           ;incstack = 0
 21117                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 21118  26D2  01F5               	clrf	___wmul@product
 21119  26D3  01F6               	clrf	___wmul@product+1
 21120  26D4                     l6737:	
 21121  26D4  1C71               	btfss	___wmul@multiplier,0
 21122  26D5  2EDA               	goto	l1466
 21123  26D6  0873               	movf	___wmul@multiplicand,w
 21124  26D7  07F5               	addwf	___wmul@product,f
 21125  26D8  0874               	movf	___wmul@multiplicand+1,w
 21126  26D9  3DF6               	addwfc	___wmul@product+1,f
 21127  26DA                     l1466:	
 21128  26DA  3001               	movlw	1
 21129  26DB                     u3975:	
 21130  26DB  35F3               	lslf	___wmul@multiplicand,f
 21131  26DC  0DF4               	rlf	___wmul@multiplicand+1,f
 21132  26DD  0B89               	decfsz	9,f
 21133  26DE  2EDB               	goto	u3975
 21134  26DF  3001               	movlw	1
 21135  26E0                     u3985:	
 21136  26E0  36F2               	lsrf	___wmul@multiplier+1,f
 21137  26E1  0CF1               	rrf	___wmul@multiplier,f
 21138  26E2  0B89               	decfsz	9,f
 21139  26E3  2EE0               	goto	u3985
 21140  26E4  0871               	movf	___wmul@multiplier,w
 21141  26E5  0472               	iorwf	___wmul@multiplier+1,w
 21142  26E6  1D03               	btfss	3,2
 21143  26E7  2ED4               	goto	l6737
 21144  26E8  0876               	movf	___wmul@product+1,w
 21145  26E9  00F2               	movwf	?___wmul+1
 21146  26EA  0875               	movf	___wmul@product,w
 21147  26EB  00F1               	movwf	?___wmul
 21148  26EC  0008               	return
 21149  26ED                     __end_of___wmul:	
 21150                           
 21151                           	psect	text36
 21152  24B2                     __ptext36:	
 21153 ;; *************** function _nullifyBadge_irTxSet *****************
 21154 ;; Defined at:
 21155 ;;		line 264 in file "nullifyBadge.c"
 21156 ;; Parameters:    Size  Location     Type
 21157 ;;		None
 21158 ;; Auto vars:     Size  Location     Type
 21159 ;;		None
 21160 ;; Return value:  Size  Location     Type
 21161 ;;                  1    wreg      void 
 21162 ;; Registers used:
 21163 ;;		None
 21164 ;; Tracked objects:
 21165 ;;		On entry : 0/0
 21166 ;;		On exit  : 0/0
 21167 ;;		Unchanged: 0/0
 21168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21173 ;;Total ram usage:        0 bytes
 21174 ;; Hardware stack levels used:    1
 21175 ;; Hardware stack levels required when called:    4
 21176 ;; This function calls:
 21177 ;;		Nothing
 21178 ;; This function is called by:
 21179 ;;		_flashy_Main
 21180 ;; This function uses a non-reentrant model
 21181 ;;
 21182                           
 21183                           
 21184                           ;psect for function _nullifyBadge_irTxSet
 21185  24B2                     _nullifyBadge_irTxSet:	
 21186                           
 21187                           ;incstack = 0
 21188                           ; Regs used in _nullifyBadge_irTxSet: []
 21189                           ;nullifyBadge.c: 266: do { LATBbits.LATB7 = 0; } while(0);
 21190  24B2  0022               	movlb	2	; select bank2
 21191  24B3  138D               	bcf	13,7	;volatile
 21192  24B4  0008               	return
 21193  24B5                     __end_of_nullifyBadge_irTxSet:	
 21194                           
 21195                           	psect	text37
 21196  2539                     __ptext37:	
 21197 ;; *************** function _nullifyBadge_irTxRelease *****************
 21198 ;; Defined at:
 21199 ;;		line 254 in file "nullifyBadge.c"
 21200 ;; Parameters:    Size  Location     Type
 21201 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 21202 ;;		 -> badge_inst(18), 
 21203 ;; Auto vars:     Size  Location     Type
 21204 ;;  badge           1    2[COMMON] PTR struct t_nullifyBadg
 21205 ;;		 -> badge_inst(18), 
 21206 ;; Return value:  Size  Location     Type
 21207 ;;                  1    wreg      void 
 21208 ;; Registers used:
 21209 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21210 ;; Tracked objects:
 21211 ;;		On entry : 0/0
 21212 ;;		On exit  : 0/0
 21213 ;;		Unchanged: 0/0
 21214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21219 ;;Total ram usage:        2 bytes
 21220 ;; Hardware stack levels used:    1
 21221 ;; Hardware stack levels required when called:    4
 21222 ;; This function calls:
 21223 ;;		Nothing
 21224 ;; This function is called by:
 21225 ;;		_flashy_Main
 21226 ;; This function uses a non-reentrant model
 21227 ;;
 21228                           
 21229                           
 21230                           ;psect for function _nullifyBadge_irTxRelease
 21231  2539                     _nullifyBadge_irTxRelease:	
 21232                           
 21233                           ;incstack = 0
 21234                           ; Regs used in _nullifyBadge_irTxRelease: [wreg+fsr1l+fsr1h+status,2+status,0]
 21235                           ;nullifyBadge_irTxRelease@badge stored from wreg
 21236  2539  00F2               	movwf	nullifyBadge_irTxRelease@badge
 21237                           
 21238                           ;nullifyBadge.c: 255: badge->registeredHw &= ~(1 << HW_IR_TX);
 21239  253A  30FB               	movlw	251
 21240  253B  00F1               	movwf	??_nullifyBadge_irTxRelease
 21241  253C  0872               	movf	nullifyBadge_irTxRelease@badge,w
 21242  253D  3E11               	addlw	17
 21243  253E  0086               	movwf	6
 21244  253F  3001               	movlw	1	; select bank2/3
 21245  2540  0087               	movwf	7
 21246  2541  0871               	movf	??_nullifyBadge_irTxRelease,w
 21247  2542  0581               	andwf	1,f
 21248  2543  0008               	return
 21249  2544                     __end_of_nullifyBadge_irTxRelease:	
 21250                           
 21251                           	psect	text38
 21252  25B7                     __ptext38:	
 21253 ;; *************** function _nullifyBadge_irTxRegister *****************
 21254 ;; Defined at:
 21255 ;;		line 242 in file "nullifyBadge.c"
 21256 ;; Parameters:    Size  Location     Type
 21257 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 21258 ;;		 -> badge_inst(18), 
 21259 ;; Auto vars:     Size  Location     Type
 21260 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 21261 ;;		 -> badge_inst(18), 
 21262 ;; Return value:  Size  Location     Type
 21263 ;;                  1    wreg      char 
 21264 ;; Registers used:
 21265 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21266 ;; Tracked objects:
 21267 ;;		On entry : 0/0
 21268 ;;		On exit  : 0/0
 21269 ;;		Unchanged: 0/0
 21270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21275 ;;Total ram usage:        1 bytes
 21276 ;; Hardware stack levels used:    1
 21277 ;; Hardware stack levels required when called:    4
 21278 ;; This function calls:
 21279 ;;		Nothing
 21280 ;; This function is called by:
 21281 ;;		_flashy_Main
 21282 ;; This function uses a non-reentrant model
 21283 ;;
 21284                           
 21285                           
 21286                           ;psect for function _nullifyBadge_irTxRegister
 21287  25B7                     _nullifyBadge_irTxRegister:	
 21288                           
 21289                           ;incstack = 0
 21290                           ; Regs used in _nullifyBadge_irTxRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 21291                           ;nullifyBadge_irTxRegister@badge stored from wreg
 21292  25B7  00F1               	movwf	nullifyBadge_irTxRegister@badge
 21293                           
 21294                           ;nullifyBadge.c: 243: if (badge->registeredHw & HW_IR_TX) {
 21295  25B8  0871               	movf	nullifyBadge_irTxRegister@badge,w
 21296  25B9  3E11               	addlw	17
 21297  25BA  0086               	movwf	6
 21298  25BB  3001               	movlw	1	; select bank2/3
 21299  25BC  0087               	movwf	7
 21300  25BD  1881               	btfsc	1,1
 21301  25BE  0008               	return
 21302                           
 21303                           ;nullifyBadge.c: 246: else {
 21304                           ;nullifyBadge.c: 247: badge->registeredHw |= (1 << HW_IR_TX);
 21305                           
 21306                           ;nullifyBadge.c: 245: }
 21307                           
 21308                           ;nullifyBadge.c: 244: return -1;
 21309                           ;	Return value of _nullifyBadge_irTxRegister is never used
 21310  25BF  0871               	movf	nullifyBadge_irTxRegister@badge,w
 21311  25C0  3E11               	addlw	17
 21312  25C1  0086               	movwf	6
 21313  25C2  3001               	movlw	1	; select bank2/3
 21314  25C3  0087               	movwf	7
 21315  25C4  1501               	bsf	1,2
 21316                           
 21317                           ;nullifyBadge.c: 248: return 0;
 21318                           ;	Return value of _nullifyBadge_irTxRegister is never used
 21319  25C5  0008               	return
 21320  25C6                     __end_of_nullifyBadge_irTxRegister:	
 21321                           
 21322                           	psect	text39
 21323  24AF                     __ptext39:	
 21324 ;; *************** function _nullifyBadge_irTxClr *****************
 21325 ;; Defined at:
 21326 ;;		line 270 in file "nullifyBadge.c"
 21327 ;; Parameters:    Size  Location     Type
 21328 ;;		None
 21329 ;; Auto vars:     Size  Location     Type
 21330 ;;		None
 21331 ;; Return value:  Size  Location     Type
 21332 ;;                  1    wreg      void 
 21333 ;; Registers used:
 21334 ;;		None
 21335 ;; Tracked objects:
 21336 ;;		On entry : 0/0
 21337 ;;		On exit  : 0/0
 21338 ;;		Unchanged: 0/0
 21339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21344 ;;Total ram usage:        0 bytes
 21345 ;; Hardware stack levels used:    1
 21346 ;; Hardware stack levels required when called:    4
 21347 ;; This function calls:
 21348 ;;		Nothing
 21349 ;; This function is called by:
 21350 ;;		_flashy_Main
 21351 ;; This function uses a non-reentrant model
 21352 ;;
 21353                           
 21354                           
 21355                           ;psect for function _nullifyBadge_irTxClr
 21356  24AF                     _nullifyBadge_irTxClr:	
 21357                           
 21358                           ;incstack = 0
 21359                           ; Regs used in _nullifyBadge_irTxClr: []
 21360                           ;nullifyBadge.c: 272: do { LATBbits.LATB7 = 1; } while(0);
 21361  24AF  0022               	movlb	2	; select bank2
 21362  24B0  178D               	bsf	13,7	;volatile
 21363  24B1  0008               	return
 21364  24B2                     __end_of_nullifyBadge_irTxClr:	
 21365                           
 21366                           	psect	text40
 21367  07FB                     __ptext40:	
 21368 ;; *************** function _nullifyBadge_irGet *****************
 21369 ;; Defined at:
 21370 ;;		line 232 in file "nullifyBadge.c"
 21371 ;; Parameters:    Size  Location     Type
 21372 ;;		None
 21373 ;; Auto vars:     Size  Location     Type
 21374 ;;		None
 21375 ;; Return value:  Size  Location     Type
 21376 ;;                  1    wreg      unsigned char 
 21377 ;; Registers used:
 21378 ;;		wreg, status,2, status,0
 21379 ;; Tracked objects:
 21380 ;;		On entry : 0/0
 21381 ;;		On exit  : 0/0
 21382 ;;		Unchanged: 0/0
 21383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21388 ;;Total ram usage:        0 bytes
 21389 ;; Hardware stack levels used:    1
 21390 ;; Hardware stack levels required when called:    4
 21391 ;; This function calls:
 21392 ;;		Nothing
 21393 ;; This function is called by:
 21394 ;;		_flashy_Main
 21395 ;; This function uses a non-reentrant model
 21396 ;;
 21397                           
 21398                           
 21399                           ;psect for function _nullifyBadge_irGet
 21400  07FB                     _nullifyBadge_irGet:	
 21401                           
 21402                           ;nullifyBadge.c: 233: return PORTBbits.RB5;
 21403                           
 21404                           ;incstack = 0
 21405                           ; Regs used in _nullifyBadge_irGet: [wreg+status,2+status,0]
 21406  07FB  0020               	movlb	0	; select bank0
 21407  07FC  0E0D               	swapf	13,w	;volatile
 21408  07FD  0C89               	rrf	9,f
 21409  07FE  3901               	andlw	1
 21410  07FF  0008               	return
 21411  0800                     __end_of_nullifyBadge_irGet:	
 21412                           
 21413                           	psect	text41
 21414  18F4                     __ptext41:	
 21415 ;; *************** function _nullifyBadge_buttonsGet *****************
 21416 ;; Defined at:
 21417 ;;		line 187 in file "nullifyBadge.c"
 21418 ;; Parameters:    Size  Location     Type
 21419 ;;		None
 21420 ;; Auto vars:     Size  Location     Type
 21421 ;;  retVal          1    3[COMMON] unsigned char 
 21422 ;; Return value:  Size  Location     Type
 21423 ;;                  1    wreg      unsigned char 
 21424 ;; Registers used:
 21425 ;;		wreg, status,2, status,0
 21426 ;; Tracked objects:
 21427 ;;		On entry : 0/0
 21428 ;;		On exit  : 0/0
 21429 ;;		Unchanged: 0/0
 21430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21434 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21435 ;;Total ram usage:        3 bytes
 21436 ;; Hardware stack levels used:    1
 21437 ;; Hardware stack levels required when called:    4
 21438 ;; This function calls:
 21439 ;;		Nothing
 21440 ;; This function is called by:
 21441 ;;		_menu_Main
 21442 ;;		_flashy_Main
 21443 ;;		_locked_Main
 21444 ;;		_secret_Main
 21445 ;;		_slot_Main
 21446 ;; This function uses a non-reentrant model
 21447 ;;
 21448                           
 21449                           
 21450                           ;psect for function _nullifyBadge_buttonsGet
 21451  18F4                     _nullifyBadge_buttonsGet:	
 21452                           
 21453                           ;nullifyBadge.c: 188: u8 retVal = 0x0F;
 21454                           
 21455                           ;incstack = 0
 21456                           ; Regs used in _nullifyBadge_buttonsGet: [wreg+status,2+status,0]
 21457  18F4  300F               	movlw	15
 21458  18F5  00F1               	movwf	??_nullifyBadge_buttonsGet
 21459  18F6  0871               	movf	??_nullifyBadge_buttonsGet,w
 21460  18F7  00F3               	movwf	nullifyBadge_buttonsGet@retVal
 21461                           
 21462                           ;nullifyBadge.c: 190: retVal &= ~(PORTCbits.RC5 << 0);
 21463  18F8  0020               	movlb	0	; select bank0
 21464  18F9  0E0E               	swapf	14,w	;volatile
 21465  18FA  0C89               	rrf	9,f
 21466  18FB  3901               	andlw	1
 21467  18FC  3AFF               	xorlw	255
 21468  18FD  00F1               	movwf	??_nullifyBadge_buttonsGet
 21469  18FE  0871               	movf	??_nullifyBadge_buttonsGet,w
 21470  18FF  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 21471                           
 21472                           ;nullifyBadge.c: 191: retVal &= ~(PORTAbits.RA2 << 1);
 21473  1900  0C0C               	rrf	12,w	;volatile
 21474  1901  0C89               	rrf	9,f
 21475  1902  3901               	andlw	1
 21476  1903  0709               	addwf	9,w
 21477  1904  3AFF               	xorlw	255
 21478  1905  00F1               	movwf	??_nullifyBadge_buttonsGet
 21479  1906  0871               	movf	??_nullifyBadge_buttonsGet,w
 21480  1907  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 21481                           
 21482                           ;nullifyBadge.c: 192: retVal &= ~(PORTAbits.RA4 << 2);
 21483  1908  0E0C               	swapf	12,w	;volatile
 21484  1909  3901               	andlw	1
 21485  190A  00F1               	movwf	??_nullifyBadge_buttonsGet
 21486  190B  3001               	movlw	1
 21487  190C                     u4155:	
 21488  190C  35F1               	lslf	??_nullifyBadge_buttonsGet,f
 21489  190D  3EFF               	addlw	-1
 21490  190E  1D03               	skipz
 21491  190F  290C               	goto	u4155
 21492  1910  3571               	lslf	??_nullifyBadge_buttonsGet,w
 21493  1911  3AFF               	xorlw	255
 21494  1912  00F2               	movwf	??_nullifyBadge_buttonsGet+1
 21495  1913  0872               	movf	??_nullifyBadge_buttonsGet+1,w
 21496  1914  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 21497                           
 21498                           ;nullifyBadge.c: 193: retVal &= ~(PORTAbits.RA5 << 3);
 21499  1915  0E0C               	swapf	12,w	;volatile
 21500  1916  0C89               	rrf	9,f
 21501  1917  3901               	andlw	1
 21502  1918  00F1               	movwf	??_nullifyBadge_buttonsGet
 21503  1919  3002               	movlw	2
 21504  191A                     u4165:	
 21505  191A  35F1               	lslf	??_nullifyBadge_buttonsGet,f
 21506  191B  3EFF               	addlw	-1
 21507  191C  1D03               	skipz
 21508  191D  291A               	goto	u4165
 21509  191E  3571               	lslf	??_nullifyBadge_buttonsGet,w
 21510  191F  3AFF               	xorlw	255
 21511  1920  00F2               	movwf	??_nullifyBadge_buttonsGet+1
 21512  1921  0872               	movf	??_nullifyBadge_buttonsGet+1,w
 21513  1922  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 21514                           
 21515                           ;nullifyBadge.c: 195: return retVal;
 21516  1923  0873               	movf	nullifyBadge_buttonsGet@retVal,w
 21517  1924  0008               	return
 21518  1925                     __end_of_nullifyBadge_buttonsGet:	
 21519                           
 21520                           	psect	text42
 21521  264B                     __ptext42:	
 21522 ;; *************** function _let_alternate *****************
 21523 ;; Defined at:
 21524 ;;		line 191 in file "main.c"
 21525 ;; Parameters:    Size  Location     Type
 21526 ;;  count           2   16[BANK0 ] unsigned int 
 21527 ;; Auto vars:     Size  Location     Type
 21528 ;;		None
 21529 ;; Return value:  Size  Location     Type
 21530 ;;                  1    wreg      void 
 21531 ;; Registers used:
 21532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21533 ;; Tracked objects:
 21534 ;;		On entry : 0/0
 21535 ;;		On exit  : 0/0
 21536 ;;		Unchanged: 0/0
 21537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21541 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21542 ;;Total ram usage:        2 bytes
 21543 ;; Hardware stack levels used:    1
 21544 ;; Hardware stack levels required when called:    9
 21545 ;; This function calls:
 21546 ;;		_nullifyBadge_userLedsSet
 21547 ;; This function is called by:
 21548 ;;		_flashy_Main
 21549 ;; This function uses a non-reentrant model
 21550 ;;
 21551                           
 21552                           
 21553                           ;psect for function _let_alternate
 21554  264B                     _let_alternate:	
 21555                           
 21556                           ;main.c: 192: if(count %2 == 1){
 21557                           
 21558                           ;incstack = 0
 21559                           ; Regs used in _let_alternate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21560  264B  0020               	movlb	0	; select bank0
 21561  264C  1C30               	btfss	let_alternate@count,0
 21562  264D  2E56               	goto	l6829
 21563                           
 21564                           ;main.c: 193: nullifyBadge_userLedsSet(&badge_inst,43349);
 21565  264E  3055               	movlw	85
 21566  264F  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21567  2650  30A9               	movlw	169
 21568  2651  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21569  2652  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21570  2653  31A5  2581         	fcall	_nullifyBadge_userLedsSet
 21571                           
 21572                           ;main.c: 194: }
 21573  2655  0008               	return
 21574  2656                     l6829:	
 21575                           
 21576                           ;main.c: 195: else{
 21577                           ;main.c: 196: nullifyBadge_userLedsSet(&badge_inst,21162);
 21578  2656  30AA               	movlw	170
 21579  2657  0020               	movlb	0	; select bank0
 21580  2658  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21581  2659  3052               	movlw	82
 21582  265A  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21583  265B  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21584  265C  31A5  2581         	fcall	_nullifyBadge_userLedsSet
 21585  265E  0008               	return
 21586  265F                     __end_of_let_alternate:	
 21587                           
 21588                           	psect	text43
 21589  1B26                     __ptext43:	
 21590 ;; *************** function _led_roundabout *****************
 21591 ;; Defined at:
 21592 ;;		line 156 in file "main.c"
 21593 ;; Parameters:    Size  Location     Type
 21594 ;;  counter         2   16[BANK0 ] unsigned int 
 21595 ;; Auto vars:     Size  Location     Type
 21596 ;;  size            2   22[BANK0 ] unsigned int 
 21597 ;;  leds            2   20[BANK0 ] unsigned int 
 21598 ;; Return value:  Size  Location     Type
 21599 ;;                  1    wreg      void 
 21600 ;; Registers used:
 21601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21602 ;; Tracked objects:
 21603 ;;		On entry : 0/0
 21604 ;;		On exit  : 0/0
 21605 ;;		Unchanged: 0/0
 21606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21607 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21608 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21610 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21611 ;;Total ram usage:        8 bytes
 21612 ;; Hardware stack levels used:    1
 21613 ;; Hardware stack levels required when called:    9
 21614 ;; This function calls:
 21615 ;;		___lwmod
 21616 ;;		_nullifyBadge_userLedsSet
 21617 ;; This function is called by:
 21618 ;;		_flashy_Main
 21619 ;; This function uses a non-reentrant model
 21620 ;;
 21621                           
 21622                           
 21623                           ;psect for function _led_roundabout
 21624  1B26                     _led_roundabout:	
 21625                           
 21626                           ;main.c: 157: u16 size = sizeof(roundabout_leds) / sizeof(roundabout_leds[0]);
 21627                           
 21628                           ;incstack = 0
 21629                           ; Regs used in _led_roundabout: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21630  1B26  300E               	movlw	14
 21631  1B27  0020               	movlb	0	; select bank0
 21632  1B28  00B6               	movwf	led_roundabout@size
 21633  1B29  3000               	movlw	0
 21634  1B2A  00B7               	movwf	led_roundabout@size+1
 21635                           
 21636                           ;main.c: 158: u16 leds = roundabout_leds[counter % size];
 21637  1B2B  0837               	movf	led_roundabout@size+1,w
 21638  1B2C  00A1               	movwf	___lwmod@divisor+1
 21639  1B2D  0836               	movf	led_roundabout@size,w
 21640  1B2E  00A0               	movwf	___lwmod@divisor
 21641  1B2F  0831               	movf	led_roundabout@counter+1,w
 21642  1B30  00A3               	movwf	___lwmod@dividend+1
 21643  1B31  0830               	movf	led_roundabout@counter,w
 21644  1B32  00A2               	movwf	___lwmod@dividend
 21645  1B33  3198  2069  319B   	fcall	___lwmod
 21646  1B36  0020               	movlb	0	; select bank0
 21647  1B37  0820               	movf	?___lwmod,w
 21648  1B38  0709               	addwf	9,w
 21649  1B39  3EBC               	addlw	(low (_roundabout_leds| (0+512)))& (0+255)
 21650  1B3A  0086               	movwf	6
 21651  1B3B  3002               	movlw	2	; select bank5/6
 21652  1B3C  0087               	movwf	7
 21653  1B3D  3F40               	moviw [0]fsr1
 21654  1B3E  00B4               	movwf	led_roundabout@leds
 21655  1B3F  3F41               	moviw [1]fsr1
 21656  1B40  00B5               	movwf	led_roundabout@leds+1
 21657                           
 21658                           ;main.c: 160: size = sizeof(roundabout_leds_inverse) / sizeof(roundabout_leds_inverse[0]
      +                          );
 21659  1B41  300E               	movlw	14
 21660  1B42  00B6               	movwf	led_roundabout@size
 21661  1B43  3000               	movlw	0
 21662  1B44  00B7               	movwf	led_roundabout@size+1
 21663                           
 21664                           ;main.c: 161: leds |= roundabout_leds_inverse[counter % size];
 21665  1B45  0837               	movf	led_roundabout@size+1,w
 21666  1B46  00A1               	movwf	___lwmod@divisor+1
 21667  1B47  0836               	movf	led_roundabout@size,w
 21668  1B48  00A0               	movwf	___lwmod@divisor
 21669  1B49  0831               	movf	led_roundabout@counter+1,w
 21670  1B4A  00A3               	movwf	___lwmod@dividend+1
 21671  1B4B  0830               	movf	led_roundabout@counter,w
 21672  1B4C  00A2               	movwf	___lwmod@dividend
 21673  1B4D  3198  2069  319B   	fcall	___lwmod
 21674  1B50  0020               	movlb	0	; select bank0
 21675  1B51  0820               	movf	?___lwmod,w
 21676  1B52  0709               	addwf	9,w
 21677  1B53  3E3C               	addlw	(low (_roundabout_leds_inverse| (0+768)))& (0+255)
 21678  1B54  0086               	movwf	6
 21679  1B55  3003               	movlw	3	; select bank6/7
 21680  1B56  0087               	movwf	7
 21681  1B57  3F40               	moviw [0]fsr1
 21682  1B58  00B2               	movwf	??_led_roundabout
 21683  1B59  3F41               	moviw [1]fsr1
 21684  1B5A  00B3               	movwf	??_led_roundabout+1
 21685  1B5B  0832               	movf	??_led_roundabout,w
 21686  1B5C  04B4               	iorwf	led_roundabout@leds,f
 21687  1B5D  0833               	movf	??_led_roundabout+1,w
 21688  1B5E  04B5               	iorwf	led_roundabout@leds+1,f
 21689                           
 21690                           ;main.c: 163: nullifyBadge_userLedsSet(&badge_inst, leds);
 21691  1B5F  0835               	movf	led_roundabout@leds+1,w
 21692  1B60  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21693  1B61  0834               	movf	led_roundabout@leds,w
 21694  1B62  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21695  1B63  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21696  1B64  31A5  2581         	fcall	_nullifyBadge_userLedsSet
 21697  1B66  0008               	return
 21698  1B67                     __end_of_led_roundabout:	
 21699                           
 21700                           	psect	text44
 21701  1C33                     __ptext44:	
 21702 ;; *************** function _led_rand *****************
 21703 ;; Defined at:
 21704 ;;		line 176 in file "main.c"
 21705 ;; Parameters:    Size  Location     Type
 21706 ;;		None
 21707 ;; Auto vars:     Size  Location     Type
 21708 ;;  spark           2   27[BANK0 ] unsigned int 
 21709 ;; Return value:  Size  Location     Type
 21710 ;;                  1    wreg      void 
 21711 ;; Registers used:
 21712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21713 ;; Tracked objects:
 21714 ;;		On entry : 0/0
 21715 ;;		On exit  : 0/0
 21716 ;;		Unchanged: 0/0
 21717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21719 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21720 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21721 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21722 ;;Total ram usage:       10 bytes
 21723 ;; Hardware stack levels used:    1
 21724 ;; Hardware stack levels required when called:    9
 21725 ;; This function calls:
 21726 ;;		___almod
 21727 ;;		_nullifyBadge_userLedsSet
 21728 ;;		_rand
 21729 ;; This function is called by:
 21730 ;;		_flashy_Main
 21731 ;; This function uses a non-reentrant model
 21732 ;;
 21733                           
 21734                           
 21735                           ;psect for function _led_rand
 21736  1C33                     _led_rand:	
 21737                           
 21738                           ;main.c: 178: u16 spark = rand() % 65535;
 21739                           
 21740                           ;incstack = 0
 21741                           ; Regs used in _led_rand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21742  1C33  3000               	movlw	0
 21743  1C34  0020               	movlb	0	; select bank0
 21744  1C35  00AE               	movwf	___almod@divisor+3
 21745  1C36  3000               	movlw	0
 21746  1C37  00AD               	movwf	___almod@divisor+2
 21747  1C38  30FF               	movlw	255
 21748  1C39  00AC               	movwf	___almod@divisor+1
 21749  1C3A  30FF               	movlw	255
 21750  1C3B  00AB               	movwf	___almod@divisor
 21751  1C3C  319B  23A9  319C   	fcall	_rand
 21752  1C3F  0020               	movlb	0	; select bank0
 21753  1C40  0824               	movf	?_rand,w
 21754  1C41  00AF               	movwf	___almod@dividend
 21755  1C42  0825               	movf	?_rand+1,w
 21756  1C43  00B0               	movwf	___almod@dividend+1
 21757  1C44  0D89               	rlf	9,f
 21758  1C45  3B89               	subwfb	9,f
 21759  1C46  0989               	comf	9,f
 21760  1C47  00B1               	movwf	___almod@dividend+2
 21761  1C48  00B2               	movwf	___almod@dividend+3
 21762  1C49  3192  226F  319C   	fcall	___almod
 21763  1C4C  0020               	movlb	0	; select bank0
 21764  1C4D  082C               	movf	?___almod+1,w
 21765  1C4E  00BC               	movwf	led_rand@spark+1
 21766  1C4F  082B               	movf	?___almod,w
 21767  1C50  00BB               	movwf	led_rand@spark
 21768                           
 21769                           ;main.c: 179: if ( (spark | 64511) == 65535 ){
 21770  1C51  30FF               	movlw	255
 21771  1C52  00B3               	movwf	??_led_rand
 21772  1C53  30FB               	movlw	251
 21773  1C54  00B4               	movwf	??_led_rand+1
 21774  1C55  3000               	movlw	0
 21775  1C56  00B5               	movwf	??_led_rand+2
 21776  1C57  3000               	movlw	0
 21777  1C58  00B6               	movwf	??_led_rand+3
 21778  1C59  083B               	movf	led_rand@spark,w
 21779  1C5A  00B7               	movwf	??_led_rand+4
 21780  1C5B  083C               	movf	led_rand@spark+1,w
 21781  1C5C  00B8               	movwf	??_led_rand+5
 21782  1C5D  01B9               	clrf	??_led_rand+6
 21783  1C5E  01BA               	clrf	??_led_rand+7
 21784  1C5F  0837               	movf	??_led_rand+4,w
 21785  1C60  04B3               	iorwf	??_led_rand,f
 21786  1C61  0838               	movf	??_led_rand+5,w
 21787  1C62  04B4               	iorwf	??_led_rand+1,f
 21788  1C63  0839               	movf	??_led_rand+6,w
 21789  1C64  04B5               	iorwf	??_led_rand+2,f
 21790  1C65  083A               	movf	??_led_rand+7,w
 21791  1C66  04B6               	iorwf	??_led_rand+3,f
 21792  1C67  0A33               	incf	??_led_rand,w
 21793  1C68  1D03               	skipz
 21794  1C69  2C73               	goto	l6821
 21795  1C6A  0A34               	incf	??_led_rand+1,w
 21796  1C6B  0435               	iorwf	??_led_rand+2,w
 21797  1C6C  0436               	iorwf	??_led_rand+3,w
 21798  1C6D  1D03               	btfss	3,2
 21799  1C6E  2C73               	goto	l6821
 21800                           
 21801                           ;main.c: 180: spark ^= 1024 ;
 21802  1C6F  3000               	movlw	0
 21803  1C70  06BB               	xorwf	led_rand@spark,f
 21804  1C71  3004               	movlw	4
 21805  1C72  06BC               	xorwf	led_rand@spark+1,f
 21806  1C73                     l6821:	
 21807                           
 21808                           ;main.c: 181: }
 21809                           ;main.c: 182: nullifyBadge_userLedsSet(&badge_inst,spark);
 21810  1C73  083C               	movf	led_rand@spark+1,w
 21811  1C74  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21812  1C75  083B               	movf	led_rand@spark,w
 21813  1C76  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21814  1C77  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21815  1C78  31A5  2581         	fcall	_nullifyBadge_userLedsSet
 21816  1C7A  0008               	return
 21817  1C7B                     __end_of_led_rand:	
 21818                           
 21819                           	psect	text45
 21820  1BA9                     __ptext45:	
 21821 ;; *************** function _rand *****************
 21822 ;; Defined at:
 21823 ;;		line 12 in file "/Applications/microchip/xc8/v1.42/sources/common/rand.c"
 21824 ;; Parameters:    Size  Location     Type
 21825 ;;		None
 21826 ;; Auto vars:     Size  Location     Type
 21827 ;;		None
 21828 ;; Return value:  Size  Location     Type
 21829 ;;                  2    4[BANK0 ] int 
 21830 ;; Registers used:
 21831 ;;		wreg, status,2, status,0, pclath, cstack
 21832 ;; Tracked objects:
 21833 ;;		On entry : 0/0
 21834 ;;		On exit  : 0/0
 21835 ;;		Unchanged: 0/0
 21836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21837 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21839 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21840 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21841 ;;Total ram usage:        7 bytes
 21842 ;; Hardware stack levels used:    1
 21843 ;; Hardware stack levels required when called:    5
 21844 ;; This function calls:
 21845 ;;		___lmul
 21846 ;; This function is called by:
 21847 ;;		_led_rand
 21848 ;; This function uses a non-reentrant model
 21849 ;;
 21850                           
 21851                           
 21852                           ;psect for function _rand
 21853  1BA9                     _rand:	
 21854                           
 21855                           ;incstack = 0
 21856                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
 21857  1BA9  0021               	movlb	1	; select bank1
 21858  1BAA  0866               	movf	(_randx+3)^(0+128),w
 21859  1BAB  00F4               	movwf	___lmul@multiplier+3
 21860  1BAC  0865               	movf	(_randx+2)^(0+128),w
 21861  1BAD  00F3               	movwf	___lmul@multiplier+2
 21862  1BAE  0864               	movf	(_randx+1)^(0+128),w
 21863  1BAF  00F2               	movwf	___lmul@multiplier+1
 21864  1BB0  0863               	movf	_randx^(0+128),w
 21865  1BB1  00F1               	movwf	___lmul@multiplier
 21866  1BB2  3041               	movlw	65
 21867  1BB3  00F8               	movwf	___lmul@multiplicand+3
 21868  1BB4  30C6               	movlw	198
 21869  1BB5  00F7               	movwf	___lmul@multiplicand+2
 21870  1BB6  304E               	movlw	78
 21871  1BB7  00F6               	movwf	___lmul@multiplicand+1
 21872  1BB8  306D               	movlw	109
 21873  1BB9  00F5               	movwf	___lmul@multiplicand
 21874  1BBA  3199  2125  319B   	fcall	___lmul
 21875  1BBD  0874               	movf	?___lmul+3,w
 21876  1BBE  0021               	movlb	1	; select bank1
 21877  1BBF  00E6               	movwf	(_randx+3)^(0+128)
 21878  1BC0  0873               	movf	?___lmul+2,w
 21879  1BC1  00E5               	movwf	(_randx+2)^(0+128)
 21880  1BC2  0872               	movf	?___lmul+1,w
 21881  1BC3  00E4               	movwf	(_randx+1)^(0+128)
 21882  1BC4  0871               	movf	?___lmul,w
 21883  1BC5  00E3               	movwf	_randx^(0+128)
 21884  1BC6  3039               	movlw	57
 21885  1BC7  07E3               	addwf	_randx^(0+128),f
 21886  1BC8  3030               	movlw	48
 21887  1BC9  3DE4               	addwfc	(_randx+1)^(0+128),f
 21888  1BCA  3000               	movlw	0
 21889  1BCB  3DE5               	addwfc	(_randx+2)^(0+128),f
 21890  1BCC  3000               	movlw	0
 21891  1BCD  3DE6               	addwfc	(_randx+3)^(0+128),f
 21892  1BCE  0863               	movf	_randx^(0+128),w
 21893  1BCF  0020               	movlb	0	; select bank0
 21894  1BD0  00A6               	movwf	??_rand
 21895  1BD1  0021               	movlb	1	; select bank1
 21896  1BD2  0864               	movf	(_randx+1)^(0+128),w
 21897  1BD3  0020               	movlb	0	; select bank0
 21898  1BD4  00A7               	movwf	??_rand+1
 21899  1BD5  0021               	movlb	1	; select bank1
 21900  1BD6  0865               	movf	(_randx+2)^(0+128),w
 21901  1BD7  0020               	movlb	0	; select bank0
 21902  1BD8  00A8               	movwf	??_rand+2
 21903  1BD9  0021               	movlb	1	; select bank1
 21904  1BDA  0866               	movf	(_randx+3)^(0+128),w
 21905  1BDB  0020               	movlb	0	; select bank0
 21906  1BDC  00A9               	movwf	??_rand+3
 21907  1BDD  3010               	movlw	16
 21908  1BDE  00AA               	movwf	??_rand+4
 21909  1BDF                     u3935:	
 21910  1BDF  37A9               	asrf	??_rand+3,f
 21911  1BE0  0CA8               	rrf	??_rand+2,f
 21912  1BE1  0CA7               	rrf	??_rand+1,f
 21913  1BE2  0CA6               	rrf	??_rand,f
 21914  1BE3  0BAA               	decfsz	??_rand+4,f
 21915  1BE4  2BDF               	goto	u3935
 21916  1BE5  30FF               	movlw	255
 21917  1BE6  0526               	andwf	??_rand,w
 21918  1BE7  00A4               	movwf	?_rand
 21919  1BE8  307F               	movlw	127
 21920  1BE9  0527               	andwf	??_rand+1,w
 21921  1BEA  00A5               	movwf	?_rand+1
 21922  1BEB  0008               	return
 21923  1BEC                     __end_of_rand:	
 21924                           
 21925                           	psect	text46
 21926  1925                     __ptext46:	
 21927 ;; *************** function ___lmul *****************
 21928 ;; Defined at:
 21929 ;;		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul32.c"
 21930 ;; Parameters:    Size  Location     Type
 21931 ;;  multiplier      4    1[COMMON] unsigned long 
 21932 ;;  multiplicand    4    5[COMMON] unsigned long 
 21933 ;; Auto vars:     Size  Location     Type
 21934 ;;  product         4    0[BANK0 ] unsigned long 
 21935 ;; Return value:  Size  Location     Type
 21936 ;;                  4    1[COMMON] unsigned long 
 21937 ;; Registers used:
 21938 ;;		wreg, status,2, status,0
 21939 ;; Tracked objects:
 21940 ;;		On entry : 0/0
 21941 ;;		On exit  : 0/0
 21942 ;;		Unchanged: 0/0
 21943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21944 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21945 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21947 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21948 ;;Total ram usage:       12 bytes
 21949 ;; Hardware stack levels used:    1
 21950 ;; Hardware stack levels required when called:    4
 21951 ;; This function calls:
 21952 ;;		Nothing
 21953 ;; This function is called by:
 21954 ;;		_rand
 21955 ;; This function uses a non-reentrant model
 21956 ;;
 21957                           
 21958                           
 21959                           ;psect for function ___lmul
 21960  1925                     ___lmul:	
 21961                           
 21962                           ;incstack = 0
 21963                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 21964  1925  3000               	movlw	0
 21965  1926  0020               	movlb	0	; select bank0
 21966  1927  00A3               	movwf	___lmul@product+3
 21967  1928  3000               	movlw	0
 21968  1929  00A2               	movwf	___lmul@product+2
 21969  192A  3000               	movlw	0
 21970  192B  00A1               	movwf	___lmul@product+1
 21971  192C  3000               	movlw	0
 21972  192D  00A0               	movwf	___lmul@product
 21973  192E                     l6585:	
 21974  192E  1C71               	btfss	___lmul@multiplier,0
 21975  192F  2939               	goto	l6589
 21976  1930  0875               	movf	___lmul@multiplicand,w
 21977  1931  0020               	movlb	0	; select bank0
 21978  1932  07A0               	addwf	___lmul@product,f
 21979  1933  0876               	movf	___lmul@multiplicand+1,w
 21980  1934  3DA1               	addwfc	___lmul@product+1,f
 21981  1935  0877               	movf	___lmul@multiplicand+2,w
 21982  1936  3DA2               	addwfc	___lmul@product+2,f
 21983  1937  0878               	movf	___lmul@multiplicand+3,w
 21984  1938  3DA3               	addwfc	___lmul@product+3,f
 21985  1939                     l6589:	
 21986  1939  3001               	movlw	1
 21987  193A                     u3705:	
 21988  193A  35F5               	lslf	___lmul@multiplicand,f
 21989  193B  0DF6               	rlf	___lmul@multiplicand+1,f
 21990  193C  0DF7               	rlf	___lmul@multiplicand+2,f
 21991  193D  0DF8               	rlf	___lmul@multiplicand+3,f
 21992  193E  0B89               	decfsz	9,f
 21993  193F  293A               	goto	u3705
 21994  1940  3001               	movlw	1
 21995  1941                     u3715:	
 21996  1941  36F4               	lsrf	___lmul@multiplier+3,f
 21997  1942  0CF3               	rrf	___lmul@multiplier+2,f
 21998  1943  0CF2               	rrf	___lmul@multiplier+1,f
 21999  1944  0CF1               	rrf	___lmul@multiplier,f
 22000  1945  0B89               	decfsz	9,f
 22001  1946  2941               	goto	u3715
 22002  1947  0874               	movf	___lmul@multiplier+3,w
 22003  1948  0473               	iorwf	___lmul@multiplier+2,w
 22004  1949  0472               	iorwf	___lmul@multiplier+1,w
 22005  194A  0471               	iorwf	___lmul@multiplier,w
 22006  194B  1D03               	skipz
 22007  194C  292E               	goto	l6585
 22008  194D  0020               	movlb	0	; select bank0
 22009  194E  0823               	movf	___lmul@product+3,w
 22010  194F  00F4               	movwf	?___lmul+3
 22011  1950  0822               	movf	___lmul@product+2,w
 22012  1951  00F3               	movwf	?___lmul+2
 22013  1952  0821               	movf	___lmul@product+1,w
 22014  1953  00F2               	movwf	?___lmul+1
 22015  1954  0820               	movf	___lmul@product,w
 22016  1955  00F1               	movwf	?___lmul
 22017  1956  0008               	return
 22018  1957                     __end_of___lmul:	
 22019                           
 22020                           	psect	text47
 22021  126F                     __ptext47:	
 22022 ;; *************** function ___almod *****************
 22023 ;; Defined at:
 22024 ;;		line 5 in file "/Applications/microchip/xc8/v1.42/sources/common/almod.c"
 22025 ;; Parameters:    Size  Location     Type
 22026 ;;  divisor         4   11[BANK0 ] long 
 22027 ;;  dividend        4   15[BANK0 ] long 
 22028 ;; Auto vars:     Size  Location     Type
 22029 ;;  sign            1   11[COMMON] unsigned char 
 22030 ;;  counter         1   10[COMMON] unsigned char 
 22031 ;; Return value:  Size  Location     Type
 22032 ;;                  4   11[BANK0 ] long 
 22033 ;; Registers used:
 22034 ;;		wreg, status,2, status,0
 22035 ;; Tracked objects:
 22036 ;;		On entry : 0/0
 22037 ;;		On exit  : 0/0
 22038 ;;		Unchanged: 0/0
 22039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22040 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22043 ;;      Totals:         3       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22044 ;;Total ram usage:       11 bytes
 22045 ;; Hardware stack levels used:    1
 22046 ;; Hardware stack levels required when called:    4
 22047 ;; This function calls:
 22048 ;;		Nothing
 22049 ;; This function is called by:
 22050 ;;		_led_rand
 22051 ;; This function uses a non-reentrant model
 22052 ;;
 22053                           
 22054                           
 22055                           ;psect for function ___almod
 22056  126F                     ___almod:	
 22057                           
 22058                           ;incstack = 0
 22059                           ; Regs used in ___almod: [wreg+status,2+status,0]
 22060  126F  01FB               	clrf	___almod@sign
 22061  1270  0020               	movlb	0	; select bank0
 22062  1271  1FB2               	btfss	___almod@dividend+3,7
 22063  1272  2A80               	goto	l1534
 22064  1273  09AF               	comf	___almod@dividend,f
 22065  1274  09B0               	comf	___almod@dividend+1,f
 22066  1275  09B1               	comf	___almod@dividend+2,f
 22067  1276  09B2               	comf	___almod@dividend+3,f
 22068  1277  0AAF               	incf	___almod@dividend,f
 22069  1278  1903               	skipnz
 22070  1279  0AB0               	incf	___almod@dividend+1,f
 22071  127A  1903               	skipnz
 22072  127B  0AB1               	incf	___almod@dividend+2,f
 22073  127C  1903               	skipnz
 22074  127D  0AB2               	incf	___almod@dividend+3,f
 22075  127E  01FB               	clrf	___almod@sign
 22076  127F  0AFB               	incf	___almod@sign,f
 22077  1280                     l1534:	
 22078  1280  1FAE               	btfss	___almod@divisor+3,7
 22079  1281  2A8D               	goto	l6771
 22080  1282  09AB               	comf	___almod@divisor,f
 22081  1283  09AC               	comf	___almod@divisor+1,f
 22082  1284  09AD               	comf	___almod@divisor+2,f
 22083  1285  09AE               	comf	___almod@divisor+3,f
 22084  1286  0AAB               	incf	___almod@divisor,f
 22085  1287  1903               	skipnz
 22086  1288  0AAC               	incf	___almod@divisor+1,f
 22087  1289  1903               	skipnz
 22088  128A  0AAD               	incf	___almod@divisor+2,f
 22089  128B  1903               	skipnz
 22090  128C  0AAE               	incf	___almod@divisor+3,f
 22091  128D                     l6771:	
 22092  128D  082E               	movf	___almod@divisor+3,w
 22093  128E  042D               	iorwf	___almod@divisor+2,w
 22094  128F  042C               	iorwf	___almod@divisor+1,w
 22095  1290  042B               	iorwf	___almod@divisor,w
 22096  1291  1903               	skipnz
 22097  1292  2AC6               	goto	l6787
 22098  1293  01FA               	clrf	___almod@counter
 22099  1294  0AFA               	incf	___almod@counter,f
 22100  1295                     l6777:	
 22101  1295  1BAE               	btfsc	___almod@divisor+3,7
 22102  1296  2AA3               	goto	l6779
 22103  1297  3001               	movlw	1
 22104  1298                     u4055:	
 22105  1298  35AB               	lslf	___almod@divisor,f
 22106  1299  0DAC               	rlf	___almod@divisor+1,f
 22107  129A  0DAD               	rlf	___almod@divisor+2,f
 22108  129B  0DAE               	rlf	___almod@divisor+3,f
 22109  129C  0B89               	decfsz	9,f
 22110  129D  2A98               	goto	u4055
 22111  129E  3001               	movlw	1
 22112  129F  00F9               	movwf	??___almod
 22113  12A0  0879               	movf	??___almod,w
 22114  12A1  07FA               	addwf	___almod@counter,f
 22115  12A2  2A95               	goto	l6777
 22116  12A3                     l6779:	
 22117  12A3  082E               	movf	___almod@divisor+3,w
 22118  12A4  0232               	subwf	___almod@dividend+3,w
 22119  12A5  1D03               	skipz
 22120  12A6  2AB1               	goto	u4075
 22121  12A7  082D               	movf	___almod@divisor+2,w
 22122  12A8  0231               	subwf	___almod@dividend+2,w
 22123  12A9  1D03               	skipz
 22124  12AA  2AB1               	goto	u4075
 22125  12AB  082C               	movf	___almod@divisor+1,w
 22126  12AC  0230               	subwf	___almod@dividend+1,w
 22127  12AD  1D03               	skipz
 22128  12AE  2AB1               	goto	u4075
 22129  12AF  082B               	movf	___almod@divisor,w
 22130  12B0  022F               	subwf	___almod@dividend,w
 22131  12B1                     u4075:	
 22132  12B1  1C03               	skipc
 22133  12B2  2ABB               	goto	l6783
 22134  12B3  082B               	movf	___almod@divisor,w
 22135  12B4  02AF               	subwf	___almod@dividend,f
 22136  12B5  082C               	movf	___almod@divisor+1,w
 22137  12B6  3BB0               	subwfb	___almod@dividend+1,f
 22138  12B7  082D               	movf	___almod@divisor+2,w
 22139  12B8  3BB1               	subwfb	___almod@dividend+2,f
 22140  12B9  082E               	movf	___almod@divisor+3,w
 22141  12BA  3BB2               	subwfb	___almod@dividend+3,f
 22142  12BB                     l6783:	
 22143  12BB  3001               	movlw	1
 22144  12BC                     u4085:	
 22145  12BC  36AE               	lsrf	___almod@divisor+3,f
 22146  12BD  0CAD               	rrf	___almod@divisor+2,f
 22147  12BE  0CAC               	rrf	___almod@divisor+1,f
 22148  12BF  0CAB               	rrf	___almod@divisor,f
 22149  12C0  0B89               	decfsz	9,f
 22150  12C1  2ABC               	goto	u4085
 22151  12C2  3001               	movlw	1
 22152  12C3  02FA               	subwf	___almod@counter,f
 22153  12C4  1D03               	btfss	3,2
 22154  12C5  2AA3               	goto	l6779
 22155  12C6                     l6787:	
 22156  12C6  087B               	movf	___almod@sign,w
 22157  12C7  1903               	btfsc	3,2
 22158  12C8  2AD4               	goto	l6791
 22159  12C9  09AF               	comf	___almod@dividend,f
 22160  12CA  09B0               	comf	___almod@dividend+1,f
 22161  12CB  09B1               	comf	___almod@dividend+2,f
 22162  12CC  09B2               	comf	___almod@dividend+3,f
 22163  12CD  0AAF               	incf	___almod@dividend,f
 22164  12CE  1903               	skipnz
 22165  12CF  0AB0               	incf	___almod@dividend+1,f
 22166  12D0  1903               	skipnz
 22167  12D1  0AB1               	incf	___almod@dividend+2,f
 22168  12D2  1903               	skipnz
 22169  12D3  0AB2               	incf	___almod@dividend+3,f
 22170  12D4                     l6791:	
 22171  12D4  0832               	movf	___almod@dividend+3,w
 22172  12D5  00AE               	movwf	?___almod+3
 22173  12D6  0831               	movf	___almod@dividend+2,w
 22174  12D7  00AD               	movwf	?___almod+2
 22175  12D8  0830               	movf	___almod@dividend+1,w
 22176  12D9  00AC               	movwf	?___almod+1
 22177  12DA  082F               	movf	___almod@dividend,w
 22178  12DB  00AB               	movwf	?___almod
 22179  12DC  0008               	return
 22180  12DD                     __end_of___almod:	
 22181                           
 22182                           	psect	text48
 22183  1AE5                     __ptext48:	
 22184 ;; *************** function _led_curtain *****************
 22185 ;; Defined at:
 22186 ;;		line 166 in file "main.c"
 22187 ;; Parameters:    Size  Location     Type
 22188 ;;  counter         2   16[BANK0 ] unsigned int 
 22189 ;; Auto vars:     Size  Location     Type
 22190 ;;  size            2   22[BANK0 ] unsigned int 
 22191 ;;  leds            2   20[BANK0 ] unsigned int 
 22192 ;; Return value:  Size  Location     Type
 22193 ;;                  1    wreg      void 
 22194 ;; Registers used:
 22195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22196 ;; Tracked objects:
 22197 ;;		On entry : 0/0
 22198 ;;		On exit  : 0/0
 22199 ;;		Unchanged: 0/0
 22200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22202 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22204 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22205 ;;Total ram usage:        8 bytes
 22206 ;; Hardware stack levels used:    1
 22207 ;; Hardware stack levels required when called:    9
 22208 ;; This function calls:
 22209 ;;		___lwmod
 22210 ;;		_nullifyBadge_userLedsSet
 22211 ;; This function is called by:
 22212 ;;		_flashy_Main
 22213 ;; This function uses a non-reentrant model
 22214 ;;
 22215                           
 22216                           
 22217                           ;psect for function _led_curtain
 22218  1AE5                     _led_curtain:	
 22219                           
 22220                           ;main.c: 167: u16 size = sizeof(curtain_leds) / sizeof(curtain_leds[0]);
 22221                           
 22222                           ;incstack = 0
 22223                           ; Regs used in _led_curtain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22224  1AE5  300E               	movlw	14
 22225  1AE6  0020               	movlb	0	; select bank0
 22226  1AE7  00B6               	movwf	led_curtain@size
 22227  1AE8  3000               	movlw	0
 22228  1AE9  00B7               	movwf	led_curtain@size+1
 22229                           
 22230                           ;main.c: 168: u16 leds = curtain_leds[counter % size];
 22231  1AEA  0837               	movf	led_curtain@size+1,w
 22232  1AEB  00A1               	movwf	___lwmod@divisor+1
 22233  1AEC  0836               	movf	led_curtain@size,w
 22234  1AED  00A0               	movwf	___lwmod@divisor
 22235  1AEE  0831               	movf	led_curtain@counter+1,w
 22236  1AEF  00A3               	movwf	___lwmod@dividend+1
 22237  1AF0  0830               	movf	led_curtain@counter,w
 22238  1AF1  00A2               	movwf	___lwmod@dividend
 22239  1AF2  3198  2069  319A   	fcall	___lwmod
 22240  1AF5  0020               	movlb	0	; select bank0
 22241  1AF6  0820               	movf	?___lwmod,w
 22242  1AF7  0709               	addwf	9,w
 22243  1AF8  3E20               	addlw	(low (_curtain_leds| (0+768)))& (0+255)
 22244  1AF9  0086               	movwf	6
 22245  1AFA  3003               	movlw	3	; select bank6/7
 22246  1AFB  0087               	movwf	7
 22247  1AFC  3F40               	moviw [0]fsr1
 22248  1AFD  00B4               	movwf	led_curtain@leds
 22249  1AFE  3F41               	moviw [1]fsr1
 22250  1AFF  00B5               	movwf	led_curtain@leds+1
 22251                           
 22252                           ;main.c: 170: size = sizeof(curtain_leds_inverse) / sizeof(curtain_leds_inverse[0]);
 22253  1B00  300E               	movlw	14
 22254  1B01  00B6               	movwf	led_curtain@size
 22255  1B02  3000               	movlw	0
 22256  1B03  00B7               	movwf	led_curtain@size+1
 22257                           
 22258                           ;main.c: 171: leds |= curtain_leds_inverse[counter % size];
 22259  1B04  0837               	movf	led_curtain@size+1,w
 22260  1B05  00A1               	movwf	___lwmod@divisor+1
 22261  1B06  0836               	movf	led_curtain@size,w
 22262  1B07  00A0               	movwf	___lwmod@divisor
 22263  1B08  0831               	movf	led_curtain@counter+1,w
 22264  1B09  00A3               	movwf	___lwmod@dividend+1
 22265  1B0A  0830               	movf	led_curtain@counter,w
 22266  1B0B  00A2               	movwf	___lwmod@dividend
 22267  1B0C  3198  2069  319A   	fcall	___lwmod
 22268  1B0F  0020               	movlb	0	; select bank0
 22269  1B10  0820               	movf	?___lwmod,w
 22270  1B11  0709               	addwf	9,w
 22271  1B12  3EBE               	addlw	(low (_curtain_leds_inverse| (0+768)))& (0+255)
 22272  1B13  0086               	movwf	6
 22273  1B14  3003               	movlw	3	; select bank7/8
 22274  1B15  0087               	movwf	7
 22275  1B16  3F40               	moviw [0]fsr1
 22276  1B17  00B2               	movwf	??_led_curtain
 22277  1B18  3F41               	moviw [1]fsr1
 22278  1B19  00B3               	movwf	??_led_curtain+1
 22279  1B1A  0832               	movf	??_led_curtain,w
 22280  1B1B  04B4               	iorwf	led_curtain@leds,f
 22281  1B1C  0833               	movf	??_led_curtain+1,w
 22282  1B1D  04B5               	iorwf	led_curtain@leds+1,f
 22283                           
 22284                           ;main.c: 173: nullifyBadge_userLedsSet(&badge_inst, leds);
 22285  1B1E  0835               	movf	led_curtain@leds+1,w
 22286  1B1F  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 22287  1B20  0834               	movf	led_curtain@leds,w
 22288  1B21  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 22289  1B22  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 22290  1B23  31A5  2581         	fcall	_nullifyBadge_userLedsSet
 22291  1B25  0008               	return
 22292  1B26                     __end_of_led_curtain:	
 22293                           
 22294                           	psect	text49
 22295  24F0                     __ptext49:	
 22296 ;; *************** function _led_circle *****************
 22297 ;; Defined at:
 22298 ;;		line 185 in file "main.c"
 22299 ;; Parameters:    Size  Location     Type
 22300 ;;  count           2   16[BANK0 ] unsigned int 
 22301 ;; Auto vars:     Size  Location     Type
 22302 ;;		None
 22303 ;; Return value:  Size  Location     Type
 22304 ;;                  1    wreg      void 
 22305 ;; Registers used:
 22306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22307 ;; Tracked objects:
 22308 ;;		On entry : 0/0
 22309 ;;		On exit  : 0/0
 22310 ;;		Unchanged: 0/0
 22311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22315 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22316 ;;Total ram usage:        2 bytes
 22317 ;; Hardware stack levels used:    1
 22318 ;; Hardware stack levels required when called:    9
 22319 ;; This function calls:
 22320 ;;		_nullifyBadge_userLedsSet
 22321 ;; This function is called by:
 22322 ;;		_flashy_Main
 22323 ;; This function uses a non-reentrant model
 22324 ;;
 22325                           
 22326                           
 22327                           ;psect for function _led_circle
 22328  24F0                     _led_circle:	
 22329                           
 22330                           ;main.c: 187: nullifyBadge_userLedsSet(&badge_inst,count);
 22331                           
 22332                           ;incstack = 0
 22333                           ; Regs used in _led_circle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22334  24F0  0020               	movlb	0	; select bank0
 22335  24F1  0831               	movf	led_circle@count+1,w
 22336  24F2  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 22337  24F3  0830               	movf	led_circle@count,w
 22338  24F4  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 22339  24F5  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 22340  24F6  31A5  2581         	fcall	_nullifyBadge_userLedsSet
 22341  24F8  0008               	return
 22342  24F9                     __end_of_led_circle:	
 22343                           
 22344                           	psect	text50
 22345  120A                     __ptext50:	
 22346 ;; *************** function _led_Parody *****************
 22347 ;; Defined at:
 22348 ;;		line 200 in file "main.c"
 22349 ;; Parameters:    Size  Location     Type
 22350 ;;  count           2   16[BANK0 ] unsigned int 
 22351 ;; Auto vars:     Size  Location     Type
 22352 ;;  size            2   22[BANK0 ] unsigned int 
 22353 ;;  leds            2   20[BANK0 ] unsigned int 
 22354 ;; Return value:  Size  Location     Type
 22355 ;;                  1    wreg      void 
 22356 ;; Registers used:
 22357 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22358 ;; Tracked objects:
 22359 ;;		On entry : 0/0
 22360 ;;		On exit  : 0/0
 22361 ;;		Unchanged: 0/0
 22362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22363 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22364 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22365 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22366 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22367 ;;Total ram usage:        8 bytes
 22368 ;; Hardware stack levels used:    1
 22369 ;; Hardware stack levels required when called:    9
 22370 ;; This function calls:
 22371 ;;		___lwmod
 22372 ;;		_nullifyBadge_userLedsSet
 22373 ;; This function is called by:
 22374 ;;		_flashy_Main
 22375 ;; This function uses a non-reentrant model
 22376 ;;
 22377                           
 22378                           
 22379                           ;psect for function _led_Parody
 22380  120A                     _led_Parody:	
 22381                           
 22382                           ;main.c: 201: u16 size;
 22383                           ;main.c: 202: u16 leds;
 22384                           ;main.c: 204: if (count % 30 == 0){
 22385                           
 22386                           ;incstack = 0
 22387                           ; Regs used in _led_Parody: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22388  120A  301E               	movlw	30
 22389  120B  0020               	movlb	0	; select bank0
 22390  120C  00A0               	movwf	___lwmod@divisor
 22391  120D  3000               	movlw	0
 22392  120E  00A1               	movwf	___lwmod@divisor+1
 22393  120F  0831               	movf	led_Parody@count+1,w
 22394  1210  00A3               	movwf	___lwmod@dividend+1
 22395  1211  0830               	movf	led_Parody@count,w
 22396  1212  00A2               	movwf	___lwmod@dividend
 22397  1213  3198  2069  3192   	fcall	___lwmod
 22398  1216  0020               	movlb	0	; select bank0
 22399  1217  0820               	movf	?___lwmod,w
 22400  1218  0421               	iorwf	?___lwmod+1,w
 22401  1219  1D03               	btfss	3,2
 22402  121A  2A20               	goto	l609
 22403                           
 22404                           ;main.c: 205: oddeven ^= 1 ;
 22405  121B  3001               	movlw	1
 22406  121C  0021               	movlb	1	; select bank1
 22407  121D  06B6               	xorwf	_oddeven^(0+128),f
 22408  121E  3000               	movlw	0
 22409  121F  06B7               	xorwf	(_oddeven+1)^(0+128),f
 22410  1220                     l609:	
 22411                           
 22412                           ;main.c: 206: }
 22413                           ;main.c: 208: if(count %2 == oddeven){
 22414  1220  3001               	movlw	1
 22415  1221  0020               	movlb	0	; select bank0
 22416  1222  0530               	andwf	led_Parody@count,w
 22417  1223  00B2               	movwf	??_led_Parody
 22418  1224  3000               	movlw	0
 22419  1225  0531               	andwf	led_Parody@count+1,w
 22420  1226  00B3               	movwf	??_led_Parody+1
 22421  1227  0021               	movlb	1	; select bank1
 22422  1228  0837               	movf	(_oddeven+1)^(0+128),w
 22423  1229  0020               	movlb	0	; select bank0
 22424  122A  0633               	xorwf	??_led_Parody+1,w
 22425  122B  1D03               	skipz
 22426  122C  2A31               	goto	u4145
 22427  122D  0021               	movlb	1	; select bank1
 22428  122E  0836               	movf	_oddeven^(0+128),w
 22429  122F  0020               	movlb	0	; select bank0
 22430  1230  0632               	xorwf	??_led_Parody,w
 22431  1231                     u4145:	
 22432  1231  1D03               	skipz
 22433  1232  2A4D               	goto	l6839
 22434                           
 22435                           ;main.c: 210: size = sizeof(roundabout_leds) / sizeof(roundabout_leds[0]);
 22436  1233  300E               	movlw	14
 22437  1234  00B6               	movwf	led_Parody@size
 22438  1235  3000               	movlw	0
 22439  1236  00B7               	movwf	led_Parody@size+1
 22440                           
 22441                           ;main.c: 211: leds = roundabout_leds[count % size];
 22442  1237  0837               	movf	led_Parody@size+1,w
 22443  1238  00A1               	movwf	___lwmod@divisor+1
 22444  1239  0836               	movf	led_Parody@size,w
 22445  123A  00A0               	movwf	___lwmod@divisor
 22446  123B  0831               	movf	led_Parody@count+1,w
 22447  123C  00A3               	movwf	___lwmod@dividend+1
 22448  123D  0830               	movf	led_Parody@count,w
 22449  123E  00A2               	movwf	___lwmod@dividend
 22450  123F  3198  2069  3192   	fcall	___lwmod
 22451  1242  0020               	movlb	0	; select bank0
 22452  1243  0820               	movf	?___lwmod,w
 22453  1244  0709               	addwf	9,w
 22454  1245  3EBC               	addlw	(low (_roundabout_leds| (0+512)))& (0+255)
 22455  1246  0086               	movwf	6
 22456  1247  3002               	movlw	2	; select bank5/6
 22457  1248  0087               	movwf	7
 22458  1249  3F40               	moviw [0]fsr1
 22459  124A  00B4               	movwf	led_Parody@leds
 22460  124B  3F41               	moviw [1]fsr1
 22461  124C  2A66               	goto	L13
 22462  124D                     l6839:	
 22463                           ;main.c: 212: }
 22464                           
 22465                           
 22466                           ;main.c: 213: else{
 22467                           ;main.c: 214: size = sizeof(roundabout_leds_inverse) / sizeof(roundabout_leds_inverse[0]
      +                          );
 22468  124D  300E               	movlw	14
 22469  124E  00B6               	movwf	led_Parody@size
 22470  124F  3000               	movlw	0
 22471  1250  00B7               	movwf	led_Parody@size+1
 22472                           
 22473                           ;main.c: 215: leds = roundabout_leds_inverse[count % size];
 22474  1251  0837               	movf	led_Parody@size+1,w
 22475  1252  00A1               	movwf	___lwmod@divisor+1
 22476  1253  0836               	movf	led_Parody@size,w
 22477  1254  00A0               	movwf	___lwmod@divisor
 22478  1255  0831               	movf	led_Parody@count+1,w
 22479  1256  00A3               	movwf	___lwmod@dividend+1
 22480  1257  0830               	movf	led_Parody@count,w
 22481  1258  00A2               	movwf	___lwmod@dividend
 22482  1259  3198  2069  3192   	fcall	___lwmod
 22483  125C  0020               	movlb	0	; select bank0
 22484  125D  0820               	movf	?___lwmod,w
 22485  125E  0709               	addwf	9,w
 22486  125F  3E3C               	addlw	(low (_roundabout_leds_inverse| (0+768)))& (0+255)
 22487  1260  0086               	movwf	6
 22488  1261  3003               	movlw	3	; select bank6/7
 22489  1262  0087               	movwf	7
 22490  1263  3F40               	moviw [0]fsr1
 22491  1264  00B4               	movwf	led_Parody@leds
 22492  1265  3F41               	moviw [1]fsr1
 22493  1266                     L13:	
 22494  1266  00B5               	movwf	led_Parody@leds+1
 22495                           
 22496                           ;main.c: 216: }
 22497                           ;main.c: 217: nullifyBadge_userLedsSet(&badge_inst, leds);
 22498  1267  0835               	movf	led_Parody@leds+1,w
 22499  1268  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 22500  1269  0834               	movf	led_Parody@leds,w
 22501  126A  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 22502  126B  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 22503  126C  31A5  2581         	fcall	_nullifyBadge_userLedsSet
 22504  126E  0008               	return
 22505  126F                     __end_of_led_Parody:	
 22506                           
 22507                           	psect	text51
 22508  2581                     __ptext51:	
 22509 ;; *************** function _nullifyBadge_userLedsSet *****************
 22510 ;; Defined at:
 22511 ;;		line 164 in file "nullifyBadge.c"
 22512 ;; Parameters:    Size  Location     Type
 22513 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 22514 ;;		 -> badge_inst(18), 
 22515 ;;  userLedData     2   13[BANK0 ] unsigned int 
 22516 ;; Auto vars:     Size  Location     Type
 22517 ;;  badge           1   15[BANK0 ] PTR struct t_nullifyBadg
 22518 ;;		 -> badge_inst(18), 
 22519 ;; Return value:  Size  Location     Type
 22520 ;;                  1    wreg      void 
 22521 ;; Registers used:
 22522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22523 ;; Tracked objects:
 22524 ;;		On entry : 0/0
 22525 ;;		On exit  : 0/0
 22526 ;;		Unchanged: 0/0
 22527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22528 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22531 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22532 ;;Total ram usage:        3 bytes
 22533 ;; Hardware stack levels used:    1
 22534 ;; Hardware stack levels required when called:    8
 22535 ;; This function calls:
 22536 ;;		_displayL2_SetUserLeds
 22537 ;; This function is called by:
 22538 ;;		_led_roundabout
 22539 ;;		_led_curtain
 22540 ;;		_led_rand
 22541 ;;		_led_circle
 22542 ;;		_let_alternate
 22543 ;;		_led_Parody
 22544 ;;		_menu_display_option
 22545 ;;		_flashy_Main
 22546 ;;		_locked_Main
 22547 ;; This function uses a non-reentrant model
 22548 ;;
 22549                           
 22550                           
 22551                           ;psect for function _nullifyBadge_userLedsSet
 22552  2581                     _nullifyBadge_userLedsSet:	
 22553                           
 22554                           ;incstack = 0
 22555                           ; Regs used in _nullifyBadge_userLedsSet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 22556                           ;nullifyBadge_userLedsSet@badge stored from wreg
 22557  2581  0020               	movlb	0	; select bank0
 22558  2582  00AF               	movwf	nullifyBadge_userLedsSet@badge
 22559                           
 22560                           ;nullifyBadge.c: 165: if (badge_locked) {
 22561  2583  087C               	movf	_badge_locked,w
 22562  2584  1D03               	btfss	3,2
 22563                           
 22564                           ;nullifyBadge.c: 166: userLedData |= 1024;
 22565  2585  152E               	bsf	nullifyBadge_userLedsSet@userLedData+1,2
 22566                           
 22567                           ;nullifyBadge.c: 167: }
 22568                           ;nullifyBadge.c: 168: displayL2_SetUserLeds(&badge->display, userLedData);
 22569  2586  082E               	movf	nullifyBadge_userLedsSet@userLedData+1,w
 22570  2587  00AC               	movwf	displayL2_SetUserLeds@userLedData+1
 22571  2588  082D               	movf	nullifyBadge_userLedsSet@userLedData,w
 22572  2589  00AB               	movwf	displayL2_SetUserLeds@userLedData
 22573  258A  082F               	movf	nullifyBadge_userLedsSet@badge,w
 22574  258B  31A7  277E         	fcall	_displayL2_SetUserLeds
 22575  258D  0008               	return
 22576  258E                     __end_of_nullifyBadge_userLedsSet:	
 22577                           
 22578                           	psect	text52
 22579  277E                     __ptext52:	
 22580 ;; *************** function _displayL2_SetUserLeds *****************
 22581 ;; Defined at:
 22582 ;;		line 88 in file "nullifyBadge_displayL2.c"
 22583 ;; Parameters:    Size  Location     Type
 22584 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22585 ;;		 -> badge_inst(18), 
 22586 ;;  userLedData     2   11[BANK0 ] unsigned int 
 22587 ;; Auto vars:     Size  Location     Type
 22588 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 22589 ;;		 -> badge_inst(18), 
 22590 ;; Return value:  Size  Location     Type
 22591 ;;                  1    wreg      void 
 22592 ;; Registers used:
 22593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22594 ;; Tracked objects:
 22595 ;;		On entry : 0/0
 22596 ;;		On exit  : 0/0
 22597 ;;		Unchanged: 0/0
 22598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22599 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22602 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22603 ;;Total ram usage:        3 bytes
 22604 ;; Hardware stack levels used:    1
 22605 ;; Hardware stack levels required when called:    7
 22606 ;; This function calls:
 22607 ;;		_displayL1_SetUserLed
 22608 ;;		_displayL1_Update
 22609 ;; This function is called by:
 22610 ;;		_nullifyBadge_userLedsSet
 22611 ;;		_nullifyBadge_userLedsSetForce
 22612 ;; This function uses a non-reentrant model
 22613 ;;
 22614                           
 22615                           
 22616                           ;psect for function _displayL2_SetUserLeds
 22617  277E                     _displayL2_SetUserLeds:	
 22618                           
 22619                           ;incstack = 0
 22620                           ; Regs used in _displayL2_SetUserLeds: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22621                           ;displayL2_SetUserLeds@display stored from wreg
 22622  277E  00FB               	movwf	displayL2_SetUserLeds@display
 22623                           
 22624                           ;nullifyBadge_displayL2.c: 89: display->ledVect = userLedData;
 22625  277F  087B               	movf	displayL2_SetUserLeds@display,w
 22626  2780  3E05               	addlw	5
 22627  2781  0086               	movwf	6
 22628  2782  3001               	movlw	1	; select bank2/3
 22629  2783  0087               	movwf	7
 22630  2784  0020               	movlb	0	; select bank0
 22631  2785  082B               	movf	displayL2_SetUserLeds@userLedData,w
 22632  2786  3FC0               	movwi [0]fsr1
 22633  2787  082C               	movf	displayL2_SetUserLeds@userLedData+1,w
 22634  2788  3FC1               	movwi [1]fsr1
 22635                           
 22636                           ;nullifyBadge_displayL2.c: 90: displayL1_SetUserLed(&display->display_l1, display->ledVe
      +                          ct);
 22637  2789  087B               	movf	displayL2_SetUserLeds@display,w
 22638  278A  3E05               	addlw	5
 22639  278B  0086               	movwf	6
 22640  278C  3001               	movlw	1	; select bank2/3
 22641  278D  0087               	movwf	7
 22642  278E  3F40               	moviw [0]fsr1
 22643  278F  00F1               	movwf	displayL1_SetUserLed@userLedVect
 22644  2790  3F41               	moviw [1]fsr1
 22645  2791  00F2               	movwf	displayL1_SetUserLed@userLedVect+1
 22646  2792  087B               	movf	displayL2_SetUserLeds@display,w
 22647  2793  3E07               	addlw	7
 22648  2794  31A6  2626  31A7   	fcall	_displayL1_SetUserLed
 22649                           
 22650                           ;nullifyBadge_displayL2.c: 91: displayL1_Update(&display->display_l1);
 22651  2797  087B               	movf	displayL2_SetUserLeds@display,w
 22652  2798  3E07               	addlw	7
 22653  2799  31A6  2604         	fcall	_displayL1_Update
 22654  279B  0008               	return
 22655  279C                     __end_of_displayL2_SetUserLeds:	
 22656                           
 22657                           	psect	text53
 22658  2626                     __ptext53:	
 22659 ;; *************** function _displayL1_SetUserLed *****************
 22660 ;; Defined at:
 22661 ;;		line 71 in file "nullifyBadge_displayL1.c"
 22662 ;; Parameters:    Size  Location     Type
 22663 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22664 ;;		 -> badge_inst(18), 
 22665 ;;  userLedVect     2    1[COMMON] unsigned int 
 22666 ;; Auto vars:     Size  Location     Type
 22667 ;;  display         1    4[COMMON] PTR struct t_nullifyDisp
 22668 ;;		 -> badge_inst(18), 
 22669 ;; Return value:  Size  Location     Type
 22670 ;;                  1    wreg      void 
 22671 ;; Registers used:
 22672 ;;		wreg, fsr1l, fsr1h, status,2
 22673 ;; Tracked objects:
 22674 ;;		On entry : 0/0
 22675 ;;		On exit  : 0/0
 22676 ;;		Unchanged: 0/0
 22677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22681 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22682 ;;Total ram usage:        4 bytes
 22683 ;; Hardware stack levels used:    1
 22684 ;; Hardware stack levels required when called:    4
 22685 ;; This function calls:
 22686 ;;		Nothing
 22687 ;; This function is called by:
 22688 ;;		_displayL2_SetUserLeds
 22689 ;;		_displayL2_ClrUserLeds
 22690 ;; This function uses a non-reentrant model
 22691 ;;
 22692                           
 22693                           
 22694                           ;psect for function _displayL1_SetUserLed
 22695  2626                     _displayL1_SetUserLed:	
 22696                           
 22697                           ;incstack = 0
 22698                           ; Regs used in _displayL1_SetUserLed: [wreg+fsr1l+fsr1h+status,2]
 22699                           ;displayL1_SetUserLed@display stored from wreg
 22700  2626  00F4               	movwf	displayL1_SetUserLed@display
 22701                           
 22702                           ;nullifyBadge_displayL1.c: 73: display->displayVect[0] = (u8) (userLedVect >> 8);
 22703  2627  0872               	movf	displayL1_SetUserLed@userLedVect+1,w
 22704  2628  00F3               	movwf	??_displayL1_SetUserLed
 22705  2629  0874               	movf	displayL1_SetUserLed@display,w
 22706  262A  0086               	movwf	6
 22707  262B  3001               	movlw	1	; select bank2/3
 22708  262C  0087               	movwf	7
 22709  262D  0873               	movf	??_displayL1_SetUserLed,w
 22710  262E  0081               	movwf	1
 22711                           
 22712                           ;nullifyBadge_displayL1.c: 74: display->displayVect[1] = (u8) (userLedVect & 0xFF);
 22713  262F  0871               	movf	displayL1_SetUserLed@userLedVect,w
 22714  2630  00F3               	movwf	??_displayL1_SetUserLed
 22715  2631  0A74               	incf	displayL1_SetUserLed@display,w
 22716  2632  0086               	movwf	6
 22717  2633  3001               	movlw	1	; select bank2/3
 22718  2634  0087               	movwf	7
 22719  2635  0873               	movf	??_displayL1_SetUserLed,w
 22720  2636  0081               	movwf	1
 22721  2637  0008               	return
 22722  2638                     __end_of_displayL1_SetUserLed:	
 22723                           
 22724                           	psect	text54
 22725  1E7A                     __ptext54:	
 22726 ;; *************** function _flashy_display_option *****************
 22727 ;; Defined at:
 22728 ;;		line 89 in file "flashy_task.c"
 22729 ;; Parameters:    Size  Location     Type
 22730 ;;  data            2   44[BANK0 ] PTR struct t_flashy_task
 22731 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 22732 ;;		 -> flashy_TaskData(30), NULL(0), 
 22733 ;; Auto vars:     Size  Location     Type
 22734 ;;		None
 22735 ;; Return value:  Size  Location     Type
 22736 ;;                  1    wreg      void 
 22737 ;; Registers used:
 22738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22739 ;; Tracked objects:
 22740 ;;		On entry : 0/0
 22741 ;;		On exit  : 0/0
 22742 ;;		Unchanged: 0/0
 22743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22747 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22748 ;;Total ram usage:        2 bytes
 22749 ;; Hardware stack levels used:    1
 22750 ;; Hardware stack levels required when called:   10
 22751 ;; This function calls:
 22752 ;;		_marquee
 22753 ;;		_marquee_speedy
 22754 ;;		_nullifyBadge_segDisplayForceUpdate
 22755 ;;		_nullifyBadge_segDisplayPutStr
 22756 ;; This function is called by:
 22757 ;;		_flashy_Main
 22758 ;; This function uses a non-reentrant model
 22759 ;;
 22760                           
 22761                           
 22762                           ;psect for function _flashy_display_option
 22763  1E7A                     _flashy_display_option:	
 22764                           
 22765                           ;flashy_task.c: 90: if (flashy_option_idx == 0){
 22766                           
 22767                           ;incstack = 0
 22768                           ; Regs used in _flashy_display_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22769  1E7A  0021               	movlb	1	; select bank1
 22770  1E7B  0826               	movf	_flashy_option_idx^(0+128),w
 22771  1E7C  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 22772  1E7D  1D03               	btfss	3,2
 22773  1E7E  2E9A               	goto	l6923
 22774                           
 22775                           ;flashy_task.c: 91: nullifyBadge_segDisplayPutStr(data->badge, flashy_option[flashy_opti
      +                          on_idx]);
 22776  1E7F  3526               	lslf	_flashy_option_idx^(0+128),w
 22777  1E80  3EA0               	addlw	(low (_flashy_option| (0+512)))& (0+255)
 22778  1E81  0086               	movwf	6
 22779  1E82  3002               	movlw	2	; select bank5/6
 22780  1E83  0087               	movwf	7
 22781  1E84  3F40               	moviw [0]fsr1
 22782  1E85  0020               	movlb	0	; select bank0
 22783  1E86  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 22784  1E87  3F41               	moviw [1]fsr1
 22785  1E88  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 22786  1E89  084C               	movf	flashy_display_option@data,w
 22787  1E8A  0086               	movwf	6
 22788  1E8B  084D               	movf	flashy_display_option@data+1,w
 22789  1E8C  0087               	movwf	7
 22790  1E8D  0801               	movf	1,w
 22791  1E8E  3192  2200  319E   	fcall	_nullifyBadge_segDisplayPutStr
 22792                           
 22793                           ;flashy_task.c: 92: nullifyBadge_segDisplayForceUpdate(data->badge);
 22794  1E91  0020               	movlb	0	; select bank0
 22795  1E92  084C               	movf	flashy_display_option@data,w
 22796  1E93  0086               	movwf	6
 22797  1E94  084D               	movf	flashy_display_option@data+1,w
 22798  1E95  0087               	movwf	7
 22799  1E96  0801               	movf	1,w
 22800  1E97  31A4  24C5         	fcall	_nullifyBadge_segDisplayForceUpdate
 22801                           
 22802                           ;flashy_task.c: 93: }
 22803  1E99  0008               	return
 22804  1E9A                     l6923:	
 22805                           
 22806                           ;flashy_task.c: 94: else {
 22807                           ;flashy_task.c: 95: if (data->display_state==FLASHY_STATE_DISPLAY ){
 22808  1E9A  0020               	movlb	0	; select bank0
 22809  1E9B  084C               	movf	flashy_display_option@data,w
 22810  1E9C  0086               	movwf	6
 22811  1E9D  084D               	movf	flashy_display_option@data+1,w
 22812  1E9E  0087               	movwf	7
 22813  1E9F  3146               	addfsr 1,6
 22814  1EA0  0801               	movf	1,w
 22815  1EA1  1D03               	btfss	3,2
 22816  1EA2  2EC2               	goto	l6927
 22817                           
 22818                           ;flashy_task.c: 97: marquee_speedy(flashy_option[flashy_option_idx], data->noholdCount, 
      +                          flashy_scroll_rate);
 22819  1EA3  0021               	movlb	1	; select bank1
 22820  1EA4  3526               	lslf	_flashy_option_idx^(0+128),w
 22821  1EA5  3EA0               	addlw	(low (_flashy_option| (0+512)))& (0+255)
 22822  1EA6  0086               	movwf	6
 22823  1EA7  3002               	movlw	2	; select bank5/6
 22824  1EA8  0087               	movwf	7
 22825  1EA9  3F40               	moviw [0]fsr1
 22826  1EAA  0020               	movlb	0	; select bank0
 22827  1EAB  00BA               	movwf	marquee_speedy@string
 22828  1EAC  3F41               	moviw [1]fsr1
 22829  1EAD  00BB               	movwf	marquee_speedy@string+1
 22830  1EAE  084C               	movf	flashy_display_option@data,w
 22831  1EAF  0086               	movwf	6
 22832  1EB0  084D               	movf	flashy_display_option@data+1,w
 22833  1EB1  0087               	movwf	7
 22834  1EB2  315C               	addfsr 1,28
 22835  1EB3  3F40               	moviw [0]fsr1
 22836  1EB4  00BC               	movwf	marquee_speedy@count
 22837  1EB5  3F41               	moviw [1]fsr1
 22838  1EB6  00BD               	movwf	marquee_speedy@count+1
 22839  1EB7  0021               	movlb	1	; select bank1
 22840  1EB8  082B               	movf	(_flashy_scroll_rate+1)^(0+128),w
 22841  1EB9  0020               	movlb	0	; select bank0
 22842  1EBA  00BF               	movwf	marquee_speedy@multiplier+1
 22843  1EBB  0021               	movlb	1	; select bank1
 22844  1EBC  082A               	movf	_flashy_scroll_rate^(0+128),w
 22845  1EBD  0020               	movlb	0	; select bank0
 22846  1EBE  00BE               	movwf	marquee_speedy@multiplier
 22847  1EBF  3192  22DD         	fcall	_marquee_speedy
 22848                           
 22849                           ;flashy_task.c: 98: }
 22850  1EC1  0008               	return
 22851  1EC2                     l6927:	
 22852                           
 22853                           ;flashy_task.c: 99: else{
 22854                           ;flashy_task.c: 100: marquee(flashy_option[flashy_option_idx], data->noholdCount);
 22855  1EC2  0021               	movlb	1	; select bank1
 22856  1EC3  3526               	lslf	_flashy_option_idx^(0+128),w
 22857  1EC4  3EA0               	addlw	(low (_flashy_option| (0+512)))& (0+255)
 22858  1EC5  0086               	movwf	6
 22859  1EC6  3002               	movlw	2	; select bank5/6
 22860  1EC7  0087               	movwf	7
 22861  1EC8  3F40               	moviw [0]fsr1
 22862  1EC9  0020               	movlb	0	; select bank0
 22863  1ECA  00BA               	movwf	marquee@string
 22864  1ECB  3F41               	moviw [1]fsr1
 22865  1ECC  00BB               	movwf	marquee@string+1
 22866  1ECD  084C               	movf	flashy_display_option@data,w
 22867  1ECE  0086               	movwf	6
 22868  1ECF  084D               	movf	flashy_display_option@data+1,w
 22869  1ED0  0087               	movwf	7
 22870  1ED1  315C               	addfsr 1,28
 22871  1ED2  3F40               	moviw [0]fsr1
 22872  1ED3  00BC               	movwf	marquee@count
 22873  1ED4  3F41               	moviw [1]fsr1
 22874  1ED5  00BD               	movwf	marquee@count+1
 22875  1ED6  3193  2350         	fcall	_marquee
 22876  1ED8  0008               	return
 22877  1ED9                     __end_of_flashy_display_option:	
 22878                           
 22879                           	psect	text55
 22880  12DD                     __ptext55:	
 22881 ;; *************** function _marquee_speedy *****************
 22882 ;; Defined at:
 22883 ;;		line 130 in file "main.c"
 22884 ;; Parameters:    Size  Location     Type
 22885 ;;  string          2   26[BANK0 ] PTR unsigned char 
 22886 ;;		 -> STR_23(43), STR_22(40), STR_21(27), STR_20(25), 
 22887 ;;		 -> STR_19(30), STR_18(35), STR_17(22), STR_16(26), 
 22888 ;;		 -> STR_15(21), STR_14(19), STR_13(6), STR_12(8), 
 22889 ;;		 -> STR_11(9), STR_10(5), 
 22890 ;;  count           2   28[BANK0 ] unsigned int 
 22891 ;;  multiplier      2   30[BANK0 ] unsigned int 
 22892 ;; Auto vars:     Size  Location     Type
 22893 ;;  j               2   42[BANK0 ] unsigned int 
 22894 ;;  display_stri    5   33[BANK0 ] unsigned char [5]
 22895 ;;  string_lengt    2   40[BANK0 ] unsigned int 
 22896 ;;  i               2   38[BANK0 ] unsigned int 
 22897 ;; Return value:  Size  Location     Type
 22898 ;;                  1    wreg      void 
 22899 ;; Registers used:
 22900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22901 ;; Tracked objects:
 22902 ;;		On entry : 0/0
 22903 ;;		On exit  : 0/0
 22904 ;;		Unchanged: 0/0
 22905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22906 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22907 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22909 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22910 ;;Total ram usage:       18 bytes
 22911 ;; Hardware stack levels used:    1
 22912 ;; Hardware stack levels required when called:    9
 22913 ;; This function calls:
 22914 ;;		___lwdiv
 22915 ;;		___lwmod
 22916 ;;		_nullifyBadge_segDisplayForceUpdate
 22917 ;;		_nullifyBadge_segDisplayPutStr
 22918 ;;		_strlen
 22919 ;; This function is called by:
 22920 ;;		_flashy_display_option
 22921 ;; This function uses a non-reentrant model
 22922 ;;
 22923                           
 22924                           
 22925                           ;psect for function _marquee_speedy
 22926  12DD                     _marquee_speedy:	
 22927                           
 22928                           ;main.c: 131: u16 string_length = strlen((const char *) string);
 22929                           
 22930                           ;incstack = 0
 22931                           ; Regs used in _marquee_speedy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22932  12DD  0020               	movlb	0	; select bank0
 22933  12DE  083B               	movf	marquee_speedy@string+1,w
 22934  12DF  00F2               	movwf	strlen@s+1
 22935  12E0  083A               	movf	marquee_speedy@string,w
 22936  12E1  00F1               	movwf	strlen@s
 22937  12E2  31A7  2760  3192   	fcall	_strlen
 22938  12E5  0872               	movf	?_strlen+1,w
 22939  12E6  0020               	movlb	0	; select bank0
 22940  12E7  00C9               	movwf	marquee_speedy@string_length+1
 22941  12E8  0871               	movf	?_strlen,w
 22942  12E9  00C8               	movwf	marquee_speedy@string_length
 22943                           
 22944                           ;main.c: 132: char display_string[] = { ' ', ' ', ' ', ' ', '\0' };
 22945  12EA  30DE               	movlw	low marquee_speedy@F14033
 22946  12EB  0086               	movwf	6
 22947  12EC  3000               	movlw	high marquee_speedy@F14033
 22948  12ED  0087               	movwf	7
 22949  12EE  3041               	movlw	low marquee_speedy@display_string
 22950  12EF  0084               	movwf	4
 22951  12F0  3000               	movlw	high marquee_speedy@display_string
 22952  12F1  0085               	movwf	5
 22953  12F2  3005               	movlw	5
 22954  12F3  00C0               	movwf	??_marquee_speedy
 22955  12F4                     u3860:	
 22956  12F4  0016               	moviw fsr1++
 22957  12F5  001A               	movwi fsr0++
 22958  12F6  0BC0               	decfsz	??_marquee_speedy,f
 22959  12F7  2AF4               	goto	u3860
 22960                           
 22961                           ;main.c: 133: u16 i = (count / multiplier) % string_length;
 22962  12F8  0849               	movf	marquee_speedy@string_length+1,w
 22963  12F9  00A1               	movwf	___lwmod@divisor+1
 22964  12FA  0848               	movf	marquee_speedy@string_length,w
 22965  12FB  00A0               	movwf	___lwmod@divisor
 22966  12FC  083F               	movf	marquee_speedy@multiplier+1,w
 22967  12FD  00F2               	movwf	___lwdiv@divisor+1
 22968  12FE  083E               	movf	marquee_speedy@multiplier,w
 22969  12FF  00F1               	movwf	___lwdiv@divisor
 22970  1300  083D               	movf	marquee_speedy@count+1,w
 22971  1301  00F4               	movwf	___lwdiv@dividend+1
 22972  1302  083C               	movf	marquee_speedy@count,w
 22973  1303  00F3               	movwf	___lwdiv@dividend
 22974  1304  3199  2189  3192   	fcall	___lwdiv
 22975  1307  0872               	movf	?___lwdiv+1,w
 22976  1308  0020               	movlb	0	; select bank0
 22977  1309  00A3               	movwf	___lwmod@dividend+1
 22978  130A  0871               	movf	?___lwdiv,w
 22979  130B  00A2               	movwf	___lwmod@dividend
 22980  130C  3198  2069  3192   	fcall	___lwmod
 22981  130F  0020               	movlb	0	; select bank0
 22982  1310  0821               	movf	?___lwmod+1,w
 22983  1311  00C7               	movwf	marquee_speedy@i+1
 22984  1312  0820               	movf	?___lwmod,w
 22985  1313  00C6               	movwf	marquee_speedy@i
 22986                           
 22987                           ;main.c: 135: for (u16 j=0; j < 4; j++){
 22988  1314  01CA               	clrf	marquee_speedy@j
 22989  1315  01CB               	clrf	marquee_speedy@j+1
 22990  1316  3000               	movlw	0
 22991  1317  024B               	subwf	marquee_speedy@j+1,w
 22992  1318  3004               	movlw	4
 22993  1319  1903               	skipnz
 22994  131A  024A               	subwf	marquee_speedy@j,w
 22995  131B  1803               	btfsc	3,0
 22996  131C  2B44               	goto	l6663
 22997  131D                     l6657:	
 22998                           
 22999                           ;main.c: 136: display_string[j] = string[(i + j) % string_length];
 23000  131D  0849               	movf	marquee_speedy@string_length+1,w
 23001  131E  00A1               	movwf	___lwmod@divisor+1
 23002  131F  0848               	movf	marquee_speedy@string_length,w
 23003  1320  00A0               	movwf	___lwmod@divisor
 23004  1321  084A               	movf	marquee_speedy@j,w
 23005  1322  0746               	addwf	marquee_speedy@i,w
 23006  1323  00A2               	movwf	___lwmod@dividend
 23007  1324  084B               	movf	marquee_speedy@j+1,w
 23008  1325  3D47               	addwfc	marquee_speedy@i+1,w
 23009  1326  00A3               	movwf	___lwmod@dividend+1
 23010  1327  3198  2069  3192   	fcall	___lwmod
 23011  132A  0020               	movlb	0	; select bank0
 23012  132B  083A               	movf	marquee_speedy@string,w
 23013  132C  0720               	addwf	?___lwmod,w
 23014  132D  0084               	movwf	4
 23015  132E  083B               	movf	marquee_speedy@string+1,w
 23016  132F  3D21               	addwfc	?___lwmod+1,w
 23017  1330  0085               	movwf	5
 23018  1331  0800               	movf	0,w	;code access
 23019  1332  00C0               	movwf	??_marquee_speedy
 23020  1333  084A               	movf	marquee_speedy@j,w
 23021  1334  3E41               	addlw	(low (marquee_speedy@display_string| 0))& (0+255)
 23022  1335  0086               	movwf	6
 23023  1336  0187               	clrf	7
 23024  1337  0840               	movf	??_marquee_speedy,w
 23025  1338  0081               	movwf	1
 23026  1339  3001               	movlw	1
 23027  133A  07CA               	addwf	marquee_speedy@j,f
 23028  133B  3000               	movlw	0
 23029  133C  3DCB               	addwfc	marquee_speedy@j+1,f
 23030  133D  3000               	movlw	0
 23031  133E  024B               	subwf	marquee_speedy@j+1,w
 23032  133F  3004               	movlw	4
 23033  1340  1903               	skipnz
 23034  1341  024A               	subwf	marquee_speedy@j,w
 23035  1342  1C03               	skipc
 23036  1343  2B1D               	goto	l6657
 23037  1344                     l6663:	
 23038                           
 23039                           ;main.c: 137: }
 23040                           ;main.c: 138: nullifyBadge_segDisplayPutStr(&badge_inst, display_string);
 23041  1344  3041               	movlw	low marquee_speedy@display_string
 23042  1345  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 23043  1346  3000               	movlw	high marquee_speedy@display_string
 23044  1347  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 23045  1348  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 23046  1349  3192  2200  3192   	fcall	_nullifyBadge_segDisplayPutStr
 23047                           
 23048                           ;main.c: 139: nullifyBadge_segDisplayForceUpdate(&badge_inst);
 23049  134C  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 23050  134D  31A4  24C5         	fcall	_nullifyBadge_segDisplayForceUpdate
 23051  134F  0008               	return
 23052  1350                     __end_of_marquee_speedy:	
 23053                           
 23054                           	psect	text56
 23055  1350                     __ptext56:	
 23056 ;; *************** function _marquee *****************
 23057 ;; Defined at:
 23058 ;;		line 143 in file "main.c"
 23059 ;; Parameters:    Size  Location     Type
 23060 ;;  string          2   26[BANK0 ] PTR unsigned char 
 23061 ;;		 -> STR_30(5), STR_29(5), STR_28(5), STR_27(11), 
 23062 ;;		 -> STR_26(13), STR_23(43), STR_22(40), STR_21(27), 
 23063 ;;		 -> STR_20(25), STR_19(30), STR_18(35), STR_17(22), 
 23064 ;;		 -> STR_16(26), STR_15(21), STR_14(19), STR_13(6), 
 23065 ;;		 -> STR_12(8), STR_11(9), STR_10(5), STR_9(18), 
 23066 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 23067 ;;  count           2   28[BANK0 ] unsigned int 
 23068 ;; Auto vars:     Size  Location     Type
 23069 ;;  j               2   42[BANK0 ] unsigned int 
 23070 ;;  display_stri    5   31[BANK0 ] unsigned char [5]
 23071 ;;  string_lengt    2   40[BANK0 ] unsigned int 
 23072 ;;  i               2   38[BANK0 ] unsigned int 
 23073 ;;  multiplier      2   36[BANK0 ] unsigned int 
 23074 ;; Return value:  Size  Location     Type
 23075 ;;                  1    wreg      void 
 23076 ;; Registers used:
 23077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23078 ;; Tracked objects:
 23079 ;;		On entry : 0/0
 23080 ;;		On exit  : 0/0
 23081 ;;		Unchanged: 0/0
 23082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23084 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23085 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23086 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23087 ;;Total ram usage:       18 bytes
 23088 ;; Hardware stack levels used:    1
 23089 ;; Hardware stack levels required when called:    9
 23090 ;; This function calls:
 23091 ;;		___lwdiv
 23092 ;;		___lwmod
 23093 ;;		_nullifyBadge_segDisplayForceUpdate
 23094 ;;		_nullifyBadge_segDisplayPutStr
 23095 ;;		_strlen
 23096 ;; This function is called by:
 23097 ;;		_menu_display_option
 23098 ;;		_flashy_display_option
 23099 ;;		_flashy_Main
 23100 ;;		_locked_Main
 23101 ;;		_slot_Main
 23102 ;; This function uses a non-reentrant model
 23103 ;;
 23104                           
 23105                           
 23106                           ;psect for function _marquee
 23107  1350                     _marquee:	
 23108                           
 23109                           ;main.c: 144: u16 multiplier = 50;
 23110                           
 23111                           ;incstack = 0
 23112                           ; Regs used in _marquee: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23113  1350  3032               	movlw	50
 23114  1351  0020               	movlb	0	; select bank0
 23115  1352  00C4               	movwf	marquee@multiplier
 23116  1353  3000               	movlw	0
 23117  1354  00C5               	movwf	marquee@multiplier+1
 23118                           
 23119                           ;main.c: 145: u16 string_length = strlen((const char *) string);
 23120  1355  083B               	movf	marquee@string+1,w
 23121  1356  00F2               	movwf	strlen@s+1
 23122  1357  083A               	movf	marquee@string,w
 23123  1358  00F1               	movwf	strlen@s
 23124  1359  31A7  2760  3193   	fcall	_strlen
 23125  135C  0872               	movf	?_strlen+1,w
 23126  135D  0020               	movlb	0	; select bank0
 23127  135E  00C9               	movwf	marquee@string_length+1
 23128  135F  0871               	movf	?_strlen,w
 23129  1360  00C8               	movwf	marquee@string_length
 23130                           
 23131                           ;main.c: 146: char display_string[] = { ' ', ' ', ' ', ' ', '\0' };
 23132  1361  3061               	movlw	low marquee@F14042
 23133  1362  0086               	movwf	6
 23134  1363  3001               	movlw	high marquee@F14042
 23135  1364  0087               	movwf	7
 23136  1365  303F               	movlw	low marquee@display_string
 23137  1366  0084               	movwf	4
 23138  1367  3000               	movlw	high marquee@display_string
 23139  1368  0085               	movwf	5
 23140  1369  3005               	movlw	5
 23141  136A  00BE               	movwf	??_marquee
 23142  136B                     u3890:	
 23143  136B  0016               	moviw fsr1++
 23144  136C  001A               	movwi fsr0++
 23145  136D  0BBE               	decfsz	??_marquee,f
 23146  136E  2B6B               	goto	u3890
 23147                           
 23148                           ;main.c: 147: u16 i = (count / multiplier) % string_length;
 23149  136F  0849               	movf	marquee@string_length+1,w
 23150  1370  00A1               	movwf	___lwmod@divisor+1
 23151  1371  0848               	movf	marquee@string_length,w
 23152  1372  00A0               	movwf	___lwmod@divisor
 23153  1373  0845               	movf	marquee@multiplier+1,w
 23154  1374  00F2               	movwf	___lwdiv@divisor+1
 23155  1375  0844               	movf	marquee@multiplier,w
 23156  1376  00F1               	movwf	___lwdiv@divisor
 23157  1377  083D               	movf	marquee@count+1,w
 23158  1378  00F4               	movwf	___lwdiv@dividend+1
 23159  1379  083C               	movf	marquee@count,w
 23160  137A  00F3               	movwf	___lwdiv@dividend
 23161  137B  3199  2189  3193   	fcall	___lwdiv
 23162  137E  0872               	movf	?___lwdiv+1,w
 23163  137F  0020               	movlb	0	; select bank0
 23164  1380  00A3               	movwf	___lwmod@dividend+1
 23165  1381  0871               	movf	?___lwdiv,w
 23166  1382  00A2               	movwf	___lwmod@dividend
 23167  1383  3198  2069  3193   	fcall	___lwmod
 23168  1386  0020               	movlb	0	; select bank0
 23169  1387  0821               	movf	?___lwmod+1,w
 23170  1388  00C7               	movwf	marquee@i+1
 23171  1389  0820               	movf	?___lwmod,w
 23172  138A  00C6               	movwf	marquee@i
 23173                           
 23174                           ;main.c: 149: for (u16 j=0; j < 4; j++){
 23175  138B  01CA               	clrf	marquee@j
 23176  138C  01CB               	clrf	marquee@j+1
 23177  138D  3000               	movlw	0
 23178  138E  024B               	subwf	marquee@j+1,w
 23179  138F  3004               	movlw	4
 23180  1390  1903               	skipnz
 23181  1391  024A               	subwf	marquee@j,w
 23182  1392  1803               	btfsc	3,0
 23183  1393  2BBB               	goto	l6687
 23184  1394                     l6681:	
 23185                           
 23186                           ;main.c: 150: display_string[j] = string[(i + j) % string_length];
 23187  1394  0849               	movf	marquee@string_length+1,w
 23188  1395  00A1               	movwf	___lwmod@divisor+1
 23189  1396  0848               	movf	marquee@string_length,w
 23190  1397  00A0               	movwf	___lwmod@divisor
 23191  1398  084A               	movf	marquee@j,w
 23192  1399  0746               	addwf	marquee@i,w
 23193  139A  00A2               	movwf	___lwmod@dividend
 23194  139B  084B               	movf	marquee@j+1,w
 23195  139C  3D47               	addwfc	marquee@i+1,w
 23196  139D  00A3               	movwf	___lwmod@dividend+1
 23197  139E  3198  2069  3193   	fcall	___lwmod
 23198  13A1  0020               	movlb	0	; select bank0
 23199  13A2  083A               	movf	marquee@string,w
 23200  13A3  0720               	addwf	?___lwmod,w
 23201  13A4  0084               	movwf	4
 23202  13A5  083B               	movf	marquee@string+1,w
 23203  13A6  3D21               	addwfc	?___lwmod+1,w
 23204  13A7  0085               	movwf	5
 23205  13A8  0800               	movf	0,w	;code access
 23206  13A9  00BE               	movwf	??_marquee
 23207  13AA  084A               	movf	marquee@j,w
 23208  13AB  3E3F               	addlw	(low (marquee@display_string| 0))& (0+255)
 23209  13AC  0086               	movwf	6
 23210  13AD  0187               	clrf	7
 23211  13AE  083E               	movf	??_marquee,w
 23212  13AF  0081               	movwf	1
 23213  13B0  3001               	movlw	1
 23214  13B1  07CA               	addwf	marquee@j,f
 23215  13B2  3000               	movlw	0
 23216  13B3  3DCB               	addwfc	marquee@j+1,f
 23217  13B4  3000               	movlw	0
 23218  13B5  024B               	subwf	marquee@j+1,w
 23219  13B6  3004               	movlw	4
 23220  13B7  1903               	skipnz
 23221  13B8  024A               	subwf	marquee@j,w
 23222  13B9  1C03               	skipc
 23223  13BA  2B94               	goto	l6681
 23224  13BB                     l6687:	
 23225                           
 23226                           ;main.c: 151: }
 23227                           ;main.c: 152: nullifyBadge_segDisplayPutStr(&badge_inst, display_string);
 23228  13BB  303F               	movlw	low marquee@display_string
 23229  13BC  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 23230  13BD  3000               	movlw	high marquee@display_string
 23231  13BE  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 23232  13BF  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 23233  13C0  3192  2200  3193   	fcall	_nullifyBadge_segDisplayPutStr
 23234                           
 23235                           ;main.c: 153: nullifyBadge_segDisplayForceUpdate(&badge_inst);
 23236  13C3  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 23237  13C4  31A4  24C5         	fcall	_nullifyBadge_segDisplayForceUpdate
 23238  13C6  0008               	return
 23239  13C7                     __end_of_marquee:	
 23240                           
 23241                           	psect	text57
 23242  2760                     __ptext57:	
 23243 ;; *************** function _strlen *****************
 23244 ;; Defined at:
 23245 ;;		line 4 in file "/Applications/microchip/xc8/v1.42/sources/common/strlen.c"
 23246 ;; Parameters:    Size  Location     Type
 23247 ;;  s               2    1[COMMON] PTR const unsigned char 
 23248 ;;		 -> STR_30(5), secret_inputs.inputs(20), secret_inputs(25), STR_29(5), 
 23249 ;;		 -> STR_28(5), STR_27(11), STR_26(13), STR_23(43), 
 23250 ;;		 -> STR_22(40), STR_21(27), STR_20(25), STR_19(30), 
 23251 ;;		 -> STR_18(35), STR_17(22), STR_16(26), STR_15(21), 
 23252 ;;		 -> STR_14(19), STR_13(6), STR_12(8), STR_11(9), 
 23253 ;;		 -> STR_10(5), STR_9(18), STR_7(6), STR_6(10), 
 23254 ;;		 -> STR_5(6), STR_4(5), 
 23255 ;; Auto vars:     Size  Location     Type
 23256 ;;  cp              2    5[COMMON] PTR const unsigned char 
 23257 ;;		 -> STR_30(5), secret_inputs.inputs(20), secret_inputs(25), STR_29(5), 
 23258 ;;		 -> STR_28(5), STR_27(11), STR_26(13), STR_23(43), 
 23259 ;;		 -> STR_22(40), STR_21(27), STR_20(25), STR_19(30), 
 23260 ;;		 -> STR_18(35), STR_17(22), STR_16(26), STR_15(21), 
 23261 ;;		 -> STR_14(19), STR_13(6), STR_12(8), STR_11(9), 
 23262 ;;		 -> STR_10(5), STR_9(18), STR_7(6), STR_6(10), 
 23263 ;;		 -> STR_5(6), STR_4(5), 
 23264 ;; Return value:  Size  Location     Type
 23265 ;;                  2    1[COMMON] unsigned int 
 23266 ;; Registers used:
 23267 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23268 ;; Tracked objects:
 23269 ;;		On entry : 0/0
 23270 ;;		On exit  : 0/0
 23271 ;;		Unchanged: 0/0
 23272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23276 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23277 ;;Total ram usage:        6 bytes
 23278 ;; Hardware stack levels used:    1
 23279 ;; Hardware stack levels required when called:    4
 23280 ;; This function calls:
 23281 ;;		Nothing
 23282 ;; This function is called by:
 23283 ;;		_marquee_speedy
 23284 ;;		_marquee
 23285 ;;		_secret_check
 23286 ;; This function uses a non-reentrant model
 23287 ;;
 23288                           
 23289                           
 23290                           ;psect for function _strlen
 23291  2760                     _strlen:	
 23292                           
 23293                           ;incstack = 0
 23294                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23295  2760  0872               	movf	strlen@s+1,w
 23296  2761  00F6               	movwf	strlen@cp+1
 23297  2762  0871               	movf	strlen@s,w
 23298  2763  00F5               	movwf	strlen@cp
 23299  2764                     l6565:	
 23300  2764  0875               	movf	strlen@cp,w
 23301  2765  0084               	movwf	4
 23302  2766  0876               	movf	strlen@cp+1,w
 23303  2767  0085               	movwf	5
 23304  2768  0012               	moviw fsr0++
 23305  2769  1903               	btfsc	3,2
 23306  276A  2F70               	goto	l6567
 23307  276B  3001               	movlw	1
 23308  276C  07F5               	addwf	strlen@cp,f
 23309  276D  3000               	movlw	0
 23310  276E  3DF6               	addwfc	strlen@cp+1,f
 23311  276F  2F64               	goto	l6565
 23312  2770                     l6567:	
 23313  2770  0971               	comf	strlen@s,w
 23314  2771  00F3               	movwf	??_strlen
 23315  2772  0972               	comf	strlen@s+1,w
 23316  2773  00F4               	movwf	??_strlen+1
 23317  2774  0AF3               	incf	??_strlen,f
 23318  2775  1903               	skipnz
 23319  2776  0AF4               	incf	??_strlen+1,f
 23320  2777  0875               	movf	strlen@cp,w
 23321  2778  0773               	addwf	??_strlen,w
 23322  2779  00F1               	movwf	?_strlen
 23323  277A  0876               	movf	strlen@cp+1,w
 23324  277B  3D74               	addwfc	??_strlen+1,w
 23325  277C  00F2               	movwf	?_strlen+1
 23326  277D  0008               	return
 23327  277E                     __end_of_strlen:	
 23328                           
 23329                           	psect	text58
 23330  1200                     __ptext58:	
 23331 ;; *************** function _nullifyBadge_segDisplayPutStr *****************
 23332 ;; Defined at:
 23333 ;;		line 113 in file "nullifyBadge.c"
 23334 ;; Parameters:    Size  Location     Type
 23335 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 23336 ;;		 -> badge_inst(18), 
 23337 ;;  str             2   23[BANK0 ] PTR unsigned char 
 23338 ;;		 -> flashy_Main@hit_counter(6), STR_24(5), STR_23(43), STR_22(40), 
 23339 ;;		 -> STR_21(27), STR_20(25), STR_19(30), STR_18(35), 
 23340 ;;		 -> STR_17(22), STR_16(26), STR_15(21), STR_14(19), 
 23341 ;;		 -> STR_13(6), STR_12(8), STR_11(9), STR_10(5), 
 23342 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 23343 ;;		 -> marquee@display_string(5), marquee_speedy@display_string(5), 
 23344 ;; Auto vars:     Size  Location     Type
 23345 ;;  badge           1   25[BANK0 ] PTR struct t_nullifyBadg
 23346 ;;		 -> badge_inst(18), 
 23347 ;; Return value:  Size  Location     Type
 23348 ;;                  1    wreg      void 
 23349 ;; Registers used:
 23350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23351 ;; Tracked objects:
 23352 ;;		On entry : 0/0
 23353 ;;		On exit  : 0/0
 23354 ;;		Unchanged: 0/0
 23355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23359 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23360 ;;Total ram usage:        3 bytes
 23361 ;; Hardware stack levels used:    1
 23362 ;; Hardware stack levels required when called:    8
 23363 ;; This function calls:
 23364 ;;		_displayL2_PutStr
 23365 ;; This function is called by:
 23366 ;;		_marquee_speedy
 23367 ;;		_marquee
 23368 ;;		_menu_display_option
 23369 ;;		_flashy_display_option
 23370 ;;		_flashy_Main
 23371 ;; This function uses a non-reentrant model
 23372 ;;
 23373                           
 23374                           
 23375                           ;psect for function _nullifyBadge_segDisplayPutStr
 23376  1200                     _nullifyBadge_segDisplayPutStr:	
 23377                           
 23378                           ;incstack = 0
 23379                           ; Regs used in _nullifyBadge_segDisplayPutStr: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 23380                           ;nullifyBadge_segDisplayPutStr@badge stored from wreg
 23381  1200  0020               	movlb	0	; select bank0
 23382  1201  00B9               	movwf	nullifyBadge_segDisplayPutStr@badge
 23383                           
 23384                           ;nullifyBadge.c: 114: displayL2_PutStr(&badge->display, str);
 23385  1202  0838               	movf	nullifyBadge_segDisplayPutStr@str+1,w
 23386  1203  00B1               	movwf	displayL2_PutStr@str+1
 23387  1204  0837               	movf	nullifyBadge_segDisplayPutStr@str,w
 23388  1205  00B0               	movwf	displayL2_PutStr@str
 23389  1206  0839               	movf	nullifyBadge_segDisplayPutStr@badge,w
 23390  1207  3198  203F         	fcall	_displayL2_PutStr
 23391  1209  0008               	return
 23392  120A                     __end_of_nullifyBadge_segDisplayPutStr:	
 23393                           
 23394                           	psect	text59
 23395  183F                     __ptext59:	
 23396 ;; *************** function _displayL2_PutStr *****************
 23397 ;; Defined at:
 23398 ;;		line 55 in file "nullifyBadge_displayL2.c"
 23399 ;; Parameters:    Size  Location     Type
 23400 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23401 ;;		 -> badge_inst(18), 
 23402 ;;  str             2   16[BANK0 ] PTR unsigned char 
 23403 ;;		 -> flashy_Main@hit_counter(6), STR_24(5), STR_23(43), STR_22(40), 
 23404 ;;		 -> STR_21(27), STR_20(25), STR_19(30), STR_18(35), 
 23405 ;;		 -> STR_17(22), STR_16(26), STR_15(21), STR_14(19), 
 23406 ;;		 -> STR_13(6), STR_12(8), STR_11(9), STR_10(5), 
 23407 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 23408 ;;		 -> STR_3(5), marquee@display_string(5), marquee_speedy@display_string(5), 
 23409 ;; Auto vars:     Size  Location     Type
 23410 ;;  display         1   21[BANK0 ] PTR struct t_nullifyDisp
 23411 ;;		 -> badge_inst(18), 
 23412 ;;  k               1   22[BANK0 ] unsigned char 
 23413 ;; Return value:  Size  Location     Type
 23414 ;;                  1    wreg      void 
 23415 ;; Registers used:
 23416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23417 ;; Tracked objects:
 23418 ;;		On entry : 0/0
 23419 ;;		On exit  : 0/0
 23420 ;;		Unchanged: 0/0
 23421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23424 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23425 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23426 ;;Total ram usage:        7 bytes
 23427 ;; Hardware stack levels used:    1
 23428 ;; Hardware stack levels required when called:    7
 23429 ;; This function calls:
 23430 ;;		_displayL2_PutChar
 23431 ;; This function is called by:
 23432 ;;		_nullifyBadge_segDisplayPutStr
 23433 ;;		_displayL2_EraseSegDisplay
 23434 ;; This function uses a non-reentrant model
 23435 ;;
 23436                           
 23437                           
 23438                           ;psect for function _displayL2_PutStr
 23439  183F                     _displayL2_PutStr:	
 23440                           
 23441                           ;incstack = 0
 23442                           ; Regs used in _displayL2_PutStr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23443                           ;displayL2_PutStr@display stored from wreg
 23444  183F  0020               	movlb	0	; select bank0
 23445  1840  00B5               	movwf	displayL2_PutStr@display
 23446                           
 23447                           ;nullifyBadge_displayL2.c: 57: u8 k = 0;
 23448  1841  01B6               	clrf	displayL2_PutStr@k
 23449  1842                     l6539:	
 23450                           ;nullifyBadge_displayL2.c: 59: while (str[k] != '\0') {
 23451                           
 23452  1842  0831               	movf	displayL2_PutStr@str+1,w
 23453  1843  00B3               	movwf	??_displayL2_PutStr+1
 23454  1844  0830               	movf	displayL2_PutStr@str,w
 23455  1845  00B2               	movwf	??_displayL2_PutStr
 23456  1846  0836               	movf	displayL2_PutStr@k,w
 23457  1847  0732               	addwf	??_displayL2_PutStr,w
 23458  1848  0084               	movwf	4
 23459  1849  0833               	movf	??_displayL2_PutStr+1,w
 23460  184A  1803               	skipnc
 23461  184B  0A33               	incf	??_displayL2_PutStr+1,w
 23462  184C  0085               	movwf	5
 23463  184D  0012               	moviw fsr0++
 23464  184E  1903               	btfsc	3,2
 23465  184F  0008               	return
 23466                           
 23467                           ;nullifyBadge_displayL2.c: 60: displayL2_PutChar(display, str[k]);
 23468  1850  0831               	movf	displayL2_PutStr@str+1,w
 23469  1851  00B3               	movwf	??_displayL2_PutStr+1
 23470  1852  0830               	movf	displayL2_PutStr@str,w
 23471  1853  00B2               	movwf	??_displayL2_PutStr
 23472  1854  0836               	movf	displayL2_PutStr@k,w
 23473  1855  0732               	addwf	??_displayL2_PutStr,w
 23474  1856  0084               	movwf	4
 23475  1857  0833               	movf	??_displayL2_PutStr+1,w
 23476  1858  1803               	skipnc
 23477  1859  0A33               	incf	??_displayL2_PutStr+1,w
 23478  185A  0085               	movwf	5
 23479  185B  0800               	movf	0,w	;code access
 23480  185C  00B4               	movwf	??_displayL2_PutStr+2
 23481  185D  0834               	movf	??_displayL2_PutStr+2,w
 23482  185E  00AA               	movwf	displayL2_PutChar@c
 23483  185F  0835               	movf	displayL2_PutStr@display,w
 23484  1860  319C  24C9  3198   	fcall	_displayL2_PutChar
 23485                           
 23486                           ;nullifyBadge_displayL2.c: 61: k++;
 23487  1863  3001               	movlw	1
 23488  1864  0020               	movlb	0	; select bank0
 23489  1865  00B2               	movwf	??_displayL2_PutStr
 23490  1866  0832               	movf	??_displayL2_PutStr,w
 23491  1867  07B6               	addwf	displayL2_PutStr@k,f
 23492  1868  2842               	goto	l6539
 23493  1869                     __end_of_displayL2_PutStr:	
 23494                           
 23495                           	psect	text60
 23496  1CC9                     __ptext60:	
 23497 ;; *************** function _displayL2_PutChar *****************
 23498 ;; Defined at:
 23499 ;;		line 38 in file "nullifyBadge_displayL2.c"
 23500 ;; Parameters:    Size  Location     Type
 23501 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23502 ;;		 -> badge_inst(18), 
 23503 ;;  c               1   10[BANK0 ] unsigned char 
 23504 ;; Auto vars:     Size  Location     Type
 23505 ;;  display         1   15[BANK0 ] PTR struct t_nullifyDisp
 23506 ;;		 -> badge_inst(18), 
 23507 ;;  k               1   14[BANK0 ] unsigned char 
 23508 ;; Return value:  Size  Location     Type
 23509 ;;                  1    wreg      void 
 23510 ;; Registers used:
 23511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23512 ;; Tracked objects:
 23513 ;;		On entry : 0/0
 23514 ;;		On exit  : 0/0
 23515 ;;		Unchanged: 0/0
 23516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23517 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23519 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23520 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23521 ;;Total ram usage:        6 bytes
 23522 ;; Hardware stack levels used:    1
 23523 ;; Hardware stack levels required when called:    6
 23524 ;; This function calls:
 23525 ;;		_displayL1_SetSegChar
 23526 ;; This function is called by:
 23527 ;;		_displayL2_PutStr
 23528 ;;		_nullifyBadge_segDisplayPutChar
 23529 ;; This function uses a non-reentrant model
 23530 ;;
 23531                           
 23532                           
 23533                           ;psect for function _displayL2_PutChar
 23534  1CC9                     _displayL2_PutChar:	
 23535                           
 23536                           ;incstack = 0
 23537                           ; Regs used in _displayL2_PutChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23538                           ;displayL2_PutChar@display stored from wreg
 23539  1CC9  0020               	movlb	0	; select bank0
 23540  1CCA  00AF               	movwf	displayL2_PutChar@display
 23541                           
 23542                           ;nullifyBadge_displayL2.c: 40: display->charVect[0] = display->charVect[1];
 23543  1CCB  0A2F               	incf	displayL2_PutChar@display,w
 23544  1CCC  0086               	movwf	6
 23545  1CCD  3001               	movlw	1	; select bank2/3
 23546  1CCE  0087               	movwf	7
 23547  1CCF  0801               	movf	1,w
 23548  1CD0  00AB               	movwf	??_displayL2_PutChar
 23549  1CD1  082F               	movf	displayL2_PutChar@display,w
 23550  1CD2  0086               	movwf	6
 23551  1CD3  3001               	movlw	1	; select bank2/3
 23552  1CD4  0087               	movwf	7
 23553  1CD5  082B               	movf	??_displayL2_PutChar,w
 23554  1CD6  0081               	movwf	1
 23555                           
 23556                           ;nullifyBadge_displayL2.c: 41: display->charVect[1] = display->charVect[2];
 23557  1CD7  082F               	movf	displayL2_PutChar@display,w
 23558  1CD8  3E02               	addlw	2
 23559  1CD9  0086               	movwf	6
 23560  1CDA  3001               	movlw	1	; select bank2/3
 23561  1CDB  0087               	movwf	7
 23562  1CDC  0801               	movf	1,w
 23563  1CDD  00AB               	movwf	??_displayL2_PutChar
 23564  1CDE  0A2F               	incf	displayL2_PutChar@display,w
 23565  1CDF  0086               	movwf	6
 23566  1CE0  3001               	movlw	1	; select bank2/3
 23567  1CE1  0087               	movwf	7
 23568  1CE2  082B               	movf	??_displayL2_PutChar,w
 23569  1CE3  0081               	movwf	1
 23570                           
 23571                           ;nullifyBadge_displayL2.c: 42: display->charVect[2] = display->charVect[3];
 23572  1CE4  082F               	movf	displayL2_PutChar@display,w
 23573  1CE5  3E03               	addlw	3
 23574  1CE6  0086               	movwf	6
 23575  1CE7  3001               	movlw	1	; select bank2/3
 23576  1CE8  0087               	movwf	7
 23577  1CE9  0801               	movf	1,w
 23578  1CEA  00AB               	movwf	??_displayL2_PutChar
 23579  1CEB  082F               	movf	displayL2_PutChar@display,w
 23580  1CEC  3E02               	addlw	2
 23581  1CED  0086               	movwf	6
 23582  1CEE  3001               	movlw	1	; select bank2/3
 23583  1CEF  0087               	movwf	7
 23584  1CF0  082B               	movf	??_displayL2_PutChar,w
 23585  1CF1  0081               	movwf	1
 23586                           
 23587                           ;nullifyBadge_displayL2.c: 45: display->charVect[3] = c;
 23588  1CF2  082A               	movf	displayL2_PutChar@c,w
 23589  1CF3  00AB               	movwf	??_displayL2_PutChar
 23590  1CF4  082F               	movf	displayL2_PutChar@display,w
 23591  1CF5  3E03               	addlw	3
 23592  1CF6  0086               	movwf	6
 23593  1CF7  3001               	movlw	1	; select bank2/3
 23594  1CF8  0087               	movwf	7
 23595  1CF9  082B               	movf	??_displayL2_PutChar,w
 23596  1CFA  0081               	movwf	1
 23597                           
 23598                           ;nullifyBadge_displayL2.c: 48: u8 k = 0;
 23599  1CFB  01AE               	clrf	displayL2_PutChar@k
 23600                           
 23601                           ;nullifyBadge_displayL2.c: 49: for (k = 0; k < 4; k++) {
 23602  1CFC  01AE               	clrf	displayL2_PutChar@k
 23603  1CFD                     L14:	
 23604  1CFD  3004               	movlw	4
 23605  1CFE  022E               	subwf	displayL2_PutChar@k,w
 23606  1CFF  1803               	btfsc	3,0
 23607  1D00  0008               	return
 23608                           
 23609                           ;nullifyBadge_displayL2.c: 50: displayL1_SetSegChar(&display->display_l1, display->charV
      +                          ect[k], k);
 23610  1D01  082E               	movf	displayL2_PutChar@k,w
 23611  1D02  072F               	addwf	displayL2_PutChar@display,w
 23612  1D03  00AB               	movwf	??_displayL2_PutChar
 23613  1D04  082B               	movf	??_displayL2_PutChar,w
 23614  1D05  0086               	movwf	6
 23615  1D06  3001               	movlw	1	; select bank2/3
 23616  1D07  0087               	movwf	7
 23617  1D08  0801               	movf	1,w
 23618  1D09  00AC               	movwf	??_displayL2_PutChar+1
 23619  1D0A  082C               	movf	??_displayL2_PutChar+1,w
 23620  1D0B  00A0               	movwf	displayL1_SetSegChar@c
 23621  1D0C  082E               	movf	displayL2_PutChar@k,w
 23622  1D0D  00AD               	movwf	??_displayL2_PutChar+2
 23623  1D0E  082D               	movf	??_displayL2_PutChar+2,w
 23624  1D0F  00A1               	movwf	displayL1_SetSegChar@charPos
 23625  1D10  082F               	movf	displayL2_PutChar@display,w
 23626  1D11  3E07               	addlw	7
 23627  1D12  319A  22A4  319C   	fcall	_displayL1_SetSegChar
 23628  1D15  3001               	movlw	1
 23629  1D16  0020               	movlb	0	; select bank0
 23630  1D17  00AB               	movwf	??_displayL2_PutChar
 23631  1D18  082B               	movf	??_displayL2_PutChar,w
 23632  1D19  07AE               	addwf	displayL2_PutChar@k,f
 23633  1D1A  2CFD               	goto	L14
 23634  1D1B                     __end_of_displayL2_PutChar:	
 23635                           
 23636                           	psect	text61
 23637  1AA4                     __ptext61:	
 23638 ;; *************** function _displayL1_SetSegChar *****************
 23639 ;; Defined at:
 23640 ;;		line 18 in file "nullifyBadge_displayL1.c"
 23641 ;; Parameters:    Size  Location     Type
 23642 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23643 ;;		 -> badge_inst(18), 
 23644 ;;  c               1    0[BANK0 ] unsigned char 
 23645 ;;  charPos         1    1[BANK0 ] unsigned char 
 23646 ;; Auto vars:     Size  Location     Type
 23647 ;;  display         1    7[BANK0 ] PTR struct t_nullifyDisp
 23648 ;;		 -> badge_inst(18), 
 23649 ;;  charData        2    8[BANK0 ] unsigned int 
 23650 ;;  dispDataVect    1    6[BANK0 ] unsigned char 
 23651 ;; Return value:  Size  Location     Type
 23652 ;;                  1    wreg      void 
 23653 ;; Registers used:
 23654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23655 ;; Tracked objects:
 23656 ;;		On entry : 0/0
 23657 ;;		On exit  : 0/0
 23658 ;;		Unchanged: 0/0
 23659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23661 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23662 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23663 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23664 ;;Total ram usage:       10 bytes
 23665 ;; Hardware stack levels used:    1
 23666 ;; Hardware stack levels required when called:    5
 23667 ;; This function calls:
 23668 ;;		_displayCharReverse
 23669 ;; This function is called by:
 23670 ;;		_displayL2_PutChar
 23671 ;;		_nullifyBadge_segDisplayPutCharPos
 23672 ;;		_displayL2_PrintChar
 23673 ;; This function uses a non-reentrant model
 23674 ;;
 23675                           
 23676                           
 23677                           ;psect for function _displayL1_SetSegChar
 23678  1AA4                     _displayL1_SetSegChar:	
 23679                           
 23680                           ;incstack = 0
 23681                           ; Regs used in _displayL1_SetSegChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23682                           ;displayL1_SetSegChar@display stored from wreg
 23683  1AA4  0020               	movlb	0	; select bank0
 23684  1AA5  00A7               	movwf	displayL1_SetSegChar@display
 23685                           
 23686                           ;nullifyBadge_displayL1.c: 23: u16 charData = asciiCharTableLookup[(u8) c];
 23687  1AA6  0820               	movf	displayL1_SetSegChar@c,w
 23688  1AA7  00A2               	movwf	??_displayL1_SetSegChar
 23689  1AA8  01A3               	clrf	??_displayL1_SetSegChar+1
 23690  1AA9  35A2               	lslf	??_displayL1_SetSegChar,f
 23691  1AAA  0DA3               	rlf	??_displayL1_SetSegChar+1,f
 23692  1AAB  30F0               	movlw	240
 23693  1AAC  00A4               	movwf	??_displayL1_SetSegChar+2
 23694  1AAD  3026               	movlw	38
 23695  1AAE  00A5               	movwf	??_displayL1_SetSegChar+3
 23696  1AAF  0822               	movf	??_displayL1_SetSegChar,w
 23697  1AB0  0724               	addwf	??_displayL1_SetSegChar+2,w
 23698  1AB1  0086               	movwf	6
 23699  1AB2  0823               	movf	??_displayL1_SetSegChar+1,w
 23700  1AB3  3D25               	addwfc	??_displayL1_SetSegChar+3,w
 23701  1AB4  0087               	movwf	7
 23702  1AB5  3F40               	moviw [0]fsr1
 23703  1AB6  00A8               	movwf	displayL1_SetSegChar@charData
 23704  1AB7  3F41               	moviw [1]fsr1
 23705  1AB8  00A9               	movwf	displayL1_SetSegChar@charData+1
 23706                           
 23707                           ;nullifyBadge_displayL1.c: 29: if (charPos & 0x1) {
 23708  1AB9  1C21               	btfss	displayL1_SetSegChar@charPos,0
 23709  1ABA  2AC6               	goto	l6477
 23710                           
 23711                           ;nullifyBadge_displayL1.c: 30: charData = displayCharReverse(charData);
 23712  1ABB  0829               	movf	displayL1_SetSegChar@charData+1,w
 23713  1ABC  00F2               	movwf	displayCharReverse@cVal+1
 23714  1ABD  0828               	movf	displayL1_SetSegChar@charData,w
 23715  1ABE  00F1               	movwf	displayCharReverse@cVal
 23716  1ABF  3198  2096         	fcall	_displayCharReverse
 23717  1AC1  0872               	movf	?_displayCharReverse+1,w
 23718  1AC2  0020               	movlb	0	; select bank0
 23719  1AC3  00A9               	movwf	displayL1_SetSegChar@charData+1
 23720  1AC4  0871               	movf	?_displayCharReverse,w
 23721  1AC5  00A8               	movwf	displayL1_SetSegChar@charData
 23722  1AC6                     l6477:	
 23723                           
 23724                           ;nullifyBadge_displayL1.c: 31: }
 23725                           ;nullifyBadge_displayL1.c: 61: u8 dispDataVectBaseIdx = 8 - ( charPos << 1 );
 23726  1AC6  3521               	lslf	displayL1_SetSegChar@charPos,w
 23727  1AC7  3AFF               	xorlw	255
 23728  1AC8  3E01               	addlw	1
 23729  1AC9  3E08               	addlw	8
 23730  1ACA  00A2               	movwf	??_displayL1_SetSegChar
 23731  1ACB  0822               	movf	??_displayL1_SetSegChar,w
 23732  1ACC  00A6               	movwf	displayL1_SetSegChar@dispDataVectBaseIdx
 23733                           
 23734                           ;nullifyBadge_displayL1.c: 64: display->displayVect[dispDataVectBaseIdx] = (u8) (charDat
      +                          a >> 8);
 23735  1ACD  0829               	movf	displayL1_SetSegChar@charData+1,w
 23736  1ACE  00A2               	movwf	??_displayL1_SetSegChar
 23737  1ACF  0826               	movf	displayL1_SetSegChar@dispDataVectBaseIdx,w
 23738  1AD0  0727               	addwf	displayL1_SetSegChar@display,w
 23739  1AD1  00A3               	movwf	??_displayL1_SetSegChar+1
 23740  1AD2  0823               	movf	??_displayL1_SetSegChar+1,w
 23741  1AD3  0086               	movwf	6
 23742  1AD4  3001               	movlw	1	; select bank2/3
 23743  1AD5  0087               	movwf	7
 23744  1AD6  0822               	movf	??_displayL1_SetSegChar,w
 23745  1AD7  0081               	movwf	1
 23746                           
 23747                           ;nullifyBadge_displayL1.c: 67: display->displayVect[dispDataVectBaseIdx+1] = (u8) (charD
      +                          ata & 0xFF);
 23748  1AD8  0828               	movf	displayL1_SetSegChar@charData,w
 23749  1AD9  00A2               	movwf	??_displayL1_SetSegChar
 23750  1ADA  0826               	movf	displayL1_SetSegChar@dispDataVectBaseIdx,w
 23751  1ADB  3E01               	addlw	1
 23752  1ADC  0727               	addwf	displayL1_SetSegChar@display,w
 23753  1ADD  00A3               	movwf	??_displayL1_SetSegChar+1
 23754  1ADE  0823               	movf	??_displayL1_SetSegChar+1,w
 23755  1ADF  0086               	movwf	6
 23756  1AE0  3001               	movlw	1	; select bank2/3
 23757  1AE1  0087               	movwf	7
 23758  1AE2  0822               	movf	??_displayL1_SetSegChar,w
 23759  1AE3  0081               	movwf	1
 23760  1AE4  0008               	return
 23761  1AE5                     __end_of_displayL1_SetSegChar:	
 23762                           
 23763                           	psect	text62
 23764  1896                     __ptext62:	
 23765 ;; *************** function _displayCharReverse *****************
 23766 ;; Defined at:
 23767 ;;		line 105 in file "nullifyBadge_displayL1.c"
 23768 ;; Parameters:    Size  Location     Type
 23769 ;;  cVal            2    1[COMMON] unsigned int 
 23770 ;; Auto vars:     Size  Location     Type
 23771 ;;  k               1   11[COMMON] unsigned char 
 23772 ;;  retValUpperR    1   10[COMMON] unsigned char 
 23773 ;;  retValUpper     1    9[COMMON] unsigned char 
 23774 ;;  retValLower     1    8[COMMON] unsigned char 
 23775 ;; Return value:  Size  Location     Type
 23776 ;;                  2    1[COMMON] unsigned int 
 23777 ;; Registers used:
 23778 ;;		wreg, status,2, status,0
 23779 ;; Tracked objects:
 23780 ;;		On entry : 0/0
 23781 ;;		On exit  : 0/0
 23782 ;;		Unchanged: 0/0
 23783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23785 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23786 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23787 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23788 ;;Total ram usage:       11 bytes
 23789 ;; Hardware stack levels used:    1
 23790 ;; Hardware stack levels required when called:    4
 23791 ;; This function calls:
 23792 ;;		Nothing
 23793 ;; This function is called by:
 23794 ;;		_displayL1_SetSegChar
 23795 ;; This function uses a non-reentrant model
 23796 ;;
 23797                           
 23798                           
 23799                           ;psect for function _displayCharReverse
 23800  1896                     _displayCharReverse:	
 23801                           
 23802                           ;nullifyBadge_displayL1.c: 106: u8 retValUpper, retValLower, retValUpperRev;
 23803                           ;nullifyBadge_displayL1.c: 108: u8 k;
 23804                           ;nullifyBadge_displayL1.c: 111: retValUpper = cVal >> 8;
 23805                           
 23806                           ;incstack = 0
 23807                           ; Regs used in _displayCharReverse: [wreg+status,2+status,0]
 23808  1896  0872               	movf	displayCharReverse@cVal+1,w
 23809  1897  00F3               	movwf	??_displayCharReverse
 23810  1898  0873               	movf	??_displayCharReverse,w
 23811  1899  00F9               	movwf	displayCharReverse@retValUpper
 23812                           
 23813                           ;nullifyBadge_displayL1.c: 112: retValLower = cVal & 0xFF;
 23814  189A  0871               	movf	displayCharReverse@cVal,w
 23815  189B  00F3               	movwf	??_displayCharReverse
 23816  189C  0873               	movf	??_displayCharReverse,w
 23817  189D  00F8               	movwf	displayCharReverse@retValLower
 23818                           
 23819                           ;nullifyBadge_displayL1.c: 115: retValUpperRev = 0;
 23820  189E  01FA               	clrf	displayCharReverse@retValUpperRev
 23821                           
 23822                           ;nullifyBadge_displayL1.c: 117: for (k = 0; k < 7; k++) {
 23823  189F  01FB               	clrf	displayCharReverse@k
 23824  18A0  3007               	movlw	7
 23825  18A1  027B               	subwf	displayCharReverse@k,w
 23826  18A2  1803               	btfsc	3,0
 23827  18A3  28B5               	goto	l6459
 23828  18A4                     l6451:	
 23829                           
 23830                           ;nullifyBadge_displayL1.c: 118: retValUpperRev |= (retValUpper & 0x1);
 23831  18A4  0879               	movf	displayCharReverse@retValUpper,w
 23832  18A5  3901               	andlw	1
 23833  18A6  00F3               	movwf	??_displayCharReverse
 23834  18A7  0873               	movf	??_displayCharReverse,w
 23835  18A8  04FA               	iorwf	displayCharReverse@retValUpperRev,f
 23836                           
 23837                           ;nullifyBadge_displayL1.c: 119: retValUpper >>= 1;
 23838  18A9  1003               	clrc
 23839  18AA  0CF9               	rrf	displayCharReverse@retValUpper,f
 23840                           
 23841                           ;nullifyBadge_displayL1.c: 120: retValUpperRev <<= 1;
 23842  18AB  1003               	clrc
 23843  18AC  0DFA               	rlf	displayCharReverse@retValUpperRev,f
 23844  18AD  3001               	movlw	1
 23845  18AE  00F3               	movwf	??_displayCharReverse
 23846  18AF  0873               	movf	??_displayCharReverse,w
 23847  18B0  07FB               	addwf	displayCharReverse@k,f
 23848  18B1  3007               	movlw	7
 23849  18B2  027B               	subwf	displayCharReverse@k,w
 23850  18B3  1C03               	skipc
 23851  18B4  28A4               	goto	l6451
 23852  18B5                     l6459:	
 23853                           
 23854                           ;nullifyBadge_displayL1.c: 121: }
 23855                           ;nullifyBadge_displayL1.c: 123: return (retValLower << 8) | (retValUpperRev);
 23856  18B5  087A               	movf	displayCharReverse@retValUpperRev,w
 23857  18B6  00F3               	movwf	??_displayCharReverse
 23858  18B7  01F4               	clrf	??_displayCharReverse+1
 23859  18B8  0878               	movf	displayCharReverse@retValLower,w
 23860  18B9  00F5               	movwf	??_displayCharReverse+2
 23861  18BA  01F6               	clrf	??_displayCharReverse+3
 23862  18BB  0875               	movf	??_displayCharReverse+2,w
 23863  18BC  00F6               	movwf	??_displayCharReverse+3
 23864  18BD  01F5               	clrf	??_displayCharReverse+2
 23865  18BE  0873               	movf	??_displayCharReverse,w
 23866  18BF  0475               	iorwf	??_displayCharReverse+2,w
 23867  18C0  00F1               	movwf	?_displayCharReverse
 23868  18C1  0874               	movf	??_displayCharReverse+1,w
 23869  18C2  0476               	iorwf	??_displayCharReverse+3,w
 23870  18C3  00F2               	movwf	?_displayCharReverse+1
 23871  18C4  0008               	return
 23872  18C5                     __end_of_displayCharReverse:	
 23873                           
 23874                           	psect	text63
 23875  24C5                     __ptext63:	
 23876 ;; *************** function _nullifyBadge_segDisplayForceUpdate *****************
 23877 ;; Defined at:
 23878 ;;		line 108 in file "nullifyBadge.c"
 23879 ;; Parameters:    Size  Location     Type
 23880 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 23881 ;;		 -> badge_inst(18), 
 23882 ;; Auto vars:     Size  Location     Type
 23883 ;;  badge           1   11[BANK0 ] PTR struct t_nullifyBadg
 23884 ;;		 -> badge_inst(18), 
 23885 ;; Return value:  Size  Location     Type
 23886 ;;                  1    wreg      void 
 23887 ;; Registers used:
 23888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23889 ;; Tracked objects:
 23890 ;;		On entry : 0/0
 23891 ;;		On exit  : 0/0
 23892 ;;		Unchanged: 0/0
 23893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23897 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23898 ;;Total ram usage:        1 bytes
 23899 ;; Hardware stack levels used:    1
 23900 ;; Hardware stack levels required when called:    8
 23901 ;; This function calls:
 23902 ;;		_displayL2_ForceUpdate
 23903 ;; This function is called by:
 23904 ;;		_marquee_speedy
 23905 ;;		_marquee
 23906 ;;		_menu_display_option
 23907 ;;		_flashy_display_option
 23908 ;;		_flashy_Main
 23909 ;; This function uses a non-reentrant model
 23910 ;;
 23911                           
 23912                           
 23913                           ;psect for function _nullifyBadge_segDisplayForceUpdate
 23914  24C5                     _nullifyBadge_segDisplayForceUpdate:	
 23915                           
 23916                           ;incstack = 0
 23917                           ; Regs used in _nullifyBadge_segDisplayForceUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+
      +                          pclath+cstack]
 23918                           ;nullifyBadge_segDisplayForceUpdate@badge stored from wreg
 23919  24C5  0020               	movlb	0	; select bank0
 23920  24C6  00AB               	movwf	nullifyBadge_segDisplayForceUpdate@badge
 23921                           
 23922                           ;nullifyBadge.c: 109: displayL2_ForceUpdate(&badge->display);
 23923  24C7  082B               	movf	nullifyBadge_segDisplayForceUpdate@badge,w
 23924  24C8  31A4  24BF         	fcall	_displayL2_ForceUpdate
 23925  24CA  0008               	return
 23926  24CB                     __end_of_nullifyBadge_segDisplayForceUpdate:	
 23927                           
 23928                           	psect	text64
 23929  24BF                     __ptext64:	
 23930 ;; *************** function _displayL2_ForceUpdate *****************
 23931 ;; Defined at:
 23932 ;;		line 79 in file "nullifyBadge_displayL2.c"
 23933 ;; Parameters:    Size  Location     Type
 23934 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23935 ;;		 -> badge_inst(18), 
 23936 ;; Auto vars:     Size  Location     Type
 23937 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 23938 ;;		 -> badge_inst(18), 
 23939 ;; Return value:  Size  Location     Type
 23940 ;;                  1    wreg      void 
 23941 ;; Registers used:
 23942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23943 ;; Tracked objects:
 23944 ;;		On entry : 0/0
 23945 ;;		On exit  : 0/0
 23946 ;;		Unchanged: 0/0
 23947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23952 ;;Total ram usage:        1 bytes
 23953 ;; Hardware stack levels used:    1
 23954 ;; Hardware stack levels required when called:    7
 23955 ;; This function calls:
 23956 ;;		_displayL1_Update
 23957 ;; This function is called by:
 23958 ;;		_nullifyBadge_segDisplayForceUpdate
 23959 ;; This function uses a non-reentrant model
 23960 ;;
 23961                           
 23962                           
 23963                           ;psect for function _displayL2_ForceUpdate
 23964  24BF                     _displayL2_ForceUpdate:	
 23965                           
 23966                           ;incstack = 0
 23967                           ; Regs used in _displayL2_ForceUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23968                           ;displayL2_ForceUpdate@display stored from wreg
 23969  24BF  00FB               	movwf	displayL2_ForceUpdate@display
 23970                           
 23971                           ;nullifyBadge_displayL2.c: 80: displayL1_Update(&display->display_l1);
 23972  24C0  087B               	movf	displayL2_ForceUpdate@display,w
 23973  24C1  3E07               	addlw	7
 23974  24C2  31A6  2604         	fcall	_displayL1_Update
 23975  24C4  0008               	return
 23976  24C5                     __end_of_displayL2_ForceUpdate:	
 23977                           
 23978                           	psect	text65
 23979  1869                     __ptext65:	
 23980 ;; *************** function ___lwmod *****************
 23981 ;; Defined at:
 23982 ;;		line 6 in file "/Applications/microchip/xc8/v1.42/sources/common/lwmod.c"
 23983 ;; Parameters:    Size  Location     Type
 23984 ;;  divisor         2    0[BANK0 ] unsigned int 
 23985 ;;  dividend        2    2[BANK0 ] unsigned int 
 23986 ;; Auto vars:     Size  Location     Type
 23987 ;;  counter         1   10[COMMON] unsigned char 
 23988 ;; Return value:  Size  Location     Type
 23989 ;;                  2    0[BANK0 ] unsigned int 
 23990 ;; Registers used:
 23991 ;;		wreg, status,2, status,0
 23992 ;; Tracked objects:
 23993 ;;		On entry : 0/0
 23994 ;;		On exit  : 0/0
 23995 ;;		Unchanged: 0/0
 23996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23997 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24000 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24001 ;;Total ram usage:        6 bytes
 24002 ;; Hardware stack levels used:    1
 24003 ;; Hardware stack levels required when called:    4
 24004 ;; This function calls:
 24005 ;;		Nothing
 24006 ;; This function is called by:
 24007 ;;		_marquee_speedy
 24008 ;;		_marquee
 24009 ;;		_led_roundabout
 24010 ;;		_led_curtain
 24011 ;;		_led_Parody
 24012 ;;		_menu_display_option
 24013 ;;		_locked_Main
 24014 ;;		_sprintf
 24015 ;; This function uses a non-reentrant model
 24016 ;;
 24017                           
 24018                           
 24019                           ;psect for function ___lwmod
 24020  1869                     ___lwmod:	
 24021                           
 24022                           ;incstack = 0
 24023                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 24024  1869  0020               	movlb	0	; select bank0
 24025  186A  0820               	movf	___lwmod@divisor,w
 24026  186B  0421               	iorwf	___lwmod@divisor+1,w
 24027  186C  1903               	btfsc	3,2
 24028  186D  2891               	goto	l6641
 24029  186E  01FA               	clrf	___lwmod@counter
 24030  186F  0AFA               	incf	___lwmod@counter,f
 24031  1870                     l6631:	
 24032  1870  1BA1               	btfsc	___lwmod@divisor+1,7
 24033  1871  287C               	goto	l6633
 24034  1872  3001               	movlw	1
 24035  1873                     u3815:	
 24036  1873  35A0               	lslf	___lwmod@divisor,f
 24037  1874  0DA1               	rlf	___lwmod@divisor+1,f
 24038  1875  0B89               	decfsz	9,f
 24039  1876  2873               	goto	u3815
 24040  1877  3001               	movlw	1
 24041  1878  00F9               	movwf	??___lwmod
 24042  1879  0879               	movf	??___lwmod,w
 24043  187A  07FA               	addwf	___lwmod@counter,f
 24044  187B  2870               	goto	l6631
 24045  187C                     l6633:	
 24046  187C  0821               	movf	___lwmod@divisor+1,w
 24047  187D  0223               	subwf	___lwmod@dividend+1,w
 24048  187E  1D03               	skipz
 24049  187F  2882               	goto	u3835
 24050  1880  0820               	movf	___lwmod@divisor,w
 24051  1881  0222               	subwf	___lwmod@dividend,w
 24052  1882                     u3835:	
 24053  1882  1C03               	skipc
 24054  1883  2888               	goto	l6637
 24055  1884  0820               	movf	___lwmod@divisor,w
 24056  1885  02A2               	subwf	___lwmod@dividend,f
 24057  1886  0821               	movf	___lwmod@divisor+1,w
 24058  1887  3BA3               	subwfb	___lwmod@dividend+1,f
 24059  1888                     l6637:	
 24060  1888  3001               	movlw	1
 24061  1889                     u3845:	
 24062  1889  36A1               	lsrf	___lwmod@divisor+1,f
 24063  188A  0CA0               	rrf	___lwmod@divisor,f
 24064  188B  0B89               	decfsz	9,f
 24065  188C  2889               	goto	u3845
 24066  188D  3001               	movlw	1
 24067  188E  02FA               	subwf	___lwmod@counter,f
 24068  188F  1D03               	btfss	3,2
 24069  1890  287C               	goto	l6633
 24070  1891                     l6641:	
 24071  1891  0823               	movf	___lwmod@dividend+1,w
 24072  1892  00A1               	movwf	?___lwmod+1
 24073  1893  0822               	movf	___lwmod@dividend,w
 24074  1894  00A0               	movwf	?___lwmod
 24075  1895  0008               	return
 24076  1896                     __end_of___lwmod:	
 24077                           
 24078                           	psect	text66
 24079  1989                     __ptext66:	
 24080 ;; *************** function ___lwdiv *****************
 24081 ;; Defined at:
 24082 ;;		line 6 in file "/Applications/microchip/xc8/v1.42/sources/common/lwdiv.c"
 24083 ;; Parameters:    Size  Location     Type
 24084 ;;  divisor         2    1[COMMON] unsigned int 
 24085 ;;  dividend        2    3[COMMON] unsigned int 
 24086 ;; Auto vars:     Size  Location     Type
 24087 ;;  quotient        2    7[COMMON] unsigned int 
 24088 ;;  counter         1    6[COMMON] unsigned char 
 24089 ;; Return value:  Size  Location     Type
 24090 ;;                  2    1[COMMON] unsigned int 
 24091 ;; Registers used:
 24092 ;;		wreg, status,2, status,0
 24093 ;; Tracked objects:
 24094 ;;		On entry : 0/0
 24095 ;;		On exit  : 0/0
 24096 ;;		Unchanged: 0/0
 24097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24099 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24101 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24102 ;;Total ram usage:        8 bytes
 24103 ;; Hardware stack levels used:    1
 24104 ;; Hardware stack levels required when called:    4
 24105 ;; This function calls:
 24106 ;;		Nothing
 24107 ;; This function is called by:
 24108 ;;		_marquee_speedy
 24109 ;;		_marquee
 24110 ;;		_sprintf
 24111 ;; This function uses a non-reentrant model
 24112 ;;
 24113                           
 24114                           
 24115                           ;psect for function ___lwdiv
 24116  1989                     ___lwdiv:	
 24117                           
 24118                           ;incstack = 0
 24119                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 24120  1989  01F7               	clrf	___lwdiv@quotient
 24121  198A  01F8               	clrf	___lwdiv@quotient+1
 24122  198B  0871               	movf	___lwdiv@divisor,w
 24123  198C  0472               	iorwf	___lwdiv@divisor+1,w
 24124  198D  1903               	btfsc	3,2
 24125  198E  29B8               	goto	l6619
 24126  198F  01F6               	clrf	___lwdiv@counter
 24127  1990  0AF6               	incf	___lwdiv@counter,f
 24128  1991                     l6607:	
 24129  1991  1BF2               	btfsc	___lwdiv@divisor+1,7
 24130  1992  299D               	goto	l6609
 24131  1993  3001               	movlw	1
 24132  1994                     u3745:	
 24133  1994  35F1               	lslf	___lwdiv@divisor,f
 24134  1995  0DF2               	rlf	___lwdiv@divisor+1,f
 24135  1996  0B89               	decfsz	9,f
 24136  1997  2994               	goto	u3745
 24137  1998  3001               	movlw	1
 24138  1999  00F5               	movwf	??___lwdiv
 24139  199A  0875               	movf	??___lwdiv,w
 24140  199B  07F6               	addwf	___lwdiv@counter,f
 24141  199C  2991               	goto	l6607
 24142  199D                     l6609:	
 24143  199D  3001               	movlw	1
 24144  199E                     u3765:	
 24145  199E  35F7               	lslf	___lwdiv@quotient,f
 24146  199F  0DF8               	rlf	___lwdiv@quotient+1,f
 24147  19A0  0B89               	decfsz	9,f
 24148  19A1  299E               	goto	u3765
 24149  19A2  0872               	movf	___lwdiv@divisor+1,w
 24150  19A3  0274               	subwf	___lwdiv@dividend+1,w
 24151  19A4  1D03               	skipz
 24152  19A5  29A8               	goto	u3775
 24153  19A6  0871               	movf	___lwdiv@divisor,w
 24154  19A7  0273               	subwf	___lwdiv@dividend,w
 24155  19A8                     u3775:	
 24156  19A8  1C03               	skipc
 24157  19A9  29AF               	goto	l6615
 24158  19AA  0871               	movf	___lwdiv@divisor,w
 24159  19AB  02F3               	subwf	___lwdiv@dividend,f
 24160  19AC  0872               	movf	___lwdiv@divisor+1,w
 24161  19AD  3BF4               	subwfb	___lwdiv@dividend+1,f
 24162  19AE  1477               	bsf	___lwdiv@quotient,0
 24163  19AF                     l6615:	
 24164  19AF  3001               	movlw	1
 24165  19B0                     u3785:	
 24166  19B0  36F2               	lsrf	___lwdiv@divisor+1,f
 24167  19B1  0CF1               	rrf	___lwdiv@divisor,f
 24168  19B2  0B89               	decfsz	9,f
 24169  19B3  29B0               	goto	u3785
 24170  19B4  3001               	movlw	1
 24171  19B5  02F6               	subwf	___lwdiv@counter,f
 24172  19B6  1D03               	btfss	3,2
 24173  19B7  299D               	goto	l6609
 24174  19B8                     l6619:	
 24175  19B8  0878               	movf	___lwdiv@quotient+1,w
 24176  19B9  00F2               	movwf	?___lwdiv+1
 24177  19BA  0877               	movf	___lwdiv@quotient,w
 24178  19BB  00F1               	movwf	?___lwdiv
 24179  19BC  0008               	return
 24180  19BD                     __end_of___lwdiv:	
 24181                           
 24182                           	psect	text67
 24183  2708                     __ptext67:	
 24184 ;; *************** function _TMR0_Read16bitTimer *****************
 24185 ;; Defined at:
 24186 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 24187 ;; Parameters:    Size  Location     Type
 24188 ;;		None
 24189 ;; Auto vars:     Size  Location     Type
 24190 ;;  readVal         2    8[COMMON] unsigned int 
 24191 ;;  readValHigh     1   11[COMMON] unsigned char 
 24192 ;;  readValLow      1   10[COMMON] unsigned char 
 24193 ;; Return value:  Size  Location     Type
 24194 ;;                  2    1[COMMON] unsigned int 
 24195 ;; Registers used:
 24196 ;;		wreg, status,2, status,0
 24197 ;; Tracked objects:
 24198 ;;		On entry : 0/0
 24199 ;;		On exit  : 0/0
 24200 ;;		Unchanged: 0/0
 24201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24203 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24204 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24205 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24206 ;;Total ram usage:       11 bytes
 24207 ;; Hardware stack levels used:    1
 24208 ;; Hardware stack levels required when called:    4
 24209 ;; This function calls:
 24210 ;;		Nothing
 24211 ;; This function is called by:
 24212 ;;		_scheduler_TaskRun
 24213 ;;		_schedulerExecute
 24214 ;; This function uses a non-reentrant model
 24215 ;;
 24216                           
 24217                           
 24218                           ;psect for function _TMR0_Read16bitTimer
 24219  2708                     _TMR0_Read16bitTimer:	
 24220                           
 24221                           ;tmr0.c: 111: uint16_t readVal;
 24222                           ;tmr0.c: 112: uint8_t readValLow;
 24223                           ;tmr0.c: 113: uint8_t readValHigh;
 24224                           ;tmr0.c: 115: readValLow = TMR0L;
 24225                           
 24226                           ;incstack = 0
 24227                           ; Regs used in _TMR0_Read16bitTimer: [wreg+status,2+status,0]
 24228  2708  0020               	movlb	0	; select bank0
 24229  2709  0815               	movf	21,w	;volatile
 24230  270A  00F3               	movwf	??_TMR0_Read16bitTimer
 24231  270B  0873               	movf	??_TMR0_Read16bitTimer,w
 24232  270C  00FA               	movwf	TMR0_Read16bitTimer@readValLow
 24233                           
 24234                           ;tmr0.c: 116: readValHigh = TMR0H;
 24235  270D  0816               	movf	22,w	;volatile
 24236  270E  00F3               	movwf	??_TMR0_Read16bitTimer
 24237  270F  0873               	movf	??_TMR0_Read16bitTimer,w
 24238  2710  00FB               	movwf	TMR0_Read16bitTimer@readValHigh
 24239                           
 24240                           ;tmr0.c: 117: readVal = ((uint16_t)readValHigh << 8) + readValLow;
 24241  2711  087A               	movf	TMR0_Read16bitTimer@readValLow,w
 24242  2712  00F3               	movwf	??_TMR0_Read16bitTimer
 24243  2713  01F4               	clrf	??_TMR0_Read16bitTimer+1
 24244  2714  087B               	movf	TMR0_Read16bitTimer@readValHigh,w
 24245  2715  00F5               	movwf	??_TMR0_Read16bitTimer+2
 24246  2716  01F6               	clrf	??_TMR0_Read16bitTimer+3
 24247  2717  0875               	movf	??_TMR0_Read16bitTimer+2,w
 24248  2718  00F6               	movwf	??_TMR0_Read16bitTimer+3
 24249  2719  01F5               	clrf	??_TMR0_Read16bitTimer+2
 24250  271A  0873               	movf	??_TMR0_Read16bitTimer,w
 24251  271B  0775               	addwf	??_TMR0_Read16bitTimer+2,w
 24252  271C  00F8               	movwf	TMR0_Read16bitTimer@readVal
 24253  271D  0874               	movf	??_TMR0_Read16bitTimer+1,w
 24254  271E  3D76               	addwfc	??_TMR0_Read16bitTimer+3,w
 24255  271F  00F9               	movwf	TMR0_Read16bitTimer@readVal+1
 24256                           
 24257                           ;tmr0.c: 119: return readVal;
 24258  2720  0879               	movf	TMR0_Read16bitTimer@readVal+1,w
 24259  2721  00F2               	movwf	?_TMR0_Read16bitTimer+1
 24260  2722  0878               	movf	TMR0_Read16bitTimer@readVal,w
 24261  2723  00F1               	movwf	?_TMR0_Read16bitTimer
 24262  2724  0008               	return
 24263  2725                     __end_of_TMR0_Read16bitTimer:	
 24264                           
 24265                           	psect	text68
 24266  1D70                     __ptext68:	
 24267 ;; *************** function _nullifyBadge_platformInit *****************
 24268 ;; Defined at:
 24269 ;;		line 13 in file "nullifyBadge.c"
 24270 ;; Parameters:    Size  Location     Type
 24271 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 24272 ;;		 -> badge_inst(18), 
 24273 ;; Auto vars:     Size  Location     Type
 24274 ;;  badge           1   12[BANK0 ] PTR struct t_nullifyBadg
 24275 ;;		 -> badge_inst(18), 
 24276 ;; Return value:  Size  Location     Type
 24277 ;;                  1    wreg      void 
 24278 ;; Registers used:
 24279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24280 ;; Tracked objects:
 24281 ;;		On entry : 0/0
 24282 ;;		On exit  : 0/0
 24283 ;;		Unchanged: 0/0
 24284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24288 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24289 ;;Total ram usage:        1 bytes
 24290 ;; Hardware stack levels used:    1
 24291 ;; Hardware stack levels required when called:    9
 24292 ;; This function calls:
 24293 ;;		_OSCILLATOR_Initialize
 24294 ;;		_PIN_MANAGER_Initialize
 24295 ;;		_PWM1_Initialize
 24296 ;;		_PWM1_LoadDutyValue
 24297 ;;		_PWM2_Initialize
 24298 ;;		_PWM2_LoadDutyValue
 24299 ;;		_PWM5_Initialize
 24300 ;;		_PWM5_LoadDutyValue
 24301 ;;		_PWM6_Initialize
 24302 ;;		_PWM6_LoadDutyValue
 24303 ;;		_SPI1_Initialize
 24304 ;;		_SYSTEM_Initialize
 24305 ;;		_TMR0_Initialize
 24306 ;;		_TMR2_Initialize
 24307 ;;		_TMR4_Initialize
 24308 ;;		_displayL2_Initialize
 24309 ;; This function is called by:
 24310 ;;		_main
 24311 ;; This function uses a non-reentrant model
 24312 ;;
 24313                           
 24314                           
 24315                           ;psect for function _nullifyBadge_platformInit
 24316  1D70                     _nullifyBadge_platformInit:	
 24317                           
 24318                           ;incstack = 0
 24319                           ; Regs used in _nullifyBadge_platformInit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24320                           ;nullifyBadge_platformInit@badge stored from wreg
 24321  1D70  0020               	movlb	0	; select bank0
 24322  1D71  00AC               	movwf	nullifyBadge_platformInit@badge
 24323                           
 24324                           ;nullifyBadge.c: 15: SYSTEM_Initialize();
 24325  1D72  31A7  27BC  319D   	fcall	_SYSTEM_Initialize
 24326                           
 24327                           ;nullifyBadge.c: 16: OSCILLATOR_Initialize();
 24328  1D75  31A4  24F9  319D   	fcall	_OSCILLATOR_Initialize
 24329                           
 24330                           ;nullifyBadge.c: 19: TMR0_Initialize();
 24331  1D78  31A7  2742  319D   	fcall	_TMR0_Initialize
 24332                           
 24333                           ;nullifyBadge.c: 20: TMR2_Initialize();
 24334  1D7B  31A5  2503  319D   	fcall	_TMR2_Initialize
 24335                           
 24336                           ;nullifyBadge.c: 21: TMR4_Initialize();
 24337  1D7E  31A5  252E  319D   	fcall	_TMR4_Initialize
 24338                           
 24339                           ;nullifyBadge.c: 23: PIN_MANAGER_Initialize();
 24340  1D81  319D  251B  319D   	fcall	_PIN_MANAGER_Initialize
 24341                           
 24342                           ;nullifyBadge.c: 24: PWM1_Initialize();
 24343  1D84  31A5  2518  319D   	fcall	_PWM1_Initialize
 24344                           
 24345                           ;nullifyBadge.c: 26: PWM2_Initialize();
 24346  1D87  31A5  2523  319D   	fcall	_PWM2_Initialize
 24347                           
 24348                           ;nullifyBadge.c: 27: PWM5_Initialize();
 24349  1D8A  31A5  2544  319D   	fcall	_PWM5_Initialize
 24350                           
 24351                           ;nullifyBadge.c: 28: PWM6_Initialize();
 24352  1D8D  31A5  2550  319D   	fcall	_PWM6_Initialize
 24353                           
 24354                           ;nullifyBadge.c: 29: SPI1_Initialize();
 24355  1D90  31A4  24D7  319D   	fcall	_SPI1_Initialize
 24356                           
 24357                           ;nullifyBadge.c: 32: PWM1_LoadDutyValue(128);
 24358  1D93  3080               	movlw	128
 24359  1D94  00F1               	movwf	PWM1_LoadDutyValue@dutyValue
 24360  1D95  3000               	movlw	0
 24361  1D96  00F2               	movwf	PWM1_LoadDutyValue@dutyValue+1
 24362  1D97  31A6  265F  319D   	fcall	_PWM1_LoadDutyValue
 24363                           
 24364                           ;nullifyBadge.c: 44: do { LATBbits.LATB7 = 1; } while(0);
 24365  1D9A  0022               	movlb	2	; select bank2
 24366  1D9B  178D               	bsf	13,7	;volatile
 24367                           
 24368                           ;nullifyBadge.c: 45: PWM2_LoadDutyValue(192);
 24369  1D9C  30C0               	movlw	192
 24370  1D9D  00F1               	movwf	PWM2_LoadDutyValue@dutyValue
 24371  1D9E  3000               	movlw	0
 24372  1D9F  00F2               	movwf	PWM2_LoadDutyValue@dutyValue+1
 24373  1DA0  31A6  2675  319D   	fcall	_PWM2_LoadDutyValue
 24374                           
 24375                           ;nullifyBadge.c: 50: PWM5_LoadDutyValue(gamma_table_256x1k[128]);
 24376  1DA3  3000               	movlw	low ((_gamma_table_256x1k+256)| (0+32768))
 24377  1DA4  0084               	movwf	4
 24378  1DA5  3091               	movlw	high ((_gamma_table_256x1k+256)| (0+32768))
 24379  1DA6  0085               	movwf	5
 24380  1DA7  3F00               	moviw [0]fsr0
 24381  1DA8  00F1               	movwf	PWM5_LoadDutyValue@dutyValue
 24382  1DA9  3F01               	moviw [1]fsr0
 24383  1DAA  00F2               	movwf	PWM5_LoadDutyValue@dutyValue+1
 24384  1DAB  31A6  268B  319D   	fcall	_PWM5_LoadDutyValue
 24385                           
 24386                           ;nullifyBadge.c: 51: PWM6_LoadDutyValue(gamma_table_256x1k[128]);
 24387  1DAE  3000               	movlw	low ((_gamma_table_256x1k+256)| (0+32768))
 24388  1DAF  0084               	movwf	4
 24389  1DB0  3091               	movlw	high ((_gamma_table_256x1k+256)| (0+32768))
 24390  1DB1  0085               	movwf	5
 24391  1DB2  3F00               	moviw [0]fsr0
 24392  1DB3  00F1               	movwf	PWM6_LoadDutyValue@dutyValue
 24393  1DB4  3F01               	moviw [1]fsr0
 24394  1DB5  00F2               	movwf	PWM6_LoadDutyValue@dutyValue+1
 24395  1DB6  31A6  26A1  319D   	fcall	_PWM6_LoadDutyValue
 24396                           
 24397                           ;nullifyBadge.c: 54: displayL2_Initialize(&badge->display);
 24398  1DB9  0020               	movlb	0	; select bank0
 24399  1DBA  082C               	movf	nullifyBadge_platformInit@badge,w
 24400  1DBB  31A7  27DD         	fcall	_displayL2_Initialize
 24401                           
 24402                           ;nullifyBadge.c: 57: badge->registeredHw = 0x0;
 24403  1DBD  0020               	movlb	0	; select bank0
 24404  1DBE  082C               	movf	nullifyBadge_platformInit@badge,w
 24405  1DBF  3E11               	addlw	17
 24406  1DC0  0086               	movwf	6
 24407  1DC1  3001               	movlw	1	; select bank2/3
 24408  1DC2  0087               	movwf	7
 24409  1DC3  0181               	clrf	1
 24410  1DC4  0008               	return
 24411  1DC5                     __end_of_nullifyBadge_platformInit:	
 24412                           
 24413                           	psect	text69
 24414  27DD                     __ptext69:	
 24415 ;; *************** function _displayL2_Initialize *****************
 24416 ;; Defined at:
 24417 ;;		line 12 in file "nullifyBadge_displayL2.c"
 24418 ;; Parameters:    Size  Location     Type
 24419 ;;  display         1    wreg     PTR struct t_nullifyDisp
 24420 ;;		 -> badge_inst(18), 
 24421 ;; Auto vars:     Size  Location     Type
 24422 ;;  display         1   11[BANK0 ] PTR struct t_nullifyDisp
 24423 ;;		 -> badge_inst(18), 
 24424 ;; Return value:  Size  Location     Type
 24425 ;;                  1    wreg      void 
 24426 ;; Registers used:
 24427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24428 ;; Tracked objects:
 24429 ;;		On entry : 0/0
 24430 ;;		On exit  : 0/0
 24431 ;;		Unchanged: 0/0
 24432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24436 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24437 ;;Total ram usage:        1 bytes
 24438 ;; Hardware stack levels used:    1
 24439 ;; Hardware stack levels required when called:    8
 24440 ;; This function calls:
 24441 ;;		_displayL1_Initialize
 24442 ;;		_memset
 24443 ;; This function is called by:
 24444 ;;		_nullifyBadge_platformInit
 24445 ;; This function uses a non-reentrant model
 24446 ;;
 24447                           
 24448                           
 24449                           ;psect for function _displayL2_Initialize
 24450  27DD                     _displayL2_Initialize:	
 24451                           
 24452                           ;incstack = 0
 24453                           ; Regs used in _displayL2_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24454                           ;displayL2_Initialize@display stored from wreg
 24455  27DD  0020               	movlb	0	; select bank0
 24456  27DE  00AB               	movwf	displayL2_Initialize@display
 24457                           
 24458                           ;nullifyBadge_displayL2.c: 13: displayL1_Initialize(&display->display_l1);
 24459  27DF  082B               	movf	displayL2_Initialize@display,w
 24460  27E0  3E07               	addlw	7
 24461  27E1  31A5  25E4  31A7   	fcall	_displayL1_Initialize
 24462                           
 24463                           ;nullifyBadge_displayL2.c: 14: memset(display->charVect, ' ', sizeof(display->charVect))
      +                          ;
 24464  27E4  3020               	movlw	32
 24465  27E5  00F1               	movwf	memset@c
 24466  27E6  3000               	movlw	0
 24467  27E7  00F2               	movwf	memset@c+1
 24468  27E8  3004               	movlw	4
 24469  27E9  00F3               	movwf	memset@n
 24470  27EA  3000               	movlw	0
 24471  27EB  00F4               	movwf	memset@n+1
 24472  27EC  0020               	movlb	0	; select bank0
 24473  27ED  082B               	movf	displayL2_Initialize@display,w
 24474  27EE  31A6  26B7         	fcall	_memset
 24475                           
 24476                           ;nullifyBadge_displayL2.c: 15: display->dpVect = 0;
 24477  27F0  0020               	movlb	0	; select bank0
 24478  27F1  082B               	movf	displayL2_Initialize@display,w
 24479  27F2  3E04               	addlw	4
 24480  27F3  0086               	movwf	6
 24481  27F4  3001               	movlw	1	; select bank2/3
 24482  27F5  0087               	movwf	7
 24483  27F6  0181               	clrf	1
 24484                           
 24485                           ;nullifyBadge_displayL2.c: 16: display->ledVect = 0;
 24486  27F7  082B               	movf	displayL2_Initialize@display,w
 24487  27F8  3E05               	addlw	5
 24488  27F9  0086               	movwf	6
 24489  27FA  3001               	movlw	1	; select bank2/3
 24490  27FB  0087               	movwf	7
 24491  27FC  3000               	movlw	0
 24492  27FD  3FC0               	movwi [0]fsr1
 24493  27FE  3FC1               	movwi [1]fsr1
 24494  27FF  0008               	return
 24495  2800                     __end_of_displayL2_Initialize:	
 24496                           
 24497                           	psect	text70
 24498  25E4                     __ptext70:	
 24499 ;; *************** function _displayL1_Initialize *****************
 24500 ;; Defined at:
 24501 ;;		line 13 in file "nullifyBadge_displayL1.c"
 24502 ;; Parameters:    Size  Location     Type
 24503 ;;  display         1    wreg     PTR struct t_nullifyDisp
 24504 ;;		 -> badge_inst(18), 
 24505 ;; Auto vars:     Size  Location     Type
 24506 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 24507 ;;		 -> badge_inst(18), 
 24508 ;; Return value:  Size  Location     Type
 24509 ;;                  1    wreg      void 
 24510 ;; Registers used:
 24511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24512 ;; Tracked objects:
 24513 ;;		On entry : 0/0
 24514 ;;		On exit  : 0/0
 24515 ;;		Unchanged: 0/0
 24516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24521 ;;Total ram usage:        1 bytes
 24522 ;; Hardware stack levels used:    1
 24523 ;; Hardware stack levels required when called:    7
 24524 ;; This function calls:
 24525 ;;		_displayL1_Update
 24526 ;;		_memset
 24527 ;; This function is called by:
 24528 ;;		_displayL2_Initialize
 24529 ;; This function uses a non-reentrant model
 24530 ;;
 24531                           
 24532                           
 24533                           ;psect for function _displayL1_Initialize
 24534  25E4                     _displayL1_Initialize:	
 24535                           
 24536                           ;incstack = 0
 24537                           ; Regs used in _displayL1_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24538                           ;displayL1_Initialize@display stored from wreg
 24539  25E4  00FB               	movwf	displayL1_Initialize@display
 24540                           
 24541                           ;nullifyBadge_displayL1.c: 14: memset(display->displayVect, 0, sizeof(struct t_nullifyDi
      +                          splay_l1));
 24542  25E5  3000               	movlw	0
 24543  25E6  00F1               	movwf	memset@c
 24544  25E7  00F2               	movwf	memset@c+1
 24545  25E8  300A               	movlw	10
 24546  25E9  00F3               	movwf	memset@n
 24547  25EA  3000               	movlw	0
 24548  25EB  00F4               	movwf	memset@n+1
 24549  25EC  087B               	movf	displayL1_Initialize@display,w
 24550  25ED  31A6  26B7  31A5   	fcall	_memset
 24551                           
 24552                           ;nullifyBadge_displayL1.c: 15: displayL1_Update(display);
 24553  25F0  087B               	movf	displayL1_Initialize@display,w
 24554  25F1  31A6  2604         	fcall	_displayL1_Update
 24555  25F3  0008               	return
 24556  25F4                     __end_of_displayL1_Initialize:	
 24557                           
 24558                           	psect	text71
 24559  26B7                     __ptext71:	
 24560 ;; *************** function _memset *****************
 24561 ;; Defined at:
 24562 ;;		line 8 in file "/Applications/microchip/xc8/v1.42/sources/common/memset.c"
 24563 ;; Parameters:    Size  Location     Type
 24564 ;;  p1              1    wreg     PTR void 
 24565 ;;		 -> badge_inst(18), 
 24566 ;;  c               2    1[COMMON] int 
 24567 ;;  n               2    3[COMMON] unsigned int 
 24568 ;; Auto vars:     Size  Location     Type
 24569 ;;  p1              1    7[COMMON] PTR void 
 24570 ;;		 -> badge_inst(18), 
 24571 ;;  p               1    6[COMMON] PTR unsigned char 
 24572 ;;		 -> badge_inst(18), 
 24573 ;; Return value:  Size  Location     Type
 24574 ;;                  1    wreg      PTR void 
 24575 ;; Registers used:
 24576 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24577 ;; Tracked objects:
 24578 ;;		On entry : 0/0
 24579 ;;		On exit  : 0/0
 24580 ;;		Unchanged: 0/0
 24581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24585 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24586 ;;Total ram usage:        7 bytes
 24587 ;; Hardware stack levels used:    1
 24588 ;; Hardware stack levels required when called:    4
 24589 ;; This function calls:
 24590 ;;		Nothing
 24591 ;; This function is called by:
 24592 ;;		_displayL1_Initialize
 24593 ;;		_displayL2_Initialize
 24594 ;; This function uses a non-reentrant model
 24595 ;;
 24596                           
 24597                           
 24598                           ;psect for function _memset
 24599  26B7                     _memset:	
 24600                           
 24601                           ;incstack = 0
 24602                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 24603                           ;memset@p1 stored from wreg
 24604  26B7  00F7               	movwf	memset@p1
 24605  26B8  0877               	movf	memset@p1,w
 24606  26B9  00F5               	movwf	??_memset
 24607  26BA  0875               	movf	??_memset,w
 24608  26BB  00F6               	movwf	memset@p
 24609  26BC                     l6879:	
 24610  26BC  3001               	movlw	1
 24611  26BD  02F3               	subwf	memset@n,f
 24612  26BE  3000               	movlw	0
 24613  26BF  3BF4               	subwfb	memset@n+1,f
 24614  26C0  0A73               	incf	memset@n,w
 24615  26C1  1903               	btfsc	3,2
 24616  26C2  0A74               	incf	memset@n+1,w
 24617  26C3  1903               	btfsc	3,2
 24618  26C4  0008               	return
 24619  26C5  0871               	movf	memset@c,w
 24620  26C6  00F5               	movwf	??_memset
 24621  26C7  0876               	movf	memset@p,w
 24622  26C8  0086               	movwf	6
 24623  26C9  3001               	movlw	1	; select bank2/3
 24624  26CA  0087               	movwf	7
 24625  26CB  0875               	movf	??_memset,w
 24626  26CC  0081               	movwf	1
 24627  26CD  3001               	movlw	1
 24628  26CE  00F5               	movwf	??_memset
 24629  26CF  0875               	movf	??_memset,w
 24630  26D0  07F6               	addwf	memset@p,f
 24631  26D1  2EBC               	goto	l6879
 24632  26D2                     __end_of_memset:	
 24633                           ;	Return value of _memset is never used
 24634                           
 24635                           
 24636                           	psect	text72
 24637  2604                     __ptext72:	
 24638 ;; *************** function _displayL1_Update *****************
 24639 ;; Defined at:
 24640 ;;		line 97 in file "nullifyBadge_displayL1.c"
 24641 ;; Parameters:    Size  Location     Type
 24642 ;;  display         1    wreg     PTR struct t_nullifyDisp
 24643 ;;		 -> badge_inst(18), 
 24644 ;; Auto vars:     Size  Location     Type
 24645 ;;  display         1   10[BANK0 ] PTR struct t_nullifyDisp
 24646 ;;		 -> badge_inst(18), 
 24647 ;;  tmpRxBuf       10    0[BANK0 ] unsigned char [10]
 24648 ;; Return value:  Size  Location     Type
 24649 ;;                  1    wreg      void 
 24650 ;; Registers used:
 24651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24652 ;; Tracked objects:
 24653 ;;		On entry : 0/0
 24654 ;;		On exit  : 0/0
 24655 ;;		Unchanged: 0/0
 24656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24658 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24660 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24661 ;;Total ram usage:       13 bytes
 24662 ;; Hardware stack levels used:    1
 24663 ;; Hardware stack levels required when called:    6
 24664 ;; This function calls:
 24665 ;;		_SPI1_Exchange8bitBuffer
 24666 ;; This function is called by:
 24667 ;;		_displayL1_Initialize
 24668 ;;		_displayL2_ForceUpdate
 24669 ;;		_displayL2_EraseSegDisplay
 24670 ;;		_displayL2_SetUserLeds
 24671 ;;		_displayL2_ClrUserLeds
 24672 ;;		_displayL2_PrintChar
 24673 ;;		_displayL2_PrintStr
 24674 ;; This function uses a non-reentrant model
 24675 ;;
 24676                           
 24677                           
 24678                           ;psect for function _displayL1_Update
 24679  2604                     _displayL1_Update:	
 24680                           
 24681                           ;incstack = 0
 24682                           ; Regs used in _displayL1_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24683                           ;displayL1_Update@display stored from wreg
 24684  2604  0020               	movlb	0	; select bank0
 24685  2605  00AA               	movwf	displayL1_Update@display
 24686                           
 24687                           ;nullifyBadge_displayL1.c: 98: u8 tmpRxBuf[10];
 24688                           ;nullifyBadge_displayL1.c: 100: SPI1_Exchange8bitBuffer(display->displayVect, 10, tmpRxB
      +                          uf);
 24689  2606  300A               	movlw	10
 24690  2607  00F9               	movwf	??_displayL1_Update
 24691  2608  0879               	movf	??_displayL1_Update,w
 24692  2609  00F2               	movwf	SPI1_Exchange8bitBuffer@bufLen
 24693  260A  3020               	movlw	(low (displayL1_Update@tmpRxBuf| 0))& (0+255)
 24694  260B  00FA               	movwf	??_displayL1_Update+1
 24695  260C  087A               	movf	??_displayL1_Update+1,w
 24696  260D  00F3               	movwf	SPI1_Exchange8bitBuffer@dataOut
 24697  260E  082A               	movf	displayL1_Update@display,w
 24698  260F  319C  247B         	fcall	_SPI1_Exchange8bitBuffer
 24699                           
 24700                           ;nullifyBadge_displayL1.c: 101: do { LATCbits.LATC7 = 1; } while(0);
 24701  2611  0022               	movlb	2	; select bank2
 24702  2612  178E               	bsf	14,7	;volatile
 24703                           
 24704                           ;nullifyBadge_displayL1.c: 102: do { LATCbits.LATC7 = 0; } while(0);
 24705  2613  138E               	bcf	14,7	;volatile
 24706  2614  0008               	return
 24707  2615                     __end_of_displayL1_Update:	
 24708                           
 24709                           	psect	text73
 24710  1C7B                     __ptext73:	
 24711 ;; *************** function _SPI1_Exchange8bitBuffer *****************
 24712 ;; Defined at:
 24713 ;;		line 91 in file "mcc_generated_files/spi1.c"
 24714 ;; Parameters:    Size  Location     Type
 24715 ;;  dataIn          1    wreg     PTR unsigned char 
 24716 ;;		 -> badge_inst(18), 
 24717 ;;  bufLen          1    2[COMMON] unsigned char 
 24718 ;;  dataOut         1    3[COMMON] PTR unsigned char 
 24719 ;;		 -> displayL1_Update@tmpRxBuf(10), 
 24720 ;; Auto vars:     Size  Location     Type
 24721 ;;  dataIn          1    7[COMMON] PTR unsigned char 
 24722 ;;		 -> badge_inst(18), 
 24723 ;;  bytesWritten    1    8[COMMON] unsigned char 
 24724 ;; Return value:  Size  Location     Type
 24725 ;;                  1    wreg      unsigned char 
 24726 ;; Registers used:
 24727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24728 ;; Tracked objects:
 24729 ;;		On entry : 0/0
 24730 ;;		On exit  : 0/0
 24731 ;;		Unchanged: 0/0
 24732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24735 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24736 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24737 ;;Total ram usage:        7 bytes
 24738 ;; Hardware stack levels used:    1
 24739 ;; Hardware stack levels required when called:    5
 24740 ;; This function calls:
 24741 ;;		_SPI1_Exchange8bit
 24742 ;; This function is called by:
 24743 ;;		_displayL1_Update
 24744 ;; This function uses a non-reentrant model
 24745 ;;
 24746                           
 24747                           
 24748                           ;psect for function _SPI1_Exchange8bitBuffer
 24749  1C7B                     _SPI1_Exchange8bitBuffer:	
 24750                           
 24751                           ;incstack = 0
 24752                           ; Regs used in _SPI1_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 24753                           ;SPI1_Exchange8bitBuffer@dataIn stored from wreg
 24754  1C7B  00F7               	movwf	SPI1_Exchange8bitBuffer@dataIn
 24755                           
 24756                           ;spi1.c: 93: uint8_t bytesWritten = 0;
 24757  1C7C  01F8               	clrf	SPI1_Exchange8bitBuffer@bytesWritten
 24758                           
 24759                           ;spi1.c: 95: if(bufLen != 0)
 24760  1C7D  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 24761  1C7E  1903               	btfsc	3,2
 24762  1C7F  0008               	return
 24763                           
 24764                           ;spi1.c: 96: {
 24765                           ;spi1.c: 97: if(dataIn != (0))
 24766  1C80  0877               	movf	SPI1_Exchange8bitBuffer@dataIn,w
 24767  1C81  1D03               	btfss	3,2
 24768  1C82  2CAB               	goto	l6499
 24769  1C83  2CB0               	goto	l6501
 24770  1C84                     l6491:	
 24771                           ;spi1.c: 98: {
 24772                           ;spi1.c: 99: while(bytesWritten < bufLen)
 24773                           
 24774                           
 24775                           ;spi1.c: 100: {
 24776                           ;spi1.c: 101: if(dataOut == (0))
 24777  1C84  0873               	movf	SPI1_Exchange8bitBuffer@dataOut,w
 24778  1C85  1D03               	btfss	3,2
 24779  1C86  2C93               	goto	l6495
 24780                           
 24781                           ;spi1.c: 102: {
 24782                           ;spi1.c: 103: SPI1_Exchange8bit(dataIn[bytesWritten]);
 24783  1C87  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24784  1C88  0777               	addwf	SPI1_Exchange8bitBuffer@dataIn,w
 24785  1C89  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24786  1C8A  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24787  1C8B  0086               	movwf	6
 24788  1C8C  3001               	movlw	1	; select bank2/3
 24789  1C8D  0087               	movwf	7
 24790  1C8E  0801               	movf	1,w
 24791  1C8F  31A4  24E7  319C   	fcall	_SPI1_Exchange8bit
 24792                           
 24793                           ;spi1.c: 104: }
 24794  1C92  2CA7               	goto	l6497
 24795  1C93                     l6495:	
 24796                           
 24797                           ;spi1.c: 105: else
 24798                           ;spi1.c: 106: {
 24799                           ;spi1.c: 107: dataOut[bytesWritten] = SPI1_Exchange8bit(dataIn[bytesWritten]);
 24800  1C93  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24801  1C94  0777               	addwf	SPI1_Exchange8bitBuffer@dataIn,w
 24802  1C95  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24803  1C96  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24804  1C97  0086               	movwf	6
 24805  1C98  3001               	movlw	1	; select bank2/3
 24806  1C99  0087               	movwf	7
 24807  1C9A  0801               	movf	1,w
 24808  1C9B  31A4  24E7  319C   	fcall	_SPI1_Exchange8bit
 24809  1C9E  00F5               	movwf	??_SPI1_Exchange8bitBuffer+1
 24810  1C9F  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24811  1CA0  0773               	addwf	SPI1_Exchange8bitBuffer@dataOut,w
 24812  1CA1  00F6               	movwf	??_SPI1_Exchange8bitBuffer+2
 24813  1CA2  0876               	movf	??_SPI1_Exchange8bitBuffer+2,w
 24814  1CA3  0086               	movwf	6
 24815  1CA4  0187               	clrf	7
 24816  1CA5  0875               	movf	??_SPI1_Exchange8bitBuffer+1,w
 24817  1CA6  0081               	movwf	1
 24818  1CA7                     l6497:	
 24819                           
 24820                           ;spi1.c: 108: }
 24821                           ;spi1.c: 110: bytesWritten++;
 24822  1CA7  3001               	movlw	1
 24823  1CA8  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24824  1CA9  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24825  1CAA  07F8               	addwf	SPI1_Exchange8bitBuffer@bytesWritten,f
 24826  1CAB                     l6499:	
 24827  1CAB  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 24828  1CAC  0278               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24829  1CAD  1803               	btfsc	3,0
 24830  1CAE  0008               	return
 24831  1CAF  2C84               	goto	l6491
 24832  1CB0                     l6501:	
 24833                           ;spi1.c: 111: }
 24834                           ;spi1.c: 112: }
 24835                           
 24836                           
 24837                           ;spi1.c: 113: else
 24838                           ;spi1.c: 114: {
 24839                           ;spi1.c: 115: if(dataOut != (0))
 24840  1CB0  0873               	movf	SPI1_Exchange8bitBuffer@dataOut,w
 24841  1CB1  1903               	btfsc	3,2
 24842  1CB2  0008               	return
 24843  1CB3                     l6509:	
 24844  1CB3  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 24845  1CB4  0278               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24846  1CB5  1803               	btfsc	3,0
 24847  1CB6  0008               	return
 24848                           
 24849                           ;spi1.c: 118: {
 24850                           ;spi1.c: 119: dataOut[bytesWritten] = SPI1_Exchange8bit(0x0);
 24851                           
 24852                           ;spi1.c: 116: {
 24853                           ;spi1.c: 117: while(bytesWritten < bufLen )
 24854  1CB7  3000               	movlw	0
 24855  1CB8  31A4  24E7  319C   	fcall	_SPI1_Exchange8bit
 24856  1CBB  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24857  1CBC  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24858  1CBD  0773               	addwf	SPI1_Exchange8bitBuffer@dataOut,w
 24859  1CBE  00F5               	movwf	??_SPI1_Exchange8bitBuffer+1
 24860  1CBF  0875               	movf	??_SPI1_Exchange8bitBuffer+1,w
 24861  1CC0  0086               	movwf	6
 24862  1CC1  0187               	clrf	7
 24863  1CC2  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24864  1CC3  0081               	movwf	1
 24865                           
 24866                           ;spi1.c: 121: bytesWritten++;
 24867  1CC4  3001               	movlw	1
 24868  1CC5  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24869  1CC6  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24870  1CC7  07F8               	addwf	SPI1_Exchange8bitBuffer@bytesWritten,f
 24871  1CC8  2CB3               	goto	l6509
 24872  1CC9                     __end_of_SPI1_Exchange8bitBuffer:	
 24873                           ;spi1.c: 122: }
 24874                           ;spi1.c: 123: }
 24875                           ;spi1.c: 124: }
 24876                           ;spi1.c: 125: }
 24877                           ;spi1.c: 127: return bytesWritten;
 24878                           ;	Return value of _SPI1_Exchange8bitBuffer is never used
 24879                           
 24880                           
 24881                           	psect	text74
 24882  24E7                     __ptext74:	
 24883 ;; *************** function _SPI1_Exchange8bit *****************
 24884 ;; Defined at:
 24885 ;;		line 77 in file "mcc_generated_files/spi1.c"
 24886 ;; Parameters:    Size  Location     Type
 24887 ;;  data            1    wreg     unsigned char 
 24888 ;; Auto vars:     Size  Location     Type
 24889 ;;  data            1    1[COMMON] unsigned char 
 24890 ;; Return value:  Size  Location     Type
 24891 ;;                  1    wreg      unsigned char 
 24892 ;; Registers used:
 24893 ;;		wreg
 24894 ;; Tracked objects:
 24895 ;;		On entry : 0/0
 24896 ;;		On exit  : 0/0
 24897 ;;		Unchanged: 0/0
 24898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24903 ;;Total ram usage:        1 bytes
 24904 ;; Hardware stack levels used:    1
 24905 ;; Hardware stack levels required when called:    4
 24906 ;; This function calls:
 24907 ;;		Nothing
 24908 ;; This function is called by:
 24909 ;;		_SPI1_Exchange8bitBuffer
 24910 ;; This function uses a non-reentrant model
 24911 ;;
 24912                           
 24913                           
 24914                           ;psect for function _SPI1_Exchange8bit
 24915  24E7                     _SPI1_Exchange8bit:	
 24916                           
 24917                           ;incstack = 0
 24918                           ; Regs used in _SPI1_Exchange8bit: [wreg]
 24919                           ;SPI1_Exchange8bit@data stored from wreg
 24920  24E7  00F1               	movwf	SPI1_Exchange8bit@data
 24921                           
 24922                           ;spi1.c: 80: SSP1CON1bits.WCOL = 0;
 24923  24E8  0024               	movlb	4	; select bank4
 24924  24E9  1395               	bcf	21,7	;volatile
 24925                           
 24926                           ;spi1.c: 82: SSP1BUF = data;
 24927  24EA  0871               	movf	SPI1_Exchange8bit@data,w
 24928  24EB  0091               	movwf	17	;volatile
 24929  24EC                     l18:	
 24930                           ;spi1.c: 85: {
 24931                           
 24932                           ;spi1.c: 84: while(SSP1STATbits.BF == 0x0)
 24933                           
 24934  24EC  1C14               	btfss	20,0	;volatile
 24935  24ED  2CEC               	goto	l18
 24936                           
 24937                           ;spi1.c: 86: }
 24938                           ;spi1.c: 88: return (SSP1BUF);
 24939  24EE  0811               	movf	17,w	;volatile
 24940  24EF  0008               	return
 24941  24F0                     __end_of_SPI1_Exchange8bit:	
 24942                           
 24943                           	psect	text75
 24944  27BC                     __ptext75:	
 24945 ;; *************** function _SYSTEM_Initialize *****************
 24946 ;; Defined at:
 24947 ;;		line 76 in file "mcc_generated_files/mcc.c"
 24948 ;; Parameters:    Size  Location     Type
 24949 ;;		None
 24950 ;; Auto vars:     Size  Location     Type
 24951 ;;		None
 24952 ;; Return value:  Size  Location     Type
 24953 ;;                  1    wreg      void 
 24954 ;; Registers used:
 24955 ;;		wreg, status,2, status,0, pclath, cstack
 24956 ;; Tracked objects:
 24957 ;;		On entry : 0/0
 24958 ;;		On exit  : 0/0
 24959 ;;		Unchanged: 0/0
 24960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24965 ;;Total ram usage:        0 bytes
 24966 ;; Hardware stack levels used:    1
 24967 ;; Hardware stack levels required when called:    6
 24968 ;; This function calls:
 24969 ;;		_OSCILLATOR_Initialize
 24970 ;;		_PIN_MANAGER_Initialize
 24971 ;;		_PWM1_Initialize
 24972 ;;		_PWM2_Initialize
 24973 ;;		_PWM5_Initialize
 24974 ;;		_PWM6_Initialize
 24975 ;;		_SPI1_Initialize
 24976 ;;		_TMR0_Initialize
 24977 ;;		_TMR2_Initialize
 24978 ;;		_TMR4_Initialize
 24979 ;;		_WDT_Initialize
 24980 ;; This function is called by:
 24981 ;;		_nullifyBadge_platformInit
 24982 ;; This function uses a non-reentrant model
 24983 ;;
 24984                           
 24985                           
 24986                           ;psect for function _SYSTEM_Initialize
 24987  27BC                     _SYSTEM_Initialize:	
 24988                           
 24989                           ;mcc.c: 79: PIN_MANAGER_Initialize();
 24990                           
 24991                           ;incstack = 0
 24992                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 24993  27BC  319D  251B  31A7   	fcall	_PIN_MANAGER_Initialize
 24994                           
 24995                           ;mcc.c: 80: OSCILLATOR_Initialize();
 24996  27BF  31A4  24F9  31A7   	fcall	_OSCILLATOR_Initialize
 24997                           
 24998                           ;mcc.c: 81: WDT_Initialize();
 24999  27C2  31A4  24B5  31A7   	fcall	_WDT_Initialize
 25000                           
 25001                           ;mcc.c: 82: SPI1_Initialize();
 25002  27C5  31A4  24D7  31A7   	fcall	_SPI1_Initialize
 25003                           
 25004                           ;mcc.c: 83: PWM6_Initialize();
 25005  27C8  31A5  2550  31A7   	fcall	_PWM6_Initialize
 25006                           
 25007                           ;mcc.c: 84: PWM1_Initialize();
 25008  27CB  31A5  2518  31A7   	fcall	_PWM1_Initialize
 25009                           
 25010                           ;mcc.c: 85: PWM2_Initialize();
 25011  27CE  31A5  2523  31A7   	fcall	_PWM2_Initialize
 25012                           
 25013                           ;mcc.c: 86: TMR4_Initialize();
 25014  27D1  31A5  252E  31A7   	fcall	_TMR4_Initialize
 25015                           
 25016                           ;mcc.c: 87: TMR2_Initialize();
 25017  27D4  31A5  2503  31A7   	fcall	_TMR2_Initialize
 25018                           
 25019                           ;mcc.c: 88: PWM5_Initialize();
 25020  27D7  31A5  2544  31A7   	fcall	_PWM5_Initialize
 25021                           
 25022                           ;mcc.c: 89: TMR0_Initialize();
 25023  27DA  31A7  2742         	fcall	_TMR0_Initialize
 25024  27DC  0008               	return
 25025  27DD                     __end_of_SYSTEM_Initialize:	
 25026                           
 25027                           	psect	text76
 25028  24B5                     __ptext76:	
 25029 ;; *************** function _WDT_Initialize *****************
 25030 ;; Defined at:
 25031 ;;		line 110 in file "mcc_generated_files/mcc.c"
 25032 ;; Parameters:    Size  Location     Type
 25033 ;;		None
 25034 ;; Auto vars:     Size  Location     Type
 25035 ;;		None
 25036 ;; Return value:  Size  Location     Type
 25037 ;;                  1    wreg      void 
 25038 ;; Registers used:
 25039 ;;		wreg
 25040 ;; Tracked objects:
 25041 ;;		On entry : 0/0
 25042 ;;		On exit  : 0/0
 25043 ;;		Unchanged: 0/0
 25044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25049 ;;Total ram usage:        0 bytes
 25050 ;; Hardware stack levels used:    1
 25051 ;; Hardware stack levels required when called:    4
 25052 ;; This function calls:
 25053 ;;		Nothing
 25054 ;; This function is called by:
 25055 ;;		_SYSTEM_Initialize
 25056 ;; This function uses a non-reentrant model
 25057 ;;
 25058                           
 25059                           
 25060                           ;psect for function _WDT_Initialize
 25061  24B5                     _WDT_Initialize:	
 25062                           
 25063                           ;mcc.c: 113: WDTCON = 0x16;
 25064                           
 25065                           ;incstack = 0
 25066                           ; Regs used in _WDT_Initialize: [wreg]
 25067  24B5  3016               	movlw	22
 25068  24B6  0021               	movlb	1	; select bank1
 25069  24B7  0097               	movwf	23	;volatile
 25070  24B8  0008               	return
 25071  24B9                     __end_of_WDT_Initialize:	
 25072                           
 25073                           	psect	text77
 25074  252E                     __ptext77:	
 25075 ;; *************** function _TMR4_Initialize *****************
 25076 ;; Defined at:
 25077 ;;		line 63 in file "mcc_generated_files/tmr4.c"
 25078 ;; Parameters:    Size  Location     Type
 25079 ;;		None
 25080 ;; Auto vars:     Size  Location     Type
 25081 ;;		None
 25082 ;; Return value:  Size  Location     Type
 25083 ;;                  1    wreg      void 
 25084 ;; Registers used:
 25085 ;;		wreg, status,2, status,0, pclath, cstack
 25086 ;; Tracked objects:
 25087 ;;		On entry : 0/0
 25088 ;;		On exit  : 0/0
 25089 ;;		Unchanged: 0/0
 25090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25095 ;;Total ram usage:        0 bytes
 25096 ;; Hardware stack levels used:    1
 25097 ;; Hardware stack levels required when called:    5
 25098 ;; This function calls:
 25099 ;;		_TMR4_StartTimer
 25100 ;; This function is called by:
 25101 ;;		_SYSTEM_Initialize
 25102 ;;		_nullifyBadge_platformInit
 25103 ;; This function uses a non-reentrant model
 25104 ;;
 25105                           
 25106                           
 25107                           ;psect for function _TMR4_Initialize
 25108  252E                     _TMR4_Initialize:	
 25109                           
 25110                           ;tmr4.c: 68: T4CON = 0x7B;
 25111                           
 25112                           ;incstack = 0
 25113                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 25114  252E  307B               	movlw	123
 25115  252F  0028               	movlb	8	; select bank8
 25116  2530  0097               	movwf	23	;volatile
 25117                           
 25118                           ;tmr4.c: 71: PR4 = 0xFF;
 25119  2531  30FF               	movlw	255
 25120  2532  0096               	movwf	22	;volatile
 25121                           
 25122                           ;tmr4.c: 74: TMR4 = 0x00;
 25123  2533  0195               	clrf	21	;volatile
 25124                           
 25125                           ;tmr4.c: 77: PIR2bits.TMR4IF = 0;
 25126  2534  0020               	movlb	0	; select bank0
 25127  2535  1092               	bcf	18,1	;volatile
 25128                           
 25129                           ;tmr4.c: 80: TMR4_StartTimer();
 25130  2536  31A4  24AC         	fcall	_TMR4_StartTimer
 25131  2538  0008               	return
 25132  2539                     __end_of_TMR4_Initialize:	
 25133                           
 25134                           	psect	text78
 25135  24AC                     __ptext78:	
 25136 ;; *************** function _TMR4_StartTimer *****************
 25137 ;; Defined at:
 25138 ;;		line 83 in file "mcc_generated_files/tmr4.c"
 25139 ;; Parameters:    Size  Location     Type
 25140 ;;		None
 25141 ;; Auto vars:     Size  Location     Type
 25142 ;;		None
 25143 ;; Return value:  Size  Location     Type
 25144 ;;                  1    wreg      void 
 25145 ;; Registers used:
 25146 ;;		None
 25147 ;; Tracked objects:
 25148 ;;		On entry : 0/0
 25149 ;;		On exit  : 0/0
 25150 ;;		Unchanged: 0/0
 25151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25156 ;;Total ram usage:        0 bytes
 25157 ;; Hardware stack levels used:    1
 25158 ;; Hardware stack levels required when called:    4
 25159 ;; This function calls:
 25160 ;;		Nothing
 25161 ;; This function is called by:
 25162 ;;		_TMR4_Initialize
 25163 ;; This function uses a non-reentrant model
 25164 ;;
 25165                           
 25166                           
 25167                           ;psect for function _TMR4_StartTimer
 25168  24AC                     _TMR4_StartTimer:	
 25169                           
 25170                           ;tmr4.c: 86: T4CONbits.TMR4ON = 1;
 25171                           
 25172                           ;incstack = 0
 25173                           ; Regs used in _TMR4_StartTimer: []
 25174  24AC  0028               	movlb	8	; select bank8
 25175  24AD  1517               	bsf	23,2	;volatile
 25176  24AE  0008               	return
 25177  24AF                     __end_of_TMR4_StartTimer:	
 25178                           
 25179                           	psect	text79
 25180  2503                     __ptext79:	
 25181 ;; *************** function _TMR2_Initialize *****************
 25182 ;; Defined at:
 25183 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 25184 ;; Parameters:    Size  Location     Type
 25185 ;;		None
 25186 ;; Auto vars:     Size  Location     Type
 25187 ;;		None
 25188 ;; Return value:  Size  Location     Type
 25189 ;;                  1    wreg      void 
 25190 ;; Registers used:
 25191 ;;		wreg, status,2, status,0, pclath, cstack
 25192 ;; Tracked objects:
 25193 ;;		On entry : 0/0
 25194 ;;		On exit  : 0/0
 25195 ;;		Unchanged: 0/0
 25196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25201 ;;Total ram usage:        0 bytes
 25202 ;; Hardware stack levels used:    1
 25203 ;; Hardware stack levels required when called:    5
 25204 ;; This function calls:
 25205 ;;		_TMR2_StartTimer
 25206 ;; This function is called by:
 25207 ;;		_SYSTEM_Initialize
 25208 ;;		_nullifyBadge_platformInit
 25209 ;; This function uses a non-reentrant model
 25210 ;;
 25211                           
 25212                           
 25213                           ;psect for function _TMR2_Initialize
 25214  2503                     _TMR2_Initialize:	
 25215                           
 25216                           ;tmr2.c: 68: T2CON = 0x01;
 25217                           
 25218                           ;incstack = 0
 25219                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 25220  2503  3001               	movlw	1
 25221  2504  0020               	movlb	0	; select bank0
 25222  2505  009F               	movwf	31	;volatile
 25223                           
 25224                           ;tmr2.c: 71: PR2 = 0x4A;
 25225  2506  304A               	movlw	74
 25226  2507  009E               	movwf	30	;volatile
 25227                           
 25228                           ;tmr2.c: 74: TMR2 = 0x00;
 25229  2508  019D               	clrf	29	;volatile
 25230                           
 25231                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 25232  2509  1091               	bcf	17,1	;volatile
 25233                           
 25234                           ;tmr2.c: 80: TMR2_StartTimer();
 25235  250A  31A4  24A9         	fcall	_TMR2_StartTimer
 25236  250C  0008               	return
 25237  250D                     __end_of_TMR2_Initialize:	
 25238                           
 25239                           	psect	text80
 25240  24A9                     __ptext80:	
 25241 ;; *************** function _TMR2_StartTimer *****************
 25242 ;; Defined at:
 25243 ;;		line 83 in file "mcc_generated_files/tmr2.c"
 25244 ;; Parameters:    Size  Location     Type
 25245 ;;		None
 25246 ;; Auto vars:     Size  Location     Type
 25247 ;;		None
 25248 ;; Return value:  Size  Location     Type
 25249 ;;                  1    wreg      void 
 25250 ;; Registers used:
 25251 ;;		None
 25252 ;; Tracked objects:
 25253 ;;		On entry : 0/0
 25254 ;;		On exit  : 0/0
 25255 ;;		Unchanged: 0/0
 25256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25261 ;;Total ram usage:        0 bytes
 25262 ;; Hardware stack levels used:    1
 25263 ;; Hardware stack levels required when called:    4
 25264 ;; This function calls:
 25265 ;;		Nothing
 25266 ;; This function is called by:
 25267 ;;		_TMR2_Initialize
 25268 ;; This function uses a non-reentrant model
 25269 ;;
 25270                           
 25271                           
 25272                           ;psect for function _TMR2_StartTimer
 25273  24A9                     _TMR2_StartTimer:	
 25274                           
 25275                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
 25276                           
 25277                           ;incstack = 0
 25278                           ; Regs used in _TMR2_StartTimer: []
 25279  24A9  0020               	movlb	0	; select bank0
 25280  24AA  151F               	bsf	31,2	;volatile
 25281  24AB  0008               	return
 25282  24AC                     __end_of_TMR2_StartTimer:	
 25283                           
 25284                           	psect	text81
 25285  2742                     __ptext81:	
 25286 ;; *************** function _TMR0_Initialize *****************
 25287 ;; Defined at:
 25288 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 25289 ;; Parameters:    Size  Location     Type
 25290 ;;		None
 25291 ;; Auto vars:     Size  Location     Type
 25292 ;;		None
 25293 ;; Return value:  Size  Location     Type
 25294 ;;                  1    wreg      void 
 25295 ;; Registers used:
 25296 ;;		wreg, status,2, status,0, pclath, cstack
 25297 ;; Tracked objects:
 25298 ;;		On entry : 0/0
 25299 ;;		On exit  : 0/0
 25300 ;;		Unchanged: 0/0
 25301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25306 ;;Total ram usage:        0 bytes
 25307 ;; Hardware stack levels used:    1
 25308 ;; Hardware stack levels required when called:    5
 25309 ;; This function calls:
 25310 ;;		_TMR0_SetInterruptHandler
 25311 ;;		_TMR0_StartTimer
 25312 ;; This function is called by:
 25313 ;;		_SYSTEM_Initialize
 25314 ;;		_nullifyBadge_platformInit
 25315 ;; This function uses a non-reentrant model
 25316 ;;
 25317                           
 25318                           
 25319                           ;psect for function _TMR0_Initialize
 25320  2742                     _TMR0_Initialize:	
 25321                           
 25322                           ;tmr0.c: 70: T0CON0 = 0x10;
 25323                           
 25324                           ;incstack = 0
 25325                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 25326  2742  3010               	movlw	16
 25327  2743  0020               	movlb	0	; select bank0
 25328  2744  0097               	movwf	23	;volatile
 25329                           
 25330                           ;tmr0.c: 73: T0CON1 = 0x4D;
 25331  2745  304D               	movlw	77
 25332  2746  0098               	movwf	24	;volatile
 25333                           
 25334                           ;tmr0.c: 76: TMR0H = 0xFF;
 25335  2747  30FF               	movlw	255
 25336  2748  0096               	movwf	22	;volatile
 25337                           
 25338                           ;tmr0.c: 79: TMR0L = 0xFF;
 25339  2749  30FF               	movlw	255
 25340  274A  0095               	movwf	21	;volatile
 25341                           
 25342                           ;tmr0.c: 82: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 25343  274B  0816               	movf	22,w	;volatile
 25344  274C  0021               	movlb	1	; select bank1
 25345  274D  00BD               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
 25346  274E  0020               	movlb	0	; select bank0
 25347  274F  0815               	movf	21,w	;volatile
 25348  2750  0021               	movlb	1	; select bank1
 25349  2751  00BC               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
 25350                           
 25351                           ;tmr0.c: 85: PIR0bits.TMR0IF = 0;
 25352  2752  0020               	movlb	0	; select bank0
 25353  2753  1290               	bcf	16,5	;volatile
 25354                           
 25355                           ;tmr0.c: 88: PIE0bits.TMR0IE = 1;
 25356  2754  0021               	movlb	1	; select bank1
 25357  2755  1690               	bsf	16,5	;volatile
 25358                           
 25359                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 25360  2756  3003               	movlw	low _TMR0_DefaultInterruptHandler
 25361  2757  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 25362  2758  3000               	movlw	high _TMR0_DefaultInterruptHandler
 25363  2759  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 25364  275A  31A4  24B9  31A7   	fcall	_TMR0_SetInterruptHandler
 25365                           
 25366                           ;tmr0.c: 94: TMR0_StartTimer();
 25367  275D  31A4  24A6         	fcall	_TMR0_StartTimer
 25368  275F  0008               	return
 25369  2760                     __end_of_TMR0_Initialize:	
 25370                           
 25371                           	psect	text82
 25372  24A6                     __ptext82:	
 25373 ;; *************** function _TMR0_StartTimer *****************
 25374 ;; Defined at:
 25375 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 25376 ;; Parameters:    Size  Location     Type
 25377 ;;		None
 25378 ;; Auto vars:     Size  Location     Type
 25379 ;;		None
 25380 ;; Return value:  Size  Location     Type
 25381 ;;                  1    wreg      void 
 25382 ;; Registers used:
 25383 ;;		None
 25384 ;; Tracked objects:
 25385 ;;		On entry : 0/0
 25386 ;;		On exit  : 0/0
 25387 ;;		Unchanged: 0/0
 25388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25393 ;;Total ram usage:        0 bytes
 25394 ;; Hardware stack levels used:    1
 25395 ;; Hardware stack levels required when called:    4
 25396 ;; This function calls:
 25397 ;;		Nothing
 25398 ;; This function is called by:
 25399 ;;		_TMR0_Initialize
 25400 ;; This function uses a non-reentrant model
 25401 ;;
 25402                           
 25403                           
 25404                           ;psect for function _TMR0_StartTimer
 25405  24A6                     _TMR0_StartTimer:	
 25406                           
 25407                           ;tmr0.c: 100: T0CON0bits.T0EN = 1;
 25408                           
 25409                           ;incstack = 0
 25410                           ; Regs used in _TMR0_StartTimer: []
 25411  24A6  0020               	movlb	0	; select bank0
 25412  24A7  1797               	bsf	23,7	;volatile
 25413  24A8  0008               	return
 25414  24A9                     __end_of_TMR0_StartTimer:	
 25415                           
 25416                           	psect	text83
 25417  24B9                     __ptext83:	
 25418 ;; *************** function _TMR0_SetInterruptHandler *****************
 25419 ;; Defined at:
 25420 ;;		line 161 in file "mcc_generated_files/tmr0.c"
 25421 ;; Parameters:    Size  Location     Type
 25422 ;;  InterruptHan    2    1[COMMON] PTR void 
 25423 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 25424 ;; Auto vars:     Size  Location     Type
 25425 ;;		None
 25426 ;; Return value:  Size  Location     Type
 25427 ;;                  1    wreg      void 
 25428 ;; Registers used:
 25429 ;;		wreg
 25430 ;; Tracked objects:
 25431 ;;		On entry : 0/0
 25432 ;;		On exit  : 0/0
 25433 ;;		Unchanged: 0/0
 25434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25439 ;;Total ram usage:        2 bytes
 25440 ;; Hardware stack levels used:    1
 25441 ;; Hardware stack levels required when called:    4
 25442 ;; This function calls:
 25443 ;;		Nothing
 25444 ;; This function is called by:
 25445 ;;		_TMR0_Initialize
 25446 ;; This function uses a non-reentrant model
 25447 ;;
 25448                           
 25449                           
 25450                           ;psect for function _TMR0_SetInterruptHandler
 25451  24B9                     _TMR0_SetInterruptHandler:	
 25452                           
 25453                           ;tmr0.c: 162: TMR0_InterruptHandler = InterruptHandler;
 25454                           
 25455                           ;incstack = 0
 25456                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 25457  24B9  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 25458  24BA  0021               	movlb	1	; select bank1
 25459  24BB  00BB               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 25460  24BC  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 25461  24BD  00BA               	movwf	_TMR0_InterruptHandler^(0+128)
 25462  24BE  0008               	return
 25463  24BF                     __end_of_TMR0_SetInterruptHandler:	
 25464                           
 25465                           	psect	text84
 25466  24D7                     __ptext84:	
 25467 ;; *************** function _SPI1_Initialize *****************
 25468 ;; Defined at:
 25469 ;;		line 63 in file "mcc_generated_files/spi1.c"
 25470 ;; Parameters:    Size  Location     Type
 25471 ;;		None
 25472 ;; Auto vars:     Size  Location     Type
 25473 ;;		None
 25474 ;; Return value:  Size  Location     Type
 25475 ;;                  1    wreg      void 
 25476 ;; Registers used:
 25477 ;;		wreg
 25478 ;; Tracked objects:
 25479 ;;		On entry : 0/0
 25480 ;;		On exit  : 0/0
 25481 ;;		Unchanged: 0/0
 25482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25487 ;;Total ram usage:        0 bytes
 25488 ;; Hardware stack levels used:    1
 25489 ;; Hardware stack levels required when called:    4
 25490 ;; This function calls:
 25491 ;;		Nothing
 25492 ;; This function is called by:
 25493 ;;		_SYSTEM_Initialize
 25494 ;;		_nullifyBadge_platformInit
 25495 ;; This function uses a non-reentrant model
 25496 ;;
 25497                           
 25498                           
 25499                           ;psect for function _SPI1_Initialize
 25500  24D7                     _SPI1_Initialize:	
 25501                           
 25502                           ;spi1.c: 68: SSP1STAT = 0x40;
 25503                           
 25504                           ;incstack = 0
 25505                           ; Regs used in _SPI1_Initialize: [wreg]
 25506  24D7  3040               	movlw	64
 25507  24D8  0024               	movlb	4	; select bank4
 25508  24D9  0094               	movwf	20	;volatile
 25509                           
 25510                           ;spi1.c: 71: SSP1CON1 = 0x22;
 25511  24DA  3022               	movlw	34
 25512  24DB  0095               	movwf	21	;volatile
 25513                           
 25514                           ;spi1.c: 74: SSP1ADD = 0x01;
 25515  24DC  3001               	movlw	1
 25516  24DD  0092               	movwf	18	;volatile
 25517  24DE  0008               	return
 25518  24DF                     __end_of_SPI1_Initialize:	
 25519                           
 25520                           	psect	text85
 25521  2550                     __ptext85:	
 25522 ;; *************** function _PWM6_Initialize *****************
 25523 ;; Defined at:
 25524 ;;		line 57 in file "mcc_generated_files/pwm6.c"
 25525 ;; Parameters:    Size  Location     Type
 25526 ;;		None
 25527 ;; Auto vars:     Size  Location     Type
 25528 ;;		None
 25529 ;; Return value:  Size  Location     Type
 25530 ;;                  1    wreg      void 
 25531 ;; Registers used:
 25532 ;;		wreg, status,2, status,0
 25533 ;; Tracked objects:
 25534 ;;		On entry : 0/0
 25535 ;;		On exit  : 0/0
 25536 ;;		Unchanged: 0/0
 25537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25542 ;;Total ram usage:        0 bytes
 25543 ;; Hardware stack levels used:    1
 25544 ;; Hardware stack levels required when called:    4
 25545 ;; This function calls:
 25546 ;;		Nothing
 25547 ;; This function is called by:
 25548 ;;		_SYSTEM_Initialize
 25549 ;;		_nullifyBadge_platformInit
 25550 ;; This function uses a non-reentrant model
 25551 ;;
 25552                           
 25553                           
 25554                           ;psect for function _PWM6_Initialize
 25555  2550                     _PWM6_Initialize:	
 25556                           
 25557                           ;pwm6.c: 61: PWM6CON = 0x90;
 25558                           
 25559                           ;incstack = 0
 25560                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 25561  2550  3090               	movlw	144
 25562  2551  002C               	movlb	12	; select bank12
 25563  2552  009C               	movwf	28	;volatile
 25564                           
 25565                           ;pwm6.c: 64: PWM6DCH = 0x7F;
 25566  2553  307F               	movlw	127
 25567  2554  009B               	movwf	27	;volatile
 25568                           
 25569                           ;pwm6.c: 67: PWM6DCL = 0xC0;
 25570  2555  30C0               	movlw	192
 25571  2556  009A               	movwf	26	;volatile
 25572                           
 25573                           ;pwm6.c: 71: PWMTMRSbits.P6TSEL = 0x2;
 25574  2557  081F               	movf	31,w	;volatile
 25575  2558  39F3               	andlw	-13
 25576  2559  3808               	iorlw	8
 25577  255A  009F               	movwf	31	;volatile
 25578  255B  0008               	return
 25579  255C                     __end_of_PWM6_Initialize:	
 25580                           
 25581                           	psect	text86
 25582  2544                     __ptext86:	
 25583 ;; *************** function _PWM5_Initialize *****************
 25584 ;; Defined at:
 25585 ;;		line 57 in file "mcc_generated_files/pwm5.c"
 25586 ;; Parameters:    Size  Location     Type
 25587 ;;		None
 25588 ;; Auto vars:     Size  Location     Type
 25589 ;;		None
 25590 ;; Return value:  Size  Location     Type
 25591 ;;                  1    wreg      void 
 25592 ;; Registers used:
 25593 ;;		wreg, status,2, status,0
 25594 ;; Tracked objects:
 25595 ;;		On entry : 0/0
 25596 ;;		On exit  : 0/0
 25597 ;;		Unchanged: 0/0
 25598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25603 ;;Total ram usage:        0 bytes
 25604 ;; Hardware stack levels used:    1
 25605 ;; Hardware stack levels required when called:    4
 25606 ;; This function calls:
 25607 ;;		Nothing
 25608 ;; This function is called by:
 25609 ;;		_SYSTEM_Initialize
 25610 ;;		_nullifyBadge_platformInit
 25611 ;; This function uses a non-reentrant model
 25612 ;;
 25613                           
 25614                           
 25615                           ;psect for function _PWM5_Initialize
 25616  2544                     _PWM5_Initialize:	
 25617                           
 25618                           ;pwm5.c: 61: PWM5CON = 0x90;
 25619                           
 25620                           ;incstack = 0
 25621                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 25622  2544  3090               	movlw	144
 25623  2545  002C               	movlb	12	; select bank12
 25624  2546  0099               	movwf	25	;volatile
 25625                           
 25626                           ;pwm5.c: 64: PWM5DCH = 0x7F;
 25627  2547  307F               	movlw	127
 25628  2548  0098               	movwf	24	;volatile
 25629                           
 25630                           ;pwm5.c: 67: PWM5DCL = 0xC0;
 25631  2549  30C0               	movlw	192
 25632  254A  0097               	movwf	23	;volatile
 25633                           
 25634                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 0x2;
 25635  254B  081F               	movf	31,w	;volatile
 25636  254C  39FC               	andlw	-4
 25637  254D  3802               	iorlw	2
 25638  254E  009F               	movwf	31	;volatile
 25639  254F  0008               	return
 25640  2550                     __end_of_PWM5_Initialize:	
 25641                           
 25642                           	psect	text87
 25643  2523                     __ptext87:	
 25644 ;; *************** function _PWM2_Initialize *****************
 25645 ;; Defined at:
 25646 ;;		line 63 in file "mcc_generated_files/pwm2.c"
 25647 ;; Parameters:    Size  Location     Type
 25648 ;;		None
 25649 ;; Auto vars:     Size  Location     Type
 25650 ;;		None
 25651 ;; Return value:  Size  Location     Type
 25652 ;;                  1    wreg      void 
 25653 ;; Registers used:
 25654 ;;		wreg, status,2, status,0
 25655 ;; Tracked objects:
 25656 ;;		On entry : 0/0
 25657 ;;		On exit  : 0/0
 25658 ;;		Unchanged: 0/0
 25659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25664 ;;Total ram usage:        0 bytes
 25665 ;; Hardware stack levels used:    1
 25666 ;; Hardware stack levels required when called:    4
 25667 ;; This function calls:
 25668 ;;		Nothing
 25669 ;; This function is called by:
 25670 ;;		_SYSTEM_Initialize
 25671 ;;		_nullifyBadge_platformInit
 25672 ;; This function uses a non-reentrant model
 25673 ;;
 25674                           
 25675                           
 25676                           ;psect for function _PWM2_Initialize
 25677  2523                     _PWM2_Initialize:	
 25678                           
 25679                           ;pwm2.c: 68: CCP2CON = 0x8F;
 25680                           
 25681                           ;incstack = 0
 25682                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 25683  2523  308F               	movlw	143
 25684  2524  0025               	movlb	5	; select bank5
 25685  2525  0097               	movwf	23	;volatile
 25686                           
 25687                           ;pwm2.c: 71: CCPR2H = 0x00;
 25688  2526  0196               	clrf	22	;volatile
 25689                           
 25690                           ;pwm2.c: 74: CCPR2L = 0xE0;
 25691  2527  30E0               	movlw	224
 25692  2528  0095               	movwf	21	;volatile
 25693                           
 25694                           ;pwm2.c: 77: CCPTMRSbits.C2TSEL = 0x1;
 25695  2529  081F               	movf	31,w	;volatile
 25696  252A  39F3               	andlw	-13
 25697  252B  3804               	iorlw	4
 25698  252C  009F               	movwf	31	;volatile
 25699  252D  0008               	return
 25700  252E                     __end_of_PWM2_Initialize:	
 25701                           
 25702                           	psect	text88
 25703  2518                     __ptext88:	
 25704 ;; *************** function _PWM1_Initialize *****************
 25705 ;; Defined at:
 25706 ;;		line 63 in file "mcc_generated_files/pwm1.c"
 25707 ;; Parameters:    Size  Location     Type
 25708 ;;		None
 25709 ;; Auto vars:     Size  Location     Type
 25710 ;;		None
 25711 ;; Return value:  Size  Location     Type
 25712 ;;                  1    wreg      void 
 25713 ;; Registers used:
 25714 ;;		wreg, status,2, status,0
 25715 ;; Tracked objects:
 25716 ;;		On entry : 0/0
 25717 ;;		On exit  : 0/0
 25718 ;;		Unchanged: 0/0
 25719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25724 ;;Total ram usage:        0 bytes
 25725 ;; Hardware stack levels used:    1
 25726 ;; Hardware stack levels required when called:    4
 25727 ;; This function calls:
 25728 ;;		Nothing
 25729 ;; This function is called by:
 25730 ;;		_SYSTEM_Initialize
 25731 ;;		_nullifyBadge_platformInit
 25732 ;; This function uses a non-reentrant model
 25733 ;;
 25734                           
 25735                           
 25736                           ;psect for function _PWM1_Initialize
 25737  2518                     _PWM1_Initialize:	
 25738                           
 25739                           ;pwm1.c: 68: CCP1CON = 0x8F;
 25740                           
 25741                           ;incstack = 0
 25742                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 25743  2518  308F               	movlw	143
 25744  2519  0025               	movlb	5	; select bank5
 25745  251A  0093               	movwf	19	;volatile
 25746                           
 25747                           ;pwm1.c: 71: CCPR1H = 0x00;
 25748  251B  0192               	clrf	18	;volatile
 25749                           
 25750                           ;pwm1.c: 74: CCPR1L = 0x95;
 25751  251C  3095               	movlw	149
 25752  251D  0091               	movwf	17	;volatile
 25753                           
 25754                           ;pwm1.c: 77: CCPTMRSbits.C1TSEL = 0x1;
 25755  251E  081F               	movf	31,w	;volatile
 25756  251F  39FC               	andlw	-4
 25757  2520  3801               	iorlw	1
 25758  2521  009F               	movwf	31	;volatile
 25759  2522  0008               	return
 25760  2523                     __end_of_PWM1_Initialize:	
 25761                           
 25762                           	psect	text89
 25763  1D1B                     __ptext89:	
 25764 ;; *************** function _PIN_MANAGER_Initialize *****************
 25765 ;; Defined at:
 25766 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 25767 ;; Parameters:    Size  Location     Type
 25768 ;;		None
 25769 ;; Auto vars:     Size  Location     Type
 25770 ;;  state           1    1[COMMON] unsigned char 
 25771 ;; Return value:  Size  Location     Type
 25772 ;;                  1    wreg      void 
 25773 ;; Registers used:
 25774 ;;		wreg, status,2, status,0
 25775 ;; Tracked objects:
 25776 ;;		On entry : 0/0
 25777 ;;		On exit  : 0/0
 25778 ;;		Unchanged: 0/0
 25779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25784 ;;Total ram usage:        1 bytes
 25785 ;; Hardware stack levels used:    1
 25786 ;; Hardware stack levels required when called:    4
 25787 ;; This function calls:
 25788 ;;		Nothing
 25789 ;; This function is called by:
 25790 ;;		_SYSTEM_Initialize
 25791 ;;		_nullifyBadge_platformInit
 25792 ;; This function uses a non-reentrant model
 25793 ;;
 25794                           
 25795                           
 25796                           ;psect for function _PIN_MANAGER_Initialize
 25797  1D1B                     _PIN_MANAGER_Initialize:	
 25798                           
 25799                           ;pin_manager.c: 56: LATA = 0x00;
 25800                           
 25801                           ;incstack = 0
 25802                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 25803  1D1B  0022               	movlb	2	; select bank2
 25804  1D1C  018C               	clrf	12	;volatile
 25805                           
 25806                           ;pin_manager.c: 57: LATB = 0x80;
 25807  1D1D  3080               	movlw	128
 25808  1D1E  008D               	movwf	13	;volatile
 25809                           
 25810                           ;pin_manager.c: 58: LATC = 0x1A;
 25811  1D1F  301A               	movlw	26
 25812  1D20  008E               	movwf	14	;volatile
 25813                           
 25814                           ;pin_manager.c: 63: TRISA = 0x37;
 25815  1D21  3037               	movlw	55
 25816  1D22  0021               	movlb	1	; select bank1
 25817  1D23  008C               	movwf	12	;volatile
 25818                           
 25819                           ;pin_manager.c: 64: TRISB = 0x30;
 25820  1D24  3030               	movlw	48
 25821  1D25  008D               	movwf	13	;volatile
 25822                           
 25823                           ;pin_manager.c: 65: TRISC = 0x60;
 25824  1D26  3060               	movlw	96
 25825  1D27  008E               	movwf	14	;volatile
 25826                           
 25827                           ;pin_manager.c: 70: ANSELC = 0x40;
 25828  1D28  3040               	movlw	64
 25829  1D29  0023               	movlb	3	; select bank3
 25830  1D2A  008E               	movwf	14	;volatile
 25831                           
 25832                           ;pin_manager.c: 71: ANSELB = 0x00;
 25833  1D2B  018D               	clrf	13	;volatile
 25834                           
 25835                           ;pin_manager.c: 72: ANSELA = 0x03;
 25836  1D2C  3003               	movlw	3
 25837  1D2D  008C               	movwf	12	;volatile
 25838                           
 25839                           ;pin_manager.c: 77: WPUB = 0x00;
 25840  1D2E  0024               	movlb	4	; select bank4
 25841  1D2F  018D               	clrf	13	;volatile
 25842                           
 25843                           ;pin_manager.c: 78: WPUA = 0x00;
 25844  1D30  018C               	clrf	12	;volatile
 25845                           
 25846                           ;pin_manager.c: 79: WPUC = 0x00;
 25847  1D31  018E               	clrf	14	;volatile
 25848                           
 25849                           ;pin_manager.c: 84: ODCONA = 0x00;
 25850  1D32  0025               	movlb	5	; select bank5
 25851  1D33  018C               	clrf	12	;volatile
 25852                           
 25853                           ;pin_manager.c: 85: ODCONB = 0x00;
 25854  1D34  018D               	clrf	13	;volatile
 25855                           
 25856                           ;pin_manager.c: 86: ODCONC = 0x00;
 25857  1D35  018E               	clrf	14	;volatile
 25858                           
 25859                           ;pin_manager.c: 93: bool state = GIE;
 25860  1D36  3000               	movlw	0
 25861  1D37  1B8B               	btfsc	11,7	;volatile
 25862  1D38  3001               	movlw	1
 25863  1D39  00F1               	movwf	PIN_MANAGER_Initialize@state
 25864                           
 25865                           ;pin_manager.c: 94: GIE = 0;
 25866  1D3A  138B               	bcf	11,7	;volatile
 25867                           
 25868                           ;pin_manager.c: 95: PPSLOCK = 0x55;
 25869  1D3B  3055               	movlw	85
 25870  1D3C  003C               	movlb	28	; select bank28
 25871  1D3D  008F               	movwf	15	;volatile
 25872                           
 25873                           ;pin_manager.c: 96: PPSLOCK = 0xAA;
 25874  1D3E  30AA               	movlw	170
 25875  1D3F  008F               	movwf	15	;volatile
 25876                           
 25877                           ;pin_manager.c: 97: PPSLOCKbits.PPSLOCKED = 0x00;
 25878  1D40  100F               	bcf	15,0	;volatile
 25879                           
 25880                           ;pin_manager.c: 99: RC1PPSbits.RC1PPS = 0x0D;
 25881  1D41  003D               	movlb	29	; select bank29
 25882  1D42  0821               	movf	33,w	;volatile
 25883  1D43  39E0               	andlw	-32
 25884  1D44  380D               	iorlw	13
 25885  1D45  00A1               	movwf	33	;volatile
 25886                           
 25887                           ;pin_manager.c: 100: SSP1DATPPSbits.SSP1DATPPS = 0x0C;
 25888  1D46  003C               	movlb	28	; select bank28
 25889  1D47  0821               	movf	33,w	;volatile
 25890  1D48  39E0               	andlw	-32
 25891  1D49  380C               	iorlw	12
 25892  1D4A  00A1               	movwf	33	;volatile
 25893                           
 25894                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 25895  1D4B  0820               	movf	32,w	;volatile
 25896  1D4C  39E0               	andlw	-32
 25897  1D4D  380E               	iorlw	14
 25898  1D4E  00A0               	movwf	32	;volatile
 25899                           
 25900                           ;pin_manager.c: 102: RC4PPSbits.RC4PPS = 0x02;
 25901  1D4F  003D               	movlb	29	; select bank29
 25902  1D50  0824               	movf	36,w	;volatile
 25903  1D51  39E0               	andlw	-32
 25904  1D52  3802               	iorlw	2
 25905  1D53  00A4               	movwf	36	;volatile
 25906                           
 25907                           ;pin_manager.c: 103: RC0PPSbits.RC0PPS = 0x0C;
 25908  1D54  0820               	movf	32,w	;volatile
 25909  1D55  39E0               	andlw	-32
 25910  1D56  380C               	iorlw	12
 25911  1D57  00A0               	movwf	32	;volatile
 25912                           
 25913                           ;pin_manager.c: 104: RC3PPSbits.RC3PPS = 0x03;
 25914  1D58  0823               	movf	35,w	;volatile
 25915  1D59  39E0               	andlw	-32
 25916  1D5A  3803               	iorlw	3
 25917  1D5B  00A3               	movwf	35	;volatile
 25918                           
 25919                           ;pin_manager.c: 105: RB6PPSbits.RB6PPS = 0x18;
 25920  1D5C  081E               	movf	30,w	;volatile
 25921  1D5D  39E0               	andlw	-32
 25922  1D5E  3818               	iorlw	24
 25923  1D5F  009E               	movwf	30	;volatile
 25924                           
 25925                           ;pin_manager.c: 106: RC2PPSbits.RC2PPS = 0x19;
 25926  1D60  0822               	movf	34,w	;volatile
 25927  1D61  39E0               	andlw	-32
 25928  1D62  3819               	iorlw	25
 25929  1D63  00A2               	movwf	34	;volatile
 25930                           
 25931                           ;pin_manager.c: 108: PPSLOCK = 0x55;
 25932  1D64  3055               	movlw	85
 25933  1D65  003C               	movlb	28	; select bank28
 25934  1D66  008F               	movwf	15	;volatile
 25935                           
 25936                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
 25937  1D67  30AA               	movlw	170
 25938  1D68  008F               	movwf	15	;volatile
 25939                           
 25940                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x01;
 25941  1D69  140F               	bsf	15,0	;volatile
 25942                           
 25943                           ;pin_manager.c: 112: GIE = state;
 25944  1D6A  1C71               	btfss	PIN_MANAGER_Initialize@state,0
 25945  1D6B  2D6E               	goto	u4420
 25946  1D6C  178B               	bsf	11,7	;volatile
 25947  1D6D  0008               	return
 25948  1D6E                     u4420:	
 25949  1D6E  138B               	bcf	11,7	;volatile
 25950  1D6F  0008               	return
 25951  1D70                     __end_of_PIN_MANAGER_Initialize:	
 25952                           
 25953                           	psect	text90
 25954  24F9                     __ptext90:	
 25955 ;; *************** function _OSCILLATOR_Initialize *****************
 25956 ;; Defined at:
 25957 ;;		line 92 in file "mcc_generated_files/mcc.c"
 25958 ;; Parameters:    Size  Location     Type
 25959 ;;		None
 25960 ;; Auto vars:     Size  Location     Type
 25961 ;;		None
 25962 ;; Return value:  Size  Location     Type
 25963 ;;                  1    wreg      void 
 25964 ;; Registers used:
 25965 ;;		wreg, status,2
 25966 ;; Tracked objects:
 25967 ;;		On entry : 0/0
 25968 ;;		On exit  : 0/0
 25969 ;;		Unchanged: 0/0
 25970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25975 ;;Total ram usage:        0 bytes
 25976 ;; Hardware stack levels used:    1
 25977 ;; Hardware stack levels required when called:    4
 25978 ;; This function calls:
 25979 ;;		Nothing
 25980 ;; This function is called by:
 25981 ;;		_SYSTEM_Initialize
 25982 ;;		_nullifyBadge_platformInit
 25983 ;; This function uses a non-reentrant model
 25984 ;;
 25985                           
 25986                           
 25987                           ;psect for function _OSCILLATOR_Initialize
 25988  24F9                     _OSCILLATOR_Initialize:	
 25989                           
 25990                           ;mcc.c: 95: OSCCON1 = 0x00;
 25991                           
 25992                           ;incstack = 0
 25993                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 25994  24F9  0032               	movlb	18	; select bank18
 25995  24FA  0199               	clrf	25	;volatile
 25996                           
 25997                           ;mcc.c: 97: OSCCON3 = 0x00;
 25998  24FB  019B               	clrf	27	;volatile
 25999                           
 26000                           ;mcc.c: 99: OSCEN = 0x00;
 26001  24FC  019D               	clrf	29	;volatile
 26002                           
 26003                           ;mcc.c: 101: OSCFRQ = 0x06;
 26004  24FD  3006               	movlw	6
 26005  24FE  009F               	movwf	31	;volatile
 26006                           
 26007                           ;mcc.c: 103: OSCTUNE = 0x00;
 26008  24FF  019E               	clrf	30	;volatile
 26009  2500                     l208:	
 26010                           ;mcc.c: 106: {
 26011                           
 26012                           ;mcc.c: 105: while(PLLR == 0)
 26013                           
 26014  2500  181C               	btfsc	28,0	;volatile
 26015  2501  0008               	return
 26016  2502  2D00               	goto	l208
 26017  2503                     __end_of_OSCILLATOR_Initialize:	
 26018                           
 26019                           	psect	text91
 26020  26A1                     __ptext91:	
 26021 ;; *************** function _PWM6_LoadDutyValue *****************
 26022 ;; Defined at:
 26023 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 26024 ;; Parameters:    Size  Location     Type
 26025 ;;  dutyValue       2    1[COMMON] unsigned int 
 26026 ;; Auto vars:     Size  Location     Type
 26027 ;;		None
 26028 ;; Return value:  Size  Location     Type
 26029 ;;                  1    wreg      void 
 26030 ;; Registers used:
 26031 ;;		wreg, status,2, status,0
 26032 ;; Tracked objects:
 26033 ;;		On entry : 0/0
 26034 ;;		On exit  : 0/0
 26035 ;;		Unchanged: 0/0
 26036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26041 ;;Total ram usage:        4 bytes
 26042 ;; Hardware stack levels used:    1
 26043 ;; Hardware stack levels required when called:    4
 26044 ;; This function calls:
 26045 ;;		Nothing
 26046 ;; This function is called by:
 26047 ;;		_nullifyBadge_platformInit
 26048 ;;		_nullifyBadge_userLedsSetBrightness
 26049 ;; This function uses a non-reentrant model
 26050 ;;
 26051                           
 26052                           
 26053                           ;psect for function _PWM6_LoadDutyValue
 26054  26A1                     _PWM6_LoadDutyValue:	
 26055                           
 26056                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 26057                           
 26058                           ;incstack = 0
 26059                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 26060  26A1  0872               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 26061  26A2  00F4               	movwf	??_PWM6_LoadDutyValue+1
 26062  26A3  0871               	movf	PWM6_LoadDutyValue@dutyValue,w
 26063  26A4  00F3               	movwf	??_PWM6_LoadDutyValue
 26064  26A5  36F4               	lsrf	??_PWM6_LoadDutyValue+1,f
 26065  26A6  0CF3               	rrf	??_PWM6_LoadDutyValue,f
 26066  26A7  36F4               	lsrf	??_PWM6_LoadDutyValue+1,f
 26067  26A8  0CF3               	rrf	??_PWM6_LoadDutyValue,f
 26068  26A9  0873               	movf	??_PWM6_LoadDutyValue,w
 26069  26AA  002C               	movlb	12	; select bank12
 26070  26AB  009B               	movwf	27	;volatile
 26071                           
 26072                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 26073  26AC  0871               	movf	PWM6_LoadDutyValue@dutyValue,w
 26074  26AD  3903               	andlw	3
 26075  26AE  00F3               	movwf	??_PWM6_LoadDutyValue
 26076  26AF  3005               	movlw	5
 26077  26B0                     u5055:	
 26078  26B0  35F3               	lslf	??_PWM6_LoadDutyValue,f
 26079  26B1  3EFF               	addlw	-1
 26080  26B2  1D03               	skipz
 26081  26B3  2EB0               	goto	u5055
 26082  26B4  3573               	lslf	??_PWM6_LoadDutyValue,w
 26083  26B5  009A               	movwf	26	;volatile
 26084  26B6  0008               	return
 26085  26B7                     __end_of_PWM6_LoadDutyValue:	
 26086                           
 26087                           	psect	text92
 26088  268B                     __ptext92:	
 26089 ;; *************** function _PWM5_LoadDutyValue *****************
 26090 ;; Defined at:
 26091 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 26092 ;; Parameters:    Size  Location     Type
 26093 ;;  dutyValue       2    1[COMMON] unsigned int 
 26094 ;; Auto vars:     Size  Location     Type
 26095 ;;		None
 26096 ;; Return value:  Size  Location     Type
 26097 ;;                  1    wreg      void 
 26098 ;; Registers used:
 26099 ;;		wreg, status,2, status,0
 26100 ;; Tracked objects:
 26101 ;;		On entry : 0/0
 26102 ;;		On exit  : 0/0
 26103 ;;		Unchanged: 0/0
 26104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26109 ;;Total ram usage:        4 bytes
 26110 ;; Hardware stack levels used:    1
 26111 ;; Hardware stack levels required when called:    4
 26112 ;; This function calls:
 26113 ;;		Nothing
 26114 ;; This function is called by:
 26115 ;;		_nullifyBadge_platformInit
 26116 ;;		_fadeDisplay_Init
 26117 ;;		_nullifyBadge_segDisplaySetBrightness
 26118 ;; This function uses a non-reentrant model
 26119 ;;
 26120                           
 26121                           
 26122                           ;psect for function _PWM5_LoadDutyValue
 26123  268B                     _PWM5_LoadDutyValue:	
 26124                           
 26125                           ;pwm5.c: 77: PWM5DCH = (dutyValue & 0x03FC)>>2;
 26126                           
 26127                           ;incstack = 0
 26128                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 26129  268B  0872               	movf	PWM5_LoadDutyValue@dutyValue+1,w
 26130  268C  00F4               	movwf	??_PWM5_LoadDutyValue+1
 26131  268D  0871               	movf	PWM5_LoadDutyValue@dutyValue,w
 26132  268E  00F3               	movwf	??_PWM5_LoadDutyValue
 26133  268F  36F4               	lsrf	??_PWM5_LoadDutyValue+1,f
 26134  2690  0CF3               	rrf	??_PWM5_LoadDutyValue,f
 26135  2691  36F4               	lsrf	??_PWM5_LoadDutyValue+1,f
 26136  2692  0CF3               	rrf	??_PWM5_LoadDutyValue,f
 26137  2693  0873               	movf	??_PWM5_LoadDutyValue,w
 26138  2694  002C               	movlb	12	; select bank12
 26139  2695  0098               	movwf	24	;volatile
 26140                           
 26141                           ;pwm5.c: 80: PWM5DCL = (dutyValue & 0x0003)<<6;
 26142  2696  0871               	movf	PWM5_LoadDutyValue@dutyValue,w
 26143  2697  3903               	andlw	3
 26144  2698  00F3               	movwf	??_PWM5_LoadDutyValue
 26145  2699  3005               	movlw	5
 26146  269A                     u5045:	
 26147  269A  35F3               	lslf	??_PWM5_LoadDutyValue,f
 26148  269B  3EFF               	addlw	-1
 26149  269C  1D03               	skipz
 26150  269D  2E9A               	goto	u5045
 26151  269E  3573               	lslf	??_PWM5_LoadDutyValue,w
 26152  269F  0097               	movwf	23	;volatile
 26153  26A0  0008               	return
 26154  26A1                     __end_of_PWM5_LoadDutyValue:	
 26155                           
 26156                           	psect	text93
 26157  2675                     __ptext93:	
 26158 ;; *************** function _PWM2_LoadDutyValue *****************
 26159 ;; Defined at:
 26160 ;;		line 80 in file "mcc_generated_files/pwm2.c"
 26161 ;; Parameters:    Size  Location     Type
 26162 ;;  dutyValue       2    1[COMMON] unsigned int 
 26163 ;; Auto vars:     Size  Location     Type
 26164 ;;		None
 26165 ;; Return value:  Size  Location     Type
 26166 ;;                  1    wreg      void 
 26167 ;; Registers used:
 26168 ;;		wreg, status,2
 26169 ;; Tracked objects:
 26170 ;;		On entry : 0/0
 26171 ;;		On exit  : 0/0
 26172 ;;		Unchanged: 0/0
 26173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26178 ;;Total ram usage:        2 bytes
 26179 ;; Hardware stack levels used:    1
 26180 ;; Hardware stack levels required when called:    4
 26181 ;; This function calls:
 26182 ;;		Nothing
 26183 ;; This function is called by:
 26184 ;;		_nullifyBadge_platformInit
 26185 ;; This function uses a non-reentrant model
 26186 ;;
 26187                           
 26188                           
 26189                           ;psect for function _PWM2_LoadDutyValue
 26190  2675                     _PWM2_LoadDutyValue:	
 26191                           
 26192                           ;pwm2.c: 82: dutyValue &= 0x03FF;
 26193                           
 26194                           ;incstack = 0
 26195                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 26196  2675  30FF               	movlw	255
 26197  2676  05F1               	andwf	PWM2_LoadDutyValue@dutyValue,f
 26198  2677  3003               	movlw	3
 26199  2678  05F2               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 26200                           
 26201                           ;pwm2.c: 85: if(CCP2CONbits.CCP2FMT)
 26202  2679  0025               	movlb	5	; select bank5
 26203  267A  1E17               	btfss	23,4	;volatile
 26204  267B  2E86               	goto	l8049
 26205                           
 26206                           ;pwm2.c: 86: {
 26207                           ;pwm2.c: 87: dutyValue <<= 6;
 26208  267C  3006               	movlw	6
 26209  267D                     u5095:	
 26210  267D  35F1               	lslf	PWM2_LoadDutyValue@dutyValue,f
 26211  267E  0DF2               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 26212  267F  0B89               	decfsz	9,f
 26213  2680  2E7D               	goto	u5095
 26214                           
 26215                           ;pwm2.c: 88: CCPR2H = dutyValue >> 8;
 26216  2681  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 26217  2682  0096               	movwf	22	;volatile
 26218                           
 26219                           ;pwm2.c: 89: CCPR2L = dutyValue;
 26220  2683  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
 26221  2684  0095               	movwf	21	;volatile
 26222                           
 26223                           ;pwm2.c: 90: }
 26224  2685  0008               	return
 26225  2686                     l8049:	
 26226                           
 26227                           ;pwm2.c: 91: else
 26228                           ;pwm2.c: 92: {
 26229                           ;pwm2.c: 93: CCPR2H = dutyValue >> 8;
 26230  2686  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 26231  2687  0096               	movwf	22	;volatile
 26232                           
 26233                           ;pwm2.c: 94: CCPR2L = dutyValue;
 26234  2688  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
 26235  2689  0095               	movwf	21	;volatile
 26236  268A  0008               	return
 26237  268B                     __end_of_PWM2_LoadDutyValue:	
 26238                           
 26239                           	psect	text94
 26240  265F                     __ptext94:	
 26241 ;; *************** function _PWM1_LoadDutyValue *****************
 26242 ;; Defined at:
 26243 ;;		line 80 in file "mcc_generated_files/pwm1.c"
 26244 ;; Parameters:    Size  Location     Type
 26245 ;;  dutyValue       2    1[COMMON] unsigned int 
 26246 ;; Auto vars:     Size  Location     Type
 26247 ;;		None
 26248 ;; Return value:  Size  Location     Type
 26249 ;;                  1    wreg      void 
 26250 ;; Registers used:
 26251 ;;		wreg, status,2
 26252 ;; Tracked objects:
 26253 ;;		On entry : 0/0
 26254 ;;		On exit  : 0/0
 26255 ;;		Unchanged: 0/0
 26256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26261 ;;Total ram usage:        2 bytes
 26262 ;; Hardware stack levels used:    1
 26263 ;; Hardware stack levels required when called:    4
 26264 ;; This function calls:
 26265 ;;		Nothing
 26266 ;; This function is called by:
 26267 ;;		_nullifyBadge_platformInit
 26268 ;; This function uses a non-reentrant model
 26269 ;;
 26270                           
 26271                           
 26272                           ;psect for function _PWM1_LoadDutyValue
 26273  265F                     _PWM1_LoadDutyValue:	
 26274                           
 26275                           ;pwm1.c: 82: dutyValue &= 0x03FF;
 26276                           
 26277                           ;incstack = 0
 26278                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 26279  265F  30FF               	movlw	255
 26280  2660  05F1               	andwf	PWM1_LoadDutyValue@dutyValue,f
 26281  2661  3003               	movlw	3
 26282  2662  05F2               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 26283                           
 26284                           ;pwm1.c: 85: if(CCP1CONbits.CCP1FMT)
 26285  2663  0025               	movlb	5	; select bank5
 26286  2664  1E13               	btfss	19,4	;volatile
 26287  2665  2E70               	goto	l8033
 26288                           
 26289                           ;pwm1.c: 86: {
 26290                           ;pwm1.c: 87: dutyValue <<= 6;
 26291  2666  3006               	movlw	6
 26292  2667                     u5075:	
 26293  2667  35F1               	lslf	PWM1_LoadDutyValue@dutyValue,f
 26294  2668  0DF2               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 26295  2669  0B89               	decfsz	9,f
 26296  266A  2E67               	goto	u5075
 26297                           
 26298                           ;pwm1.c: 88: CCPR1H = dutyValue >> 8;
 26299  266B  0872               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 26300  266C  0092               	movwf	18	;volatile
 26301                           
 26302                           ;pwm1.c: 89: CCPR1L = dutyValue;
 26303  266D  0871               	movf	PWM1_LoadDutyValue@dutyValue,w
 26304  266E  0091               	movwf	17	;volatile
 26305                           
 26306                           ;pwm1.c: 90: }
 26307  266F  0008               	return
 26308  2670                     l8033:	
 26309                           
 26310                           ;pwm1.c: 91: else
 26311                           ;pwm1.c: 92: {
 26312                           ;pwm1.c: 93: CCPR1H = dutyValue >> 8;
 26313  2670  0872               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 26314  2671  0092               	movwf	18	;volatile
 26315                           
 26316                           ;pwm1.c: 94: CCPR1L = dutyValue;
 26317  2672  0871               	movf	PWM1_LoadDutyValue@dutyValue,w
 26318  2673  0091               	movwf	17	;volatile
 26319  2674  0008               	return
 26320  2675                     __end_of_PWM1_LoadDutyValue:	
 26321                           
 26322                           	psect	intentry
 26323  0004                     __pintentry:	
 26324 ;; *************** function _INTERRUPT_InterruptManager *****************
 26325 ;; Defined at:
 26326 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 26327 ;; Parameters:    Size  Location     Type
 26328 ;;		None
 26329 ;; Auto vars:     Size  Location     Type
 26330 ;;		None
 26331 ;; Return value:  Size  Location     Type
 26332 ;;                  1    wreg      void 
 26333 ;; Registers used:
 26334 ;;		wreg, status,2, status,0, pclath, cstack
 26335 ;; Tracked objects:
 26336 ;;		On entry : 0/0
 26337 ;;		On exit  : 0/0
 26338 ;;		Unchanged: 0/0
 26339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26344 ;;Total ram usage:        1 bytes
 26345 ;; Hardware stack levels used:    1
 26346 ;; Hardware stack levels required when called:    3
 26347 ;; This function calls:
 26348 ;;		_TMR0_ISR
 26349 ;; This function is called by:
 26350 ;;		Interrupt level 1
 26351 ;; This function uses a non-reentrant model
 26352 ;;
 26353                           
 26354  0004                     _INTERRUPT_InterruptManager:	
 26355                           
 26356                           ;incstack = 0
 26357  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 26358                           
 26359                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 26360  0005  3180               	pagesel	$
 26361  0006  0020               	movlb	0	; select bank0
 26362  0007  087F               	movf	127,w
 26363  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
 26364                           
 26365                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 26366  0009  0021               	movlb	1	; select bank1
 26367  000A  1E90               	btfss	16,5	;volatile
 26368  000B  2811               	goto	i1l363
 26369  000C  0020               	movlb	0	; select bank0
 26370  000D  1E90               	btfss	16,5	;volatile
 26371  000E  2811               	goto	i1l363
 26372                           
 26373                           ;interrupt_manager.c: 55: {
 26374                           ;interrupt_manager.c: 56: TMR0_ISR();
 26375  000F  31A5  2574         	fcall	_TMR0_ISR
 26376  0011                     i1l363:	
 26377                           ;interrupt_manager.c: 58: else
 26378                           ;interrupt_manager.c: 59: {
 26379                           
 26380                           ;interrupt_manager.c: 57: }
 26381                           
 26382  0011  0870               	movf	??_INTERRUPT_InterruptManager,w
 26383  0012  0020               	movlb	0	; select bank0
 26384  0013  00FF               	movwf	127
 26385  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 26386  0015  0009               	retfie
 26387  0016                     __end_of_INTERRUPT_InterruptManager:	
 26388                           
 26389                           	psect	text96
 26390  2574                     __ptext96:	
 26391 ;; *************** function _TMR0_ISR *****************
 26392 ;; Defined at:
 26393 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 26394 ;; Parameters:    Size  Location     Type
 26395 ;;		None
 26396 ;; Auto vars:     Size  Location     Type
 26397 ;;		None
 26398 ;; Return value:  Size  Location     Type
 26399 ;;                  1    wreg      void 
 26400 ;; Registers used:
 26401 ;;		wreg, status,2, status,0, pclath, cstack
 26402 ;; Tracked objects:
 26403 ;;		On entry : 0/0
 26404 ;;		On exit  : 0/0
 26405 ;;		Unchanged: 0/0
 26406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26411 ;;Total ram usage:        0 bytes
 26412 ;; Hardware stack levels used:    1
 26413 ;; Hardware stack levels required when called:    2
 26414 ;; This function calls:
 26415 ;;		_TMR0_CallBack
 26416 ;; This function is called by:
 26417 ;;		_INTERRUPT_InterruptManager
 26418 ;; This function uses a non-reentrant model
 26419 ;;
 26420                           
 26421                           
 26422                           ;psect for function _TMR0_ISR
 26423  2574                     _TMR0_ISR:	
 26424                           
 26425                           ;tmr0.c: 139: PIR0bits.TMR0IF = 0;
 26426                           
 26427                           ;incstack = 0
 26428                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 26429  2574  0020               	movlb	0	; select bank0
 26430  2575  1290               	bcf	16,5	;volatile
 26431                           
 26432                           ;tmr0.c: 141: TMR0H = timer0ReloadVal16bit >> 8;
 26433  2576  0021               	movlb	1	; select bank1
 26434  2577  083D               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
 26435  2578  0020               	movlb	0	; select bank0
 26436  2579  0096               	movwf	22	;volatile
 26437                           
 26438                           ;tmr0.c: 142: TMR0L = (uint8_t) timer0ReloadVal16bit;
 26439  257A  0021               	movlb	1	; select bank1
 26440  257B  083C               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
 26441  257C  0020               	movlb	0	; select bank0
 26442  257D  0095               	movwf	21	;volatile
 26443                           
 26444                           ;tmr0.c: 146: TMR0_CallBack();
 26445  257E  31A5  250D         	fcall	_TMR0_CallBack
 26446  2580  0008               	return
 26447  2581                     __end_of_TMR0_ISR:	
 26448                           
 26449                           	psect	text97
 26450  250D                     __ptext97:	
 26451 ;; *************** function _TMR0_CallBack *****************
 26452 ;; Defined at:
 26453 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 26454 ;; Parameters:    Size  Location     Type
 26455 ;;		None
 26456 ;; Auto vars:     Size  Location     Type
 26457 ;;		None
 26458 ;; Return value:  Size  Location     Type
 26459 ;;                  1    wreg      void 
 26460 ;; Registers used:
 26461 ;;		wreg, status,2, status,0, pclath, cstack
 26462 ;; Tracked objects:
 26463 ;;		On entry : 0/0
 26464 ;;		On exit  : 0/0
 26465 ;;		Unchanged: 0/0
 26466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26471 ;;Total ram usage:        0 bytes
 26472 ;; Hardware stack levels used:    1
 26473 ;; Hardware stack levels required when called:    1
 26474 ;; This function calls:
 26475 ;;		Absolute function
 26476 ;;		_TMR0_DefaultInterruptHandler
 26477 ;; This function is called by:
 26478 ;;		_TMR0_ISR
 26479 ;; This function uses a non-reentrant model
 26480 ;;
 26481                           
 26482                           
 26483                           ;psect for function _TMR0_CallBack
 26484  250D                     _TMR0_CallBack:	
 26485                           
 26486                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
 26487                           
 26488                           ;incstack = 0
 26489                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 26490  250D  0021               	movlb	1	; select bank1
 26491  250E  083A               	movf	_TMR0_InterruptHandler^(0+128),w
 26492  250F  043B               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 26493  2510  1903               	btfsc	3,2
 26494  2511  0008               	return
 26495                           
 26496                           ;tmr0.c: 156: {
 26497                           ;tmr0.c: 157: TMR0_InterruptHandler();
 26498  2512  083B               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 26499  2513  008A               	movwf	10
 26500  2514  083A               	movf	_TMR0_InterruptHandler^(0+128),w
 26501  2515  000A               	callw
 26502  2516  31A5               	pagesel	$
 26503  2517  0008               	return
 26504  2518                     __end_of_TMR0_CallBack:	
 26505                           
 26506                           	psect	text98
 26507  0003                     __ptext98:	
 26508 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 26509 ;; Defined at:
 26510 ;;		line 165 in file "mcc_generated_files/tmr0.c"
 26511 ;; Parameters:    Size  Location     Type
 26512 ;;		None
 26513 ;; Auto vars:     Size  Location     Type
 26514 ;;		None
 26515 ;; Return value:  Size  Location     Type
 26516 ;;                  1    wreg      void 
 26517 ;; Registers used:
 26518 ;;		None
 26519 ;; Tracked objects:
 26520 ;;		On entry : 0/0
 26521 ;;		On exit  : 0/0
 26522 ;;		Unchanged: 0/0
 26523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26528 ;;Total ram usage:        0 bytes
 26529 ;; Hardware stack levels used:    1
 26530 ;; This function calls:
 26531 ;;		Nothing
 26532 ;; This function is called by:
 26533 ;;		_TMR0_Initialize
 26534 ;;		_TMR0_CallBack
 26535 ;; This function uses a non-reentrant model
 26536 ;;
 26537                           
 26538                           
 26539                           ;psect for function _TMR0_DefaultInterruptHandler
 26540  0003                     _TMR0_DefaultInterruptHandler:	
 26541                           
 26542                           ;incstack = 0
 26543                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 26544  0003  0008               	return
 26545  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 26546  007E                     btemp	set	126	;btemp
 26547  007E                     int$flags	set	126
 26548  007E                     wtemp0	set	126


Data Sizes:
    Strings     408
    Constant    522
    Data        471
    BSS         240
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80      1      78
    BANK2            80      0      70
    BANK3            80      0      61
    BANK4            80      0      76
    BANK5            80      0      56
    BANK6            80      0      56
    BANK7            80      0      58
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           16      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    menu_run_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    schedulerInst.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    schedulerInst.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    schedulerInst.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    schedulerInst.tasks.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    schedulerExecute$3565	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    secret_check@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S902$3$0	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S902$2$0	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S902$4$0	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_30(CODE[5]), secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), STR_29(CODE[5]), 
		 -> STR_28(CODE[5]), STR_27(CODE[11]), STR_26(CODE[13]), STR_23(CODE[43]), 
		 -> STR_22(CODE[40]), STR_21(CODE[27]), STR_20(CODE[25]), STR_19(CODE[30]), 
		 -> STR_18(CODE[35]), STR_17(CODE[22]), STR_16(CODE[26]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), 
		 -> STR_10(CODE[5]), STR_9(CODE[18]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_30(CODE[5]), secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), STR_29(CODE[5]), 
		 -> STR_28(CODE[5]), STR_27(CODE[11]), STR_26(CODE[13]), STR_23(CODE[43]), 
		 -> STR_22(CODE[40]), STR_21(CODE[27]), STR_20(CODE[25]), STR_19(CODE[30]), 
		 -> STR_18(CODE[35]), STR_17(CODE[22]), STR_16(CODE[26]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), 
		 -> STR_10(CODE[5]), STR_9(CODE[18]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), 

    memset@p1	PTR void  size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    memset@p	PTR unsigned char  size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_25(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> flashy_Main@hit_counter(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    slot_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_Main@data	PTR struct t_slot_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_Init@data	PTR struct t_slot_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_clear@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Main@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_check@inputs	PTR unsigned char  size(1) Largest target is 26
		 -> secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), 

    secret_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Init@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S2683secret_input$variable	PTR unsigned int  size(1) Largest target is 2
		 -> secret_value(BANK1[2]), 

    secret_inputs.variable	PTR unsigned int  size(1) Largest target is 2
		 -> secret_value(BANK1[2]), 

    locked_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_clear@data	PTR struct t_locked_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Main@data	PTR struct t_locked_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Init@data	PTR struct t_locked_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Main@data	PTR struct t_flashy_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_display_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_display_option@data	PTR struct t_flashy_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Init@data	PTR struct t_flashy_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_option	PTR unsigned char [14] size(2) Largest target is 43
		 -> STR_23(CODE[43]), STR_22(CODE[40]), STR_21(CODE[27]), STR_20(CODE[25]), 
		 -> STR_19(CODE[30]), STR_18(CODE[35]), STR_17(CODE[22]), STR_16(CODE[26]), 
		 -> STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[8]), 
		 -> STR_11(CODE[9]), STR_10(CODE[5]), 

    FLASHY_TEXT_SECRET_TEST	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_9(CODE[18]), 

    FLASHY_TEXT	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    menu_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_clear@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_run_option@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_display_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_display_option@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Main@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Init@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_option	PTR unsigned char [4] size(2) Largest target is 10
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    displayL2_ClrUserLeds@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_SetUserLeds@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_EraseSegDisplay@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_ForceUpdate@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_PutStr@str	PTR unsigned char  size(2) Largest target is 43
		 -> flashy_Main@hit_counter(BANK0[6]), STR_24(CODE[5]), STR_23(CODE[43]), STR_22(CODE[40]), 
		 -> STR_21(CODE[27]), STR_20(CODE[25]), STR_19(CODE[30]), STR_18(CODE[35]), 
		 -> STR_17(CODE[22]), STR_16(CODE[26]), STR_15(CODE[21]), STR_14(CODE[19]), 
		 -> STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), marquee@display_string(BANK0[5]), marquee_speedy@display_string(BANK0[5]), 

    displayL2_PutStr@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_PutChar@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_Initialize@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL1_Update@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL1_SetUserLed@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL1_SetSegChar@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    sp__memset	PTR void  size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL1_Initialize@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_irTxRelease@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_irTxRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_userLedsClr@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_userLedsSet@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_userLedsRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_segDisplayErase@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_segDisplayPutStr@str	PTR unsigned char  size(2) Largest target is 43
		 -> flashy_Main@hit_counter(BANK0[6]), STR_24(CODE[5]), STR_23(CODE[43]), STR_22(CODE[40]), 
		 -> STR_21(CODE[27]), STR_20(CODE[25]), STR_19(CODE[30]), STR_18(CODE[35]), 
		 -> STR_17(CODE[22]), STR_16(CODE[26]), STR_15(CODE[21]), STR_14(CODE[19]), 
		 -> STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 
		 -> marquee@display_string(BANK0[5]), marquee_speedy@display_string(BANK0[5]), 

    nullifyBadge_segDisplayPutStr@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_segDisplayForceUpdate@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_segDisplayRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_platformInit@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    marquee@string	PTR unsigned char  size(2) Largest target is 43
		 -> STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[11]), 
		 -> STR_26(CODE[13]), STR_23(CODE[43]), STR_22(CODE[40]), STR_21(CODE[27]), 
		 -> STR_20(CODE[25]), STR_19(CODE[30]), STR_18(CODE[35]), STR_17(CODE[22]), 
		 -> STR_16(CODE[26]), STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), 
		 -> STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), STR_9(CODE[18]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    marquee_speedy@string	PTR unsigned char  size(2) Largest target is 43
		 -> STR_23(CODE[43]), STR_22(CODE[40]), STR_21(CODE[27]), STR_20(CODE[25]), 
		 -> STR_19(CODE[30]), STR_18(CODE[35]), STR_17(CODE[22]), STR_16(CODE[26]), 
		 -> STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[8]), 
		 -> STR_11(CODE[9]), STR_10(CODE[5]), 

    schedulerInst.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    S1167t_secret_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    S1158t_locked_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    S1144t_slot_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    S1135t_menu_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    S1117t_flashy_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    secret_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    secret_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    secret_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    locked_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    locked_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    locked_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    slot_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    slot_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    slot_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    menu_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    menu_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    menu_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    flashy_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    flashy_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    flashy_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    fadeDisplay_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    fadeDisplay_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    S1013t_fadeDisplay_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    fadeDisplay_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    schedulerExecute@scheduler.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    schedulerExecute@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    schedulerExecute@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    scheduler_TaskRemove@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskRemove@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskRemove@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskRemove@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskRemove@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_TaskAdd@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskAdd@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskAdd@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskAdd@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskAdd@scheduler.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskAdd@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), 

    scheduler_TaskAdd@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_TaskAdd@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    scheduler_TaskInit@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskInit@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskInit@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskInit@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskInit@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), 

    S923t_scheduler$tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_Init@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_Init@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    S902t_schedulerTask$taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskRun@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    S902t_schedulerTask$taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskRun@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    S902t_schedulerTask$taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskRun@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    S902t_schedulerTask$taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskRun@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskRun@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    SPI1_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 10
		 -> displayL1_Update@tmpRxBuf(BANK0[10]), 

    SPI1_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 


Critical Paths under _main in COMMON

    _schedulerExecute->_TMR0_Read16bitTimer
    _scheduler_TaskRun->_TMR0_Read16bitTimer
    _secret_check->_strlen
    _nullifyBadge_userLedsClr->_displayL2_ClrUserLeds
    _displayL2_ClrUserLeds->_displayL1_Update
    _sprintf->___lwmod
    _led_rand->___almod
    _rand->___lmul
    _nullifyBadge_userLedsSet->_displayL2_SetUserLeds
    _displayL2_SetUserLeds->_displayL1_Update
    _displayL1_SetSegChar->_displayCharReverse
    _nullifyBadge_segDisplayForceUpdate->_displayL2_ForceUpdate
    _displayL2_ForceUpdate->_displayL1_Update
    ___lwmod->___lwdiv
    _displayL2_Initialize->_displayL1_Initialize
    _displayL1_Initialize->_displayL1_Update
    _displayL1_Update->_SPI1_Exchange8bitBuffer
    _SPI1_Exchange8bitBuffer->_SPI1_Exchange8bit
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_schedulerExecute
    _scheduler_TaskAdd->_flashy_Init
    _scheduler_TaskAdd->_locked_Init
    _scheduler_TaskAdd->_menu_Init
    _scheduler_TaskAdd->_secret_Init
    _scheduler_TaskAdd->_slot_Init
    _slot_Init->_nullifyBadge_segDisplayErase
    _secret_Init->_nullifyBadge_segDisplayErase
    _menu_Init->_nullifyBadge_segDisplayErase
    _locked_Init->_nullifyBadge_segDisplayErase
    _flashy_Init->_nullifyBadge_segDisplayErase
    _schedulerExecute->_scheduler_TaskRun
    _scheduler_TaskRun->_flashy_Main
    _menu_Main->_menu_display_option
    _menu_run_option->_menu_clear
    _menu_clear->_nullifyBadge_segDisplayErase
    _menu_display_option->_marquee
    _locked_clear->_nullifyBadge_segDisplayErase
    _displayL2_ClrUserLeds->_displayL1_Update
    _nullifyBadge_segDisplayErase->_displayL2_EraseSegDisplay
    _displayL2_EraseSegDisplay->_displayL2_PutStr
    _sprintf->___lwmod
    _let_alternate->_nullifyBadge_userLedsSet
    _led_roundabout->_nullifyBadge_userLedsSet
    _led_rand->___almod
    _rand->___lmul
    ___almod->_rand
    _led_curtain->_nullifyBadge_userLedsSet
    _led_circle->_nullifyBadge_userLedsSet
    _led_Parody->_nullifyBadge_userLedsSet
    _nullifyBadge_userLedsSet->_displayL2_SetUserLeds
    _displayL2_SetUserLeds->_displayL1_Update
    _flashy_display_option->_marquee
    _flashy_display_option->_marquee_speedy
    _marquee_speedy->_nullifyBadge_segDisplayPutStr
    _marquee->_nullifyBadge_segDisplayPutStr
    _nullifyBadge_segDisplayPutStr->_displayL2_PutStr
    _displayL2_PutStr->_displayL2_PutChar
    _displayL2_PutChar->_displayL1_SetSegChar
    _displayL2_ForceUpdate->_displayL1_Update
    _nullifyBadge_platformInit->_displayL2_Initialize
    _displayL1_Initialize->_displayL1_Update

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  206721
                                              0 BANK1      1     1      0
          _nullifyBadge_platformInit
                   _schedulerExecute
                     _scheduler_Init
                  _scheduler_TaskAdd
                 _scheduler_TaskInit
 ---------------------------------------------------------------------------------
 (1) _scheduler_TaskInit                                   4     2      2     417
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _scheduler_TaskAdd                                   10     8      2   36288
                                             29 BANK0     10     8      2
                   Absolute function *
                        _flashy_Init *
                        _locked_Init *
                          _menu_Init *
                        _secret_Init *
                          _slot_Init *
 ---------------------------------------------------------------------------------
 (2) _slot_Init                                            4     2      2    6979
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _secret_Init                                          4     2      2    7044
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _menu_Init                                            4     2      2    6979
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _locked_Init                                          4     2      2    7044
                                             25 BANK0      4     2      2
                   _locked_lock_leds
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _flashy_Init                                          4     2      2    7134
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_userLedsRegister                        1     1      0     242
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_segDisplayRegister                      1     1      0     247
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scheduler_Init                                       3     3      0     197
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _schedulerExecute                                    14    14      0  165916
                                             66 BANK0     14    14      0
                _TMR0_Read16bitTimer
                  _scheduler_TaskRun
 ---------------------------------------------------------------------------------
 (2) _scheduler_TaskRun                                    2     0      2  165360
                                             64 BANK0      2     0      2
                   Absolute function *
                _TMR0_Read16bitTimer
                        _flashy_Main *
                        _locked_Main *
                          _menu_Main *
                        _secret_Main *
                          _slot_Main *
 ---------------------------------------------------------------------------------
 (3) _slot_Main                                            6     4      2   11256
                                             50 BANK0      6     4      2
                            _marquee
            _nullifyBadge_buttonsGet
 ---------------------------------------------------------------------------------
 (3) _secret_Main                                          8     6      2    3770
                                             50 BANK0      8     6      2
            _nullifyBadge_buttonsGet
                       _secret_check
                       _secret_clear
 ---------------------------------------------------------------------------------
 (4) _secret_clear                                         2     0      2     286
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _secret_check                                        19    16      3    1771
                                              7 COMMON     3     0      3
                                              0 BANK0     10    10      0
                             ___bmul
                             _strlen
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1      28
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _menu_Main                                            7     5      2   36912
                                             50 BANK0      7     5      2
                         _menu_clear
                _menu_display_option
                    _menu_run_option
            _nullifyBadge_buttonsGet
 ---------------------------------------------------------------------------------
 (4) _menu_run_option                                      2     0      2    6787
                                             27 BANK0      2     0      2
                         _menu_clear
 ---------------------------------------------------------------------------------
 (5) _menu_clear                                           2     0      2    6644
                                             25 BANK0      2     0      2
       _nullifyBadge_segDisplayErase
           _nullifyBadge_userLedsClr
 ---------------------------------------------------------------------------------
 (4) _menu_display_option                                  6     4      2   21969
                                             44 BANK0      6     4      2
                            ___lwmod
                            _marquee
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (3) _locked_Main                                          7     5      2   24733
                                             50 BANK0      7     5      2
                            ___lwmod
                       _locked_clear
               _locked_get_lock_leds
             _locked_get_unlock_leds
                   _locked_lock_leds
                 _locked_unlock_leds
                            _marquee
            _nullifyBadge_buttonsGet
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _locked_unlock_leds                                   2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _locked_lock_leds                                     4     4      0      34
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _locked_get_unlock_leds                               4     2      2      34
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _locked_get_lock_leds                                 8     6      2      68
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _locked_clear                                         2     0      2    6444
                                             25 BANK0      2     0      2
       _nullifyBadge_segDisplayErase
           _nullifyBadge_userLedsClr
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_userLedsClr                             1     1      0    2022
                                             11 BANK0      1     1      0
              _displayL2_ClrUserLeds
 ---------------------------------------------------------------------------------
 (4) _displayL2_ClrUserLeds                                1     1      0    1559
                                             11 COMMON     1     1      0
               _displayL1_SetUserLed
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_segDisplayErase                         1     1      0    4124
                                             24 BANK0      1     1      0
          _displayL2_EraseSegDisplay
 ---------------------------------------------------------------------------------
 (4) _displayL2_EraseSegDisplay                            1     1      0    3589
                                             23 BANK0      1     1      0
                   _displayL1_Update
                   _displayL2_PutStr
 ---------------------------------------------------------------------------------
 (3) _flashy_Main                                         14    12      2   88454
                                             50 BANK0     14    12      2
              _flashy_display_option
                         _led_Parody
                         _led_circle
                        _led_curtain
                           _led_rand
                     _led_roundabout
                      _let_alternate
                            _marquee
            _nullifyBadge_buttonsGet
                 _nullifyBadge_irGet
               _nullifyBadge_irTxClr
          _nullifyBadge_irTxRegister
           _nullifyBadge_irTxRelease
               _nullifyBadge_irTxSet
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
           _nullifyBadge_userLedsSet
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             25    21      4    8265
                                              4 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      99
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3012
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxSet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxRelease                             2     2      0      67
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxRegister                            1     1      0      98
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxClr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irGet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_buttonsGet                              3     3      0      46
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _let_alternate                                        2     0      2    3314
                                             16 BANK0      2     0      2
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_roundabout                                       8     6      2    6382
                                             16 BANK0      8     6      2
                            ___lwmod
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_rand                                            10    10      0    4190
                                             19 BANK0     10    10      0
                            ___almod
           _nullifyBadge_userLedsSet
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 7     5      2     316
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) ___almod                                             11     3      8     613
                                              9 COMMON     3     3      0
                                             11 BANK0      8     0      8
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (4) _led_curtain                                          8     6      2    6382
                                             16 BANK0      8     6      2
                            ___lwmod
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_circle                                           2     0      2    3314
                                             16 BANK0      2     0      2
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_Parody                                           8     6      2    6444
                                             16 BANK0      8     6      2
                            ___lwmod
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_userLedsSet                             3     1      2    3193
                                             13 BANK0      3     1      2
              _displayL2_SetUserLeds
 ---------------------------------------------------------------------------------
 (6) _displayL2_SetUserLeds                                3     1      2    1868
                                             11 COMMON     1     1      0
                                             11 BANK0      2     0      2
               _displayL1_SetUserLed
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (5) _displayL1_SetUserLed                                 4     2      2     376
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _flashy_display_option                                2     0      2   25313
                                             44 BANK0      2     0      2
                            _marquee
                     _marquee_speedy
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
 ---------------------------------------------------------------------------------
 (5) _marquee_speedy                                      18    12      6    9656
                                             26 BANK0     18    12      6
                            ___lwdiv
                            ___lwmod
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _marquee                                             18    14      4   10829
                                             26 BANK0     18    14      4
                            ___lwdiv
                            ___lwmod
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     400
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_segDisplayPutStr                        3     1      2    3224
                                             23 BANK0      3     1      2
                   _displayL2_PutStr
 ---------------------------------------------------------------------------------
 (5) _displayL2_PutStr                                     7     5      2    2406
                                             16 BANK0      7     5      2
                  _displayL2_PutChar
 ---------------------------------------------------------------------------------
 (6) _displayL2_PutChar                                    6     5      1    1993
                                             10 BANK0      6     5      1
               _displayL1_SetSegChar
 ---------------------------------------------------------------------------------
 (7) _displayL1_SetSegChar                                10     8      2    1298
                                              0 BANK0     10     8      2
                 _displayCharReverse
 ---------------------------------------------------------------------------------
 (8) _displayCharReverse                                  11     9      2     331
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_segDisplayForceUpdate                   1     1      0    1399
                                             11 BANK0      1     1      0
              _displayL2_ForceUpdate
 ---------------------------------------------------------------------------------
 (6) _displayL2_ForceUpdate                                1     1      0    1152
                                             11 COMMON     1     1      0
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4    2932
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4    1001
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _TMR0_Read16bitTimer                                 11     9      2     102
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _nullifyBadge_platformInit                            1     1      0    3903
                                             12 BANK0      1     1      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                 _PWM1_LoadDutyValue
                    _PWM2_Initialize
                 _PWM2_LoadDutyValue
                    _PWM5_Initialize
                 _PWM5_LoadDutyValue
                    _PWM6_Initialize
                 _PWM6_LoadDutyValue
                    _SPI1_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
               _displayL2_Initialize
 ---------------------------------------------------------------------------------
 (2) _displayL2_Initialize                                 1     1      0    2481
                                             11 BANK0      1     1      0
               _displayL1_Initialize
                             _memset
 ---------------------------------------------------------------------------------
 (3) _displayL1_Initialize                                 1     1      0    1752
                                             11 COMMON     1     1      0
                   _displayL1_Update
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     569
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _displayL1_Update                                    13    13      0    1085
                                              9 COMMON     2     2      0
                                              0 BANK0     11    11      0
            _SPI1_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (6) _SPI1_Exchange8bitBuffer                              7     5      2     759
                                              2 COMMON     7     5      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI1_Exchange8bit                                    1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     155
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               1     1      0      34
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     332
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2     220
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     220
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nullifyBadge_platformInit
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM1_LoadDutyValue
     _PWM2_Initialize
     _PWM2_LoadDutyValue
     _PWM5_Initialize
     _PWM5_LoadDutyValue
     _PWM6_Initialize
     _PWM6_LoadDutyValue
     _SPI1_Initialize
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PWM1_Initialize
       _PWM2_Initialize
       _PWM5_Initialize
       _PWM6_Initialize
       _SPI1_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
         _TMR0_StartTimer
       _TMR2_Initialize
         _TMR2_StartTimer
       _TMR4_Initialize
         _TMR4_StartTimer
       _WDT_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer
     _displayL2_Initialize
       _displayL1_Initialize
         _displayL1_Update
           _SPI1_Exchange8bitBuffer
             _SPI1_Exchange8bit
         _memset
       _memset
   _schedulerExecute
     _TMR0_Read16bitTimer
     _scheduler_TaskRun
       Absolute function(Fake) *
       _TMR0_Read16bitTimer *
       _flashy_Main *
         _flashy_display_option
           _marquee
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _marquee_speedy
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
         _led_Parody
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _led_circle
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _led_curtain
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _led_rand
           ___almod
             _rand (ARG)
               ___lmul
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _rand
             ___lmul
         _led_roundabout
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _let_alternate
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
         _nullifyBadge_irGet
         _nullifyBadge_irTxClr
         _nullifyBadge_irTxRegister
         _nullifyBadge_irTxRelease
         _nullifyBadge_irTxSet
         _nullifyBadge_segDisplayForceUpdate
           _displayL2_ForceUpdate
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
         _nullifyBadge_segDisplayPutStr
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
         _nullifyBadge_userLedsSet
           _displayL2_SetUserLeds
             _displayL1_SetUserLed
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _locked_Main *
         ___lwmod
           ___lwdiv (ARG)
         _locked_clear
           _nullifyBadge_segDisplayErase
             _displayL2_EraseSegDisplay
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
           _nullifyBadge_userLedsClr
             _displayL2_ClrUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _locked_get_lock_leds
         _locked_get_unlock_leds
         _locked_lock_leds
         _locked_unlock_leds
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
         _nullifyBadge_userLedsSet
           _displayL2_SetUserLeds
             _displayL1_SetUserLed
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
       _menu_Main *
         _menu_clear
           _nullifyBadge_segDisplayErase
             _displayL2_EraseSegDisplay
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
           _nullifyBadge_userLedsClr
             _displayL2_ClrUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _menu_display_option
           ___lwmod
             ___lwdiv (ARG)
           _marquee
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _menu_run_option
           _menu_clear
             _nullifyBadge_segDisplayErase
               _displayL2_EraseSegDisplay
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
                 _displayL2_PutStr
                   _displayL2_PutChar
                     _displayL1_SetSegChar
                       _displayCharReverse
             _nullifyBadge_userLedsClr
               _displayL2_ClrUserLeds
                 _displayL1_SetUserLed
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
         _nullifyBadge_buttonsGet
       _secret_Main *
         _nullifyBadge_buttonsGet
         _secret_check
           ___bmul
           _strlen
         _secret_clear
       _slot_Main *
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
   _scheduler_Init
   _scheduler_TaskAdd
     Absolute function(Fake) *
     _flashy_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _locked_Init *
       _locked_lock_leds
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _menu_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _secret_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _slot_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
   _scheduler_TaskInit

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      1      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      46       9       87.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3D      11       76.2%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     224      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      38      16       70.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      38      18       70.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      3A      20       72.5%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     224      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              10      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jul 24 21:43:00 2017

                          _SPI1_Exchange8bit 24E7                                            pc 0002  
                             ___bmul@product 0073                   __end_of_gamma_table_256x1k 1200  
                         ?_SPI1_Exchange8bit 0070                                  __CFG_CP$OFF 0000  
                                         l18 24EC                        _displayL2_ClrUserLeds 25A9  
                        ___wmul@multiplicand 0073                     marquee_speedy@multiplier 003E  
                               ?_led_curtain 0030                nullifyBadge_buttonsGet@retVal 0073  
                __size_of_PWM6_LoadDutyValue 0016                                  __CFG_LVP$ON 0000  
                 ??_nullifyBadge_userLedsClr 007C                   ??_nullifyBadge_userLedsSet 007C  
                                        l208 2500                                          l609 1220  
                                        l985 1A66                                          _GIE 005F  
                             led_Parody@leds 0034              ??_nullifyBadge_segDisplayPutStr 007C  
                                        _PR2 001E                                          _PR4 0416  
                               __CFG_CPD$OFF 0000                               _scheduler_Init 2725  
                             led_Parody@size 0036                          ??_SPI1_Exchange8bit 0071  
                         _locked_unlock_leds 2638                  marquee_speedy@string_length 0048  
                            _TMR2_Initialize 2503               SPI1_Exchange8bitBuffer@dataOut 0073  
                   displayL1_Update@tmpRxBuf 0020                                          wreg 0009  
               marquee_speedy@display_string 0041                  displayL1_Initialize@display 007B  
                                       S8757 2080          nullifyBadge_userLedsSet@userLedData 002D  
                            led_curtain@leds 0034                      secret_Main@secret_found 0056  
                            led_curtain@size 0036                         _displayL1_Initialize 25E4  
                                       l1130 0BD4                                         l1122 0AF4  
                                       l1212 1813                                         l1125 0B61  
                                       l1135 0C49                                         l1208 183A  
                                       l1232 0393                                         l1373 06EF  
                                       l1534 1280                                         l1466 26DA  
                                       l7001 0734                                         l7011 062E  
                                       l7013 0773                                         l7009 0738  
                                       l8003 1478                                         l6501 1CB0  
                                       l7301 01A6                                         l7303 01AB  
                                       l8033 2670                                         l7081 1562  
                                       l7321 01F4                                         l6451 18A4  
                                       l7083 1614                                         l7331 0220  
                                       l7315 01DF                                         l6509 1CB3  
                                       l7077 15FD                                         l7253 00C7  
                                       l6615 19AF                                         l6607 1991  
                                       l6631 1870                                         l7079 160E  
                                       l7503 0A8C                                         l7431 094C  
                                       l7407 08FD                                         l7335 0230  
                                       l7271 0128                                         l8049 2686  
                                       l6609 199D                                         l6633 187C  
                                       l6641 1891                                         l7425 0939  
                                       l7417 0921                                         l7345 025C  
                                       l7281 014B                                         l7273 012E  
                                       l6491 1C84                                         l6619 19B8  
                                       l6459 18B5                                         l6539 1842  
                                       l6731 25A7                                         l7523 0ADF  
                                       l7443 0970                                         l7283 014F  
                                       l7275 0136                                         l7267 0102  
                                       l8235 07D8                                         l8243 07EE  
                                       l6637 1888                                         l6477 1AC6  
                                       l6565 2764                                         l6821 1C73  
                                       l6901 1A3B                                         l7605 0C30  
                                       l7461 09BA                                         l7453 0995  
                                       l7437 0960                                         l7357 028F  
                                       l8229 0780                                         l6495 1C93  
                                       l6567 2770                                         l6663 1344  
                                       l6911 1A55                                         l6751 2617  
                                       l7703 0DD0                                         l7615 0C4D  
                                       l7367 0868                                         l7295 0183  
                                       l8239 07E6                                         l6497 1CA7  
                                       l6681 1394                                         l6657 131D  
                                       l6585 192E                                         l6737 26D4  
                                       l6905 1A48                                         l7721 0E19  
                                       l7713 0DF4                                         l7529 0AF8  
                                       l7473 09EE                                         l7465 09C7  
                                       l6499 1CAB                                         l6923 1E9A  
                                       l6771 128D                                         l6755 261D  
                                       l7731 0E3E                                         l7635 0CA5  
                                       l7555 0B65                                         l7467 09D8  
                                       l7395 08C9                                         l8267 143D  
                                       l6589 1939                                         l6829 2656  
                                       l7725 0E26                                         l7717 0E06  
                                       l7709 0DE3                                         l7653 0CFB  
                                       l7549 0B4C                                         l7485 0A36  
                                       l7397 08D8                                         l7901 0479  
                                       l6687 13BB                                         l6927 1EC2  
                                       l6839 124D                                         l6791 12D4  
                                       l6783 12BB                                         l6943 0661  
                                       l7751 0E92                                         l7575 0BBB  
                                       l7495 0A5E                                         l6777 1295  
                                       l6953 068F                                         l6937 0651  
                                       l7729 0E39                                         l7681 0D77  
                                       l7673 0D4E                                         l7585 0BD8  
                                       l7489 0A4B                                         l7497 0A72  
                                       l7841 0356                                         l6779 12A3  
                                       l6787 12C6                                         l6971 06C4  
                                       l6955 06A7                                         l7771 0F89  
                                       l7755 0EE5                                         l7683 0D7C  
                                       l7499 0A7D                                         l7835 0326  
                                       l7827 0303                                         l7819 02D2  
                                       l7923 04E2                                         l7907 0493  
                                       l6965 06BE                                         l6893 1F24  
                                       l7765 0F70                                         l7757 0F36  
                                       l7861 03A9                                         l6879 26BC  
                                       l7783 0FBD                                         l7759 0F59  
                                       l7871 03DF                                         l7847 0373  
                                       l7863 03BD                                         l7951 0562  
                                       l7935 0516                                         l7919 04CA  
                                       l6985 070B                                         l6977 06E3  
                                       l8761 1A5B                                         l6897 1A2E  
                                       l7881 040C                                         l7849 037E  
                                       l8673 16FB                                         l6995 0725  
                                       l6987 070E                                         l7787 0FC9  
                                       l8755 08CF                                         l7867 03D5  
                                       l7971 05C6                                         l7955 057A  
                                       l7939 052E                                         l6989 0712  
                                       l7789 0FD6                                         l7893 0462  
                                       l8759 0F3B                                         l7879 0400  
                                       l7983 05FA                                         l7967 05AE  
                                       l7889 0437                                         l7987 060B  
                                       l7989 061D                                         STR_1 2919  
                                       STR_2 2914                          ?_locked_unlock_leds 0070  
                                       STR_3 2058                                         STR_4 290F  
                                       STR_5 28F0                                         STR_6 28C9  
                                       STR_7 28EA                                         STR_8 290A  
                                       STR_9 28AA                      __end_of_PWM1_Initialize 2523  
                                       _LATA 010C                                         _LATB 010D  
                                       _LATC 010E                                         u4055 1298  
                                       u4145 1231                                         u4075 12B1  
                                       u4155 190C                                         u4315 06FE  
                                       u4420 1D6E                                         u5045 269A  
                                       u4085 12BC                                         u4165 191A  
                                       u4405 15C7                                         u5134 0791  
                                       u5055 26B0                                         u4415 1568  
                                       u5215 142D                                         u5135 078F  
                                       u3705 193A                                         u4505 01A0  
                                       u5154 07B0                                         u5075 2667  
                                       u3715 1941                                         u4275 06D9  
                                       u5155 07AE                              led_Parody@count 0030  
                                       u5095 267D                                         u3815 1873  
                                       u4375 1834                                         u3745 1994  
                                       u5194 13DF                                         u3835 1882  
                                       u5195 13DD                                         u3860 12F4  
                                       u3765 199E                                         u3845 1889  
                                       u3775 19A8                                         u3935 1BDF  
                                       u3785 19B0                                         u3890 136B  
                                       u3975 26DB                                         u4775 0D71  
                                       u3985 26E0                                         _PLLR 48E0  
                                       _TMR2 001D                                         _TMR4 0415  
                                       _WPUA 020C                                         _WPUB 020D  
                                       _WPUC 020E                                 __CFG_WRT$OFF 0000  
                              __CFG_FCMEN$ON 0000                                         _main 1616  
                                       _rand 1BA9                              _TMR0_StartTimer 24A6  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                                __CFG_BOREN$ON 0000  
                           ??_marquee_speedy 0040                                __CFG_BORV$LOW 0000  
                                       start 0016                    __end_of_SPI1_Exchange8bit 24F0  
                        _menu_display_option 1ED9                              _PWM5_Initialize 2544  
                        locked_Main@taskData 0052                 displayL2_ClrUserLeds@display 007B  
                    displayL2_PutStr@display 0035                                __CFG_CSWEN$ON 0000  
                          ___bmul@multiplier 0074                                __CFG_MCLRE$ON 0000  
                       _displayL1_SetSegChar 1AA4                   __end_of_PWM5_LoadDutyValue 26A1  
                        menu_run_option@data 003B                         _displayL2_Initialize 27DD  
                       ??_locked_unlock_leds 0071                      __end_of_PWM2_Initialize 252E  
                    __end_of_TMR0_Initialize 2760               ??_TMR0_DefaultInterruptHandler 0070  
             __size_of_OSCILLATOR_Initialize 000A                       __end_of_scheduler_Init 2742  
                       _displayL1_SetUserLed 2626                        marquee@display_string 003F  
              __end_of_OSCILLATOR_Initialize 2503                      ?_locked_get_unlock_leds 0071  
                    _locked_locking_leds_idx 00A2                              __end_of___almod 12DD  
                                      ?_main 0070                                        ?_rand 0024  
                                      STR_10 290A                                        STR_11 28D3  
                                      STR_20 2853                                        STR_12 28DC  
                                      STR_21 281E                                        STR_13 28E4  
                                      STR_30 28F6                                        STR_22 2035  
                                      STR_14 2897                                        STR_23 200A  
                                      STR_15 2882                                        STR_24 2905  
                                      STR_16 2839                                        STR_25 291E  
                                      STR_17 286C                                __CFG_WDTE$OFF 0000  
                                      STR_26 28BC                                        STR_18 205D  
                                      STR_27 28BE                                        STR_19 2800  
                                      STR_28 2900                                        STR_29 28FB  
                           _schedulerExecute 13C7                                        _T2CON 001F  
                    _flashy_leds_state_track 00AE                                        _T4CON 0417  
                             __CFG_DEBUG$OFF 0000                              __end_of___lwdiv 19BD  
                            __end_of___lwmod 1896                                        i1l363 0011  
                                      _OSCEN 091D                                        _TMR0H 0016  
                                      _TMR0L 0015                               _led_roundabout 1B26  
                       ?_menu_display_option 004C               nullifyBadge_irTxRegister@badge 0071  
                 __end_of_scheduler_TaskInit 1AA4                                        _TRISA 008C  
                                      _TRISB 008D                                        _TRISC 008E  
           __size_of_nullifyBadge_buttonsGet 0031            __size_of_TMR0_SetInterruptHandler 0006  
                            _TMR4_Initialize 252E                              _PWM6_Initialize 2550  
                        ___lmul@multiplicand 0075                    ?_TMR0_SetInterruptHandler 0071  
                      _displayL2_ForceUpdate 24BF                       ??_locked_get_lock_leds 0073  
                           __end_of_TMR0_ISR 2581                                 _badge_locked 007C  
                               ?_locked_Main 0052                                 ?_locked_Init 0039  
                      ?_displayL1_Initialize 0070                              __end_of_dpowers 200A  
                    _SPI1_Exchange8bitBuffer 1C7B                               _WDT_Initialize 24B5  
                            __end_of_isdigit 25A9                              __end_of_marquee 13C7  
                                      _randx 00E3                                        pclath 000A  
         __size_of_nullifyBadge_platformInit 0055                                        status 0003  
                                      wtemp0 007E                              __end_of_sprintf 0779  
                            _TMR2_StartTimer 24A9            __size_of_nullifyBadge_irTxRelease 000B  
                           _menu_option_size 00B2                    ?_nullifyBadge_irTxRelease 0070  
                   __size_of_SPI1_Initialize 0008                       menu_Main@buttonPressed 0056  
               displayL1_SetSegChar@charData 0028                        ?_displayL1_SetSegChar 0020  
                            __initialization 0018                            ?_displayL1_Update 0070  
                               __end_of_main 1700                                 __end_of_rand 1BEC  
                      ?_displayL2_Initialize 0070                            ?_displayL2_PutStr 0030  
                     __size_of_let_alternate 0014                       ?_displayL2_ClrUserLeds 0070  
             __end_of_locked_get_unlock_leds 181A                           ??_displayL1_Update 0079  
                    __end_of_TMR2_Initialize 250D                        ?_displayL1_SetUserLed 0071  
                ?_INTERRUPT_InterruptManager 0070                           ??_displayL2_PutStr 0032  
           displayCharReverse@retValUpperRev 007A                              ?_scheduler_Init 0070  
                     __end_of_led_roundabout 1B67                                       ??_main 00ED  
                                     ??_rand 0026                                slot_Main@data 0056  
                       _nullifyBadge_irTxClr 24AF                        ??_menu_display_option 007C  
                       _nullifyBadge_irTxSet 24B2                                 ?_secret_Main 0052  
                               ?_secret_Init 0039                       __end_of_WDT_Initialize 24B9  
                              slot_Init@data 003B        __end_of_nullifyBadge_segDisplayPutStr 120A  
     __size_of_nullifyBadge_segDisplayPutStr 000A                _nullifyBadge_segDisplayPutStr 1200  
                    __end_of_TMR0_StartTimer 24A9                              scheduler_Init@k 0073  
             nullifyBadge_platformInit@badge 002C                                       _CCPR1H 0292  
                                     _CCPR2H 0296                                       _CCPR1L 0291  
                                     _CCPR2L 0295                                       _ANSELA 018C  
                                     _ANSELB 018D                                       _ANSELC 018E  
                                     _T0CON0 0017                                       _T0CON1 0018  
                           ?_PWM1_Initialize 0070                                       _ODCONA 028C  
                                     _ODCONB 028D                                       _ODCONC 028E  
                    __end_of_PWM5_Initialize 2550                  __end_of_TMR0_Read16bitTimer 2725  
                                     _OSCFRQ 091F                                       _WDTCON 0097  
                            _TMR4_StartTimer 24AC                        SPI1_Exchange8bit@data 0071  
                          _scheduler_TaskAdd 0779                     __size_of_menu_run_option 003A  
                   __end_of_locked_lock_leds 2708            __end_of_nullifyBadge_platformInit 1DC5  
                 __size_of_SPI1_Exchange8bit 0009                            _scheduler_TaskRun 279C  
                             __CFG_PWRTE$OFF 0000                           ?_scheduler_TaskAdd 003D  
                         ?_scheduler_TaskRun 0060                                       ___bmul 2615  
                           __end_of_led_rand 1C7B                                       ___lmul 1925  
                                  ??___almod 0079                     locked_get_lock_leds@leds 0077  
                                     ___wmul 26D2                               __CFG_STVREN$ON 0000  
                   locked_get_lock_leds@size 0075                                       _deaths 00A8  
                       __size_of_flashy_Main 07E4                         __size_of_flashy_Init 0096  
                                  ??___lwdiv 0075                                    ??___lwmod 0079  
                      _flashy_display_option 1E7A                             ?_TMR0_Initialize 0070  
                           ?_PWM2_Initialize 0070                                ?_locked_clear 0039  
                                     _memset 26B7                      __end_of_PWM6_Initialize 255C  
                    __end_of_TMR4_Initialize 2539                          ??_scheduler_TaskAdd 003F  
           nullifyBadge_segDisplayPutStr@str 0037             __end_of_nullifyBadge_userLedsClr 24D7  
           __end_of_nullifyBadge_userLedsSet 258E                          ??_scheduler_TaskRun 007C  
                            ?_led_roundabout 0030                        ?_nullifyBadge_irTxClr 0070  
                      ?_nullifyBadge_irTxSet 0070                                       _strlen 2760  
                               __pdataBIGRAM 26F0                         __size_of_led_curtain 0041  
                     ?_displayL2_ForceUpdate 0070                                    ??_isdigit 0071  
                                  ??_marquee 003E                    ??_SPI1_Exchange8bitBuffer 0074  
                            ?_WDT_Initialize 0070                       ??_displayL1_Initialize 007B  
                      _displayL2_SetUserLeds 277E                TMR0_Read16bitTimer@readValLow 007A  
                      __end_of_TMR0_CallBack 2518                                _let_alternate 264B  
                    __end_of_TMR2_StartTimer 24AC     TMR0_SetInterruptHandler@InterruptHandler 0071  
                                  ??_sprintf 0028                   ?_displayL2_EraseSegDisplay 0070  
                 __end_of_nullifyBadge_irGet 0800                         locked_lock_leds@size 0073  
                          _SYSTEM_Initialize 27BC             displayL2_EraseSegDisplay@display 0037  
                 ?_nullifyBadge_irTxRegister 0070                            _menu_options_leds 01AC  
                  __end_of_scheduler_TaskAdd 07FB                      __end_of__initialization 00B1  
                  secret_check@buttonPressed 0079                    __end_of_scheduler_TaskRun 27BC  
                     menu_display_option@led 0050                      _roundabout_leds_inverse 033C  
                         ?_SYSTEM_Initialize 0070                   __end_of_PWM2_LoadDutyValue 268B  
                     ??_displayL1_SetSegChar 0022                  PWM1_LoadDutyValue@dutyValue 0071  
                  secret_check@currents_size 0025                          ___bmul@multiplicand 0071  
                              led_rand@spark 003B                       ??_displayL2_Initialize 007C  
                          _displayL2_PutChar 1CC9                               __pcstackCOMMON 0070  
                displayL1_SetSegChar@charPos 0021                  __size_of_displayCharReverse 002F  
                               __pidataBANK1 25D5                                 __pidataBANK2 258E  
                               __pidataBANK3 18C5                                 __pidataBANK5 19F5  
                               __pidataBANK6 19BD                                 __pidataBANK7 0800  
                        ??_SYSTEM_Initialize 0073                                    ?_TMR0_ISR 0070  
                     ??_displayL1_SetUserLed 0073                           ?_displayL2_PutChar 002A  
                                 _badge_inst 0120                               ??_locked_clear 007C  
                          ??_SPI1_Initialize 0071                  displayL1_SetSegChar@display 0027  
                         _PWM1_LoadDutyValue 265F                        scheduler_TaskAdd@task 003D  
                           ?_TMR2_Initialize 0070                          locked_Init@taskData 0039  
                        _flashy_sparkle_rate 00AC         __end_of_nullifyBadge_segDisplayErase 24D1  
      __size_of_nullifyBadge_segDisplayErase 0006                 _nullifyBadge_segDisplayErase 24CB  
                    _nullifyBadge_buttonsGet 18F4                          ??_displayL2_PutChar 002B  
                        ?_PWM1_LoadDutyValue 0071                               ?_let_alternate 0030  
                         _gamma_table_256x1k 1000                             ?_TMR0_StartTimer 0070  
                    __end_of_TMR4_StartTimer 24AF                    __end_of_SYSTEM_Initialize 27DD  
                         led_curtain@counter 0030                                 sprintf@width 0032  
                              _menu_TaskData 01CF                                   __pbssBANK1 00A0  
                                 __pbssBANK2 0120                                   __pbssBANK3 01CF  
                                 __pbssBANK4 0220                                   __pbssBANK7 03A0  
                       __size_of_locked_Main 01CA                         __size_of_locked_Init 0063  
                        secret_Main@taskData 0052                             ?_PWM5_Initialize 0070  
             ?_nullifyBadge_segDisplayPutStr 0037                            _flashy_option_idx 00A6  
                   __end_of_schedulerExecute 1443                        _TMR4_InterruptHandler 00BE  
         nullifyBadge_userLedsRegister@badge 0071                           __size_of_menu_Main 01EC  
                         __size_of_menu_Init 0062                    __end_of_displayL2_PutChar 1D1B  
                              ?_secret_check 0077                         ??_PWM1_LoadDutyValue 0073  
                              ?_secret_clear 0071                               _SSP1DATPPSbits 0E21  
                            _secret_TaskData 0242                                   __pmaintext 1616  
                                    ?___bmul 0071             __end_of_TMR0_SetInterruptHandler 24BF  
                                    ?___lmul 0071                       ?_flashy_display_option 004C  
                                    ?___wmul 0071                        scheduler_TaskRun@task 0060  
                                 ??_TMR0_ISR 0070                              __CFG_PPS1WAY$ON 0000  
                 __end_of_PWM6_LoadDutyValue 26B7                                   __pintentry 0004  
                          ??_menu_run_option 007C                                      _CCP1CON 0293  
                                    _CCP2CON 0297                                      ?_memset 0071  
                             ___lmul@product 0020                       ??_nullifyBadge_irTxClr 0071  
                           ?_TMR4_Initialize 0070                             ?_PWM6_Initialize 0070  
                     ??_nullifyBadge_irTxSet 0071                               _SSP1CLKPPSbits 0E20  
                        __CFG_RSTOSC$HFINT32 0000                                      ?_strlen 0071  
                                 _led_Parody 120A                ?_nullifyBadge_segDisplayErase 0070  
                     ?_displayL2_SetUserLeds 002B                           _PWM5_LoadDutyValue 268B  
                                    _OSCCON1 0919                     displayL2_PutChar@display 002F  
                                    _OSCCON3 091B                           __size_of_slot_Main 0082  
                         __size_of_slot_Init 005A                                      _NVMADRH 0892  
                                    _NVMADRL 0891                                      _NVMDATH 0894  
                                    _OSCTUNE 091E                                      _NVMDATL 0893  
                                    _NVMCON2 0896                                      _PWM5DCH 0618  
                                    _PWM5DCL 0617                                      _PWM6DCH 061B  
                                    _PWM6DCL 061A                                      _PWM5CON 0619  
                                    _PWM6CON 061C                                      _SSP1ADD 0212  
                       __size_of_secret_Main 01BD                                      _PPSLOCK 0E0F  
                                    _SSP1BUF 0211                                   _led_circle 24F0  
                       __size_of_secret_Init 005B                             ?_TMR2_StartTimer 0070  
                                  ?_led_rand 0070                          ?_PWM5_LoadDutyValue 0071  
                    _FLASHY_TEXT_SECRET_TEST 00E9                     flashy_Main@buttonPressed 005C  
                 __size_of_scheduler_TaskAdd 0082            __size_of_nullifyBadge_userLedsClr 0006  
                 __size_of_scheduler_TaskRun 0020            __size_of_nullifyBadge_userLedsSet 000D  
                         _scheduler_TaskInit 1A67                    ?_nullifyBadge_userLedsClr 0070  
                  ?_nullifyBadge_userLedsSet 002D                               ??_secret_check 0020  
                             ??_secret_clear 0073                      ??_displayL2_ClrUserLeds 007B  
               displayL2_SetUserLeds@display 007B                             ??_scheduler_Init 0071  
                        ?_scheduler_TaskInit 0071                              __size_of___bmul 0011  
                                    ___almod 126F                              __size_of___lmul 0032  
                            __size_of___wmul 001B              ??_nullifyBadge_userLedsRegister 0071  
                                    ___lwdiv 1989                           scheduler_TaskAdd@k 0046  
                                    ___lwmod 1869                         ??_PWM5_LoadDutyValue 0073  
                __size_of_locked_unlock_leds 0013                    ??_nullifyBadge_buttonsGet 0071  
                            _roundabout_leds 02BC                      scheduler_Init@scheduler 0072  
                            __size_of_memset 001B                        displayL1_SetSegChar@c 0020  
                            _locked_TaskData 0250                                   _menu_clear 1BEC  
                                    __ptext1 1A67                                      __ptext2 0779  
                                    __ptext3 1E1F                                      __ptext4 1F9D  
                                    __ptext5 1F3B                                      __ptext6 14C5  
                                    __ptext7 1DC5                                      __ptext8 25C6  
                                    __ptext9 24DF                              __size_of_strlen 001E  
                                    _dpowers 2000                        _OSCILLATOR_Initialize 24F9  
                                    _oddeven 00B6                                    _T2CONbits 001F  
                          __end_of_menu_Main 02A1                            __end_of_menu_Init 1F9D  
                                    _isdigit 259B                              ??_let_alternate 007C  
                                    _marquee 1350                                    _T4CONbits 0417  
                   ??_PIN_MANAGER_Initialize 0071      nullifyBadge_segDisplayForceUpdate@badge 002B  
                  __size_of_displayL1_Update 0011                         ??_scheduler_TaskInit 0073  
                  __size_of_displayL2_PutStr 002A                   __size_of_SYSTEM_Initialize 0021  
                                    _sprintf 0628                                      clrloop0 255D  
                           ?_TMR4_StartTimer 0070                __size_of_locked_get_lock_leds 0025  
                        displayL2_PutStr@str 0030                                   ??_led_rand 0033  
                       end_of_initialization 00B1                         __end_of_locked_clear 1BA9  
                                    init_ram 2568                                      memset@c 0071  
                                    memset@n 0073                                      memset@p 0076  
                              secret_check@i 0028                                      initloop 2569  
                               marquee@count 003C                   __size_of_displayL2_PutChar 0052  
                          ?_locked_lock_leds 0070                            __end_of_slot_Main 14C5  
                          __end_of_slot_Init 1E1F                             ??_led_roundabout 0032  
                         ??_locked_lock_leds 0071               TMR0_Read16bitTimer@readValHigh 007B  
                __end_of_menu_display_option 1F3B                       slot_Main@buttonPressed 0055  
                                    strlen@s 0071                      ??_displayL2_ForceUpdate 007B  
                    __size_of_marquee_speedy 0073                           secret_check@inputs 0027  
                           ??_WDT_Initialize 0071                     _TMR0_SetInterruptHandler 24B9  
                                  _PORTAbits 000C                                    _PORTBbits 000D  
                                  _PORTCbits 000E                nullifyBadge_userLedsClr@badge 002B  
                                ?_led_Parody 0030                      displayL1_Update@display 002A  
                                ?_led_circle 0030                      menu_display_option@data 004C  
             ??_nullifyBadge_segDisplayErase 007C                      menu_display_option@size 004E  
                           __CFG_FEXTOSC$OFF 0000                  ??_displayL2_EraseSegDisplay 007C  
            __end_of_nullifyBadge_buttonsGet 1925                                _schedulerInst 0220  
                   _nullifyBadge_irTxRelease 2539                  ??_nullifyBadge_irTxRegister 0071  
                                _CCP1CONbits 0293                              _SPI1_Initialize 24D7  
                                _CCP2CONbits 0297                            slot_Main@taskData 0052  
                              ??_flashy_Main 0054                                ??_flashy_Init 007C  
                 ?_nullifyBadge_platformInit 0070                 __size_of_TMR0_Read16bitTimer 001D  
                   __size_of_PWM1_Initialize 000B                          secret_Init@taskData 0039  
                       _timer0ReloadVal16bit 00BC                           _nullifyBadge_irGet 07FB  
                            flashy_Main@data 005E                               __end_of___bmul 2626  
              nullifyBadge_userLedsSet@badge 002F                               __end_of___lmul 1957  
                              __pidataBIGRAM 1700                                ??_led_curtain 0032  
                             __end_of___wmul 26ED                       flashy_Main@hit_counter 0056  
                          __size_of_TMR0_ISR 000D                           _PWM2_LoadDutyValue 2675  
                                ?_menu_clear 0039                       ?_OSCILLATOR_Initialize 0070  
                             __end_of_memset 26D2                          ?_nullifyBadge_irGet 0070  
                            flashy_Init@data 003B        __end_of_nullifyBadge_userLedsRegister 25D5  
     __size_of_nullifyBadge_userLedsRegister 000F                _nullifyBadge_userLedsRegister 25C6  
                       __end_of_secret_check 1616                              _menu_option_idx 00B4  
                       __end_of_secret_clear 1989                               __end_of_strlen 277E  
                        start_initialization 0018                     __size_of_PWM2_Initialize 000B  
                   __size_of_TMR0_Initialize 001E                          ?_PWM2_LoadDutyValue 0071  
            __size_of_PIN_MANAGER_Initialize 0055                         marquee_speedy@F14033 00DE  
              __size_of_displayL1_Initialize 0010                         ??_nullifyBadge_irGet 0071  
                            _menu_run_option 1A2D                            ?_schedulerExecute 0070  
                    ??_flashy_display_option 007C                   __end_of_displayCharReverse 18C5  
                   ??_locked_get_unlock_leds 0073                          __size_of_led_Parody 0065  
                         led_roundabout@leds 0034                             __CFG_LPBOREN$OFF 0000  
                         led_roundabout@size 0036                           _flashy_scroll_rate 00AA  
                       ??_PWM2_LoadDutyValue 0073                                _secret_inputs 01B6  
                         ??_schedulerExecute 0062                    flashy_display_option@data 004C  
              __size_of_displayL1_SetSegChar 0041                                     ??___bmul 0072  
                PWM2_LoadDutyValue@dutyValue 0071                                     ??___lmul 0079  
                                   ??___wmul 0075                    _displayL2_EraseSegDisplay 25F4  
                                _CCPTMRSbits 029F                          __size_of_led_circle 0009  
              __size_of_displayL2_Initialize 0023                       __size_of_TMR0_CallBack 000B  
                                __pdataBANK1 00DE                                  __pdataBANK2 0159  
                                __pdataBANK3 01A0                                  __pdataBANK5 02A0  
                                __pdataBANK6 0320                                  __pdataBANK7 03BE  
                                   ??_memset 0075                    _nullifyBadge_irTxRegister 25B7  
              __size_of_displayL1_SetUserLed 0012                          __end_of_flashy_Main 1000  
                        __end_of_flashy_Init 155B                     ?_SPI1_Exchange8bitBuffer 0072  
                    ??_displayL2_SetUserLeds 007B                             secret_check@data 0077  
                                   ??_strlen 0073                             secret_check@size 0023  
                  schedulerExecute@scheduler 006E           nullifyBadge_segDisplayPutStr@badge 0039  
                PWM5_LoadDutyValue@dutyValue 0071                         marquee_speedy@string 003A  
                                __pbssCOMMON 007C                    schedulerExecute@tickDelta 006C  
                                  ___latbits 0003                          __end_of_led_curtain 1B26  
                              __pcstackBANK0 0020                                __pcstackBANK1 00ED  
                      __size_of_locked_clear 0042                             _displayL1_Update 2604  
                         _PWM6_LoadDutyValue 26A1                     __size_of_TMR2_Initialize 000A  
                              ??_locked_Main 0054                             _displayL2_PutStr 183F  
                              ??_locked_Init 007C                       scheduler_TaskInit@task 0071  
                           secret_clear@data 0071                      __end_of_SPI1_Initialize 24DF  
                               _isdigit$3118 0071                         _asciiCharTableLookup 26F0  
                      _locked_lock_base_leds 00E7                           _flashy_option_size 00A4  
                               _curtain_leds 0320                          ?_PWM6_LoadDutyValue 0071  
           displayL2_SetUserLeds@userLedData 002B                                  sprintf@flag 002E  
                          __size_of_led_rand 0048                                  sprintf@prec 002D  
                        __size_of_menu_clear 0047                        _TMR0_InterruptHandler 00BA  
                   __size_of_TMR0_StartTimer 0003                  __size_of_PWM1_LoadDutyValue 0016  
                           ___lwdiv@dividend 0073                       _PIN_MANAGER_Initialize 1D1B  
                                _FLASHY_TEXT 00EB                     __size_of_PWM5_Initialize 000C  
                          menu_Main@taskData 0052               __size_of_displayL2_ClrUserLeds 000E  
              __end_of_displayL2_ClrUserLeds 25B7                  displayL1_SetUserLed@display 0074  
                                   ?___almod 002B                            schedulerExecute@k 006F  
                                   ?___lwdiv 0071                                     ?___lwmod 0020  
                             _marquee_speedy 12DD                         ??_PWM6_LoadDutyValue 0073  
                               _locked_clear 1B67                            ??_PWM1_Initialize 0071  
               ??_INTERRUPT_InterruptManager 0070                             ___almod@dividend 002F  
                          marquee@multiplier 0044                                    __pswtext1 2080  
                     displayCharReverse@cVal 0071                __size_of_nullifyBadge_irTxClr 0003  
              __size_of_nullifyBadge_irTxSet 0003                                ??_secret_Main 0054  
                              ??_secret_Init 007C                          _locked_locking_leds 01A0  
                                   ?_isdigit 0070                                     ?_marquee 003A  
                   __size_of_PWM6_Initialize 000C                     __size_of_TMR4_Initialize 000B  
             ?_nullifyBadge_userLedsRegister 0070                  displayL2_Initialize@display 002B  
                    __end_of_menu_run_option 1A67                             ___lwdiv@quotient 0077  
                            secret_Main@data 0058                                    _menu_Main 00B5  
                                  _menu_Init 1F3B                nullifyBadge_irTxRelease@badge 0072  
                                  _menu_Exit 0000                                     ?_sprintf 0024  
                        flashy_Main@taskData 0052                                _TMR0_CallBack 250D  
                         displayL2_PutChar@c 002A                           displayL2_PutChar@k 002E  
                                  _menu_task 00C2      displayL1_SetSegChar@dispDataVectBaseIdx 0026  
                          ??_TMR0_Initialize 0073                            ??_PWM2_Initialize 0071  
                            secret_Init@data 003B                SPI1_Exchange8bitBuffer@dataIn 0077  
                             ___wmul@product 0075                          __end_of_locked_Main 046B  
                        __end_of_locked_Init 2000                                     _LATBbits 010D  
                                   _LATCbits 010E                SPI1_Exchange8bitBuffer@bufLen 0072  
                                  clear_ram0 255C                                     _PIE0bits 0090  
                   __size_of_TMR2_StartTimer 0003          __size_of_INTERRUPT_InterruptManager 0012  
                 ??_TMR0_SetInterruptHandler 0073              __size_of_locked_get_unlock_leds 0019  
                                   _PIR0bits 0010                                     _PIR1bits 0011  
                                   _PIR2bits 0012                                  _flashy_Main 081C  
                                _flashy_Init 14C5                                  _flashy_Exit 0000  
                 TMR0_Read16bitTimer@readVal 0078                   __end_of_locked_unlock_leds 264B  
                 scheduler_TaskAdd@scheduler 0045              __end_of_SPI1_Exchange8bitBuffer 1CC9  
               __end_of_locked_get_lock_leds 183F                       __end_of_marquee_speedy 1350  
                                _flashy_task 00CF                                     _SSP1CON1 0215  
                                   _TMR0_ISR 2574                                     _SSP1STAT 0214  
                          slot_Init@taskData 0039                  __size_of_PWM5_LoadDutyValue 0016  
                      __size_of_secret_check 00BB                                    _slot_Main 1443  
                      __size_of_secret_clear 0032                                    _slot_Init 1DC5  
                                  _slot_Exit 0000                                  _led_curtain 1AE5  
            displayL1_SetUserLed@userLedVect 0071                              _flashy_TaskData 03A0  
                                  _slot_task 014C            schedulerExecute@currentSystemTick 0068  
                          ___wmul@multiplier 0071               __size_of_displayL2_ForceUpdate 0006  
              __end_of_displayL2_ForceUpdate 24C5                                 ??_led_Parody 0032  
                 ??_nullifyBadge_irTxRelease 0071                    __size_of_locked_lock_leds 001B  
          nullifyBadge_segDisplayErase@badge 0038                     locked_Main@buttonPressed 0056  
                        _TMR0_Read16bitTimer 2708                        __end_of_let_alternate 265F  
                               ??_led_circle 007C                              led_circle@count 0030  
                __size_of_scheduler_TaskInit 003D                               ?_TMR0_CallBack 0070  
                                 ?_menu_Main 0052                                   ?_menu_Init 0039  
                           ?_SPI1_Initialize 0070                     _nullifyBadge_userLedsClr 24D1  
                          ___lmul@multiplier 0071                        led_roundabout@counter 0030  
                   _nullifyBadge_userLedsSet 2581                          __end_of_secret_Main 0628  
                        __end_of_secret_Init 1E7A                            ??_TMR2_Initialize 0071  
                   secret_Main@buttonPressed 0057                   locked_get_unlock_leds@leds 0073  
                   __size_of_TMR4_StartTimer 0003                                 _secret_check 155B  
                               _secret_clear 1957                         ?_TMR0_Read16bitTimer 0071  
                         __end_of_led_Parody 126F                              marquee_speedy@i 0046  
                            marquee_speedy@j 004A                  ??_nullifyBadge_platformInit 007C  
                   ?_nullifyBadge_buttonsGet 0070                                 _secret_value 00DC  
                            _flashy_leds_idx 00B0   __end_of_nullifyBadge_segDisplayForceUpdate 24CB  
__size_of_nullifyBadge_segDisplayForceUpdate 0006         ??_nullifyBadge_segDisplayForceUpdate 007C  
        ?_nullifyBadge_segDisplayForceUpdate 0070           _nullifyBadge_segDisplayForceUpdate 24C5  
                            ?_marquee_speedy 003A                      ??_OSCILLATOR_Initialize 0071  
                        marquee_speedy@count 003C                            ??_TMR0_StartTimer 0071  
                           __size_of___almod 006E                           __end_of_led_circle 24F9  
                                 ?_slot_Main 0052                                   ?_slot_Init 0039  
                           __size_of___lwdiv 0034                             __size_of___lwmod 002D  
                               ??_menu_clear 007C                            ??_PWM5_Initialize 0071  
                    __size_of_scheduler_Init 001D                                  _currentTask 00B8  
                                 sprintf@val 002F                 __size_of_menu_display_option 0062  
         __size_of_displayL2_EraseSegDisplay 0010                                   _T0CON0bits 0017  
                     _locked_get_unlock_leds 1801                             __size_of_isdigit 000E  
                           __size_of_marquee 0077                              ___lwdiv@divisor 0071  
                            ___lwdiv@counter 0076                          displayCharReverse@k 007B  
         __size_of_nullifyBadge_irTxRegister 000F                                     __ptext10 2725  
                                   __ptext11 13C7                                     __ptext20 2615  
                                   __ptext12 279C                                     __ptext21 1A2D  
                                   __ptext13 046B                                     __ptext30 25A9  
                                   __ptext22 1BEC                                     __ptext14 02A1  
                                   __ptext31 24CB                                     __ptext23 1ED9  
                                   __ptext15 00B5                                     __ptext40 07FB  
                                   __ptext32 25F4                                     __ptext24 2638  
                                   __ptext16 081C                                     __ptext41 18F4  
                                   __ptext33 0628                                     __ptext25 26ED  
                                   __ptext17 1443                                     __ptext50 120A  
                                   __ptext42 264B                                     __ptext34 259B  
                                   __ptext26 1801                                     __ptext18 1957  
                                   __ptext51 2581                                     __ptext43 1B26  
                                   __ptext35 26D2                                     __ptext27 181A  
                                   __ptext19 155B                                     __ptext60 1CC9  
                                   __ptext52 277E                                     __ptext44 1C33  
                                   __ptext36 24B2                                     __ptext28 1B67  
                                   __ptext61 1AA4                                     __ptext53 2626  
                                   __ptext45 1BA9                                     __ptext37 2539  
                                   __ptext29 24D1                                     __ptext70 25E4  
                                   __ptext62 1896                                     __ptext54 1E7A  
                                   __ptext46 1925                                     __ptext38 25B7  
                                   __ptext71 26B7                                     __ptext63 24C5  
                                   __ptext55 12DD                                     __ptext47 126F  
                                   __ptext39 24AF                                     __ptext80 24A9  
                                   __ptext72 2604                                     __ptext64 24BF  
                                   __ptext56 1350                                     __ptext48 1AE5  
                                   __ptext81 2742                                     __ptext73 1C7B  
                                   __ptext65 1869                                     __ptext57 2760  
                                   __ptext49 24F0                                     __ptext90 24F9  
                                   __ptext82 24A6                                     __ptext74 24E7  
                                   __ptext66 1989                                     __ptext58 1200  
                                   __ptext91 26A1                                     __ptext83 24B9  
                                   __ptext75 27BC                                     __ptext67 2708  
                                   __ptext59 183F                                     __ptext92 268B  
                                   __ptext84 24D7                                     __ptext76 24B5  
                                   __ptext68 1D70                                     __ptext93 2675  
                                   __ptext85 2550                                     __ptext77 252E  
                                   __ptext69 27DD                                     __ptext94 265F  
                                   __ptext86 2544                                     __ptext78 24AC  
                                   __ptext87 2523                                     __ptext79 2503  
                                   __ptext96 2574                                     __ptext88 2518  
                                   __ptext97 250D                                     __ptext89 1D1B  
                                   __ptext98 0003                                  _locked_Main 02A1  
                                _locked_Init 1F9D                                  _locked_Exit 0000  
                               _SSP1CON1bits 0215                             ?_menu_run_option 003B  
                                _locked_leds 00A0                                  _locked_task 013F  
                            ___almod@divisor 002B                                     _led_rand 1C33  
                           __size_of_sprintf 0151                              ___almod@counter 007A  
                                _menu_option 0159      __end_of_nullifyBadge_segDisplayRegister 24E7  
   __size_of_nullifyBadge_segDisplayRegister 0008            ??_nullifyBadge_segDisplayRegister 0071  
           ?_nullifyBadge_segDisplayRegister 0070              _nullifyBadge_segDisplayRegister 24DF  
                       marquee@string_length 0048                                menu_Main@data 0057  
                          ??_TMR4_Initialize 0071                            ??_PWM6_Initialize 0071  
                              __size_of_main 00EA                                __size_of_rand 0043  
       __end_of_TMR0_DefaultInterruptHandler 0004        __size_of_TMR0_DefaultInterruptHandler 0001  
               _TMR0_DefaultInterruptHandler 0003                           __end_of_menu_clear 1C33  
                          displayL2_PutStr@k 0036                        ??_TMR0_Read16bitTimer 0073  
                                 _RC0PPSbits 0EA0                                marquee@F14042 0161  
                                 _RC1PPSbits 0EA1                                menu_Init@data 003B  
                   __end_of_displayL1_Update 2615                           let_alternate@count 0030  
                                 _RC2PPSbits 0EA2               __size_of_flashy_display_option 005F  
                   __end_of_displayL2_PutStr 1869                __end_of_flashy_display_option 1ED9  
                                 _RC3PPSbits 0EA3                 __end_of_displayL1_Initialize 25F4  
                       _curtain_leds_inverse 03BE                                   _RC4PPSbits 0EA4  
                                 _RB6PPSbits 0E9E                                     int$flags 007E  
               displayL2_ForceUpdate@display 007B                              locked_Main@data 0057  
                          ??_TMR2_StartTimer 0071           __end_of_INTERRUPT_InterruptManager 0016  
                 _INTERRUPT_InterruptManager 0004                                 _SSP1STATbits 0214  
       nullifyBadge_segDisplayRegister@badge 0071                  PIN_MANAGER_Initialize@state 0071  
         schedulerExecute@taskLastSystemTick 006A                           _displayCharReverse 1896  
                          menu_Init@taskData 0039                    __size_of_schedulerExecute 007C  
             __size_of_displayL2_SetUserLeds 001E                              locked_Init@data 003B  
              __end_of_displayL2_SetUserLeds 279C                displayCharReverse@retValLower 0078  
              displayCharReverse@retValUpper 0079                                   _INTCONbits 000B  
                                _secret_Main 046B                      __size_of_led_roundabout 0041  
                                _secret_Init 1E1F                                  _secret_Exit 0000  
                            ??_TMR0_CallBack 0070                                  _NVMCON1bits 0895  
                  _nullifyBadge_platformInit 1D70                 __end_of_displayL1_SetSegChar 1AE5  
                                _secret_task 0132                               __pstringtext10 2882  
                             __pstringtext11 2897                               __pstringtext20 28F6  
                             __pstringtext12 28AA                               __pstringtext21 28FB  
                             __pstringtext13 28BC                               __pstringtext22 2900  
                             __pstringtext14 28C9                               __pstringtext23 2905  
                             __pstringtext15 28D3                               __pstringtext24 290A  
                             __pstringtext16 28DC                               __pstringtext25 290F  
                             __pstringtext17 28E4                               __pstringtext26 2914  
                             __pstringtext18 28EA                               __pstringtext27 2919  
                             __pstringtext19 28F0                               __pstringtext28 291E  
                             __pstringtext29 0000            __end_of_displayL2_EraseSegDisplay 2604  
                                   isdigit@c 0072                                     marquee@i 0046  
                                   marquee@j 004A                                     memset@p1 0077  
               __end_of_displayL2_Initialize 2800                          ?_displayCharReverse 0071  
                                ??_menu_Main 0054                                  ??_menu_Init 007C  
                    __size_of_WDT_Initialize 0004                         _locked_get_lock_leds 181A  
          __end_of_nullifyBadge_irTxRegister 25C6             __size_of_SPI1_Exchange8bitBuffer 004E  
               __end_of_displayL1_SetUserLed 2638                                     intlevel1 0000  
                                  sprintf@ap 002C                                    sprintf@sp 0031  
                           ___lwmod@dividend 0022                      ?_PIN_MANAGER_Initialize 0070  
                              marquee@string 003A                  __size_of_nullifyBadge_irGet 0005  
                          __CFG_CLKOUTEN$OFF 0000          SPI1_Exchange8bitBuffer@bytesWritten 0078  
                                _PPSLOCKbits 0E0F                              _PWM1_Initialize 2518  
                        flashy_Init@taskData 0039                               menu_clear@data 0039  
              ?_TMR0_DefaultInterruptHandler 0070                  __size_of_PWM2_LoadDutyValue 0016  
                       ??_displayCharReverse 0073                            ??_TMR4_StartTimer 0071  
                                ??_slot_Main 0054                                  ??_slot_Init 007C  
                              __pstringtext1 1000                                __pstringtext2 2000  
                              __pstringtext3 2035                                __pstringtext4 205D  
                              __pstringtext5 2800                                __pstringtext6 281E  
                              __pstringtext7 2839                                __pstringtext8 2853  
                              __pstringtext9 286C             __end_of_nullifyBadge_irTxRelease 2544  
                                   sprintf@c 0034                                     sprintf@f 0024  
                              _flashy_option 02A0                             _locked_lock_leds 26ED  
                            ___lwmod@divisor 0020                              _TMR0_Initialize 2742  
                            _PWM2_Initialize 2523                                     strlen@cp 0075  
                              _slot_TaskData 025E                              ___lwmod@counter 007A  
                PWM6_LoadDutyValue@dutyValue 0071                        ?_locked_get_lock_leds 0071  
             __end_of_PIN_MANAGER_Initialize 1D70                             locked_clear@data 0039  
                               ___almod@sign 007B                                  _PWMTMRSbits 061F  
               __end_of_nullifyBadge_irTxClr 24B2                 __end_of_nullifyBadge_irTxSet 24B5  
                 __end_of_PWM1_LoadDutyValue 2675                        _TMR2_InterruptHandler 00C0  
                               ?_flashy_Main 0052                                 ?_flashy_Init 0039  
