

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Jul 23 15:32:22 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16LF18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK5,global,class=CODE,delta=2
     8                           	psect	idataBANK6,global,class=CODE,delta=2
     9                           	psect	idataBIGRAM,global,class=CODE,delta=2
    10                           	psect	stringtext1,global,class=STRCODE,delta=2
    11                           	psect	stringtext2,global,class=STRCODE,delta=2
    12                           	psect	stringtext3,global,class=STRCODE,delta=2
    13                           	psect	stringtext4,global,class=STRCODE,delta=2
    14                           	psect	stringtext5,global,class=STRCODE,delta=2
    15                           	psect	stringtext6,global,class=STRCODE,delta=2
    16                           	psect	stringtext7,global,class=STRCODE,delta=2
    17                           	psect	stringtext8,global,class=STRCODE,delta=2
    18                           	psect	stringtext9,global,class=STRCODE,delta=2
    19                           	psect	stringtext10,global,class=STRCODE,delta=2
    20                           	psect	stringtext11,global,class=STRCODE,delta=2
    21                           	psect	stringtext12,global,class=STRCODE,delta=2
    22                           	psect	stringtext13,global,class=STRCODE,delta=2
    23                           	psect	stringtext14,global,class=STRCODE,delta=2
    24                           	psect	stringtext15,global,class=STRCODE,delta=2
    25                           	psect	stringtext16,global,class=STRCODE,delta=2
    26                           	psect	stringtext17,global,class=STRCODE,delta=2
    27                           	psect	stringtext18,global,class=STRCODE,delta=2
    28                           	psect	stringtext19,global,class=STRCODE,delta=2
    29                           	psect	stringtext20,global,class=STRCODE,delta=2
    30                           	psect	cinit,global,class=CODE,merge=1,delta=2
    31                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    35                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    36                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    37                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    38                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    39                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    40                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    41                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    42                           	psect	inittext,global,class=CODE,delta=2
    43                           	psect	clrtext,global,class=CODE,delta=2
    44                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    45                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    46                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    47                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    48                           	psect	text1,local,class=CODE,merge=1,delta=2
    49                           	psect	text2,local,class=CODE,merge=1,delta=2
    50                           	psect	text3,local,class=CODE,merge=1,delta=2
    51                           	psect	text4,local,class=CODE,merge=1,delta=2
    52                           	psect	text5,local,class=CODE,merge=1,delta=2
    53                           	psect	text6,local,class=CODE,merge=1,delta=2
    54                           	psect	text7,local,class=CODE,merge=1,delta=2
    55                           	psect	text8,local,class=CODE,merge=1,delta=2
    56                           	psect	text9,local,class=CODE,merge=1,delta=2
    57                           	psect	text10,local,class=CODE,merge=1,delta=2
    58                           	psect	text11,local,class=CODE,merge=1,delta=2
    59                           	psect	text12,local,class=CODE,merge=1,delta=2
    60                           	psect	text13,local,class=CODE,merge=1,delta=2
    61                           	psect	text14,local,class=CODE,merge=1,delta=2
    62                           	psect	text15,local,class=CODE,merge=1,delta=2
    63                           	psect	text16,local,class=CODE,merge=1,delta=2
    64                           	psect	text17,local,class=CODE,merge=1,delta=2
    65                           	psect	text18,local,class=CODE,merge=1,delta=2
    66                           	psect	text19,local,class=CODE,merge=1,delta=2
    67                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text21,local,class=CODE,merge=1,delta=2
    69                           	psect	text22,local,class=CODE,merge=1,delta=2
    70                           	psect	text23,local,class=CODE,merge=1,delta=2
    71                           	psect	text24,local,class=CODE,merge=1,delta=2
    72                           	psect	text25,local,class=CODE,merge=1,delta=2
    73                           	psect	text26,local,class=CODE,merge=1,delta=2
    74                           	psect	text27,local,class=CODE,merge=1,delta=2
    75                           	psect	text28,local,class=CODE,merge=1,delta=2
    76                           	psect	text29,local,class=CODE,merge=1,delta=2
    77                           	psect	text30,local,class=CODE,merge=1,delta=2
    78                           	psect	text31,local,class=CODE,merge=1,delta=2
    79                           	psect	text32,local,class=CODE,merge=1,delta=2
    80                           	psect	text33,local,class=CODE,merge=1,delta=2
    81                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text36,local,class=CODE,merge=1,delta=2
    84                           	psect	text37,local,class=CODE,merge=1,delta=2
    85                           	psect	text38,local,class=CODE,merge=1,delta=2
    86                           	psect	text39,local,class=CODE,merge=1,delta=2
    87                           	psect	text40,local,class=CODE,merge=1,delta=2
    88                           	psect	text41,local,class=CODE,merge=1,delta=2
    89                           	psect	text42,local,class=CODE,merge=1,delta=2
    90                           	psect	text43,local,class=CODE,merge=1,delta=2
    91                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text46,local,class=CODE,merge=1,delta=2
    94                           	psect	text47,local,class=CODE,merge=1,delta=2
    95                           	psect	text48,local,class=CODE,merge=1,delta=2
    96                           	psect	text49,local,class=CODE,merge=1,delta=2
    97                           	psect	text50,local,class=CODE,merge=1,delta=2
    98                           	psect	text51,local,class=CODE,merge=1,delta=2
    99                           	psect	text52,local,class=CODE,merge=1,delta=2
   100                           	psect	text53,local,class=CODE,merge=1,delta=2
   101                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text55,local,class=CODE,merge=1,delta=2
   103                           	psect	text56,local,class=CODE,merge=1,delta=2
   104                           	psect	text57,local,class=CODE,merge=1,delta=2
   105                           	psect	text58,local,class=CODE,merge=1,delta=2
   106                           	psect	text59,local,class=CODE,merge=1,delta=2
   107                           	psect	text60,local,class=CODE,merge=1,delta=2
   108                           	psect	text61,local,class=CODE,merge=1,delta=2
   109                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text63,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text64,local,class=CODE,merge=1,delta=2
   112                           	psect	text65,local,class=CODE,merge=1,delta=2
   113                           	psect	text66,local,class=CODE,merge=1,delta=2
   114                           	psect	text67,local,class=CODE,merge=1,delta=2
   115                           	psect	text68,local,class=CODE,merge=1,delta=2,group=2
   116                           	psect	text69,local,class=CODE,merge=1,delta=2
   117                           	psect	text70,local,class=CODE,merge=1,delta=2
   118                           	psect	text71,local,class=CODE,merge=1,delta=2
   119                           	psect	text72,local,class=CODE,merge=1,delta=2
   120                           	psect	text73,local,class=CODE,merge=1,delta=2
   121                           	psect	text74,local,class=CODE,merge=1,delta=2
   122                           	psect	text75,local,class=CODE,merge=1,delta=2
   123                           	psect	text76,local,class=CODE,merge=1,delta=2
   124                           	psect	text77,local,class=CODE,merge=1,delta=2
   125                           	psect	text78,local,class=CODE,merge=1,delta=2
   126                           	psect	text79,local,class=CODE,merge=1,delta=2
   127                           	psect	text80,local,class=CODE,merge=1,delta=2
   128                           	psect	text81,local,class=CODE,merge=1,delta=2
   129                           	psect	text82,local,class=CODE,merge=1,delta=2
   130                           	psect	text83,local,class=CODE,merge=1,delta=2
   131                           	psect	text84,local,class=CODE,merge=1,delta=2
   132                           	psect	text85,local,class=CODE,merge=1,delta=2
   133                           	psect	text86,local,class=CODE,merge=1,delta=2
   134                           	psect	text87,local,class=CODE,merge=1,delta=2
   135                           	psect	text88,local,class=CODE,merge=1,delta=2
   136                           	psect	text89,local,class=CODE,merge=1,delta=2
   137                           	psect	text90,local,class=CODE,merge=1,delta=2
   138                           	psect	text91,local,class=CODE,merge=1,delta=2
   139                           	psect	intentry,global,class=CODE,delta=2
   140                           	psect	text93,local,class=CODE,merge=1,delta=2
   141                           	psect	text94,local,class=CODE,merge=1,delta=2
   142                           	psect	text95,local,class=CODE,merge=1,delta=2
   143                           	dabs	1,0xCA0,32
   144                           	dabs	1,0xC20,80
   145                           	dabs	1,0xBA0,80
   146                           	dabs	1,0xB30,64
   147                           	dabs	1,0x26F0,0,_asciiCharTableLookup
   148                           	dabs	1,0x7E,2
   149  0000                     
   150                           ; Version 1.42
   151                           ; Generated 13/04/2017 GMT
   152                           ; 
   153                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC16LF18346 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0090                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0094                     	;# 
   226  0097                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  0111                     	;# 
   237  0112                     	;# 
   238  0113                     	;# 
   239  0114                     	;# 
   240  0115                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  0118                     	;# 
   244  0119                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  018E                     	;# 
   248  0199                     	;# 
   249  0199                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019A                     	;# 
   253  019A                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019C                     	;# 
   260  019C                     	;# 
   261  019C                     	;# 
   262  019D                     	;# 
   263  019D                     	;# 
   264  019D                     	;# 
   265  019E                     	;# 
   266  019E                     	;# 
   267  019E                     	;# 
   268  019F                     	;# 
   269  019F                     	;# 
   270  019F                     	;# 
   271  019F                     	;# 
   272  019F                     	;# 
   273  020C                     	;# 
   274  020D                     	;# 
   275  020E                     	;# 
   276  0211                     	;# 
   277  0211                     	;# 
   278  0212                     	;# 
   279  0212                     	;# 
   280  0213                     	;# 
   281  0213                     	;# 
   282  0214                     	;# 
   283  0214                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0216                     	;# 
   289  0216                     	;# 
   290  0217                     	;# 
   291  0217                     	;# 
   292  0219                     	;# 
   293  021A                     	;# 
   294  021B                     	;# 
   295  021C                     	;# 
   296  021D                     	;# 
   297  021D                     	;# 
   298  021E                     	;# 
   299  021F                     	;# 
   300  028C                     	;# 
   301  028D                     	;# 
   302  028E                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0294                     	;# 
   308  0295                     	;# 
   309  0295                     	;# 
   310  0296                     	;# 
   311  0297                     	;# 
   312  0298                     	;# 
   313  029F                     	;# 
   314  030C                     	;# 
   315  030D                     	;# 
   316  030E                     	;# 
   317  0311                     	;# 
   318  0311                     	;# 
   319  0312                     	;# 
   320  0313                     	;# 
   321  0314                     	;# 
   322  0315                     	;# 
   323  0315                     	;# 
   324  0316                     	;# 
   325  0317                     	;# 
   326  0318                     	;# 
   327  038C                     	;# 
   328  038D                     	;# 
   329  038E                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  0394                     	;# 
   334  0395                     	;# 
   335  0396                     	;# 
   336  0397                     	;# 
   337  0398                     	;# 
   338  0399                     	;# 
   339  039A                     	;# 
   340  039C                     	;# 
   341  039D                     	;# 
   342  039E                     	;# 
   343  039F                     	;# 
   344  0411                     	;# 
   345  0411                     	;# 
   346  0412                     	;# 
   347  0413                     	;# 
   348  0414                     	;# 
   349  0415                     	;# 
   350  0416                     	;# 
   351  0417                     	;# 
   352  0418                     	;# 
   353  0418                     	;# 
   354  0419                     	;# 
   355  041A                     	;# 
   356  041B                     	;# 
   357  041C                     	;# 
   358  041D                     	;# 
   359  041E                     	;# 
   360  041F                     	;# 
   361  0498                     	;# 
   362  0498                     	;# 
   363  0499                     	;# 
   364  049A                     	;# 
   365  049B                     	;# 
   366  049B                     	;# 
   367  049C                     	;# 
   368  049D                     	;# 
   369  049E                     	;# 
   370  049F                     	;# 
   371  0617                     	;# 
   372  0618                     	;# 
   373  0619                     	;# 
   374  0619                     	;# 
   375  061A                     	;# 
   376  061B                     	;# 
   377  061C                     	;# 
   378  061C                     	;# 
   379  061F                     	;# 
   380  0691                     	;# 
   381  0692                     	;# 
   382  0693                     	;# 
   383  0694                     	;# 
   384  0695                     	;# 
   385  0696                     	;# 
   386  0697                     	;# 
   387  0698                     	;# 
   388  0699                     	;# 
   389  0711                     	;# 
   390  0712                     	;# 
   391  0713                     	;# 
   392  0714                     	;# 
   393  0715                     	;# 
   394  0716                     	;# 
   395  0717                     	;# 
   396  0718                     	;# 
   397  0719                     	;# 
   398  0891                     	;# 
   399  0891                     	;# 
   400  0891                     	;# 
   401  0891                     	;# 
   402  0891                     	;# 
   403  0891                     	;# 
   404  0892                     	;# 
   405  0892                     	;# 
   406  0892                     	;# 
   407  0893                     	;# 
   408  0893                     	;# 
   409  0893                     	;# 
   410  0893                     	;# 
   411  0893                     	;# 
   412  0893                     	;# 
   413  0894                     	;# 
   414  0894                     	;# 
   415  0894                     	;# 
   416  0895                     	;# 
   417  0895                     	;# 
   418  0895                     	;# 
   419  0896                     	;# 
   420  0896                     	;# 
   421  0896                     	;# 
   422  089B                     	;# 
   423  0911                     	;# 
   424  0912                     	;# 
   425  0913                     	;# 
   426  0914                     	;# 
   427  0915                     	;# 
   428  0916                     	;# 
   429  0918                     	;# 
   430  0919                     	;# 
   431  091A                     	;# 
   432  091B                     	;# 
   433  091C                     	;# 
   434  091D                     	;# 
   435  091E                     	;# 
   436  091F                     	;# 
   437  0E0F                     	;# 
   438  0E10                     	;# 
   439  0E11                     	;# 
   440  0E12                     	;# 
   441  0E13                     	;# 
   442  0E14                     	;# 
   443  0E15                     	;# 
   444  0E16                     	;# 
   445  0E17                     	;# 
   446  0E18                     	;# 
   447  0E19                     	;# 
   448  0E1A                     	;# 
   449  0E1B                     	;# 
   450  0E1C                     	;# 
   451  0E1D                     	;# 
   452  0E1E                     	;# 
   453  0E1F                     	;# 
   454  0E20                     	;# 
   455  0E21                     	;# 
   456  0E22                     	;# 
   457  0E24                     	;# 
   458  0E25                     	;# 
   459  0E28                     	;# 
   460  0E29                     	;# 
   461  0E2A                     	;# 
   462  0E2B                     	;# 
   463  0E2C                     	;# 
   464  0E2D                     	;# 
   465  0E2E                     	;# 
   466  0E2F                     	;# 
   467  0E90                     	;# 
   468  0E91                     	;# 
   469  0E92                     	;# 
   470  0E94                     	;# 
   471  0E95                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0E9F                     	;# 
   476  0EA0                     	;# 
   477  0EA1                     	;# 
   478  0EA2                     	;# 
   479  0EA3                     	;# 
   480  0EA4                     	;# 
   481  0EA5                     	;# 
   482  0EA6                     	;# 
   483  0EA7                     	;# 
   484  0F0F                     	;# 
   485  0F10                     	;# 
   486  0F11                     	;# 
   487  0F12                     	;# 
   488  0F13                     	;# 
   489  0F14                     	;# 
   490  0F15                     	;# 
   491  0F16                     	;# 
   492  0F17                     	;# 
   493  0F18                     	;# 
   494  0F19                     	;# 
   495  0F1A                     	;# 
   496  0F1B                     	;# 
   497  0F1C                     	;# 
   498  0F1D                     	;# 
   499  0F1E                     	;# 
   500  0F1F                     	;# 
   501  0F20                     	;# 
   502  0F21                     	;# 
   503  0F22                     	;# 
   504  0F23                     	;# 
   505  0F24                     	;# 
   506  0F25                     	;# 
   507  0F26                     	;# 
   508  0F27                     	;# 
   509  0F28                     	;# 
   510  0F29                     	;# 
   511  0F2A                     	;# 
   512  0F2B                     	;# 
   513  0F2C                     	;# 
   514  0F2D                     	;# 
   515  0F2E                     	;# 
   516  0F2F                     	;# 
   517  0F30                     	;# 
   518  0F31                     	;# 
   519  0F32                     	;# 
   520  0F33                     	;# 
   521  0F34                     	;# 
   522  0F35                     	;# 
   523  0F36                     	;# 
   524  0F37                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  001D                     	;# 
   568  001E                     	;# 
   569  001F                     	;# 
   570  008C                     	;# 
   571  008D                     	;# 
   572  008E                     	;# 
   573  0090                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0094                     	;# 
   578  0097                     	;# 
   579  009B                     	;# 
   580  009B                     	;# 
   581  009C                     	;# 
   582  009D                     	;# 
   583  009E                     	;# 
   584  009F                     	;# 
   585  010C                     	;# 
   586  010D                     	;# 
   587  010E                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599  018E                     	;# 
   600  0199                     	;# 
   601  0199                     	;# 
   602  0199                     	;# 
   603  019A                     	;# 
   604  019A                     	;# 
   605  019A                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019C                     	;# 
   612  019C                     	;# 
   613  019C                     	;# 
   614  019D                     	;# 
   615  019D                     	;# 
   616  019D                     	;# 
   617  019E                     	;# 
   618  019E                     	;# 
   619  019E                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  019F                     	;# 
   624  019F                     	;# 
   625  020C                     	;# 
   626  020D                     	;# 
   627  020E                     	;# 
   628  0211                     	;# 
   629  0211                     	;# 
   630  0212                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0213                     	;# 
   634  0214                     	;# 
   635  0214                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0216                     	;# 
   641  0216                     	;# 
   642  0217                     	;# 
   643  0217                     	;# 
   644  0219                     	;# 
   645  021A                     	;# 
   646  021B                     	;# 
   647  021C                     	;# 
   648  021D                     	;# 
   649  021D                     	;# 
   650  021E                     	;# 
   651  021F                     	;# 
   652  028C                     	;# 
   653  028D                     	;# 
   654  028E                     	;# 
   655  0291                     	;# 
   656  0291                     	;# 
   657  0292                     	;# 
   658  0293                     	;# 
   659  0294                     	;# 
   660  0295                     	;# 
   661  0295                     	;# 
   662  0296                     	;# 
   663  0297                     	;# 
   664  0298                     	;# 
   665  029F                     	;# 
   666  030C                     	;# 
   667  030D                     	;# 
   668  030E                     	;# 
   669  0311                     	;# 
   670  0311                     	;# 
   671  0312                     	;# 
   672  0313                     	;# 
   673  0314                     	;# 
   674  0315                     	;# 
   675  0315                     	;# 
   676  0316                     	;# 
   677  0317                     	;# 
   678  0318                     	;# 
   679  038C                     	;# 
   680  038D                     	;# 
   681  038E                     	;# 
   682  0391                     	;# 
   683  0392                     	;# 
   684  0393                     	;# 
   685  0394                     	;# 
   686  0395                     	;# 
   687  0396                     	;# 
   688  0397                     	;# 
   689  0398                     	;# 
   690  0399                     	;# 
   691  039A                     	;# 
   692  039C                     	;# 
   693  039D                     	;# 
   694  039E                     	;# 
   695  039F                     	;# 
   696  0411                     	;# 
   697  0411                     	;# 
   698  0412                     	;# 
   699  0413                     	;# 
   700  0414                     	;# 
   701  0415                     	;# 
   702  0416                     	;# 
   703  0417                     	;# 
   704  0418                     	;# 
   705  0418                     	;# 
   706  0419                     	;# 
   707  041A                     	;# 
   708  041B                     	;# 
   709  041C                     	;# 
   710  041D                     	;# 
   711  041E                     	;# 
   712  041F                     	;# 
   713  0498                     	;# 
   714  0498                     	;# 
   715  0499                     	;# 
   716  049A                     	;# 
   717  049B                     	;# 
   718  049B                     	;# 
   719  049C                     	;# 
   720  049D                     	;# 
   721  049E                     	;# 
   722  049F                     	;# 
   723  0617                     	;# 
   724  0618                     	;# 
   725  0619                     	;# 
   726  0619                     	;# 
   727  061A                     	;# 
   728  061B                     	;# 
   729  061C                     	;# 
   730  061C                     	;# 
   731  061F                     	;# 
   732  0691                     	;# 
   733  0692                     	;# 
   734  0693                     	;# 
   735  0694                     	;# 
   736  0695                     	;# 
   737  0696                     	;# 
   738  0697                     	;# 
   739  0698                     	;# 
   740  0699                     	;# 
   741  0711                     	;# 
   742  0712                     	;# 
   743  0713                     	;# 
   744  0714                     	;# 
   745  0715                     	;# 
   746  0716                     	;# 
   747  0717                     	;# 
   748  0718                     	;# 
   749  0719                     	;# 
   750  0891                     	;# 
   751  0891                     	;# 
   752  0891                     	;# 
   753  0891                     	;# 
   754  0891                     	;# 
   755  0891                     	;# 
   756  0892                     	;# 
   757  0892                     	;# 
   758  0892                     	;# 
   759  0893                     	;# 
   760  0893                     	;# 
   761  0893                     	;# 
   762  0893                     	;# 
   763  0893                     	;# 
   764  0893                     	;# 
   765  0894                     	;# 
   766  0894                     	;# 
   767  0894                     	;# 
   768  0895                     	;# 
   769  0895                     	;# 
   770  0895                     	;# 
   771  0896                     	;# 
   772  0896                     	;# 
   773  0896                     	;# 
   774  089B                     	;# 
   775  0911                     	;# 
   776  0912                     	;# 
   777  0913                     	;# 
   778  0914                     	;# 
   779  0915                     	;# 
   780  0916                     	;# 
   781  0918                     	;# 
   782  0919                     	;# 
   783  091A                     	;# 
   784  091B                     	;# 
   785  091C                     	;# 
   786  091D                     	;# 
   787  091E                     	;# 
   788  091F                     	;# 
   789  0E0F                     	;# 
   790  0E10                     	;# 
   791  0E11                     	;# 
   792  0E12                     	;# 
   793  0E13                     	;# 
   794  0E14                     	;# 
   795  0E15                     	;# 
   796  0E16                     	;# 
   797  0E17                     	;# 
   798  0E18                     	;# 
   799  0E19                     	;# 
   800  0E1A                     	;# 
   801  0E1B                     	;# 
   802  0E1C                     	;# 
   803  0E1D                     	;# 
   804  0E1E                     	;# 
   805  0E1F                     	;# 
   806  0E20                     	;# 
   807  0E21                     	;# 
   808  0E22                     	;# 
   809  0E24                     	;# 
   810  0E25                     	;# 
   811  0E28                     	;# 
   812  0E29                     	;# 
   813  0E2A                     	;# 
   814  0E2B                     	;# 
   815  0E2C                     	;# 
   816  0E2D                     	;# 
   817  0E2E                     	;# 
   818  0E2F                     	;# 
   819  0E90                     	;# 
   820  0E91                     	;# 
   821  0E92                     	;# 
   822  0E94                     	;# 
   823  0E95                     	;# 
   824  0E9C                     	;# 
   825  0E9D                     	;# 
   826  0E9E                     	;# 
   827  0E9F                     	;# 
   828  0EA0                     	;# 
   829  0EA1                     	;# 
   830  0EA2                     	;# 
   831  0EA3                     	;# 
   832  0EA4                     	;# 
   833  0EA5                     	;# 
   834  0EA6                     	;# 
   835  0EA7                     	;# 
   836  0F0F                     	;# 
   837  0F10                     	;# 
   838  0F11                     	;# 
   839  0F12                     	;# 
   840  0F13                     	;# 
   841  0F14                     	;# 
   842  0F15                     	;# 
   843  0F16                     	;# 
   844  0F17                     	;# 
   845  0F18                     	;# 
   846  0F19                     	;# 
   847  0F1A                     	;# 
   848  0F1B                     	;# 
   849  0F1C                     	;# 
   850  0F1D                     	;# 
   851  0F1E                     	;# 
   852  0F1F                     	;# 
   853  0F20                     	;# 
   854  0F21                     	;# 
   855  0F22                     	;# 
   856  0F23                     	;# 
   857  0F24                     	;# 
   858  0F25                     	;# 
   859  0F26                     	;# 
   860  0F27                     	;# 
   861  0F28                     	;# 
   862  0F29                     	;# 
   863  0F2A                     	;# 
   864  0F2B                     	;# 
   865  0F2C                     	;# 
   866  0F2D                     	;# 
   867  0F2E                     	;# 
   868  0F2F                     	;# 
   869  0F30                     	;# 
   870  0F31                     	;# 
   871  0F32                     	;# 
   872  0F33                     	;# 
   873  0F34                     	;# 
   874  0F35                     	;# 
   875  0F36                     	;# 
   876  0F37                     	;# 
   877  0FE4                     	;# 
   878  0FE5                     	;# 
   879  0FE6                     	;# 
   880  0FE7                     	;# 
   881  0FE8                     	;# 
   882  0FE9                     	;# 
   883  0FEA                     	;# 
   884  0FEB                     	;# 
   885  0FED                     	;# 
   886  0FEE                     	;# 
   887  0FEF                     	;# 
   888  0000                     	;# 
   889  0001                     	;# 
   890  0002                     	;# 
   891  0003                     	;# 
   892  0004                     	;# 
   893  0005                     	;# 
   894  0006                     	;# 
   895  0007                     	;# 
   896  0008                     	;# 
   897  0009                     	;# 
   898  000A                     	;# 
   899  000B                     	;# 
   900  000C                     	;# 
   901  000D                     	;# 
   902  000E                     	;# 
   903  0010                     	;# 
   904  0011                     	;# 
   905  0012                     	;# 
   906  0013                     	;# 
   907  0014                     	;# 
   908  0015                     	;# 
   909  0015                     	;# 
   910  0016                     	;# 
   911  0016                     	;# 
   912  0017                     	;# 
   913  0018                     	;# 
   914  0019                     	;# 
   915  0019                     	;# 
   916  001A                     	;# 
   917  001B                     	;# 
   918  001C                     	;# 
   919  001D                     	;# 
   920  001E                     	;# 
   921  001F                     	;# 
   922  008C                     	;# 
   923  008D                     	;# 
   924  008E                     	;# 
   925  0090                     	;# 
   926  0091                     	;# 
   927  0092                     	;# 
   928  0093                     	;# 
   929  0094                     	;# 
   930  0097                     	;# 
   931  009B                     	;# 
   932  009B                     	;# 
   933  009C                     	;# 
   934  009D                     	;# 
   935  009E                     	;# 
   936  009F                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  0111                     	;# 
   941  0112                     	;# 
   942  0113                     	;# 
   943  0114                     	;# 
   944  0115                     	;# 
   945  0116                     	;# 
   946  0117                     	;# 
   947  0118                     	;# 
   948  0119                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  018E                     	;# 
   952  0199                     	;# 
   953  0199                     	;# 
   954  0199                     	;# 
   955  019A                     	;# 
   956  019A                     	;# 
   957  019A                     	;# 
   958  019B                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019B                     	;# 
   962  019B                     	;# 
   963  019C                     	;# 
   964  019C                     	;# 
   965  019C                     	;# 
   966  019D                     	;# 
   967  019D                     	;# 
   968  019D                     	;# 
   969  019E                     	;# 
   970  019E                     	;# 
   971  019E                     	;# 
   972  019F                     	;# 
   973  019F                     	;# 
   974  019F                     	;# 
   975  019F                     	;# 
   976  019F                     	;# 
   977  020C                     	;# 
   978  020D                     	;# 
   979  020E                     	;# 
   980  0211                     	;# 
   981  0211                     	;# 
   982  0212                     	;# 
   983  0212                     	;# 
   984  0213                     	;# 
   985  0213                     	;# 
   986  0214                     	;# 
   987  0214                     	;# 
   988  0215                     	;# 
   989  0215                     	;# 
   990  0215                     	;# 
   991  0215                     	;# 
   992  0216                     	;# 
   993  0216                     	;# 
   994  0217                     	;# 
   995  0217                     	;# 
   996  0219                     	;# 
   997  021A                     	;# 
   998  021B                     	;# 
   999  021C                     	;# 
  1000  021D                     	;# 
  1001  021D                     	;# 
  1002  021E                     	;# 
  1003  021F                     	;# 
  1004  028C                     	;# 
  1005  028D                     	;# 
  1006  028E                     	;# 
  1007  0291                     	;# 
  1008  0291                     	;# 
  1009  0292                     	;# 
  1010  0293                     	;# 
  1011  0294                     	;# 
  1012  0295                     	;# 
  1013  0295                     	;# 
  1014  0296                     	;# 
  1015  0297                     	;# 
  1016  0298                     	;# 
  1017  029F                     	;# 
  1018  030C                     	;# 
  1019  030D                     	;# 
  1020  030E                     	;# 
  1021  0311                     	;# 
  1022  0311                     	;# 
  1023  0312                     	;# 
  1024  0313                     	;# 
  1025  0314                     	;# 
  1026  0315                     	;# 
  1027  0315                     	;# 
  1028  0316                     	;# 
  1029  0317                     	;# 
  1030  0318                     	;# 
  1031  038C                     	;# 
  1032  038D                     	;# 
  1033  038E                     	;# 
  1034  0391                     	;# 
  1035  0392                     	;# 
  1036  0393                     	;# 
  1037  0394                     	;# 
  1038  0395                     	;# 
  1039  0396                     	;# 
  1040  0397                     	;# 
  1041  0398                     	;# 
  1042  0399                     	;# 
  1043  039A                     	;# 
  1044  039C                     	;# 
  1045  039D                     	;# 
  1046  039E                     	;# 
  1047  039F                     	;# 
  1048  0411                     	;# 
  1049  0411                     	;# 
  1050  0412                     	;# 
  1051  0413                     	;# 
  1052  0414                     	;# 
  1053  0415                     	;# 
  1054  0416                     	;# 
  1055  0417                     	;# 
  1056  0418                     	;# 
  1057  0418                     	;# 
  1058  0419                     	;# 
  1059  041A                     	;# 
  1060  041B                     	;# 
  1061  041C                     	;# 
  1062  041D                     	;# 
  1063  041E                     	;# 
  1064  041F                     	;# 
  1065  0498                     	;# 
  1066  0498                     	;# 
  1067  0499                     	;# 
  1068  049A                     	;# 
  1069  049B                     	;# 
  1070  049B                     	;# 
  1071  049C                     	;# 
  1072  049D                     	;# 
  1073  049E                     	;# 
  1074  049F                     	;# 
  1075  0617                     	;# 
  1076  0618                     	;# 
  1077  0619                     	;# 
  1078  0619                     	;# 
  1079  061A                     	;# 
  1080  061B                     	;# 
  1081  061C                     	;# 
  1082  061C                     	;# 
  1083  061F                     	;# 
  1084  0691                     	;# 
  1085  0692                     	;# 
  1086  0693                     	;# 
  1087  0694                     	;# 
  1088  0695                     	;# 
  1089  0696                     	;# 
  1090  0697                     	;# 
  1091  0698                     	;# 
  1092  0699                     	;# 
  1093  0711                     	;# 
  1094  0712                     	;# 
  1095  0713                     	;# 
  1096  0714                     	;# 
  1097  0715                     	;# 
  1098  0716                     	;# 
  1099  0717                     	;# 
  1100  0718                     	;# 
  1101  0719                     	;# 
  1102  0891                     	;# 
  1103  0891                     	;# 
  1104  0891                     	;# 
  1105  0891                     	;# 
  1106  0891                     	;# 
  1107  0891                     	;# 
  1108  0892                     	;# 
  1109  0892                     	;# 
  1110  0892                     	;# 
  1111  0893                     	;# 
  1112  0893                     	;# 
  1113  0893                     	;# 
  1114  0893                     	;# 
  1115  0893                     	;# 
  1116  0893                     	;# 
  1117  0894                     	;# 
  1118  0894                     	;# 
  1119  0894                     	;# 
  1120  0895                     	;# 
  1121  0895                     	;# 
  1122  0895                     	;# 
  1123  0896                     	;# 
  1124  0896                     	;# 
  1125  0896                     	;# 
  1126  089B                     	;# 
  1127  0911                     	;# 
  1128  0912                     	;# 
  1129  0913                     	;# 
  1130  0914                     	;# 
  1131  0915                     	;# 
  1132  0916                     	;# 
  1133  0918                     	;# 
  1134  0919                     	;# 
  1135  091A                     	;# 
  1136  091B                     	;# 
  1137  091C                     	;# 
  1138  091D                     	;# 
  1139  091E                     	;# 
  1140  091F                     	;# 
  1141  0E0F                     	;# 
  1142  0E10                     	;# 
  1143  0E11                     	;# 
  1144  0E12                     	;# 
  1145  0E13                     	;# 
  1146  0E14                     	;# 
  1147  0E15                     	;# 
  1148  0E16                     	;# 
  1149  0E17                     	;# 
  1150  0E18                     	;# 
  1151  0E19                     	;# 
  1152  0E1A                     	;# 
  1153  0E1B                     	;# 
  1154  0E1C                     	;# 
  1155  0E1D                     	;# 
  1156  0E1E                     	;# 
  1157  0E1F                     	;# 
  1158  0E20                     	;# 
  1159  0E21                     	;# 
  1160  0E22                     	;# 
  1161  0E24                     	;# 
  1162  0E25                     	;# 
  1163  0E28                     	;# 
  1164  0E29                     	;# 
  1165  0E2A                     	;# 
  1166  0E2B                     	;# 
  1167  0E2C                     	;# 
  1168  0E2D                     	;# 
  1169  0E2E                     	;# 
  1170  0E2F                     	;# 
  1171  0E90                     	;# 
  1172  0E91                     	;# 
  1173  0E92                     	;# 
  1174  0E94                     	;# 
  1175  0E95                     	;# 
  1176  0E9C                     	;# 
  1177  0E9D                     	;# 
  1178  0E9E                     	;# 
  1179  0E9F                     	;# 
  1180  0EA0                     	;# 
  1181  0EA1                     	;# 
  1182  0EA2                     	;# 
  1183  0EA3                     	;# 
  1184  0EA4                     	;# 
  1185  0EA5                     	;# 
  1186  0EA6                     	;# 
  1187  0EA7                     	;# 
  1188  0F0F                     	;# 
  1189  0F10                     	;# 
  1190  0F11                     	;# 
  1191  0F12                     	;# 
  1192  0F13                     	;# 
  1193  0F14                     	;# 
  1194  0F15                     	;# 
  1195  0F16                     	;# 
  1196  0F17                     	;# 
  1197  0F18                     	;# 
  1198  0F19                     	;# 
  1199  0F1A                     	;# 
  1200  0F1B                     	;# 
  1201  0F1C                     	;# 
  1202  0F1D                     	;# 
  1203  0F1E                     	;# 
  1204  0F1F                     	;# 
  1205  0F20                     	;# 
  1206  0F21                     	;# 
  1207  0F22                     	;# 
  1208  0F23                     	;# 
  1209  0F24                     	;# 
  1210  0F25                     	;# 
  1211  0F26                     	;# 
  1212  0F27                     	;# 
  1213  0F28                     	;# 
  1214  0F29                     	;# 
  1215  0F2A                     	;# 
  1216  0F2B                     	;# 
  1217  0F2C                     	;# 
  1218  0F2D                     	;# 
  1219  0F2E                     	;# 
  1220  0F2F                     	;# 
  1221  0F30                     	;# 
  1222  0F31                     	;# 
  1223  0F32                     	;# 
  1224  0F33                     	;# 
  1225  0F34                     	;# 
  1226  0F35                     	;# 
  1227  0F36                     	;# 
  1228  0F37                     	;# 
  1229  0FE4                     	;# 
  1230  0FE5                     	;# 
  1231  0FE6                     	;# 
  1232  0FE7                     	;# 
  1233  0FE8                     	;# 
  1234  0FE9                     	;# 
  1235  0FEA                     	;# 
  1236  0FEB                     	;# 
  1237  0FED                     	;# 
  1238  0FEE                     	;# 
  1239  0FEF                     	;# 
  1240  0000                     	;# 
  1241  0001                     	;# 
  1242  0002                     	;# 
  1243  0003                     	;# 
  1244  0004                     	;# 
  1245  0005                     	;# 
  1246  0006                     	;# 
  1247  0007                     	;# 
  1248  0008                     	;# 
  1249  0009                     	;# 
  1250  000A                     	;# 
  1251  000B                     	;# 
  1252  000C                     	;# 
  1253  000D                     	;# 
  1254  000E                     	;# 
  1255  0010                     	;# 
  1256  0011                     	;# 
  1257  0012                     	;# 
  1258  0013                     	;# 
  1259  0014                     	;# 
  1260  0015                     	;# 
  1261  0015                     	;# 
  1262  0016                     	;# 
  1263  0016                     	;# 
  1264  0017                     	;# 
  1265  0018                     	;# 
  1266  0019                     	;# 
  1267  0019                     	;# 
  1268  001A                     	;# 
  1269  001B                     	;# 
  1270  001C                     	;# 
  1271  001D                     	;# 
  1272  001E                     	;# 
  1273  001F                     	;# 
  1274  008C                     	;# 
  1275  008D                     	;# 
  1276  008E                     	;# 
  1277  0090                     	;# 
  1278  0091                     	;# 
  1279  0092                     	;# 
  1280  0093                     	;# 
  1281  0094                     	;# 
  1282  0097                     	;# 
  1283  009B                     	;# 
  1284  009B                     	;# 
  1285  009C                     	;# 
  1286  009D                     	;# 
  1287  009E                     	;# 
  1288  009F                     	;# 
  1289  010C                     	;# 
  1290  010D                     	;# 
  1291  010E                     	;# 
  1292  0111                     	;# 
  1293  0112                     	;# 
  1294  0113                     	;# 
  1295  0114                     	;# 
  1296  0115                     	;# 
  1297  0116                     	;# 
  1298  0117                     	;# 
  1299  0118                     	;# 
  1300  0119                     	;# 
  1301  018C                     	;# 
  1302  018D                     	;# 
  1303  018E                     	;# 
  1304  0199                     	;# 
  1305  0199                     	;# 
  1306  0199                     	;# 
  1307  019A                     	;# 
  1308  019A                     	;# 
  1309  019A                     	;# 
  1310  019B                     	;# 
  1311  019B                     	;# 
  1312  019B                     	;# 
  1313  019B                     	;# 
  1314  019B                     	;# 
  1315  019C                     	;# 
  1316  019C                     	;# 
  1317  019C                     	;# 
  1318  019D                     	;# 
  1319  019D                     	;# 
  1320  019D                     	;# 
  1321  019E                     	;# 
  1322  019E                     	;# 
  1323  019E                     	;# 
  1324  019F                     	;# 
  1325  019F                     	;# 
  1326  019F                     	;# 
  1327  019F                     	;# 
  1328  019F                     	;# 
  1329  020C                     	;# 
  1330  020D                     	;# 
  1331  020E                     	;# 
  1332  0211                     	;# 
  1333  0211                     	;# 
  1334  0212                     	;# 
  1335  0212                     	;# 
  1336  0213                     	;# 
  1337  0213                     	;# 
  1338  0214                     	;# 
  1339  0214                     	;# 
  1340  0215                     	;# 
  1341  0215                     	;# 
  1342  0215                     	;# 
  1343  0215                     	;# 
  1344  0216                     	;# 
  1345  0216                     	;# 
  1346  0217                     	;# 
  1347  0217                     	;# 
  1348  0219                     	;# 
  1349  021A                     	;# 
  1350  021B                     	;# 
  1351  021C                     	;# 
  1352  021D                     	;# 
  1353  021D                     	;# 
  1354  021E                     	;# 
  1355  021F                     	;# 
  1356  028C                     	;# 
  1357  028D                     	;# 
  1358  028E                     	;# 
  1359  0291                     	;# 
  1360  0291                     	;# 
  1361  0292                     	;# 
  1362  0293                     	;# 
  1363  0294                     	;# 
  1364  0295                     	;# 
  1365  0295                     	;# 
  1366  0296                     	;# 
  1367  0297                     	;# 
  1368  0298                     	;# 
  1369  029F                     	;# 
  1370  030C                     	;# 
  1371  030D                     	;# 
  1372  030E                     	;# 
  1373  0311                     	;# 
  1374  0311                     	;# 
  1375  0312                     	;# 
  1376  0313                     	;# 
  1377  0314                     	;# 
  1378  0315                     	;# 
  1379  0315                     	;# 
  1380  0316                     	;# 
  1381  0317                     	;# 
  1382  0318                     	;# 
  1383  038C                     	;# 
  1384  038D                     	;# 
  1385  038E                     	;# 
  1386  0391                     	;# 
  1387  0392                     	;# 
  1388  0393                     	;# 
  1389  0394                     	;# 
  1390  0395                     	;# 
  1391  0396                     	;# 
  1392  0397                     	;# 
  1393  0398                     	;# 
  1394  0399                     	;# 
  1395  039A                     	;# 
  1396  039C                     	;# 
  1397  039D                     	;# 
  1398  039E                     	;# 
  1399  039F                     	;# 
  1400  0411                     	;# 
  1401  0411                     	;# 
  1402  0412                     	;# 
  1403  0413                     	;# 
  1404  0414                     	;# 
  1405  0415                     	;# 
  1406  0416                     	;# 
  1407  0417                     	;# 
  1408  0418                     	;# 
  1409  0418                     	;# 
  1410  0419                     	;# 
  1411  041A                     	;# 
  1412  041B                     	;# 
  1413  041C                     	;# 
  1414  041D                     	;# 
  1415  041E                     	;# 
  1416  041F                     	;# 
  1417  0498                     	;# 
  1418  0498                     	;# 
  1419  0499                     	;# 
  1420  049A                     	;# 
  1421  049B                     	;# 
  1422  049B                     	;# 
  1423  049C                     	;# 
  1424  049D                     	;# 
  1425  049E                     	;# 
  1426  049F                     	;# 
  1427  0617                     	;# 
  1428  0618                     	;# 
  1429  0619                     	;# 
  1430  0619                     	;# 
  1431  061A                     	;# 
  1432  061B                     	;# 
  1433  061C                     	;# 
  1434  061C                     	;# 
  1435  061F                     	;# 
  1436  0691                     	;# 
  1437  0692                     	;# 
  1438  0693                     	;# 
  1439  0694                     	;# 
  1440  0695                     	;# 
  1441  0696                     	;# 
  1442  0697                     	;# 
  1443  0698                     	;# 
  1444  0699                     	;# 
  1445  0711                     	;# 
  1446  0712                     	;# 
  1447  0713                     	;# 
  1448  0714                     	;# 
  1449  0715                     	;# 
  1450  0716                     	;# 
  1451  0717                     	;# 
  1452  0718                     	;# 
  1453  0719                     	;# 
  1454  0891                     	;# 
  1455  0891                     	;# 
  1456  0891                     	;# 
  1457  0891                     	;# 
  1458  0891                     	;# 
  1459  0891                     	;# 
  1460  0892                     	;# 
  1461  0892                     	;# 
  1462  0892                     	;# 
  1463  0893                     	;# 
  1464  0893                     	;# 
  1465  0893                     	;# 
  1466  0893                     	;# 
  1467  0893                     	;# 
  1468  0893                     	;# 
  1469  0894                     	;# 
  1470  0894                     	;# 
  1471  0894                     	;# 
  1472  0895                     	;# 
  1473  0895                     	;# 
  1474  0895                     	;# 
  1475  0896                     	;# 
  1476  0896                     	;# 
  1477  0896                     	;# 
  1478  089B                     	;# 
  1479  0911                     	;# 
  1480  0912                     	;# 
  1481  0913                     	;# 
  1482  0914                     	;# 
  1483  0915                     	;# 
  1484  0916                     	;# 
  1485  0918                     	;# 
  1486  0919                     	;# 
  1487  091A                     	;# 
  1488  091B                     	;# 
  1489  091C                     	;# 
  1490  091D                     	;# 
  1491  091E                     	;# 
  1492  091F                     	;# 
  1493  0E0F                     	;# 
  1494  0E10                     	;# 
  1495  0E11                     	;# 
  1496  0E12                     	;# 
  1497  0E13                     	;# 
  1498  0E14                     	;# 
  1499  0E15                     	;# 
  1500  0E16                     	;# 
  1501  0E17                     	;# 
  1502  0E18                     	;# 
  1503  0E19                     	;# 
  1504  0E1A                     	;# 
  1505  0E1B                     	;# 
  1506  0E1C                     	;# 
  1507  0E1D                     	;# 
  1508  0E1E                     	;# 
  1509  0E1F                     	;# 
  1510  0E20                     	;# 
  1511  0E21                     	;# 
  1512  0E22                     	;# 
  1513  0E24                     	;# 
  1514  0E25                     	;# 
  1515  0E28                     	;# 
  1516  0E29                     	;# 
  1517  0E2A                     	;# 
  1518  0E2B                     	;# 
  1519  0E2C                     	;# 
  1520  0E2D                     	;# 
  1521  0E2E                     	;# 
  1522  0E2F                     	;# 
  1523  0E90                     	;# 
  1524  0E91                     	;# 
  1525  0E92                     	;# 
  1526  0E94                     	;# 
  1527  0E95                     	;# 
  1528  0E9C                     	;# 
  1529  0E9D                     	;# 
  1530  0E9E                     	;# 
  1531  0E9F                     	;# 
  1532  0EA0                     	;# 
  1533  0EA1                     	;# 
  1534  0EA2                     	;# 
  1535  0EA3                     	;# 
  1536  0EA4                     	;# 
  1537  0EA5                     	;# 
  1538  0EA6                     	;# 
  1539  0EA7                     	;# 
  1540  0F0F                     	;# 
  1541  0F10                     	;# 
  1542  0F11                     	;# 
  1543  0F12                     	;# 
  1544  0F13                     	;# 
  1545  0F14                     	;# 
  1546  0F15                     	;# 
  1547  0F16                     	;# 
  1548  0F17                     	;# 
  1549  0F18                     	;# 
  1550  0F19                     	;# 
  1551  0F1A                     	;# 
  1552  0F1B                     	;# 
  1553  0F1C                     	;# 
  1554  0F1D                     	;# 
  1555  0F1E                     	;# 
  1556  0F1F                     	;# 
  1557  0F20                     	;# 
  1558  0F21                     	;# 
  1559  0F22                     	;# 
  1560  0F23                     	;# 
  1561  0F24                     	;# 
  1562  0F25                     	;# 
  1563  0F26                     	;# 
  1564  0F27                     	;# 
  1565  0F28                     	;# 
  1566  0F29                     	;# 
  1567  0F2A                     	;# 
  1568  0F2B                     	;# 
  1569  0F2C                     	;# 
  1570  0F2D                     	;# 
  1571  0F2E                     	;# 
  1572  0F2F                     	;# 
  1573  0F30                     	;# 
  1574  0F31                     	;# 
  1575  0F32                     	;# 
  1576  0F33                     	;# 
  1577  0F34                     	;# 
  1578  0F35                     	;# 
  1579  0F36                     	;# 
  1580  0F37                     	;# 
  1581  0FE4                     	;# 
  1582  0FE5                     	;# 
  1583  0FE6                     	;# 
  1584  0FE7                     	;# 
  1585  0FE8                     	;# 
  1586  0FE9                     	;# 
  1587  0FEA                     	;# 
  1588  0FEB                     	;# 
  1589  0FED                     	;# 
  1590  0FEE                     	;# 
  1591  0FEF                     	;# 
  1592  0000                     	;# 
  1593  0001                     	;# 
  1594  0002                     	;# 
  1595  0003                     	;# 
  1596  0004                     	;# 
  1597  0005                     	;# 
  1598  0006                     	;# 
  1599  0007                     	;# 
  1600  0008                     	;# 
  1601  0009                     	;# 
  1602  000A                     	;# 
  1603  000B                     	;# 
  1604  000C                     	;# 
  1605  000D                     	;# 
  1606  000E                     	;# 
  1607  0010                     	;# 
  1608  0011                     	;# 
  1609  0012                     	;# 
  1610  0013                     	;# 
  1611  0014                     	;# 
  1612  0015                     	;# 
  1613  0015                     	;# 
  1614  0016                     	;# 
  1615  0016                     	;# 
  1616  0017                     	;# 
  1617  0018                     	;# 
  1618  0019                     	;# 
  1619  0019                     	;# 
  1620  001A                     	;# 
  1621  001B                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001E                     	;# 
  1625  001F                     	;# 
  1626  008C                     	;# 
  1627  008D                     	;# 
  1628  008E                     	;# 
  1629  0090                     	;# 
  1630  0091                     	;# 
  1631  0092                     	;# 
  1632  0093                     	;# 
  1633  0094                     	;# 
  1634  0097                     	;# 
  1635  009B                     	;# 
  1636  009B                     	;# 
  1637  009C                     	;# 
  1638  009D                     	;# 
  1639  009E                     	;# 
  1640  009F                     	;# 
  1641  010C                     	;# 
  1642  010D                     	;# 
  1643  010E                     	;# 
  1644  0111                     	;# 
  1645  0112                     	;# 
  1646  0113                     	;# 
  1647  0114                     	;# 
  1648  0115                     	;# 
  1649  0116                     	;# 
  1650  0117                     	;# 
  1651  0118                     	;# 
  1652  0119                     	;# 
  1653  018C                     	;# 
  1654  018D                     	;# 
  1655  018E                     	;# 
  1656  0199                     	;# 
  1657  0199                     	;# 
  1658  0199                     	;# 
  1659  019A                     	;# 
  1660  019A                     	;# 
  1661  019A                     	;# 
  1662  019B                     	;# 
  1663  019B                     	;# 
  1664  019B                     	;# 
  1665  019B                     	;# 
  1666  019B                     	;# 
  1667  019C                     	;# 
  1668  019C                     	;# 
  1669  019C                     	;# 
  1670  019D                     	;# 
  1671  019D                     	;# 
  1672  019D                     	;# 
  1673  019E                     	;# 
  1674  019E                     	;# 
  1675  019E                     	;# 
  1676  019F                     	;# 
  1677  019F                     	;# 
  1678  019F                     	;# 
  1679  019F                     	;# 
  1680  019F                     	;# 
  1681  020C                     	;# 
  1682  020D                     	;# 
  1683  020E                     	;# 
  1684  0211                     	;# 
  1685  0211                     	;# 
  1686  0212                     	;# 
  1687  0212                     	;# 
  1688  0213                     	;# 
  1689  0213                     	;# 
  1690  0214                     	;# 
  1691  0214                     	;# 
  1692  0215                     	;# 
  1693  0215                     	;# 
  1694  0215                     	;# 
  1695  0215                     	;# 
  1696  0216                     	;# 
  1697  0216                     	;# 
  1698  0217                     	;# 
  1699  0217                     	;# 
  1700  0219                     	;# 
  1701  021A                     	;# 
  1702  021B                     	;# 
  1703  021C                     	;# 
  1704  021D                     	;# 
  1705  021D                     	;# 
  1706  021E                     	;# 
  1707  021F                     	;# 
  1708  028C                     	;# 
  1709  028D                     	;# 
  1710  028E                     	;# 
  1711  0291                     	;# 
  1712  0291                     	;# 
  1713  0292                     	;# 
  1714  0293                     	;# 
  1715  0294                     	;# 
  1716  0295                     	;# 
  1717  0295                     	;# 
  1718  0296                     	;# 
  1719  0297                     	;# 
  1720  0298                     	;# 
  1721  029F                     	;# 
  1722  030C                     	;# 
  1723  030D                     	;# 
  1724  030E                     	;# 
  1725  0311                     	;# 
  1726  0311                     	;# 
  1727  0312                     	;# 
  1728  0313                     	;# 
  1729  0314                     	;# 
  1730  0315                     	;# 
  1731  0315                     	;# 
  1732  0316                     	;# 
  1733  0317                     	;# 
  1734  0318                     	;# 
  1735  038C                     	;# 
  1736  038D                     	;# 
  1737  038E                     	;# 
  1738  0391                     	;# 
  1739  0392                     	;# 
  1740  0393                     	;# 
  1741  0394                     	;# 
  1742  0395                     	;# 
  1743  0396                     	;# 
  1744  0397                     	;# 
  1745  0398                     	;# 
  1746  0399                     	;# 
  1747  039A                     	;# 
  1748  039C                     	;# 
  1749  039D                     	;# 
  1750  039E                     	;# 
  1751  039F                     	;# 
  1752  0411                     	;# 
  1753  0411                     	;# 
  1754  0412                     	;# 
  1755  0413                     	;# 
  1756  0414                     	;# 
  1757  0415                     	;# 
  1758  0416                     	;# 
  1759  0417                     	;# 
  1760  0418                     	;# 
  1761  0418                     	;# 
  1762  0419                     	;# 
  1763  041A                     	;# 
  1764  041B                     	;# 
  1765  041C                     	;# 
  1766  041D                     	;# 
  1767  041E                     	;# 
  1768  041F                     	;# 
  1769  0498                     	;# 
  1770  0498                     	;# 
  1771  0499                     	;# 
  1772  049A                     	;# 
  1773  049B                     	;# 
  1774  049B                     	;# 
  1775  049C                     	;# 
  1776  049D                     	;# 
  1777  049E                     	;# 
  1778  049F                     	;# 
  1779  0617                     	;# 
  1780  0618                     	;# 
  1781  0619                     	;# 
  1782  0619                     	;# 
  1783  061A                     	;# 
  1784  061B                     	;# 
  1785  061C                     	;# 
  1786  061C                     	;# 
  1787  061F                     	;# 
  1788  0691                     	;# 
  1789  0692                     	;# 
  1790  0693                     	;# 
  1791  0694                     	;# 
  1792  0695                     	;# 
  1793  0696                     	;# 
  1794  0697                     	;# 
  1795  0698                     	;# 
  1796  0699                     	;# 
  1797  0711                     	;# 
  1798  0712                     	;# 
  1799  0713                     	;# 
  1800  0714                     	;# 
  1801  0715                     	;# 
  1802  0716                     	;# 
  1803  0717                     	;# 
  1804  0718                     	;# 
  1805  0719                     	;# 
  1806  0891                     	;# 
  1807  0891                     	;# 
  1808  0891                     	;# 
  1809  0891                     	;# 
  1810  0891                     	;# 
  1811  0891                     	;# 
  1812  0892                     	;# 
  1813  0892                     	;# 
  1814  0892                     	;# 
  1815  0893                     	;# 
  1816  0893                     	;# 
  1817  0893                     	;# 
  1818  0893                     	;# 
  1819  0893                     	;# 
  1820  0893                     	;# 
  1821  0894                     	;# 
  1822  0894                     	;# 
  1823  0894                     	;# 
  1824  0895                     	;# 
  1825  0895                     	;# 
  1826  0895                     	;# 
  1827  0896                     	;# 
  1828  0896                     	;# 
  1829  0896                     	;# 
  1830  089B                     	;# 
  1831  0911                     	;# 
  1832  0912                     	;# 
  1833  0913                     	;# 
  1834  0914                     	;# 
  1835  0915                     	;# 
  1836  0916                     	;# 
  1837  0918                     	;# 
  1838  0919                     	;# 
  1839  091A                     	;# 
  1840  091B                     	;# 
  1841  091C                     	;# 
  1842  091D                     	;# 
  1843  091E                     	;# 
  1844  091F                     	;# 
  1845  0E0F                     	;# 
  1846  0E10                     	;# 
  1847  0E11                     	;# 
  1848  0E12                     	;# 
  1849  0E13                     	;# 
  1850  0E14                     	;# 
  1851  0E15                     	;# 
  1852  0E16                     	;# 
  1853  0E17                     	;# 
  1854  0E18                     	;# 
  1855  0E19                     	;# 
  1856  0E1A                     	;# 
  1857  0E1B                     	;# 
  1858  0E1C                     	;# 
  1859  0E1D                     	;# 
  1860  0E1E                     	;# 
  1861  0E1F                     	;# 
  1862  0E20                     	;# 
  1863  0E21                     	;# 
  1864  0E22                     	;# 
  1865  0E24                     	;# 
  1866  0E25                     	;# 
  1867  0E28                     	;# 
  1868  0E29                     	;# 
  1869  0E2A                     	;# 
  1870  0E2B                     	;# 
  1871  0E2C                     	;# 
  1872  0E2D                     	;# 
  1873  0E2E                     	;# 
  1874  0E2F                     	;# 
  1875  0E90                     	;# 
  1876  0E91                     	;# 
  1877  0E92                     	;# 
  1878  0E94                     	;# 
  1879  0E95                     	;# 
  1880  0E9C                     	;# 
  1881  0E9D                     	;# 
  1882  0E9E                     	;# 
  1883  0E9F                     	;# 
  1884  0EA0                     	;# 
  1885  0EA1                     	;# 
  1886  0EA2                     	;# 
  1887  0EA3                     	;# 
  1888  0EA4                     	;# 
  1889  0EA5                     	;# 
  1890  0EA6                     	;# 
  1891  0EA7                     	;# 
  1892  0F0F                     	;# 
  1893  0F10                     	;# 
  1894  0F11                     	;# 
  1895  0F12                     	;# 
  1896  0F13                     	;# 
  1897  0F14                     	;# 
  1898  0F15                     	;# 
  1899  0F16                     	;# 
  1900  0F17                     	;# 
  1901  0F18                     	;# 
  1902  0F19                     	;# 
  1903  0F1A                     	;# 
  1904  0F1B                     	;# 
  1905  0F1C                     	;# 
  1906  0F1D                     	;# 
  1907  0F1E                     	;# 
  1908  0F1F                     	;# 
  1909  0F20                     	;# 
  1910  0F21                     	;# 
  1911  0F22                     	;# 
  1912  0F23                     	;# 
  1913  0F24                     	;# 
  1914  0F25                     	;# 
  1915  0F26                     	;# 
  1916  0F27                     	;# 
  1917  0F28                     	;# 
  1918  0F29                     	;# 
  1919  0F2A                     	;# 
  1920  0F2B                     	;# 
  1921  0F2C                     	;# 
  1922  0F2D                     	;# 
  1923  0F2E                     	;# 
  1924  0F2F                     	;# 
  1925  0F30                     	;# 
  1926  0F31                     	;# 
  1927  0F32                     	;# 
  1928  0F33                     	;# 
  1929  0F34                     	;# 
  1930  0F35                     	;# 
  1931  0F36                     	;# 
  1932  0F37                     	;# 
  1933  0FE4                     	;# 
  1934  0FE5                     	;# 
  1935  0FE6                     	;# 
  1936  0FE7                     	;# 
  1937  0FE8                     	;# 
  1938  0FE9                     	;# 
  1939  0FEA                     	;# 
  1940  0FEB                     	;# 
  1941  0FED                     	;# 
  1942  0FEE                     	;# 
  1943  0FEF                     	;# 
  1944  0000                     	;# 
  1945  0001                     	;# 
  1946  0002                     	;# 
  1947  0003                     	;# 
  1948  0004                     	;# 
  1949  0005                     	;# 
  1950  0006                     	;# 
  1951  0007                     	;# 
  1952  0008                     	;# 
  1953  0009                     	;# 
  1954  000A                     	;# 
  1955  000B                     	;# 
  1956  000C                     	;# 
  1957  000D                     	;# 
  1958  000E                     	;# 
  1959  0010                     	;# 
  1960  0011                     	;# 
  1961  0012                     	;# 
  1962  0013                     	;# 
  1963  0014                     	;# 
  1964  0015                     	;# 
  1965  0015                     	;# 
  1966  0016                     	;# 
  1967  0016                     	;# 
  1968  0017                     	;# 
  1969  0018                     	;# 
  1970  0019                     	;# 
  1971  0019                     	;# 
  1972  001A                     	;# 
  1973  001B                     	;# 
  1974  001C                     	;# 
  1975  001D                     	;# 
  1976  001E                     	;# 
  1977  001F                     	;# 
  1978  008C                     	;# 
  1979  008D                     	;# 
  1980  008E                     	;# 
  1981  0090                     	;# 
  1982  0091                     	;# 
  1983  0092                     	;# 
  1984  0093                     	;# 
  1985  0094                     	;# 
  1986  0097                     	;# 
  1987  009B                     	;# 
  1988  009B                     	;# 
  1989  009C                     	;# 
  1990  009D                     	;# 
  1991  009E                     	;# 
  1992  009F                     	;# 
  1993  010C                     	;# 
  1994  010D                     	;# 
  1995  010E                     	;# 
  1996  0111                     	;# 
  1997  0112                     	;# 
  1998  0113                     	;# 
  1999  0114                     	;# 
  2000  0115                     	;# 
  2001  0116                     	;# 
  2002  0117                     	;# 
  2003  0118                     	;# 
  2004  0119                     	;# 
  2005  018C                     	;# 
  2006  018D                     	;# 
  2007  018E                     	;# 
  2008  0199                     	;# 
  2009  0199                     	;# 
  2010  0199                     	;# 
  2011  019A                     	;# 
  2012  019A                     	;# 
  2013  019A                     	;# 
  2014  019B                     	;# 
  2015  019B                     	;# 
  2016  019B                     	;# 
  2017  019B                     	;# 
  2018  019B                     	;# 
  2019  019C                     	;# 
  2020  019C                     	;# 
  2021  019C                     	;# 
  2022  019D                     	;# 
  2023  019D                     	;# 
  2024  019D                     	;# 
  2025  019E                     	;# 
  2026  019E                     	;# 
  2027  019E                     	;# 
  2028  019F                     	;# 
  2029  019F                     	;# 
  2030  019F                     	;# 
  2031  019F                     	;# 
  2032  019F                     	;# 
  2033  020C                     	;# 
  2034  020D                     	;# 
  2035  020E                     	;# 
  2036  0211                     	;# 
  2037  0211                     	;# 
  2038  0212                     	;# 
  2039  0212                     	;# 
  2040  0213                     	;# 
  2041  0213                     	;# 
  2042  0214                     	;# 
  2043  0214                     	;# 
  2044  0215                     	;# 
  2045  0215                     	;# 
  2046  0215                     	;# 
  2047  0215                     	;# 
  2048  0216                     	;# 
  2049  0216                     	;# 
  2050  0217                     	;# 
  2051  0217                     	;# 
  2052  0219                     	;# 
  2053  021A                     	;# 
  2054  021B                     	;# 
  2055  021C                     	;# 
  2056  021D                     	;# 
  2057  021D                     	;# 
  2058  021E                     	;# 
  2059  021F                     	;# 
  2060  028C                     	;# 
  2061  028D                     	;# 
  2062  028E                     	;# 
  2063  0291                     	;# 
  2064  0291                     	;# 
  2065  0292                     	;# 
  2066  0293                     	;# 
  2067  0294                     	;# 
  2068  0295                     	;# 
  2069  0295                     	;# 
  2070  0296                     	;# 
  2071  0297                     	;# 
  2072  0298                     	;# 
  2073  029F                     	;# 
  2074  030C                     	;# 
  2075  030D                     	;# 
  2076  030E                     	;# 
  2077  0311                     	;# 
  2078  0311                     	;# 
  2079  0312                     	;# 
  2080  0313                     	;# 
  2081  0314                     	;# 
  2082  0315                     	;# 
  2083  0315                     	;# 
  2084  0316                     	;# 
  2085  0317                     	;# 
  2086  0318                     	;# 
  2087  038C                     	;# 
  2088  038D                     	;# 
  2089  038E                     	;# 
  2090  0391                     	;# 
  2091  0392                     	;# 
  2092  0393                     	;# 
  2093  0394                     	;# 
  2094  0395                     	;# 
  2095  0396                     	;# 
  2096  0397                     	;# 
  2097  0398                     	;# 
  2098  0399                     	;# 
  2099  039A                     	;# 
  2100  039C                     	;# 
  2101  039D                     	;# 
  2102  039E                     	;# 
  2103  039F                     	;# 
  2104  0411                     	;# 
  2105  0411                     	;# 
  2106  0412                     	;# 
  2107  0413                     	;# 
  2108  0414                     	;# 
  2109  0415                     	;# 
  2110  0416                     	;# 
  2111  0417                     	;# 
  2112  0418                     	;# 
  2113  0418                     	;# 
  2114  0419                     	;# 
  2115  041A                     	;# 
  2116  041B                     	;# 
  2117  041C                     	;# 
  2118  041D                     	;# 
  2119  041E                     	;# 
  2120  041F                     	;# 
  2121  0498                     	;# 
  2122  0498                     	;# 
  2123  0499                     	;# 
  2124  049A                     	;# 
  2125  049B                     	;# 
  2126  049B                     	;# 
  2127  049C                     	;# 
  2128  049D                     	;# 
  2129  049E                     	;# 
  2130  049F                     	;# 
  2131  0617                     	;# 
  2132  0618                     	;# 
  2133  0619                     	;# 
  2134  0619                     	;# 
  2135  061A                     	;# 
  2136  061B                     	;# 
  2137  061C                     	;# 
  2138  061C                     	;# 
  2139  061F                     	;# 
  2140  0691                     	;# 
  2141  0692                     	;# 
  2142  0693                     	;# 
  2143  0694                     	;# 
  2144  0695                     	;# 
  2145  0696                     	;# 
  2146  0697                     	;# 
  2147  0698                     	;# 
  2148  0699                     	;# 
  2149  0711                     	;# 
  2150  0712                     	;# 
  2151  0713                     	;# 
  2152  0714                     	;# 
  2153  0715                     	;# 
  2154  0716                     	;# 
  2155  0717                     	;# 
  2156  0718                     	;# 
  2157  0719                     	;# 
  2158  0891                     	;# 
  2159  0891                     	;# 
  2160  0891                     	;# 
  2161  0891                     	;# 
  2162  0891                     	;# 
  2163  0891                     	;# 
  2164  0892                     	;# 
  2165  0892                     	;# 
  2166  0892                     	;# 
  2167  0893                     	;# 
  2168  0893                     	;# 
  2169  0893                     	;# 
  2170  0893                     	;# 
  2171  0893                     	;# 
  2172  0893                     	;# 
  2173  0894                     	;# 
  2174  0894                     	;# 
  2175  0894                     	;# 
  2176  0895                     	;# 
  2177  0895                     	;# 
  2178  0895                     	;# 
  2179  0896                     	;# 
  2180  0896                     	;# 
  2181  0896                     	;# 
  2182  089B                     	;# 
  2183  0911                     	;# 
  2184  0912                     	;# 
  2185  0913                     	;# 
  2186  0914                     	;# 
  2187  0915                     	;# 
  2188  0916                     	;# 
  2189  0918                     	;# 
  2190  0919                     	;# 
  2191  091A                     	;# 
  2192  091B                     	;# 
  2193  091C                     	;# 
  2194  091D                     	;# 
  2195  091E                     	;# 
  2196  091F                     	;# 
  2197  0E0F                     	;# 
  2198  0E10                     	;# 
  2199  0E11                     	;# 
  2200  0E12                     	;# 
  2201  0E13                     	;# 
  2202  0E14                     	;# 
  2203  0E15                     	;# 
  2204  0E16                     	;# 
  2205  0E17                     	;# 
  2206  0E18                     	;# 
  2207  0E19                     	;# 
  2208  0E1A                     	;# 
  2209  0E1B                     	;# 
  2210  0E1C                     	;# 
  2211  0E1D                     	;# 
  2212  0E1E                     	;# 
  2213  0E1F                     	;# 
  2214  0E20                     	;# 
  2215  0E21                     	;# 
  2216  0E22                     	;# 
  2217  0E24                     	;# 
  2218  0E25                     	;# 
  2219  0E28                     	;# 
  2220  0E29                     	;# 
  2221  0E2A                     	;# 
  2222  0E2B                     	;# 
  2223  0E2C                     	;# 
  2224  0E2D                     	;# 
  2225  0E2E                     	;# 
  2226  0E2F                     	;# 
  2227  0E90                     	;# 
  2228  0E91                     	;# 
  2229  0E92                     	;# 
  2230  0E94                     	;# 
  2231  0E95                     	;# 
  2232  0E9C                     	;# 
  2233  0E9D                     	;# 
  2234  0E9E                     	;# 
  2235  0E9F                     	;# 
  2236  0EA0                     	;# 
  2237  0EA1                     	;# 
  2238  0EA2                     	;# 
  2239  0EA3                     	;# 
  2240  0EA4                     	;# 
  2241  0EA5                     	;# 
  2242  0EA6                     	;# 
  2243  0EA7                     	;# 
  2244  0F0F                     	;# 
  2245  0F10                     	;# 
  2246  0F11                     	;# 
  2247  0F12                     	;# 
  2248  0F13                     	;# 
  2249  0F14                     	;# 
  2250  0F15                     	;# 
  2251  0F16                     	;# 
  2252  0F17                     	;# 
  2253  0F18                     	;# 
  2254  0F19                     	;# 
  2255  0F1A                     	;# 
  2256  0F1B                     	;# 
  2257  0F1C                     	;# 
  2258  0F1D                     	;# 
  2259  0F1E                     	;# 
  2260  0F1F                     	;# 
  2261  0F20                     	;# 
  2262  0F21                     	;# 
  2263  0F22                     	;# 
  2264  0F23                     	;# 
  2265  0F24                     	;# 
  2266  0F25                     	;# 
  2267  0F26                     	;# 
  2268  0F27                     	;# 
  2269  0F28                     	;# 
  2270  0F29                     	;# 
  2271  0F2A                     	;# 
  2272  0F2B                     	;# 
  2273  0F2C                     	;# 
  2274  0F2D                     	;# 
  2275  0F2E                     	;# 
  2276  0F2F                     	;# 
  2277  0F30                     	;# 
  2278  0F31                     	;# 
  2279  0F32                     	;# 
  2280  0F33                     	;# 
  2281  0F34                     	;# 
  2282  0F35                     	;# 
  2283  0F36                     	;# 
  2284  0F37                     	;# 
  2285  0FE4                     	;# 
  2286  0FE5                     	;# 
  2287  0FE6                     	;# 
  2288  0FE7                     	;# 
  2289  0FE8                     	;# 
  2290  0FE9                     	;# 
  2291  0FEA                     	;# 
  2292  0FEB                     	;# 
  2293  0FED                     	;# 
  2294  0FEE                     	;# 
  2295  0FEF                     	;# 
  2296  0000                     	;# 
  2297  0001                     	;# 
  2298  0002                     	;# 
  2299  0003                     	;# 
  2300  0004                     	;# 
  2301  0005                     	;# 
  2302  0006                     	;# 
  2303  0007                     	;# 
  2304  0008                     	;# 
  2305  0009                     	;# 
  2306  000A                     	;# 
  2307  000B                     	;# 
  2308  000C                     	;# 
  2309  000D                     	;# 
  2310  000E                     	;# 
  2311  0010                     	;# 
  2312  0011                     	;# 
  2313  0012                     	;# 
  2314  0013                     	;# 
  2315  0014                     	;# 
  2316  0015                     	;# 
  2317  0015                     	;# 
  2318  0016                     	;# 
  2319  0016                     	;# 
  2320  0017                     	;# 
  2321  0018                     	;# 
  2322  0019                     	;# 
  2323  0019                     	;# 
  2324  001A                     	;# 
  2325  001B                     	;# 
  2326  001C                     	;# 
  2327  001D                     	;# 
  2328  001E                     	;# 
  2329  001F                     	;# 
  2330  008C                     	;# 
  2331  008D                     	;# 
  2332  008E                     	;# 
  2333  0090                     	;# 
  2334  0091                     	;# 
  2335  0092                     	;# 
  2336  0093                     	;# 
  2337  0094                     	;# 
  2338  0097                     	;# 
  2339  009B                     	;# 
  2340  009B                     	;# 
  2341  009C                     	;# 
  2342  009D                     	;# 
  2343  009E                     	;# 
  2344  009F                     	;# 
  2345  010C                     	;# 
  2346  010D                     	;# 
  2347  010E                     	;# 
  2348  0111                     	;# 
  2349  0112                     	;# 
  2350  0113                     	;# 
  2351  0114                     	;# 
  2352  0115                     	;# 
  2353  0116                     	;# 
  2354  0117                     	;# 
  2355  0118                     	;# 
  2356  0119                     	;# 
  2357  018C                     	;# 
  2358  018D                     	;# 
  2359  018E                     	;# 
  2360  0199                     	;# 
  2361  0199                     	;# 
  2362  0199                     	;# 
  2363  019A                     	;# 
  2364  019A                     	;# 
  2365  019A                     	;# 
  2366  019B                     	;# 
  2367  019B                     	;# 
  2368  019B                     	;# 
  2369  019B                     	;# 
  2370  019B                     	;# 
  2371  019C                     	;# 
  2372  019C                     	;# 
  2373  019C                     	;# 
  2374  019D                     	;# 
  2375  019D                     	;# 
  2376  019D                     	;# 
  2377  019E                     	;# 
  2378  019E                     	;# 
  2379  019E                     	;# 
  2380  019F                     	;# 
  2381  019F                     	;# 
  2382  019F                     	;# 
  2383  019F                     	;# 
  2384  019F                     	;# 
  2385  020C                     	;# 
  2386  020D                     	;# 
  2387  020E                     	;# 
  2388  0211                     	;# 
  2389  0211                     	;# 
  2390  0212                     	;# 
  2391  0212                     	;# 
  2392  0213                     	;# 
  2393  0213                     	;# 
  2394  0214                     	;# 
  2395  0214                     	;# 
  2396  0215                     	;# 
  2397  0215                     	;# 
  2398  0215                     	;# 
  2399  0215                     	;# 
  2400  0216                     	;# 
  2401  0216                     	;# 
  2402  0217                     	;# 
  2403  0217                     	;# 
  2404  0219                     	;# 
  2405  021A                     	;# 
  2406  021B                     	;# 
  2407  021C                     	;# 
  2408  021D                     	;# 
  2409  021D                     	;# 
  2410  021E                     	;# 
  2411  021F                     	;# 
  2412  028C                     	;# 
  2413  028D                     	;# 
  2414  028E                     	;# 
  2415  0291                     	;# 
  2416  0291                     	;# 
  2417  0292                     	;# 
  2418  0293                     	;# 
  2419  0294                     	;# 
  2420  0295                     	;# 
  2421  0295                     	;# 
  2422  0296                     	;# 
  2423  0297                     	;# 
  2424  0298                     	;# 
  2425  029F                     	;# 
  2426  030C                     	;# 
  2427  030D                     	;# 
  2428  030E                     	;# 
  2429  0311                     	;# 
  2430  0311                     	;# 
  2431  0312                     	;# 
  2432  0313                     	;# 
  2433  0314                     	;# 
  2434  0315                     	;# 
  2435  0315                     	;# 
  2436  0316                     	;# 
  2437  0317                     	;# 
  2438  0318                     	;# 
  2439  038C                     	;# 
  2440  038D                     	;# 
  2441  038E                     	;# 
  2442  0391                     	;# 
  2443  0392                     	;# 
  2444  0393                     	;# 
  2445  0394                     	;# 
  2446  0395                     	;# 
  2447  0396                     	;# 
  2448  0397                     	;# 
  2449  0398                     	;# 
  2450  0399                     	;# 
  2451  039A                     	;# 
  2452  039C                     	;# 
  2453  039D                     	;# 
  2454  039E                     	;# 
  2455  039F                     	;# 
  2456  0411                     	;# 
  2457  0411                     	;# 
  2458  0412                     	;# 
  2459  0413                     	;# 
  2460  0414                     	;# 
  2461  0415                     	;# 
  2462  0416                     	;# 
  2463  0417                     	;# 
  2464  0418                     	;# 
  2465  0418                     	;# 
  2466  0419                     	;# 
  2467  041A                     	;# 
  2468  041B                     	;# 
  2469  041C                     	;# 
  2470  041D                     	;# 
  2471  041E                     	;# 
  2472  041F                     	;# 
  2473  0498                     	;# 
  2474  0498                     	;# 
  2475  0499                     	;# 
  2476  049A                     	;# 
  2477  049B                     	;# 
  2478  049B                     	;# 
  2479  049C                     	;# 
  2480  049D                     	;# 
  2481  049E                     	;# 
  2482  049F                     	;# 
  2483  0617                     	;# 
  2484  0618                     	;# 
  2485  0619                     	;# 
  2486  0619                     	;# 
  2487  061A                     	;# 
  2488  061B                     	;# 
  2489  061C                     	;# 
  2490  061C                     	;# 
  2491  061F                     	;# 
  2492  0691                     	;# 
  2493  0692                     	;# 
  2494  0693                     	;# 
  2495  0694                     	;# 
  2496  0695                     	;# 
  2497  0696                     	;# 
  2498  0697                     	;# 
  2499  0698                     	;# 
  2500  0699                     	;# 
  2501  0711                     	;# 
  2502  0712                     	;# 
  2503  0713                     	;# 
  2504  0714                     	;# 
  2505  0715                     	;# 
  2506  0716                     	;# 
  2507  0717                     	;# 
  2508  0718                     	;# 
  2509  0719                     	;# 
  2510  0891                     	;# 
  2511  0891                     	;# 
  2512  0891                     	;# 
  2513  0891                     	;# 
  2514  0891                     	;# 
  2515  0891                     	;# 
  2516  0892                     	;# 
  2517  0892                     	;# 
  2518  0892                     	;# 
  2519  0893                     	;# 
  2520  0893                     	;# 
  2521  0893                     	;# 
  2522  0893                     	;# 
  2523  0893                     	;# 
  2524  0893                     	;# 
  2525  0894                     	;# 
  2526  0894                     	;# 
  2527  0894                     	;# 
  2528  0895                     	;# 
  2529  0895                     	;# 
  2530  0895                     	;# 
  2531  0896                     	;# 
  2532  0896                     	;# 
  2533  0896                     	;# 
  2534  089B                     	;# 
  2535  0911                     	;# 
  2536  0912                     	;# 
  2537  0913                     	;# 
  2538  0914                     	;# 
  2539  0915                     	;# 
  2540  0916                     	;# 
  2541  0918                     	;# 
  2542  0919                     	;# 
  2543  091A                     	;# 
  2544  091B                     	;# 
  2545  091C                     	;# 
  2546  091D                     	;# 
  2547  091E                     	;# 
  2548  091F                     	;# 
  2549  0E0F                     	;# 
  2550  0E10                     	;# 
  2551  0E11                     	;# 
  2552  0E12                     	;# 
  2553  0E13                     	;# 
  2554  0E14                     	;# 
  2555  0E15                     	;# 
  2556  0E16                     	;# 
  2557  0E17                     	;# 
  2558  0E18                     	;# 
  2559  0E19                     	;# 
  2560  0E1A                     	;# 
  2561  0E1B                     	;# 
  2562  0E1C                     	;# 
  2563  0E1D                     	;# 
  2564  0E1E                     	;# 
  2565  0E1F                     	;# 
  2566  0E20                     	;# 
  2567  0E21                     	;# 
  2568  0E22                     	;# 
  2569  0E24                     	;# 
  2570  0E25                     	;# 
  2571  0E28                     	;# 
  2572  0E29                     	;# 
  2573  0E2A                     	;# 
  2574  0E2B                     	;# 
  2575  0E2C                     	;# 
  2576  0E2D                     	;# 
  2577  0E2E                     	;# 
  2578  0E2F                     	;# 
  2579  0E90                     	;# 
  2580  0E91                     	;# 
  2581  0E92                     	;# 
  2582  0E94                     	;# 
  2583  0E95                     	;# 
  2584  0E9C                     	;# 
  2585  0E9D                     	;# 
  2586  0E9E                     	;# 
  2587  0E9F                     	;# 
  2588  0EA0                     	;# 
  2589  0EA1                     	;# 
  2590  0EA2                     	;# 
  2591  0EA3                     	;# 
  2592  0EA4                     	;# 
  2593  0EA5                     	;# 
  2594  0EA6                     	;# 
  2595  0EA7                     	;# 
  2596  0F0F                     	;# 
  2597  0F10                     	;# 
  2598  0F11                     	;# 
  2599  0F12                     	;# 
  2600  0F13                     	;# 
  2601  0F14                     	;# 
  2602  0F15                     	;# 
  2603  0F16                     	;# 
  2604  0F17                     	;# 
  2605  0F18                     	;# 
  2606  0F19                     	;# 
  2607  0F1A                     	;# 
  2608  0F1B                     	;# 
  2609  0F1C                     	;# 
  2610  0F1D                     	;# 
  2611  0F1E                     	;# 
  2612  0F1F                     	;# 
  2613  0F20                     	;# 
  2614  0F21                     	;# 
  2615  0F22                     	;# 
  2616  0F23                     	;# 
  2617  0F24                     	;# 
  2618  0F25                     	;# 
  2619  0F26                     	;# 
  2620  0F27                     	;# 
  2621  0F28                     	;# 
  2622  0F29                     	;# 
  2623  0F2A                     	;# 
  2624  0F2B                     	;# 
  2625  0F2C                     	;# 
  2626  0F2D                     	;# 
  2627  0F2E                     	;# 
  2628  0F2F                     	;# 
  2629  0F30                     	;# 
  2630  0F31                     	;# 
  2631  0F32                     	;# 
  2632  0F33                     	;# 
  2633  0F34                     	;# 
  2634  0F35                     	;# 
  2635  0F36                     	;# 
  2636  0F37                     	;# 
  2637  0FE4                     	;# 
  2638  0FE5                     	;# 
  2639  0FE6                     	;# 
  2640  0FE7                     	;# 
  2641  0FE8                     	;# 
  2642  0FE9                     	;# 
  2643  0FEA                     	;# 
  2644  0FEB                     	;# 
  2645  0FED                     	;# 
  2646  0FEE                     	;# 
  2647  0FEF                     	;# 
  2648  0000                     	;# 
  2649  0001                     	;# 
  2650  0002                     	;# 
  2651  0003                     	;# 
  2652  0004                     	;# 
  2653  0005                     	;# 
  2654  0006                     	;# 
  2655  0007                     	;# 
  2656  0008                     	;# 
  2657  0009                     	;# 
  2658  000A                     	;# 
  2659  000B                     	;# 
  2660  000C                     	;# 
  2661  000D                     	;# 
  2662  000E                     	;# 
  2663  0010                     	;# 
  2664  0011                     	;# 
  2665  0012                     	;# 
  2666  0013                     	;# 
  2667  0014                     	;# 
  2668  0015                     	;# 
  2669  0015                     	;# 
  2670  0016                     	;# 
  2671  0016                     	;# 
  2672  0017                     	;# 
  2673  0018                     	;# 
  2674  0019                     	;# 
  2675  0019                     	;# 
  2676  001A                     	;# 
  2677  001B                     	;# 
  2678  001C                     	;# 
  2679  001D                     	;# 
  2680  001E                     	;# 
  2681  001F                     	;# 
  2682  008C                     	;# 
  2683  008D                     	;# 
  2684  008E                     	;# 
  2685  0090                     	;# 
  2686  0091                     	;# 
  2687  0092                     	;# 
  2688  0093                     	;# 
  2689  0094                     	;# 
  2690  0097                     	;# 
  2691  009B                     	;# 
  2692  009B                     	;# 
  2693  009C                     	;# 
  2694  009D                     	;# 
  2695  009E                     	;# 
  2696  009F                     	;# 
  2697  010C                     	;# 
  2698  010D                     	;# 
  2699  010E                     	;# 
  2700  0111                     	;# 
  2701  0112                     	;# 
  2702  0113                     	;# 
  2703  0114                     	;# 
  2704  0115                     	;# 
  2705  0116                     	;# 
  2706  0117                     	;# 
  2707  0118                     	;# 
  2708  0119                     	;# 
  2709  018C                     	;# 
  2710  018D                     	;# 
  2711  018E                     	;# 
  2712  0199                     	;# 
  2713  0199                     	;# 
  2714  0199                     	;# 
  2715  019A                     	;# 
  2716  019A                     	;# 
  2717  019A                     	;# 
  2718  019B                     	;# 
  2719  019B                     	;# 
  2720  019B                     	;# 
  2721  019B                     	;# 
  2722  019B                     	;# 
  2723  019C                     	;# 
  2724  019C                     	;# 
  2725  019C                     	;# 
  2726  019D                     	;# 
  2727  019D                     	;# 
  2728  019D                     	;# 
  2729  019E                     	;# 
  2730  019E                     	;# 
  2731  019E                     	;# 
  2732  019F                     	;# 
  2733  019F                     	;# 
  2734  019F                     	;# 
  2735  019F                     	;# 
  2736  019F                     	;# 
  2737  020C                     	;# 
  2738  020D                     	;# 
  2739  020E                     	;# 
  2740  0211                     	;# 
  2741  0211                     	;# 
  2742  0212                     	;# 
  2743  0212                     	;# 
  2744  0213                     	;# 
  2745  0213                     	;# 
  2746  0214                     	;# 
  2747  0214                     	;# 
  2748  0215                     	;# 
  2749  0215                     	;# 
  2750  0215                     	;# 
  2751  0215                     	;# 
  2752  0216                     	;# 
  2753  0216                     	;# 
  2754  0217                     	;# 
  2755  0217                     	;# 
  2756  0219                     	;# 
  2757  021A                     	;# 
  2758  021B                     	;# 
  2759  021C                     	;# 
  2760  021D                     	;# 
  2761  021D                     	;# 
  2762  021E                     	;# 
  2763  021F                     	;# 
  2764  028C                     	;# 
  2765  028D                     	;# 
  2766  028E                     	;# 
  2767  0291                     	;# 
  2768  0291                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0294                     	;# 
  2772  0295                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0297                     	;# 
  2776  0298                     	;# 
  2777  029F                     	;# 
  2778  030C                     	;# 
  2779  030D                     	;# 
  2780  030E                     	;# 
  2781  0311                     	;# 
  2782  0311                     	;# 
  2783  0312                     	;# 
  2784  0313                     	;# 
  2785  0314                     	;# 
  2786  0315                     	;# 
  2787  0315                     	;# 
  2788  0316                     	;# 
  2789  0317                     	;# 
  2790  0318                     	;# 
  2791  038C                     	;# 
  2792  038D                     	;# 
  2793  038E                     	;# 
  2794  0391                     	;# 
  2795  0392                     	;# 
  2796  0393                     	;# 
  2797  0394                     	;# 
  2798  0395                     	;# 
  2799  0396                     	;# 
  2800  0397                     	;# 
  2801  0398                     	;# 
  2802  0399                     	;# 
  2803  039A                     	;# 
  2804  039C                     	;# 
  2805  039D                     	;# 
  2806  039E                     	;# 
  2807  039F                     	;# 
  2808  0411                     	;# 
  2809  0411                     	;# 
  2810  0412                     	;# 
  2811  0413                     	;# 
  2812  0414                     	;# 
  2813  0415                     	;# 
  2814  0416                     	;# 
  2815  0417                     	;# 
  2816  0418                     	;# 
  2817  0418                     	;# 
  2818  0419                     	;# 
  2819  041A                     	;# 
  2820  041B                     	;# 
  2821  041C                     	;# 
  2822  041D                     	;# 
  2823  041E                     	;# 
  2824  041F                     	;# 
  2825  0498                     	;# 
  2826  0498                     	;# 
  2827  0499                     	;# 
  2828  049A                     	;# 
  2829  049B                     	;# 
  2830  049B                     	;# 
  2831  049C                     	;# 
  2832  049D                     	;# 
  2833  049E                     	;# 
  2834  049F                     	;# 
  2835  0617                     	;# 
  2836  0618                     	;# 
  2837  0619                     	;# 
  2838  0619                     	;# 
  2839  061A                     	;# 
  2840  061B                     	;# 
  2841  061C                     	;# 
  2842  061C                     	;# 
  2843  061F                     	;# 
  2844  0691                     	;# 
  2845  0692                     	;# 
  2846  0693                     	;# 
  2847  0694                     	;# 
  2848  0695                     	;# 
  2849  0696                     	;# 
  2850  0697                     	;# 
  2851  0698                     	;# 
  2852  0699                     	;# 
  2853  0711                     	;# 
  2854  0712                     	;# 
  2855  0713                     	;# 
  2856  0714                     	;# 
  2857  0715                     	;# 
  2858  0716                     	;# 
  2859  0717                     	;# 
  2860  0718                     	;# 
  2861  0719                     	;# 
  2862  0891                     	;# 
  2863  0891                     	;# 
  2864  0891                     	;# 
  2865  0891                     	;# 
  2866  0891                     	;# 
  2867  0891                     	;# 
  2868  0892                     	;# 
  2869  0892                     	;# 
  2870  0892                     	;# 
  2871  0893                     	;# 
  2872  0893                     	;# 
  2873  0893                     	;# 
  2874  0893                     	;# 
  2875  0893                     	;# 
  2876  0893                     	;# 
  2877  0894                     	;# 
  2878  0894                     	;# 
  2879  0894                     	;# 
  2880  0895                     	;# 
  2881  0895                     	;# 
  2882  0895                     	;# 
  2883  0896                     	;# 
  2884  0896                     	;# 
  2885  0896                     	;# 
  2886  089B                     	;# 
  2887  0911                     	;# 
  2888  0912                     	;# 
  2889  0913                     	;# 
  2890  0914                     	;# 
  2891  0915                     	;# 
  2892  0916                     	;# 
  2893  0918                     	;# 
  2894  0919                     	;# 
  2895  091A                     	;# 
  2896  091B                     	;# 
  2897  091C                     	;# 
  2898  091D                     	;# 
  2899  091E                     	;# 
  2900  091F                     	;# 
  2901  0E0F                     	;# 
  2902  0E10                     	;# 
  2903  0E11                     	;# 
  2904  0E12                     	;# 
  2905  0E13                     	;# 
  2906  0E14                     	;# 
  2907  0E15                     	;# 
  2908  0E16                     	;# 
  2909  0E17                     	;# 
  2910  0E18                     	;# 
  2911  0E19                     	;# 
  2912  0E1A                     	;# 
  2913  0E1B                     	;# 
  2914  0E1C                     	;# 
  2915  0E1D                     	;# 
  2916  0E1E                     	;# 
  2917  0E1F                     	;# 
  2918  0E20                     	;# 
  2919  0E21                     	;# 
  2920  0E22                     	;# 
  2921  0E24                     	;# 
  2922  0E25                     	;# 
  2923  0E28                     	;# 
  2924  0E29                     	;# 
  2925  0E2A                     	;# 
  2926  0E2B                     	;# 
  2927  0E2C                     	;# 
  2928  0E2D                     	;# 
  2929  0E2E                     	;# 
  2930  0E2F                     	;# 
  2931  0E90                     	;# 
  2932  0E91                     	;# 
  2933  0E92                     	;# 
  2934  0E94                     	;# 
  2935  0E95                     	;# 
  2936  0E9C                     	;# 
  2937  0E9D                     	;# 
  2938  0E9E                     	;# 
  2939  0E9F                     	;# 
  2940  0EA0                     	;# 
  2941  0EA1                     	;# 
  2942  0EA2                     	;# 
  2943  0EA3                     	;# 
  2944  0EA4                     	;# 
  2945  0EA5                     	;# 
  2946  0EA6                     	;# 
  2947  0EA7                     	;# 
  2948  0F0F                     	;# 
  2949  0F10                     	;# 
  2950  0F11                     	;# 
  2951  0F12                     	;# 
  2952  0F13                     	;# 
  2953  0F14                     	;# 
  2954  0F15                     	;# 
  2955  0F16                     	;# 
  2956  0F17                     	;# 
  2957  0F18                     	;# 
  2958  0F19                     	;# 
  2959  0F1A                     	;# 
  2960  0F1B                     	;# 
  2961  0F1C                     	;# 
  2962  0F1D                     	;# 
  2963  0F1E                     	;# 
  2964  0F1F                     	;# 
  2965  0F20                     	;# 
  2966  0F21                     	;# 
  2967  0F22                     	;# 
  2968  0F23                     	;# 
  2969  0F24                     	;# 
  2970  0F25                     	;# 
  2971  0F26                     	;# 
  2972  0F27                     	;# 
  2973  0F28                     	;# 
  2974  0F29                     	;# 
  2975  0F2A                     	;# 
  2976  0F2B                     	;# 
  2977  0F2C                     	;# 
  2978  0F2D                     	;# 
  2979  0F2E                     	;# 
  2980  0F2F                     	;# 
  2981  0F30                     	;# 
  2982  0F31                     	;# 
  2983  0F32                     	;# 
  2984  0F33                     	;# 
  2985  0F34                     	;# 
  2986  0F35                     	;# 
  2987  0F36                     	;# 
  2988  0F37                     	;# 
  2989  0FE4                     	;# 
  2990  0FE5                     	;# 
  2991  0FE6                     	;# 
  2992  0FE7                     	;# 
  2993  0FE8                     	;# 
  2994  0FE9                     	;# 
  2995  0FEA                     	;# 
  2996  0FEB                     	;# 
  2997  0FED                     	;# 
  2998  0FEE                     	;# 
  2999  0FEF                     	;# 
  3000  0000                     	;# 
  3001  0001                     	;# 
  3002  0002                     	;# 
  3003  0003                     	;# 
  3004  0004                     	;# 
  3005  0005                     	;# 
  3006  0006                     	;# 
  3007  0007                     	;# 
  3008  0008                     	;# 
  3009  0009                     	;# 
  3010  000A                     	;# 
  3011  000B                     	;# 
  3012  000C                     	;# 
  3013  000D                     	;# 
  3014  000E                     	;# 
  3015  0010                     	;# 
  3016  0011                     	;# 
  3017  0012                     	;# 
  3018  0013                     	;# 
  3019  0014                     	;# 
  3020  0015                     	;# 
  3021  0015                     	;# 
  3022  0016                     	;# 
  3023  0016                     	;# 
  3024  0017                     	;# 
  3025  0018                     	;# 
  3026  0019                     	;# 
  3027  0019                     	;# 
  3028  001A                     	;# 
  3029  001B                     	;# 
  3030  001C                     	;# 
  3031  001D                     	;# 
  3032  001E                     	;# 
  3033  001F                     	;# 
  3034  008C                     	;# 
  3035  008D                     	;# 
  3036  008E                     	;# 
  3037  0090                     	;# 
  3038  0091                     	;# 
  3039  0092                     	;# 
  3040  0093                     	;# 
  3041  0094                     	;# 
  3042  0097                     	;# 
  3043  009B                     	;# 
  3044  009B                     	;# 
  3045  009C                     	;# 
  3046  009D                     	;# 
  3047  009E                     	;# 
  3048  009F                     	;# 
  3049  010C                     	;# 
  3050  010D                     	;# 
  3051  010E                     	;# 
  3052  0111                     	;# 
  3053  0112                     	;# 
  3054  0113                     	;# 
  3055  0114                     	;# 
  3056  0115                     	;# 
  3057  0116                     	;# 
  3058  0117                     	;# 
  3059  0118                     	;# 
  3060  0119                     	;# 
  3061  018C                     	;# 
  3062  018D                     	;# 
  3063  018E                     	;# 
  3064  0199                     	;# 
  3065  0199                     	;# 
  3066  0199                     	;# 
  3067  019A                     	;# 
  3068  019A                     	;# 
  3069  019A                     	;# 
  3070  019B                     	;# 
  3071  019B                     	;# 
  3072  019B                     	;# 
  3073  019B                     	;# 
  3074  019B                     	;# 
  3075  019C                     	;# 
  3076  019C                     	;# 
  3077  019C                     	;# 
  3078  019D                     	;# 
  3079  019D                     	;# 
  3080  019D                     	;# 
  3081  019E                     	;# 
  3082  019E                     	;# 
  3083  019E                     	;# 
  3084  019F                     	;# 
  3085  019F                     	;# 
  3086  019F                     	;# 
  3087  019F                     	;# 
  3088  019F                     	;# 
  3089  020C                     	;# 
  3090  020D                     	;# 
  3091  020E                     	;# 
  3092  0211                     	;# 
  3093  0211                     	;# 
  3094  0212                     	;# 
  3095  0212                     	;# 
  3096  0213                     	;# 
  3097  0213                     	;# 
  3098  0214                     	;# 
  3099  0214                     	;# 
  3100  0215                     	;# 
  3101  0215                     	;# 
  3102  0215                     	;# 
  3103  0215                     	;# 
  3104  0216                     	;# 
  3105  0216                     	;# 
  3106  0217                     	;# 
  3107  0217                     	;# 
  3108  0219                     	;# 
  3109  021A                     	;# 
  3110  021B                     	;# 
  3111  021C                     	;# 
  3112  021D                     	;# 
  3113  021D                     	;# 
  3114  021E                     	;# 
  3115  021F                     	;# 
  3116  028C                     	;# 
  3117  028D                     	;# 
  3118  028E                     	;# 
  3119  0291                     	;# 
  3120  0291                     	;# 
  3121  0292                     	;# 
  3122  0293                     	;# 
  3123  0294                     	;# 
  3124  0295                     	;# 
  3125  0295                     	;# 
  3126  0296                     	;# 
  3127  0297                     	;# 
  3128  0298                     	;# 
  3129  029F                     	;# 
  3130  030C                     	;# 
  3131  030D                     	;# 
  3132  030E                     	;# 
  3133  0311                     	;# 
  3134  0311                     	;# 
  3135  0312                     	;# 
  3136  0313                     	;# 
  3137  0314                     	;# 
  3138  0315                     	;# 
  3139  0315                     	;# 
  3140  0316                     	;# 
  3141  0317                     	;# 
  3142  0318                     	;# 
  3143  038C                     	;# 
  3144  038D                     	;# 
  3145  038E                     	;# 
  3146  0391                     	;# 
  3147  0392                     	;# 
  3148  0393                     	;# 
  3149  0394                     	;# 
  3150  0395                     	;# 
  3151  0396                     	;# 
  3152  0397                     	;# 
  3153  0398                     	;# 
  3154  0399                     	;# 
  3155  039A                     	;# 
  3156  039C                     	;# 
  3157  039D                     	;# 
  3158  039E                     	;# 
  3159  039F                     	;# 
  3160  0411                     	;# 
  3161  0411                     	;# 
  3162  0412                     	;# 
  3163  0413                     	;# 
  3164  0414                     	;# 
  3165  0415                     	;# 
  3166  0416                     	;# 
  3167  0417                     	;# 
  3168  0418                     	;# 
  3169  0418                     	;# 
  3170  0419                     	;# 
  3171  041A                     	;# 
  3172  041B                     	;# 
  3173  041C                     	;# 
  3174  041D                     	;# 
  3175  041E                     	;# 
  3176  041F                     	;# 
  3177  0498                     	;# 
  3178  0498                     	;# 
  3179  0499                     	;# 
  3180  049A                     	;# 
  3181  049B                     	;# 
  3182  049B                     	;# 
  3183  049C                     	;# 
  3184  049D                     	;# 
  3185  049E                     	;# 
  3186  049F                     	;# 
  3187  0617                     	;# 
  3188  0618                     	;# 
  3189  0619                     	;# 
  3190  0619                     	;# 
  3191  061A                     	;# 
  3192  061B                     	;# 
  3193  061C                     	;# 
  3194  061C                     	;# 
  3195  061F                     	;# 
  3196  0691                     	;# 
  3197  0692                     	;# 
  3198  0693                     	;# 
  3199  0694                     	;# 
  3200  0695                     	;# 
  3201  0696                     	;# 
  3202  0697                     	;# 
  3203  0698                     	;# 
  3204  0699                     	;# 
  3205  0711                     	;# 
  3206  0712                     	;# 
  3207  0713                     	;# 
  3208  0714                     	;# 
  3209  0715                     	;# 
  3210  0716                     	;# 
  3211  0717                     	;# 
  3212  0718                     	;# 
  3213  0719                     	;# 
  3214  0891                     	;# 
  3215  0891                     	;# 
  3216  0891                     	;# 
  3217  0891                     	;# 
  3218  0891                     	;# 
  3219  0891                     	;# 
  3220  0892                     	;# 
  3221  0892                     	;# 
  3222  0892                     	;# 
  3223  0893                     	;# 
  3224  0893                     	;# 
  3225  0893                     	;# 
  3226  0893                     	;# 
  3227  0893                     	;# 
  3228  0893                     	;# 
  3229  0894                     	;# 
  3230  0894                     	;# 
  3231  0894                     	;# 
  3232  0895                     	;# 
  3233  0895                     	;# 
  3234  0895                     	;# 
  3235  0896                     	;# 
  3236  0896                     	;# 
  3237  0896                     	;# 
  3238  089B                     	;# 
  3239  0911                     	;# 
  3240  0912                     	;# 
  3241  0913                     	;# 
  3242  0914                     	;# 
  3243  0915                     	;# 
  3244  0916                     	;# 
  3245  0918                     	;# 
  3246  0919                     	;# 
  3247  091A                     	;# 
  3248  091B                     	;# 
  3249  091C                     	;# 
  3250  091D                     	;# 
  3251  091E                     	;# 
  3252  091F                     	;# 
  3253  0E0F                     	;# 
  3254  0E10                     	;# 
  3255  0E11                     	;# 
  3256  0E12                     	;# 
  3257  0E13                     	;# 
  3258  0E14                     	;# 
  3259  0E15                     	;# 
  3260  0E16                     	;# 
  3261  0E17                     	;# 
  3262  0E18                     	;# 
  3263  0E19                     	;# 
  3264  0E1A                     	;# 
  3265  0E1B                     	;# 
  3266  0E1C                     	;# 
  3267  0E1D                     	;# 
  3268  0E1E                     	;# 
  3269  0E1F                     	;# 
  3270  0E20                     	;# 
  3271  0E21                     	;# 
  3272  0E22                     	;# 
  3273  0E24                     	;# 
  3274  0E25                     	;# 
  3275  0E28                     	;# 
  3276  0E29                     	;# 
  3277  0E2A                     	;# 
  3278  0E2B                     	;# 
  3279  0E2C                     	;# 
  3280  0E2D                     	;# 
  3281  0E2E                     	;# 
  3282  0E2F                     	;# 
  3283  0E90                     	;# 
  3284  0E91                     	;# 
  3285  0E92                     	;# 
  3286  0E94                     	;# 
  3287  0E95                     	;# 
  3288  0E9C                     	;# 
  3289  0E9D                     	;# 
  3290  0E9E                     	;# 
  3291  0E9F                     	;# 
  3292  0EA0                     	;# 
  3293  0EA1                     	;# 
  3294  0EA2                     	;# 
  3295  0EA3                     	;# 
  3296  0EA4                     	;# 
  3297  0EA5                     	;# 
  3298  0EA6                     	;# 
  3299  0EA7                     	;# 
  3300  0F0F                     	;# 
  3301  0F10                     	;# 
  3302  0F11                     	;# 
  3303  0F12                     	;# 
  3304  0F13                     	;# 
  3305  0F14                     	;# 
  3306  0F15                     	;# 
  3307  0F16                     	;# 
  3308  0F17                     	;# 
  3309  0F18                     	;# 
  3310  0F19                     	;# 
  3311  0F1A                     	;# 
  3312  0F1B                     	;# 
  3313  0F1C                     	;# 
  3314  0F1D                     	;# 
  3315  0F1E                     	;# 
  3316  0F1F                     	;# 
  3317  0F20                     	;# 
  3318  0F21                     	;# 
  3319  0F22                     	;# 
  3320  0F23                     	;# 
  3321  0F24                     	;# 
  3322  0F25                     	;# 
  3323  0F26                     	;# 
  3324  0F27                     	;# 
  3325  0F28                     	;# 
  3326  0F29                     	;# 
  3327  0F2A                     	;# 
  3328  0F2B                     	;# 
  3329  0F2C                     	;# 
  3330  0F2D                     	;# 
  3331  0F2E                     	;# 
  3332  0F2F                     	;# 
  3333  0F30                     	;# 
  3334  0F31                     	;# 
  3335  0F32                     	;# 
  3336  0F33                     	;# 
  3337  0F34                     	;# 
  3338  0F35                     	;# 
  3339  0F36                     	;# 
  3340  0F37                     	;# 
  3341  0FE4                     	;# 
  3342  0FE5                     	;# 
  3343  0FE6                     	;# 
  3344  0FE7                     	;# 
  3345  0FE8                     	;# 
  3346  0FE9                     	;# 
  3347  0FEA                     	;# 
  3348  0FEB                     	;# 
  3349  0FED                     	;# 
  3350  0FEE                     	;# 
  3351  0FEF                     	;# 
  3352  0000                     	;# 
  3353  0001                     	;# 
  3354  0002                     	;# 
  3355  0003                     	;# 
  3356  0004                     	;# 
  3357  0005                     	;# 
  3358  0006                     	;# 
  3359  0007                     	;# 
  3360  0008                     	;# 
  3361  0009                     	;# 
  3362  000A                     	;# 
  3363  000B                     	;# 
  3364  000C                     	;# 
  3365  000D                     	;# 
  3366  000E                     	;# 
  3367  0010                     	;# 
  3368  0011                     	;# 
  3369  0012                     	;# 
  3370  0013                     	;# 
  3371  0014                     	;# 
  3372  0015                     	;# 
  3373  0015                     	;# 
  3374  0016                     	;# 
  3375  0016                     	;# 
  3376  0017                     	;# 
  3377  0018                     	;# 
  3378  0019                     	;# 
  3379  0019                     	;# 
  3380  001A                     	;# 
  3381  001B                     	;# 
  3382  001C                     	;# 
  3383  001D                     	;# 
  3384  001E                     	;# 
  3385  001F                     	;# 
  3386  008C                     	;# 
  3387  008D                     	;# 
  3388  008E                     	;# 
  3389  0090                     	;# 
  3390  0091                     	;# 
  3391  0092                     	;# 
  3392  0093                     	;# 
  3393  0094                     	;# 
  3394  0097                     	;# 
  3395  009B                     	;# 
  3396  009B                     	;# 
  3397  009C                     	;# 
  3398  009D                     	;# 
  3399  009E                     	;# 
  3400  009F                     	;# 
  3401  010C                     	;# 
  3402  010D                     	;# 
  3403  010E                     	;# 
  3404  0111                     	;# 
  3405  0112                     	;# 
  3406  0113                     	;# 
  3407  0114                     	;# 
  3408  0115                     	;# 
  3409  0116                     	;# 
  3410  0117                     	;# 
  3411  0118                     	;# 
  3412  0119                     	;# 
  3413  018C                     	;# 
  3414  018D                     	;# 
  3415  018E                     	;# 
  3416  0199                     	;# 
  3417  0199                     	;# 
  3418  0199                     	;# 
  3419  019A                     	;# 
  3420  019A                     	;# 
  3421  019A                     	;# 
  3422  019B                     	;# 
  3423  019B                     	;# 
  3424  019B                     	;# 
  3425  019B                     	;# 
  3426  019B                     	;# 
  3427  019C                     	;# 
  3428  019C                     	;# 
  3429  019C                     	;# 
  3430  019D                     	;# 
  3431  019D                     	;# 
  3432  019D                     	;# 
  3433  019E                     	;# 
  3434  019E                     	;# 
  3435  019E                     	;# 
  3436  019F                     	;# 
  3437  019F                     	;# 
  3438  019F                     	;# 
  3439  019F                     	;# 
  3440  019F                     	;# 
  3441  020C                     	;# 
  3442  020D                     	;# 
  3443  020E                     	;# 
  3444  0211                     	;# 
  3445  0211                     	;# 
  3446  0212                     	;# 
  3447  0212                     	;# 
  3448  0213                     	;# 
  3449  0213                     	;# 
  3450  0214                     	;# 
  3451  0214                     	;# 
  3452  0215                     	;# 
  3453  0215                     	;# 
  3454  0215                     	;# 
  3455  0215                     	;# 
  3456  0216                     	;# 
  3457  0216                     	;# 
  3458  0217                     	;# 
  3459  0217                     	;# 
  3460  0219                     	;# 
  3461  021A                     	;# 
  3462  021B                     	;# 
  3463  021C                     	;# 
  3464  021D                     	;# 
  3465  021D                     	;# 
  3466  021E                     	;# 
  3467  021F                     	;# 
  3468  028C                     	;# 
  3469  028D                     	;# 
  3470  028E                     	;# 
  3471  0291                     	;# 
  3472  0291                     	;# 
  3473  0292                     	;# 
  3474  0293                     	;# 
  3475  0294                     	;# 
  3476  0295                     	;# 
  3477  0295                     	;# 
  3478  0296                     	;# 
  3479  0297                     	;# 
  3480  0298                     	;# 
  3481  029F                     	;# 
  3482  030C                     	;# 
  3483  030D                     	;# 
  3484  030E                     	;# 
  3485  0311                     	;# 
  3486  0311                     	;# 
  3487  0312                     	;# 
  3488  0313                     	;# 
  3489  0314                     	;# 
  3490  0315                     	;# 
  3491  0315                     	;# 
  3492  0316                     	;# 
  3493  0317                     	;# 
  3494  0318                     	;# 
  3495  038C                     	;# 
  3496  038D                     	;# 
  3497  038E                     	;# 
  3498  0391                     	;# 
  3499  0392                     	;# 
  3500  0393                     	;# 
  3501  0394                     	;# 
  3502  0395                     	;# 
  3503  0396                     	;# 
  3504  0397                     	;# 
  3505  0398                     	;# 
  3506  0399                     	;# 
  3507  039A                     	;# 
  3508  039C                     	;# 
  3509  039D                     	;# 
  3510  039E                     	;# 
  3511  039F                     	;# 
  3512  0411                     	;# 
  3513  0411                     	;# 
  3514  0412                     	;# 
  3515  0413                     	;# 
  3516  0414                     	;# 
  3517  0415                     	;# 
  3518  0416                     	;# 
  3519  0417                     	;# 
  3520  0418                     	;# 
  3521  0418                     	;# 
  3522  0419                     	;# 
  3523  041A                     	;# 
  3524  041B                     	;# 
  3525  041C                     	;# 
  3526  041D                     	;# 
  3527  041E                     	;# 
  3528  041F                     	;# 
  3529  0498                     	;# 
  3530  0498                     	;# 
  3531  0499                     	;# 
  3532  049A                     	;# 
  3533  049B                     	;# 
  3534  049B                     	;# 
  3535  049C                     	;# 
  3536  049D                     	;# 
  3537  049E                     	;# 
  3538  049F                     	;# 
  3539  0617                     	;# 
  3540  0618                     	;# 
  3541  0619                     	;# 
  3542  0619                     	;# 
  3543  061A                     	;# 
  3544  061B                     	;# 
  3545  061C                     	;# 
  3546  061C                     	;# 
  3547  061F                     	;# 
  3548  0691                     	;# 
  3549  0692                     	;# 
  3550  0693                     	;# 
  3551  0694                     	;# 
  3552  0695                     	;# 
  3553  0696                     	;# 
  3554  0697                     	;# 
  3555  0698                     	;# 
  3556  0699                     	;# 
  3557  0711                     	;# 
  3558  0712                     	;# 
  3559  0713                     	;# 
  3560  0714                     	;# 
  3561  0715                     	;# 
  3562  0716                     	;# 
  3563  0717                     	;# 
  3564  0718                     	;# 
  3565  0719                     	;# 
  3566  0891                     	;# 
  3567  0891                     	;# 
  3568  0891                     	;# 
  3569  0891                     	;# 
  3570  0891                     	;# 
  3571  0891                     	;# 
  3572  0892                     	;# 
  3573  0892                     	;# 
  3574  0892                     	;# 
  3575  0893                     	;# 
  3576  0893                     	;# 
  3577  0893                     	;# 
  3578  0893                     	;# 
  3579  0893                     	;# 
  3580  0893                     	;# 
  3581  0894                     	;# 
  3582  0894                     	;# 
  3583  0894                     	;# 
  3584  0895                     	;# 
  3585  0895                     	;# 
  3586  0895                     	;# 
  3587  0896                     	;# 
  3588  0896                     	;# 
  3589  0896                     	;# 
  3590  089B                     	;# 
  3591  0911                     	;# 
  3592  0912                     	;# 
  3593  0913                     	;# 
  3594  0914                     	;# 
  3595  0915                     	;# 
  3596  0916                     	;# 
  3597  0918                     	;# 
  3598  0919                     	;# 
  3599  091A                     	;# 
  3600  091B                     	;# 
  3601  091C                     	;# 
  3602  091D                     	;# 
  3603  091E                     	;# 
  3604  091F                     	;# 
  3605  0E0F                     	;# 
  3606  0E10                     	;# 
  3607  0E11                     	;# 
  3608  0E12                     	;# 
  3609  0E13                     	;# 
  3610  0E14                     	;# 
  3611  0E15                     	;# 
  3612  0E16                     	;# 
  3613  0E17                     	;# 
  3614  0E18                     	;# 
  3615  0E19                     	;# 
  3616  0E1A                     	;# 
  3617  0E1B                     	;# 
  3618  0E1C                     	;# 
  3619  0E1D                     	;# 
  3620  0E1E                     	;# 
  3621  0E1F                     	;# 
  3622  0E20                     	;# 
  3623  0E21                     	;# 
  3624  0E22                     	;# 
  3625  0E24                     	;# 
  3626  0E25                     	;# 
  3627  0E28                     	;# 
  3628  0E29                     	;# 
  3629  0E2A                     	;# 
  3630  0E2B                     	;# 
  3631  0E2C                     	;# 
  3632  0E2D                     	;# 
  3633  0E2E                     	;# 
  3634  0E2F                     	;# 
  3635  0E90                     	;# 
  3636  0E91                     	;# 
  3637  0E92                     	;# 
  3638  0E94                     	;# 
  3639  0E95                     	;# 
  3640  0E9C                     	;# 
  3641  0E9D                     	;# 
  3642  0E9E                     	;# 
  3643  0E9F                     	;# 
  3644  0EA0                     	;# 
  3645  0EA1                     	;# 
  3646  0EA2                     	;# 
  3647  0EA3                     	;# 
  3648  0EA4                     	;# 
  3649  0EA5                     	;# 
  3650  0EA6                     	;# 
  3651  0EA7                     	;# 
  3652  0F0F                     	;# 
  3653  0F10                     	;# 
  3654  0F11                     	;# 
  3655  0F12                     	;# 
  3656  0F13                     	;# 
  3657  0F14                     	;# 
  3658  0F15                     	;# 
  3659  0F16                     	;# 
  3660  0F17                     	;# 
  3661  0F18                     	;# 
  3662  0F19                     	;# 
  3663  0F1A                     	;# 
  3664  0F1B                     	;# 
  3665  0F1C                     	;# 
  3666  0F1D                     	;# 
  3667  0F1E                     	;# 
  3668  0F1F                     	;# 
  3669  0F20                     	;# 
  3670  0F21                     	;# 
  3671  0F22                     	;# 
  3672  0F23                     	;# 
  3673  0F24                     	;# 
  3674  0F25                     	;# 
  3675  0F26                     	;# 
  3676  0F27                     	;# 
  3677  0F28                     	;# 
  3678  0F29                     	;# 
  3679  0F2A                     	;# 
  3680  0F2B                     	;# 
  3681  0F2C                     	;# 
  3682  0F2D                     	;# 
  3683  0F2E                     	;# 
  3684  0F2F                     	;# 
  3685  0F30                     	;# 
  3686  0F31                     	;# 
  3687  0F32                     	;# 
  3688  0F33                     	;# 
  3689  0F34                     	;# 
  3690  0F35                     	;# 
  3691  0F36                     	;# 
  3692  0F37                     	;# 
  3693  0FE4                     	;# 
  3694  0FE5                     	;# 
  3695  0FE6                     	;# 
  3696  0FE7                     	;# 
  3697  0FE8                     	;# 
  3698  0FE9                     	;# 
  3699  0FEA                     	;# 
  3700  0FEB                     	;# 
  3701  0FED                     	;# 
  3702  0FEE                     	;# 
  3703  0FEF                     	;# 
  3704  0000                     	;# 
  3705  0001                     	;# 
  3706  0002                     	;# 
  3707  0003                     	;# 
  3708  0004                     	;# 
  3709  0005                     	;# 
  3710  0006                     	;# 
  3711  0007                     	;# 
  3712  0008                     	;# 
  3713  0009                     	;# 
  3714  000A                     	;# 
  3715  000B                     	;# 
  3716  000C                     	;# 
  3717  000D                     	;# 
  3718  000E                     	;# 
  3719  0010                     	;# 
  3720  0011                     	;# 
  3721  0012                     	;# 
  3722  0013                     	;# 
  3723  0014                     	;# 
  3724  0015                     	;# 
  3725  0015                     	;# 
  3726  0016                     	;# 
  3727  0016                     	;# 
  3728  0017                     	;# 
  3729  0018                     	;# 
  3730  0019                     	;# 
  3731  0019                     	;# 
  3732  001A                     	;# 
  3733  001B                     	;# 
  3734  001C                     	;# 
  3735  001D                     	;# 
  3736  001E                     	;# 
  3737  001F                     	;# 
  3738  008C                     	;# 
  3739  008D                     	;# 
  3740  008E                     	;# 
  3741  0090                     	;# 
  3742  0091                     	;# 
  3743  0092                     	;# 
  3744  0093                     	;# 
  3745  0094                     	;# 
  3746  0097                     	;# 
  3747  009B                     	;# 
  3748  009B                     	;# 
  3749  009C                     	;# 
  3750  009D                     	;# 
  3751  009E                     	;# 
  3752  009F                     	;# 
  3753  010C                     	;# 
  3754  010D                     	;# 
  3755  010E                     	;# 
  3756  0111                     	;# 
  3757  0112                     	;# 
  3758  0113                     	;# 
  3759  0114                     	;# 
  3760  0115                     	;# 
  3761  0116                     	;# 
  3762  0117                     	;# 
  3763  0118                     	;# 
  3764  0119                     	;# 
  3765  018C                     	;# 
  3766  018D                     	;# 
  3767  018E                     	;# 
  3768  0199                     	;# 
  3769  0199                     	;# 
  3770  0199                     	;# 
  3771  019A                     	;# 
  3772  019A                     	;# 
  3773  019A                     	;# 
  3774  019B                     	;# 
  3775  019B                     	;# 
  3776  019B                     	;# 
  3777  019B                     	;# 
  3778  019B                     	;# 
  3779  019C                     	;# 
  3780  019C                     	;# 
  3781  019C                     	;# 
  3782  019D                     	;# 
  3783  019D                     	;# 
  3784  019D                     	;# 
  3785  019E                     	;# 
  3786  019E                     	;# 
  3787  019E                     	;# 
  3788  019F                     	;# 
  3789  019F                     	;# 
  3790  019F                     	;# 
  3791  019F                     	;# 
  3792  019F                     	;# 
  3793  020C                     	;# 
  3794  020D                     	;# 
  3795  020E                     	;# 
  3796  0211                     	;# 
  3797  0211                     	;# 
  3798  0212                     	;# 
  3799  0212                     	;# 
  3800  0213                     	;# 
  3801  0213                     	;# 
  3802  0214                     	;# 
  3803  0214                     	;# 
  3804  0215                     	;# 
  3805  0215                     	;# 
  3806  0215                     	;# 
  3807  0215                     	;# 
  3808  0216                     	;# 
  3809  0216                     	;# 
  3810  0217                     	;# 
  3811  0217                     	;# 
  3812  0219                     	;# 
  3813  021A                     	;# 
  3814  021B                     	;# 
  3815  021C                     	;# 
  3816  021D                     	;# 
  3817  021D                     	;# 
  3818  021E                     	;# 
  3819  021F                     	;# 
  3820  028C                     	;# 
  3821  028D                     	;# 
  3822  028E                     	;# 
  3823  0291                     	;# 
  3824  0291                     	;# 
  3825  0292                     	;# 
  3826  0293                     	;# 
  3827  0294                     	;# 
  3828  0295                     	;# 
  3829  0295                     	;# 
  3830  0296                     	;# 
  3831  0297                     	;# 
  3832  0298                     	;# 
  3833  029F                     	;# 
  3834  030C                     	;# 
  3835  030D                     	;# 
  3836  030E                     	;# 
  3837  0311                     	;# 
  3838  0311                     	;# 
  3839  0312                     	;# 
  3840  0313                     	;# 
  3841  0314                     	;# 
  3842  0315                     	;# 
  3843  0315                     	;# 
  3844  0316                     	;# 
  3845  0317                     	;# 
  3846  0318                     	;# 
  3847  038C                     	;# 
  3848  038D                     	;# 
  3849  038E                     	;# 
  3850  0391                     	;# 
  3851  0392                     	;# 
  3852  0393                     	;# 
  3853  0394                     	;# 
  3854  0395                     	;# 
  3855  0396                     	;# 
  3856  0397                     	;# 
  3857  0398                     	;# 
  3858  0399                     	;# 
  3859  039A                     	;# 
  3860  039C                     	;# 
  3861  039D                     	;# 
  3862  039E                     	;# 
  3863  039F                     	;# 
  3864  0411                     	;# 
  3865  0411                     	;# 
  3866  0412                     	;# 
  3867  0413                     	;# 
  3868  0414                     	;# 
  3869  0415                     	;# 
  3870  0416                     	;# 
  3871  0417                     	;# 
  3872  0418                     	;# 
  3873  0418                     	;# 
  3874  0419                     	;# 
  3875  041A                     	;# 
  3876  041B                     	;# 
  3877  041C                     	;# 
  3878  041D                     	;# 
  3879  041E                     	;# 
  3880  041F                     	;# 
  3881  0498                     	;# 
  3882  0498                     	;# 
  3883  0499                     	;# 
  3884  049A                     	;# 
  3885  049B                     	;# 
  3886  049B                     	;# 
  3887  049C                     	;# 
  3888  049D                     	;# 
  3889  049E                     	;# 
  3890  049F                     	;# 
  3891  0617                     	;# 
  3892  0618                     	;# 
  3893  0619                     	;# 
  3894  0619                     	;# 
  3895  061A                     	;# 
  3896  061B                     	;# 
  3897  061C                     	;# 
  3898  061C                     	;# 
  3899  061F                     	;# 
  3900  0691                     	;# 
  3901  0692                     	;# 
  3902  0693                     	;# 
  3903  0694                     	;# 
  3904  0695                     	;# 
  3905  0696                     	;# 
  3906  0697                     	;# 
  3907  0698                     	;# 
  3908  0699                     	;# 
  3909  0711                     	;# 
  3910  0712                     	;# 
  3911  0713                     	;# 
  3912  0714                     	;# 
  3913  0715                     	;# 
  3914  0716                     	;# 
  3915  0717                     	;# 
  3916  0718                     	;# 
  3917  0719                     	;# 
  3918  0891                     	;# 
  3919  0891                     	;# 
  3920  0891                     	;# 
  3921  0891                     	;# 
  3922  0891                     	;# 
  3923  0891                     	;# 
  3924  0892                     	;# 
  3925  0892                     	;# 
  3926  0892                     	;# 
  3927  0893                     	;# 
  3928  0893                     	;# 
  3929  0893                     	;# 
  3930  0893                     	;# 
  3931  0893                     	;# 
  3932  0893                     	;# 
  3933  0894                     	;# 
  3934  0894                     	;# 
  3935  0894                     	;# 
  3936  0895                     	;# 
  3937  0895                     	;# 
  3938  0895                     	;# 
  3939  0896                     	;# 
  3940  0896                     	;# 
  3941  0896                     	;# 
  3942  089B                     	;# 
  3943  0911                     	;# 
  3944  0912                     	;# 
  3945  0913                     	;# 
  3946  0914                     	;# 
  3947  0915                     	;# 
  3948  0916                     	;# 
  3949  0918                     	;# 
  3950  0919                     	;# 
  3951  091A                     	;# 
  3952  091B                     	;# 
  3953  091C                     	;# 
  3954  091D                     	;# 
  3955  091E                     	;# 
  3956  091F                     	;# 
  3957  0E0F                     	;# 
  3958  0E10                     	;# 
  3959  0E11                     	;# 
  3960  0E12                     	;# 
  3961  0E13                     	;# 
  3962  0E14                     	;# 
  3963  0E15                     	;# 
  3964  0E16                     	;# 
  3965  0E17                     	;# 
  3966  0E18                     	;# 
  3967  0E19                     	;# 
  3968  0E1A                     	;# 
  3969  0E1B                     	;# 
  3970  0E1C                     	;# 
  3971  0E1D                     	;# 
  3972  0E1E                     	;# 
  3973  0E1F                     	;# 
  3974  0E20                     	;# 
  3975  0E21                     	;# 
  3976  0E22                     	;# 
  3977  0E24                     	;# 
  3978  0E25                     	;# 
  3979  0E28                     	;# 
  3980  0E29                     	;# 
  3981  0E2A                     	;# 
  3982  0E2B                     	;# 
  3983  0E2C                     	;# 
  3984  0E2D                     	;# 
  3985  0E2E                     	;# 
  3986  0E2F                     	;# 
  3987  0E90                     	;# 
  3988  0E91                     	;# 
  3989  0E92                     	;# 
  3990  0E94                     	;# 
  3991  0E95                     	;# 
  3992  0E9C                     	;# 
  3993  0E9D                     	;# 
  3994  0E9E                     	;# 
  3995  0E9F                     	;# 
  3996  0EA0                     	;# 
  3997  0EA1                     	;# 
  3998  0EA2                     	;# 
  3999  0EA3                     	;# 
  4000  0EA4                     	;# 
  4001  0EA5                     	;# 
  4002  0EA6                     	;# 
  4003  0EA7                     	;# 
  4004  0F0F                     	;# 
  4005  0F10                     	;# 
  4006  0F11                     	;# 
  4007  0F12                     	;# 
  4008  0F13                     	;# 
  4009  0F14                     	;# 
  4010  0F15                     	;# 
  4011  0F16                     	;# 
  4012  0F17                     	;# 
  4013  0F18                     	;# 
  4014  0F19                     	;# 
  4015  0F1A                     	;# 
  4016  0F1B                     	;# 
  4017  0F1C                     	;# 
  4018  0F1D                     	;# 
  4019  0F1E                     	;# 
  4020  0F1F                     	;# 
  4021  0F20                     	;# 
  4022  0F21                     	;# 
  4023  0F22                     	;# 
  4024  0F23                     	;# 
  4025  0F24                     	;# 
  4026  0F25                     	;# 
  4027  0F26                     	;# 
  4028  0F27                     	;# 
  4029  0F28                     	;# 
  4030  0F29                     	;# 
  4031  0F2A                     	;# 
  4032  0F2B                     	;# 
  4033  0F2C                     	;# 
  4034  0F2D                     	;# 
  4035  0F2E                     	;# 
  4036  0F2F                     	;# 
  4037  0F30                     	;# 
  4038  0F31                     	;# 
  4039  0F32                     	;# 
  4040  0F33                     	;# 
  4041  0F34                     	;# 
  4042  0F35                     	;# 
  4043  0F36                     	;# 
  4044  0F37                     	;# 
  4045  0FE4                     	;# 
  4046  0FE5                     	;# 
  4047  0FE6                     	;# 
  4048  0FE7                     	;# 
  4049  0FE8                     	;# 
  4050  0FE9                     	;# 
  4051  0FEA                     	;# 
  4052  0FEB                     	;# 
  4053  0FED                     	;# 
  4054  0FEE                     	;# 
  4055  0FEF                     	;# 
  4056  0000                     	;# 
  4057  0001                     	;# 
  4058  0002                     	;# 
  4059  0003                     	;# 
  4060  0004                     	;# 
  4061  0005                     	;# 
  4062  0006                     	;# 
  4063  0007                     	;# 
  4064  0008                     	;# 
  4065  0009                     	;# 
  4066  000A                     	;# 
  4067  000B                     	;# 
  4068  000C                     	;# 
  4069  000D                     	;# 
  4070  000E                     	;# 
  4071  0010                     	;# 
  4072  0011                     	;# 
  4073  0012                     	;# 
  4074  0013                     	;# 
  4075  0014                     	;# 
  4076  0015                     	;# 
  4077  0015                     	;# 
  4078  0016                     	;# 
  4079  0016                     	;# 
  4080  0017                     	;# 
  4081  0018                     	;# 
  4082  0019                     	;# 
  4083  0019                     	;# 
  4084  001A                     	;# 
  4085  001B                     	;# 
  4086  001C                     	;# 
  4087  001D                     	;# 
  4088  001E                     	;# 
  4089  001F                     	;# 
  4090  008C                     	;# 
  4091  008D                     	;# 
  4092  008E                     	;# 
  4093  0090                     	;# 
  4094  0091                     	;# 
  4095  0092                     	;# 
  4096  0093                     	;# 
  4097  0094                     	;# 
  4098  0097                     	;# 
  4099  009B                     	;# 
  4100  009B                     	;# 
  4101  009C                     	;# 
  4102  009D                     	;# 
  4103  009E                     	;# 
  4104  009F                     	;# 
  4105  010C                     	;# 
  4106  010D                     	;# 
  4107  010E                     	;# 
  4108  0111                     	;# 
  4109  0112                     	;# 
  4110  0113                     	;# 
  4111  0114                     	;# 
  4112  0115                     	;# 
  4113  0116                     	;# 
  4114  0117                     	;# 
  4115  0118                     	;# 
  4116  0119                     	;# 
  4117  018C                     	;# 
  4118  018D                     	;# 
  4119  018E                     	;# 
  4120  0199                     	;# 
  4121  0199                     	;# 
  4122  0199                     	;# 
  4123  019A                     	;# 
  4124  019A                     	;# 
  4125  019A                     	;# 
  4126  019B                     	;# 
  4127  019B                     	;# 
  4128  019B                     	;# 
  4129  019B                     	;# 
  4130  019B                     	;# 
  4131  019C                     	;# 
  4132  019C                     	;# 
  4133  019C                     	;# 
  4134  019D                     	;# 
  4135  019D                     	;# 
  4136  019D                     	;# 
  4137  019E                     	;# 
  4138  019E                     	;# 
  4139  019E                     	;# 
  4140  019F                     	;# 
  4141  019F                     	;# 
  4142  019F                     	;# 
  4143  019F                     	;# 
  4144  019F                     	;# 
  4145  020C                     	;# 
  4146  020D                     	;# 
  4147  020E                     	;# 
  4148  0211                     	;# 
  4149  0211                     	;# 
  4150  0212                     	;# 
  4151  0212                     	;# 
  4152  0213                     	;# 
  4153  0213                     	;# 
  4154  0214                     	;# 
  4155  0214                     	;# 
  4156  0215                     	;# 
  4157  0215                     	;# 
  4158  0215                     	;# 
  4159  0215                     	;# 
  4160  0216                     	;# 
  4161  0216                     	;# 
  4162  0217                     	;# 
  4163  0217                     	;# 
  4164  0219                     	;# 
  4165  021A                     	;# 
  4166  021B                     	;# 
  4167  021C                     	;# 
  4168  021D                     	;# 
  4169  021D                     	;# 
  4170  021E                     	;# 
  4171  021F                     	;# 
  4172  028C                     	;# 
  4173  028D                     	;# 
  4174  028E                     	;# 
  4175  0291                     	;# 
  4176  0291                     	;# 
  4177  0292                     	;# 
  4178  0293                     	;# 
  4179  0294                     	;# 
  4180  0295                     	;# 
  4181  0295                     	;# 
  4182  0296                     	;# 
  4183  0297                     	;# 
  4184  0298                     	;# 
  4185  029F                     	;# 
  4186  030C                     	;# 
  4187  030D                     	;# 
  4188  030E                     	;# 
  4189  0311                     	;# 
  4190  0311                     	;# 
  4191  0312                     	;# 
  4192  0313                     	;# 
  4193  0314                     	;# 
  4194  0315                     	;# 
  4195  0315                     	;# 
  4196  0316                     	;# 
  4197  0317                     	;# 
  4198  0318                     	;# 
  4199  038C                     	;# 
  4200  038D                     	;# 
  4201  038E                     	;# 
  4202  0391                     	;# 
  4203  0392                     	;# 
  4204  0393                     	;# 
  4205  0394                     	;# 
  4206  0395                     	;# 
  4207  0396                     	;# 
  4208  0397                     	;# 
  4209  0398                     	;# 
  4210  0399                     	;# 
  4211  039A                     	;# 
  4212  039C                     	;# 
  4213  039D                     	;# 
  4214  039E                     	;# 
  4215  039F                     	;# 
  4216  0411                     	;# 
  4217  0411                     	;# 
  4218  0412                     	;# 
  4219  0413                     	;# 
  4220  0414                     	;# 
  4221  0415                     	;# 
  4222  0416                     	;# 
  4223  0417                     	;# 
  4224  0418                     	;# 
  4225  0418                     	;# 
  4226  0419                     	;# 
  4227  041A                     	;# 
  4228  041B                     	;# 
  4229  041C                     	;# 
  4230  041D                     	;# 
  4231  041E                     	;# 
  4232  041F                     	;# 
  4233  0498                     	;# 
  4234  0498                     	;# 
  4235  0499                     	;# 
  4236  049A                     	;# 
  4237  049B                     	;# 
  4238  049B                     	;# 
  4239  049C                     	;# 
  4240  049D                     	;# 
  4241  049E                     	;# 
  4242  049F                     	;# 
  4243  0617                     	;# 
  4244  0618                     	;# 
  4245  0619                     	;# 
  4246  0619                     	;# 
  4247  061A                     	;# 
  4248  061B                     	;# 
  4249  061C                     	;# 
  4250  061C                     	;# 
  4251  061F                     	;# 
  4252  0691                     	;# 
  4253  0692                     	;# 
  4254  0693                     	;# 
  4255  0694                     	;# 
  4256  0695                     	;# 
  4257  0696                     	;# 
  4258  0697                     	;# 
  4259  0698                     	;# 
  4260  0699                     	;# 
  4261  0711                     	;# 
  4262  0712                     	;# 
  4263  0713                     	;# 
  4264  0714                     	;# 
  4265  0715                     	;# 
  4266  0716                     	;# 
  4267  0717                     	;# 
  4268  0718                     	;# 
  4269  0719                     	;# 
  4270  0891                     	;# 
  4271  0891                     	;# 
  4272  0891                     	;# 
  4273  0891                     	;# 
  4274  0891                     	;# 
  4275  0891                     	;# 
  4276  0892                     	;# 
  4277  0892                     	;# 
  4278  0892                     	;# 
  4279  0893                     	;# 
  4280  0893                     	;# 
  4281  0893                     	;# 
  4282  0893                     	;# 
  4283  0893                     	;# 
  4284  0893                     	;# 
  4285  0894                     	;# 
  4286  0894                     	;# 
  4287  0894                     	;# 
  4288  0895                     	;# 
  4289  0895                     	;# 
  4290  0895                     	;# 
  4291  0896                     	;# 
  4292  0896                     	;# 
  4293  0896                     	;# 
  4294  089B                     	;# 
  4295  0911                     	;# 
  4296  0912                     	;# 
  4297  0913                     	;# 
  4298  0914                     	;# 
  4299  0915                     	;# 
  4300  0916                     	;# 
  4301  0918                     	;# 
  4302  0919                     	;# 
  4303  091A                     	;# 
  4304  091B                     	;# 
  4305  091C                     	;# 
  4306  091D                     	;# 
  4307  091E                     	;# 
  4308  091F                     	;# 
  4309  0E0F                     	;# 
  4310  0E10                     	;# 
  4311  0E11                     	;# 
  4312  0E12                     	;# 
  4313  0E13                     	;# 
  4314  0E14                     	;# 
  4315  0E15                     	;# 
  4316  0E16                     	;# 
  4317  0E17                     	;# 
  4318  0E18                     	;# 
  4319  0E19                     	;# 
  4320  0E1A                     	;# 
  4321  0E1B                     	;# 
  4322  0E1C                     	;# 
  4323  0E1D                     	;# 
  4324  0E1E                     	;# 
  4325  0E1F                     	;# 
  4326  0E20                     	;# 
  4327  0E21                     	;# 
  4328  0E22                     	;# 
  4329  0E24                     	;# 
  4330  0E25                     	;# 
  4331  0E28                     	;# 
  4332  0E29                     	;# 
  4333  0E2A                     	;# 
  4334  0E2B                     	;# 
  4335  0E2C                     	;# 
  4336  0E2D                     	;# 
  4337  0E2E                     	;# 
  4338  0E2F                     	;# 
  4339  0E90                     	;# 
  4340  0E91                     	;# 
  4341  0E92                     	;# 
  4342  0E94                     	;# 
  4343  0E95                     	;# 
  4344  0E9C                     	;# 
  4345  0E9D                     	;# 
  4346  0E9E                     	;# 
  4347  0E9F                     	;# 
  4348  0EA0                     	;# 
  4349  0EA1                     	;# 
  4350  0EA2                     	;# 
  4351  0EA3                     	;# 
  4352  0EA4                     	;# 
  4353  0EA5                     	;# 
  4354  0EA6                     	;# 
  4355  0EA7                     	;# 
  4356  0F0F                     	;# 
  4357  0F10                     	;# 
  4358  0F11                     	;# 
  4359  0F12                     	;# 
  4360  0F13                     	;# 
  4361  0F14                     	;# 
  4362  0F15                     	;# 
  4363  0F16                     	;# 
  4364  0F17                     	;# 
  4365  0F18                     	;# 
  4366  0F19                     	;# 
  4367  0F1A                     	;# 
  4368  0F1B                     	;# 
  4369  0F1C                     	;# 
  4370  0F1D                     	;# 
  4371  0F1E                     	;# 
  4372  0F1F                     	;# 
  4373  0F20                     	;# 
  4374  0F21                     	;# 
  4375  0F22                     	;# 
  4376  0F23                     	;# 
  4377  0F24                     	;# 
  4378  0F25                     	;# 
  4379  0F26                     	;# 
  4380  0F27                     	;# 
  4381  0F28                     	;# 
  4382  0F29                     	;# 
  4383  0F2A                     	;# 
  4384  0F2B                     	;# 
  4385  0F2C                     	;# 
  4386  0F2D                     	;# 
  4387  0F2E                     	;# 
  4388  0F2F                     	;# 
  4389  0F30                     	;# 
  4390  0F31                     	;# 
  4391  0F32                     	;# 
  4392  0F33                     	;# 
  4393  0F34                     	;# 
  4394  0F35                     	;# 
  4395  0F36                     	;# 
  4396  0F37                     	;# 
  4397  0FE4                     	;# 
  4398  0FE5                     	;# 
  4399  0FE6                     	;# 
  4400  0FE7                     	;# 
  4401  0FE8                     	;# 
  4402  0FE9                     	;# 
  4403  0FEA                     	;# 
  4404  0FEB                     	;# 
  4405  0FED                     	;# 
  4406  0FEE                     	;# 
  4407  0FEF                     	;# 
  4408  0000                     	;# 
  4409  0001                     	;# 
  4410  0002                     	;# 
  4411  0003                     	;# 
  4412  0004                     	;# 
  4413  0005                     	;# 
  4414  0006                     	;# 
  4415  0007                     	;# 
  4416  0008                     	;# 
  4417  0009                     	;# 
  4418  000A                     	;# 
  4419  000B                     	;# 
  4420  000C                     	;# 
  4421  000D                     	;# 
  4422  000E                     	;# 
  4423  0010                     	;# 
  4424  0011                     	;# 
  4425  0012                     	;# 
  4426  0013                     	;# 
  4427  0014                     	;# 
  4428  0015                     	;# 
  4429  0015                     	;# 
  4430  0016                     	;# 
  4431  0016                     	;# 
  4432  0017                     	;# 
  4433  0018                     	;# 
  4434  0019                     	;# 
  4435  0019                     	;# 
  4436  001A                     	;# 
  4437  001B                     	;# 
  4438  001C                     	;# 
  4439  001D                     	;# 
  4440  001E                     	;# 
  4441  001F                     	;# 
  4442  008C                     	;# 
  4443  008D                     	;# 
  4444  008E                     	;# 
  4445  0090                     	;# 
  4446  0091                     	;# 
  4447  0092                     	;# 
  4448  0093                     	;# 
  4449  0094                     	;# 
  4450  0097                     	;# 
  4451  009B                     	;# 
  4452  009B                     	;# 
  4453  009C                     	;# 
  4454  009D                     	;# 
  4455  009E                     	;# 
  4456  009F                     	;# 
  4457  010C                     	;# 
  4458  010D                     	;# 
  4459  010E                     	;# 
  4460  0111                     	;# 
  4461  0112                     	;# 
  4462  0113                     	;# 
  4463  0114                     	;# 
  4464  0115                     	;# 
  4465  0116                     	;# 
  4466  0117                     	;# 
  4467  0118                     	;# 
  4468  0119                     	;# 
  4469  018C                     	;# 
  4470  018D                     	;# 
  4471  018E                     	;# 
  4472  0199                     	;# 
  4473  0199                     	;# 
  4474  0199                     	;# 
  4475  019A                     	;# 
  4476  019A                     	;# 
  4477  019A                     	;# 
  4478  019B                     	;# 
  4479  019B                     	;# 
  4480  019B                     	;# 
  4481  019B                     	;# 
  4482  019B                     	;# 
  4483  019C                     	;# 
  4484  019C                     	;# 
  4485  019C                     	;# 
  4486  019D                     	;# 
  4487  019D                     	;# 
  4488  019D                     	;# 
  4489  019E                     	;# 
  4490  019E                     	;# 
  4491  019E                     	;# 
  4492  019F                     	;# 
  4493  019F                     	;# 
  4494  019F                     	;# 
  4495  019F                     	;# 
  4496  019F                     	;# 
  4497  020C                     	;# 
  4498  020D                     	;# 
  4499  020E                     	;# 
  4500  0211                     	;# 
  4501  0211                     	;# 
  4502  0212                     	;# 
  4503  0212                     	;# 
  4504  0213                     	;# 
  4505  0213                     	;# 
  4506  0214                     	;# 
  4507  0214                     	;# 
  4508  0215                     	;# 
  4509  0215                     	;# 
  4510  0215                     	;# 
  4511  0215                     	;# 
  4512  0216                     	;# 
  4513  0216                     	;# 
  4514  0217                     	;# 
  4515  0217                     	;# 
  4516  0219                     	;# 
  4517  021A                     	;# 
  4518  021B                     	;# 
  4519  021C                     	;# 
  4520  021D                     	;# 
  4521  021D                     	;# 
  4522  021E                     	;# 
  4523  021F                     	;# 
  4524  028C                     	;# 
  4525  028D                     	;# 
  4526  028E                     	;# 
  4527  0291                     	;# 
  4528  0291                     	;# 
  4529  0292                     	;# 
  4530  0293                     	;# 
  4531  0294                     	;# 
  4532  0295                     	;# 
  4533  0295                     	;# 
  4534  0296                     	;# 
  4535  0297                     	;# 
  4536  0298                     	;# 
  4537  029F                     	;# 
  4538  030C                     	;# 
  4539  030D                     	;# 
  4540  030E                     	;# 
  4541  0311                     	;# 
  4542  0311                     	;# 
  4543  0312                     	;# 
  4544  0313                     	;# 
  4545  0314                     	;# 
  4546  0315                     	;# 
  4547  0315                     	;# 
  4548  0316                     	;# 
  4549  0317                     	;# 
  4550  0318                     	;# 
  4551  038C                     	;# 
  4552  038D                     	;# 
  4553  038E                     	;# 
  4554  0391                     	;# 
  4555  0392                     	;# 
  4556  0393                     	;# 
  4557  0394                     	;# 
  4558  0395                     	;# 
  4559  0396                     	;# 
  4560  0397                     	;# 
  4561  0398                     	;# 
  4562  0399                     	;# 
  4563  039A                     	;# 
  4564  039C                     	;# 
  4565  039D                     	;# 
  4566  039E                     	;# 
  4567  039F                     	;# 
  4568  0411                     	;# 
  4569  0411                     	;# 
  4570  0412                     	;# 
  4571  0413                     	;# 
  4572  0414                     	;# 
  4573  0415                     	;# 
  4574  0416                     	;# 
  4575  0417                     	;# 
  4576  0418                     	;# 
  4577  0418                     	;# 
  4578  0419                     	;# 
  4579  041A                     	;# 
  4580  041B                     	;# 
  4581  041C                     	;# 
  4582  041D                     	;# 
  4583  041E                     	;# 
  4584  041F                     	;# 
  4585  0498                     	;# 
  4586  0498                     	;# 
  4587  0499                     	;# 
  4588  049A                     	;# 
  4589  049B                     	;# 
  4590  049B                     	;# 
  4591  049C                     	;# 
  4592  049D                     	;# 
  4593  049E                     	;# 
  4594  049F                     	;# 
  4595  0617                     	;# 
  4596  0618                     	;# 
  4597  0619                     	;# 
  4598  0619                     	;# 
  4599  061A                     	;# 
  4600  061B                     	;# 
  4601  061C                     	;# 
  4602  061C                     	;# 
  4603  061F                     	;# 
  4604  0691                     	;# 
  4605  0692                     	;# 
  4606  0693                     	;# 
  4607  0694                     	;# 
  4608  0695                     	;# 
  4609  0696                     	;# 
  4610  0697                     	;# 
  4611  0698                     	;# 
  4612  0699                     	;# 
  4613  0711                     	;# 
  4614  0712                     	;# 
  4615  0713                     	;# 
  4616  0714                     	;# 
  4617  0715                     	;# 
  4618  0716                     	;# 
  4619  0717                     	;# 
  4620  0718                     	;# 
  4621  0719                     	;# 
  4622  0891                     	;# 
  4623  0891                     	;# 
  4624  0891                     	;# 
  4625  0891                     	;# 
  4626  0891                     	;# 
  4627  0891                     	;# 
  4628  0892                     	;# 
  4629  0892                     	;# 
  4630  0892                     	;# 
  4631  0893                     	;# 
  4632  0893                     	;# 
  4633  0893                     	;# 
  4634  0893                     	;# 
  4635  0893                     	;# 
  4636  0893                     	;# 
  4637  0894                     	;# 
  4638  0894                     	;# 
  4639  0894                     	;# 
  4640  0895                     	;# 
  4641  0895                     	;# 
  4642  0895                     	;# 
  4643  0896                     	;# 
  4644  0896                     	;# 
  4645  0896                     	;# 
  4646  089B                     	;# 
  4647  0911                     	;# 
  4648  0912                     	;# 
  4649  0913                     	;# 
  4650  0914                     	;# 
  4651  0915                     	;# 
  4652  0916                     	;# 
  4653  0918                     	;# 
  4654  0919                     	;# 
  4655  091A                     	;# 
  4656  091B                     	;# 
  4657  091C                     	;# 
  4658  091D                     	;# 
  4659  091E                     	;# 
  4660  091F                     	;# 
  4661  0E0F                     	;# 
  4662  0E10                     	;# 
  4663  0E11                     	;# 
  4664  0E12                     	;# 
  4665  0E13                     	;# 
  4666  0E14                     	;# 
  4667  0E15                     	;# 
  4668  0E16                     	;# 
  4669  0E17                     	;# 
  4670  0E18                     	;# 
  4671  0E19                     	;# 
  4672  0E1A                     	;# 
  4673  0E1B                     	;# 
  4674  0E1C                     	;# 
  4675  0E1D                     	;# 
  4676  0E1E                     	;# 
  4677  0E1F                     	;# 
  4678  0E20                     	;# 
  4679  0E21                     	;# 
  4680  0E22                     	;# 
  4681  0E24                     	;# 
  4682  0E25                     	;# 
  4683  0E28                     	;# 
  4684  0E29                     	;# 
  4685  0E2A                     	;# 
  4686  0E2B                     	;# 
  4687  0E2C                     	;# 
  4688  0E2D                     	;# 
  4689  0E2E                     	;# 
  4690  0E2F                     	;# 
  4691  0E90                     	;# 
  4692  0E91                     	;# 
  4693  0E92                     	;# 
  4694  0E94                     	;# 
  4695  0E95                     	;# 
  4696  0E9C                     	;# 
  4697  0E9D                     	;# 
  4698  0E9E                     	;# 
  4699  0E9F                     	;# 
  4700  0EA0                     	;# 
  4701  0EA1                     	;# 
  4702  0EA2                     	;# 
  4703  0EA3                     	;# 
  4704  0EA4                     	;# 
  4705  0EA5                     	;# 
  4706  0EA6                     	;# 
  4707  0EA7                     	;# 
  4708  0F0F                     	;# 
  4709  0F10                     	;# 
  4710  0F11                     	;# 
  4711  0F12                     	;# 
  4712  0F13                     	;# 
  4713  0F14                     	;# 
  4714  0F15                     	;# 
  4715  0F16                     	;# 
  4716  0F17                     	;# 
  4717  0F18                     	;# 
  4718  0F19                     	;# 
  4719  0F1A                     	;# 
  4720  0F1B                     	;# 
  4721  0F1C                     	;# 
  4722  0F1D                     	;# 
  4723  0F1E                     	;# 
  4724  0F1F                     	;# 
  4725  0F20                     	;# 
  4726  0F21                     	;# 
  4727  0F22                     	;# 
  4728  0F23                     	;# 
  4729  0F24                     	;# 
  4730  0F25                     	;# 
  4731  0F26                     	;# 
  4732  0F27                     	;# 
  4733  0F28                     	;# 
  4734  0F29                     	;# 
  4735  0F2A                     	;# 
  4736  0F2B                     	;# 
  4737  0F2C                     	;# 
  4738  0F2D                     	;# 
  4739  0F2E                     	;# 
  4740  0F2F                     	;# 
  4741  0F30                     	;# 
  4742  0F31                     	;# 
  4743  0F32                     	;# 
  4744  0F33                     	;# 
  4745  0F34                     	;# 
  4746  0F35                     	;# 
  4747  0F36                     	;# 
  4748  0F37                     	;# 
  4749  0FE4                     	;# 
  4750  0FE5                     	;# 
  4751  0FE6                     	;# 
  4752  0FE7                     	;# 
  4753  0FE8                     	;# 
  4754  0FE9                     	;# 
  4755  0FEA                     	;# 
  4756  0FEB                     	;# 
  4757  0FED                     	;# 
  4758  0FEE                     	;# 
  4759  0FEF                     	;# 
  4760  0000                     	;# 
  4761  0001                     	;# 
  4762  0002                     	;# 
  4763  0003                     	;# 
  4764  0004                     	;# 
  4765  0005                     	;# 
  4766  0006                     	;# 
  4767  0007                     	;# 
  4768  0008                     	;# 
  4769  0009                     	;# 
  4770  000A                     	;# 
  4771  000B                     	;# 
  4772  000C                     	;# 
  4773  000D                     	;# 
  4774  000E                     	;# 
  4775  0010                     	;# 
  4776  0011                     	;# 
  4777  0012                     	;# 
  4778  0013                     	;# 
  4779  0014                     	;# 
  4780  0015                     	;# 
  4781  0015                     	;# 
  4782  0016                     	;# 
  4783  0016                     	;# 
  4784  0017                     	;# 
  4785  0018                     	;# 
  4786  0019                     	;# 
  4787  0019                     	;# 
  4788  001A                     	;# 
  4789  001B                     	;# 
  4790  001C                     	;# 
  4791  001D                     	;# 
  4792  001E                     	;# 
  4793  001F                     	;# 
  4794  008C                     	;# 
  4795  008D                     	;# 
  4796  008E                     	;# 
  4797  0090                     	;# 
  4798  0091                     	;# 
  4799  0092                     	;# 
  4800  0093                     	;# 
  4801  0094                     	;# 
  4802  0097                     	;# 
  4803  009B                     	;# 
  4804  009B                     	;# 
  4805  009C                     	;# 
  4806  009D                     	;# 
  4807  009E                     	;# 
  4808  009F                     	;# 
  4809  010C                     	;# 
  4810  010D                     	;# 
  4811  010E                     	;# 
  4812  0111                     	;# 
  4813  0112                     	;# 
  4814  0113                     	;# 
  4815  0114                     	;# 
  4816  0115                     	;# 
  4817  0116                     	;# 
  4818  0117                     	;# 
  4819  0118                     	;# 
  4820  0119                     	;# 
  4821  018C                     	;# 
  4822  018D                     	;# 
  4823  018E                     	;# 
  4824  0199                     	;# 
  4825  0199                     	;# 
  4826  0199                     	;# 
  4827  019A                     	;# 
  4828  019A                     	;# 
  4829  019A                     	;# 
  4830  019B                     	;# 
  4831  019B                     	;# 
  4832  019B                     	;# 
  4833  019B                     	;# 
  4834  019B                     	;# 
  4835  019C                     	;# 
  4836  019C                     	;# 
  4837  019C                     	;# 
  4838  019D                     	;# 
  4839  019D                     	;# 
  4840  019D                     	;# 
  4841  019E                     	;# 
  4842  019E                     	;# 
  4843  019E                     	;# 
  4844  019F                     	;# 
  4845  019F                     	;# 
  4846  019F                     	;# 
  4847  019F                     	;# 
  4848  019F                     	;# 
  4849  020C                     	;# 
  4850  020D                     	;# 
  4851  020E                     	;# 
  4852  0211                     	;# 
  4853  0211                     	;# 
  4854  0212                     	;# 
  4855  0212                     	;# 
  4856  0213                     	;# 
  4857  0213                     	;# 
  4858  0214                     	;# 
  4859  0214                     	;# 
  4860  0215                     	;# 
  4861  0215                     	;# 
  4862  0215                     	;# 
  4863  0215                     	;# 
  4864  0216                     	;# 
  4865  0216                     	;# 
  4866  0217                     	;# 
  4867  0217                     	;# 
  4868  0219                     	;# 
  4869  021A                     	;# 
  4870  021B                     	;# 
  4871  021C                     	;# 
  4872  021D                     	;# 
  4873  021D                     	;# 
  4874  021E                     	;# 
  4875  021F                     	;# 
  4876  028C                     	;# 
  4877  028D                     	;# 
  4878  028E                     	;# 
  4879  0291                     	;# 
  4880  0291                     	;# 
  4881  0292                     	;# 
  4882  0293                     	;# 
  4883  0294                     	;# 
  4884  0295                     	;# 
  4885  0295                     	;# 
  4886  0296                     	;# 
  4887  0297                     	;# 
  4888  0298                     	;# 
  4889  029F                     	;# 
  4890  030C                     	;# 
  4891  030D                     	;# 
  4892  030E                     	;# 
  4893  0311                     	;# 
  4894  0311                     	;# 
  4895  0312                     	;# 
  4896  0313                     	;# 
  4897  0314                     	;# 
  4898  0315                     	;# 
  4899  0315                     	;# 
  4900  0316                     	;# 
  4901  0317                     	;# 
  4902  0318                     	;# 
  4903  038C                     	;# 
  4904  038D                     	;# 
  4905  038E                     	;# 
  4906  0391                     	;# 
  4907  0392                     	;# 
  4908  0393                     	;# 
  4909  0394                     	;# 
  4910  0395                     	;# 
  4911  0396                     	;# 
  4912  0397                     	;# 
  4913  0398                     	;# 
  4914  0399                     	;# 
  4915  039A                     	;# 
  4916  039C                     	;# 
  4917  039D                     	;# 
  4918  039E                     	;# 
  4919  039F                     	;# 
  4920  0411                     	;# 
  4921  0411                     	;# 
  4922  0412                     	;# 
  4923  0413                     	;# 
  4924  0414                     	;# 
  4925  0415                     	;# 
  4926  0416                     	;# 
  4927  0417                     	;# 
  4928  0418                     	;# 
  4929  0418                     	;# 
  4930  0419                     	;# 
  4931  041A                     	;# 
  4932  041B                     	;# 
  4933  041C                     	;# 
  4934  041D                     	;# 
  4935  041E                     	;# 
  4936  041F                     	;# 
  4937  0498                     	;# 
  4938  0498                     	;# 
  4939  0499                     	;# 
  4940  049A                     	;# 
  4941  049B                     	;# 
  4942  049B                     	;# 
  4943  049C                     	;# 
  4944  049D                     	;# 
  4945  049E                     	;# 
  4946  049F                     	;# 
  4947  0617                     	;# 
  4948  0618                     	;# 
  4949  0619                     	;# 
  4950  0619                     	;# 
  4951  061A                     	;# 
  4952  061B                     	;# 
  4953  061C                     	;# 
  4954  061C                     	;# 
  4955  061F                     	;# 
  4956  0691                     	;# 
  4957  0692                     	;# 
  4958  0693                     	;# 
  4959  0694                     	;# 
  4960  0695                     	;# 
  4961  0696                     	;# 
  4962  0697                     	;# 
  4963  0698                     	;# 
  4964  0699                     	;# 
  4965  0711                     	;# 
  4966  0712                     	;# 
  4967  0713                     	;# 
  4968  0714                     	;# 
  4969  0715                     	;# 
  4970  0716                     	;# 
  4971  0717                     	;# 
  4972  0718                     	;# 
  4973  0719                     	;# 
  4974  0891                     	;# 
  4975  0891                     	;# 
  4976  0891                     	;# 
  4977  0891                     	;# 
  4978  0891                     	;# 
  4979  0891                     	;# 
  4980  0892                     	;# 
  4981  0892                     	;# 
  4982  0892                     	;# 
  4983  0893                     	;# 
  4984  0893                     	;# 
  4985  0893                     	;# 
  4986  0893                     	;# 
  4987  0893                     	;# 
  4988  0893                     	;# 
  4989  0894                     	;# 
  4990  0894                     	;# 
  4991  0894                     	;# 
  4992  0895                     	;# 
  4993  0895                     	;# 
  4994  0895                     	;# 
  4995  0896                     	;# 
  4996  0896                     	;# 
  4997  0896                     	;# 
  4998  089B                     	;# 
  4999  0911                     	;# 
  5000  0912                     	;# 
  5001  0913                     	;# 
  5002  0914                     	;# 
  5003  0915                     	;# 
  5004  0916                     	;# 
  5005  0918                     	;# 
  5006  0919                     	;# 
  5007  091A                     	;# 
  5008  091B                     	;# 
  5009  091C                     	;# 
  5010  091D                     	;# 
  5011  091E                     	;# 
  5012  091F                     	;# 
  5013  0E0F                     	;# 
  5014  0E10                     	;# 
  5015  0E11                     	;# 
  5016  0E12                     	;# 
  5017  0E13                     	;# 
  5018  0E14                     	;# 
  5019  0E15                     	;# 
  5020  0E16                     	;# 
  5021  0E17                     	;# 
  5022  0E18                     	;# 
  5023  0E19                     	;# 
  5024  0E1A                     	;# 
  5025  0E1B                     	;# 
  5026  0E1C                     	;# 
  5027  0E1D                     	;# 
  5028  0E1E                     	;# 
  5029  0E1F                     	;# 
  5030  0E20                     	;# 
  5031  0E21                     	;# 
  5032  0E22                     	;# 
  5033  0E24                     	;# 
  5034  0E25                     	;# 
  5035  0E28                     	;# 
  5036  0E29                     	;# 
  5037  0E2A                     	;# 
  5038  0E2B                     	;# 
  5039  0E2C                     	;# 
  5040  0E2D                     	;# 
  5041  0E2E                     	;# 
  5042  0E2F                     	;# 
  5043  0E90                     	;# 
  5044  0E91                     	;# 
  5045  0E92                     	;# 
  5046  0E94                     	;# 
  5047  0E95                     	;# 
  5048  0E9C                     	;# 
  5049  0E9D                     	;# 
  5050  0E9E                     	;# 
  5051  0E9F                     	;# 
  5052  0EA0                     	;# 
  5053  0EA1                     	;# 
  5054  0EA2                     	;# 
  5055  0EA3                     	;# 
  5056  0EA4                     	;# 
  5057  0EA5                     	;# 
  5058  0EA6                     	;# 
  5059  0EA7                     	;# 
  5060  0F0F                     	;# 
  5061  0F10                     	;# 
  5062  0F11                     	;# 
  5063  0F12                     	;# 
  5064  0F13                     	;# 
  5065  0F14                     	;# 
  5066  0F15                     	;# 
  5067  0F16                     	;# 
  5068  0F17                     	;# 
  5069  0F18                     	;# 
  5070  0F19                     	;# 
  5071  0F1A                     	;# 
  5072  0F1B                     	;# 
  5073  0F1C                     	;# 
  5074  0F1D                     	;# 
  5075  0F1E                     	;# 
  5076  0F1F                     	;# 
  5077  0F20                     	;# 
  5078  0F21                     	;# 
  5079  0F22                     	;# 
  5080  0F23                     	;# 
  5081  0F24                     	;# 
  5082  0F25                     	;# 
  5083  0F26                     	;# 
  5084  0F27                     	;# 
  5085  0F28                     	;# 
  5086  0F29                     	;# 
  5087  0F2A                     	;# 
  5088  0F2B                     	;# 
  5089  0F2C                     	;# 
  5090  0F2D                     	;# 
  5091  0F2E                     	;# 
  5092  0F2F                     	;# 
  5093  0F30                     	;# 
  5094  0F31                     	;# 
  5095  0F32                     	;# 
  5096  0F33                     	;# 
  5097  0F34                     	;# 
  5098  0F35                     	;# 
  5099  0F36                     	;# 
  5100  0F37                     	;# 
  5101  0FE4                     	;# 
  5102  0FE5                     	;# 
  5103  0FE6                     	;# 
  5104  0FE7                     	;# 
  5105  0FE8                     	;# 
  5106  0FE9                     	;# 
  5107  0FEA                     	;# 
  5108  0FEB                     	;# 
  5109  0FED                     	;# 
  5110  0FEE                     	;# 
  5111  0FEF                     	;# 
  5112  0000                     	;# 
  5113  0001                     	;# 
  5114  0002                     	;# 
  5115  0003                     	;# 
  5116  0004                     	;# 
  5117  0005                     	;# 
  5118  0006                     	;# 
  5119  0007                     	;# 
  5120  0008                     	;# 
  5121  0009                     	;# 
  5122  000A                     	;# 
  5123  000B                     	;# 
  5124  000C                     	;# 
  5125  000D                     	;# 
  5126  000E                     	;# 
  5127  0010                     	;# 
  5128  0011                     	;# 
  5129  0012                     	;# 
  5130  0013                     	;# 
  5131  0014                     	;# 
  5132  0015                     	;# 
  5133  0015                     	;# 
  5134  0016                     	;# 
  5135  0016                     	;# 
  5136  0017                     	;# 
  5137  0018                     	;# 
  5138  0019                     	;# 
  5139  0019                     	;# 
  5140  001A                     	;# 
  5141  001B                     	;# 
  5142  001C                     	;# 
  5143  001D                     	;# 
  5144  001E                     	;# 
  5145  001F                     	;# 
  5146  008C                     	;# 
  5147  008D                     	;# 
  5148  008E                     	;# 
  5149  0090                     	;# 
  5150  0091                     	;# 
  5151  0092                     	;# 
  5152  0093                     	;# 
  5153  0094                     	;# 
  5154  0097                     	;# 
  5155  009B                     	;# 
  5156  009B                     	;# 
  5157  009C                     	;# 
  5158  009D                     	;# 
  5159  009E                     	;# 
  5160  009F                     	;# 
  5161  010C                     	;# 
  5162  010D                     	;# 
  5163  010E                     	;# 
  5164  0111                     	;# 
  5165  0112                     	;# 
  5166  0113                     	;# 
  5167  0114                     	;# 
  5168  0115                     	;# 
  5169  0116                     	;# 
  5170  0117                     	;# 
  5171  0118                     	;# 
  5172  0119                     	;# 
  5173  018C                     	;# 
  5174  018D                     	;# 
  5175  018E                     	;# 
  5176  0197                     	;# 
  5177  0199                     	;# 
  5178  0199                     	;# 
  5179  0199                     	;# 
  5180  019A                     	;# 
  5181  019A                     	;# 
  5182  019A                     	;# 
  5183  019B                     	;# 
  5184  019B                     	;# 
  5185  019B                     	;# 
  5186  019B                     	;# 
  5187  019B                     	;# 
  5188  019C                     	;# 
  5189  019C                     	;# 
  5190  019C                     	;# 
  5191  019D                     	;# 
  5192  019D                     	;# 
  5193  019D                     	;# 
  5194  019E                     	;# 
  5195  019E                     	;# 
  5196  019E                     	;# 
  5197  019F                     	;# 
  5198  019F                     	;# 
  5199  019F                     	;# 
  5200  019F                     	;# 
  5201  019F                     	;# 
  5202  020C                     	;# 
  5203  020D                     	;# 
  5204  020E                     	;# 
  5205  0211                     	;# 
  5206  0211                     	;# 
  5207  0212                     	;# 
  5208  0212                     	;# 
  5209  0213                     	;# 
  5210  0213                     	;# 
  5211  0214                     	;# 
  5212  0214                     	;# 
  5213  0215                     	;# 
  5214  0215                     	;# 
  5215  0215                     	;# 
  5216  0215                     	;# 
  5217  0216                     	;# 
  5218  0216                     	;# 
  5219  0217                     	;# 
  5220  0217                     	;# 
  5221  0219                     	;# 
  5222  021A                     	;# 
  5223  021B                     	;# 
  5224  021C                     	;# 
  5225  021D                     	;# 
  5226  021D                     	;# 
  5227  021E                     	;# 
  5228  021F                     	;# 
  5229  028C                     	;# 
  5230  028D                     	;# 
  5231  028E                     	;# 
  5232  0291                     	;# 
  5233  0291                     	;# 
  5234  0292                     	;# 
  5235  0293                     	;# 
  5236  0294                     	;# 
  5237  0295                     	;# 
  5238  0295                     	;# 
  5239  0296                     	;# 
  5240  0297                     	;# 
  5241  0298                     	;# 
  5242  029F                     	;# 
  5243  030C                     	;# 
  5244  030D                     	;# 
  5245  030E                     	;# 
  5246  0311                     	;# 
  5247  0311                     	;# 
  5248  0312                     	;# 
  5249  0313                     	;# 
  5250  0314                     	;# 
  5251  0315                     	;# 
  5252  0315                     	;# 
  5253  0316                     	;# 
  5254  0317                     	;# 
  5255  0318                     	;# 
  5256  038C                     	;# 
  5257  038D                     	;# 
  5258  038E                     	;# 
  5259  0391                     	;# 
  5260  0392                     	;# 
  5261  0393                     	;# 
  5262  0394                     	;# 
  5263  0395                     	;# 
  5264  0396                     	;# 
  5265  0397                     	;# 
  5266  0398                     	;# 
  5267  0399                     	;# 
  5268  039A                     	;# 
  5269  039C                     	;# 
  5270  039D                     	;# 
  5271  039E                     	;# 
  5272  039F                     	;# 
  5273  0411                     	;# 
  5274  0411                     	;# 
  5275  0412                     	;# 
  5276  0413                     	;# 
  5277  0414                     	;# 
  5278  0415                     	;# 
  5279  0416                     	;# 
  5280  0417                     	;# 
  5281  0418                     	;# 
  5282  0418                     	;# 
  5283  0419                     	;# 
  5284  041A                     	;# 
  5285  041B                     	;# 
  5286  041C                     	;# 
  5287  041D                     	;# 
  5288  041E                     	;# 
  5289  041F                     	;# 
  5290  0498                     	;# 
  5291  0498                     	;# 
  5292  0499                     	;# 
  5293  049A                     	;# 
  5294  049B                     	;# 
  5295  049B                     	;# 
  5296  049C                     	;# 
  5297  049D                     	;# 
  5298  049E                     	;# 
  5299  049F                     	;# 
  5300  0617                     	;# 
  5301  0618                     	;# 
  5302  0619                     	;# 
  5303  0619                     	;# 
  5304  061A                     	;# 
  5305  061B                     	;# 
  5306  061C                     	;# 
  5307  061C                     	;# 
  5308  061F                     	;# 
  5309  0691                     	;# 
  5310  0692                     	;# 
  5311  0693                     	;# 
  5312  0694                     	;# 
  5313  0695                     	;# 
  5314  0696                     	;# 
  5315  0697                     	;# 
  5316  0698                     	;# 
  5317  0699                     	;# 
  5318  0711                     	;# 
  5319  0712                     	;# 
  5320  0713                     	;# 
  5321  0714                     	;# 
  5322  0715                     	;# 
  5323  0716                     	;# 
  5324  0717                     	;# 
  5325  0718                     	;# 
  5326  0719                     	;# 
  5327  0891                     	;# 
  5328  0891                     	;# 
  5329  0891                     	;# 
  5330  0891                     	;# 
  5331  0891                     	;# 
  5332  0891                     	;# 
  5333  0892                     	;# 
  5334  0892                     	;# 
  5335  0892                     	;# 
  5336  0893                     	;# 
  5337  0893                     	;# 
  5338  0893                     	;# 
  5339  0893                     	;# 
  5340  0893                     	;# 
  5341  0893                     	;# 
  5342  0894                     	;# 
  5343  0894                     	;# 
  5344  0894                     	;# 
  5345  0895                     	;# 
  5346  0895                     	;# 
  5347  0895                     	;# 
  5348  0896                     	;# 
  5349  0896                     	;# 
  5350  0896                     	;# 
  5351  089B                     	;# 
  5352  0911                     	;# 
  5353  0912                     	;# 
  5354  0913                     	;# 
  5355  0914                     	;# 
  5356  0915                     	;# 
  5357  0916                     	;# 
  5358  0918                     	;# 
  5359  0919                     	;# 
  5360  091A                     	;# 
  5361  091B                     	;# 
  5362  091C                     	;# 
  5363  091D                     	;# 
  5364  091E                     	;# 
  5365  091F                     	;# 
  5366  0E0F                     	;# 
  5367  0E10                     	;# 
  5368  0E11                     	;# 
  5369  0E12                     	;# 
  5370  0E13                     	;# 
  5371  0E14                     	;# 
  5372  0E15                     	;# 
  5373  0E16                     	;# 
  5374  0E17                     	;# 
  5375  0E18                     	;# 
  5376  0E19                     	;# 
  5377  0E1A                     	;# 
  5378  0E1B                     	;# 
  5379  0E1C                     	;# 
  5380  0E1D                     	;# 
  5381  0E1E                     	;# 
  5382  0E1F                     	;# 
  5383  0E20                     	;# 
  5384  0E21                     	;# 
  5385  0E22                     	;# 
  5386  0E24                     	;# 
  5387  0E25                     	;# 
  5388  0E28                     	;# 
  5389  0E29                     	;# 
  5390  0E2A                     	;# 
  5391  0E2B                     	;# 
  5392  0E2C                     	;# 
  5393  0E2D                     	;# 
  5394  0E2E                     	;# 
  5395  0E2F                     	;# 
  5396  0E90                     	;# 
  5397  0E91                     	;# 
  5398  0E92                     	;# 
  5399  0E94                     	;# 
  5400  0E95                     	;# 
  5401  0E9C                     	;# 
  5402  0E9D                     	;# 
  5403  0E9E                     	;# 
  5404  0E9F                     	;# 
  5405  0EA0                     	;# 
  5406  0EA1                     	;# 
  5407  0EA2                     	;# 
  5408  0EA3                     	;# 
  5409  0EA4                     	;# 
  5410  0EA5                     	;# 
  5411  0EA6                     	;# 
  5412  0EA7                     	;# 
  5413  0F0F                     	;# 
  5414  0F10                     	;# 
  5415  0F11                     	;# 
  5416  0F12                     	;# 
  5417  0F13                     	;# 
  5418  0F14                     	;# 
  5419  0F15                     	;# 
  5420  0F16                     	;# 
  5421  0F17                     	;# 
  5422  0F18                     	;# 
  5423  0F19                     	;# 
  5424  0F1A                     	;# 
  5425  0F1B                     	;# 
  5426  0F1C                     	;# 
  5427  0F1D                     	;# 
  5428  0F1E                     	;# 
  5429  0F1F                     	;# 
  5430  0F20                     	;# 
  5431  0F21                     	;# 
  5432  0F22                     	;# 
  5433  0F23                     	;# 
  5434  0F24                     	;# 
  5435  0F25                     	;# 
  5436  0F26                     	;# 
  5437  0F27                     	;# 
  5438  0F28                     	;# 
  5439  0F29                     	;# 
  5440  0F2A                     	;# 
  5441  0F2B                     	;# 
  5442  0F2C                     	;# 
  5443  0F2D                     	;# 
  5444  0F2E                     	;# 
  5445  0F2F                     	;# 
  5446  0F30                     	;# 
  5447  0F31                     	;# 
  5448  0F32                     	;# 
  5449  0F33                     	;# 
  5450  0F34                     	;# 
  5451  0F35                     	;# 
  5452  0F36                     	;# 
  5453  0F37                     	;# 
  5454  0FE4                     	;# 
  5455  0FE5                     	;# 
  5456  0FE6                     	;# 
  5457  0FE7                     	;# 
  5458  0FE8                     	;# 
  5459  0FE9                     	;# 
  5460  0FEA                     	;# 
  5461  0FEB                     	;# 
  5462  0FED                     	;# 
  5463  0FEE                     	;# 
  5464  0FEF                     	;# 
  5465  0000                     	;# 
  5466  0001                     	;# 
  5467  0002                     	;# 
  5468  0003                     	;# 
  5469  0004                     	;# 
  5470  0005                     	;# 
  5471  0006                     	;# 
  5472  0007                     	;# 
  5473  0008                     	;# 
  5474  0009                     	;# 
  5475  000A                     	;# 
  5476  000B                     	;# 
  5477  000C                     	;# 
  5478  000D                     	;# 
  5479  000E                     	;# 
  5480  0010                     	;# 
  5481  0011                     	;# 
  5482  0012                     	;# 
  5483  0013                     	;# 
  5484  0014                     	;# 
  5485  0015                     	;# 
  5486  0015                     	;# 
  5487  0016                     	;# 
  5488  0016                     	;# 
  5489  0017                     	;# 
  5490  0018                     	;# 
  5491  0019                     	;# 
  5492  0019                     	;# 
  5493  001A                     	;# 
  5494  001B                     	;# 
  5495  001C                     	;# 
  5496  001D                     	;# 
  5497  001E                     	;# 
  5498  001F                     	;# 
  5499  008C                     	;# 
  5500  008D                     	;# 
  5501  008E                     	;# 
  5502  0090                     	;# 
  5503  0091                     	;# 
  5504  0092                     	;# 
  5505  0093                     	;# 
  5506  0094                     	;# 
  5507  0097                     	;# 
  5508  009B                     	;# 
  5509  009B                     	;# 
  5510  009C                     	;# 
  5511  009D                     	;# 
  5512  009E                     	;# 
  5513  009F                     	;# 
  5514  010C                     	;# 
  5515  010D                     	;# 
  5516  010E                     	;# 
  5517  0111                     	;# 
  5518  0112                     	;# 
  5519  0113                     	;# 
  5520  0114                     	;# 
  5521  0115                     	;# 
  5522  0116                     	;# 
  5523  0117                     	;# 
  5524  0118                     	;# 
  5525  0119                     	;# 
  5526  018C                     	;# 
  5527  018D                     	;# 
  5528  018E                     	;# 
  5529  0199                     	;# 
  5530  0199                     	;# 
  5531  0199                     	;# 
  5532  019A                     	;# 
  5533  019A                     	;# 
  5534  019A                     	;# 
  5535  019B                     	;# 
  5536  019B                     	;# 
  5537  019B                     	;# 
  5538  019B                     	;# 
  5539  019B                     	;# 
  5540  019C                     	;# 
  5541  019C                     	;# 
  5542  019C                     	;# 
  5543  019D                     	;# 
  5544  019D                     	;# 
  5545  019D                     	;# 
  5546  019E                     	;# 
  5547  019E                     	;# 
  5548  019E                     	;# 
  5549  019F                     	;# 
  5550  019F                     	;# 
  5551  019F                     	;# 
  5552  019F                     	;# 
  5553  019F                     	;# 
  5554  020C                     	;# 
  5555  020D                     	;# 
  5556  020E                     	;# 
  5557  0211                     	;# 
  5558  0211                     	;# 
  5559  0212                     	;# 
  5560  0212                     	;# 
  5561  0213                     	;# 
  5562  0213                     	;# 
  5563  0214                     	;# 
  5564  0214                     	;# 
  5565  0215                     	;# 
  5566  0215                     	;# 
  5567  0215                     	;# 
  5568  0215                     	;# 
  5569  0216                     	;# 
  5570  0216                     	;# 
  5571  0217                     	;# 
  5572  0217                     	;# 
  5573  0219                     	;# 
  5574  021A                     	;# 
  5575  021B                     	;# 
  5576  021C                     	;# 
  5577  021D                     	;# 
  5578  021D                     	;# 
  5579  021E                     	;# 
  5580  021F                     	;# 
  5581  028C                     	;# 
  5582  028D                     	;# 
  5583  028E                     	;# 
  5584  0291                     	;# 
  5585  0291                     	;# 
  5586  0292                     	;# 
  5587  0293                     	;# 
  5588  0294                     	;# 
  5589  0295                     	;# 
  5590  0295                     	;# 
  5591  0296                     	;# 
  5592  0297                     	;# 
  5593  0298                     	;# 
  5594  029F                     	;# 
  5595  030C                     	;# 
  5596  030D                     	;# 
  5597  030E                     	;# 
  5598  0311                     	;# 
  5599  0311                     	;# 
  5600  0312                     	;# 
  5601  0313                     	;# 
  5602  0314                     	;# 
  5603  0315                     	;# 
  5604  0315                     	;# 
  5605  0316                     	;# 
  5606  0317                     	;# 
  5607  0318                     	;# 
  5608  038C                     	;# 
  5609  038D                     	;# 
  5610  038E                     	;# 
  5611  0391                     	;# 
  5612  0392                     	;# 
  5613  0393                     	;# 
  5614  0394                     	;# 
  5615  0395                     	;# 
  5616  0396                     	;# 
  5617  0397                     	;# 
  5618  0398                     	;# 
  5619  0399                     	;# 
  5620  039A                     	;# 
  5621  039C                     	;# 
  5622  039D                     	;# 
  5623  039E                     	;# 
  5624  039F                     	;# 
  5625  0411                     	;# 
  5626  0411                     	;# 
  5627  0412                     	;# 
  5628  0413                     	;# 
  5629  0414                     	;# 
  5630  0415                     	;# 
  5631  0416                     	;# 
  5632  0417                     	;# 
  5633  0418                     	;# 
  5634  0418                     	;# 
  5635  0419                     	;# 
  5636  041A                     	;# 
  5637  041B                     	;# 
  5638  041C                     	;# 
  5639  041D                     	;# 
  5640  041E                     	;# 
  5641  041F                     	;# 
  5642  0498                     	;# 
  5643  0498                     	;# 
  5644  0499                     	;# 
  5645  049A                     	;# 
  5646  049B                     	;# 
  5647  049B                     	;# 
  5648  049C                     	;# 
  5649  049D                     	;# 
  5650  049E                     	;# 
  5651  049F                     	;# 
  5652  0617                     	;# 
  5653  0618                     	;# 
  5654  0619                     	;# 
  5655  0619                     	;# 
  5656  061A                     	;# 
  5657  061B                     	;# 
  5658  061C                     	;# 
  5659  061C                     	;# 
  5660  061F                     	;# 
  5661  0691                     	;# 
  5662  0692                     	;# 
  5663  0693                     	;# 
  5664  0694                     	;# 
  5665  0695                     	;# 
  5666  0696                     	;# 
  5667  0697                     	;# 
  5668  0698                     	;# 
  5669  0699                     	;# 
  5670  0711                     	;# 
  5671  0712                     	;# 
  5672  0713                     	;# 
  5673  0714                     	;# 
  5674  0715                     	;# 
  5675  0716                     	;# 
  5676  0717                     	;# 
  5677  0718                     	;# 
  5678  0719                     	;# 
  5679  0891                     	;# 
  5680  0891                     	;# 
  5681  0891                     	;# 
  5682  0891                     	;# 
  5683  0891                     	;# 
  5684  0891                     	;# 
  5685  0892                     	;# 
  5686  0892                     	;# 
  5687  0892                     	;# 
  5688  0893                     	;# 
  5689  0893                     	;# 
  5690  0893                     	;# 
  5691  0893                     	;# 
  5692  0893                     	;# 
  5693  0893                     	;# 
  5694  0894                     	;# 
  5695  0894                     	;# 
  5696  0894                     	;# 
  5697  0895                     	;# 
  5698  0895                     	;# 
  5699  0895                     	;# 
  5700  0896                     	;# 
  5701  0896                     	;# 
  5702  0896                     	;# 
  5703  089B                     	;# 
  5704  0911                     	;# 
  5705  0912                     	;# 
  5706  0913                     	;# 
  5707  0914                     	;# 
  5708  0915                     	;# 
  5709  0916                     	;# 
  5710  0918                     	;# 
  5711  0919                     	;# 
  5712  091A                     	;# 
  5713  091B                     	;# 
  5714  091C                     	;# 
  5715  091D                     	;# 
  5716  091E                     	;# 
  5717  091F                     	;# 
  5718  0E0F                     	;# 
  5719  0E10                     	;# 
  5720  0E11                     	;# 
  5721  0E12                     	;# 
  5722  0E13                     	;# 
  5723  0E14                     	;# 
  5724  0E15                     	;# 
  5725  0E16                     	;# 
  5726  0E17                     	;# 
  5727  0E18                     	;# 
  5728  0E19                     	;# 
  5729  0E1A                     	;# 
  5730  0E1B                     	;# 
  5731  0E1C                     	;# 
  5732  0E1D                     	;# 
  5733  0E1E                     	;# 
  5734  0E1F                     	;# 
  5735  0E20                     	;# 
  5736  0E21                     	;# 
  5737  0E22                     	;# 
  5738  0E24                     	;# 
  5739  0E25                     	;# 
  5740  0E28                     	;# 
  5741  0E29                     	;# 
  5742  0E2A                     	;# 
  5743  0E2B                     	;# 
  5744  0E2C                     	;# 
  5745  0E2D                     	;# 
  5746  0E2E                     	;# 
  5747  0E2F                     	;# 
  5748  0E90                     	;# 
  5749  0E91                     	;# 
  5750  0E92                     	;# 
  5751  0E94                     	;# 
  5752  0E95                     	;# 
  5753  0E9C                     	;# 
  5754  0E9D                     	;# 
  5755  0E9E                     	;# 
  5756  0E9F                     	;# 
  5757  0EA0                     	;# 
  5758  0EA1                     	;# 
  5759  0EA2                     	;# 
  5760  0EA3                     	;# 
  5761  0EA4                     	;# 
  5762  0EA5                     	;# 
  5763  0EA6                     	;# 
  5764  0EA7                     	;# 
  5765  0F0F                     	;# 
  5766  0F10                     	;# 
  5767  0F11                     	;# 
  5768  0F12                     	;# 
  5769  0F13                     	;# 
  5770  0F14                     	;# 
  5771  0F15                     	;# 
  5772  0F16                     	;# 
  5773  0F17                     	;# 
  5774  0F18                     	;# 
  5775  0F19                     	;# 
  5776  0F1A                     	;# 
  5777  0F1B                     	;# 
  5778  0F1C                     	;# 
  5779  0F1D                     	;# 
  5780  0F1E                     	;# 
  5781  0F1F                     	;# 
  5782  0F20                     	;# 
  5783  0F21                     	;# 
  5784  0F22                     	;# 
  5785  0F23                     	;# 
  5786  0F24                     	;# 
  5787  0F25                     	;# 
  5788  0F26                     	;# 
  5789  0F27                     	;# 
  5790  0F28                     	;# 
  5791  0F29                     	;# 
  5792  0F2A                     	;# 
  5793  0F2B                     	;# 
  5794  0F2C                     	;# 
  5795  0F2D                     	;# 
  5796  0F2E                     	;# 
  5797  0F2F                     	;# 
  5798  0F30                     	;# 
  5799  0F31                     	;# 
  5800  0F32                     	;# 
  5801  0F33                     	;# 
  5802  0F34                     	;# 
  5803  0F35                     	;# 
  5804  0F36                     	;# 
  5805  0F37                     	;# 
  5806  0FE4                     	;# 
  5807  0FE5                     	;# 
  5808  0FE6                     	;# 
  5809  0FE7                     	;# 
  5810  0FE8                     	;# 
  5811  0FE9                     	;# 
  5812  0FEA                     	;# 
  5813  0FEB                     	;# 
  5814  0FED                     	;# 
  5815  0FEE                     	;# 
  5816  0FEF                     	;# 
  5817  0000                     	;# 
  5818  0001                     	;# 
  5819  0002                     	;# 
  5820  0003                     	;# 
  5821  0004                     	;# 
  5822  0005                     	;# 
  5823  0006                     	;# 
  5824  0007                     	;# 
  5825  0008                     	;# 
  5826  0009                     	;# 
  5827  000A                     	;# 
  5828  000B                     	;# 
  5829  000C                     	;# 
  5830  000D                     	;# 
  5831  000E                     	;# 
  5832  0010                     	;# 
  5833  0011                     	;# 
  5834  0012                     	;# 
  5835  0013                     	;# 
  5836  0014                     	;# 
  5837  0015                     	;# 
  5838  0015                     	;# 
  5839  0016                     	;# 
  5840  0016                     	;# 
  5841  0017                     	;# 
  5842  0018                     	;# 
  5843  0019                     	;# 
  5844  0019                     	;# 
  5845  001A                     	;# 
  5846  001B                     	;# 
  5847  001C                     	;# 
  5848  001D                     	;# 
  5849  001E                     	;# 
  5850  001F                     	;# 
  5851  008C                     	;# 
  5852  008D                     	;# 
  5853  008E                     	;# 
  5854  0090                     	;# 
  5855  0091                     	;# 
  5856  0092                     	;# 
  5857  0093                     	;# 
  5858  0094                     	;# 
  5859  0097                     	;# 
  5860  009B                     	;# 
  5861  009B                     	;# 
  5862  009C                     	;# 
  5863  009D                     	;# 
  5864  009E                     	;# 
  5865  009F                     	;# 
  5866  010C                     	;# 
  5867  010D                     	;# 
  5868  010E                     	;# 
  5869  0111                     	;# 
  5870  0112                     	;# 
  5871  0113                     	;# 
  5872  0114                     	;# 
  5873  0115                     	;# 
  5874  0116                     	;# 
  5875  0117                     	;# 
  5876  0118                     	;# 
  5877  0119                     	;# 
  5878  018C                     	;# 
  5879  018D                     	;# 
  5880  018E                     	;# 
  5881  0199                     	;# 
  5882  0199                     	;# 
  5883  0199                     	;# 
  5884  019A                     	;# 
  5885  019A                     	;# 
  5886  019A                     	;# 
  5887  019B                     	;# 
  5888  019B                     	;# 
  5889  019B                     	;# 
  5890  019B                     	;# 
  5891  019B                     	;# 
  5892  019C                     	;# 
  5893  019C                     	;# 
  5894  019C                     	;# 
  5895  019D                     	;# 
  5896  019D                     	;# 
  5897  019D                     	;# 
  5898  019E                     	;# 
  5899  019E                     	;# 
  5900  019E                     	;# 
  5901  019F                     	;# 
  5902  019F                     	;# 
  5903  019F                     	;# 
  5904  019F                     	;# 
  5905  019F                     	;# 
  5906  020C                     	;# 
  5907  020D                     	;# 
  5908  020E                     	;# 
  5909  0211                     	;# 
  5910  0211                     	;# 
  5911  0212                     	;# 
  5912  0212                     	;# 
  5913  0213                     	;# 
  5914  0213                     	;# 
  5915  0214                     	;# 
  5916  0214                     	;# 
  5917  0215                     	;# 
  5918  0215                     	;# 
  5919  0215                     	;# 
  5920  0215                     	;# 
  5921  0216                     	;# 
  5922  0216                     	;# 
  5923  0217                     	;# 
  5924  0217                     	;# 
  5925  0219                     	;# 
  5926  021A                     	;# 
  5927  021B                     	;# 
  5928  021C                     	;# 
  5929  021D                     	;# 
  5930  021D                     	;# 
  5931  021E                     	;# 
  5932  021F                     	;# 
  5933  028C                     	;# 
  5934  028D                     	;# 
  5935  028E                     	;# 
  5936  0291                     	;# 
  5937  0291                     	;# 
  5938  0292                     	;# 
  5939  0293                     	;# 
  5940  0294                     	;# 
  5941  0295                     	;# 
  5942  0295                     	;# 
  5943  0296                     	;# 
  5944  0297                     	;# 
  5945  0298                     	;# 
  5946  029F                     	;# 
  5947  030C                     	;# 
  5948  030D                     	;# 
  5949  030E                     	;# 
  5950  0311                     	;# 
  5951  0311                     	;# 
  5952  0312                     	;# 
  5953  0313                     	;# 
  5954  0314                     	;# 
  5955  0315                     	;# 
  5956  0315                     	;# 
  5957  0316                     	;# 
  5958  0317                     	;# 
  5959  0318                     	;# 
  5960  038C                     	;# 
  5961  038D                     	;# 
  5962  038E                     	;# 
  5963  0391                     	;# 
  5964  0392                     	;# 
  5965  0393                     	;# 
  5966  0394                     	;# 
  5967  0395                     	;# 
  5968  0396                     	;# 
  5969  0397                     	;# 
  5970  0398                     	;# 
  5971  0399                     	;# 
  5972  039A                     	;# 
  5973  039C                     	;# 
  5974  039D                     	;# 
  5975  039E                     	;# 
  5976  039F                     	;# 
  5977  0411                     	;# 
  5978  0411                     	;# 
  5979  0412                     	;# 
  5980  0413                     	;# 
  5981  0414                     	;# 
  5982  0415                     	;# 
  5983  0416                     	;# 
  5984  0417                     	;# 
  5985  0418                     	;# 
  5986  0418                     	;# 
  5987  0419                     	;# 
  5988  041A                     	;# 
  5989  041B                     	;# 
  5990  041C                     	;# 
  5991  041D                     	;# 
  5992  041E                     	;# 
  5993  041F                     	;# 
  5994  0498                     	;# 
  5995  0498                     	;# 
  5996  0499                     	;# 
  5997  049A                     	;# 
  5998  049B                     	;# 
  5999  049B                     	;# 
  6000  049C                     	;# 
  6001  049D                     	;# 
  6002  049E                     	;# 
  6003  049F                     	;# 
  6004  0617                     	;# 
  6005  0618                     	;# 
  6006  0619                     	;# 
  6007  0619                     	;# 
  6008  061A                     	;# 
  6009  061B                     	;# 
  6010  061C                     	;# 
  6011  061C                     	;# 
  6012  061F                     	;# 
  6013  0691                     	;# 
  6014  0692                     	;# 
  6015  0693                     	;# 
  6016  0694                     	;# 
  6017  0695                     	;# 
  6018  0696                     	;# 
  6019  0697                     	;# 
  6020  0698                     	;# 
  6021  0699                     	;# 
  6022  0711                     	;# 
  6023  0712                     	;# 
  6024  0713                     	;# 
  6025  0714                     	;# 
  6026  0715                     	;# 
  6027  0716                     	;# 
  6028  0717                     	;# 
  6029  0718                     	;# 
  6030  0719                     	;# 
  6031  0891                     	;# 
  6032  0891                     	;# 
  6033  0891                     	;# 
  6034  0891                     	;# 
  6035  0891                     	;# 
  6036  0891                     	;# 
  6037  0892                     	;# 
  6038  0892                     	;# 
  6039  0892                     	;# 
  6040  0893                     	;# 
  6041  0893                     	;# 
  6042  0893                     	;# 
  6043  0893                     	;# 
  6044  0893                     	;# 
  6045  0893                     	;# 
  6046  0894                     	;# 
  6047  0894                     	;# 
  6048  0894                     	;# 
  6049  0895                     	;# 
  6050  0895                     	;# 
  6051  0895                     	;# 
  6052  0896                     	;# 
  6053  0896                     	;# 
  6054  0896                     	;# 
  6055  089B                     	;# 
  6056  0911                     	;# 
  6057  0912                     	;# 
  6058  0913                     	;# 
  6059  0914                     	;# 
  6060  0915                     	;# 
  6061  0916                     	;# 
  6062  0918                     	;# 
  6063  0919                     	;# 
  6064  091A                     	;# 
  6065  091B                     	;# 
  6066  091C                     	;# 
  6067  091D                     	;# 
  6068  091E                     	;# 
  6069  091F                     	;# 
  6070  0E0F                     	;# 
  6071  0E10                     	;# 
  6072  0E11                     	;# 
  6073  0E12                     	;# 
  6074  0E13                     	;# 
  6075  0E14                     	;# 
  6076  0E15                     	;# 
  6077  0E16                     	;# 
  6078  0E17                     	;# 
  6079  0E18                     	;# 
  6080  0E19                     	;# 
  6081  0E1A                     	;# 
  6082  0E1B                     	;# 
  6083  0E1C                     	;# 
  6084  0E1D                     	;# 
  6085  0E1E                     	;# 
  6086  0E1F                     	;# 
  6087  0E20                     	;# 
  6088  0E21                     	;# 
  6089  0E22                     	;# 
  6090  0E24                     	;# 
  6091  0E25                     	;# 
  6092  0E28                     	;# 
  6093  0E29                     	;# 
  6094  0E2A                     	;# 
  6095  0E2B                     	;# 
  6096  0E2C                     	;# 
  6097  0E2D                     	;# 
  6098  0E2E                     	;# 
  6099  0E2F                     	;# 
  6100  0E90                     	;# 
  6101  0E91                     	;# 
  6102  0E92                     	;# 
  6103  0E94                     	;# 
  6104  0E95                     	;# 
  6105  0E9C                     	;# 
  6106  0E9D                     	;# 
  6107  0E9E                     	;# 
  6108  0E9F                     	;# 
  6109  0EA0                     	;# 
  6110  0EA1                     	;# 
  6111  0EA2                     	;# 
  6112  0EA3                     	;# 
  6113  0EA4                     	;# 
  6114  0EA5                     	;# 
  6115  0EA6                     	;# 
  6116  0EA7                     	;# 
  6117  0F0F                     	;# 
  6118  0F10                     	;# 
  6119  0F11                     	;# 
  6120  0F12                     	;# 
  6121  0F13                     	;# 
  6122  0F14                     	;# 
  6123  0F15                     	;# 
  6124  0F16                     	;# 
  6125  0F17                     	;# 
  6126  0F18                     	;# 
  6127  0F19                     	;# 
  6128  0F1A                     	;# 
  6129  0F1B                     	;# 
  6130  0F1C                     	;# 
  6131  0F1D                     	;# 
  6132  0F1E                     	;# 
  6133  0F1F                     	;# 
  6134  0F20                     	;# 
  6135  0F21                     	;# 
  6136  0F22                     	;# 
  6137  0F23                     	;# 
  6138  0F24                     	;# 
  6139  0F25                     	;# 
  6140  0F26                     	;# 
  6141  0F27                     	;# 
  6142  0F28                     	;# 
  6143  0F29                     	;# 
  6144  0F2A                     	;# 
  6145  0F2B                     	;# 
  6146  0F2C                     	;# 
  6147  0F2D                     	;# 
  6148  0F2E                     	;# 
  6149  0F2F                     	;# 
  6150  0F30                     	;# 
  6151  0F31                     	;# 
  6152  0F32                     	;# 
  6153  0F33                     	;# 
  6154  0F34                     	;# 
  6155  0F35                     	;# 
  6156  0F36                     	;# 
  6157  0F37                     	;# 
  6158  0FE4                     	;# 
  6159  0FE5                     	;# 
  6160  0FE6                     	;# 
  6161  0FE7                     	;# 
  6162  0FE8                     	;# 
  6163  0FE9                     	;# 
  6164  0FEA                     	;# 
  6165  0FEB                     	;# 
  6166  0FED                     	;# 
  6167  0FEE                     	;# 
  6168  0FEF                     	;# 
  6169  0000                     	;# 
  6170  0001                     	;# 
  6171  0002                     	;# 
  6172  0003                     	;# 
  6173  0004                     	;# 
  6174  0005                     	;# 
  6175  0006                     	;# 
  6176  0007                     	;# 
  6177  0008                     	;# 
  6178  0009                     	;# 
  6179  000A                     	;# 
  6180  000B                     	;# 
  6181  000C                     	;# 
  6182  000D                     	;# 
  6183  000E                     	;# 
  6184  0010                     	;# 
  6185  0011                     	;# 
  6186  0012                     	;# 
  6187  0013                     	;# 
  6188  0014                     	;# 
  6189  0015                     	;# 
  6190  0015                     	;# 
  6191  0016                     	;# 
  6192  0016                     	;# 
  6193  0017                     	;# 
  6194  0018                     	;# 
  6195  0019                     	;# 
  6196  0019                     	;# 
  6197  001A                     	;# 
  6198  001B                     	;# 
  6199  001C                     	;# 
  6200  001D                     	;# 
  6201  001E                     	;# 
  6202  001F                     	;# 
  6203  008C                     	;# 
  6204  008D                     	;# 
  6205  008E                     	;# 
  6206  0090                     	;# 
  6207  0091                     	;# 
  6208  0092                     	;# 
  6209  0093                     	;# 
  6210  0094                     	;# 
  6211  0097                     	;# 
  6212  009B                     	;# 
  6213  009B                     	;# 
  6214  009C                     	;# 
  6215  009D                     	;# 
  6216  009E                     	;# 
  6217  009F                     	;# 
  6218  010C                     	;# 
  6219  010D                     	;# 
  6220  010E                     	;# 
  6221  0111                     	;# 
  6222  0112                     	;# 
  6223  0113                     	;# 
  6224  0114                     	;# 
  6225  0115                     	;# 
  6226  0116                     	;# 
  6227  0117                     	;# 
  6228  0118                     	;# 
  6229  0119                     	;# 
  6230  018C                     	;# 
  6231  018D                     	;# 
  6232  018E                     	;# 
  6233  0199                     	;# 
  6234  0199                     	;# 
  6235  0199                     	;# 
  6236  019A                     	;# 
  6237  019A                     	;# 
  6238  019A                     	;# 
  6239  019B                     	;# 
  6240  019B                     	;# 
  6241  019B                     	;# 
  6242  019B                     	;# 
  6243  019B                     	;# 
  6244  019C                     	;# 
  6245  019C                     	;# 
  6246  019C                     	;# 
  6247  019D                     	;# 
  6248  019D                     	;# 
  6249  019D                     	;# 
  6250  019E                     	;# 
  6251  019E                     	;# 
  6252  019E                     	;# 
  6253  019F                     	;# 
  6254  019F                     	;# 
  6255  019F                     	;# 
  6256  019F                     	;# 
  6257  019F                     	;# 
  6258  020C                     	;# 
  6259  020D                     	;# 
  6260  020E                     	;# 
  6261  0211                     	;# 
  6262  0211                     	;# 
  6263  0212                     	;# 
  6264  0212                     	;# 
  6265  0213                     	;# 
  6266  0213                     	;# 
  6267  0214                     	;# 
  6268  0214                     	;# 
  6269  0215                     	;# 
  6270  0215                     	;# 
  6271  0215                     	;# 
  6272  0215                     	;# 
  6273  0216                     	;# 
  6274  0216                     	;# 
  6275  0217                     	;# 
  6276  0217                     	;# 
  6277  0219                     	;# 
  6278  021A                     	;# 
  6279  021B                     	;# 
  6280  021C                     	;# 
  6281  021D                     	;# 
  6282  021D                     	;# 
  6283  021E                     	;# 
  6284  021F                     	;# 
  6285  028C                     	;# 
  6286  028D                     	;# 
  6287  028E                     	;# 
  6288  0291                     	;# 
  6289  0291                     	;# 
  6290  0292                     	;# 
  6291  0293                     	;# 
  6292  0294                     	;# 
  6293  0295                     	;# 
  6294  0295                     	;# 
  6295  0296                     	;# 
  6296  0297                     	;# 
  6297  0298                     	;# 
  6298  029F                     	;# 
  6299  030C                     	;# 
  6300  030D                     	;# 
  6301  030E                     	;# 
  6302  0311                     	;# 
  6303  0311                     	;# 
  6304  0312                     	;# 
  6305  0313                     	;# 
  6306  0314                     	;# 
  6307  0315                     	;# 
  6308  0315                     	;# 
  6309  0316                     	;# 
  6310  0317                     	;# 
  6311  0318                     	;# 
  6312  038C                     	;# 
  6313  038D                     	;# 
  6314  038E                     	;# 
  6315  0391                     	;# 
  6316  0392                     	;# 
  6317  0393                     	;# 
  6318  0394                     	;# 
  6319  0395                     	;# 
  6320  0396                     	;# 
  6321  0397                     	;# 
  6322  0398                     	;# 
  6323  0399                     	;# 
  6324  039A                     	;# 
  6325  039C                     	;# 
  6326  039D                     	;# 
  6327  039E                     	;# 
  6328  039F                     	;# 
  6329  0411                     	;# 
  6330  0411                     	;# 
  6331  0412                     	;# 
  6332  0413                     	;# 
  6333  0414                     	;# 
  6334  0415                     	;# 
  6335  0416                     	;# 
  6336  0417                     	;# 
  6337  0418                     	;# 
  6338  0418                     	;# 
  6339  0419                     	;# 
  6340  041A                     	;# 
  6341  041B                     	;# 
  6342  041C                     	;# 
  6343  041D                     	;# 
  6344  041E                     	;# 
  6345  041F                     	;# 
  6346  0498                     	;# 
  6347  0498                     	;# 
  6348  0499                     	;# 
  6349  049A                     	;# 
  6350  049B                     	;# 
  6351  049B                     	;# 
  6352  049C                     	;# 
  6353  049D                     	;# 
  6354  049E                     	;# 
  6355  049F                     	;# 
  6356  0617                     	;# 
  6357  0618                     	;# 
  6358  0619                     	;# 
  6359  0619                     	;# 
  6360  061A                     	;# 
  6361  061B                     	;# 
  6362  061C                     	;# 
  6363  061C                     	;# 
  6364  061F                     	;# 
  6365  0691                     	;# 
  6366  0692                     	;# 
  6367  0693                     	;# 
  6368  0694                     	;# 
  6369  0695                     	;# 
  6370  0696                     	;# 
  6371  0697                     	;# 
  6372  0698                     	;# 
  6373  0699                     	;# 
  6374  0711                     	;# 
  6375  0712                     	;# 
  6376  0713                     	;# 
  6377  0714                     	;# 
  6378  0715                     	;# 
  6379  0716                     	;# 
  6380  0717                     	;# 
  6381  0718                     	;# 
  6382  0719                     	;# 
  6383  0891                     	;# 
  6384  0891                     	;# 
  6385  0891                     	;# 
  6386  0891                     	;# 
  6387  0891                     	;# 
  6388  0891                     	;# 
  6389  0892                     	;# 
  6390  0892                     	;# 
  6391  0892                     	;# 
  6392  0893                     	;# 
  6393  0893                     	;# 
  6394  0893                     	;# 
  6395  0893                     	;# 
  6396  0893                     	;# 
  6397  0893                     	;# 
  6398  0894                     	;# 
  6399  0894                     	;# 
  6400  0894                     	;# 
  6401  0895                     	;# 
  6402  0895                     	;# 
  6403  0895                     	;# 
  6404  0896                     	;# 
  6405  0896                     	;# 
  6406  0896                     	;# 
  6407  089B                     	;# 
  6408  0911                     	;# 
  6409  0912                     	;# 
  6410  0913                     	;# 
  6411  0914                     	;# 
  6412  0915                     	;# 
  6413  0916                     	;# 
  6414  0918                     	;# 
  6415  0919                     	;# 
  6416  091A                     	;# 
  6417  091B                     	;# 
  6418  091C                     	;# 
  6419  091D                     	;# 
  6420  091E                     	;# 
  6421  091F                     	;# 
  6422  0E0F                     	;# 
  6423  0E10                     	;# 
  6424  0E11                     	;# 
  6425  0E12                     	;# 
  6426  0E13                     	;# 
  6427  0E14                     	;# 
  6428  0E15                     	;# 
  6429  0E16                     	;# 
  6430  0E17                     	;# 
  6431  0E18                     	;# 
  6432  0E19                     	;# 
  6433  0E1A                     	;# 
  6434  0E1B                     	;# 
  6435  0E1C                     	;# 
  6436  0E1D                     	;# 
  6437  0E1E                     	;# 
  6438  0E1F                     	;# 
  6439  0E20                     	;# 
  6440  0E21                     	;# 
  6441  0E22                     	;# 
  6442  0E24                     	;# 
  6443  0E25                     	;# 
  6444  0E28                     	;# 
  6445  0E29                     	;# 
  6446  0E2A                     	;# 
  6447  0E2B                     	;# 
  6448  0E2C                     	;# 
  6449  0E2D                     	;# 
  6450  0E2E                     	;# 
  6451  0E2F                     	;# 
  6452  0E90                     	;# 
  6453  0E91                     	;# 
  6454  0E92                     	;# 
  6455  0E94                     	;# 
  6456  0E95                     	;# 
  6457  0E9C                     	;# 
  6458  0E9D                     	;# 
  6459  0E9E                     	;# 
  6460  0E9F                     	;# 
  6461  0EA0                     	;# 
  6462  0EA1                     	;# 
  6463  0EA2                     	;# 
  6464  0EA3                     	;# 
  6465  0EA4                     	;# 
  6466  0EA5                     	;# 
  6467  0EA6                     	;# 
  6468  0EA7                     	;# 
  6469  0F0F                     	;# 
  6470  0F10                     	;# 
  6471  0F11                     	;# 
  6472  0F12                     	;# 
  6473  0F13                     	;# 
  6474  0F14                     	;# 
  6475  0F15                     	;# 
  6476  0F16                     	;# 
  6477  0F17                     	;# 
  6478  0F18                     	;# 
  6479  0F19                     	;# 
  6480  0F1A                     	;# 
  6481  0F1B                     	;# 
  6482  0F1C                     	;# 
  6483  0F1D                     	;# 
  6484  0F1E                     	;# 
  6485  0F1F                     	;# 
  6486  0F20                     	;# 
  6487  0F21                     	;# 
  6488  0F22                     	;# 
  6489  0F23                     	;# 
  6490  0F24                     	;# 
  6491  0F25                     	;# 
  6492  0F26                     	;# 
  6493  0F27                     	;# 
  6494  0F28                     	;# 
  6495  0F29                     	;# 
  6496  0F2A                     	;# 
  6497  0F2B                     	;# 
  6498  0F2C                     	;# 
  6499  0F2D                     	;# 
  6500  0F2E                     	;# 
  6501  0F2F                     	;# 
  6502  0F30                     	;# 
  6503  0F31                     	;# 
  6504  0F32                     	;# 
  6505  0F33                     	;# 
  6506  0F34                     	;# 
  6507  0F35                     	;# 
  6508  0F36                     	;# 
  6509  0F37                     	;# 
  6510  0FE4                     	;# 
  6511  0FE5                     	;# 
  6512  0FE6                     	;# 
  6513  0FE7                     	;# 
  6514  0FE8                     	;# 
  6515  0FE9                     	;# 
  6516  0FEA                     	;# 
  6517  0FEB                     	;# 
  6518  0FED                     	;# 
  6519  0FEE                     	;# 
  6520  0FEF                     	;# 
  6521  0000                     	;# 
  6522  0001                     	;# 
  6523  0002                     	;# 
  6524  0003                     	;# 
  6525  0004                     	;# 
  6526  0005                     	;# 
  6527  0006                     	;# 
  6528  0007                     	;# 
  6529  0008                     	;# 
  6530  0009                     	;# 
  6531  000A                     	;# 
  6532  000B                     	;# 
  6533  000C                     	;# 
  6534  000D                     	;# 
  6535  000E                     	;# 
  6536  0010                     	;# 
  6537  0011                     	;# 
  6538  0012                     	;# 
  6539  0013                     	;# 
  6540  0014                     	;# 
  6541  0015                     	;# 
  6542  0015                     	;# 
  6543  0016                     	;# 
  6544  0016                     	;# 
  6545  0017                     	;# 
  6546  0018                     	;# 
  6547  0019                     	;# 
  6548  0019                     	;# 
  6549  001A                     	;# 
  6550  001B                     	;# 
  6551  001C                     	;# 
  6552  001D                     	;# 
  6553  001E                     	;# 
  6554  001F                     	;# 
  6555  008C                     	;# 
  6556  008D                     	;# 
  6557  008E                     	;# 
  6558  0090                     	;# 
  6559  0091                     	;# 
  6560  0092                     	;# 
  6561  0093                     	;# 
  6562  0094                     	;# 
  6563  0097                     	;# 
  6564  009B                     	;# 
  6565  009B                     	;# 
  6566  009C                     	;# 
  6567  009D                     	;# 
  6568  009E                     	;# 
  6569  009F                     	;# 
  6570  010C                     	;# 
  6571  010D                     	;# 
  6572  010E                     	;# 
  6573  0111                     	;# 
  6574  0112                     	;# 
  6575  0113                     	;# 
  6576  0114                     	;# 
  6577  0115                     	;# 
  6578  0116                     	;# 
  6579  0117                     	;# 
  6580  0118                     	;# 
  6581  0119                     	;# 
  6582  018C                     	;# 
  6583  018D                     	;# 
  6584  018E                     	;# 
  6585  0199                     	;# 
  6586  0199                     	;# 
  6587  0199                     	;# 
  6588  019A                     	;# 
  6589  019A                     	;# 
  6590  019A                     	;# 
  6591  019B                     	;# 
  6592  019B                     	;# 
  6593  019B                     	;# 
  6594  019B                     	;# 
  6595  019B                     	;# 
  6596  019C                     	;# 
  6597  019C                     	;# 
  6598  019C                     	;# 
  6599  019D                     	;# 
  6600  019D                     	;# 
  6601  019D                     	;# 
  6602  019E                     	;# 
  6603  019E                     	;# 
  6604  019E                     	;# 
  6605  019F                     	;# 
  6606  019F                     	;# 
  6607  019F                     	;# 
  6608  019F                     	;# 
  6609  019F                     	;# 
  6610  020C                     	;# 
  6611  020D                     	;# 
  6612  020E                     	;# 
  6613  0211                     	;# 
  6614  0211                     	;# 
  6615  0212                     	;# 
  6616  0212                     	;# 
  6617  0213                     	;# 
  6618  0213                     	;# 
  6619  0214                     	;# 
  6620  0214                     	;# 
  6621  0215                     	;# 
  6622  0215                     	;# 
  6623  0215                     	;# 
  6624  0215                     	;# 
  6625  0216                     	;# 
  6626  0216                     	;# 
  6627  0217                     	;# 
  6628  0217                     	;# 
  6629  0219                     	;# 
  6630  021A                     	;# 
  6631  021B                     	;# 
  6632  021C                     	;# 
  6633  021D                     	;# 
  6634  021D                     	;# 
  6635  021E                     	;# 
  6636  021F                     	;# 
  6637  028C                     	;# 
  6638  028D                     	;# 
  6639  028E                     	;# 
  6640  0291                     	;# 
  6641  0291                     	;# 
  6642  0292                     	;# 
  6643  0293                     	;# 
  6644  0294                     	;# 
  6645  0295                     	;# 
  6646  0295                     	;# 
  6647  0296                     	;# 
  6648  0297                     	;# 
  6649  0298                     	;# 
  6650  029F                     	;# 
  6651  030C                     	;# 
  6652  030D                     	;# 
  6653  030E                     	;# 
  6654  0311                     	;# 
  6655  0311                     	;# 
  6656  0312                     	;# 
  6657  0313                     	;# 
  6658  0314                     	;# 
  6659  0315                     	;# 
  6660  0315                     	;# 
  6661  0316                     	;# 
  6662  0317                     	;# 
  6663  0318                     	;# 
  6664  038C                     	;# 
  6665  038D                     	;# 
  6666  038E                     	;# 
  6667  0391                     	;# 
  6668  0392                     	;# 
  6669  0393                     	;# 
  6670  0394                     	;# 
  6671  0395                     	;# 
  6672  0396                     	;# 
  6673  0397                     	;# 
  6674  0398                     	;# 
  6675  0399                     	;# 
  6676  039A                     	;# 
  6677  039C                     	;# 
  6678  039D                     	;# 
  6679  039E                     	;# 
  6680  039F                     	;# 
  6681  0411                     	;# 
  6682  0411                     	;# 
  6683  0412                     	;# 
  6684  0413                     	;# 
  6685  0414                     	;# 
  6686  0415                     	;# 
  6687  0416                     	;# 
  6688  0417                     	;# 
  6689  0418                     	;# 
  6690  0418                     	;# 
  6691  0419                     	;# 
  6692  041A                     	;# 
  6693  041B                     	;# 
  6694  041C                     	;# 
  6695  041D                     	;# 
  6696  041E                     	;# 
  6697  041F                     	;# 
  6698  0498                     	;# 
  6699  0498                     	;# 
  6700  0499                     	;# 
  6701  049A                     	;# 
  6702  049B                     	;# 
  6703  049B                     	;# 
  6704  049C                     	;# 
  6705  049D                     	;# 
  6706  049E                     	;# 
  6707  049F                     	;# 
  6708  0617                     	;# 
  6709  0618                     	;# 
  6710  0619                     	;# 
  6711  0619                     	;# 
  6712  061A                     	;# 
  6713  061B                     	;# 
  6714  061C                     	;# 
  6715  061C                     	;# 
  6716  061F                     	;# 
  6717  0691                     	;# 
  6718  0692                     	;# 
  6719  0693                     	;# 
  6720  0694                     	;# 
  6721  0695                     	;# 
  6722  0696                     	;# 
  6723  0697                     	;# 
  6724  0698                     	;# 
  6725  0699                     	;# 
  6726  0711                     	;# 
  6727  0712                     	;# 
  6728  0713                     	;# 
  6729  0714                     	;# 
  6730  0715                     	;# 
  6731  0716                     	;# 
  6732  0717                     	;# 
  6733  0718                     	;# 
  6734  0719                     	;# 
  6735  0891                     	;# 
  6736  0891                     	;# 
  6737  0891                     	;# 
  6738  0891                     	;# 
  6739  0891                     	;# 
  6740  0891                     	;# 
  6741  0892                     	;# 
  6742  0892                     	;# 
  6743  0892                     	;# 
  6744  0893                     	;# 
  6745  0893                     	;# 
  6746  0893                     	;# 
  6747  0893                     	;# 
  6748  0893                     	;# 
  6749  0893                     	;# 
  6750  0894                     	;# 
  6751  0894                     	;# 
  6752  0894                     	;# 
  6753  0895                     	;# 
  6754  0895                     	;# 
  6755  0895                     	;# 
  6756  0896                     	;# 
  6757  0896                     	;# 
  6758  0896                     	;# 
  6759  089B                     	;# 
  6760  0911                     	;# 
  6761  0912                     	;# 
  6762  0913                     	;# 
  6763  0914                     	;# 
  6764  0915                     	;# 
  6765  0916                     	;# 
  6766  0918                     	;# 
  6767  0919                     	;# 
  6768  091A                     	;# 
  6769  091B                     	;# 
  6770  091C                     	;# 
  6771  091D                     	;# 
  6772  091E                     	;# 
  6773  091F                     	;# 
  6774  0E0F                     	;# 
  6775  0E10                     	;# 
  6776  0E11                     	;# 
  6777  0E12                     	;# 
  6778  0E13                     	;# 
  6779  0E14                     	;# 
  6780  0E15                     	;# 
  6781  0E16                     	;# 
  6782  0E17                     	;# 
  6783  0E18                     	;# 
  6784  0E19                     	;# 
  6785  0E1A                     	;# 
  6786  0E1B                     	;# 
  6787  0E1C                     	;# 
  6788  0E1D                     	;# 
  6789  0E1E                     	;# 
  6790  0E1F                     	;# 
  6791  0E20                     	;# 
  6792  0E21                     	;# 
  6793  0E22                     	;# 
  6794  0E24                     	;# 
  6795  0E25                     	;# 
  6796  0E28                     	;# 
  6797  0E29                     	;# 
  6798  0E2A                     	;# 
  6799  0E2B                     	;# 
  6800  0E2C                     	;# 
  6801  0E2D                     	;# 
  6802  0E2E                     	;# 
  6803  0E2F                     	;# 
  6804  0E90                     	;# 
  6805  0E91                     	;# 
  6806  0E92                     	;# 
  6807  0E94                     	;# 
  6808  0E95                     	;# 
  6809  0E9C                     	;# 
  6810  0E9D                     	;# 
  6811  0E9E                     	;# 
  6812  0E9F                     	;# 
  6813  0EA0                     	;# 
  6814  0EA1                     	;# 
  6815  0EA2                     	;# 
  6816  0EA3                     	;# 
  6817  0EA4                     	;# 
  6818  0EA5                     	;# 
  6819  0EA6                     	;# 
  6820  0EA7                     	;# 
  6821  0F0F                     	;# 
  6822  0F10                     	;# 
  6823  0F11                     	;# 
  6824  0F12                     	;# 
  6825  0F13                     	;# 
  6826  0F14                     	;# 
  6827  0F15                     	;# 
  6828  0F16                     	;# 
  6829  0F17                     	;# 
  6830  0F18                     	;# 
  6831  0F19                     	;# 
  6832  0F1A                     	;# 
  6833  0F1B                     	;# 
  6834  0F1C                     	;# 
  6835  0F1D                     	;# 
  6836  0F1E                     	;# 
  6837  0F1F                     	;# 
  6838  0F20                     	;# 
  6839  0F21                     	;# 
  6840  0F22                     	;# 
  6841  0F23                     	;# 
  6842  0F24                     	;# 
  6843  0F25                     	;# 
  6844  0F26                     	;# 
  6845  0F27                     	;# 
  6846  0F28                     	;# 
  6847  0F29                     	;# 
  6848  0F2A                     	;# 
  6849  0F2B                     	;# 
  6850  0F2C                     	;# 
  6851  0F2D                     	;# 
  6852  0F2E                     	;# 
  6853  0F2F                     	;# 
  6854  0F30                     	;# 
  6855  0F31                     	;# 
  6856  0F32                     	;# 
  6857  0F33                     	;# 
  6858  0F34                     	;# 
  6859  0F35                     	;# 
  6860  0F36                     	;# 
  6861  0F37                     	;# 
  6862  0FE4                     	;# 
  6863  0FE5                     	;# 
  6864  0FE6                     	;# 
  6865  0FE7                     	;# 
  6866  0FE8                     	;# 
  6867  0FE9                     	;# 
  6868  0FEA                     	;# 
  6869  0FEB                     	;# 
  6870  0FED                     	;# 
  6871  0FEE                     	;# 
  6872  0FEF                     	;# 
  6873  0000                     	;# 
  6874  0001                     	;# 
  6875  0002                     	;# 
  6876  0003                     	;# 
  6877  0004                     	;# 
  6878  0005                     	;# 
  6879  0006                     	;# 
  6880  0007                     	;# 
  6881  0008                     	;# 
  6882  0009                     	;# 
  6883  000A                     	;# 
  6884  000B                     	;# 
  6885  000C                     	;# 
  6886  000D                     	;# 
  6887  000E                     	;# 
  6888  0010                     	;# 
  6889  0011                     	;# 
  6890  0012                     	;# 
  6891  0013                     	;# 
  6892  0014                     	;# 
  6893  0015                     	;# 
  6894  0015                     	;# 
  6895  0016                     	;# 
  6896  0016                     	;# 
  6897  0017                     	;# 
  6898  0018                     	;# 
  6899  0019                     	;# 
  6900  0019                     	;# 
  6901  001A                     	;# 
  6902  001B                     	;# 
  6903  001C                     	;# 
  6904  001D                     	;# 
  6905  001E                     	;# 
  6906  001F                     	;# 
  6907  008C                     	;# 
  6908  008D                     	;# 
  6909  008E                     	;# 
  6910  0090                     	;# 
  6911  0091                     	;# 
  6912  0092                     	;# 
  6913  0093                     	;# 
  6914  0094                     	;# 
  6915  0097                     	;# 
  6916  009B                     	;# 
  6917  009B                     	;# 
  6918  009C                     	;# 
  6919  009D                     	;# 
  6920  009E                     	;# 
  6921  009F                     	;# 
  6922  010C                     	;# 
  6923  010D                     	;# 
  6924  010E                     	;# 
  6925  0111                     	;# 
  6926  0112                     	;# 
  6927  0113                     	;# 
  6928  0114                     	;# 
  6929  0115                     	;# 
  6930  0116                     	;# 
  6931  0117                     	;# 
  6932  0118                     	;# 
  6933  0119                     	;# 
  6934  018C                     	;# 
  6935  018D                     	;# 
  6936  018E                     	;# 
  6937  0199                     	;# 
  6938  0199                     	;# 
  6939  0199                     	;# 
  6940  019A                     	;# 
  6941  019A                     	;# 
  6942  019A                     	;# 
  6943  019B                     	;# 
  6944  019B                     	;# 
  6945  019B                     	;# 
  6946  019B                     	;# 
  6947  019B                     	;# 
  6948  019C                     	;# 
  6949  019C                     	;# 
  6950  019C                     	;# 
  6951  019D                     	;# 
  6952  019D                     	;# 
  6953  019D                     	;# 
  6954  019E                     	;# 
  6955  019E                     	;# 
  6956  019E                     	;# 
  6957  019F                     	;# 
  6958  019F                     	;# 
  6959  019F                     	;# 
  6960  019F                     	;# 
  6961  019F                     	;# 
  6962  020C                     	;# 
  6963  020D                     	;# 
  6964  020E                     	;# 
  6965  0211                     	;# 
  6966  0211                     	;# 
  6967  0212                     	;# 
  6968  0212                     	;# 
  6969  0213                     	;# 
  6970  0213                     	;# 
  6971  0214                     	;# 
  6972  0214                     	;# 
  6973  0215                     	;# 
  6974  0215                     	;# 
  6975  0215                     	;# 
  6976  0215                     	;# 
  6977  0216                     	;# 
  6978  0216                     	;# 
  6979  0217                     	;# 
  6980  0217                     	;# 
  6981  0219                     	;# 
  6982  021A                     	;# 
  6983  021B                     	;# 
  6984  021C                     	;# 
  6985  021D                     	;# 
  6986  021D                     	;# 
  6987  021E                     	;# 
  6988  021F                     	;# 
  6989  028C                     	;# 
  6990  028D                     	;# 
  6991  028E                     	;# 
  6992  0291                     	;# 
  6993  0291                     	;# 
  6994  0292                     	;# 
  6995  0293                     	;# 
  6996  0294                     	;# 
  6997  0295                     	;# 
  6998  0295                     	;# 
  6999  0296                     	;# 
  7000  0297                     	;# 
  7001  0298                     	;# 
  7002  029F                     	;# 
  7003  030C                     	;# 
  7004  030D                     	;# 
  7005  030E                     	;# 
  7006  0311                     	;# 
  7007  0311                     	;# 
  7008  0312                     	;# 
  7009  0313                     	;# 
  7010  0314                     	;# 
  7011  0315                     	;# 
  7012  0315                     	;# 
  7013  0316                     	;# 
  7014  0317                     	;# 
  7015  0318                     	;# 
  7016  038C                     	;# 
  7017  038D                     	;# 
  7018  038E                     	;# 
  7019  0391                     	;# 
  7020  0392                     	;# 
  7021  0393                     	;# 
  7022  0394                     	;# 
  7023  0395                     	;# 
  7024  0396                     	;# 
  7025  0397                     	;# 
  7026  0398                     	;# 
  7027  0399                     	;# 
  7028  039A                     	;# 
  7029  039C                     	;# 
  7030  039D                     	;# 
  7031  039E                     	;# 
  7032  039F                     	;# 
  7033  0411                     	;# 
  7034  0411                     	;# 
  7035  0412                     	;# 
  7036  0413                     	;# 
  7037  0414                     	;# 
  7038  0415                     	;# 
  7039  0416                     	;# 
  7040  0417                     	;# 
  7041  0418                     	;# 
  7042  0418                     	;# 
  7043  0419                     	;# 
  7044  041A                     	;# 
  7045  041B                     	;# 
  7046  041C                     	;# 
  7047  041D                     	;# 
  7048  041E                     	;# 
  7049  041F                     	;# 
  7050  0498                     	;# 
  7051  0498                     	;# 
  7052  0499                     	;# 
  7053  049A                     	;# 
  7054  049B                     	;# 
  7055  049B                     	;# 
  7056  049C                     	;# 
  7057  049D                     	;# 
  7058  049E                     	;# 
  7059  049F                     	;# 
  7060  0617                     	;# 
  7061  0618                     	;# 
  7062  0619                     	;# 
  7063  0619                     	;# 
  7064  061A                     	;# 
  7065  061B                     	;# 
  7066  061C                     	;# 
  7067  061C                     	;# 
  7068  061F                     	;# 
  7069  0691                     	;# 
  7070  0692                     	;# 
  7071  0693                     	;# 
  7072  0694                     	;# 
  7073  0695                     	;# 
  7074  0696                     	;# 
  7075  0697                     	;# 
  7076  0698                     	;# 
  7077  0699                     	;# 
  7078  0711                     	;# 
  7079  0712                     	;# 
  7080  0713                     	;# 
  7081  0714                     	;# 
  7082  0715                     	;# 
  7083  0716                     	;# 
  7084  0717                     	;# 
  7085  0718                     	;# 
  7086  0719                     	;# 
  7087  0891                     	;# 
  7088  0891                     	;# 
  7089  0891                     	;# 
  7090  0891                     	;# 
  7091  0891                     	;# 
  7092  0891                     	;# 
  7093  0892                     	;# 
  7094  0892                     	;# 
  7095  0892                     	;# 
  7096  0893                     	;# 
  7097  0893                     	;# 
  7098  0893                     	;# 
  7099  0893                     	;# 
  7100  0893                     	;# 
  7101  0893                     	;# 
  7102  0894                     	;# 
  7103  0894                     	;# 
  7104  0894                     	;# 
  7105  0895                     	;# 
  7106  0895                     	;# 
  7107  0895                     	;# 
  7108  0896                     	;# 
  7109  0896                     	;# 
  7110  0896                     	;# 
  7111  089B                     	;# 
  7112  0911                     	;# 
  7113  0912                     	;# 
  7114  0913                     	;# 
  7115  0914                     	;# 
  7116  0915                     	;# 
  7117  0916                     	;# 
  7118  0918                     	;# 
  7119  0919                     	;# 
  7120  091A                     	;# 
  7121  091B                     	;# 
  7122  091C                     	;# 
  7123  091D                     	;# 
  7124  091E                     	;# 
  7125  091F                     	;# 
  7126  0E0F                     	;# 
  7127  0E10                     	;# 
  7128  0E11                     	;# 
  7129  0E12                     	;# 
  7130  0E13                     	;# 
  7131  0E14                     	;# 
  7132  0E15                     	;# 
  7133  0E16                     	;# 
  7134  0E17                     	;# 
  7135  0E18                     	;# 
  7136  0E19                     	;# 
  7137  0E1A                     	;# 
  7138  0E1B                     	;# 
  7139  0E1C                     	;# 
  7140  0E1D                     	;# 
  7141  0E1E                     	;# 
  7142  0E1F                     	;# 
  7143  0E20                     	;# 
  7144  0E21                     	;# 
  7145  0E22                     	;# 
  7146  0E24                     	;# 
  7147  0E25                     	;# 
  7148  0E28                     	;# 
  7149  0E29                     	;# 
  7150  0E2A                     	;# 
  7151  0E2B                     	;# 
  7152  0E2C                     	;# 
  7153  0E2D                     	;# 
  7154  0E2E                     	;# 
  7155  0E2F                     	;# 
  7156  0E90                     	;# 
  7157  0E91                     	;# 
  7158  0E92                     	;# 
  7159  0E94                     	;# 
  7160  0E95                     	;# 
  7161  0E9C                     	;# 
  7162  0E9D                     	;# 
  7163  0E9E                     	;# 
  7164  0E9F                     	;# 
  7165  0EA0                     	;# 
  7166  0EA1                     	;# 
  7167  0EA2                     	;# 
  7168  0EA3                     	;# 
  7169  0EA4                     	;# 
  7170  0EA5                     	;# 
  7171  0EA6                     	;# 
  7172  0EA7                     	;# 
  7173  0F0F                     	;# 
  7174  0F10                     	;# 
  7175  0F11                     	;# 
  7176  0F12                     	;# 
  7177  0F13                     	;# 
  7178  0F14                     	;# 
  7179  0F15                     	;# 
  7180  0F16                     	;# 
  7181  0F17                     	;# 
  7182  0F18                     	;# 
  7183  0F19                     	;# 
  7184  0F1A                     	;# 
  7185  0F1B                     	;# 
  7186  0F1C                     	;# 
  7187  0F1D                     	;# 
  7188  0F1E                     	;# 
  7189  0F1F                     	;# 
  7190  0F20                     	;# 
  7191  0F21                     	;# 
  7192  0F22                     	;# 
  7193  0F23                     	;# 
  7194  0F24                     	;# 
  7195  0F25                     	;# 
  7196  0F26                     	;# 
  7197  0F27                     	;# 
  7198  0F28                     	;# 
  7199  0F29                     	;# 
  7200  0F2A                     	;# 
  7201  0F2B                     	;# 
  7202  0F2C                     	;# 
  7203  0F2D                     	;# 
  7204  0F2E                     	;# 
  7205  0F2F                     	;# 
  7206  0F30                     	;# 
  7207  0F31                     	;# 
  7208  0F32                     	;# 
  7209  0F33                     	;# 
  7210  0F34                     	;# 
  7211  0F35                     	;# 
  7212  0F36                     	;# 
  7213  0F37                     	;# 
  7214  0FE4                     	;# 
  7215  0FE5                     	;# 
  7216  0FE6                     	;# 
  7217  0FE7                     	;# 
  7218  0FE8                     	;# 
  7219  0FE9                     	;# 
  7220  0FEA                     	;# 
  7221  0FEB                     	;# 
  7222  0FED                     	;# 
  7223  0FEE                     	;# 
  7224  0FEF                     	;# 
  7225  0000                     	;# 
  7226  0001                     	;# 
  7227  0002                     	;# 
  7228  0003                     	;# 
  7229  0004                     	;# 
  7230  0005                     	;# 
  7231  0006                     	;# 
  7232  0007                     	;# 
  7233  0008                     	;# 
  7234  0009                     	;# 
  7235  000A                     	;# 
  7236  000B                     	;# 
  7237  000C                     	;# 
  7238  000D                     	;# 
  7239  000E                     	;# 
  7240  0010                     	;# 
  7241  0011                     	;# 
  7242  0012                     	;# 
  7243  0013                     	;# 
  7244  0014                     	;# 
  7245  0015                     	;# 
  7246  0015                     	;# 
  7247  0016                     	;# 
  7248  0016                     	;# 
  7249  0017                     	;# 
  7250  0018                     	;# 
  7251  0019                     	;# 
  7252  0019                     	;# 
  7253  001A                     	;# 
  7254  001B                     	;# 
  7255  001C                     	;# 
  7256  001D                     	;# 
  7257  001E                     	;# 
  7258  001F                     	;# 
  7259  008C                     	;# 
  7260  008D                     	;# 
  7261  008E                     	;# 
  7262  0090                     	;# 
  7263  0091                     	;# 
  7264  0092                     	;# 
  7265  0093                     	;# 
  7266  0094                     	;# 
  7267  0097                     	;# 
  7268  009B                     	;# 
  7269  009B                     	;# 
  7270  009C                     	;# 
  7271  009D                     	;# 
  7272  009E                     	;# 
  7273  009F                     	;# 
  7274  010C                     	;# 
  7275  010D                     	;# 
  7276  010E                     	;# 
  7277  0111                     	;# 
  7278  0112                     	;# 
  7279  0113                     	;# 
  7280  0114                     	;# 
  7281  0115                     	;# 
  7282  0116                     	;# 
  7283  0117                     	;# 
  7284  0118                     	;# 
  7285  0119                     	;# 
  7286  018C                     	;# 
  7287  018D                     	;# 
  7288  018E                     	;# 
  7289  0199                     	;# 
  7290  0199                     	;# 
  7291  0199                     	;# 
  7292  019A                     	;# 
  7293  019A                     	;# 
  7294  019A                     	;# 
  7295  019B                     	;# 
  7296  019B                     	;# 
  7297  019B                     	;# 
  7298  019B                     	;# 
  7299  019B                     	;# 
  7300  019C                     	;# 
  7301  019C                     	;# 
  7302  019C                     	;# 
  7303  019D                     	;# 
  7304  019D                     	;# 
  7305  019D                     	;# 
  7306  019E                     	;# 
  7307  019E                     	;# 
  7308  019E                     	;# 
  7309  019F                     	;# 
  7310  019F                     	;# 
  7311  019F                     	;# 
  7312  019F                     	;# 
  7313  019F                     	;# 
  7314  020C                     	;# 
  7315  020D                     	;# 
  7316  020E                     	;# 
  7317  0211                     	;# 
  7318  0211                     	;# 
  7319  0212                     	;# 
  7320  0212                     	;# 
  7321  0213                     	;# 
  7322  0213                     	;# 
  7323  0214                     	;# 
  7324  0214                     	;# 
  7325  0215                     	;# 
  7326  0215                     	;# 
  7327  0215                     	;# 
  7328  0215                     	;# 
  7329  0216                     	;# 
  7330  0216                     	;# 
  7331  0217                     	;# 
  7332  0217                     	;# 
  7333  0219                     	;# 
  7334  021A                     	;# 
  7335  021B                     	;# 
  7336  021C                     	;# 
  7337  021D                     	;# 
  7338  021D                     	;# 
  7339  021E                     	;# 
  7340  021F                     	;# 
  7341  028C                     	;# 
  7342  028D                     	;# 
  7343  028E                     	;# 
  7344  0291                     	;# 
  7345  0291                     	;# 
  7346  0292                     	;# 
  7347  0293                     	;# 
  7348  0294                     	;# 
  7349  0295                     	;# 
  7350  0295                     	;# 
  7351  0296                     	;# 
  7352  0297                     	;# 
  7353  0298                     	;# 
  7354  029F                     	;# 
  7355  030C                     	;# 
  7356  030D                     	;# 
  7357  030E                     	;# 
  7358  0311                     	;# 
  7359  0311                     	;# 
  7360  0312                     	;# 
  7361  0313                     	;# 
  7362  0314                     	;# 
  7363  0315                     	;# 
  7364  0315                     	;# 
  7365  0316                     	;# 
  7366  0317                     	;# 
  7367  0318                     	;# 
  7368  038C                     	;# 
  7369  038D                     	;# 
  7370  038E                     	;# 
  7371  0391                     	;# 
  7372  0392                     	;# 
  7373  0393                     	;# 
  7374  0394                     	;# 
  7375  0395                     	;# 
  7376  0396                     	;# 
  7377  0397                     	;# 
  7378  0398                     	;# 
  7379  0399                     	;# 
  7380  039A                     	;# 
  7381  039C                     	;# 
  7382  039D                     	;# 
  7383  039E                     	;# 
  7384  039F                     	;# 
  7385  0411                     	;# 
  7386  0411                     	;# 
  7387  0412                     	;# 
  7388  0413                     	;# 
  7389  0414                     	;# 
  7390  0415                     	;# 
  7391  0416                     	;# 
  7392  0417                     	;# 
  7393  0418                     	;# 
  7394  0418                     	;# 
  7395  0419                     	;# 
  7396  041A                     	;# 
  7397  041B                     	;# 
  7398  041C                     	;# 
  7399  041D                     	;# 
  7400  041E                     	;# 
  7401  041F                     	;# 
  7402  0498                     	;# 
  7403  0498                     	;# 
  7404  0499                     	;# 
  7405  049A                     	;# 
  7406  049B                     	;# 
  7407  049B                     	;# 
  7408  049C                     	;# 
  7409  049D                     	;# 
  7410  049E                     	;# 
  7411  049F                     	;# 
  7412  0617                     	;# 
  7413  0618                     	;# 
  7414  0619                     	;# 
  7415  0619                     	;# 
  7416  061A                     	;# 
  7417  061B                     	;# 
  7418  061C                     	;# 
  7419  061C                     	;# 
  7420  061F                     	;# 
  7421  0691                     	;# 
  7422  0692                     	;# 
  7423  0693                     	;# 
  7424  0694                     	;# 
  7425  0695                     	;# 
  7426  0696                     	;# 
  7427  0697                     	;# 
  7428  0698                     	;# 
  7429  0699                     	;# 
  7430  0711                     	;# 
  7431  0712                     	;# 
  7432  0713                     	;# 
  7433  0714                     	;# 
  7434  0715                     	;# 
  7435  0716                     	;# 
  7436  0717                     	;# 
  7437  0718                     	;# 
  7438  0719                     	;# 
  7439  0891                     	;# 
  7440  0891                     	;# 
  7441  0891                     	;# 
  7442  0891                     	;# 
  7443  0891                     	;# 
  7444  0891                     	;# 
  7445  0892                     	;# 
  7446  0892                     	;# 
  7447  0892                     	;# 
  7448  0893                     	;# 
  7449  0893                     	;# 
  7450  0893                     	;# 
  7451  0893                     	;# 
  7452  0893                     	;# 
  7453  0893                     	;# 
  7454  0894                     	;# 
  7455  0894                     	;# 
  7456  0894                     	;# 
  7457  0895                     	;# 
  7458  0895                     	;# 
  7459  0895                     	;# 
  7460  0896                     	;# 
  7461  0896                     	;# 
  7462  0896                     	;# 
  7463  089B                     	;# 
  7464  0911                     	;# 
  7465  0912                     	;# 
  7466  0913                     	;# 
  7467  0914                     	;# 
  7468  0915                     	;# 
  7469  0916                     	;# 
  7470  0918                     	;# 
  7471  0919                     	;# 
  7472  091A                     	;# 
  7473  091B                     	;# 
  7474  091C                     	;# 
  7475  091D                     	;# 
  7476  091E                     	;# 
  7477  091F                     	;# 
  7478  0E0F                     	;# 
  7479  0E10                     	;# 
  7480  0E11                     	;# 
  7481  0E12                     	;# 
  7482  0E13                     	;# 
  7483  0E14                     	;# 
  7484  0E15                     	;# 
  7485  0E16                     	;# 
  7486  0E17                     	;# 
  7487  0E18                     	;# 
  7488  0E19                     	;# 
  7489  0E1A                     	;# 
  7490  0E1B                     	;# 
  7491  0E1C                     	;# 
  7492  0E1D                     	;# 
  7493  0E1E                     	;# 
  7494  0E1F                     	;# 
  7495  0E20                     	;# 
  7496  0E21                     	;# 
  7497  0E22                     	;# 
  7498  0E24                     	;# 
  7499  0E25                     	;# 
  7500  0E28                     	;# 
  7501  0E29                     	;# 
  7502  0E2A                     	;# 
  7503  0E2B                     	;# 
  7504  0E2C                     	;# 
  7505  0E2D                     	;# 
  7506  0E2E                     	;# 
  7507  0E2F                     	;# 
  7508  0E90                     	;# 
  7509  0E91                     	;# 
  7510  0E92                     	;# 
  7511  0E94                     	;# 
  7512  0E95                     	;# 
  7513  0E9C                     	;# 
  7514  0E9D                     	;# 
  7515  0E9E                     	;# 
  7516  0E9F                     	;# 
  7517  0EA0                     	;# 
  7518  0EA1                     	;# 
  7519  0EA2                     	;# 
  7520  0EA3                     	;# 
  7521  0EA4                     	;# 
  7522  0EA5                     	;# 
  7523  0EA6                     	;# 
  7524  0EA7                     	;# 
  7525  0F0F                     	;# 
  7526  0F10                     	;# 
  7527  0F11                     	;# 
  7528  0F12                     	;# 
  7529  0F13                     	;# 
  7530  0F14                     	;# 
  7531  0F15                     	;# 
  7532  0F16                     	;# 
  7533  0F17                     	;# 
  7534  0F18                     	;# 
  7535  0F19                     	;# 
  7536  0F1A                     	;# 
  7537  0F1B                     	;# 
  7538  0F1C                     	;# 
  7539  0F1D                     	;# 
  7540  0F1E                     	;# 
  7541  0F1F                     	;# 
  7542  0F20                     	;# 
  7543  0F21                     	;# 
  7544  0F22                     	;# 
  7545  0F23                     	;# 
  7546  0F24                     	;# 
  7547  0F25                     	;# 
  7548  0F26                     	;# 
  7549  0F27                     	;# 
  7550  0F28                     	;# 
  7551  0F29                     	;# 
  7552  0F2A                     	;# 
  7553  0F2B                     	;# 
  7554  0F2C                     	;# 
  7555  0F2D                     	;# 
  7556  0F2E                     	;# 
  7557  0F2F                     	;# 
  7558  0F30                     	;# 
  7559  0F31                     	;# 
  7560  0F32                     	;# 
  7561  0F33                     	;# 
  7562  0F34                     	;# 
  7563  0F35                     	;# 
  7564  0F36                     	;# 
  7565  0F37                     	;# 
  7566  0FE4                     	;# 
  7567  0FE5                     	;# 
  7568  0FE6                     	;# 
  7569  0FE7                     	;# 
  7570  0FE8                     	;# 
  7571  0FE9                     	;# 
  7572  0FEA                     	;# 
  7573  0FEB                     	;# 
  7574  0FED                     	;# 
  7575  0FEE                     	;# 
  7576  0FEF                     	;# 
  7577  0000                     	;# 
  7578  0001                     	;# 
  7579  0002                     	;# 
  7580  0003                     	;# 
  7581  0004                     	;# 
  7582  0005                     	;# 
  7583  0006                     	;# 
  7584  0007                     	;# 
  7585  0008                     	;# 
  7586  0009                     	;# 
  7587  000A                     	;# 
  7588  000B                     	;# 
  7589  000C                     	;# 
  7590  000D                     	;# 
  7591  000E                     	;# 
  7592  0010                     	;# 
  7593  0011                     	;# 
  7594  0012                     	;# 
  7595  0013                     	;# 
  7596  0014                     	;# 
  7597  0015                     	;# 
  7598  0015                     	;# 
  7599  0016                     	;# 
  7600  0016                     	;# 
  7601  0017                     	;# 
  7602  0018                     	;# 
  7603  0019                     	;# 
  7604  0019                     	;# 
  7605  001A                     	;# 
  7606  001B                     	;# 
  7607  001C                     	;# 
  7608  001D                     	;# 
  7609  001E                     	;# 
  7610  001F                     	;# 
  7611  008C                     	;# 
  7612  008D                     	;# 
  7613  008E                     	;# 
  7614  0090                     	;# 
  7615  0091                     	;# 
  7616  0092                     	;# 
  7617  0093                     	;# 
  7618  0094                     	;# 
  7619  0097                     	;# 
  7620  009B                     	;# 
  7621  009B                     	;# 
  7622  009C                     	;# 
  7623  009D                     	;# 
  7624  009E                     	;# 
  7625  009F                     	;# 
  7626  010C                     	;# 
  7627  010D                     	;# 
  7628  010E                     	;# 
  7629  0111                     	;# 
  7630  0112                     	;# 
  7631  0113                     	;# 
  7632  0114                     	;# 
  7633  0115                     	;# 
  7634  0116                     	;# 
  7635  0117                     	;# 
  7636  0118                     	;# 
  7637  0119                     	;# 
  7638  018C                     	;# 
  7639  018D                     	;# 
  7640  018E                     	;# 
  7641  0199                     	;# 
  7642  0199                     	;# 
  7643  0199                     	;# 
  7644  019A                     	;# 
  7645  019A                     	;# 
  7646  019A                     	;# 
  7647  019B                     	;# 
  7648  019B                     	;# 
  7649  019B                     	;# 
  7650  019B                     	;# 
  7651  019B                     	;# 
  7652  019C                     	;# 
  7653  019C                     	;# 
  7654  019C                     	;# 
  7655  019D                     	;# 
  7656  019D                     	;# 
  7657  019D                     	;# 
  7658  019E                     	;# 
  7659  019E                     	;# 
  7660  019E                     	;# 
  7661  019F                     	;# 
  7662  019F                     	;# 
  7663  019F                     	;# 
  7664  019F                     	;# 
  7665  019F                     	;# 
  7666  020C                     	;# 
  7667  020D                     	;# 
  7668  020E                     	;# 
  7669  0211                     	;# 
  7670  0211                     	;# 
  7671  0212                     	;# 
  7672  0212                     	;# 
  7673  0213                     	;# 
  7674  0213                     	;# 
  7675  0214                     	;# 
  7676  0214                     	;# 
  7677  0215                     	;# 
  7678  0215                     	;# 
  7679  0215                     	;# 
  7680  0215                     	;# 
  7681  0216                     	;# 
  7682  0216                     	;# 
  7683  0217                     	;# 
  7684  0217                     	;# 
  7685  0219                     	;# 
  7686  021A                     	;# 
  7687  021B                     	;# 
  7688  021C                     	;# 
  7689  021D                     	;# 
  7690  021D                     	;# 
  7691  021E                     	;# 
  7692  021F                     	;# 
  7693  028C                     	;# 
  7694  028D                     	;# 
  7695  028E                     	;# 
  7696  0291                     	;# 
  7697  0291                     	;# 
  7698  0292                     	;# 
  7699  0293                     	;# 
  7700  0294                     	;# 
  7701  0295                     	;# 
  7702  0295                     	;# 
  7703  0296                     	;# 
  7704  0297                     	;# 
  7705  0298                     	;# 
  7706  029F                     	;# 
  7707  030C                     	;# 
  7708  030D                     	;# 
  7709  030E                     	;# 
  7710  0311                     	;# 
  7711  0311                     	;# 
  7712  0312                     	;# 
  7713  0313                     	;# 
  7714  0314                     	;# 
  7715  0315                     	;# 
  7716  0315                     	;# 
  7717  0316                     	;# 
  7718  0317                     	;# 
  7719  0318                     	;# 
  7720  038C                     	;# 
  7721  038D                     	;# 
  7722  038E                     	;# 
  7723  0391                     	;# 
  7724  0392                     	;# 
  7725  0393                     	;# 
  7726  0394                     	;# 
  7727  0395                     	;# 
  7728  0396                     	;# 
  7729  0397                     	;# 
  7730  0398                     	;# 
  7731  0399                     	;# 
  7732  039A                     	;# 
  7733  039C                     	;# 
  7734  039D                     	;# 
  7735  039E                     	;# 
  7736  039F                     	;# 
  7737  0411                     	;# 
  7738  0411                     	;# 
  7739  0412                     	;# 
  7740  0413                     	;# 
  7741  0414                     	;# 
  7742  0415                     	;# 
  7743  0416                     	;# 
  7744  0417                     	;# 
  7745  0418                     	;# 
  7746  0418                     	;# 
  7747  0419                     	;# 
  7748  041A                     	;# 
  7749  041B                     	;# 
  7750  041C                     	;# 
  7751  041D                     	;# 
  7752  041E                     	;# 
  7753  041F                     	;# 
  7754  0498                     	;# 
  7755  0498                     	;# 
  7756  0499                     	;# 
  7757  049A                     	;# 
  7758  049B                     	;# 
  7759  049B                     	;# 
  7760  049C                     	;# 
  7761  049D                     	;# 
  7762  049E                     	;# 
  7763  049F                     	;# 
  7764  0617                     	;# 
  7765  0618                     	;# 
  7766  0619                     	;# 
  7767  0619                     	;# 
  7768  061A                     	;# 
  7769  061B                     	;# 
  7770  061C                     	;# 
  7771  061C                     	;# 
  7772  061F                     	;# 
  7773  0691                     	;# 
  7774  0692                     	;# 
  7775  0693                     	;# 
  7776  0694                     	;# 
  7777  0695                     	;# 
  7778  0696                     	;# 
  7779  0697                     	;# 
  7780  0698                     	;# 
  7781  0699                     	;# 
  7782  0711                     	;# 
  7783  0712                     	;# 
  7784  0713                     	;# 
  7785  0714                     	;# 
  7786  0715                     	;# 
  7787  0716                     	;# 
  7788  0717                     	;# 
  7789  0718                     	;# 
  7790  0719                     	;# 
  7791  0891                     	;# 
  7792  0891                     	;# 
  7793  0891                     	;# 
  7794  0891                     	;# 
  7795  0891                     	;# 
  7796  0891                     	;# 
  7797  0892                     	;# 
  7798  0892                     	;# 
  7799  0892                     	;# 
  7800  0893                     	;# 
  7801  0893                     	;# 
  7802  0893                     	;# 
  7803  0893                     	;# 
  7804  0893                     	;# 
  7805  0893                     	;# 
  7806  0894                     	;# 
  7807  0894                     	;# 
  7808  0894                     	;# 
  7809  0895                     	;# 
  7810  0895                     	;# 
  7811  0895                     	;# 
  7812  0896                     	;# 
  7813  0896                     	;# 
  7814  0896                     	;# 
  7815  089B                     	;# 
  7816  0911                     	;# 
  7817  0912                     	;# 
  7818  0913                     	;# 
  7819  0914                     	;# 
  7820  0915                     	;# 
  7821  0916                     	;# 
  7822  0918                     	;# 
  7823  0919                     	;# 
  7824  091A                     	;# 
  7825  091B                     	;# 
  7826  091C                     	;# 
  7827  091D                     	;# 
  7828  091E                     	;# 
  7829  091F                     	;# 
  7830  0E0F                     	;# 
  7831  0E10                     	;# 
  7832  0E11                     	;# 
  7833  0E12                     	;# 
  7834  0E13                     	;# 
  7835  0E14                     	;# 
  7836  0E15                     	;# 
  7837  0E16                     	;# 
  7838  0E17                     	;# 
  7839  0E18                     	;# 
  7840  0E19                     	;# 
  7841  0E1A                     	;# 
  7842  0E1B                     	;# 
  7843  0E1C                     	;# 
  7844  0E1D                     	;# 
  7845  0E1E                     	;# 
  7846  0E1F                     	;# 
  7847  0E20                     	;# 
  7848  0E21                     	;# 
  7849  0E22                     	;# 
  7850  0E24                     	;# 
  7851  0E25                     	;# 
  7852  0E28                     	;# 
  7853  0E29                     	;# 
  7854  0E2A                     	;# 
  7855  0E2B                     	;# 
  7856  0E2C                     	;# 
  7857  0E2D                     	;# 
  7858  0E2E                     	;# 
  7859  0E2F                     	;# 
  7860  0E90                     	;# 
  7861  0E91                     	;# 
  7862  0E92                     	;# 
  7863  0E94                     	;# 
  7864  0E95                     	;# 
  7865  0E9C                     	;# 
  7866  0E9D                     	;# 
  7867  0E9E                     	;# 
  7868  0E9F                     	;# 
  7869  0EA0                     	;# 
  7870  0EA1                     	;# 
  7871  0EA2                     	;# 
  7872  0EA3                     	;# 
  7873  0EA4                     	;# 
  7874  0EA5                     	;# 
  7875  0EA6                     	;# 
  7876  0EA7                     	;# 
  7877  0F0F                     	;# 
  7878  0F10                     	;# 
  7879  0F11                     	;# 
  7880  0F12                     	;# 
  7881  0F13                     	;# 
  7882  0F14                     	;# 
  7883  0F15                     	;# 
  7884  0F16                     	;# 
  7885  0F17                     	;# 
  7886  0F18                     	;# 
  7887  0F19                     	;# 
  7888  0F1A                     	;# 
  7889  0F1B                     	;# 
  7890  0F1C                     	;# 
  7891  0F1D                     	;# 
  7892  0F1E                     	;# 
  7893  0F1F                     	;# 
  7894  0F20                     	;# 
  7895  0F21                     	;# 
  7896  0F22                     	;# 
  7897  0F23                     	;# 
  7898  0F24                     	;# 
  7899  0F25                     	;# 
  7900  0F26                     	;# 
  7901  0F27                     	;# 
  7902  0F28                     	;# 
  7903  0F29                     	;# 
  7904  0F2A                     	;# 
  7905  0F2B                     	;# 
  7906  0F2C                     	;# 
  7907  0F2D                     	;# 
  7908  0F2E                     	;# 
  7909  0F2F                     	;# 
  7910  0F30                     	;# 
  7911  0F31                     	;# 
  7912  0F32                     	;# 
  7913  0F33                     	;# 
  7914  0F34                     	;# 
  7915  0F35                     	;# 
  7916  0F36                     	;# 
  7917  0F37                     	;# 
  7918  0FE4                     	;# 
  7919  0FE5                     	;# 
  7920  0FE6                     	;# 
  7921  0FE7                     	;# 
  7922  0FE8                     	;# 
  7923  0FE9                     	;# 
  7924  0FEA                     	;# 
  7925  0FEB                     	;# 
  7926  0FED                     	;# 
  7927  0FEE                     	;# 
  7928  0FEF                     	;# 
  7929  0000                     	;# 
  7930  0001                     	;# 
  7931  0002                     	;# 
  7932  0003                     	;# 
  7933  0004                     	;# 
  7934  0005                     	;# 
  7935  0006                     	;# 
  7936  0007                     	;# 
  7937  0008                     	;# 
  7938  0009                     	;# 
  7939  000A                     	;# 
  7940  000B                     	;# 
  7941  000C                     	;# 
  7942  000D                     	;# 
  7943  000E                     	;# 
  7944  0010                     	;# 
  7945  0011                     	;# 
  7946  0012                     	;# 
  7947  0013                     	;# 
  7948  0014                     	;# 
  7949  0015                     	;# 
  7950  0015                     	;# 
  7951  0016                     	;# 
  7952  0016                     	;# 
  7953  0017                     	;# 
  7954  0018                     	;# 
  7955  0019                     	;# 
  7956  0019                     	;# 
  7957  001A                     	;# 
  7958  001B                     	;# 
  7959  001C                     	;# 
  7960  001D                     	;# 
  7961  001E                     	;# 
  7962  001F                     	;# 
  7963  008C                     	;# 
  7964  008D                     	;# 
  7965  008E                     	;# 
  7966  0090                     	;# 
  7967  0091                     	;# 
  7968  0092                     	;# 
  7969  0093                     	;# 
  7970  0094                     	;# 
  7971  0097                     	;# 
  7972  009B                     	;# 
  7973  009B                     	;# 
  7974  009C                     	;# 
  7975  009D                     	;# 
  7976  009E                     	;# 
  7977  009F                     	;# 
  7978  010C                     	;# 
  7979  010D                     	;# 
  7980  010E                     	;# 
  7981  0111                     	;# 
  7982  0112                     	;# 
  7983  0113                     	;# 
  7984  0114                     	;# 
  7985  0115                     	;# 
  7986  0116                     	;# 
  7987  0117                     	;# 
  7988  0118                     	;# 
  7989  0119                     	;# 
  7990  018C                     	;# 
  7991  018D                     	;# 
  7992  018E                     	;# 
  7993  0199                     	;# 
  7994  0199                     	;# 
  7995  0199                     	;# 
  7996  019A                     	;# 
  7997  019A                     	;# 
  7998  019A                     	;# 
  7999  019B                     	;# 
  8000  019B                     	;# 
  8001  019B                     	;# 
  8002  019B                     	;# 
  8003  019B                     	;# 
  8004  019C                     	;# 
  8005  019C                     	;# 
  8006  019C                     	;# 
  8007  019D                     	;# 
  8008  019D                     	;# 
  8009  019D                     	;# 
  8010  019E                     	;# 
  8011  019E                     	;# 
  8012  019E                     	;# 
  8013  019F                     	;# 
  8014  019F                     	;# 
  8015  019F                     	;# 
  8016  019F                     	;# 
  8017  019F                     	;# 
  8018  020C                     	;# 
  8019  020D                     	;# 
  8020  020E                     	;# 
  8021  0211                     	;# 
  8022  0211                     	;# 
  8023  0212                     	;# 
  8024  0212                     	;# 
  8025  0213                     	;# 
  8026  0213                     	;# 
  8027  0214                     	;# 
  8028  0214                     	;# 
  8029  0215                     	;# 
  8030  0215                     	;# 
  8031  0215                     	;# 
  8032  0215                     	;# 
  8033  0216                     	;# 
  8034  0216                     	;# 
  8035  0217                     	;# 
  8036  0217                     	;# 
  8037  0219                     	;# 
  8038  021A                     	;# 
  8039  021B                     	;# 
  8040  021C                     	;# 
  8041  021D                     	;# 
  8042  021D                     	;# 
  8043  021E                     	;# 
  8044  021F                     	;# 
  8045  028C                     	;# 
  8046  028D                     	;# 
  8047  028E                     	;# 
  8048  0291                     	;# 
  8049  0291                     	;# 
  8050  0292                     	;# 
  8051  0293                     	;# 
  8052  0294                     	;# 
  8053  0295                     	;# 
  8054  0295                     	;# 
  8055  0296                     	;# 
  8056  0297                     	;# 
  8057  0298                     	;# 
  8058  029F                     	;# 
  8059  030C                     	;# 
  8060  030D                     	;# 
  8061  030E                     	;# 
  8062  0311                     	;# 
  8063  0311                     	;# 
  8064  0312                     	;# 
  8065  0313                     	;# 
  8066  0314                     	;# 
  8067  0315                     	;# 
  8068  0315                     	;# 
  8069  0316                     	;# 
  8070  0317                     	;# 
  8071  0318                     	;# 
  8072  038C                     	;# 
  8073  038D                     	;# 
  8074  038E                     	;# 
  8075  0391                     	;# 
  8076  0392                     	;# 
  8077  0393                     	;# 
  8078  0394                     	;# 
  8079  0395                     	;# 
  8080  0396                     	;# 
  8081  0397                     	;# 
  8082  0398                     	;# 
  8083  0399                     	;# 
  8084  039A                     	;# 
  8085  039C                     	;# 
  8086  039D                     	;# 
  8087  039E                     	;# 
  8088  039F                     	;# 
  8089  0411                     	;# 
  8090  0411                     	;# 
  8091  0412                     	;# 
  8092  0413                     	;# 
  8093  0414                     	;# 
  8094  0415                     	;# 
  8095  0416                     	;# 
  8096  0417                     	;# 
  8097  0418                     	;# 
  8098  0418                     	;# 
  8099  0419                     	;# 
  8100  041A                     	;# 
  8101  041B                     	;# 
  8102  041C                     	;# 
  8103  041D                     	;# 
  8104  041E                     	;# 
  8105  041F                     	;# 
  8106  0498                     	;# 
  8107  0498                     	;# 
  8108  0499                     	;# 
  8109  049A                     	;# 
  8110  049B                     	;# 
  8111  049B                     	;# 
  8112  049C                     	;# 
  8113  049D                     	;# 
  8114  049E                     	;# 
  8115  049F                     	;# 
  8116  0617                     	;# 
  8117  0618                     	;# 
  8118  0619                     	;# 
  8119  0619                     	;# 
  8120  061A                     	;# 
  8121  061B                     	;# 
  8122  061C                     	;# 
  8123  061C                     	;# 
  8124  061F                     	;# 
  8125  0691                     	;# 
  8126  0692                     	;# 
  8127  0693                     	;# 
  8128  0694                     	;# 
  8129  0695                     	;# 
  8130  0696                     	;# 
  8131  0697                     	;# 
  8132  0698                     	;# 
  8133  0699                     	;# 
  8134  0711                     	;# 
  8135  0712                     	;# 
  8136  0713                     	;# 
  8137  0714                     	;# 
  8138  0715                     	;# 
  8139  0716                     	;# 
  8140  0717                     	;# 
  8141  0718                     	;# 
  8142  0719                     	;# 
  8143  0891                     	;# 
  8144  0891                     	;# 
  8145  0891                     	;# 
  8146  0891                     	;# 
  8147  0891                     	;# 
  8148  0891                     	;# 
  8149  0892                     	;# 
  8150  0892                     	;# 
  8151  0892                     	;# 
  8152  0893                     	;# 
  8153  0893                     	;# 
  8154  0893                     	;# 
  8155  0893                     	;# 
  8156  0893                     	;# 
  8157  0893                     	;# 
  8158  0894                     	;# 
  8159  0894                     	;# 
  8160  0894                     	;# 
  8161  0895                     	;# 
  8162  0895                     	;# 
  8163  0895                     	;# 
  8164  0896                     	;# 
  8165  0896                     	;# 
  8166  0896                     	;# 
  8167  089B                     	;# 
  8168  0911                     	;# 
  8169  0912                     	;# 
  8170  0913                     	;# 
  8171  0914                     	;# 
  8172  0915                     	;# 
  8173  0916                     	;# 
  8174  0918                     	;# 
  8175  0919                     	;# 
  8176  091A                     	;# 
  8177  091B                     	;# 
  8178  091C                     	;# 
  8179  091D                     	;# 
  8180  091E                     	;# 
  8181  091F                     	;# 
  8182  0E0F                     	;# 
  8183  0E10                     	;# 
  8184  0E11                     	;# 
  8185  0E12                     	;# 
  8186  0E13                     	;# 
  8187  0E14                     	;# 
  8188  0E15                     	;# 
  8189  0E16                     	;# 
  8190  0E17                     	;# 
  8191  0E18                     	;# 
  8192  0E19                     	;# 
  8193  0E1A                     	;# 
  8194  0E1B                     	;# 
  8195  0E1C                     	;# 
  8196  0E1D                     	;# 
  8197  0E1E                     	;# 
  8198  0E1F                     	;# 
  8199  0E20                     	;# 
  8200  0E21                     	;# 
  8201  0E22                     	;# 
  8202  0E24                     	;# 
  8203  0E25                     	;# 
  8204  0E28                     	;# 
  8205  0E29                     	;# 
  8206  0E2A                     	;# 
  8207  0E2B                     	;# 
  8208  0E2C                     	;# 
  8209  0E2D                     	;# 
  8210  0E2E                     	;# 
  8211  0E2F                     	;# 
  8212  0E90                     	;# 
  8213  0E91                     	;# 
  8214  0E92                     	;# 
  8215  0E94                     	;# 
  8216  0E95                     	;# 
  8217  0E9C                     	;# 
  8218  0E9D                     	;# 
  8219  0E9E                     	;# 
  8220  0E9F                     	;# 
  8221  0EA0                     	;# 
  8222  0EA1                     	;# 
  8223  0EA2                     	;# 
  8224  0EA3                     	;# 
  8225  0EA4                     	;# 
  8226  0EA5                     	;# 
  8227  0EA6                     	;# 
  8228  0EA7                     	;# 
  8229  0F0F                     	;# 
  8230  0F10                     	;# 
  8231  0F11                     	;# 
  8232  0F12                     	;# 
  8233  0F13                     	;# 
  8234  0F14                     	;# 
  8235  0F15                     	;# 
  8236  0F16                     	;# 
  8237  0F17                     	;# 
  8238  0F18                     	;# 
  8239  0F19                     	;# 
  8240  0F1A                     	;# 
  8241  0F1B                     	;# 
  8242  0F1C                     	;# 
  8243  0F1D                     	;# 
  8244  0F1E                     	;# 
  8245  0F1F                     	;# 
  8246  0F20                     	;# 
  8247  0F21                     	;# 
  8248  0F22                     	;# 
  8249  0F23                     	;# 
  8250  0F24                     	;# 
  8251  0F25                     	;# 
  8252  0F26                     	;# 
  8253  0F27                     	;# 
  8254  0F28                     	;# 
  8255  0F29                     	;# 
  8256  0F2A                     	;# 
  8257  0F2B                     	;# 
  8258  0F2C                     	;# 
  8259  0F2D                     	;# 
  8260  0F2E                     	;# 
  8261  0F2F                     	;# 
  8262  0F30                     	;# 
  8263  0F31                     	;# 
  8264  0F32                     	;# 
  8265  0F33                     	;# 
  8266  0F34                     	;# 
  8267  0F35                     	;# 
  8268  0F36                     	;# 
  8269  0F37                     	;# 
  8270  0FE4                     	;# 
  8271  0FE5                     	;# 
  8272  0FE6                     	;# 
  8273  0FE7                     	;# 
  8274  0FE8                     	;# 
  8275  0FE9                     	;# 
  8276  0FEA                     	;# 
  8277  0FEB                     	;# 
  8278  0FED                     	;# 
  8279  0FEE                     	;# 
  8280  0FEF                     	;# 
  8281  0000                     	;# 
  8282  0001                     	;# 
  8283  0002                     	;# 
  8284  0003                     	;# 
  8285  0004                     	;# 
  8286  0005                     	;# 
  8287  0006                     	;# 
  8288  0007                     	;# 
  8289  0008                     	;# 
  8290  0009                     	;# 
  8291  000A                     	;# 
  8292  000B                     	;# 
  8293  000C                     	;# 
  8294  000D                     	;# 
  8295  000E                     	;# 
  8296  0010                     	;# 
  8297  0011                     	;# 
  8298  0012                     	;# 
  8299  0013                     	;# 
  8300  0014                     	;# 
  8301  0015                     	;# 
  8302  0015                     	;# 
  8303  0016                     	;# 
  8304  0016                     	;# 
  8305  0017                     	;# 
  8306  0018                     	;# 
  8307  0019                     	;# 
  8308  0019                     	;# 
  8309  001A                     	;# 
  8310  001B                     	;# 
  8311  001C                     	;# 
  8312  001D                     	;# 
  8313  001E                     	;# 
  8314  001F                     	;# 
  8315  008C                     	;# 
  8316  008D                     	;# 
  8317  008E                     	;# 
  8318  0090                     	;# 
  8319  0091                     	;# 
  8320  0092                     	;# 
  8321  0093                     	;# 
  8322  0094                     	;# 
  8323  0097                     	;# 
  8324  009B                     	;# 
  8325  009B                     	;# 
  8326  009C                     	;# 
  8327  009D                     	;# 
  8328  009E                     	;# 
  8329  009F                     	;# 
  8330  010C                     	;# 
  8331  010D                     	;# 
  8332  010E                     	;# 
  8333  0111                     	;# 
  8334  0112                     	;# 
  8335  0113                     	;# 
  8336  0114                     	;# 
  8337  0115                     	;# 
  8338  0116                     	;# 
  8339  0117                     	;# 
  8340  0118                     	;# 
  8341  0119                     	;# 
  8342  018C                     	;# 
  8343  018D                     	;# 
  8344  018E                     	;# 
  8345  0199                     	;# 
  8346  0199                     	;# 
  8347  0199                     	;# 
  8348  019A                     	;# 
  8349  019A                     	;# 
  8350  019A                     	;# 
  8351  019B                     	;# 
  8352  019B                     	;# 
  8353  019B                     	;# 
  8354  019B                     	;# 
  8355  019B                     	;# 
  8356  019C                     	;# 
  8357  019C                     	;# 
  8358  019C                     	;# 
  8359  019D                     	;# 
  8360  019D                     	;# 
  8361  019D                     	;# 
  8362  019E                     	;# 
  8363  019E                     	;# 
  8364  019E                     	;# 
  8365  019F                     	;# 
  8366  019F                     	;# 
  8367  019F                     	;# 
  8368  019F                     	;# 
  8369  019F                     	;# 
  8370  020C                     	;# 
  8371  020D                     	;# 
  8372  020E                     	;# 
  8373  0211                     	;# 
  8374  0211                     	;# 
  8375  0212                     	;# 
  8376  0212                     	;# 
  8377  0213                     	;# 
  8378  0213                     	;# 
  8379  0214                     	;# 
  8380  0214                     	;# 
  8381  0215                     	;# 
  8382  0215                     	;# 
  8383  0215                     	;# 
  8384  0215                     	;# 
  8385  0216                     	;# 
  8386  0216                     	;# 
  8387  0217                     	;# 
  8388  0217                     	;# 
  8389  0219                     	;# 
  8390  021A                     	;# 
  8391  021B                     	;# 
  8392  021C                     	;# 
  8393  021D                     	;# 
  8394  021D                     	;# 
  8395  021E                     	;# 
  8396  021F                     	;# 
  8397  028C                     	;# 
  8398  028D                     	;# 
  8399  028E                     	;# 
  8400  0291                     	;# 
  8401  0291                     	;# 
  8402  0292                     	;# 
  8403  0293                     	;# 
  8404  0294                     	;# 
  8405  0295                     	;# 
  8406  0295                     	;# 
  8407  0296                     	;# 
  8408  0297                     	;# 
  8409  0298                     	;# 
  8410  029F                     	;# 
  8411  030C                     	;# 
  8412  030D                     	;# 
  8413  030E                     	;# 
  8414  0311                     	;# 
  8415  0311                     	;# 
  8416  0312                     	;# 
  8417  0313                     	;# 
  8418  0314                     	;# 
  8419  0315                     	;# 
  8420  0315                     	;# 
  8421  0316                     	;# 
  8422  0317                     	;# 
  8423  0318                     	;# 
  8424  038C                     	;# 
  8425  038D                     	;# 
  8426  038E                     	;# 
  8427  0391                     	;# 
  8428  0392                     	;# 
  8429  0393                     	;# 
  8430  0394                     	;# 
  8431  0395                     	;# 
  8432  0396                     	;# 
  8433  0397                     	;# 
  8434  0398                     	;# 
  8435  0399                     	;# 
  8436  039A                     	;# 
  8437  039C                     	;# 
  8438  039D                     	;# 
  8439  039E                     	;# 
  8440  039F                     	;# 
  8441  0411                     	;# 
  8442  0411                     	;# 
  8443  0412                     	;# 
  8444  0413                     	;# 
  8445  0414                     	;# 
  8446  0415                     	;# 
  8447  0416                     	;# 
  8448  0417                     	;# 
  8449  0418                     	;# 
  8450  0418                     	;# 
  8451  0419                     	;# 
  8452  041A                     	;# 
  8453  041B                     	;# 
  8454  041C                     	;# 
  8455  041D                     	;# 
  8456  041E                     	;# 
  8457  041F                     	;# 
  8458  0498                     	;# 
  8459  0498                     	;# 
  8460  0499                     	;# 
  8461  049A                     	;# 
  8462  049B                     	;# 
  8463  049B                     	;# 
  8464  049C                     	;# 
  8465  049D                     	;# 
  8466  049E                     	;# 
  8467  049F                     	;# 
  8468  0617                     	;# 
  8469  0618                     	;# 
  8470  0619                     	;# 
  8471  0619                     	;# 
  8472  061A                     	;# 
  8473  061B                     	;# 
  8474  061C                     	;# 
  8475  061C                     	;# 
  8476  061F                     	;# 
  8477  0691                     	;# 
  8478  0692                     	;# 
  8479  0693                     	;# 
  8480  0694                     	;# 
  8481  0695                     	;# 
  8482  0696                     	;# 
  8483  0697                     	;# 
  8484  0698                     	;# 
  8485  0699                     	;# 
  8486  0711                     	;# 
  8487  0712                     	;# 
  8488  0713                     	;# 
  8489  0714                     	;# 
  8490  0715                     	;# 
  8491  0716                     	;# 
  8492  0717                     	;# 
  8493  0718                     	;# 
  8494  0719                     	;# 
  8495  0891                     	;# 
  8496  0891                     	;# 
  8497  0891                     	;# 
  8498  0891                     	;# 
  8499  0891                     	;# 
  8500  0891                     	;# 
  8501  0892                     	;# 
  8502  0892                     	;# 
  8503  0892                     	;# 
  8504  0893                     	;# 
  8505  0893                     	;# 
  8506  0893                     	;# 
  8507  0893                     	;# 
  8508  0893                     	;# 
  8509  0893                     	;# 
  8510  0894                     	;# 
  8511  0894                     	;# 
  8512  0894                     	;# 
  8513  0895                     	;# 
  8514  0895                     	;# 
  8515  0895                     	;# 
  8516  0896                     	;# 
  8517  0896                     	;# 
  8518  0896                     	;# 
  8519  089B                     	;# 
  8520  0911                     	;# 
  8521  0912                     	;# 
  8522  0913                     	;# 
  8523  0914                     	;# 
  8524  0915                     	;# 
  8525  0916                     	;# 
  8526  0918                     	;# 
  8527  0919                     	;# 
  8528  091A                     	;# 
  8529  091B                     	;# 
  8530  091C                     	;# 
  8531  091D                     	;# 
  8532  091E                     	;# 
  8533  091F                     	;# 
  8534  0E0F                     	;# 
  8535  0E10                     	;# 
  8536  0E11                     	;# 
  8537  0E12                     	;# 
  8538  0E13                     	;# 
  8539  0E14                     	;# 
  8540  0E15                     	;# 
  8541  0E16                     	;# 
  8542  0E17                     	;# 
  8543  0E18                     	;# 
  8544  0E19                     	;# 
  8545  0E1A                     	;# 
  8546  0E1B                     	;# 
  8547  0E1C                     	;# 
  8548  0E1D                     	;# 
  8549  0E1E                     	;# 
  8550  0E1F                     	;# 
  8551  0E20                     	;# 
  8552  0E21                     	;# 
  8553  0E22                     	;# 
  8554  0E24                     	;# 
  8555  0E25                     	;# 
  8556  0E28                     	;# 
  8557  0E29                     	;# 
  8558  0E2A                     	;# 
  8559  0E2B                     	;# 
  8560  0E2C                     	;# 
  8561  0E2D                     	;# 
  8562  0E2E                     	;# 
  8563  0E2F                     	;# 
  8564  0E90                     	;# 
  8565  0E91                     	;# 
  8566  0E92                     	;# 
  8567  0E94                     	;# 
  8568  0E95                     	;# 
  8569  0E9C                     	;# 
  8570  0E9D                     	;# 
  8571  0E9E                     	;# 
  8572  0E9F                     	;# 
  8573  0EA0                     	;# 
  8574  0EA1                     	;# 
  8575  0EA2                     	;# 
  8576  0EA3                     	;# 
  8577  0EA4                     	;# 
  8578  0EA5                     	;# 
  8579  0EA6                     	;# 
  8580  0EA7                     	;# 
  8581  0F0F                     	;# 
  8582  0F10                     	;# 
  8583  0F11                     	;# 
  8584  0F12                     	;# 
  8585  0F13                     	;# 
  8586  0F14                     	;# 
  8587  0F15                     	;# 
  8588  0F16                     	;# 
  8589  0F17                     	;# 
  8590  0F18                     	;# 
  8591  0F19                     	;# 
  8592  0F1A                     	;# 
  8593  0F1B                     	;# 
  8594  0F1C                     	;# 
  8595  0F1D                     	;# 
  8596  0F1E                     	;# 
  8597  0F1F                     	;# 
  8598  0F20                     	;# 
  8599  0F21                     	;# 
  8600  0F22                     	;# 
  8601  0F23                     	;# 
  8602  0F24                     	;# 
  8603  0F25                     	;# 
  8604  0F26                     	;# 
  8605  0F27                     	;# 
  8606  0F28                     	;# 
  8607  0F29                     	;# 
  8608  0F2A                     	;# 
  8609  0F2B                     	;# 
  8610  0F2C                     	;# 
  8611  0F2D                     	;# 
  8612  0F2E                     	;# 
  8613  0F2F                     	;# 
  8614  0F30                     	;# 
  8615  0F31                     	;# 
  8616  0F32                     	;# 
  8617  0F33                     	;# 
  8618  0F34                     	;# 
  8619  0F35                     	;# 
  8620  0F36                     	;# 
  8621  0F37                     	;# 
  8622  0FE4                     	;# 
  8623  0FE5                     	;# 
  8624  0FE6                     	;# 
  8625  0FE7                     	;# 
  8626  0FE8                     	;# 
  8627  0FE9                     	;# 
  8628  0FEA                     	;# 
  8629  0FEB                     	;# 
  8630  0FED                     	;# 
  8631  0FEE                     	;# 
  8632  0FEF                     	;_asciiCharTableLookup
  8633                           
  8634 ;; Function _menu_Exit is unused but had its address taken
  8635  0000                     
  8636 ;; Function _flashy_Exit is unused but had its address taken
  8637  0000                     
  8638 ;; Function _locked_Exit is unused but had its address taken
  8639  0000                     
  8640 ;; Function _secret_Exit is unused but had its address taken
  8641  0000                     
  8642 ;; Function _slot_Exit is unused but had its address taken
  8643  0000                     
  8644                           	psect	idataBANK1
  8645  26D6                     __pidataBANK1:	
  8646                           
  8647                           ;initializer for _randx
  8648  26D6  3401               	retlw	1
  8649  26D7  3400               	retlw	0
  8650  26D8  3400               	retlw	0
  8651  26D9  3400               	retlw	0
  8652                           
  8653                           ;initializer for _locked_lock_base_leds
  8654  26DA  341F               	retlw	31
  8655  26DB  34F8               	retlw	248
  8656                           
  8657                           ;initializer for _FLASHY_TEXT_SECRET_TEST
  8658  26DC  340A               	retlw	low (STR_9| (0+32768))
  8659  26DD  34A0               	retlw	high (STR_9| (0+32768))
  8660                           
  8661                           ;initializer for _FLASHY_TEXT
  8662  26DE  344E               	retlw	low (STR_8| (0+32768))
  8663  26DF  34A8               	retlw	high (STR_8| (0+32768))
  8664                           
  8665                           	psect	idataBANK2
  8666  19FE                     __pidataBANK2:	
  8667                           
  8668                           ;initializer for _locked_locking_leds
  8669  19FE  3400               	retlw	0
  8670  19FF  3400               	retlw	0
  8671  1A00  3420               	retlw	32
  8672  1A01  3400               	retlw	0
  8673  1A02  3460               	retlw	96
  8674  1A03  3400               	retlw	0
  8675  1A04  34E0               	retlw	224
  8676  1A05  3400               	retlw	0
  8677  1A06  34E0               	retlw	224
  8678  1A07  3401               	retlw	1
  8679  1A08  34E0               	retlw	224
  8680  1A09  3403               	retlw	3
  8681                           
  8682                           ;initializer for _flashy_option
  8683  1A0A  344E               	retlw	low (STR_8| (0+32768))
  8684  1A0B  34A8               	retlw	high (STR_8| (0+32768))
  8685  1A0C  3417               	retlw	low (STR_11| (0+32768))
  8686  1A0D  34A8               	retlw	high (STR_11| (0+32768))
  8687  1A0E  3420               	retlw	low (STR_12| (0+32768))
  8688  1A0F  34A8               	retlw	high (STR_12| (0+32768))
  8689  1A10  3428               	retlw	low (STR_13| (0+32768))
  8690  1A11  34A8               	retlw	high (STR_13| (0+32768))
  8691                           
  8692                           ;initializer for _menu_option
  8693  1A12  3453               	retlw	low (STR_4| (0+32768))
  8694  1A13  34A8               	retlw	high (STR_4| (0+32768))
  8695  1A14  3434               	retlw	low (STR_5| (0+32768))
  8696  1A15  34A8               	retlw	high (STR_5| (0+32768))
  8697  1A16  340D               	retlw	low (STR_6| (0+32768))
  8698  1A17  34A8               	retlw	high (STR_6| (0+32768))
  8699  1A18  342E               	retlw	low (STR_7| (0+32768))
  8700  1A19  34A8               	retlw	high (STR_7| (0+32768))
  8701                           
  8702                           ;initializer for marquee@F14035
  8703  1A1A  3420               	retlw	32
  8704  1A1B  3420               	retlw	32
  8705  1A1C  3420               	retlw	32
  8706  1A1D  3420               	retlw	32
  8707  1A1E  3400               	retlw	0
  8708                           
  8709                           ;initializer for marquee_speedy@F14026
  8710  1A1F  3420               	retlw	32
  8711  1A20  3420               	retlw	32
  8712  1A21  3420               	retlw	32
  8713  1A22  3420               	retlw	32
  8714  1A23  3400               	retlw	0
  8715                           
  8716                           	psect	idataBANK3
  8717  19B6                     __pidataBANK3:	
  8718                           
  8719                           ;initializer for _menu_options_leds
  8720  19B6  3400               	retlw	0
  8721  19B7  3402               	retlw	2
  8722  19B8  3400               	retlw	0
  8723  19B9  3401               	retlw	1
  8724  19BA  3480               	retlw	128
  8725  19BB  3400               	retlw	0
  8726  19BC  3440               	retlw	64
  8727  19BD  3400               	retlw	0
  8728  19BE  3420               	retlw	32
  8729  19BF  3400               	retlw	0
  8730                           
  8731                           ;initializer for _secret_inputs
  8732  19C0  3401               	retlw	1
  8733  19C1  3401               	retlw	1
  8734  19C2  3402               	retlw	2
  8735  19C3  3402               	retlw	2
  8736  19C4  3401               	retlw	1
  8737  19C5  3402               	retlw	2
  8738  19C6  3401               	retlw	1
  8739  19C7  3402               	retlw	2
  8740  19C8  3404               	retlw	4
  8741  19C9  3408               	retlw	8
  8742  19CA  3400               	retlw	0
  8743  19CB  3400               	retlw	0
  8744  19CC  3400               	retlw	0
  8745  19CD  3400               	retlw	0
  8746  19CE  3400               	retlw	0
  8747  19CF  3400               	retlw	0
  8748  19D0  3400               	retlw	0
  8749  19D1  3400               	retlw	0
  8750  19D2  3400               	retlw	0
  8751  19D3  3400               	retlw	0
  8752  19D4  3400               	retlw	0
  8753  19D5  3400               	retlw	0
  8754  19D6  34D8               	retlw	low (_secret_value| 0)
  8755  19D7  3401               	retlw	1
  8756  19D8  3400               	retlw	0
  8757                           
  8758                           	psect	idataBANK5
  8759  1BAB                     __pidataBANK5:	
  8760                           
  8761                           ;initializer for _roundabout_leds_inverse
  8762  1BAB  3480               	retlw	128
  8763  1BAC  3400               	retlw	0
  8764  1BAD  3440               	retlw	64
  8765  1BAE  3400               	retlw	0
  8766  1BAF  3420               	retlw	32
  8767  1BB0  3400               	retlw	0
  8768  1BB1  3410               	retlw	16
  8769  1BB2  3400               	retlw	0
  8770  1BB3  3408               	retlw	8
  8771  1BB4  3400               	retlw	0
  8772  1BB5  3404               	retlw	4
  8773  1BB6  3400               	retlw	0
  8774  1BB7  3402               	retlw	2
  8775  1BB8  3400               	retlw	0
  8776  1BB9  3401               	retlw	1
  8777  1BBA  3400               	retlw	0
  8778  1BBB  3402               	retlw	2
  8779  1BBC  3400               	retlw	0
  8780  1BBD  3404               	retlw	4
  8781  1BBE  3400               	retlw	0
  8782  1BBF  3408               	retlw	8
  8783  1BC0  3400               	retlw	0
  8784  1BC1  3410               	retlw	16
  8785  1BC2  3400               	retlw	0
  8786  1BC3  3420               	retlw	32
  8787  1BC4  3400               	retlw	0
  8788  1BC5  3440               	retlw	64
  8789  1BC6  3400               	retlw	0
  8790                           
  8791                           ;initializer for _roundabout_leds
  8792  1BC7  3480               	retlw	128
  8793  1BC8  3400               	retlw	0
  8794  1BC9  3400               	retlw	0
  8795  1BCA  3401               	retlw	1
  8796  1BCB  3400               	retlw	0
  8797  1BCC  3402               	retlw	2
  8798  1BCD  3400               	retlw	0
  8799  1BCE  3408               	retlw	8
  8800  1BCF  3400               	retlw	0
  8801  1BD0  3410               	retlw	16
  8802  1BD1  3400               	retlw	0
  8803  1BD2  3420               	retlw	32
  8804  1BD3  3400               	retlw	0
  8805  1BD4  3440               	retlw	64
  8806  1BD5  3400               	retlw	0
  8807  1BD6  3480               	retlw	128
  8808  1BD7  3400               	retlw	0
  8809  1BD8  3440               	retlw	64
  8810  1BD9  3400               	retlw	0
  8811  1BDA  3420               	retlw	32
  8812  1BDB  3400               	retlw	0
  8813  1BDC  3410               	retlw	16
  8814  1BDD  3400               	retlw	0
  8815  1BDE  3408               	retlw	8
  8816  1BDF  3400               	retlw	0
  8817  1BE0  3402               	retlw	2
  8818  1BE1  3400               	retlw	0
  8819  1BE2  3401               	retlw	1
  8820                           
  8821                           	psect	idataBANK6
  8822  1B73                     __pidataBANK6:	
  8823                           
  8824                           ;initializer for _curtain_leds_inverse
  8825  1B73  3480               	retlw	128
  8826  1B74  3400               	retlw	0
  8827  1B75  34C0               	retlw	192
  8828  1B76  3400               	retlw	0
  8829  1B77  34E0               	retlw	224
  8830  1B78  3400               	retlw	0
  8831  1B79  34F0               	retlw	240
  8832  1B7A  3400               	retlw	0
  8833  1B7B  34F8               	retlw	248
  8834  1B7C  3400               	retlw	0
  8835  1B7D  34FC               	retlw	252
  8836  1B7E  3400               	retlw	0
  8837  1B7F  34FE               	retlw	254
  8838  1B80  3400               	retlw	0
  8839  1B81  34FF               	retlw	255
  8840  1B82  3400               	retlw	0
  8841  1B83  34FE               	retlw	254
  8842  1B84  3400               	retlw	0
  8843  1B85  34FC               	retlw	252
  8844  1B86  3400               	retlw	0
  8845  1B87  34F8               	retlw	248
  8846  1B88  3400               	retlw	0
  8847  1B89  34F0               	retlw	240
  8848  1B8A  3400               	retlw	0
  8849  1B8B  34E0               	retlw	224
  8850  1B8C  3400               	retlw	0
  8851  1B8D  34C0               	retlw	192
  8852  1B8E  3400               	retlw	0
  8853                           
  8854                           ;initializer for _curtain_leds
  8855  1B8F  3480               	retlw	128
  8856  1B90  3400               	retlw	0
  8857  1B91  3480               	retlw	128
  8858  1B92  3401               	retlw	1
  8859  1B93  3480               	retlw	128
  8860  1B94  3403               	retlw	3
  8861  1B95  3480               	retlw	128
  8862  1B96  340B               	retlw	11
  8863  1B97  3480               	retlw	128
  8864  1B98  341B               	retlw	27
  8865  1B99  3480               	retlw	128
  8866  1B9A  343B               	retlw	59
  8867  1B9B  3480               	retlw	128
  8868  1B9C  347B               	retlw	123
  8869  1B9D  3480               	retlw	128
  8870  1B9E  34FB               	retlw	251
  8871  1B9F  3480               	retlw	128
  8872  1BA0  347B               	retlw	123
  8873  1BA1  3480               	retlw	128
  8874  1BA2  343B               	retlw	59
  8875  1BA3  3480               	retlw	128
  8876  1BA4  341B               	retlw	27
  8877  1BA5  3480               	retlw	128
  8878  1BA6  340B               	retlw	11
  8879  1BA7  3480               	retlw	128
  8880  1BA8  3403               	retlw	3
  8881  1BA9  3480               	retlw	128
  8882  1BAA  3401               	retlw	1
  8883                           
  8884                           	psect	idataBIGRAM
  8885  1700                     __pidataBIGRAM:	
  8886                           
  8887                           ;initializer for _asciiCharTableLookup
  8888  1700  3400               	retlw	0
  8889  1701  3400               	retlw	0
  8890  1702  3400               	retlw	0
  8891  1703  3420               	retlw	32
  8892  1704  3410               	retlw	16
  8893  1705  3410               	retlw	16
  8894  1706  3420               	retlw	32
  8895  1707  3400               	retlw	0
  8896  1708  3410               	retlw	16
  8897  1709  3410               	retlw	16
  8898  170A  34A5               	retlw	165
  8899  170B  3421               	retlw	33
  8900  170C  34A5               	retlw	165
  8901  170D  3460               	retlw	96
  8902  170E  3410               	retlw	16
  8903  170F  3430               	retlw	48
  8904  1710  3400               	retlw	0
  8905  1711  3412               	retlw	18
  8906  1712  3410               	retlw	16
  8907  1713  3408               	retlw	8
  8908  1714  3420               	retlw	32
  8909  1715  3420               	retlw	32
  8910  1716  3485               	retlw	133
  8911  1717  3445               	retlw	69
  8912  1718  34B1               	retlw	177
  8913  1719  3430               	retlw	48
  8914  171A  3410               	retlw	16
  8915  171B  3410               	retlw	16
  8916  171C  3410               	retlw	16
  8917  171D  3410               	retlw	16
  8918  171E  3410               	retlw	16
  8919  171F  3410               	retlw	16
  8920  1720  3410               	retlw	16
  8921  1721  3410               	retlw	16
  8922  1722  3410               	retlw	16
  8923  1723  3410               	retlw	16
  8924  1724  3410               	retlw	16
  8925  1725  3410               	retlw	16
  8926  1726  3410               	retlw	16
  8927  1727  3410               	retlw	16
  8928  1728  3410               	retlw	16
  8929  1729  3410               	retlw	16
  8930  172A  3410               	retlw	16
  8931  172B  3410               	retlw	16
  8932  172C  3410               	retlw	16
  8933  172D  3410               	retlw	16
  8934  172E  3410               	retlw	16
  8935  172F  3410               	retlw	16
  8936  1730  3410               	retlw	16
  8937  1731  3410               	retlw	16
  8938  1732  3410               	retlw	16
  8939  1733  3410               	retlw	16
  8940  1734  3410               	retlw	16
  8941  1735  3410               	retlw	16
  8942  1736  3410               	retlw	16
  8943  1737  3410               	retlw	16
  8944  1738  3410               	retlw	16
  8945  1739  3410               	retlw	16
  8946  173A  3410               	retlw	16
  8947  173B  3410               	retlw	16
  8948  173C  3410               	retlw	16
  8949  173D  3410               	retlw	16
  8950  173E  3410               	retlw	16
  8951  173F  3410               	retlw	16
  8952  1740  3400               	retlw	0
  8953  1741  3400               	retlw	0
  8954  1742  34C0               	retlw	192
  8955  1743  3440               	retlw	64
  8956  1744  3400               	retlw	0
  8957  1745  3444               	retlw	68
  8958  1746  3410               	retlw	16
  8959  1747  3410               	retlw	16
  8960  1748  34B4               	retlw	180
  8961  1749  3435               	retlw	53
  8962  174A  3410               	retlw	16
  8963  174B  3410               	retlw	16
  8964  174C  3410               	retlw	16
  8965  174D  3410               	retlw	16
  8966  174E  3400               	retlw	0
  8967  174F  3404               	retlw	4
  8968  1750  3408               	retlw	8
  8969  1751  3408               	retlw	8
  8970  1752  3402               	retlw	2
  8971  1753  3402               	retlw	2
  8972  1754  341E               	retlw	30
  8973  1755  341E               	retlw	30
  8974  1756  3414               	retlw	20
  8975  1757  3414               	retlw	20
  8976  1758  3440               	retlw	64
  8977  1759  3400               	retlw	0
  8978  175A  3410               	retlw	16
  8979  175B  3410               	retlw	16
  8980  175C  3440               	retlw	64
  8981  175D  3400               	retlw	0
  8982  175E  3402               	retlw	2
  8983  175F  3408               	retlw	8
  8984  1760  34A9               	retlw	169
  8985  1761  3463               	retlw	99
  8986  1762  3480               	retlw	128
  8987  1763  3440               	retlw	64
  8988  1764  3431               	retlw	49
  8989  1765  3470               	retlw	112
  8990  1766  34B0               	retlw	176
  8991  1767  3460               	retlw	96
  8992  1768  3490               	retlw	144
  8993  1769  3451               	retlw	81
  8994  176A  34B0               	retlw	176
  8995  176B  3431               	retlw	49
  8996  176C  34B1               	retlw	177
  8997  176D  3431               	retlw	49
  8998  176E  3480               	retlw	128
  8999  176F  3460               	retlw	96
  9000  1770  34B1               	retlw	177
  9001  1771  3471               	retlw	113
  9002  1772  3490               	retlw	144
  9003  1773  3471               	retlw	113
  9004  1774  3410               	retlw	16
  9005  1775  3410               	retlw	16
  9006  1776  3410               	retlw	16
  9007  1777  3410               	retlw	16
  9008  1778  3408               	retlw	8
  9009  1779  3408               	retlw	8
  9010  177A  3430               	retlw	48
  9011  177B  3410               	retlw	16
  9012  177C  3402               	retlw	2
  9013  177D  3402               	retlw	2
  9014  177E  3414               	retlw	20
  9015  177F  34E1               	retlw	225
  9016  1780  34A5               	retlw	165
  9017  1781  3470               	retlw	112
  9018  1782  3491               	retlw	145
  9019  1783  3471               	retlw	113
  9020  1784  34B1               	retlw	177
  9021  1785  3411               	retlw	17
  9022  1786  3421               	retlw	33
  9023  1787  3421               	retlw	33
  9024  1788  34B1               	retlw	177
  9025  1789  3450               	retlw	80
  9026  178A  3421               	retlw	33
  9027  178B  3431               	retlw	49
  9028  178C  3401               	retlw	1
  9029  178D  3431               	retlw	49
  9030  178E  34B1               	retlw	177
  9031  178F  3421               	retlw	33
  9032  1790  3491               	retlw	145
  9033  1791  3451               	retlw	81
  9034  1792  3424               	retlw	36
  9035  1793  3424               	retlw	36
  9036  1794  34A1               	retlw	161
  9037  1795  3440               	retlw	64
  9038  1796  3409               	retlw	9
  9039  1797  3419               	retlw	25
  9040  1798  3421               	retlw	33
  9041  1799  3401               	retlw	1
  9042  179A  3481               	retlw	129
  9043  179B  344B               	retlw	75
  9044  179C  3489               	retlw	137
  9045  179D  3443               	retlw	67
  9046  179E  34A1               	retlw	161
  9047  179F  3461               	retlw	97
  9048  17A0  3411               	retlw	17
  9049  17A1  3471               	retlw	113
  9050  17A2  34A9               	retlw	169
  9051  17A3  3461               	retlw	97
  9052  17A4  3419               	retlw	25
  9053  17A5  3471               	retlw	113
  9054  17A6  34B0               	retlw	176
  9055  17A7  3431               	retlw	49
  9056  17A8  3404               	retlw	4
  9057  17A9  3424               	retlw	36
  9058  17AA  34A1               	retlw	161
  9059  17AB  3441               	retlw	65
  9060  17AC  3403               	retlw	3
  9061  17AD  3409               	retlw	9
  9062  17AE  348B               	retlw	139
  9063  17AF  3441               	retlw	65
  9064  17B0  340A               	retlw	10
  9065  17B1  340A               	retlw	10
  9066  17B2  3404               	retlw	4
  9067  17B3  340A               	retlw	10
  9068  17B4  3422               	retlw	34
  9069  17B5  3428               	retlw	40
  9070  17B6  3421               	retlw	33
  9071  17B7  3421               	retlw	33
  9072  17B8  3408               	retlw	8
  9073  17B9  3402               	retlw	2
  9074  17BA  34A0               	retlw	160
  9075  17BB  3460               	retlw	96
  9076  17BC  340A               	retlw	10
  9077  17BD  3400               	retlw	0
  9078  17BE  3420               	retlw	32
  9079  17BF  3400               	retlw	0
  9080  17C0  3410               	retlw	16
  9081  17C1  3410               	retlw	16
  9082  17C2  3491               	retlw	145
  9083  17C3  3471               	retlw	113
  9084  17C4  34B1               	retlw	177
  9085  17C5  3411               	retlw	17
  9086  17C6  3431               	retlw	49
  9087  17C7  3410               	retlw	16
  9088  17C8  34B1               	retlw	177
  9089  17C9  3450               	retlw	80
  9090  17CA  3421               	retlw	33
  9091  17CB  3431               	retlw	49
  9092  17CC  3401               	retlw	1
  9093  17CD  3431               	retlw	49
  9094  17CE  34B1               	retlw	177
  9095  17CF  3421               	retlw	33
  9096  17D0  3491               	retlw	145
  9097  17D1  3451               	retlw	81
  9098  17D2  3424               	retlw	36
  9099  17D3  3424               	retlw	36
  9100  17D4  34A1               	retlw	161
  9101  17D5  3440               	retlw	64
  9102  17D6  3409               	retlw	9
  9103  17D7  3419               	retlw	25
  9104  17D8  3421               	retlw	33
  9105  17D9  3401               	retlw	1
  9106  17DA  3481               	retlw	129
  9107  17DB  344B               	retlw	75
  9108  17DC  3489               	retlw	137
  9109  17DD  3443               	retlw	67
  9110  17DE  34A1               	retlw	161
  9111  17DF  3461               	retlw	97
  9112  17E0  3411               	retlw	17
  9113  17E1  3471               	retlw	113
  9114  17E2  34A9               	retlw	169
  9115  17E3  3461               	retlw	97
  9116  17E4  3419               	retlw	25
  9117  17E5  3471               	retlw	113
  9118  17E6  34B0               	retlw	176
  9119  17E7  3431               	retlw	49
  9120  17E8  3404               	retlw	4
  9121  17E9  3424               	retlw	36
  9122  17EA  34A1               	retlw	161
  9123  17EB  3441               	retlw	65
  9124  17EC  3403               	retlw	3
  9125  17ED  3409               	retlw	9
  9126  17EE  348B               	retlw	139
  9127  17EF  3441               	retlw	65
  9128  17F0  340A               	retlw	10
  9129  17F1  340A               	retlw	10
  9130  17F2  3404               	retlw	4
  9131  17F3  340A               	retlw	10
  9132  17F4  3422               	retlw	34
  9133  17F5  3428               	retlw	40
  9134  17F6  3410               	retlw	16
  9135  17F7  3410               	retlw	16
  9136  17F8  3404               	retlw	4
  9137  17F9  3404               	retlw	4
  9138  17FA  3410               	retlw	16
  9139  17FB  3410               	retlw	16
  9140  17FC  3410               	retlw	16
  9141  17FD  3410               	retlw	16
  9142  17FE  34FF               	retlw	255
  9143  17FF  34FF               	retlw	255
  9144                           
  9145                           	psect	stringtext1
  9146  1000                     __pstringtext1:	
  9147  1000                     _gamma_table_256x1k:	
  9148  1000  3400               	retlw	0
  9149  1001  3400               	retlw	0
  9150  1002  3400               	retlw	0
  9151  1003  3400               	retlw	0
  9152  1004  3400               	retlw	0
  9153  1005  3400               	retlw	0
  9154  1006  3400               	retlw	0
  9155  1007  3400               	retlw	0
  9156  1008  3400               	retlw	0
  9157  1009  3400               	retlw	0
  9158  100A  3400               	retlw	0
  9159  100B  3400               	retlw	0
  9160  100C  3400               	retlw	0
  9161  100D  3400               	retlw	0
  9162  100E  3400               	retlw	0
  9163  100F  3400               	retlw	0
  9164  1010  3400               	retlw	0
  9165  1011  3400               	retlw	0
  9166  1012  3400               	retlw	0
  9167  1013  3400               	retlw	0
  9168  1014  3400               	retlw	0
  9169  1015  3400               	retlw	0
  9170  1016  3400               	retlw	0
  9171  1017  3400               	retlw	0
  9172  1018  3400               	retlw	0
  9173  1019  3400               	retlw	0
  9174  101A  3400               	retlw	0
  9175  101B  3400               	retlw	0
  9176  101C  3400               	retlw	0
  9177  101D  3400               	retlw	0
  9178  101E  3401               	retlw	1
  9179  101F  3400               	retlw	0
  9180  1020  3401               	retlw	1
  9181  1021  3400               	retlw	0
  9182  1022  3401               	retlw	1
  9183  1023  3400               	retlw	0
  9184  1024  3401               	retlw	1
  9185  1025  3400               	retlw	0
  9186  1026  3401               	retlw	1
  9187  1027  3400               	retlw	0
  9188  1028  3401               	retlw	1
  9189  1029  3400               	retlw	0
  9190  102A  3402               	retlw	2
  9191  102B  3400               	retlw	0
  9192  102C  3402               	retlw	2
  9193  102D  3400               	retlw	0
  9194  102E  3402               	retlw	2
  9195  102F  3400               	retlw	0
  9196  1030  3403               	retlw	3
  9197  1031  3400               	retlw	0
  9198  1032  3403               	retlw	3
  9199  1033  3400               	retlw	0
  9200  1034  3403               	retlw	3
  9201  1035  3400               	retlw	0
  9202  1036  3404               	retlw	4
  9203  1037  3400               	retlw	0
  9204  1038  3404               	retlw	4
  9205  1039  3400               	retlw	0
  9206  103A  3404               	retlw	4
  9207  103B  3400               	retlw	0
  9208  103C  3405               	retlw	5
  9209  103D  3400               	retlw	0
  9210  103E  3405               	retlw	5
  9211  103F  3400               	retlw	0
  9212  1040  3406               	retlw	6
  9213  1041  3400               	retlw	0
  9214  1042  3406               	retlw	6
  9215  1043  3400               	retlw	0
  9216  1044  3407               	retlw	7
  9217  1045  3400               	retlw	0
  9218  1046  3407               	retlw	7
  9219  1047  3400               	retlw	0
  9220  1048  3408               	retlw	8
  9221  1049  3400               	retlw	0
  9222  104A  3408               	retlw	8
  9223  104B  3400               	retlw	0
  9224  104C  3409               	retlw	9
  9225  104D  3400               	retlw	0
  9226  104E  3409               	retlw	9
  9227  104F  3400               	retlw	0
  9228  1050  340A               	retlw	10
  9229  1051  3400               	retlw	0
  9230  1052  340B               	retlw	11
  9231  1053  3400               	retlw	0
  9232  1054  340B               	retlw	11
  9233  1055  3400               	retlw	0
  9234  1056  340C               	retlw	12
  9235  1057  3400               	retlw	0
  9236  1058  340D               	retlw	13
  9237  1059  3400               	retlw	0
  9238  105A  340E               	retlw	14
  9239  105B  3400               	retlw	0
  9240  105C  340E               	retlw	14
  9241  105D  3400               	retlw	0
  9242  105E  340F               	retlw	15
  9243  105F  3400               	retlw	0
  9244  1060  3410               	retlw	16
  9245  1061  3400               	retlw	0
  9246  1062  3411               	retlw	17
  9247  1063  3400               	retlw	0
  9248  1064  3412               	retlw	18
  9249  1065  3400               	retlw	0
  9250  1066  3413               	retlw	19
  9251  1067  3400               	retlw	0
  9252  1068  3413               	retlw	19
  9253  1069  3400               	retlw	0
  9254  106A  3414               	retlw	20
  9255  106B  3400               	retlw	0
  9256  106C  3415               	retlw	21
  9257  106D  3400               	retlw	0
  9258  106E  3416               	retlw	22
  9259  106F  3400               	retlw	0
  9260  1070  3417               	retlw	23
  9261  1071  3400               	retlw	0
  9262  1072  3419               	retlw	25
  9263  1073  3400               	retlw	0
  9264  1074  341A               	retlw	26
  9265  1075  3400               	retlw	0
  9266  1076  341B               	retlw	27
  9267  1077  3400               	retlw	0
  9268  1078  341C               	retlw	28
  9269  1079  3400               	retlw	0
  9270  107A  341D               	retlw	29
  9271  107B  3400               	retlw	0
  9272  107C  341E               	retlw	30
  9273  107D  3400               	retlw	0
  9274  107E  3420               	retlw	32
  9275  107F  3400               	retlw	0
  9276  1080  3421               	retlw	33
  9277  1081  3400               	retlw	0
  9278  1082  3422               	retlw	34
  9279  1083  3400               	retlw	0
  9280  1084  3423               	retlw	35
  9281  1085  3400               	retlw	0
  9282  1086  3425               	retlw	37
  9283  1087  3400               	retlw	0
  9284  1088  3426               	retlw	38
  9285  1089  3400               	retlw	0
  9286  108A  3428               	retlw	40
  9287  108B  3400               	retlw	0
  9288  108C  3429               	retlw	41
  9289  108D  3400               	retlw	0
  9290  108E  342A               	retlw	42
  9291  108F  3400               	retlw	0
  9292  1090  342C               	retlw	44
  9293  1091  3400               	retlw	0
  9294  1092  342E               	retlw	46
  9295  1093  3400               	retlw	0
  9296  1094  342F               	retlw	47
  9297  1095  3400               	retlw	0
  9298  1096  3431               	retlw	49
  9299  1097  3400               	retlw	0
  9300  1098  3432               	retlw	50
  9301  1099  3400               	retlw	0
  9302  109A  3434               	retlw	52
  9303  109B  3400               	retlw	0
  9304  109C  3436               	retlw	54
  9305  109D  3400               	retlw	0
  9306  109E  3437               	retlw	55
  9307  109F  3400               	retlw	0
  9308  10A0  3439               	retlw	57
  9309  10A1  3400               	retlw	0
  9310  10A2  343B               	retlw	59
  9311  10A3  3400               	retlw	0
  9312  10A4  343D               	retlw	61
  9313  10A5  3400               	retlw	0
  9314  10A6  343F               	retlw	63
  9315  10A7  3400               	retlw	0
  9316  10A8  3441               	retlw	65
  9317  10A9  3400               	retlw	0
  9318  10AA  3442               	retlw	66
  9319  10AB  3400               	retlw	0
  9320  10AC  3444               	retlw	68
  9321  10AD  3400               	retlw	0
  9322  10AE  3446               	retlw	70
  9323  10AF  3400               	retlw	0
  9324  10B0  3448               	retlw	72
  9325  10B1  3400               	retlw	0
  9326  10B2  344B               	retlw	75
  9327  10B3  3400               	retlw	0
  9328  10B4  344D               	retlw	77
  9329  10B5  3400               	retlw	0
  9330  10B6  344F               	retlw	79
  9331  10B7  3400               	retlw	0
  9332  10B8  3451               	retlw	81
  9333  10B9  3400               	retlw	0
  9334  10BA  3453               	retlw	83
  9335  10BB  3400               	retlw	0
  9336  10BC  3455               	retlw	85
  9337  10BD  3400               	retlw	0
  9338  10BE  3458               	retlw	88
  9339  10BF  3400               	retlw	0
  9340  10C0  345A               	retlw	90
  9341  10C1  3400               	retlw	0
  9342  10C2  345C               	retlw	92
  9343  10C3  3400               	retlw	0
  9344  10C4  345F               	retlw	95
  9345  10C5  3400               	retlw	0
  9346  10C6  3461               	retlw	97
  9347  10C7  3400               	retlw	0
  9348  10C8  3464               	retlw	100
  9349  10C9  3400               	retlw	0
  9350  10CA  3466               	retlw	102
  9351  10CB  3400               	retlw	0
  9352  10CC  3469               	retlw	105
  9353  10CD  3400               	retlw	0
  9354  10CE  346B               	retlw	107
  9355  10CF  3400               	retlw	0
  9356  10D0  346E               	retlw	110
  9357  10D1  3400               	retlw	0
  9358  10D2  3470               	retlw	112
  9359  10D3  3400               	retlw	0
  9360  10D4  3473               	retlw	115
  9361  10D5  3400               	retlw	0
  9362  10D6  3476               	retlw	118
  9363  10D7  3400               	retlw	0
  9364  10D8  3479               	retlw	121
  9365  10D9  3400               	retlw	0
  9366  10DA  347B               	retlw	123
  9367  10DB  3400               	retlw	0
  9368  10DC  347E               	retlw	126
  9369  10DD  3400               	retlw	0
  9370  10DE  3481               	retlw	129
  9371  10DF  3400               	retlw	0
  9372  10E0  3484               	retlw	132
  9373  10E1  3400               	retlw	0
  9374  10E2  3487               	retlw	135
  9375  10E3  3400               	retlw	0
  9376  10E4  348A               	retlw	138
  9377  10E5  3400               	retlw	0
  9378  10E6  348D               	retlw	141
  9379  10E7  3400               	retlw	0
  9380  10E8  3490               	retlw	144
  9381  10E9  3400               	retlw	0
  9382  10EA  3493               	retlw	147
  9383  10EB  3400               	retlw	0
  9384  10EC  3496               	retlw	150
  9385  10ED  3400               	retlw	0
  9386  10EE  349A               	retlw	154
  9387  10EF  3400               	retlw	0
  9388  10F0  349D               	retlw	157
  9389  10F1  3400               	retlw	0
  9390  10F2  34A0               	retlw	160
  9391  10F3  3400               	retlw	0
  9392  10F4  34A3               	retlw	163
  9393  10F5  3400               	retlw	0
  9394  10F6  34A7               	retlw	167
  9395  10F7  3400               	retlw	0
  9396  10F8  34AA               	retlw	170
  9397  10F9  3400               	retlw	0
  9398  10FA  34AE               	retlw	174
  9399  10FB  3400               	retlw	0
  9400  10FC  34B1               	retlw	177
  9401  10FD  3400               	retlw	0
  9402  10FE  34B5               	retlw	181
  9403  10FF  3400               	retlw	0
  9404  1100  34B8               	retlw	184
  9405  1101  3400               	retlw	0
  9406  1102  34BC               	retlw	188
  9407  1103  3400               	retlw	0
  9408  1104  34BF               	retlw	191
  9409  1105  3400               	retlw	0
  9410  1106  34C3               	retlw	195
  9411  1107  3400               	retlw	0
  9412  1108  34C7               	retlw	199
  9413  1109  3400               	retlw	0
  9414  110A  34CA               	retlw	202
  9415  110B  3400               	retlw	0
  9416  110C  34CE               	retlw	206
  9417  110D  3400               	retlw	0
  9418  110E  34D2               	retlw	210
  9419  110F  3400               	retlw	0
  9420  1110  34D6               	retlw	214
  9421  1111  3400               	retlw	0
  9422  1112  34DA               	retlw	218
  9423  1113  3400               	retlw	0
  9424  1114  34DE               	retlw	222
  9425  1115  3400               	retlw	0
  9426  1116  34E2               	retlw	226
  9427  1117  3400               	retlw	0
  9428  1118  34E6               	retlw	230
  9429  1119  3400               	retlw	0
  9430  111A  34EA               	retlw	234
  9431  111B  3400               	retlw	0
  9432  111C  34EE               	retlw	238
  9433  111D  3400               	retlw	0
  9434  111E  34F3               	retlw	243
  9435  111F  3400               	retlw	0
  9436  1120  34F7               	retlw	247
  9437  1121  3400               	retlw	0
  9438  1122  34FB               	retlw	251
  9439  1123  3400               	retlw	0
  9440  1124  34FF               	retlw	255
  9441  1125  3400               	retlw	0
  9442  1126  3404               	retlw	4
  9443  1127  3401               	retlw	1
  9444  1128  3408               	retlw	8
  9445  1129  3401               	retlw	1
  9446  112A  340D               	retlw	13
  9447  112B  3401               	retlw	1
  9448  112C  3411               	retlw	17
  9449  112D  3401               	retlw	1
  9450  112E  3416               	retlw	22
  9451  112F  3401               	retlw	1
  9452  1130  341A               	retlw	26
  9453  1131  3401               	retlw	1
  9454  1132  341F               	retlw	31
  9455  1133  3401               	retlw	1
  9456  1134  3424               	retlw	36
  9457  1135  3401               	retlw	1
  9458  1136  3428               	retlw	40
  9459  1137  3401               	retlw	1
  9460  1138  342D               	retlw	45
  9461  1139  3401               	retlw	1
  9462  113A  3432               	retlw	50
  9463  113B  3401               	retlw	1
  9464  113C  3437               	retlw	55
  9465  113D  3401               	retlw	1
  9466  113E  343C               	retlw	60
  9467  113F  3401               	retlw	1
  9468  1140  3441               	retlw	65
  9469  1141  3401               	retlw	1
  9470  1142  3446               	retlw	70
  9471  1143  3401               	retlw	1
  9472  1144  344B               	retlw	75
  9473  1145  3401               	retlw	1
  9474  1146  3450               	retlw	80
  9475  1147  3401               	retlw	1
  9476  1148  3455               	retlw	85
  9477  1149  3401               	retlw	1
  9478  114A  345A               	retlw	90
  9479  114B  3401               	retlw	1
  9480  114C  345F               	retlw	95
  9481  114D  3401               	retlw	1
  9482  114E  3465               	retlw	101
  9483  114F  3401               	retlw	1
  9484  1150  346A               	retlw	106
  9485  1151  3401               	retlw	1
  9486  1152  346F               	retlw	111
  9487  1153  3401               	retlw	1
  9488  1154  3475               	retlw	117
  9489  1155  3401               	retlw	1
  9490  1156  347A               	retlw	122
  9491  1157  3401               	retlw	1
  9492  1158  3480               	retlw	128
  9493  1159  3401               	retlw	1
  9494  115A  3486               	retlw	134
  9495  115B  3401               	retlw	1
  9496  115C  348B               	retlw	139
  9497  115D  3401               	retlw	1
  9498  115E  3491               	retlw	145
  9499  115F  3401               	retlw	1
  9500  1160  3497               	retlw	151
  9501  1161  3401               	retlw	1
  9502  1162  349C               	retlw	156
  9503  1163  3401               	retlw	1
  9504  1164  34A2               	retlw	162
  9505  1165  3401               	retlw	1
  9506  1166  34A8               	retlw	168
  9507  1167  3401               	retlw	1
  9508  1168  34AE               	retlw	174
  9509  1169  3401               	retlw	1
  9510  116A  34B4               	retlw	180
  9511  116B  3401               	retlw	1
  9512  116C  34BA               	retlw	186
  9513  116D  3401               	retlw	1
  9514  116E  34C0               	retlw	192
  9515  116F  3401               	retlw	1
  9516  1170  34C6               	retlw	198
  9517  1171  3401               	retlw	1
  9518  1172  34CC               	retlw	204
  9519  1173  3401               	retlw	1
  9520  1174  34D2               	retlw	210
  9521  1175  3401               	retlw	1
  9522  1176  34D9               	retlw	217
  9523  1177  3401               	retlw	1
  9524  1178  34DF               	retlw	223
  9525  1179  3401               	retlw	1
  9526  117A  34E5               	retlw	229
  9527  117B  3401               	retlw	1
  9528  117C  34EC               	retlw	236
  9529  117D  3401               	retlw	1
  9530  117E  34F2               	retlw	242
  9531  117F  3401               	retlw	1
  9532  1180  34F9               	retlw	249
  9533  1181  3401               	retlw	1
  9534  1182  34FF               	retlw	255
  9535  1183  3401               	retlw	1
  9536  1184  3406               	retlw	6
  9537  1185  3402               	retlw	2
  9538  1186  340D               	retlw	13
  9539  1187  3402               	retlw	2
  9540  1188  3413               	retlw	19
  9541  1189  3402               	retlw	2
  9542  118A  341A               	retlw	26
  9543  118B  3402               	retlw	2
  9544  118C  3421               	retlw	33
  9545  118D  3402               	retlw	2
  9546  118E  3428               	retlw	40
  9547  118F  3402               	retlw	2
  9548  1190  342F               	retlw	47
  9549  1191  3402               	retlw	2
  9550  1192  3436               	retlw	54
  9551  1193  3402               	retlw	2
  9552  1194  343D               	retlw	61
  9553  1195  3402               	retlw	2
  9554  1196  3444               	retlw	68
  9555  1197  3402               	retlw	2
  9556  1198  344B               	retlw	75
  9557  1199  3402               	retlw	2
  9558  119A  3452               	retlw	82
  9559  119B  3402               	retlw	2
  9560  119C  345A               	retlw	90
  9561  119D  3402               	retlw	2
  9562  119E  3461               	retlw	97
  9563  119F  3402               	retlw	2
  9564  11A0  3468               	retlw	104
  9565  11A1  3402               	retlw	2
  9566  11A2  3470               	retlw	112
  9567  11A3  3402               	retlw	2
  9568  11A4  3477               	retlw	119
  9569  11A5  3402               	retlw	2
  9570  11A6  347F               	retlw	127
  9571  11A7  3402               	retlw	2
  9572  11A8  3486               	retlw	134
  9573  11A9  3402               	retlw	2
  9574  11AA  348E               	retlw	142
  9575  11AB  3402               	retlw	2
  9576  11AC  3495               	retlw	149
  9577  11AD  3402               	retlw	2
  9578  11AE  349D               	retlw	157
  9579  11AF  3402               	retlw	2
  9580  11B0  34A5               	retlw	165
  9581  11B1  3402               	retlw	2
  9582  11B2  34AD               	retlw	173
  9583  11B3  3402               	retlw	2
  9584  11B4  34B5               	retlw	181
  9585  11B5  3402               	retlw	2
  9586  11B6  34BD               	retlw	189
  9587  11B7  3402               	retlw	2
  9588  11B8  34C5               	retlw	197
  9589  11B9  3402               	retlw	2
  9590  11BA  34CD               	retlw	205
  9591  11BB  3402               	retlw	2
  9592  11BC  34D5               	retlw	213
  9593  11BD  3402               	retlw	2
  9594  11BE  34DD               	retlw	221
  9595  11BF  3402               	retlw	2
  9596  11C0  34E5               	retlw	229
  9597  11C1  3402               	retlw	2
  9598  11C2  34ED               	retlw	237
  9599  11C3  3402               	retlw	2
  9600  11C4  34F6               	retlw	246
  9601  11C5  3402               	retlw	2
  9602  11C6  34FE               	retlw	254
  9603  11C7  3402               	retlw	2
  9604  11C8  3406               	retlw	6
  9605  11C9  3403               	retlw	3
  9606  11CA  340F               	retlw	15
  9607  11CB  3403               	retlw	3
  9608  11CC  3418               	retlw	24
  9609  11CD  3403               	retlw	3
  9610  11CE  3420               	retlw	32
  9611  11CF  3403               	retlw	3
  9612  11D0  3429               	retlw	41
  9613  11D1  3403               	retlw	3
  9614  11D2  3431               	retlw	49
  9615  11D3  3403               	retlw	3
  9616  11D4  343A               	retlw	58
  9617  11D5  3403               	retlw	3
  9618  11D6  3443               	retlw	67
  9619  11D7  3403               	retlw	3
  9620  11D8  344C               	retlw	76
  9621  11D9  3403               	retlw	3
  9622  11DA  3455               	retlw	85
  9623  11DB  3403               	retlw	3
  9624  11DC  345E               	retlw	94
  9625  11DD  3403               	retlw	3
  9626  11DE  3467               	retlw	103
  9627  11DF  3403               	retlw	3
  9628  11E0  3470               	retlw	112
  9629  11E1  3403               	retlw	3
  9630  11E2  3479               	retlw	121
  9631  11E3  3403               	retlw	3
  9632  11E4  3482               	retlw	130
  9633  11E5  3403               	retlw	3
  9634  11E6  348C               	retlw	140
  9635  11E7  3403               	retlw	3
  9636  11E8  3495               	retlw	149
  9637  11E9  3403               	retlw	3
  9638  11EA  349E               	retlw	158
  9639  11EB  3403               	retlw	3
  9640  11EC  34A8               	retlw	168
  9641  11ED  3403               	retlw	3
  9642  11EE  34B1               	retlw	177
  9643  11EF  3403               	retlw	3
  9644  11F0  34BB               	retlw	187
  9645  11F1  3403               	retlw	3
  9646  11F2  34C5               	retlw	197
  9647  11F3  3403               	retlw	3
  9648  11F4  34CE               	retlw	206
  9649  11F5  3403               	retlw	3
  9650  11F6  34D8               	retlw	216
  9651  11F7  3403               	retlw	3
  9652  11F8  34E2               	retlw	226
  9653  11F9  3403               	retlw	3
  9654  11FA  34EC               	retlw	236
  9655  11FB  3403               	retlw	3
  9656  11FC  34F6               	retlw	246
  9657  11FD  3403               	retlw	3
  9658  11FE  34FF               	retlw	255
  9659  11FF  3403               	retlw	3
  9660  1200                     __end_of_gamma_table_256x1k:	
  9661                           
  9662                           	psect	stringtext2
  9663  2000                     __pstringtext2:	
  9664  2000                     _dpowers:	
  9665  2000  3401               	retlw	1
  9666  2001  3400               	retlw	0
  9667  2002  340A               	retlw	10
  9668  2003  3400               	retlw	0
  9669  2004  3464               	retlw	100
  9670  2005  3400               	retlw	0
  9671  2006  34E8               	retlw	232
  9672  2007  3403               	retlw	3
  9673  2008  3410               	retlw	16
  9674  2009  3427               	retlw	39
  9675  200A                     __end_of_dpowers:	
  9676  000D                     _PORTBbits	set	13
  9677  000C                     _PORTAbits	set	12
  9678  000E                     _PORTCbits	set	14
  9679  000B                     _INTCONbits	set	11
  9680  0017                     _T0CON0bits	set	23
  9681  0010                     _PIR0bits	set	16
  9682  0015                     _TMR0L	set	21
  9683  0016                     _TMR0H	set	22
  9684  0018                     _T0CON1	set	24
  9685  0017                     _T0CON0	set	23
  9686  0012                     _PIR2bits	set	18
  9687  001F                     _T2CONbits	set	31
  9688  0011                     _PIR1bits	set	17
  9689  001D                     _TMR2	set	29
  9690  001E                     _PR2	set	30
  9691  001F                     _T2CON	set	31
  9692  005F                     _GIE	set	95
  9693  0090                     _PIE0bits	set	144
  9694  008E                     _TRISC	set	142
  9695  008D                     _TRISB	set	141
  9696  008C                     _TRISA	set	140
  9697  0097                     _WDTCON	set	151
  9698  010E                     _LATCbits	set	270
  9699  010D                     _LATBbits	set	269
  9700  010E                     _LATC	set	270
  9701  010D                     _LATB	set	269
  9702  010C                     _LATA	set	268
  9703  018C                     _ANSELA	set	396
  9704  018D                     _ANSELB	set	397
  9705  018E                     _ANSELC	set	398
  9706  020E                     _WPUC	set	526
  9707  020C                     _WPUA	set	524
  9708  020D                     _WPUB	set	525
  9709  0214                     _SSP1STATbits	set	532
  9710  0211                     _SSP1BUF	set	529
  9711  0215                     _SSP1CON1bits	set	533
  9712  0212                     _SSP1ADD	set	530
  9713  0215                     _SSP1CON1	set	533
  9714  0214                     _SSP1STAT	set	532
  9715  0297                     _CCP2CONbits	set	663
  9716  0295                     _CCPR2L	set	661
  9717  0296                     _CCPR2H	set	662
  9718  0297                     _CCP2CON	set	663
  9719  028E                     _ODCONC	set	654
  9720  028D                     _ODCONB	set	653
  9721  028C                     _ODCONA	set	652
  9722  0293                     _CCP1CONbits	set	659
  9723  029F                     _CCPTMRSbits	set	671
  9724  0291                     _CCPR1L	set	657
  9725  0292                     _CCPR1H	set	658
  9726  0293                     _CCP1CON	set	659
  9727  0417                     _T4CONbits	set	1047
  9728  0415                     _TMR4	set	1045
  9729  0416                     _PR4	set	1046
  9730  0417                     _T4CON	set	1047
  9731  061A                     _PWM6DCL	set	1562
  9732  061B                     _PWM6DCH	set	1563
  9733  061C                     _PWM6CON	set	1564
  9734  061F                     _PWMTMRSbits	set	1567
  9735  0617                     _PWM5DCL	set	1559
  9736  0618                     _PWM5DCH	set	1560
  9737  0619                     _PWM5CON	set	1561
  9738  0896                     _NVMCON2	set	2198
  9739  0893                     _NVMDATL	set	2195
  9740  0894                     _NVMDATH	set	2196
  9741  0895                     _NVMCON1bits	set	2197
  9742  0892                     _NVMADRH	set	2194
  9743  0891                     _NVMADRL	set	2193
  9744  091E                     _OSCTUNE	set	2334
  9745  091F                     _OSCFRQ	set	2335
  9746  091D                     _OSCEN	set	2333
  9747  091B                     _OSCCON3	set	2331
  9748  0919                     _OSCCON1	set	2329
  9749  48E0                     _PLLR	set	18656
  9750  0E20                     _SSP1CLKPPSbits	set	3616
  9751  0E21                     _SSP1DATPPSbits	set	3617
  9752  0E0F                     _PPSLOCKbits	set	3599
  9753  0E0F                     _PPSLOCK	set	3599
  9754  0EA2                     _RC2PPSbits	set	3746
  9755  0E9E                     _RB6PPSbits	set	3742
  9756  0EA3                     _RC3PPSbits	set	3747
  9757  0EA0                     _RC0PPSbits	set	3744
  9758  0EA4                     _RC4PPSbits	set	3748
  9759  0EA1                     _RC1PPSbits	set	3745
  9760  200A                     STR_9:	
  9761  200A  3405               	retlw	5
  9762  200B  3407               	retlw	7
  9763  200C  3407               	retlw	7
  9764  200D  3408               	retlw	8
  9765  200E  342D               	retlw	45	;'-'
  9766  200F  342D               	retlw	45	;'-'
  9767  2010  3420               	retlw	32	;' '
  9768  2011  3420               	retlw	32	;' '
  9769  2012  342D               	retlw	45	;'-'
  9770  2013  342D               	retlw	45	;'-'
  9771  2014  3409               	retlw	9
  9772  2015  3407               	retlw	7
  9773  2016  3407               	retlw	7
  9774  2017  3406               	retlw	6
  9775  2018  3420               	retlw	32	;' '
  9776  2019  340B               	retlw	11
  9777  201A  3420               	retlw	32	;' '
  9778  201B  3400               	retlw	0
  9779                           
  9780                           	psect	stringtext3
  9781  2800                     __pstringtext3:	
  9782  2800                     STR_16:	
  9783  2800  3455               	retlw	85	;'U'
  9784  2801  344E               	retlw	78	;'N'
  9785  2802  344C               	retlw	76	;'L'
  9786  2803  344F               	retlw	79	;'O'
  9787  2804  3443               	retlw	67	;'C'
  9788  2805  344B               	retlw	75	;'K'
  9789  2806  3449               	retlw	73	;'I'
  9790  2807  344E               	retlw	78	;'N'
  9791  2808  3447               	retlw	71	;'G'
  9792  2809  342E               	retlw	46	;'.'
  9793  280A  342E               	retlw	46	;'.'
  9794  280B  342E               	retlw	46	;'.'
  9795  280C  3400               	retlw	0
  9796                           
  9797                           	psect	stringtext4
  9798  280D                     __pstringtext4:	
  9799  280D                     STR_6:	
  9800  280D  3450               	retlw	80	;'P'
  9801  280E  3441               	retlw	65	;'A'
  9802  280F  3453               	retlw	83	;'S'
  9803  2810  3453               	retlw	83	;'S'
  9804  2811  3457               	retlw	87	;'W'
  9805  2812  344F               	retlw	79	;'O'
  9806  2813  3452               	retlw	82	;'R'
  9807  2814  3444               	retlw	68	;'D'
  9808  2815  3420               	retlw	32	;' '
  9809  2816  3400               	retlw	0
  9810                           
  9811                           	psect	stringtext5
  9812  2817                     __pstringtext5:	
  9813  2817                     STR_11:	
  9814  2817  344E               	retlw	78	;'N'
  9815  2818  3455               	retlw	85	;'U'
  9816  2819  344C               	retlw	76	;'L'
  9817  281A  344C               	retlw	76	;'L'
  9818  281B  3449               	retlw	73	;'I'
  9819  281C  3446               	retlw	70	;'F'
  9820  281D  3459               	retlw	89	;'Y'
  9821  281E  3420               	retlw	32	;' '
  9822  281F  3400               	retlw	0
  9823                           
  9824                           	psect	stringtext6
  9825  2820                     __pstringtext6:	
  9826  2820                     STR_12:	
  9827  2820  3444               	retlw	68	;'D'
  9828  2821  3445               	retlw	69	;'E'
  9829  2822  3446               	retlw	70	;'F'
  9830  2823  3443               	retlw	67	;'C'
  9831  2824  344F               	retlw	79	;'O'
  9832  2825  344E               	retlw	78	;'N'
  9833  2826  3420               	retlw	32	;' '
  9834  2827  3400               	retlw	0
  9835                           
  9836                           	psect	stringtext7
  9837  2828                     __pstringtext7:	
  9838  2828                     STR_13:	
  9839  2828  3448               	retlw	72	;'H'
  9840  2829  3441               	retlw	65	;'A'
  9841  282A  3458               	retlw	88	;'X'
  9842  282B  3420               	retlw	32	;' '
  9843  282C  3420               	retlw	32	;' '
  9844  282D  3400               	retlw	0
  9845                           
  9846                           	psect	stringtext8
  9847  282E                     __pstringtext8:	
  9848  282E                     STR_7:	
  9849  282E  3445               	retlw	69	;'E'
  9850  282F  3458               	retlw	88	;'X'
  9851  2830  3449               	retlw	73	;'I'
  9852  2831  3454               	retlw	84	;'T'
  9853  2832  3420               	retlw	32	;' '
  9854  2833  3400               	retlw	0
  9855                           
  9856                           	psect	stringtext9
  9857  2834                     __pstringtext9:	
  9858  2834                     STR_5:	
  9859  2834  3453               	retlw	83	;'S'
  9860  2835  344C               	retlw	76	;'L'
  9861  2836  344F               	retlw	79	;'O'
  9862  2837  3454               	retlw	84	;'T'
  9863  2838  3420               	retlw	32	;' '
  9864  2839  3400               	retlw	0
  9865                           
  9866                           	psect	stringtext10
  9867  283A                     __pstringtext10:	
  9868  283A                     STR_20:	
  9869  283A  3424               	retlw	36	;'$'
  9870  283B  3424               	retlw	36	;'$'
  9871  283C  3424               	retlw	36	;'$'
  9872  283D  3420               	retlw	32	;' '
  9873  283E  3400               	retlw	0
  9874                           
  9875                           	psect	stringtext11
  9876  283F                     __pstringtext11:	
  9877  283F                     STR_19:	
  9878  283F  344C               	retlw	76	;'L'
  9879  2840  344F               	retlw	79	;'O'
  9880  2841  3443               	retlw	67	;'C'
  9881  2842  344B               	retlw	75	;'K'
  9882  2843  3400               	retlw	0
  9883                           
  9884                           	psect	stringtext12
  9885  2844                     __pstringtext12:	
  9886  2844                     STR_18:	
  9887  2844  344F               	retlw	79	;'O'
  9888  2845  3450               	retlw	80	;'P'
  9889  2846  3445               	retlw	69	;'E'
  9890  2847  344E               	retlw	78	;'N'
  9891  2848  3400               	retlw	0
  9892                           
  9893                           	psect	stringtext13
  9894  2849                     __pstringtext13:	
  9895  2849                     STR_14:	
  9896  2849  3450               	retlw	80	;'P'
  9897  284A  3445               	retlw	69	;'E'
  9898  284B  3457               	retlw	87	;'W'
  9899  284C  3420               	retlw	32	;' '
  9900  284D  3400               	retlw	0
  9901                           
  9902                           	psect	stringtext14
  9903  284E                     __pstringtext14:	
  9904  284E                     STR_8:	
  9905  284E  344E               	retlw	78	;'N'
  9906  284F  3455               	retlw	85	;'U'
  9907  2850  344C               	retlw	76	;'L'
  9908  2851  344C               	retlw	76	;'L'
  9909  2852  3400               	retlw	0
  9910                           
  9911                           	psect	stringtext15
  9912  2853                     __pstringtext15:	
  9913  2853                     STR_4:	
  9914  2853  344D               	retlw	77	;'M'
  9915  2854  3445               	retlw	69	;'E'
  9916  2855  344E               	retlw	78	;'N'
  9917  2856  3455               	retlw	85	;'U'
  9918  2857  3400               	retlw	0
  9919                           
  9920                           	psect	stringtext16
  9921  2858                     __pstringtext16:	
  9922  2858                     STR_3:	
  9923  2858  3420               	retlw	32	;' '
  9924  2859  3420               	retlw	32	;' '
  9925  285A  3420               	retlw	32	;' '
  9926  285B  3420               	retlw	32	;' '
  9927  285C  3400               	retlw	0
  9928                           
  9929                           	psect	stringtext17
  9930  285D                     __pstringtext17:	
  9931  285D                     STR_2:	
  9932  285D  3444               	retlw	68	;'D'
  9933  285E  344F               	retlw	79	;'O'
  9934  285F  3457               	retlw	87	;'W'
  9935  2860  344E               	retlw	78	;'N'
  9936  2861  3400               	retlw	0
  9937                           
  9938                           	psect	stringtext18
  9939  2862                     __pstringtext18:	
  9940  2862                     STR_1:	
  9941  2862  3420               	retlw	32	;' '
  9942  2863  3420               	retlw	32	;' '
  9943  2864  3455               	retlw	85	;'U'
  9944  2865  3450               	retlw	80	;'P'
  9945  2866  3400               	retlw	0
  9946                           
  9947                           	psect	stringtext19
  9948  2867                     __pstringtext19:	
  9949  2867                     STR_15:	
  9950  2867  3425               	retlw	37	;'%'
  9951  2868  3434               	retlw	52	;'4'
  9952  2869  3464               	retlw	100	;'d'
  9953  286A  3400               	retlw	0
  9954                           
  9955                           	psect	stringtext20
  9956  0000                     __pstringtext20:	
  9957  2802                     
  9958                           ; #config settings
  9959  0000                     
  9960                           	psect	cinit
  9961  0018                     start_initialization:	
  9962  0018                     __initialization:		;BIGRAM
  9963                           
  9964                           ; Initialize objects allocated to BIGRAM
  9965  0018  3000               	movlw	low __pidataBIGRAM
  9966  0019  0084               	movwf	4
  9967  001A  3097               	movlw	(high __pidataBIGRAM)| (0+128)
  9968  001B  0085               	movwf	5
  9969  001C  30F0               	movlw	low (0+9968)
  9970  001D  0086               	movwf	6
  9971  001E  3026               	movlw	high (0+9968)
  9972  001F  0087               	movwf	7
  9973  0020  3001               	movlw	1
  9974  0021  00FF               	movwf	btemp+1
  9975  0022  3000               	movlw	0
  9976  0023  31A7  273B  3180   	fcall	init_ram
  9977                           
  9978                           ; Initialize objects allocated to BANK1
  9979  0026  30D6               	movlw	low __pidataBANK1
  9980  0027  0084               	movwf	4
  9981  0028  30A6               	movlw	(high __pidataBANK1)| (0+128)
  9982  0029  0085               	movwf	5
  9983  002A  30DA               	movlw	low __pdataBANK1
  9984  002B  0086               	movwf	6
  9985  002C  3000               	movlw	high __pdataBANK1
  9986  002D  0087               	movwf	7
  9987  002E  3000               	movlw	0
  9988  002F  00FF               	movwf	btemp+1
  9989  0030  300A               	movlw	10
  9990  0031  31A7  273B  3180   	fcall	init_ram
  9991                           
  9992                           ; Initialize objects allocated to BANK2
  9993  0034  30FE               	movlw	low __pidataBANK2
  9994  0035  0084               	movwf	4
  9995  0036  3099               	movlw	(high __pidataBANK2)| (0+128)
  9996  0037  0085               	movwf	5
  9997  0038  3047               	movlw	low __pdataBANK2
  9998  0039  0086               	movwf	6
  9999  003A  3001               	movlw	high __pdataBANK2
 10000  003B  0087               	movwf	7
 10001  003C  3000               	movlw	0
 10002  003D  00FF               	movwf	btemp+1
 10003  003E  3026               	movlw	38
 10004  003F  31A7  273B  3180   	fcall	init_ram
 10005                           
 10006                           ; Initialize objects allocated to BANK3
 10007  0042  30B6               	movlw	low __pidataBANK3
 10008  0043  0084               	movwf	4
 10009  0044  3099               	movlw	(high __pidataBANK3)| (0+128)
 10010  0045  0085               	movwf	5
 10011  0046  30A0               	movlw	low __pdataBANK3
 10012  0047  0086               	movwf	6
 10013  0048  3001               	movlw	high __pdataBANK3
 10014  0049  0087               	movwf	7
 10015  004A  3000               	movlw	0
 10016  004B  00FF               	movwf	btemp+1
 10017  004C  3023               	movlw	35
 10018  004D  31A7  273B  3180   	fcall	init_ram
 10019                           
 10020                           ; Initialize objects allocated to BANK5
 10021  0050  30AB               	movlw	low __pidataBANK5
 10022  0051  0084               	movwf	4
 10023  0052  309B               	movlw	(high __pidataBANK5)| (0+128)
 10024  0053  0085               	movwf	5
 10025  0054  30A0               	movlw	low __pdataBANK5
 10026  0055  0086               	movwf	6
 10027  0056  3002               	movlw	high __pdataBANK5
 10028  0057  0087               	movwf	7
 10029  0058  3000               	movlw	0
 10030  0059  00FF               	movwf	btemp+1
 10031  005A  3038               	movlw	56
 10032  005B  31A7  273B  3180   	fcall	init_ram
 10033                           
 10034                           ; Initialize objects allocated to BANK6
 10035  005E  3073               	movlw	low __pidataBANK6
 10036  005F  0084               	movwf	4
 10037  0060  309B               	movlw	(high __pidataBANK6)| (0+128)
 10038  0061  0085               	movwf	5
 10039  0062  3020               	movlw	low __pdataBANK6
 10040  0063  0086               	movwf	6
 10041  0064  3003               	movlw	high __pdataBANK6
 10042  0065  0087               	movwf	7
 10043  0066  3000               	movlw	0
 10044  0067  00FF               	movwf	btemp+1
 10045  0068  3038               	movlw	56
 10046  0069  31A7  273B  3180   	fcall	init_ram
 10047                           
 10048                           ; Clear objects allocated to COMMON
 10049  006C  01FC               	clrf	__pbssCOMMON& (0+127)
 10050                           
 10051                           ; Clear objects allocated to BANK1
 10052  006D  30A0               	movlw	low __pbssBANK1
 10053  006E  0084               	movwf	4
 10054  006F  3000               	movlw	high __pbssBANK1
 10055  0070  0085               	movwf	5
 10056  0071  303A               	movlw	58
 10057  0072  00FE               	movwf	btemp
 10058  0073  3000               	movlw	0
 10059  0074  00FF               	movwf	btemp+1
 10060  0075  31A7  272F  3180   	fcall	clear_ram0
 10061                           
 10062                           ; Clear objects allocated to BANK2
 10063  0078  3020               	movlw	low __pbssBANK2
 10064  0079  0084               	movwf	4
 10065  007A  3001               	movlw	high __pbssBANK2
 10066  007B  0085               	movwf	5
 10067  007C  3027               	movlw	39
 10068  007D  00FE               	movwf	btemp
 10069  007E  3000               	movlw	0
 10070  007F  00FF               	movwf	btemp+1
 10071  0080  31A7  272F  3180   	fcall	clear_ram0
 10072                           
 10073                           ; Clear objects allocated to BANK3
 10074  0083  30C3               	movlw	low __pbssBANK3
 10075  0084  0084               	movwf	4
 10076  0085  3001               	movlw	high __pbssBANK3
 10077  0086  0085               	movwf	5
 10078  0087  3020               	movlw	32
 10079  0088  00FE               	movwf	btemp
 10080  0089  3000               	movlw	0
 10081  008A  00FF               	movwf	btemp+1
 10082  008B  31A7  272F  3180   	fcall	clear_ram0
 10083                           
 10084                           ; Clear objects allocated to BANK4
 10085  008E  3020               	movlw	low __pbssBANK4
 10086  008F  0084               	movwf	4
 10087  0090  3002               	movlw	high __pbssBANK4
 10088  0091  0085               	movwf	5
 10089  0092  304C               	movlw	76
 10090  0093  00FE               	movwf	btemp
 10091  0094  3000               	movlw	0
 10092  0095  00FF               	movwf	btemp+1
 10093  0096  31A7  272F  3180   	fcall	clear_ram0
 10094                           
 10095                           ; Clear objects allocated to BANK7
 10096  0099  30A0               	movlw	low __pbssBANK7
 10097  009A  0084               	movwf	4
 10098  009B  3003               	movlw	high __pbssBANK7
 10099  009C  0085               	movwf	5
 10100  009D  301E               	movlw	30
 10101  009E  00FE               	movwf	btemp
 10102  009F  3000               	movlw	0
 10103  00A0  00FF               	movwf	btemp+1
 10104  00A1  31A7  272F         	fcall	clear_ram0
 10105  00A3                     end_of_initialization:	
 10106                           ;End of C runtime variable initialization code
 10107                           
 10108  00A3                     __end_of__initialization:	
 10109  00A3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10110  00A4  0020               	movlb	0
 10111  00A5  3196  2E16         	ljmp	_main	;jump to C main() function
 10112                           
 10113                           	psect	bssCOMMON
 10114  007C                     __pbssCOMMON:	
 10115  007C                     _badge_locked:	
 10116  007C                     	ds	1
 10117                           
 10118                           	psect	bssBANK1
 10119  00A0                     __pbssBANK1:	
 10120  00A0                     _locked_leds:	
 10121  00A0                     	ds	2
 10122  00A2                     _locked_locking_leds_idx:	
 10123  00A2                     	ds	2
 10124  00A4                     _flashy_option_size:	
 10125  00A4                     	ds	2
 10126  00A6                     _flashy_option_idx:	
 10127  00A6                     	ds	2
 10128  00A8                     _deaths:	
 10129  00A8                     	ds	2
 10130  00AA                     _flashy_scroll_rate:	
 10131  00AA                     	ds	2
 10132  00AC                     _flashy_sparkle_rate:	
 10133  00AC                     	ds	2
 10134  00AE                     _flashy_leds_idx:	
 10135  00AE                     	ds	2
 10136  00B0                     _menu_option_size:	
 10137  00B0                     	ds	2
 10138  00B2                     _menu_option_idx:	
 10139  00B2                     	ds	2
 10140  00B4                     _currentTask:	
 10141  00B4                     	ds	2
 10142  00B6                     _TMR0_InterruptHandler:	
 10143  00B6                     	ds	2
 10144  00B8                     _timer0ReloadVal16bit:	
 10145  00B8                     	ds	2
 10146  00BA                     _TMR4_InterruptHandler:	
 10147  00BA                     	ds	2
 10148  00BC                     _TMR2_InterruptHandler:	
 10149  00BC                     	ds	2
 10150  00BE                     _menu_task:	
 10151  00BE                     	ds	13
 10152  00CB                     _flashy_task:	
 10153  00CB                     	ds	13
 10154  00D8                     _secret_value:	
 10155  00D8                     	ds	2
 10156                           
 10157                           	psect	dataBANK1
 10158  00DA                     __pdataBANK1:	
 10159  00DA                     _randx:	
 10160  00DA                     	ds	4
 10161  00DE                     _locked_lock_base_leds:	
 10162  00DE                     	ds	2
 10163  00E0                     _FLASHY_TEXT_SECRET_TEST:	
 10164  00E0                     	ds	2
 10165  00E2                     _FLASHY_TEXT:	
 10166  00E2                     	ds	2
 10167                           
 10168                           	psect	bssBANK2
 10169  0120                     __pbssBANK2:	
 10170  0120                     _secret_task:	
 10171  0120                     	ds	13
 10172  012D                     _locked_task:	
 10173  012D                     	ds	13
 10174  013A                     _slot_task:	
 10175  013A                     	ds	13
 10176                           
 10177                           	psect	dataBANK2
 10178  0147                     __pdataBANK2:	
 10179  0147                     _locked_locking_leds:	
 10180  0147                     	ds	12
 10181  0153                     _flashy_option:	
 10182  0153                     	ds	8
 10183  015B                     _menu_option:	
 10184  015B                     	ds	8
 10185  0163                     marquee@F14035:	
 10186  0163                     	ds	5
 10187  0168                     marquee_speedy@F14026:	
 10188  0168                     	ds	5
 10189                           
 10190                           	psect	bssBANK3
 10191  01C3                     __pbssBANK3:	
 10192  01C3                     _badge_inst:	
 10193  01C3                     	ds	18
 10194  01D5                     _menu_TaskData:	
 10195  01D5                     	ds	14
 10196                           
 10197                           	psect	dataBANK3
 10198  01A0                     __pdataBANK3:	
 10199  01A0                     _menu_options_leds:	
 10200  01A0                     	ds	10
 10201  01AA                     _secret_inputs:	
 10202  01AA                     	ds	25
 10203                           
 10204                           	psect	bssBANK4
 10205  0220                     __pbssBANK4:	
 10206  0220                     _schedulerInst:	
 10207  0220                     	ds	34
 10208  0242                     _secret_TaskData:	
 10209  0242                     	ds	14
 10210  0250                     _locked_TaskData:	
 10211  0250                     	ds	14
 10212  025E                     _slot_TaskData:	
 10213  025E                     	ds	14
 10214                           
 10215                           	psect	dataBANK5
 10216  02A0                     __pdataBANK5:	
 10217  02A0                     _roundabout_leds_inverse:	
 10218  02A0                     	ds	28
 10219  02BC                     _roundabout_leds:	
 10220  02BC                     	ds	28
 10221                           
 10222                           	psect	dataBANK6
 10223  0320                     __pdataBANK6:	
 10224  0320                     _curtain_leds_inverse:	
 10225  0320                     	ds	28
 10226  033C                     _curtain_leds:	
 10227  033C                     	ds	28
 10228                           
 10229                           	psect	bssBANK7
 10230  03A0                     __pbssBANK7:	
 10231  03A0                     _flashy_TaskData:	
 10232  03A0                     	ds	30
 10233                           
 10234                           	psect	inittext
 10235  273B                     init_ram:	
 10236  273B  00FE               	movwf	126
 10237  273C                     initloop:	
 10238  273C  0012               	moviw fsr0++
 10239  273D  001E               	movwi fsr1++
 10240  273E  3001               	movlw	1
 10241  273F  02FE               	subwf	126,f
 10242  2740  3000               	movlw	0
 10243  2741  3BFF               	subwfb	127,f
 10244  2742  087F               	movf	127,w
 10245  2743  047E               	iorwf	126,w
 10246  2744  1903               	btfsc	3,2
 10247  2745  3400               	retlw	0
 10248  2746  2F3C               	goto	initloop
 10249                           
 10250                           	psect	clrtext
 10251  272F                     clear_ram0:	
 10252                           ;	Called with FSR0 containing the base address, and
 10253                           ;	btemp/btemp+1 has the size to clear
 10254                           
 10255  272F  0064               	clrwdt	;clear the watchdog before getting into this loop
 10256  2730                     clrloop0:	
 10257  2730  0180               	clrf	0	;clear RAM location pointed to by FSR
 10258  2731  3101               	addfsr 0,1
 10259  2732  3001               	movlw	1
 10260  2733  02FE               	subwf	126,f
 10261  2734  3000               	movlw	0
 10262  2735  3BFF               	subwfb	127,f
 10263  2736  087F               	movf	127,w
 10264  2737  047E               	iorwf	126,w
 10265  2738  1903               	btfsc	3,2
 10266  2739  3400               	retlw	0	;all done for this memory range, return
 10267  273A  2F30               	goto	clrloop0	;have we reached the end yet?
 10268                           
 10269                           	psect	cstackBANK1
 10270  00E4                     __pcstackBANK1:	
 10271  00E4                     ??_main:	
 10272                           
 10273                           ; 1 bytes @ 0x0
 10274  00E4                     	ds	1
 10275                           
 10276                           	psect	cstackCOMMON
 10277  0070                     __pcstackCOMMON:	
 10278  0070                     ?_isdigit:	
 10279  0070                     ?_TMR2_StartTimer:	
 10280                           ; 1 bit 
 10281                           
 10282  0070                     ?_TMR4_StartTimer:	
 10283                           ; 1 bytes @ 0x0
 10284                           
 10285  0070                     ?_PIN_MANAGER_Initialize:	
 10286                           ; 1 bytes @ 0x0
 10287                           
 10288  0070                     ?_OSCILLATOR_Initialize:	
 10289                           ; 1 bytes @ 0x0
 10290                           
 10291  0070                     ?_WDT_Initialize:	
 10292                           ; 1 bytes @ 0x0
 10293                           
 10294  0070                     ?_PWM2_Initialize:	
 10295                           ; 1 bytes @ 0x0
 10296                           
 10297  0070                     ?_TMR0_Initialize:	
 10298                           ; 1 bytes @ 0x0
 10299                           
 10300  0070                     ?_TMR0_DefaultInterruptHandler:	
 10301                           ; 1 bytes @ 0x0
 10302                           
 10303  0070                     ??_TMR0_DefaultInterruptHandler:	
 10304                           ; 1 bytes @ 0x0
 10305                           
 10306  0070                     ?_TMR0_StartTimer:	
 10307                           ; 1 bytes @ 0x0
 10308                           
 10309  0070                     ?_TMR0_CallBack:	
 10310                           ; 1 bytes @ 0x0
 10311                           
 10312  0070                     ??_TMR0_CallBack:	
 10313                           ; 1 bytes @ 0x0
 10314                           
 10315  0070                     ?_nullifyBadge_segDisplayRegister:	
 10316                           ; 1 bytes @ 0x0
 10317                           
 10318  0070                     ?_nullifyBadge_segDisplayErase:	
 10319                           ; 1 bytes @ 0x0
 10320                           
 10321  0070                     ?_nullifyBadge_segDisplayForceUpdate:	
 10322                           ; 1 bytes @ 0x0
 10323                           
 10324  0070                     ?_nullifyBadge_platformInit:	
 10325                           ; 1 bytes @ 0x0
 10326                           
 10327  0070                     ?_displayL2_Initialize:	
 10328                           ; 1 bytes @ 0x0
 10329                           
 10330  0070                     ?_displayL2_ForceUpdate:	
 10331                           ; 1 bytes @ 0x0
 10332                           
 10333  0070                     ?_displayL2_EraseSegDisplay:	
 10334                           ; 1 bytes @ 0x0
 10335                           
 10336  0070                     ?_displayL2_ClrUserLeds:	
 10337                           ; 1 bytes @ 0x0
 10338                           
 10339  0070                     ?_displayL1_Update:	
 10340                           ; 1 bytes @ 0x0
 10341                           
 10342  0070                     ?_SPI1_Initialize:	
 10343                           ; 1 bytes @ 0x0
 10344                           
 10345  0070                     ?_SPI1_Exchange8bit:	
 10346                           ; 1 bytes @ 0x0
 10347                           
 10348  0070                     ?_PWM5_Initialize:	
 10349                           ; 1 bytes @ 0x0
 10350                           
 10351  0070                     ?_PWM6_Initialize:	
 10352                           ; 1 bytes @ 0x0
 10353                           
 10354  0070                     ?_PWM1_Initialize:	
 10355                           ; 1 bytes @ 0x0
 10356                           
 10357  0070                     ?_TMR2_Initialize:	
 10358                           ; 1 bytes @ 0x0
 10359                           
 10360  0070                     ?_TMR4_Initialize:	
 10361                           ; 1 bytes @ 0x0
 10362                           
 10363  0070                     ?_SYSTEM_Initialize:	
 10364                           ; 1 bytes @ 0x0
 10365                           
 10366  0070                     ?_TMR0_ISR:	
 10367                           ; 1 bytes @ 0x0
 10368                           
 10369  0070                     ??_TMR0_ISR:	
 10370                           ; 1 bytes @ 0x0
 10371                           
 10372  0070                     ?_INTERRUPT_InterruptManager:	
 10373                           ; 1 bytes @ 0x0
 10374                           
 10375  0070                     ??_INTERRUPT_InterruptManager:	
 10376                           ; 1 bytes @ 0x0
 10377                           
 10378  0070                     ?_scheduler_Init:	
 10379                           ; 1 bytes @ 0x0
 10380                           
 10381  0070                     ?_schedulerExecute:	
 10382                           ; 1 bytes @ 0x0
 10383                           
 10384  0070                     ?_led_rand:	
 10385                           ; 1 bytes @ 0x0
 10386                           
 10387  0070                     ?_main:	
 10388                           ; 1 bytes @ 0x0
 10389                           
 10390  0070                     ?_nullifyBadge_userLedsRegister:	
 10391                           ; 1 bytes @ 0x0
 10392                           
 10393  0070                     ?_nullifyBadge_userLedsClr:	
 10394                           ; 1 bytes @ 0x0
 10395                           
 10396  0070                     ?_nullifyBadge_buttonsGet:	
 10397                           ; 1 bytes @ 0x0
 10398                           
 10399  0070                     ?_nullifyBadge_irGet:	
 10400                           ; 1 bytes @ 0x0
 10401                           
 10402  0070                     ?_nullifyBadge_irTxRegister:	
 10403                           ; 1 bytes @ 0x0
 10404                           
 10405  0070                     ?_nullifyBadge_irTxRelease:	
 10406                           ; 1 bytes @ 0x0
 10407                           
 10408  0070                     ?_nullifyBadge_irTxSet:	
 10409                           ; 1 bytes @ 0x0
 10410                           
 10411  0070                     ?_nullifyBadge_irTxClr:	
 10412                           ; 1 bytes @ 0x0
 10413                           
 10414  0070                     ?_displayL1_Initialize:	
 10415                           ; 1 bytes @ 0x0
 10416                           
 10417  0070                     ?_locked_lock_leds:	
 10418                           ; 1 bytes @ 0x0
 10419                           
 10420  0070                     ?_locked_unlock_leds:	
 10421                           ; 2 bytes @ 0x0
 10422                           
 10423                           
 10424                           ; 2 bytes @ 0x0
 10425  0070                     	ds	1
 10426  0071                     ??_TMR2_StartTimer:	
 10427  0071                     ??_TMR4_StartTimer:	
 10428                           ; 1 bytes @ 0x1
 10429                           
 10430  0071                     ??_PIN_MANAGER_Initialize:	
 10431                           ; 1 bytes @ 0x1
 10432                           
 10433  0071                     ??_OSCILLATOR_Initialize:	
 10434                           ; 1 bytes @ 0x1
 10435                           
 10436  0071                     ??_WDT_Initialize:	
 10437                           ; 1 bytes @ 0x1
 10438                           
 10439  0071                     ??_PWM2_Initialize:	
 10440                           ; 1 bytes @ 0x1
 10441                           
 10442  0071                     ?_TMR0_SetInterruptHandler:	
 10443                           ; 1 bytes @ 0x1
 10444                           
 10445  0071                     ??_TMR0_StartTimer:	
 10446                           ; 1 bytes @ 0x1
 10447                           
 10448  0071                     ??_nullifyBadge_segDisplayRegister:	
 10449                           ; 1 bytes @ 0x1
 10450                           
 10451  0071                     ?_memset:	
 10452                           ; 1 bytes @ 0x1
 10453                           
 10454  0071                     ?_secret_clear:	
 10455                           ; 1 bytes @ 0x1
 10456                           
 10457  0071                     ??_isdigit:	
 10458                           ; 1 bytes @ 0x1
 10459                           
 10460  0071                     ??_SPI1_Initialize:	
 10461                           ; 1 bytes @ 0x1
 10462                           
 10463  0071                     ??_SPI1_Exchange8bit:	
 10464                           ; 1 bytes @ 0x1
 10465                           
 10466  0071                     ??_PWM5_Initialize:	
 10467                           ; 1 bytes @ 0x1
 10468                           
 10469  0071                     ?_PWM5_LoadDutyValue:	
 10470                           ; 1 bytes @ 0x1
 10471                           
 10472  0071                     ??_PWM6_Initialize:	
 10473                           ; 1 bytes @ 0x1
 10474                           
 10475  0071                     ?_PWM6_LoadDutyValue:	
 10476                           ; 1 bytes @ 0x1
 10477                           
 10478  0071                     ??_PWM1_Initialize:	
 10479                           ; 1 bytes @ 0x1
 10480                           
 10481  0071                     ?_PWM1_LoadDutyValue:	
 10482                           ; 1 bytes @ 0x1
 10483                           
 10484  0071                     ??_TMR2_Initialize:	
 10485                           ; 1 bytes @ 0x1
 10486                           
 10487  0071                     ??_TMR4_Initialize:	
 10488                           ; 1 bytes @ 0x1
 10489                           
 10490  0071                     ?_PWM2_LoadDutyValue:	
 10491                           ; 1 bytes @ 0x1
 10492                           
 10493  0071                     ??_scheduler_Init:	
 10494                           ; 1 bytes @ 0x1
 10495                           
 10496  0071                     ?_scheduler_TaskInit:	
 10497                           ; 1 bytes @ 0x1
 10498                           
 10499  0071                     ??_nullifyBadge_userLedsRegister:	
 10500                           ; 1 bytes @ 0x1
 10501                           
 10502  0071                     ??_nullifyBadge_buttonsGet:	
 10503                           ; 1 bytes @ 0x1
 10504                           
 10505  0071                     ??_nullifyBadge_irGet:	
 10506                           ; 1 bytes @ 0x1
 10507                           
 10508  0071                     ??_nullifyBadge_irTxRegister:	
 10509                           ; 1 bytes @ 0x1
 10510                           
 10511  0071                     ??_nullifyBadge_irTxRelease:	
 10512                           ; 1 bytes @ 0x1
 10513                           
 10514  0071                     ??_nullifyBadge_irTxSet:	
 10515                           ; 1 bytes @ 0x1
 10516                           
 10517  0071                     ??_nullifyBadge_irTxClr:	
 10518                           ; 1 bytes @ 0x1
 10519                           
 10520  0071                     ?_displayL1_SetUserLed:	
 10521                           ; 1 bytes @ 0x1
 10522                           
 10523  0071                     ??_locked_lock_leds:	
 10524                           ; 1 bytes @ 0x1
 10525                           
 10526  0071                     ??_locked_unlock_leds:	
 10527                           ; 1 bytes @ 0x1
 10528                           
 10529  0071                     ?___bmul:	
 10530                           ; 1 bytes @ 0x1
 10531                           
 10532  0071                     ?_strlen:	
 10533                           ; 1 bytes @ 0x1
 10534                           
 10535  0071                     ?_displayCharReverse:	
 10536                           ; 2 bytes @ 0x1
 10537                           
 10538  0071                     ?_TMR0_Read16bitTimer:	
 10539                           ; 2 bytes @ 0x1
 10540                           
 10541  0071                     ?_locked_get_lock_leds:	
 10542                           ; 2 bytes @ 0x1
 10543                           
 10544  0071                     ?_locked_get_unlock_leds:	
 10545                           ; 2 bytes @ 0x1
 10546                           
 10547  0071                     ?___wmul:	
 10548                           ; 2 bytes @ 0x1
 10549                           
 10550  0071                     ?___lwdiv:	
 10551                           ; 2 bytes @ 0x1
 10552                           
 10553  0071                     ?___lmul:	
 10554                           ; 2 bytes @ 0x1
 10555                           
 10556  0071                     SPI1_Exchange8bit@data:	
 10557                           ; 4 bytes @ 0x1
 10558                           
 10559  0071                     PIN_MANAGER_Initialize@state:	
 10560                           ; 1 bytes @ 0x1
 10561                           
 10562  0071                     nullifyBadge_segDisplayRegister@badge:	
 10563                           ; 1 bytes @ 0x1
 10564                           
 10565  0071                     nullifyBadge_userLedsRegister@badge:	
 10566                           ; 1 bytes @ 0x1
 10567                           
 10568  0071                     nullifyBadge_irTxRegister@badge:	
 10569                           ; 1 bytes @ 0x1
 10570                           
 10571  0071                     ___bmul@multiplicand:	
 10572                           ; 1 bytes @ 0x1
 10573                           
 10574  0071                     _isdigit$3092:	
 10575                           ; 1 bytes @ 0x1
 10576                           
 10577  0071                     PWM5_LoadDutyValue@dutyValue:	
 10578                           ; 1 bytes @ 0x1
 10579                           
 10580  0071                     PWM6_LoadDutyValue@dutyValue:	
 10581                           ; 2 bytes @ 0x1
 10582                           
 10583  0071                     PWM1_LoadDutyValue@dutyValue:	
 10584                           ; 2 bytes @ 0x1
 10585                           
 10586  0071                     PWM2_LoadDutyValue@dutyValue:	
 10587                           ; 2 bytes @ 0x1
 10588                           
 10589  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
 10590                           ; 2 bytes @ 0x1
 10591                           
 10592  0071                     scheduler_TaskInit@task:	
 10593                           ; 2 bytes @ 0x1
 10594                           
 10595  0071                     displayL1_SetUserLed@userLedVect:	
 10596                           ; 2 bytes @ 0x1
 10597                           
 10598  0071                     displayCharReverse@cVal:	
 10599                           ; 2 bytes @ 0x1
 10600                           
 10601  0071                     secret_clear@data:	
 10602                           ; 2 bytes @ 0x1
 10603                           
 10604  0071                     ___wmul@multiplier:	
 10605                           ; 2 bytes @ 0x1
 10606                           
 10607  0071                     ___lwdiv@divisor:	
 10608                           ; 2 bytes @ 0x1
 10609                           
 10610  0071                     memset@c:	
 10611                           ; 2 bytes @ 0x1
 10612                           
 10613  0071                     strlen@s:	
 10614                           ; 2 bytes @ 0x1
 10615                           
 10616  0071                     ___lmul@multiplier:	
 10617                           ; 2 bytes @ 0x1
 10618                           
 10619                           
 10620                           ; 4 bytes @ 0x1
 10621  0071                     	ds	1
 10622  0072                     ?_SPI1_Exchange8bitBuffer:	
 10623  0072                     ??___bmul:	
 10624                           ; 1 bytes @ 0x2
 10625                           
 10626  0072                     SPI1_Exchange8bitBuffer@bufLen:	
 10627                           ; 1 bytes @ 0x2
 10628                           
 10629  0072                     scheduler_Init@scheduler:	
 10630                           ; 1 bytes @ 0x2
 10631                           
 10632  0072                     nullifyBadge_irTxRelease@badge:	
 10633                           ; 1 bytes @ 0x2
 10634                           
 10635  0072                     isdigit@c:	
 10636                           ; 1 bytes @ 0x2
 10637                           
 10638                           
 10639                           ; 1 bytes @ 0x2
 10640  0072                     	ds	1
 10641  0073                     ??_TMR0_Initialize:	
 10642  0073                     ??_TMR0_SetInterruptHandler:	
 10643                           ; 1 bytes @ 0x3
 10644                           
 10645  0073                     ??_strlen:	
 10646                           ; 1 bytes @ 0x3
 10647                           
 10648  0073                     ??_displayCharReverse:	
 10649                           ; 1 bytes @ 0x3
 10650                           
 10651  0073                     ??_secret_clear:	
 10652                           ; 1 bytes @ 0x3
 10653                           
 10654  0073                     ??_PWM5_LoadDutyValue:	
 10655                           ; 1 bytes @ 0x3
 10656                           
 10657  0073                     ??_PWM6_LoadDutyValue:	
 10658                           ; 1 bytes @ 0x3
 10659                           
 10660  0073                     ??_PWM1_LoadDutyValue:	
 10661                           ; 1 bytes @ 0x3
 10662                           
 10663  0073                     ??_SYSTEM_Initialize:	
 10664                           ; 1 bytes @ 0x3
 10665                           
 10666  0073                     ??_PWM2_LoadDutyValue:	
 10667                           ; 1 bytes @ 0x3
 10668                           
 10669  0073                     ??_TMR0_Read16bitTimer:	
 10670                           ; 1 bytes @ 0x3
 10671                           
 10672  0073                     ??_scheduler_TaskInit:	
 10673                           ; 1 bytes @ 0x3
 10674                           
 10675  0073                     ??_displayL1_SetUserLed:	
 10676                           ; 1 bytes @ 0x3
 10677                           
 10678  0073                     ??_locked_get_lock_leds:	
 10679                           ; 1 bytes @ 0x3
 10680                           
 10681  0073                     ??_locked_get_unlock_leds:	
 10682                           ; 1 bytes @ 0x3
 10683                           
 10684  0073                     SPI1_Exchange8bitBuffer@dataOut:	
 10685                           ; 1 bytes @ 0x3
 10686                           
 10687  0073                     scheduler_Init@k:	
 10688                           ; 1 bytes @ 0x3
 10689                           
 10690  0073                     nullifyBadge_buttonsGet@retVal:	
 10691                           ; 1 bytes @ 0x3
 10692                           
 10693  0073                     ___bmul@product:	
 10694                           ; 1 bytes @ 0x3
 10695                           
 10696  0073                     locked_lock_leds@size:	
 10697                           ; 1 bytes @ 0x3
 10698                           
 10699  0073                     locked_get_unlock_leds@leds:	
 10700                           ; 2 bytes @ 0x3
 10701                           
 10702  0073                     ___wmul@multiplicand:	
 10703                           ; 2 bytes @ 0x3
 10704                           
 10705  0073                     ___lwdiv@dividend:	
 10706                           ; 2 bytes @ 0x3
 10707                           
 10708  0073                     memset@n:	
 10709                           ; 2 bytes @ 0x3
 10710                           
 10711                           
 10712                           ; 2 bytes @ 0x3
 10713  0073                     	ds	1
 10714  0074                     ??_SPI1_Exchange8bitBuffer:	
 10715  0074                     displayL1_SetUserLed@display:	
 10716                           ; 1 bytes @ 0x4
 10717                           
 10718  0074                     ___bmul@multiplier:	
 10719                           ; 1 bytes @ 0x4
 10720                           
 10721                           
 10722                           ; 1 bytes @ 0x4
 10723  0074                     	ds	1
 10724  0075                     ??_memset:	
 10725  0075                     ??___wmul:	
 10726                           ; 1 bytes @ 0x5
 10727                           
 10728  0075                     ??___lwdiv:	
 10729                           ; 1 bytes @ 0x5
 10730                           
 10731  0075                     locked_get_lock_leds@size:	
 10732                           ; 1 bytes @ 0x5
 10733                           
 10734  0075                     ___wmul@product:	
 10735                           ; 2 bytes @ 0x5
 10736                           
 10737  0075                     strlen@cp:	
 10738                           ; 2 bytes @ 0x5
 10739                           
 10740  0075                     ___lmul@multiplicand:	
 10741                           ; 2 bytes @ 0x5
 10742                           
 10743                           
 10744                           ; 4 bytes @ 0x5
 10745  0075                     	ds	1
 10746  0076                     ___lwdiv@counter:	
 10747  0076                     memset@p:	
 10748                           ; 1 bytes @ 0x6
 10749                           
 10750                           
 10751                           ; 1 bytes @ 0x6
 10752  0076                     	ds	1
 10753  0077                     ?_secret_check:	
 10754  0077                     SPI1_Exchange8bitBuffer@dataIn:	
 10755                           ; 1 bytes @ 0x7
 10756                           
 10757  0077                     memset@p1:	
 10758                           ; 1 bytes @ 0x7
 10759                           
 10760  0077                     locked_get_lock_leds@leds:	
 10761                           ; 1 bytes @ 0x7
 10762                           
 10763  0077                     secret_check@data:	
 10764                           ; 2 bytes @ 0x7
 10765                           
 10766  0077                     ___lwdiv@quotient:	
 10767                           ; 2 bytes @ 0x7
 10768                           
 10769                           
 10770                           ; 2 bytes @ 0x7
 10771  0077                     	ds	1
 10772  0078                     SPI1_Exchange8bitBuffer@bytesWritten:	
 10773  0078                     displayCharReverse@retValLower:	
 10774                           ; 1 bytes @ 0x8
 10775                           
 10776  0078                     TMR0_Read16bitTimer@readVal:	
 10777                           ; 1 bytes @ 0x8
 10778                           
 10779                           
 10780                           ; 2 bytes @ 0x8
 10781  0078                     	ds	1
 10782  0079                     ??_displayL1_Update:	
 10783  0079                     ??___lmul:	
 10784                           ; 1 bytes @ 0x9
 10785                           
 10786  0079                     ??___lwmod:	
 10787                           ; 1 bytes @ 0x9
 10788                           
 10789  0079                     displayCharReverse@retValUpper:	
 10790                           ; 1 bytes @ 0x9
 10791                           
 10792  0079                     secret_check@buttonPressed:	
 10793                           ; 1 bytes @ 0x9
 10794                           
 10795                           
 10796                           ; 1 bytes @ 0x9
 10797  0079                     	ds	1
 10798  007A                     TMR0_Read16bitTimer@readValLow:	
 10799  007A                     displayCharReverse@retValUpperRev:	
 10800                           ; 1 bytes @ 0xA
 10801                           
 10802  007A                     ___lwmod@counter:	
 10803                           ; 1 bytes @ 0xA
 10804                           
 10805                           
 10806                           ; 1 bytes @ 0xA
 10807  007A                     	ds	1
 10808  007B                     ??_displayL2_ForceUpdate:	
 10809  007B                     ??_displayL2_SetUserLeds:	
 10810                           ; 1 bytes @ 0xB
 10811                           
 10812  007B                     ??_displayL2_ClrUserLeds:	
 10813                           ; 1 bytes @ 0xB
 10814                           
 10815  007B                     ??_displayL1_Initialize:	
 10816                           ; 1 bytes @ 0xB
 10817                           
 10818  007B                     TMR0_Read16bitTimer@readValHigh:	
 10819                           ; 1 bytes @ 0xB
 10820                           
 10821  007B                     displayL1_Initialize@display:	
 10822                           ; 1 bytes @ 0xB
 10823                           
 10824  007B                     displayCharReverse@k:	
 10825                           ; 1 bytes @ 0xB
 10826                           
 10827  007B                     displayL2_ForceUpdate@display:	
 10828                           ; 1 bytes @ 0xB
 10829                           
 10830  007B                     displayL2_SetUserLeds@display:	
 10831                           ; 1 bytes @ 0xB
 10832                           
 10833  007B                     displayL2_ClrUserLeds@display:	
 10834                           ; 1 bytes @ 0xB
 10835                           
 10836                           
 10837                           ; 1 bytes @ 0xB
 10838  007B                     	ds	1
 10839  007C                     ??_nullifyBadge_segDisplayErase:	
 10840  007C                     ??_nullifyBadge_segDisplayPutStr:	
 10841                           ; 1 bytes @ 0xC
 10842                           
 10843  007C                     ??_nullifyBadge_segDisplayForceUpdate:	
 10844                           ; 1 bytes @ 0xC
 10845                           
 10846  007C                     ??_nullifyBadge_userLedsSet:	
 10847                           ; 1 bytes @ 0xC
 10848                           
 10849  007C                     ??_nullifyBadge_platformInit:	
 10850                           ; 1 bytes @ 0xC
 10851                           
 10852  007C                     ??_flashy_Init:	
 10853                           ; 1 bytes @ 0xC
 10854                           
 10855  007C                     ??_menu_Init:	
 10856                           ; 1 bytes @ 0xC
 10857                           
 10858  007C                     ??_slot_Init:	
 10859                           ; 1 bytes @ 0xC
 10860                           
 10861  007C                     ??_locked_Init:	
 10862                           ; 1 bytes @ 0xC
 10863                           
 10864  007C                     ??_secret_Init:	
 10865                           ; 1 bytes @ 0xC
 10866                           
 10867  007C                     ??_displayL2_Initialize:	
 10868                           ; 1 bytes @ 0xC
 10869                           
 10870  007C                     ??_displayL2_EraseSegDisplay:	
 10871                           ; 1 bytes @ 0xC
 10872                           
 10873  007C                     ??_menu_clear:	
 10874                           ; 1 bytes @ 0xC
 10875                           
 10876  007C                     ??_menu_display_option:	
 10877                           ; 1 bytes @ 0xC
 10878                           
 10879  007C                     ??_menu_run_option:	
 10880                           ; 1 bytes @ 0xC
 10881                           
 10882  007C                     ??_locked_clear:	
 10883                           ; 1 bytes @ 0xC
 10884                           
 10885  007C                     ??_scheduler_TaskRun:	
 10886                           ; 1 bytes @ 0xC
 10887                           
 10888  007C                     ??_led_rand:	
 10889                           ; 1 bytes @ 0xC
 10890                           
 10891  007C                     ??_led_circle:	
 10892                           ; 1 bytes @ 0xC
 10893                           
 10894  007C                     ??_nullifyBadge_userLedsClr:	
 10895                           ; 1 bytes @ 0xC
 10896                           
 10897  007C                     ??_flashy_display_option:	
 10898                           ; 1 bytes @ 0xC
 10899                           
 10900                           
 10901                           	psect	cstackBANK0
 10902  0020                     __pcstackBANK0:	
 10903                           ; 1 bytes @ 0xC
 10904                           
 10905  0020                     ?_displayL1_SetSegChar:	
 10906  0020                     ??_secret_check:	
 10907                           ; 1 bytes @ 0x0
 10908                           
 10909  0020                     ?___lwmod:	
 10910                           ; 1 bytes @ 0x0
 10911                           
 10912  0020                     displayL1_SetSegChar@c:	
 10913                           ; 2 bytes @ 0x0
 10914                           
 10915  0020                     ___lwmod@divisor:	
 10916                           ; 1 bytes @ 0x0
 10917                           
 10918  0020                     ___lmul@product:	
 10919                           ; 2 bytes @ 0x0
 10920                           
 10921  0020                     displayL1_Update@tmpRxBuf:	
 10922                           ; 4 bytes @ 0x0
 10923                           
 10924                           
 10925                           ; 10 bytes @ 0x0
 10926  0020                     	ds	1
 10927  0021                     displayL1_SetSegChar@charPos:	
 10928                           
 10929                           ; 1 bytes @ 0x1
 10930  0021                     	ds	1
 10931  0022                     ??_displayL1_SetSegChar:	
 10932  0022                     ___lwmod@dividend:	
 10933                           ; 1 bytes @ 0x2
 10934                           
 10935                           
 10936                           ; 2 bytes @ 0x2
 10937  0022                     	ds	1
 10938  0023                     secret_check@size:	
 10939                           
 10940                           ; 2 bytes @ 0x3
 10941  0023                     	ds	1
 10942  0024                     ?_rand:	
 10943  0024                     ?_sprintf:	
 10944                           ; 2 bytes @ 0x4
 10945                           
 10946  0024                     sprintf@f:	
 10947                           ; 2 bytes @ 0x4
 10948                           
 10949                           
 10950                           ; 2 bytes @ 0x4
 10951  0024                     	ds	1
 10952  0025                     secret_check@currents_size:	
 10953                           
 10954                           ; 2 bytes @ 0x5
 10955  0025                     	ds	1
 10956  0026                     ??_rand:	
 10957  0026                     displayL1_SetSegChar@dispDataVectBaseIdx:	
 10958                           ; 1 bytes @ 0x6
 10959                           
 10960                           
 10961                           ; 1 bytes @ 0x6
 10962  0026                     	ds	1
 10963  0027                     displayL1_SetSegChar@display:	
 10964  0027                     secret_check@inputs:	
 10965                           ; 1 bytes @ 0x7
 10966                           
 10967                           
 10968                           ; 1 bytes @ 0x7
 10969  0027                     	ds	1
 10970  0028                     ??_sprintf:	
 10971  0028                     displayL1_SetSegChar@charData:	
 10972                           ; 1 bytes @ 0x8
 10973                           
 10974  0028                     secret_check@i:	
 10975                           ; 2 bytes @ 0x8
 10976                           
 10977                           
 10978                           ; 2 bytes @ 0x8
 10979  0028                     	ds	2
 10980  002A                     ?_displayL2_PutChar:	
 10981  002A                     displayL1_Update@display:	
 10982                           ; 1 bytes @ 0xA
 10983                           
 10984  002A                     displayL2_PutChar@c:	
 10985                           ; 1 bytes @ 0xA
 10986                           
 10987                           
 10988                           ; 1 bytes @ 0xA
 10989  002A                     	ds	1
 10990  002B                     ??_displayL2_PutChar:	
 10991  002B                     ?_displayL2_SetUserLeds:	
 10992                           ; 1 bytes @ 0xB
 10993                           
 10994  002B                     nullifyBadge_segDisplayForceUpdate@badge:	
 10995                           ; 1 bytes @ 0xB
 10996                           
 10997  002B                     nullifyBadge_userLedsClr@badge:	
 10998                           ; 1 bytes @ 0xB
 10999                           
 11000  002B                     displayL2_Initialize@display:	
 11001                           ; 1 bytes @ 0xB
 11002                           
 11003  002B                     displayL2_SetUserLeds@userLedData:	
 11004                           ; 1 bytes @ 0xB
 11005                           
 11006                           
 11007                           ; 2 bytes @ 0xB
 11008  002B                     	ds	1
 11009  002C                     nullifyBadge_platformInit@badge:	
 11010  002C                     sprintf@ap:	
 11011                           ; 1 bytes @ 0xC
 11012                           
 11013                           
 11014                           ; 1 bytes @ 0xC
 11015  002C                     	ds	1
 11016  002D                     ?_nullifyBadge_userLedsSet:	
 11017  002D                     sprintf@prec:	
 11018                           ; 1 bytes @ 0xD
 11019                           
 11020  002D                     nullifyBadge_userLedsSet@userLedData:	
 11021                           ; 1 bytes @ 0xD
 11022                           
 11023                           
 11024                           ; 2 bytes @ 0xD
 11025  002D                     	ds	1
 11026  002E                     displayL2_PutChar@k:	
 11027  002E                     sprintf@flag:	
 11028                           ; 1 bytes @ 0xE
 11029                           
 11030                           
 11031                           ; 1 bytes @ 0xE
 11032  002E                     	ds	1
 11033  002F                     nullifyBadge_userLedsSet@badge:	
 11034  002F                     displayL2_PutChar@display:	
 11035                           ; 1 bytes @ 0xF
 11036                           
 11037  002F                     sprintf@val:	
 11038                           ; 1 bytes @ 0xF
 11039                           
 11040                           
 11041                           ; 2 bytes @ 0xF
 11042  002F                     	ds	1
 11043  0030                     ?_displayL2_PutStr:	
 11044  0030                     ?_led_roundabout:	
 11045                           ; 1 bytes @ 0x10
 11046                           
 11047  0030                     ?_led_curtain:	
 11048                           ; 1 bytes @ 0x10
 11049                           
 11050  0030                     ?_led_circle:	
 11051                           ; 1 bytes @ 0x10
 11052                           
 11053  0030                     led_roundabout@counter:	
 11054                           ; 1 bytes @ 0x10
 11055                           
 11056  0030                     led_curtain@counter:	
 11057                           ; 2 bytes @ 0x10
 11058                           
 11059  0030                     led_rand@spark:	
 11060                           ; 2 bytes @ 0x10
 11061                           
 11062  0030                     led_circle@count:	
 11063                           ; 2 bytes @ 0x10
 11064                           
 11065  0030                     displayL2_PutStr@str:	
 11066                           ; 2 bytes @ 0x10
 11067                           
 11068                           
 11069                           ; 2 bytes @ 0x10
 11070  0030                     	ds	1
 11071  0031                     sprintf@sp:	
 11072                           
 11073                           ; 1 bytes @ 0x11
 11074  0031                     	ds	1
 11075  0032                     ??_displayL2_PutStr:	
 11076  0032                     ??_led_roundabout:	
 11077                           ; 1 bytes @ 0x12
 11078                           
 11079  0032                     ??_led_curtain:	
 11080                           ; 1 bytes @ 0x12
 11081                           
 11082  0032                     sprintf@width:	
 11083                           ; 1 bytes @ 0x12
 11084                           
 11085                           
 11086                           ; 2 bytes @ 0x12
 11087  0032                     	ds	2
 11088  0034                     sprintf@c:	
 11089  0034                     led_roundabout@leds:	
 11090                           ; 1 bytes @ 0x14
 11091                           
 11092  0034                     led_curtain@leds:	
 11093                           ; 2 bytes @ 0x14
 11094                           
 11095                           
 11096                           ; 2 bytes @ 0x14
 11097  0034                     	ds	1
 11098  0035                     displayL2_PutStr@display:	
 11099                           
 11100                           ; 1 bytes @ 0x15
 11101  0035                     	ds	1
 11102  0036                     displayL2_PutStr@k:	
 11103  0036                     led_roundabout@size:	
 11104                           ; 1 bytes @ 0x16
 11105                           
 11106  0036                     led_curtain@size:	
 11107                           ; 2 bytes @ 0x16
 11108                           
 11109                           
 11110                           ; 2 bytes @ 0x16
 11111  0036                     	ds	1
 11112  0037                     ?_nullifyBadge_segDisplayPutStr:	
 11113  0037                     displayL2_EraseSegDisplay@display:	
 11114                           ; 1 bytes @ 0x17
 11115                           
 11116  0037                     nullifyBadge_segDisplayPutStr@str:	
 11117                           ; 1 bytes @ 0x17
 11118                           
 11119                           
 11120                           ; 2 bytes @ 0x17
 11121  0037                     	ds	1
 11122  0038                     nullifyBadge_segDisplayErase@badge:	
 11123                           
 11124                           ; 1 bytes @ 0x18
 11125  0038                     	ds	1
 11126  0039                     ?_flashy_Init:	
 11127  0039                     ?_menu_Init:	
 11128                           ; 1 bytes @ 0x19
 11129                           
 11130  0039                     ?_slot_Init:	
 11131                           ; 1 bytes @ 0x19
 11132                           
 11133  0039                     ?_locked_Init:	
 11134                           ; 1 bytes @ 0x19
 11135                           
 11136  0039                     ?_secret_Init:	
 11137                           ; 1 bytes @ 0x19
 11138                           
 11139  0039                     ?_menu_clear:	
 11140                           ; 1 bytes @ 0x19
 11141                           
 11142  0039                     ?_locked_clear:	
 11143                           ; 1 bytes @ 0x19
 11144                           
 11145  0039                     nullifyBadge_segDisplayPutStr@badge:	
 11146                           ; 1 bytes @ 0x19
 11147                           
 11148  0039                     menu_Init@taskData:	
 11149                           ; 1 bytes @ 0x19
 11150                           
 11151  0039                     menu_clear@data:	
 11152                           ; 2 bytes @ 0x19
 11153                           
 11154  0039                     flashy_Init@taskData:	
 11155                           ; 2 bytes @ 0x19
 11156                           
 11157  0039                     locked_Init@taskData:	
 11158                           ; 2 bytes @ 0x19
 11159                           
 11160  0039                     locked_clear@data:	
 11161                           ; 2 bytes @ 0x19
 11162                           
 11163  0039                     secret_Init@taskData:	
 11164                           ; 2 bytes @ 0x19
 11165                           
 11166  0039                     slot_Init@taskData:	
 11167                           ; 2 bytes @ 0x19
 11168                           
 11169                           
 11170                           ; 2 bytes @ 0x19
 11171  0039                     	ds	1
 11172  003A                     ?_marquee_speedy:	
 11173  003A                     ?_marquee:	
 11174                           ; 1 bytes @ 0x1A
 11175                           
 11176  003A                     marquee_speedy@string:	
 11177                           ; 1 bytes @ 0x1A
 11178                           
 11179  003A                     marquee@string:	
 11180                           ; 2 bytes @ 0x1A
 11181                           
 11182                           
 11183                           ; 2 bytes @ 0x1A
 11184  003A                     	ds	1
 11185  003B                     ?_menu_run_option:	
 11186  003B                     menu_Init@data:	
 11187                           ; 1 bytes @ 0x1B
 11188                           
 11189  003B                     menu_run_option@data:	
 11190                           ; 2 bytes @ 0x1B
 11191                           
 11192  003B                     flashy_Init@data:	
 11193                           ; 2 bytes @ 0x1B
 11194                           
 11195  003B                     locked_Init@data:	
 11196                           ; 2 bytes @ 0x1B
 11197                           
 11198  003B                     secret_Init@data:	
 11199                           ; 2 bytes @ 0x1B
 11200                           
 11201  003B                     slot_Init@data:	
 11202                           ; 2 bytes @ 0x1B
 11203                           
 11204                           
 11205                           ; 2 bytes @ 0x1B
 11206  003B                     	ds	1
 11207  003C                     marquee_speedy@count:	
 11208  003C                     marquee@count:	
 11209                           ; 2 bytes @ 0x1C
 11210                           
 11211                           
 11212                           ; 2 bytes @ 0x1C
 11213  003C                     	ds	1
 11214  003D                     ?_scheduler_TaskAdd:	
 11215  003D                     scheduler_TaskAdd@task:	
 11216                           ; 1 bytes @ 0x1D
 11217                           
 11218                           
 11219                           ; 2 bytes @ 0x1D
 11220  003D                     	ds	1
 11221  003E                     ??_marquee:	
 11222  003E                     marquee_speedy@multiplier:	
 11223                           ; 1 bytes @ 0x1E
 11224                           
 11225                           
 11226                           ; 2 bytes @ 0x1E
 11227  003E                     	ds	1
 11228  003F                     ??_scheduler_TaskAdd:	
 11229  003F                     marquee@display_string:	
 11230                           ; 1 bytes @ 0x1F
 11231                           
 11232                           
 11233                           ; 5 bytes @ 0x1F
 11234  003F                     	ds	1
 11235  0040                     ??_marquee_speedy:	
 11236                           
 11237                           ; 1 bytes @ 0x20
 11238  0040                     	ds	1
 11239  0041                     marquee_speedy@display_string:	
 11240                           
 11241                           ; 5 bytes @ 0x21
 11242  0041                     	ds	3
 11243  0044                     marquee@multiplier:	
 11244                           
 11245                           ; 2 bytes @ 0x24
 11246  0044                     	ds	1
 11247  0045                     scheduler_TaskAdd@scheduler:	
 11248                           
 11249                           ; 1 bytes @ 0x25
 11250  0045                     	ds	1
 11251  0046                     scheduler_TaskAdd@k:	
 11252  0046                     marquee_speedy@i:	
 11253                           ; 1 bytes @ 0x26
 11254                           
 11255  0046                     marquee@i:	
 11256                           ; 2 bytes @ 0x26
 11257                           
 11258                           
 11259                           ; 2 bytes @ 0x26
 11260  0046                     	ds	2
 11261  0048                     marquee_speedy@string_length:	
 11262  0048                     marquee@string_length:	
 11263                           ; 2 bytes @ 0x28
 11264                           
 11265                           
 11266                           ; 2 bytes @ 0x28
 11267  0048                     	ds	2
 11268  004A                     marquee_speedy@j:	
 11269  004A                     marquee@j:	
 11270                           ; 2 bytes @ 0x2A
 11271                           
 11272                           
 11273                           ; 2 bytes @ 0x2A
 11274  004A                     	ds	2
 11275  004C                     ?_menu_display_option:	
 11276  004C                     ?_flashy_display_option:	
 11277                           ; 1 bytes @ 0x2C
 11278                           
 11279  004C                     menu_display_option@data:	
 11280                           ; 1 bytes @ 0x2C
 11281                           
 11282  004C                     flashy_display_option@data:	
 11283                           ; 2 bytes @ 0x2C
 11284                           
 11285                           
 11286                           ; 2 bytes @ 0x2C
 11287  004C                     	ds	2
 11288  004E                     menu_display_option@size:	
 11289                           
 11290                           ; 2 bytes @ 0x2E
 11291  004E                     	ds	2
 11292  0050                     menu_display_option@led:	
 11293                           
 11294                           ; 2 bytes @ 0x30
 11295  0050                     	ds	2
 11296  0052                     ?_flashy_Main:	
 11297  0052                     ?_menu_Main:	
 11298                           ; 1 bytes @ 0x32
 11299                           
 11300  0052                     ?_slot_Main:	
 11301                           ; 1 bytes @ 0x32
 11302                           
 11303  0052                     ?_locked_Main:	
 11304                           ; 1 bytes @ 0x32
 11305                           
 11306  0052                     ?_secret_Main:	
 11307                           ; 1 bytes @ 0x32
 11308                           
 11309  0052                     menu_Main@taskData:	
 11310                           ; 1 bytes @ 0x32
 11311                           
 11312  0052                     flashy_Main@taskData:	
 11313                           ; 2 bytes @ 0x32
 11314                           
 11315  0052                     locked_Main@taskData:	
 11316                           ; 2 bytes @ 0x32
 11317                           
 11318  0052                     secret_Main@taskData:	
 11319                           ; 2 bytes @ 0x32
 11320                           
 11321  0052                     slot_Main@taskData:	
 11322                           ; 2 bytes @ 0x32
 11323                           
 11324                           
 11325                           ; 2 bytes @ 0x32
 11326  0052                     	ds	2
 11327  0054                     ??_flashy_Main:	
 11328  0054                     ??_menu_Main:	
 11329                           ; 1 bytes @ 0x34
 11330                           
 11331  0054                     ??_slot_Main:	
 11332                           ; 1 bytes @ 0x34
 11333                           
 11334  0054                     ??_locked_Main:	
 11335                           ; 1 bytes @ 0x34
 11336                           
 11337  0054                     ??_secret_Main:	
 11338                           ; 1 bytes @ 0x34
 11339                           
 11340                           
 11341                           ; 1 bytes @ 0x34
 11342  0054                     	ds	1
 11343  0055                     slot_Main@buttonPressed:	
 11344                           
 11345                           ; 1 bytes @ 0x35
 11346  0055                     	ds	1
 11347  0056                     menu_Main@buttonPressed:	
 11348  0056                     locked_Main@buttonPressed:	
 11349                           ; 1 bytes @ 0x36
 11350                           
 11351  0056                     secret_Main@secret_found:	
 11352                           ; 1 bytes @ 0x36
 11353                           
 11354  0056                     slot_Main@data:	
 11355                           ; 1 bytes @ 0x36
 11356                           
 11357  0056                     flashy_Main@hit_counter:	
 11358                           ; 2 bytes @ 0x36
 11359                           
 11360                           
 11361                           ; 6 bytes @ 0x36
 11362  0056                     	ds	1
 11363  0057                     secret_Main@buttonPressed:	
 11364  0057                     menu_Main@data:	
 11365                           ; 1 bytes @ 0x37
 11366                           
 11367  0057                     locked_Main@data:	
 11368                           ; 2 bytes @ 0x37
 11369                           
 11370                           
 11371                           ; 2 bytes @ 0x37
 11372  0057                     	ds	1
 11373  0058                     secret_Main@data:	
 11374                           
 11375                           ; 2 bytes @ 0x38
 11376  0058                     	ds	4
 11377  005C                     flashy_Main@buttonPressed:	
 11378                           
 11379                           ; 2 bytes @ 0x3C
 11380  005C                     	ds	2
 11381  005E                     flashy_Main@data:	
 11382                           
 11383                           ; 2 bytes @ 0x3E
 11384  005E                     	ds	2
 11385  0060                     ?_scheduler_TaskRun:	
 11386  0060                     scheduler_TaskRun@task:	
 11387                           ; 1 bytes @ 0x40
 11388                           
 11389                           
 11390                           ; 2 bytes @ 0x40
 11391  0060                     	ds	2
 11392  0062                     ??_schedulerExecute:	
 11393                           
 11394                           ; 1 bytes @ 0x42
 11395  0062                     	ds	6
 11396  0068                     schedulerExecute@currentSystemTick:	
 11397                           
 11398                           ; 2 bytes @ 0x48
 11399  0068                     	ds	2
 11400  006A                     schedulerExecute@taskLastSystemTick:	
 11401                           
 11402                           ; 2 bytes @ 0x4A
 11403  006A                     	ds	2
 11404  006C                     schedulerExecute@tickDelta:	
 11405                           
 11406                           ; 2 bytes @ 0x4C
 11407  006C                     	ds	2
 11408  006E                     schedulerExecute@scheduler:	
 11409                           
 11410                           ; 1 bytes @ 0x4E
 11411  006E                     	ds	1
 11412  006F                     schedulerExecute@k:	
 11413                           
 11414                           ; 1 bytes @ 0x4F
 11415  006F                     	ds	1
 11416                           
 11417                           	psect	maintext
 11418  1616                     __pmaintext:	
 11419 ;;
 11420 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 11421 ;;
 11422 ;; *************** function _main *****************
 11423 ;; Defined at:
 11424 ;;		line 185 in file "main.c"
 11425 ;; Parameters:    Size  Location     Type
 11426 ;;		None
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;		None
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  1    wreg      void 
 11431 ;; Registers used:
 11432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11433 ;; Tracked objects:
 11434 ;;		On entry : B1F/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11440 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11441 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11442 ;;Total ram usage:        1 bytes
 11443 ;; Hardware stack levels required when called:   15
 11444 ;; This function calls:
 11445 ;;		_nullifyBadge_platformInit
 11446 ;;		_schedulerExecute
 11447 ;;		_scheduler_Init
 11448 ;;		_scheduler_TaskAdd
 11449 ;;		_scheduler_TaskInit
 11450 ;; This function is called by:
 11451 ;;		Startup code after reset
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           
 11456                           ;psect for function _main
 11457  1616                     _main:	
 11458                           
 11459                           ;main.c: 188: nullifyBadge_platformInit(&badge_inst);
 11460                           
 11461                           ;incstack = 0
 11462                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11463  1616  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11464  1617  319E  2697  3196   	fcall	_nullifyBadge_platformInit
 11465                           
 11466                           ;main.c: 191: scheduler_Init(&schedulerInst);
 11467  161A  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11468  161B  3198  20DB  3196   	fcall	_scheduler_Init
 11469                           
 11470                           ;main.c: 194: scheduler_TaskInit(&flashy_task);
 11471  161E  30CB               	movlw	low _flashy_task
 11472  161F  00F1               	movwf	scheduler_TaskInit@task
 11473  1620  3000               	movlw	high _flashy_task
 11474  1621  00F2               	movwf	scheduler_TaskInit@task+1
 11475  1622  319C  241D  3196   	fcall	_scheduler_TaskInit
 11476                           
 11477                           ;main.c: 195: scheduler_TaskInit(&menu_task);
 11478  1625  30BE               	movlw	low _menu_task
 11479  1626  00F1               	movwf	scheduler_TaskInit@task
 11480  1627  3000               	movlw	high _menu_task
 11481  1628  00F2               	movwf	scheduler_TaskInit@task+1
 11482  1629  319C  241D  3196   	fcall	_scheduler_TaskInit
 11483                           
 11484                           ;main.c: 196: scheduler_TaskInit(&slot_task);
 11485  162C  303A               	movlw	low _slot_task
 11486  162D  00F1               	movwf	scheduler_TaskInit@task
 11487  162E  3001               	movlw	high _slot_task
 11488  162F  00F2               	movwf	scheduler_TaskInit@task+1
 11489  1630  319C  241D  3196   	fcall	_scheduler_TaskInit
 11490                           
 11491                           ;main.c: 197: scheduler_TaskInit(&locked_task);
 11492  1633  302D               	movlw	low _locked_task
 11493  1634  00F1               	movwf	scheduler_TaskInit@task
 11494  1635  3001               	movlw	high _locked_task
 11495  1636  00F2               	movwf	scheduler_TaskInit@task+1
 11496  1637  319C  241D  3196   	fcall	_scheduler_TaskInit
 11497                           
 11498                           ;main.c: 198: scheduler_TaskInit(&secret_task);
 11499  163A  3020               	movlw	low _secret_task
 11500  163B  00F1               	movwf	scheduler_TaskInit@task
 11501  163C  3001               	movlw	high _secret_task
 11502  163D  00F2               	movwf	scheduler_TaskInit@task+1
 11503  163E  319C  241D  3196   	fcall	_scheduler_TaskInit
 11504                           
 11505                           ;main.c: 201: flashy_TaskData.badge = &badge_inst;
 11506  1641  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11507  1642  0021               	movlb	1	; select bank1
 11508  1643  00E4               	movwf	??_main^(0+128)
 11509  1644  0864               	movf	??_main^(0+128),w
 11510  1645  0027               	movlb	7	; select bank7
 11511  1646  00A0               	movwf	_flashy_TaskData^(0+896)
 11512                           
 11513                           ;main.c: 202: menu_TaskData.badge = &badge_inst;
 11514  1647  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11515  1648  0021               	movlb	1	; select bank1
 11516  1649  00E4               	movwf	??_main^(0+128)
 11517  164A  0864               	movf	??_main^(0+128),w
 11518  164B  0023               	movlb	3	; select bank3
 11519  164C  00D5               	movwf	_menu_TaskData^(0+384)
 11520                           
 11521                           ;main.c: 203: slot_TaskData.badge = &badge_inst;
 11522  164D  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11523  164E  0021               	movlb	1	; select bank1
 11524  164F  00E4               	movwf	??_main^(0+128)
 11525  1650  0864               	movf	??_main^(0+128),w
 11526  1651  0024               	movlb	4	; select bank4
 11527  1652  00DE               	movwf	_slot_TaskData^(0+512)
 11528                           
 11529                           ;main.c: 204: locked_TaskData.badge = &badge_inst;
 11530  1653  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11531  1654  0021               	movlb	1	; select bank1
 11532  1655  00E4               	movwf	??_main^(0+128)
 11533  1656  0864               	movf	??_main^(0+128),w
 11534  1657  0024               	movlb	4	; select bank4
 11535  1658  00D0               	movwf	_locked_TaskData^(0+512)
 11536                           
 11537                           ;main.c: 205: secret_TaskData.badge = &badge_inst;
 11538  1659  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11539  165A  0021               	movlb	1	; select bank1
 11540  165B  00E4               	movwf	??_main^(0+128)
 11541  165C  0864               	movf	??_main^(0+128),w
 11542  165D  0024               	movlb	4	; select bank4
 11543  165E  00C2               	movwf	_secret_TaskData^(0+512)
 11544                           
 11545                           ;main.c: 208: badge_locked = 1;
 11546  165F  01FC               	clrf	_badge_locked
 11547  1660  0AFC               	incf	_badge_locked,f
 11548                           
 11549                           ;main.c: 211: flashy_task.taskData = (void *) &flashy_TaskData;
 11550  1661  30A0               	movlw	low _flashy_TaskData
 11551  1662  0021               	movlb	1	; select bank1
 11552  1663  00CD               	movwf	(low ((_flashy_task| 0+2)))^(0+128)
 11553  1664  3003               	movlw	high _flashy_TaskData
 11554  1665  00CE               	movwf	((low ((_flashy_task| 0+2))+1))^(0+128)
 11555                           
 11556                           ;main.c: 212: flashy_task.taskInitCallback = flashy_Init;
 11557  1666  306B               	movlw	low _flashy_Init
 11558  1667  00CF               	movwf	(low ((_flashy_task| 0+4)))^(0+128)
 11559  1668  3007               	movlw	high _flashy_Init
 11560  1669  00D0               	movwf	((low ((_flashy_task| 0+4)))^(0+128)+1)
 11561                           
 11562                           ;main.c: 213: flashy_task.taskExecuteCallback = flashy_Main;
 11563  166A  309A               	movlw	low _flashy_Main
 11564  166B  00D3               	movwf	(low ((_flashy_task| 0+8)))^(0+128)
 11565  166C  3008               	movlw	high _flashy_Main
 11566  166D  00D4               	movwf	((low ((_flashy_task| 0+8)))^(0+128)+1)
 11567                           
 11568                           ;main.c: 214: flashy_task.taskExitCallback = flashy_Exit;
 11569  166E  3000               	movlw	0
 11570  166F  00D1               	movwf	(low ((_flashy_task| 0+6)))^(0+128)
 11571  1670  3000               	movlw	0
 11572  1671  00D2               	movwf	((low ((_flashy_task| 0+6)))^(0+128)+1)
 11573                           
 11574                           ;main.c: 215: flashy_task.taskInterval = 10;
 11575  1672  300A               	movlw	10
 11576  1673  00D5               	movwf	(_flashy_task^(0+128)+10)
 11577  1674  3000               	movlw	0
 11578  1675  00D6               	movwf	(_flashy_task^(0+128)+11)
 11579                           
 11580                           ;main.c: 217: menu_task.taskData = (void *) &menu_TaskData;
 11581  1676  30D5               	movlw	low _menu_TaskData
 11582  1677  00C0               	movwf	(low ((_menu_task| 0+2)))^(0+128)
 11583  1678  3001               	movlw	high _menu_TaskData
 11584  1679  00C1               	movwf	((low ((_menu_task| 0+2))+1))^(0+128)
 11585                           
 11586                           ;main.c: 218: menu_task.taskInitCallback = menu_Init;
 11587  167A  30AE               	movlw	low _menu_Init
 11588  167B  00C2               	movwf	(low ((_menu_task| 0+4)))^(0+128)
 11589  167C  3012               	movlw	high _menu_Init
 11590  167D  00C3               	movwf	((low ((_menu_task| 0+4)))^(0+128)+1)
 11591                           
 11592                           ;main.c: 219: menu_task.taskExecuteCallback = menu_Main;
 11593  167E  30A7               	movlw	low _menu_Main
 11594  167F  00C6               	movwf	(low ((_menu_task| 0+8)))^(0+128)
 11595  1680  3000               	movlw	high _menu_Main
 11596  1681  00C7               	movwf	((low ((_menu_task| 0+8)))^(0+128)+1)
 11597                           
 11598                           ;main.c: 220: menu_task.taskExitCallback = menu_Exit;
 11599  1682  3000               	movlw	0
 11600  1683  00C4               	movwf	(low ((_menu_task| 0+6)))^(0+128)
 11601  1684  3000               	movlw	0
 11602  1685  00C5               	movwf	((low ((_menu_task| 0+6)))^(0+128)+1)
 11603                           
 11604                           ;main.c: 221: menu_task.taskInterval = 10;
 11605  1686  300A               	movlw	10
 11606  1687  00C8               	movwf	(_menu_task^(0+128)+10)
 11607  1688  3000               	movlw	0
 11608  1689  00C9               	movwf	(_menu_task^(0+128)+11)
 11609                           
 11610                           ;main.c: 223: slot_task.taskData = (void *) &slot_TaskData;
 11611  168A  305E               	movlw	low _slot_TaskData
 11612  168B  0022               	movlb	2	; select bank2
 11613  168C  00BC               	movwf	(low ((_slot_task| (0+256)+2)))^0
 11614  168D  3002               	movlw	high _slot_TaskData
 11615  168E  00BD               	movwf	((low ((_slot_task| (0+256)+2))+1))^0
 11616                           
 11617                           ;main.c: 224: slot_task.taskInitCallback = slot_Init;
 11618  168F  30EC               	movlw	low _slot_Init
 11619  1690  00BE               	movwf	(low ((_slot_task| (0+256)+4)))^0
 11620  1691  301E               	movlw	high _slot_Init
 11621  1692  00BF               	movwf	((low ((_slot_task| (0+256)+4)))^0+1)
 11622                           
 11623                           ;main.c: 225: slot_task.taskExecuteCallback = slot_Main;
 11624  1693  30D9               	movlw	low _slot_Main
 11625  1694  00C2               	movwf	(low ((_slot_task| (0+256)+8)))^0
 11626  1695  3014               	movlw	high _slot_Main
 11627  1696  00C3               	movwf	((low ((_slot_task| (0+256)+8)))^0+1)
 11628                           
 11629                           ;main.c: 226: slot_task.taskExitCallback = slot_Exit;
 11630  1697  3000               	movlw	0
 11631  1698  00C0               	movwf	(low ((_slot_task| (0+256)+6)))^0
 11632  1699  3000               	movlw	0
 11633  169A  00C1               	movwf	((low ((_slot_task| (0+256)+6)))^0+1)
 11634                           
 11635                           ;main.c: 227: slot_task.taskInterval = 10;
 11636  169B  300A               	movlw	10
 11637  169C  00C4               	movwf	(_slot_task^(0+256)+10)
 11638  169D  3000               	movlw	0
 11639  169E  00C5               	movwf	(_slot_task^(0+256)+11)
 11640                           
 11641                           ;main.c: 229: locked_task.taskData = (void *) &locked_TaskData;
 11642  169F  3050               	movlw	low _locked_TaskData
 11643  16A0  00AF               	movwf	(low ((_locked_task| (0+256)+2)))^0
 11644  16A1  3002               	movlw	high _locked_TaskData
 11645  16A2  00B0               	movwf	((low ((_locked_task| (0+256)+2))+1))^0
 11646                           
 11647                           ;main.c: 230: locked_task.taskInitCallback = locked_Init;
 11648  16A3  3010               	movlw	low _locked_Init
 11649  16A4  00B1               	movwf	(low ((_locked_task| (0+256)+4)))^0
 11650  16A5  3013               	movlw	high _locked_Init
 11651  16A6  00B2               	movwf	((low ((_locked_task| (0+256)+4)))^0+1)
 11652                           
 11653                           ;main.c: 231: locked_task.taskExecuteCallback = locked_Main;
 11654  16A7  3093               	movlw	low _locked_Main
 11655  16A8  00B5               	movwf	(low ((_locked_task| (0+256)+8)))^0
 11656  16A9  3002               	movlw	high _locked_Main
 11657  16AA  00B6               	movwf	((low ((_locked_task| (0+256)+8)))^0+1)
 11658                           
 11659                           ;main.c: 232: locked_task.taskExitCallback = locked_Exit;
 11660  16AB  3000               	movlw	0
 11661  16AC  00B3               	movwf	(low ((_locked_task| (0+256)+6)))^0
 11662  16AD  3000               	movlw	0
 11663  16AE  00B4               	movwf	((low ((_locked_task| (0+256)+6)))^0+1)
 11664                           
 11665                           ;main.c: 233: locked_task.taskInterval = 10;
 11666  16AF  300A               	movlw	10
 11667  16B0  00B7               	movwf	(_locked_task^(0+256)+10)
 11668  16B1  3000               	movlw	0
 11669  16B2  00B8               	movwf	(_locked_task^(0+256)+11)
 11670                           
 11671                           ;main.c: 235: secret_task.taskData = (void *) &secret_TaskData;
 11672  16B3  3042               	movlw	low _secret_TaskData
 11673  16B4  00A2               	movwf	(low ((_secret_task| (0+256)+2)))^0
 11674  16B5  3002               	movlw	high _secret_TaskData
 11675  16B6  00A3               	movwf	((low ((_secret_task| (0+256)+2))+1))^0
 11676                           
 11677                           ;main.c: 236: secret_task.taskInitCallback = secret_Init;
 11678  16B7  3046               	movlw	low _secret_Init
 11679  16B8  00A4               	movwf	(low ((_secret_task| (0+256)+4)))^0
 11680  16B9  301F               	movlw	high _secret_Init
 11681  16BA  00A5               	movwf	((low ((_secret_task| (0+256)+4)))^0+1)
 11682                           
 11683                           ;main.c: 237: secret_task.taskExecuteCallback = secret_Main;
 11684  16BB  305D               	movlw	low _secret_Main
 11685  16BC  00A8               	movwf	(low ((_secret_task| (0+256)+8)))^0
 11686  16BD  3004               	movlw	high _secret_Main
 11687  16BE  00A9               	movwf	((low ((_secret_task| (0+256)+8)))^0+1)
 11688                           
 11689                           ;main.c: 238: secret_task.taskExitCallback = secret_Exit;
 11690  16BF  3000               	movlw	0
 11691  16C0  00A6               	movwf	(low ((_secret_task| (0+256)+6)))^0
 11692  16C1  3000               	movlw	0
 11693  16C2  00A7               	movwf	((low ((_secret_task| (0+256)+6)))^0+1)
 11694                           
 11695                           ;main.c: 239: secret_task.taskInterval = 10;
 11696  16C3  300A               	movlw	10
 11697  16C4  00AA               	movwf	(_secret_task^(0+256)+10)
 11698  16C5  3000               	movlw	0
 11699  16C6  00AB               	movwf	(_secret_task^(0+256)+11)
 11700                           
 11701                           ;main.c: 242: secret_value = SECRET_VALUE_INIT;
 11702  16C7  0021               	movlb	1	; select bank1
 11703  16C8  01D8               	clrf	_secret_value^(0+128)
 11704  16C9  01D9               	clrf	(_secret_value+1)^(0+128)
 11705                           
 11706                           ;main.c: 245: currentTask = FLASHY_TASK;
 11707  16CA  3002               	movlw	2
 11708  16CB  00B4               	movwf	_currentTask^(0+128)
 11709  16CC  3000               	movlw	0
 11710  16CD  00B5               	movwf	(_currentTask^(0+128)+1)
 11711                           
 11712                           ;main.c: 246: scheduler_TaskAdd(&schedulerInst, &flashy_task);
 11713  16CE  30CB               	movlw	low _flashy_task
 11714  16CF  0020               	movlb	0	; select bank0
 11715  16D0  00BD               	movwf	scheduler_TaskAdd@task
 11716  16D1  3000               	movlw	high _flashy_task
 11717  16D2  00BE               	movwf	scheduler_TaskAdd@task+1
 11718  16D3  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11719  16D4  3188  2018  3196   	fcall	_scheduler_TaskAdd
 11720                           
 11721                           ;main.c: 247: scheduler_TaskAdd(&schedulerInst, &menu_task);
 11722  16D7  30BE               	movlw	low _menu_task
 11723  16D8  0020               	movlb	0	; select bank0
 11724  16D9  00BD               	movwf	scheduler_TaskAdd@task
 11725  16DA  3000               	movlw	high _menu_task
 11726  16DB  00BE               	movwf	scheduler_TaskAdd@task+1
 11727  16DC  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11728  16DD  3188  2018  3196   	fcall	_scheduler_TaskAdd
 11729                           
 11730                           ;main.c: 248: scheduler_TaskAdd(&schedulerInst, &slot_task);
 11731  16E0  303A               	movlw	low _slot_task
 11732  16E1  0020               	movlb	0	; select bank0
 11733  16E2  00BD               	movwf	scheduler_TaskAdd@task
 11734  16E3  3001               	movlw	high _slot_task
 11735  16E4  00BE               	movwf	scheduler_TaskAdd@task+1
 11736  16E5  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11737  16E6  3188  2018  3196   	fcall	_scheduler_TaskAdd
 11738                           
 11739                           ;main.c: 249: scheduler_TaskAdd(&schedulerInst, &locked_task);
 11740  16E9  302D               	movlw	low _locked_task
 11741  16EA  0020               	movlb	0	; select bank0
 11742  16EB  00BD               	movwf	scheduler_TaskAdd@task
 11743  16EC  3001               	movlw	high _locked_task
 11744  16ED  00BE               	movwf	scheduler_TaskAdd@task+1
 11745  16EE  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11746  16EF  3188  2018  3196   	fcall	_scheduler_TaskAdd
 11747                           
 11748                           ;main.c: 250: scheduler_TaskAdd(&schedulerInst, &secret_task);
 11749  16F2  3020               	movlw	low _secret_task
 11750  16F3  0020               	movlb	0	; select bank0
 11751  16F4  00BD               	movwf	scheduler_TaskAdd@task
 11752  16F5  3001               	movlw	high _secret_task
 11753  16F6  00BE               	movwf	scheduler_TaskAdd@task+1
 11754  16F7  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11755  16F8  3188  2018  3196   	fcall	_scheduler_TaskAdd
 11756  16FB                     l8017:	
 11757                           ;main.c: 252: while(1){
 11758                           
 11759                           
 11760                           ;main.c: 253: schedulerExecute(&schedulerInst);
 11761  16FB  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11762  16FC  3194  245D  3196   	fcall	_schedulerExecute
 11763  16FF  2EFB               	goto	l8017
 11764  1700                     __end_of_main:	
 11765                           
 11766                           	psect	text1
 11767  1C1D                     __ptext1:	
 11768 ;; *************** function _scheduler_TaskInit *****************
 11769 ;; Defined at:
 11770 ;;		line 36 in file "cooperative_scheduler.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  task            2    1[COMMON] PTR struct t_schedulerTa
 11773 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 11774 ;;		 -> flashy_task(13), 
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;		None
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  1    wreg      void 
 11779 ;; Registers used:
 11780 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11789 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11790 ;;Total ram usage:        4 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:    4
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_main
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           
 11801                           ;psect for function _scheduler_TaskInit
 11802  1C1D                     _scheduler_TaskInit:	
 11803                           
 11804                           ;cooperative_scheduler.c: 37: task->systemTickLastExecuted = 0;
 11805                           
 11806                           ;incstack = 0
 11807                           ; Regs used in _scheduler_TaskInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 11808  1C1D  0871               	movf	scheduler_TaskInit@task,w
 11809  1C1E  0086               	movwf	6
 11810  1C1F  0872               	movf	scheduler_TaskInit@task+1,w
 11811  1C20  0087               	movwf	7
 11812  1C21  3000               	movlw	0
 11813  1C22  3FC0               	movwi [0]fsr1
 11814  1C23  3FC1               	movwi [1]fsr1
 11815                           
 11816                           ;cooperative_scheduler.c: 38: task->taskData = (0);
 11817  1C24  0871               	movf	scheduler_TaskInit@task,w
 11818  1C25  0086               	movwf	6
 11819  1C26  0872               	movf	scheduler_TaskInit@task+1,w
 11820  1C27  0087               	movwf	7
 11821  1C28  3142               	addfsr 1,2
 11822  1C29  3000               	movlw	0
 11823  1C2A  3FC0               	movwi [0]fsr1
 11824  1C2B  3FC1               	movwi [1]fsr1
 11825                           
 11826                           ;cooperative_scheduler.c: 39: task->taskInitCallback = (0);
 11827  1C2C  0871               	movf	scheduler_TaskInit@task,w
 11828  1C2D  0086               	movwf	6
 11829  1C2E  0872               	movf	scheduler_TaskInit@task+1,w
 11830  1C2F  0087               	movwf	7
 11831  1C30  3144               	addfsr 1,4
 11832  1C31  3000               	movlw	0
 11833  1C32  3FC0               	movwi [0]fsr1
 11834  1C33  3FC1               	movwi [1]fsr1
 11835                           
 11836                           ;cooperative_scheduler.c: 40: task->taskExitCallback = (0);
 11837  1C34  0871               	movf	scheduler_TaskInit@task,w
 11838  1C35  0086               	movwf	6
 11839  1C36  0872               	movf	scheduler_TaskInit@task+1,w
 11840  1C37  0087               	movwf	7
 11841  1C38  3146               	addfsr 1,6
 11842  1C39  3000               	movlw	0
 11843  1C3A  3FC0               	movwi [0]fsr1
 11844  1C3B  3FC1               	movwi [1]fsr1
 11845                           
 11846                           ;cooperative_scheduler.c: 41: task->taskExecuteCallback = (0);
 11847  1C3C  0871               	movf	scheduler_TaskInit@task,w
 11848  1C3D  0086               	movwf	6
 11849  1C3E  0872               	movf	scheduler_TaskInit@task+1,w
 11850  1C3F  0087               	movwf	7
 11851  1C40  3148               	addfsr 1,8
 11852  1C41  3000               	movlw	0
 11853  1C42  3FC0               	movwi [0]fsr1
 11854  1C43  3FC1               	movwi [1]fsr1
 11855                           
 11856                           ;cooperative_scheduler.c: 42: task->taskInterval = 65535;
 11857  1C44  0871               	movf	scheduler_TaskInit@task,w
 11858  1C45  0086               	movwf	6
 11859  1C46  0872               	movf	scheduler_TaskInit@task+1,w
 11860  1C47  0087               	movwf	7
 11861  1C48  314A               	addfsr 1,10
 11862  1C49  30FF               	movlw	255
 11863  1C4A  3FC0               	movwi [0]fsr1
 11864  1C4B  30FF               	movlw	255
 11865  1C4C  3FC1               	movwi [1]fsr1
 11866                           
 11867                           ;cooperative_scheduler.c: 43: task->taskId = -1;
 11868  1C4D  0871               	movf	scheduler_TaskInit@task,w
 11869  1C4E  3E0C               	addlw	12
 11870  1C4F  00F3               	movwf	??_scheduler_TaskInit
 11871  1C50  3000               	movlw	0
 11872  1C51  3D72               	addwfc	scheduler_TaskInit@task+1,w
 11873  1C52  00F4               	movwf	??_scheduler_TaskInit+1
 11874  1C53  0873               	movf	??_scheduler_TaskInit,w
 11875  1C54  0086               	movwf	6
 11876  1C55  0874               	movf	??_scheduler_TaskInit+1,w
 11877  1C56  0087               	movwf	7
 11878  1C57  30FF               	movlw	-1
 11879  1C58  0081               	movwf	1
 11880  1C59  0008               	return
 11881  1C5A                     __end_of_scheduler_TaskInit:	
 11882                           
 11883                           	psect	text2
 11884  0818                     __ptext2:	
 11885 ;; *************** function _scheduler_TaskAdd *****************
 11886 ;; Defined at:
 11887 ;;		line 46 in file "cooperative_scheduler.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;  scheduler       1    wreg     PTR struct t_scheduler
 11890 ;;		 -> schedulerInst(34), 
 11891 ;;  task            2   29[BANK0 ] PTR struct t_schedulerTa
 11892 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 11893 ;;		 -> flashy_task(13), 
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;  scheduler       1   37[BANK0 ] PTR struct t_scheduler
 11896 ;;		 -> schedulerInst(34), 
 11897 ;;  k               1   38[BANK0 ] unsigned char 
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1    wreg      char 
 11900 ;; Registers used:
 11901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11907 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11908 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11909 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11910 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11911 ;;Total ram usage:       10 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; Hardware stack levels required when called:   11
 11914 ;; This function calls:
 11915 ;;		Absolute function
 11916 ;;		_flashy_Init
 11917 ;;		_locked_Init
 11918 ;;		_menu_Init
 11919 ;;		_secret_Init
 11920 ;;		_slot_Init
 11921 ;; This function is called by:
 11922 ;;		_main
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926                           
 11927                           ;psect for function _scheduler_TaskAdd
 11928  0818                     _scheduler_TaskAdd:	
 11929                           
 11930                           ;incstack = 0
 11931                           ; Regs used in _scheduler_TaskAdd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11932                           ;scheduler_TaskAdd@scheduler stored from wreg
 11933  0818  0020               	movlb	0	; select bank0
 11934  0819  00C5               	movwf	scheduler_TaskAdd@scheduler
 11935                           
 11936                           ;cooperative_scheduler.c: 47: u8 k;
 11937                           ;cooperative_scheduler.c: 48: for (k = 0; k < 16; k++) {
 11938  081A  01C6               	clrf	scheduler_TaskAdd@k
 11939  081B  3010               	movlw	16
 11940  081C  0246               	subwf	scheduler_TaskAdd@k,w
 11941  081D  1803               	btfsc	3,0
 11942  081E  288D               	goto	l7825
 11943  081F                     l7811:	
 11944                           
 11945                           ;cooperative_scheduler.c: 49: if (!(scheduler->taskEntryVector & (1 << k)) ) {
 11946  081F  0845               	movf	scheduler_TaskAdd@scheduler,w
 11947  0820  3E20               	addlw	32
 11948  0821  0086               	movwf	6
 11949  0822  3002               	movlw	2	; select bank4/5
 11950  0823  0087               	movwf	7
 11951  0824  3F40               	moviw [0]fsr1
 11952  0825  00BF               	movwf	??_scheduler_TaskAdd
 11953  0826  3F41               	moviw [1]fsr1
 11954  0827  00C0               	movwf	??_scheduler_TaskAdd+1
 11955  0828  3001               	movlw	1
 11956  0829  00C1               	movwf	??_scheduler_TaskAdd+2
 11957  082A  3000               	movlw	0
 11958  082B  00C2               	movwf	??_scheduler_TaskAdd+3
 11959  082C  0A46               	incf	scheduler_TaskAdd@k,w
 11960  082D  2830               	goto	u4534
 11961  082E                     u4535:	
 11962  082E  35C1               	lslf	??_scheduler_TaskAdd+2,f
 11963  082F  0DC2               	rlf	??_scheduler_TaskAdd+3,f
 11964  0830                     u4534:	
 11965  0830  0B89               	decfsz	9,f
 11966  0831  282E               	goto	u4535
 11967  0832  083F               	movf	??_scheduler_TaskAdd,w
 11968  0833  0541               	andwf	??_scheduler_TaskAdd+2,w
 11969  0834  00C3               	movwf	??_scheduler_TaskAdd+4
 11970  0835  0840               	movf	??_scheduler_TaskAdd+1,w
 11971  0836  0542               	andwf	??_scheduler_TaskAdd+3,w
 11972  0837  00C4               	movwf	??_scheduler_TaskAdd+5
 11973  0838  0843               	movf	??_scheduler_TaskAdd+4,w
 11974  0839  0444               	iorwf	??_scheduler_TaskAdd+5,w
 11975  083A  1D03               	btfss	3,2
 11976  083B  2885               	goto	l7821
 11977                           
 11978                           ;cooperative_scheduler.c: 50: scheduler->tasks[k] = task;
 11979  083C  3546               	lslf	scheduler_TaskAdd@k,w
 11980  083D  0745               	addwf	scheduler_TaskAdd@scheduler,w
 11981  083E  00BF               	movwf	??_scheduler_TaskAdd
 11982  083F  083F               	movf	??_scheduler_TaskAdd,w
 11983  0840  0086               	movwf	6
 11984  0841  3002               	movlw	2	; select bank4/5
 11985  0842  0087               	movwf	7
 11986  0843  083D               	movf	scheduler_TaskAdd@task,w
 11987  0844  3FC0               	movwi [0]fsr1
 11988  0845  083E               	movf	scheduler_TaskAdd@task+1,w
 11989  0846  3FC1               	movwi [1]fsr1
 11990                           
 11991                           ;cooperative_scheduler.c: 51: scheduler->taskEntryVector |= (1 << k);
 11992  0847  3001               	movlw	1
 11993  0848  00BF               	movwf	??_scheduler_TaskAdd
 11994  0849  3000               	movlw	0
 11995  084A  00C0               	movwf	??_scheduler_TaskAdd+1
 11996  084B  0A46               	incf	scheduler_TaskAdd@k,w
 11997  084C  284F               	goto	u4554
 11998  084D                     u4555:	
 11999  084D  35BF               	lslf	??_scheduler_TaskAdd,f
 12000  084E  0DC0               	rlf	??_scheduler_TaskAdd+1,f
 12001  084F                     u4554:	
 12002  084F  0B89               	decfsz	9,f
 12003  0850  284D               	goto	u4555
 12004  0851  0845               	movf	scheduler_TaskAdd@scheduler,w
 12005  0852  3E20               	addlw	32
 12006  0853  0086               	movwf	6
 12007  0854  3002               	movlw	2	; select bank4/5
 12008  0855  0087               	movwf	7
 12009  0856  083F               	movf	??_scheduler_TaskAdd,w
 12010  0857  0481               	iorwf	1,f
 12011  0858  3141               	addfsr 1,1
 12012  0859  0840               	movf	??_scheduler_TaskAdd+1,w
 12013  085A  0481               	iorwf	1,f
 12014                           
 12015                           ;cooperative_scheduler.c: 53: if (task->taskInitCallback != (0)) {
 12016  085B  083D               	movf	scheduler_TaskAdd@task,w
 12017  085C  0086               	movwf	6
 12018  085D  083E               	movf	scheduler_TaskAdd@task+1,w
 12019  085E  0087               	movwf	7
 12020  085F  3144               	addfsr 1,4
 12021  0860  0016               	moviw fsr1++
 12022  0861  0401               	iorwf	1,w
 12023  0862  1903               	btfsc	3,2
 12024  0863  2877               	goto	l7817
 12025                           
 12026                           ;cooperative_scheduler.c: 54: task->taskInitCallback (task->taskData);
 12027  0864  083D               	movf	scheduler_TaskAdd@task,w
 12028  0865  0086               	movwf	6
 12029  0866  083E               	movf	scheduler_TaskAdd@task+1,w
 12030  0867  0087               	movwf	7
 12031  0868  3142               	addfsr 1,2
 12032  0869  3F40               	moviw [0]fsr1
 12033  086A  00B9               	movwf	secret_Init@taskData
 12034  086B  3F41               	moviw [1]fsr1
 12035  086C  00BA               	movwf	secret_Init@taskData+1
 12036  086D  083D               	movf	scheduler_TaskAdd@task,w
 12037  086E  0086               	movwf	6
 12038  086F  083E               	movf	scheduler_TaskAdd@task+1,w
 12039  0870  0087               	movwf	7
 12040  0871  3144               	addfsr 1,4
 12041  0872  3F41               	moviw [1]fsr1
 12042  0873  008A               	movwf	10
 12043  0874  3F40               	moviw [0]fsr1
 12044  0875  000A               	callw
 12045  0876  3188               	pagesel	$
 12046  0877                     l7817:	
 12047                           
 12048                           ;cooperative_scheduler.c: 55: }
 12049                           ;cooperative_scheduler.c: 57: task->taskId = (s8) k;
 12050  0877  0020               	movlb	0	; select bank0
 12051  0878  083D               	movf	scheduler_TaskAdd@task,w
 12052  0879  3E0C               	addlw	12
 12053  087A  00BF               	movwf	??_scheduler_TaskAdd
 12054  087B  3000               	movlw	0
 12055  087C  3D3E               	addwfc	scheduler_TaskAdd@task+1,w
 12056  087D  00C0               	movwf	??_scheduler_TaskAdd+1
 12057  087E  083F               	movf	??_scheduler_TaskAdd,w
 12058  087F  0086               	movwf	6
 12059  0880  0840               	movf	??_scheduler_TaskAdd+1,w
 12060  0881  0087               	movwf	7
 12061  0882  0846               	movf	scheduler_TaskAdd@k,w
 12062  0883  0081               	movwf	1
 12063                           
 12064                           ;cooperative_scheduler.c: 58: return k;
 12065                           ;	Return value of _scheduler_TaskAdd is never used
 12066  0884  0008               	return
 12067  0885                     l7821:	
 12068  0885  3001               	movlw	1
 12069  0886  00BF               	movwf	??_scheduler_TaskAdd
 12070  0887  083F               	movf	??_scheduler_TaskAdd,w
 12071  0888  07C6               	addwf	scheduler_TaskAdd@k,f
 12072  0889  3010               	movlw	16
 12073  088A  0246               	subwf	scheduler_TaskAdd@k,w
 12074  088B  1C03               	skipc
 12075  088C  281F               	goto	l7811
 12076  088D                     l7825:	
 12077                           
 12078                           ;cooperative_scheduler.c: 59: }
 12079                           ;cooperative_scheduler.c: 60: }
 12080                           ;cooperative_scheduler.c: 62: task->taskId = -1;
 12081  088D  083D               	movf	scheduler_TaskAdd@task,w
 12082  088E  3E0C               	addlw	12
 12083  088F  00BF               	movwf	??_scheduler_TaskAdd
 12084  0890  3000               	movlw	0
 12085  0891  3D3E               	addwfc	scheduler_TaskAdd@task+1,w
 12086  0892  00C0               	movwf	??_scheduler_TaskAdd+1
 12087  0893  083F               	movf	??_scheduler_TaskAdd,w
 12088  0894  0086               	movwf	6
 12089  0895  0840               	movf	??_scheduler_TaskAdd+1,w
 12090  0896  0087               	movwf	7
 12091  0897  30FF               	movlw	-1
 12092  0898  0081               	movwf	1
 12093  0899  0008               	return
 12094  089A                     __end_of_scheduler_TaskAdd:	
 12095                           ;cooperative_scheduler.c: 63: return -1;
 12096                           ;	Return value of _scheduler_TaskAdd is never used
 12097                           
 12098                           
 12099                           	psect	text3
 12100  1F46                     __ptext3:	
 12101 ;; *************** function _secret_Init *****************
 12102 ;; Defined at:
 12103 ;;		line 51 in file "secret_task.c"
 12104 ;; Parameters:    Size  Location     Type
 12105 ;;  taskData        2   25[BANK0 ] PTR void 
 12106 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12107 ;;		 -> flashy_TaskData(30), NULL(0), 
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;  data            2   27[BANK0 ] PTR struct t_secret_task
 12110 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12111 ;;		 -> flashy_TaskData(30), NULL(0), 
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  1    wreg      void 
 12114 ;; Registers used:
 12115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12116 ;; Tracked objects:
 12117 ;;		On entry : 0/0
 12118 ;;		On exit  : 0/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12122 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12124 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12125 ;;Total ram usage:        4 bytes
 12126 ;; Hardware stack levels used:    1
 12127 ;; Hardware stack levels required when called:   10
 12128 ;; This function calls:
 12129 ;;		_nullifyBadge_segDisplayErase
 12130 ;;		_nullifyBadge_segDisplayRegister
 12131 ;;		_nullifyBadge_userLedsClr
 12132 ;;		_nullifyBadge_userLedsRegister
 12133 ;; This function is called by:
 12134 ;;		_main
 12135 ;;		_scheduler_TaskAdd
 12136 ;; This function uses a non-reentrant model
 12137 ;;
 12138                           
 12139                           
 12140                           ;psect for function _secret_Init
 12141  1F46                     _secret_Init:	
 12142                           
 12143                           ;secret_task.c: 52: struct t_secret_taskData *data = (struct t_secret_taskData *) taskDa
      +                          ta;
 12144                           
 12145                           ;incstack = 0
 12146                           ; Regs used in _secret_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12147  1F46  0020               	movlb	0	; select bank0
 12148  1F47  083A               	movf	secret_Init@taskData+1,w
 12149  1F48  00BC               	movwf	secret_Init@data+1
 12150  1F49  0839               	movf	secret_Init@taskData,w
 12151  1F4A  00BB               	movwf	secret_Init@data
 12152                           
 12153                           ;secret_task.c: 55: nullifyBadge_userLedsRegister(data->badge);
 12154  1F4B  083B               	movf	secret_Init@data,w
 12155  1F4C  0086               	movwf	6
 12156  1F4D  083C               	movf	secret_Init@data+1,w
 12157  1F4E  0087               	movwf	7
 12158  1F4F  0801               	movf	1,w
 12159  1F50  31A7  278C  319F   	fcall	_nullifyBadge_userLedsRegister
 12160                           
 12161                           ;secret_task.c: 56: nullifyBadge_userLedsClr(data->badge);
 12162  1F53  0020               	movlb	0	; select bank0
 12163  1F54  083B               	movf	secret_Init@data,w
 12164  1F55  0086               	movwf	6
 12165  1F56  083C               	movf	secret_Init@data+1,w
 12166  1F57  0087               	movwf	7
 12167  1F58  0801               	movf	1,w
 12168  1F59  31A6  2690  319F   	fcall	_nullifyBadge_userLedsClr
 12169                           
 12170                           ;secret_task.c: 57: nullifyBadge_segDisplayRegister(data->badge);
 12171  1F5C  0020               	movlb	0	; select bank0
 12172  1F5D  083B               	movf	secret_Init@data,w
 12173  1F5E  0086               	movwf	6
 12174  1F5F  083C               	movf	secret_Init@data+1,w
 12175  1F60  0087               	movwf	7
 12176  1F61  0801               	movf	1,w
 12177  1F62  31A6  269E  319F   	fcall	_nullifyBadge_segDisplayRegister
 12178                           
 12179                           ;secret_task.c: 58: nullifyBadge_segDisplayErase(data->badge);
 12180  1F65  0020               	movlb	0	; select bank0
 12181  1F66  083B               	movf	secret_Init@data,w
 12182  1F67  0086               	movwf	6
 12183  1F68  083C               	movf	secret_Init@data+1,w
 12184  1F69  0087               	movwf	7
 12185  1F6A  0801               	movf	1,w
 12186  1F6B  31A6  268A  319F   	fcall	_nullifyBadge_segDisplayErase
 12187                           
 12188                           ;secret_task.c: 61: data->delayTickCount = 300;
 12189  1F6E  0020               	movlb	0	; select bank0
 12190  1F6F  083B               	movf	secret_Init@data,w
 12191  1F70  0086               	movwf	6
 12192  1F71  083C               	movf	secret_Init@data+1,w
 12193  1F72  0087               	movwf	7
 12194  1F73  3142               	addfsr 1,2
 12195  1F74  302C               	movlw	44
 12196  1F75  3FC0               	movwi [0]fsr1
 12197  1F76  3001               	movlw	1
 12198  1F77  3FC1               	movwi [1]fsr1
 12199                           
 12200                           ;secret_task.c: 62: data->holdCountA = 0;
 12201  1F78  083B               	movf	secret_Init@data,w
 12202  1F79  0086               	movwf	6
 12203  1F7A  083C               	movf	secret_Init@data+1,w
 12204  1F7B  0087               	movwf	7
 12205  1F7C  3144               	addfsr 1,4
 12206  1F7D  3000               	movlw	0
 12207  1F7E  3FC0               	movwi [0]fsr1
 12208  1F7F  3FC1               	movwi [1]fsr1
 12209                           
 12210                           ;secret_task.c: 63: data->holdCountB = 0;
 12211  1F80  083B               	movf	secret_Init@data,w
 12212  1F81  0086               	movwf	6
 12213  1F82  083C               	movf	secret_Init@data+1,w
 12214  1F83  0087               	movwf	7
 12215  1F84  3146               	addfsr 1,6
 12216  1F85  3000               	movlw	0
 12217  1F86  3FC0               	movwi [0]fsr1
 12218  1F87  3FC1               	movwi [1]fsr1
 12219                           
 12220                           ;secret_task.c: 64: data->holdCountX = 0;
 12221  1F88  083B               	movf	secret_Init@data,w
 12222  1F89  0086               	movwf	6
 12223  1F8A  083C               	movf	secret_Init@data+1,w
 12224  1F8B  0087               	movwf	7
 12225  1F8C  3148               	addfsr 1,8
 12226  1F8D  3000               	movlw	0
 12227  1F8E  3FC0               	movwi [0]fsr1
 12228  1F8F  3FC1               	movwi [1]fsr1
 12229                           
 12230                           ;secret_task.c: 65: data->holdCountY = 0;
 12231  1F90  083B               	movf	secret_Init@data,w
 12232  1F91  0086               	movwf	6
 12233  1F92  083C               	movf	secret_Init@data+1,w
 12234  1F93  0087               	movwf	7
 12235  1F94  314A               	addfsr 1,10
 12236  1F95  3000               	movlw	0
 12237  1F96  3FC0               	movwi [0]fsr1
 12238  1F97  3FC1               	movwi [1]fsr1
 12239                           
 12240                           ;secret_task.c: 66: data->noholdCount = 0;
 12241  1F98  083B               	movf	secret_Init@data,w
 12242  1F99  0086               	movwf	6
 12243  1F9A  083C               	movf	secret_Init@data+1,w
 12244  1F9B  0087               	movwf	7
 12245  1F9C  314C               	addfsr 1,12
 12246  1F9D  3000               	movlw	0
 12247  1F9E  3FC0               	movwi [0]fsr1
 12248  1F9F  3FC1               	movwi [1]fsr1
 12249  1FA0  0008               	return
 12250  1FA1                     __end_of_secret_Init:	
 12251                           
 12252                           	psect	text4
 12253  1310                     __ptext4:	
 12254 ;; *************** function _locked_Init *****************
 12255 ;; Defined at:
 12256 ;;		line 64 in file "locked_task.c"
 12257 ;; Parameters:    Size  Location     Type
 12258 ;;  taskData        2   25[BANK0 ] PTR void 
 12259 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12260 ;;		 -> flashy_TaskData(30), NULL(0), 
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;  data            2   27[BANK0 ] PTR struct t_locked_task
 12263 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12264 ;;		 -> flashy_TaskData(30), NULL(0), 
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  1    wreg      void 
 12267 ;; Registers used:
 12268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12274 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12275 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12277 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12278 ;;Total ram usage:        4 bytes
 12279 ;; Hardware stack levels used:    1
 12280 ;; Hardware stack levels required when called:   10
 12281 ;; This function calls:
 12282 ;;		_locked_lock_leds
 12283 ;;		_nullifyBadge_segDisplayErase
 12284 ;;		_nullifyBadge_segDisplayRegister
 12285 ;;		_nullifyBadge_userLedsClr
 12286 ;;		_nullifyBadge_userLedsRegister
 12287 ;; This function is called by:
 12288 ;;		_main
 12289 ;;		_scheduler_TaskAdd
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           
 12294                           ;psect for function _locked_Init
 12295  1310                     _locked_Init:	
 12296                           
 12297                           ;locked_task.c: 65: struct t_locked_taskData *data = (struct t_locked_taskData *) taskDa
      +                          ta;
 12298                           
 12299                           ;incstack = 0
 12300                           ; Regs used in _locked_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12301  1310  0020               	movlb	0	; select bank0
 12302  1311  083A               	movf	locked_Init@taskData+1,w
 12303  1312  00BC               	movwf	locked_Init@data+1
 12304  1313  0839               	movf	locked_Init@taskData,w
 12305  1314  00BB               	movwf	locked_Init@data
 12306                           
 12307                           ;locked_task.c: 68: nullifyBadge_userLedsRegister(data->badge);
 12308  1315  083B               	movf	locked_Init@data,w
 12309  1316  0086               	movwf	6
 12310  1317  083C               	movf	locked_Init@data+1,w
 12311  1318  0087               	movwf	7
 12312  1319  0801               	movf	1,w
 12313  131A  31A7  278C  3193   	fcall	_nullifyBadge_userLedsRegister
 12314                           
 12315                           ;locked_task.c: 69: nullifyBadge_userLedsClr(data->badge);
 12316  131D  0020               	movlb	0	; select bank0
 12317  131E  083B               	movf	locked_Init@data,w
 12318  131F  0086               	movwf	6
 12319  1320  083C               	movf	locked_Init@data+1,w
 12320  1321  0087               	movwf	7
 12321  1322  0801               	movf	1,w
 12322  1323  31A6  2690  3193   	fcall	_nullifyBadge_userLedsClr
 12323                           
 12324                           ;locked_task.c: 70: nullifyBadge_segDisplayRegister(data->badge);
 12325  1326  0020               	movlb	0	; select bank0
 12326  1327  083B               	movf	locked_Init@data,w
 12327  1328  0086               	movwf	6
 12328  1329  083C               	movf	locked_Init@data+1,w
 12329  132A  0087               	movwf	7
 12330  132B  0801               	movf	1,w
 12331  132C  31A6  269E  3193   	fcall	_nullifyBadge_segDisplayRegister
 12332                           
 12333                           ;locked_task.c: 71: nullifyBadge_segDisplayErase(data->badge);
 12334  132F  0020               	movlb	0	; select bank0
 12335  1330  083B               	movf	locked_Init@data,w
 12336  1331  0086               	movwf	6
 12337  1332  083C               	movf	locked_Init@data+1,w
 12338  1333  0087               	movwf	7
 12339  1334  0801               	movf	1,w
 12340  1335  31A6  268A  3193   	fcall	_nullifyBadge_segDisplayErase
 12341                           
 12342                           ;locked_task.c: 74: locked_lock_leds();
 12343  1338  3198  20A3  3193   	fcall	_locked_lock_leds
 12344                           
 12345                           ;locked_task.c: 75: data->state = LOCKED_LOCKED_STATE;
 12346  133B  0020               	movlb	0	; select bank0
 12347  133C  083B               	movf	locked_Init@data,w
 12348  133D  0086               	movwf	6
 12349  133E  083C               	movf	locked_Init@data+1,w
 12350  133F  0087               	movwf	7
 12351  1340  314D               	addfsr 1,13
 12352  1341  0181               	clrf	1
 12353                           
 12354                           ;locked_task.c: 76: data->delayTickCount = 0;
 12355  1342  083B               	movf	locked_Init@data,w
 12356  1343  0086               	movwf	6
 12357  1344  083C               	movf	locked_Init@data+1,w
 12358  1345  0087               	movwf	7
 12359  1346  3141               	addfsr 1,1
 12360  1347  3000               	movlw	0
 12361  1348  3FC0               	movwi [0]fsr1
 12362  1349  3FC1               	movwi [1]fsr1
 12363                           
 12364                           ;locked_task.c: 77: data->holdCountA = 0;
 12365  134A  083B               	movf	locked_Init@data,w
 12366  134B  0086               	movwf	6
 12367  134C  083C               	movf	locked_Init@data+1,w
 12368  134D  0087               	movwf	7
 12369  134E  3143               	addfsr 1,3
 12370  134F  3000               	movlw	0
 12371  1350  3FC0               	movwi [0]fsr1
 12372  1351  3FC1               	movwi [1]fsr1
 12373                           
 12374                           ;locked_task.c: 78: data->holdCountB = 0;
 12375  1352  083B               	movf	locked_Init@data,w
 12376  1353  0086               	movwf	6
 12377  1354  083C               	movf	locked_Init@data+1,w
 12378  1355  0087               	movwf	7
 12379  1356  3145               	addfsr 1,5
 12380  1357  3000               	movlw	0
 12381  1358  3FC0               	movwi [0]fsr1
 12382  1359  3FC1               	movwi [1]fsr1
 12383                           
 12384                           ;locked_task.c: 79: data->holdCountX = 0;
 12385  135A  083B               	movf	locked_Init@data,w
 12386  135B  0086               	movwf	6
 12387  135C  083C               	movf	locked_Init@data+1,w
 12388  135D  0087               	movwf	7
 12389  135E  3147               	addfsr 1,7
 12390  135F  3000               	movlw	0
 12391  1360  3FC0               	movwi [0]fsr1
 12392  1361  3FC1               	movwi [1]fsr1
 12393                           
 12394                           ;locked_task.c: 80: data->holdCountY = 0;
 12395  1362  083B               	movf	locked_Init@data,w
 12396  1363  0086               	movwf	6
 12397  1364  083C               	movf	locked_Init@data+1,w
 12398  1365  0087               	movwf	7
 12399  1366  3149               	addfsr 1,9
 12400  1367  3000               	movlw	0
 12401  1368  3FC0               	movwi [0]fsr1
 12402  1369  3FC1               	movwi [1]fsr1
 12403                           
 12404                           ;locked_task.c: 81: data->noholdCount = 0;
 12405  136A  083B               	movf	locked_Init@data,w
 12406  136B  0086               	movwf	6
 12407  136C  083C               	movf	locked_Init@data+1,w
 12408  136D  0087               	movwf	7
 12409  136E  314B               	addfsr 1,11
 12410  136F  3000               	movlw	0
 12411  1370  3FC0               	movwi [0]fsr1
 12412  1371  3FC1               	movwi [1]fsr1
 12413  1372  0008               	return
 12414  1373                     __end_of_locked_Init:	
 12415                           
 12416                           	psect	text5
 12417  12AE                     __ptext5:	
 12418 ;; *************** function _menu_Init *****************
 12419 ;; Defined at:
 12420 ;;		line 32 in file "menu_task.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;  taskData        2   25[BANK0 ] PTR void 
 12423 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12424 ;;		 -> flashy_TaskData(30), NULL(0), 
 12425 ;; Auto vars:     Size  Location     Type
 12426 ;;  data            2   27[BANK0 ] PTR struct t_menu_taskDa
 12427 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12428 ;;		 -> flashy_TaskData(30), NULL(0), 
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      void 
 12431 ;; Registers used:
 12432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12438 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12439 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12441 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12442 ;;Total ram usage:        4 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; Hardware stack levels required when called:   10
 12445 ;; This function calls:
 12446 ;;		_nullifyBadge_segDisplayErase
 12447 ;;		_nullifyBadge_segDisplayRegister
 12448 ;;		_nullifyBadge_userLedsClr
 12449 ;;		_nullifyBadge_userLedsRegister
 12450 ;; This function is called by:
 12451 ;;		_main
 12452 ;;		_scheduler_TaskAdd
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           
 12456                           
 12457                           ;psect for function _menu_Init
 12458  12AE                     _menu_Init:	
 12459                           
 12460                           ;menu_task.c: 33: struct t_menu_taskData *data = (struct t_menu_taskData *) taskData;
 12461                           
 12462                           ;incstack = 0
 12463                           ; Regs used in _menu_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12464  12AE  0020               	movlb	0	; select bank0
 12465  12AF  083A               	movf	menu_Init@taskData+1,w
 12466  12B0  00BC               	movwf	menu_Init@data+1
 12467  12B1  0839               	movf	menu_Init@taskData,w
 12468  12B2  00BB               	movwf	menu_Init@data
 12469                           
 12470                           ;menu_task.c: 36: nullifyBadge_userLedsRegister(data->badge);
 12471  12B3  083B               	movf	menu_Init@data,w
 12472  12B4  0086               	movwf	6
 12473  12B5  083C               	movf	menu_Init@data+1,w
 12474  12B6  0087               	movwf	7
 12475  12B7  0801               	movf	1,w
 12476  12B8  31A7  278C  3192   	fcall	_nullifyBadge_userLedsRegister
 12477                           
 12478                           ;menu_task.c: 37: nullifyBadge_userLedsClr(data->badge);
 12479  12BB  0020               	movlb	0	; select bank0
 12480  12BC  083B               	movf	menu_Init@data,w
 12481  12BD  0086               	movwf	6
 12482  12BE  083C               	movf	menu_Init@data+1,w
 12483  12BF  0087               	movwf	7
 12484  12C0  0801               	movf	1,w
 12485  12C1  31A6  2690  3192   	fcall	_nullifyBadge_userLedsClr
 12486                           
 12487                           ;menu_task.c: 38: nullifyBadge_segDisplayRegister(data->badge);
 12488  12C4  0020               	movlb	0	; select bank0
 12489  12C5  083B               	movf	menu_Init@data,w
 12490  12C6  0086               	movwf	6
 12491  12C7  083C               	movf	menu_Init@data+1,w
 12492  12C8  0087               	movwf	7
 12493  12C9  0801               	movf	1,w
 12494  12CA  31A6  269E  3192   	fcall	_nullifyBadge_segDisplayRegister
 12495                           
 12496                           ;menu_task.c: 39: nullifyBadge_segDisplayErase(data->badge);
 12497  12CD  0020               	movlb	0	; select bank0
 12498  12CE  083B               	movf	menu_Init@data,w
 12499  12CF  0086               	movwf	6
 12500  12D0  083C               	movf	menu_Init@data+1,w
 12501  12D1  0087               	movwf	7
 12502  12D2  0801               	movf	1,w
 12503  12D3  31A6  268A  3192   	fcall	_nullifyBadge_segDisplayErase
 12504                           
 12505                           ;menu_task.c: 42: data->delayTickCount = 50;
 12506  12D6  0020               	movlb	0	; select bank0
 12507  12D7  083B               	movf	menu_Init@data,w
 12508  12D8  0086               	movwf	6
 12509  12D9  083C               	movf	menu_Init@data+1,w
 12510  12DA  0087               	movwf	7
 12511  12DB  3142               	addfsr 1,2
 12512  12DC  3032               	movlw	50
 12513  12DD  3FC0               	movwi [0]fsr1
 12514  12DE  3000               	movlw	0
 12515  12DF  3FC1               	movwi [1]fsr1
 12516                           
 12517                           ;menu_task.c: 43: data->holdCountA = 0;
 12518  12E0  083B               	movf	menu_Init@data,w
 12519  12E1  0086               	movwf	6
 12520  12E2  083C               	movf	menu_Init@data+1,w
 12521  12E3  0087               	movwf	7
 12522  12E4  3144               	addfsr 1,4
 12523  12E5  3000               	movlw	0
 12524  12E6  3FC0               	movwi [0]fsr1
 12525  12E7  3FC1               	movwi [1]fsr1
 12526                           
 12527                           ;menu_task.c: 44: data->holdCountB = 0;
 12528  12E8  083B               	movf	menu_Init@data,w
 12529  12E9  0086               	movwf	6
 12530  12EA  083C               	movf	menu_Init@data+1,w
 12531  12EB  0087               	movwf	7
 12532  12EC  3146               	addfsr 1,6
 12533  12ED  3000               	movlw	0
 12534  12EE  3FC0               	movwi [0]fsr1
 12535  12EF  3FC1               	movwi [1]fsr1
 12536                           
 12537                           ;menu_task.c: 45: data->holdCountX = 0;
 12538  12F0  083B               	movf	menu_Init@data,w
 12539  12F1  0086               	movwf	6
 12540  12F2  083C               	movf	menu_Init@data+1,w
 12541  12F3  0087               	movwf	7
 12542  12F4  3148               	addfsr 1,8
 12543  12F5  3000               	movlw	0
 12544  12F6  3FC0               	movwi [0]fsr1
 12545  12F7  3FC1               	movwi [1]fsr1
 12546                           
 12547                           ;menu_task.c: 46: data->holdCountY = 0;
 12548  12F8  083B               	movf	menu_Init@data,w
 12549  12F9  0086               	movwf	6
 12550  12FA  083C               	movf	menu_Init@data+1,w
 12551  12FB  0087               	movwf	7
 12552  12FC  314A               	addfsr 1,10
 12553  12FD  3000               	movlw	0
 12554  12FE  3FC0               	movwi [0]fsr1
 12555  12FF  3FC1               	movwi [1]fsr1
 12556                           
 12557                           ;menu_task.c: 47: data->noholdCount = 0;
 12558  1300  083B               	movf	menu_Init@data,w
 12559  1301  0086               	movwf	6
 12560  1302  083C               	movf	menu_Init@data+1,w
 12561  1303  0087               	movwf	7
 12562  1304  314C               	addfsr 1,12
 12563  1305  3000               	movlw	0
 12564  1306  3FC0               	movwi [0]fsr1
 12565  1307  3FC1               	movwi [1]fsr1
 12566                           
 12567                           ;menu_task.c: 49: menu_option_idx = 0;
 12568  1308  0021               	movlb	1	; select bank1
 12569  1309  01B2               	clrf	_menu_option_idx^(0+128)
 12570  130A  01B3               	clrf	(_menu_option_idx+1)^(0+128)
 12571                           
 12572                           ;menu_task.c: 51: menu_option_size = sizeof(menu_option)/sizeof(menu_option[0]);
 12573  130B  3004               	movlw	4
 12574  130C  00B0               	movwf	_menu_option_size^(0+128)
 12575  130D  3000               	movlw	0
 12576  130E  00B1               	movwf	(_menu_option_size^(0+128)+1)
 12577  130F  0008               	return
 12578  1310                     __end_of_menu_Init:	
 12579                           
 12580                           	psect	text6
 12581  076B                     __ptext6:	
 12582 ;; *************** function _flashy_Init *****************
 12583 ;; Defined at:
 12584 ;;		line 38 in file "flashy_task.c"
 12585 ;; Parameters:    Size  Location     Type
 12586 ;;  taskData        2   25[BANK0 ] PTR void 
 12587 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12588 ;;		 -> flashy_TaskData(30), NULL(0), 
 12589 ;; Auto vars:     Size  Location     Type
 12590 ;;  data            2   27[BANK0 ] PTR struct t_flashy_task
 12591 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12592 ;;		 -> flashy_TaskData(30), NULL(0), 
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1    wreg      void 
 12595 ;; Registers used:
 12596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12602 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12605 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12606 ;;Total ram usage:        4 bytes
 12607 ;; Hardware stack levels used:    1
 12608 ;; Hardware stack levels required when called:   10
 12609 ;; This function calls:
 12610 ;;		_nullifyBadge_segDisplayErase
 12611 ;;		_nullifyBadge_segDisplayRegister
 12612 ;;		_nullifyBadge_userLedsClr
 12613 ;;		_nullifyBadge_userLedsRegister
 12614 ;; This function is called by:
 12615 ;;		_main
 12616 ;;		_scheduler_TaskAdd
 12617 ;; This function uses a non-reentrant model
 12618 ;;
 12619                           
 12620                           
 12621                           ;psect for function _flashy_Init
 12622  076B                     _flashy_Init:	
 12623                           
 12624                           ;flashy_task.c: 39: struct t_flashy_taskData *data = (struct t_flashy_taskData *) taskDa
      +                          ta;
 12625                           
 12626                           ;incstack = 0
 12627                           ; Regs used in _flashy_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12628  076B  0020               	movlb	0	; select bank0
 12629  076C  083A               	movf	flashy_Init@taskData+1,w
 12630  076D  00BC               	movwf	flashy_Init@data+1
 12631  076E  0839               	movf	flashy_Init@taskData,w
 12632  076F  00BB               	movwf	flashy_Init@data
 12633                           
 12634                           ;flashy_task.c: 42: nullifyBadge_userLedsRegister(data->badge);
 12635  0770  083B               	movf	flashy_Init@data,w
 12636  0771  0086               	movwf	6
 12637  0772  083C               	movf	flashy_Init@data+1,w
 12638  0773  0087               	movwf	7
 12639  0774  0801               	movf	1,w
 12640  0775  31A7  278C  3187   	fcall	_nullifyBadge_userLedsRegister
 12641                           
 12642                           ;flashy_task.c: 43: nullifyBadge_userLedsClr(data->badge);
 12643  0778  0020               	movlb	0	; select bank0
 12644  0779  083B               	movf	flashy_Init@data,w
 12645  077A  0086               	movwf	6
 12646  077B  083C               	movf	flashy_Init@data+1,w
 12647  077C  0087               	movwf	7
 12648  077D  0801               	movf	1,w
 12649  077E  31A6  2690  3187   	fcall	_nullifyBadge_userLedsClr
 12650                           
 12651                           ;flashy_task.c: 44: nullifyBadge_segDisplayRegister(data->badge);
 12652  0781  0020               	movlb	0	; select bank0
 12653  0782  083B               	movf	flashy_Init@data,w
 12654  0783  0086               	movwf	6
 12655  0784  083C               	movf	flashy_Init@data+1,w
 12656  0785  0087               	movwf	7
 12657  0786  0801               	movf	1,w
 12658  0787  31A6  269E  3187   	fcall	_nullifyBadge_segDisplayRegister
 12659                           
 12660                           ;flashy_task.c: 45: nullifyBadge_segDisplayErase(data->badge);
 12661  078A  0020               	movlb	0	; select bank0
 12662  078B  083B               	movf	flashy_Init@data,w
 12663  078C  0086               	movwf	6
 12664  078D  083C               	movf	flashy_Init@data+1,w
 12665  078E  0087               	movwf	7
 12666  078F  0801               	movf	1,w
 12667  0790  31A6  268A  3187   	fcall	_nullifyBadge_segDisplayErase
 12668                           
 12669                           ;flashy_task.c: 51: data->delayTickCount = 35;
 12670  0793  0020               	movlb	0	; select bank0
 12671  0794  083B               	movf	flashy_Init@data,w
 12672  0795  0086               	movwf	6
 12673  0796  083C               	movf	flashy_Init@data+1,w
 12674  0797  0087               	movwf	7
 12675  0798  3141               	addfsr 1,1
 12676  0799  3023               	movlw	35
 12677  079A  3FC0               	movwi [0]fsr1
 12678  079B  3000               	movlw	0
 12679  079C  3FC1               	movwi [1]fsr1
 12680                           
 12681                           ;flashy_task.c: 52: data->displayTickCount = 0;
 12682  079D  083B               	movf	flashy_Init@data,w
 12683  079E  0086               	movwf	6
 12684  079F  083C               	movf	flashy_Init@data+1,w
 12685  07A0  0087               	movwf	7
 12686  07A1  3144               	addfsr 1,4
 12687  07A2  3000               	movlw	0
 12688  07A3  3FC0               	movwi [0]fsr1
 12689  07A4  3FC1               	movwi [1]fsr1
 12690                           
 12691                           ;flashy_task.c: 55: data->holdCountA = 0;
 12692  07A5  083B               	movf	flashy_Init@data,w
 12693  07A6  0086               	movwf	6
 12694  07A7  083C               	movf	flashy_Init@data+1,w
 12695  07A8  0087               	movwf	7
 12696  07A9  314A               	addfsr 1,10
 12697  07AA  3000               	movlw	0
 12698  07AB  3FC0               	movwi [0]fsr1
 12699  07AC  3FC1               	movwi [1]fsr1
 12700                           
 12701                           ;flashy_task.c: 56: data->holdCountB = 0;
 12702  07AD  083B               	movf	flashy_Init@data,w
 12703  07AE  0086               	movwf	6
 12704  07AF  083C               	movf	flashy_Init@data+1,w
 12705  07B0  0087               	movwf	7
 12706  07B1  314C               	addfsr 1,12
 12707  07B2  3000               	movlw	0
 12708  07B3  3FC0               	movwi [0]fsr1
 12709  07B4  3FC1               	movwi [1]fsr1
 12710                           
 12711                           ;flashy_task.c: 57: data->holdCountX = 0;
 12712  07B5  083B               	movf	flashy_Init@data,w
 12713  07B6  0086               	movwf	6
 12714  07B7  083C               	movf	flashy_Init@data+1,w
 12715  07B8  0087               	movwf	7
 12716  07B9  314E               	addfsr 1,14
 12717  07BA  3000               	movlw	0
 12718  07BB  3FC0               	movwi [0]fsr1
 12719  07BC  3FC1               	movwi [1]fsr1
 12720                           
 12721                           ;flashy_task.c: 58: data->holdCountY = 0;
 12722  07BD  083B               	movf	flashy_Init@data,w
 12723  07BE  0086               	movwf	6
 12724  07BF  083C               	movf	flashy_Init@data+1,w
 12725  07C0  0087               	movwf	7
 12726  07C1  3150               	addfsr 1,16
 12727  07C2  3000               	movlw	0
 12728  07C3  3FC0               	movwi [0]fsr1
 12729  07C4  3FC1               	movwi [1]fsr1
 12730                           
 12731                           ;flashy_task.c: 59: data->holdCountXY = 0;
 12732  07C5  083B               	movf	flashy_Init@data,w
 12733  07C6  0086               	movwf	6
 12734  07C7  083C               	movf	flashy_Init@data+1,w
 12735  07C8  0087               	movwf	7
 12736  07C9  3152               	addfsr 1,18
 12737  07CA  3000               	movlw	0
 12738  07CB  3FC0               	movwi [0]fsr1
 12739  07CC  3FC1               	movwi [1]fsr1
 12740                           
 12741                           ;flashy_task.c: 60: data->holdCountAY = 0;
 12742  07CD  083B               	movf	flashy_Init@data,w
 12743  07CE  0086               	movwf	6
 12744  07CF  083C               	movf	flashy_Init@data+1,w
 12745  07D0  0087               	movwf	7
 12746  07D1  3154               	addfsr 1,20
 12747  07D2  3000               	movlw	0
 12748  07D3  3FC0               	movwi [0]fsr1
 12749  07D4  3FC1               	movwi [1]fsr1
 12750                           
 12751                           ;flashy_task.c: 61: data->holdCountAX = 0;
 12752  07D5  083B               	movf	flashy_Init@data,w
 12753  07D6  0086               	movwf	6
 12754  07D7  083C               	movf	flashy_Init@data+1,w
 12755  07D8  0087               	movwf	7
 12756  07D9  3156               	addfsr 1,22
 12757  07DA  3000               	movlw	0
 12758  07DB  3FC0               	movwi [0]fsr1
 12759  07DC  3FC1               	movwi [1]fsr1
 12760                           
 12761                           ;flashy_task.c: 62: data->noholdCount = 0;
 12762  07DD  083B               	movf	flashy_Init@data,w
 12763  07DE  0086               	movwf	6
 12764  07DF  083C               	movf	flashy_Init@data+1,w
 12765  07E0  0087               	movwf	7
 12766  07E1  315C               	addfsr 1,28
 12767  07E2  3000               	movlw	0
 12768  07E3  3FC0               	movwi [0]fsr1
 12769  07E4  3FC1               	movwi [1]fsr1
 12770                           
 12771                           ;flashy_task.c: 64: flashy_leds_idx = 0;
 12772  07E5  0021               	movlb	1	; select bank1
 12773  07E6  01AE               	clrf	_flashy_leds_idx^(0+128)
 12774  07E7  01AF               	clrf	(_flashy_leds_idx+1)^(0+128)
 12775                           
 12776                           ;flashy_task.c: 65: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 12777  07E8  0020               	movlb	0	; select bank0
 12778  07E9  083B               	movf	flashy_Init@data,w
 12779  07EA  0086               	movwf	6
 12780  07EB  083C               	movf	flashy_Init@data+1,w
 12781  07EC  0087               	movwf	7
 12782  07ED  3143               	addfsr 1,3
 12783  07EE  0181               	clrf	1
 12784                           
 12785                           ;flashy_task.c: 66: flashy_option_idx = 0;
 12786  07EF  0021               	movlb	1	; select bank1
 12787  07F0  01A6               	clrf	_flashy_option_idx^(0+128)
 12788  07F1  01A7               	clrf	(_flashy_option_idx+1)^(0+128)
 12789                           
 12790                           ;flashy_task.c: 68: flashy_option_size = sizeof(flashy_option)/sizeof(flashy_option[0]);
 12791  07F2  3004               	movlw	4
 12792  07F3  00A4               	movwf	_flashy_option_size^(0+128)
 12793  07F4  3000               	movlw	0
 12794  07F5  00A5               	movwf	(_flashy_option_size^(0+128)+1)
 12795                           
 12796                           ;flashy_task.c: 70: flashy_sparkle_rate =50;
 12797  07F6  3032               	movlw	50
 12798  07F7  00AC               	movwf	_flashy_sparkle_rate^(0+128)
 12799  07F8  3000               	movlw	0
 12800  07F9  00AD               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 12801                           
 12802                           ;flashy_task.c: 71: flashy_scroll_rate=50;
 12803  07FA  3032               	movlw	50
 12804  07FB  00AA               	movwf	_flashy_scroll_rate^(0+128)
 12805  07FC  3000               	movlw	0
 12806  07FD  00AB               	movwf	(_flashy_scroll_rate^(0+128)+1)
 12807  07FE  0008               	return
 12808  07FF                     __end_of_flashy_Init:	
 12809                           
 12810                           	psect	text7
 12811  1EEC                     __ptext7:	
 12812 ;; *************** function _slot_Init *****************
 12813 ;; Defined at:
 12814 ;;		line 16 in file "slot_task.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;  taskData        2   25[BANK0 ] PTR void 
 12817 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12818 ;;		 -> flashy_TaskData(30), NULL(0), 
 12819 ;; Auto vars:     Size  Location     Type
 12820 ;;  data            2   27[BANK0 ] PTR struct t_slot_taskDa
 12821 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12822 ;;		 -> flashy_TaskData(30), NULL(0), 
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  1    wreg      void 
 12825 ;; Registers used:
 12826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12833 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12835 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12836 ;;Total ram usage:        4 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; Hardware stack levels required when called:   10
 12839 ;; This function calls:
 12840 ;;		_nullifyBadge_segDisplayErase
 12841 ;;		_nullifyBadge_segDisplayRegister
 12842 ;;		_nullifyBadge_userLedsClr
 12843 ;;		_nullifyBadge_userLedsRegister
 12844 ;; This function is called by:
 12845 ;;		_main
 12846 ;;		_scheduler_TaskAdd
 12847 ;; This function uses a non-reentrant model
 12848 ;;
 12849                           
 12850                           
 12851                           ;psect for function _slot_Init
 12852  1EEC                     _slot_Init:	
 12853                           
 12854                           ;slot_task.c: 17: struct t_slot_taskData *data = (struct t_slot_taskData *) taskData;
 12855                           
 12856                           ;incstack = 0
 12857                           ; Regs used in _slot_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12858  1EEC  0020               	movlb	0	; select bank0
 12859  1EED  083A               	movf	slot_Init@taskData+1,w
 12860  1EEE  00BC               	movwf	slot_Init@data+1
 12861  1EEF  0839               	movf	slot_Init@taskData,w
 12862  1EF0  00BB               	movwf	slot_Init@data
 12863                           
 12864                           ;slot_task.c: 20: nullifyBadge_userLedsRegister(data->badge);
 12865  1EF1  083B               	movf	slot_Init@data,w
 12866  1EF2  0086               	movwf	6
 12867  1EF3  083C               	movf	slot_Init@data+1,w
 12868  1EF4  0087               	movwf	7
 12869  1EF5  0801               	movf	1,w
 12870  1EF6  31A7  278C  319E   	fcall	_nullifyBadge_userLedsRegister
 12871                           
 12872                           ;slot_task.c: 21: nullifyBadge_userLedsClr(data->badge);
 12873  1EF9  0020               	movlb	0	; select bank0
 12874  1EFA  083B               	movf	slot_Init@data,w
 12875  1EFB  0086               	movwf	6
 12876  1EFC  083C               	movf	slot_Init@data+1,w
 12877  1EFD  0087               	movwf	7
 12878  1EFE  0801               	movf	1,w
 12879  1EFF  31A6  2690  319E   	fcall	_nullifyBadge_userLedsClr
 12880                           
 12881                           ;slot_task.c: 22: nullifyBadge_segDisplayRegister(data->badge);
 12882  1F02  0020               	movlb	0	; select bank0
 12883  1F03  083B               	movf	slot_Init@data,w
 12884  1F04  0086               	movwf	6
 12885  1F05  083C               	movf	slot_Init@data+1,w
 12886  1F06  0087               	movwf	7
 12887  1F07  0801               	movf	1,w
 12888  1F08  31A6  269E  319E   	fcall	_nullifyBadge_segDisplayRegister
 12889                           
 12890                           ;slot_task.c: 23: nullifyBadge_segDisplayErase(data->badge);
 12891  1F0B  0020               	movlb	0	; select bank0
 12892  1F0C  083B               	movf	slot_Init@data,w
 12893  1F0D  0086               	movwf	6
 12894  1F0E  083C               	movf	slot_Init@data+1,w
 12895  1F0F  0087               	movwf	7
 12896  1F10  0801               	movf	1,w
 12897  1F11  31A6  268A  319E   	fcall	_nullifyBadge_segDisplayErase
 12898                           
 12899                           ;slot_task.c: 26: data->displayTickCount = 0;
 12900  1F14  0020               	movlb	0	; select bank0
 12901  1F15  083B               	movf	slot_Init@data,w
 12902  1F16  0086               	movwf	6
 12903  1F17  083C               	movf	slot_Init@data+1,w
 12904  1F18  0087               	movwf	7
 12905  1F19  3142               	addfsr 1,2
 12906  1F1A  3000               	movlw	0
 12907  1F1B  3FC0               	movwi [0]fsr1
 12908  1F1C  3FC1               	movwi [1]fsr1
 12909                           
 12910                           ;slot_task.c: 27: data->holdCountA = 0;
 12911  1F1D  083B               	movf	slot_Init@data,w
 12912  1F1E  0086               	movwf	6
 12913  1F1F  083C               	movf	slot_Init@data+1,w
 12914  1F20  0087               	movwf	7
 12915  1F21  3144               	addfsr 1,4
 12916  1F22  3000               	movlw	0
 12917  1F23  3FC0               	movwi [0]fsr1
 12918  1F24  3FC1               	movwi [1]fsr1
 12919                           
 12920                           ;slot_task.c: 28: data->holdCountB = 0;
 12921  1F25  083B               	movf	slot_Init@data,w
 12922  1F26  0086               	movwf	6
 12923  1F27  083C               	movf	slot_Init@data+1,w
 12924  1F28  0087               	movwf	7
 12925  1F29  3146               	addfsr 1,6
 12926  1F2A  3000               	movlw	0
 12927  1F2B  3FC0               	movwi [0]fsr1
 12928  1F2C  3FC1               	movwi [1]fsr1
 12929                           
 12930                           ;slot_task.c: 29: data->holdCountX = 0;
 12931  1F2D  083B               	movf	slot_Init@data,w
 12932  1F2E  0086               	movwf	6
 12933  1F2F  083C               	movf	slot_Init@data+1,w
 12934  1F30  0087               	movwf	7
 12935  1F31  3148               	addfsr 1,8
 12936  1F32  3000               	movlw	0
 12937  1F33  3FC0               	movwi [0]fsr1
 12938  1F34  3FC1               	movwi [1]fsr1
 12939                           
 12940                           ;slot_task.c: 30: data->holdCountY = 0;
 12941  1F35  083B               	movf	slot_Init@data,w
 12942  1F36  0086               	movwf	6
 12943  1F37  083C               	movf	slot_Init@data+1,w
 12944  1F38  0087               	movwf	7
 12945  1F39  314A               	addfsr 1,10
 12946  1F3A  3000               	movlw	0
 12947  1F3B  3FC0               	movwi [0]fsr1
 12948  1F3C  3FC1               	movwi [1]fsr1
 12949                           
 12950                           ;slot_task.c: 31: data->noholdCount = 0;
 12951  1F3D  083B               	movf	slot_Init@data,w
 12952  1F3E  0086               	movwf	6
 12953  1F3F  083C               	movf	slot_Init@data+1,w
 12954  1F40  0087               	movwf	7
 12955  1F41  314C               	addfsr 1,12
 12956  1F42  3000               	movlw	0
 12957  1F43  3FC0               	movwi [0]fsr1
 12958  1F44  3FC1               	movwi [1]fsr1
 12959  1F45  0008               	return
 12960  1F46                     __end_of_slot_Init:	
 12961                           
 12962                           	psect	text8
 12963  278C                     __ptext8:	
 12964 ;; *************** function _nullifyBadge_userLedsRegister *****************
 12965 ;; Defined at:
 12966 ;;		line 133 in file "nullifyBadge.c"
 12967 ;; Parameters:    Size  Location     Type
 12968 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 12969 ;;		 -> badge_inst(18), 
 12970 ;; Auto vars:     Size  Location     Type
 12971 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 12972 ;;		 -> badge_inst(18), 
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  1    wreg      char 
 12975 ;; Registers used:
 12976 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12986 ;;Total ram usage:        1 bytes
 12987 ;; Hardware stack levels used:    1
 12988 ;; Hardware stack levels required when called:    4
 12989 ;; This function calls:
 12990 ;;		Nothing
 12991 ;; This function is called by:
 12992 ;;		_menu_Init
 12993 ;;		_flashy_Init
 12994 ;;		_locked_Init
 12995 ;;		_secret_Init
 12996 ;;		_slot_Init
 12997 ;; This function uses a non-reentrant model
 12998 ;;
 12999                           
 13000                           
 13001                           ;psect for function _nullifyBadge_userLedsRegister
 13002  278C                     _nullifyBadge_userLedsRegister:	
 13003                           
 13004                           ;incstack = 0
 13005                           ; Regs used in _nullifyBadge_userLedsRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 13006                           ;nullifyBadge_userLedsRegister@badge stored from wreg
 13007  278C  00F1               	movwf	nullifyBadge_userLedsRegister@badge
 13008                           
 13009                           ;nullifyBadge.c: 134: if (badge->registeredHw & HW_USER_LEDS) {
 13010  278D  0871               	movf	nullifyBadge_userLedsRegister@badge,w
 13011  278E  3E11               	addlw	17
 13012  278F  0086               	movwf	6
 13013  2790  3001               	movlw	1	; select bank2/3
 13014  2791  0087               	movwf	7
 13015  2792  1801               	btfsc	1,0
 13016  2793  0008               	return
 13017                           
 13018                           ;nullifyBadge.c: 137: else {
 13019                           ;nullifyBadge.c: 138: badge->registeredHw |= (1 << HW_USER_LEDS);
 13020                           
 13021                           ;nullifyBadge.c: 136: }
 13022                           
 13023                           ;nullifyBadge.c: 135: return -1;
 13024                           ;	Return value of _nullifyBadge_userLedsRegister is never used
 13025  2794  0871               	movf	nullifyBadge_userLedsRegister@badge,w
 13026  2795  3E11               	addlw	17
 13027  2796  0086               	movwf	6
 13028  2797  3001               	movlw	1	; select bank2/3
 13029  2798  0087               	movwf	7
 13030  2799  1481               	bsf	1,1
 13031                           
 13032                           ;nullifyBadge.c: 139: return 0;
 13033                           ;	Return value of _nullifyBadge_userLedsRegister is never used
 13034  279A  0008               	return
 13035  279B                     __end_of_nullifyBadge_userLedsRegister:	
 13036                           
 13037                           	psect	text9
 13038  269E                     __ptext9:	
 13039 ;; *************** function _nullifyBadge_segDisplayRegister *****************
 13040 ;; Defined at:
 13041 ;;		line 68 in file "nullifyBadge.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 13044 ;;		 -> badge_inst(18), 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 13047 ;;		 -> badge_inst(18), 
 13048 ;; Return value:  Size  Location     Type
 13049 ;;                  1    wreg      char 
 13050 ;; Registers used:
 13051 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13052 ;; Tracked objects:
 13053 ;;		On entry : 0/0
 13054 ;;		On exit  : 0/0
 13055 ;;		Unchanged: 0/0
 13056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13061 ;;Total ram usage:        1 bytes
 13062 ;; Hardware stack levels used:    1
 13063 ;; Hardware stack levels required when called:    4
 13064 ;; This function calls:
 13065 ;;		Nothing
 13066 ;; This function is called by:
 13067 ;;		_menu_Init
 13068 ;;		_flashy_Init
 13069 ;;		_locked_Init
 13070 ;;		_secret_Init
 13071 ;;		_slot_Init
 13072 ;;		_fadeDisplay_Init
 13073 ;; This function uses a non-reentrant model
 13074 ;;
 13075                           
 13076                           
 13077                           ;psect for function _nullifyBadge_segDisplayRegister
 13078  269E                     _nullifyBadge_segDisplayRegister:	
 13079                           
 13080                           ;incstack = 0
 13081                           ; Regs used in _nullifyBadge_segDisplayRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 13082                           ;nullifyBadge_segDisplayRegister@badge stored from wreg
 13083  269E  00F1               	movwf	nullifyBadge_segDisplayRegister@badge
 13084                           
 13085                           ;nullifyBadge.c: 72: else {
 13086                           ;nullifyBadge.c: 73: badge->registeredHw |= (1 << HW_SEG_DISPLAY);
 13087                           
 13088                           ;nullifyBadge.c: 71: }
 13089                           
 13090                           ;nullifyBadge.c: 70: return -1;
 13091                           ;	Return value of _nullifyBadge_segDisplayRegister is never used
 13092                           
 13093                           ;nullifyBadge.c: 69: if (badge->registeredHw & HW_SEG_DISPLAY) {
 13094  269F  0871               	movf	nullifyBadge_segDisplayRegister@badge,w
 13095  26A0  3E11               	addlw	17
 13096  26A1  0086               	movwf	6
 13097  26A2  3001               	movlw	1	; select bank2/3
 13098  26A3  0087               	movwf	7
 13099  26A4  1401               	bsf	1,0
 13100                           
 13101                           ;nullifyBadge.c: 74: return 0;
 13102                           ;	Return value of _nullifyBadge_segDisplayRegister is never used
 13103  26A5  0008               	return
 13104  26A6                     __end_of_nullifyBadge_segDisplayRegister:	
 13105                           
 13106                           	psect	text10
 13107  18DB                     __ptext10:	
 13108 ;; *************** function _scheduler_Init *****************
 13109 ;; Defined at:
 13110 ;;		line 27 in file "cooperative_scheduler.c"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;  scheduler       1    wreg     PTR struct t_scheduler
 13113 ;;		 -> schedulerInst(34), 
 13114 ;; Auto vars:     Size  Location     Type
 13115 ;;  scheduler       1    2[COMMON] PTR struct t_scheduler
 13116 ;;		 -> schedulerInst(34), 
 13117 ;;  k               1    3[COMMON] unsigned char 
 13118 ;; Return value:  Size  Location     Type
 13119 ;;                  1    wreg      void 
 13120 ;; Registers used:
 13121 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13122 ;; Tracked objects:
 13123 ;;		On entry : 0/0
 13124 ;;		On exit  : 0/0
 13125 ;;		Unchanged: 0/0
 13126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13130 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13131 ;;Total ram usage:        3 bytes
 13132 ;; Hardware stack levels used:    1
 13133 ;; Hardware stack levels required when called:    4
 13134 ;; This function calls:
 13135 ;;		Nothing
 13136 ;; This function is called by:
 13137 ;;		_main
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           
 13142                           ;psect for function _scheduler_Init
 13143  18DB                     _scheduler_Init:	
 13144                           
 13145                           ;incstack = 0
 13146                           ; Regs used in _scheduler_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
 13147                           ;scheduler_Init@scheduler stored from wreg
 13148  18DB  00F2               	movwf	scheduler_Init@scheduler
 13149                           
 13150                           ;cooperative_scheduler.c: 28: scheduler->taskEntryVector = 0x0;
 13151  18DC  0872               	movf	scheduler_Init@scheduler,w
 13152  18DD  3E20               	addlw	32
 13153  18DE  0086               	movwf	6
 13154  18DF  3002               	movlw	2	; select bank4/5
 13155  18E0  0087               	movwf	7
 13156  18E1  3000               	movlw	0
 13157  18E2  3FC0               	movwi [0]fsr1
 13158  18E3  3FC1               	movwi [1]fsr1
 13159                           
 13160                           ;cooperative_scheduler.c: 29: u8 k;
 13161                           ;cooperative_scheduler.c: 31: for (k = 0; k < 16; k++) {
 13162  18E4  01F3               	clrf	scheduler_Init@k
 13163  18E5                     L1:	
 13164  18E5  3010               	movlw	16
 13165  18E6  0273               	subwf	scheduler_Init@k,w
 13166  18E7  1803               	btfsc	3,0
 13167  18E8  0008               	return
 13168                           
 13169                           ;cooperative_scheduler.c: 32: scheduler->tasks[k] = (0);
 13170  18E9  3573               	lslf	scheduler_Init@k,w
 13171  18EA  0772               	addwf	scheduler_Init@scheduler,w
 13172  18EB  00F1               	movwf	??_scheduler_Init
 13173  18EC  0871               	movf	??_scheduler_Init,w
 13174  18ED  0086               	movwf	6
 13175  18EE  3002               	movlw	2	; select bank4/5
 13176  18EF  0087               	movwf	7
 13177  18F0  3000               	movlw	0
 13178  18F1  3FC0               	movwi [0]fsr1
 13179  18F2  3FC1               	movwi [1]fsr1
 13180  18F3  3001               	movlw	1
 13181  18F4  00F1               	movwf	??_scheduler_Init
 13182  18F5  0871               	movf	??_scheduler_Init,w
 13183  18F6  07F3               	addwf	scheduler_Init@k,f
 13184  18F7  28E5               	goto	L1
 13185  18F8                     __end_of_scheduler_Init:	
 13186                           
 13187                           	psect	text11
 13188  145D                     __ptext11:	
 13189 ;; *************** function _schedulerExecute *****************
 13190 ;; Defined at:
 13191 ;;		line 77 in file "cooperative_scheduler.c"
 13192 ;; Parameters:    Size  Location     Type
 13193 ;;  scheduler       1    wreg     PTR struct t_scheduler
 13194 ;;		 -> schedulerInst(34), 
 13195 ;; Auto vars:     Size  Location     Type
 13196 ;;  scheduler       1   78[BANK0 ] PTR struct t_scheduler
 13197 ;;		 -> schedulerInst(34), 
 13198 ;;  tickDelta       2   76[BANK0 ] unsigned int 
 13199 ;;  taskLastSyst    2   74[BANK0 ] unsigned int 
 13200 ;;  currentSyste    2   72[BANK0 ] unsigned int 
 13201 ;;  k               1   79[BANK0 ] unsigned char 
 13202 ;; Return value:  Size  Location     Type
 13203 ;;                  1    wreg      void 
 13204 ;; Registers used:
 13205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13206 ;; Tracked objects:
 13207 ;;		On entry : 0/0
 13208 ;;		On exit  : 0/0
 13209 ;;		Unchanged: 0/0
 13210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13212 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13213 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13214 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13215 ;;Total ram usage:       14 bytes
 13216 ;; Hardware stack levels used:    1
 13217 ;; Hardware stack levels required when called:   14
 13218 ;; This function calls:
 13219 ;;		_TMR0_Read16bitTimer
 13220 ;;		_scheduler_TaskRun
 13221 ;; This function is called by:
 13222 ;;		_main
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           
 13227                           ;psect for function _schedulerExecute
 13228  145D                     _schedulerExecute:	
 13229                           
 13230                           ;incstack = 0
 13231                           ; Regs used in _schedulerExecute: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13232                           ;schedulerExecute@scheduler stored from wreg
 13233  145D  0020               	movlb	0	; select bank0
 13234  145E  00EE               	movwf	schedulerExecute@scheduler
 13235                           
 13236                           ;cooperative_scheduler.c: 78: u16 currentSystemTick;
 13237                           ;cooperative_scheduler.c: 79: u16 taskLastSystemTick;
 13238                           ;cooperative_scheduler.c: 80: u16 tickDelta;
 13239                           ;cooperative_scheduler.c: 81: u8 k;
 13240                           ;cooperative_scheduler.c: 83: for (k = 0; k < 16; k++) {
 13241  145F  01EF               	clrf	schedulerExecute@k
 13242  1460                     L2:	
 13243  1460  3010               	movlw	16
 13244  1461  026F               	subwf	schedulerExecute@k,w
 13245  1462  1803               	btfsc	3,0
 13246  1463  0008               	return
 13247                           
 13248                           ;cooperative_scheduler.c: 86: if (!(scheduler->taskEntryVector & (1 << k)) ) {
 13249  1464  086E               	movf	schedulerExecute@scheduler,w
 13250  1465  3E20               	addlw	32
 13251  1466  0086               	movwf	6
 13252  1467  3002               	movlw	2	; select bank4/5
 13253  1468  0087               	movwf	7
 13254  1469  3F40               	moviw [0]fsr1
 13255  146A  00E2               	movwf	??_schedulerExecute
 13256  146B  3F41               	moviw [1]fsr1
 13257  146C  00E3               	movwf	??_schedulerExecute+1
 13258  146D  3001               	movlw	1
 13259  146E  00E4               	movwf	??_schedulerExecute+2
 13260  146F  3000               	movlw	0
 13261  1470  00E5               	movwf	??_schedulerExecute+3
 13262  1471  0A6F               	incf	schedulerExecute@k,w
 13263  1472  2C75               	goto	u4594
 13264  1473                     u4595:	
 13265  1473  35E4               	lslf	??_schedulerExecute+2,f
 13266  1474  0DE5               	rlf	??_schedulerExecute+3,f
 13267  1475                     u4594:	
 13268  1475  0B89               	decfsz	9,f
 13269  1476  2C73               	goto	u4595
 13270  1477  0862               	movf	??_schedulerExecute,w
 13271  1478  0564               	andwf	??_schedulerExecute+2,w
 13272  1479  00E6               	movwf	??_schedulerExecute+4
 13273  147A  0863               	movf	??_schedulerExecute+1,w
 13274  147B  0565               	andwf	??_schedulerExecute+3,w
 13275  147C  00E7               	movwf	??_schedulerExecute+5
 13276  147D  0866               	movf	??_schedulerExecute+4,w
 13277  147E  0467               	iorwf	??_schedulerExecute+5,w
 13278  147F  1903               	btfsc	3,2
 13279  1480  2CD3               	goto	l7849
 13280                           
 13281                           ;cooperative_scheduler.c: 88: }
 13282                           ;cooperative_scheduler.c: 90: currentSystemTick = TMR0_Read16bitTimer();
 13283                           
 13284                           ;cooperative_scheduler.c: 87: continue;
 13285  1481  3198  20BE  3194   	fcall	_TMR0_Read16bitTimer
 13286  1484  0872               	movf	?_TMR0_Read16bitTimer+1,w
 13287  1485  0020               	movlb	0	; select bank0
 13288  1486  00E9               	movwf	schedulerExecute@currentSystemTick+1
 13289  1487  0871               	movf	?_TMR0_Read16bitTimer,w
 13290  1488  00E8               	movwf	schedulerExecute@currentSystemTick
 13291                           
 13292                           ;cooperative_scheduler.c: 91: taskLastSystemTick = scheduler->tasks[k]->systemTickLastEx
      +                          ecuted;
 13293  1489  356F               	lslf	schedulerExecute@k,w
 13294  148A  076E               	addwf	schedulerExecute@scheduler,w
 13295  148B  00E2               	movwf	??_schedulerExecute
 13296  148C  0862               	movf	??_schedulerExecute,w
 13297  148D  0086               	movwf	6
 13298  148E  3002               	movlw	2	; select bank4/5
 13299  148F  0087               	movwf	7
 13300  1490  3F40               	moviw [0]fsr1
 13301  1491  00E3               	movwf	??_schedulerExecute+1
 13302  1492  3F41               	moviw [1]fsr1
 13303  1493  00E4               	movwf	??_schedulerExecute+2
 13304  1494  0863               	movf	??_schedulerExecute+1,w
 13305  1495  0086               	movwf	6
 13306  1496  0864               	movf	??_schedulerExecute+2,w
 13307  1497  0087               	movwf	7
 13308  1498  3F40               	moviw [0]fsr1
 13309  1499  00EA               	movwf	schedulerExecute@taskLastSystemTick
 13310  149A  3F41               	moviw [1]fsr1
 13311  149B  00EB               	movwf	schedulerExecute@taskLastSystemTick+1
 13312                           
 13313                           ;cooperative_scheduler.c: 99: tickDelta = currentSystemTick - taskLastSystemTick;
 13314  149C  096A               	comf	schedulerExecute@taskLastSystemTick,w
 13315  149D  00E2               	movwf	??_schedulerExecute
 13316  149E  096B               	comf	schedulerExecute@taskLastSystemTick+1,w
 13317  149F  00E3               	movwf	??_schedulerExecute+1
 13318  14A0  0AE2               	incf	??_schedulerExecute,f
 13319  14A1  1903               	skipnz
 13320  14A2  0AE3               	incf	??_schedulerExecute+1,f
 13321  14A3  0868               	movf	schedulerExecute@currentSystemTick,w
 13322  14A4  0762               	addwf	??_schedulerExecute,w
 13323  14A5  00EC               	movwf	schedulerExecute@tickDelta
 13324  14A6  0869               	movf	schedulerExecute@currentSystemTick+1,w
 13325  14A7  3D63               	addwfc	??_schedulerExecute+1,w
 13326  14A8  00ED               	movwf	schedulerExecute@tickDelta+1
 13327                           
 13328                           ;cooperative_scheduler.c: 103: if (tickDelta >= scheduler->tasks[k]->taskInterval) {
 13329  14A9  356F               	lslf	schedulerExecute@k,w
 13330  14AA  076E               	addwf	schedulerExecute@scheduler,w
 13331  14AB  00E2               	movwf	??_schedulerExecute
 13332  14AC  0862               	movf	??_schedulerExecute,w
 13333  14AD  0086               	movwf	6
 13334  14AE  3002               	movlw	2	; select bank4/5
 13335  14AF  0087               	movwf	7
 13336  14B0  3F40               	moviw [0]fsr1
 13337  14B1  00E3               	movwf	??_schedulerExecute+1
 13338  14B2  3F41               	moviw [1]fsr1
 13339  14B3  00E4               	movwf	??_schedulerExecute+2
 13340  14B4  0863               	movf	??_schedulerExecute+1,w
 13341  14B5  0086               	movwf	6
 13342  14B6  0864               	movf	??_schedulerExecute+2,w
 13343  14B7  0087               	movwf	7
 13344  14B8  314A               	addfsr 1,10
 13345  14B9  3F40               	moviw [0]fsr1
 13346  14BA  00E5               	movwf	??_schedulerExecute+3
 13347  14BB  3F41               	moviw [1]fsr1
 13348  14BC  00E6               	movwf	??_schedulerExecute+4
 13349  14BD  0866               	movf	??_schedulerExecute+4,w
 13350  14BE  026D               	subwf	schedulerExecute@tickDelta+1,w
 13351  14BF  1D03               	skipz
 13352  14C0  2CC3               	goto	u4615
 13353  14C1  0865               	movf	??_schedulerExecute+3,w
 13354  14C2  026C               	subwf	schedulerExecute@tickDelta,w
 13355  14C3                     u4615:	
 13356  14C3  1C03               	skipc
 13357  14C4  2CD3               	goto	l7849
 13358                           
 13359                           ;cooperative_scheduler.c: 104: scheduler_TaskRun(scheduler->tasks[k]);
 13360  14C5  356F               	lslf	schedulerExecute@k,w
 13361  14C6  076E               	addwf	schedulerExecute@scheduler,w
 13362  14C7  00E2               	movwf	??_schedulerExecute
 13363  14C8  0862               	movf	??_schedulerExecute,w
 13364  14C9  0086               	movwf	6
 13365  14CA  3002               	movlw	2	; select bank4/5
 13366  14CB  0087               	movwf	7
 13367  14CC  3F40               	moviw [0]fsr1
 13368  14CD  00E0               	movwf	scheduler_TaskRun@task
 13369  14CE  3F41               	moviw [1]fsr1
 13370  14CF  00E1               	movwf	scheduler_TaskRun@task+1
 13371  14D0  3199  2152  3194   	fcall	_scheduler_TaskRun
 13372  14D3                     l7849:	
 13373  14D3  3001               	movlw	1
 13374  14D4  0020               	movlb	0	; select bank0
 13375  14D5  00E2               	movwf	??_schedulerExecute
 13376  14D6  0862               	movf	??_schedulerExecute,w
 13377  14D7  07EF               	addwf	schedulerExecute@k,f
 13378  14D8  2C60               	goto	L2
 13379  14D9                     __end_of_schedulerExecute:	
 13380                           
 13381                           	psect	text12
 13382  1952                     __ptext12:	
 13383 ;; *************** function _scheduler_TaskRun *****************
 13384 ;; Defined at:
 13385 ;;		line 20 in file "cooperative_scheduler.c"
 13386 ;; Parameters:    Size  Location     Type
 13387 ;;  task            2   64[BANK0 ] PTR struct t_schedulerTa
 13388 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 13389 ;;		 -> flashy_task(13), NULL(0), 
 13390 ;; Auto vars:     Size  Location     Type
 13391 ;;		None
 13392 ;; Return value:  Size  Location     Type
 13393 ;;                  1    wreg      void 
 13394 ;; Registers used:
 13395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13396 ;; Tracked objects:
 13397 ;;		On entry : 0/0
 13398 ;;		On exit  : 0/0
 13399 ;;		Unchanged: 0/0
 13400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13405 ;;Total ram usage:        2 bytes
 13406 ;; Hardware stack levels used:    1
 13407 ;; Hardware stack levels required when called:   13
 13408 ;; This function calls:
 13409 ;;		Absolute function
 13410 ;;		_TMR0_Read16bitTimer
 13411 ;;		_flashy_Main
 13412 ;;		_locked_Main
 13413 ;;		_menu_Main
 13414 ;;		_secret_Main
 13415 ;;		_slot_Main
 13416 ;; This function is called by:
 13417 ;;		_schedulerExecute
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           
 13422                           ;psect for function _scheduler_TaskRun
 13423  1952                     _scheduler_TaskRun:	
 13424                           
 13425                           ;cooperative_scheduler.c: 21: task->taskExecuteCallback (task->taskData);
 13426                           
 13427                           ;incstack = 0
 13428                           ; Regs used in _scheduler_TaskRun: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13429  1952  0020               	movlb	0	; select bank0
 13430  1953  0860               	movf	scheduler_TaskRun@task,w
 13431  1954  0086               	movwf	6
 13432  1955  0861               	movf	scheduler_TaskRun@task+1,w
 13433  1956  0087               	movwf	7
 13434  1957  3142               	addfsr 1,2
 13435  1958  3F40               	moviw [0]fsr1
 13436  1959  00D2               	movwf	secret_Main@taskData
 13437  195A  3F41               	moviw [1]fsr1
 13438  195B  00D3               	movwf	secret_Main@taskData+1
 13439  195C  0860               	movf	scheduler_TaskRun@task,w
 13440  195D  0086               	movwf	6
 13441  195E  0861               	movf	scheduler_TaskRun@task+1,w
 13442  195F  0087               	movwf	7
 13443  1960  3148               	addfsr 1,8
 13444  1961  3F41               	moviw [1]fsr1
 13445  1962  008A               	movwf	10
 13446  1963  3F40               	moviw [0]fsr1
 13447  1964  000A               	callw
 13448  1965  3199               	pagesel	$
 13449                           
 13450                           ;cooperative_scheduler.c: 22: task->systemTickLastExecuted = TMR0_Read16bitTimer();
 13451  1966  3198  20BE         	fcall	_TMR0_Read16bitTimer
 13452  1968  0020               	movlb	0	; select bank0
 13453  1969  0860               	movf	scheduler_TaskRun@task,w
 13454  196A  0086               	movwf	6
 13455  196B  0861               	movf	scheduler_TaskRun@task+1,w
 13456  196C  0087               	movwf	7
 13457  196D  0871               	movf	?_TMR0_Read16bitTimer,w
 13458  196E  3FC0               	movwi [0]fsr1
 13459  196F  0872               	movf	?_TMR0_Read16bitTimer+1,w
 13460  1970  3FC1               	movwi [1]fsr1
 13461  1971  0008               	return
 13462  1972                     __end_of_scheduler_TaskRun:	
 13463                           
 13464                           	psect	text13
 13465  045D                     __ptext13:	
 13466 ;; *************** function _secret_Main *****************
 13467 ;; Defined at:
 13468 ;;		line 99 in file "secret_task.c"
 13469 ;; Parameters:    Size  Location     Type
 13470 ;;  taskData        2   50[BANK0 ] PTR void 
 13471 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13472 ;;		 -> flashy_TaskData(30), NULL(0), 
 13473 ;; Auto vars:     Size  Location     Type
 13474 ;;  data            2   56[BANK0 ] PTR struct t_secret_task
 13475 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13476 ;;		 -> flashy_TaskData(30), NULL(0), 
 13477 ;;  buttonPresse    1   55[BANK0 ] unsigned char 
 13478 ;;  secret_found    1   54[BANK0 ] unsigned char 
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  1    wreg      void 
 13481 ;; Registers used:
 13482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13488 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13489 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13490 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13491 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13492 ;;Total ram usage:        8 bytes
 13493 ;; Hardware stack levels used:    1
 13494 ;; Hardware stack levels required when called:    6
 13495 ;; This function calls:
 13496 ;;		_nullifyBadge_buttonsGet
 13497 ;;		_secret_check
 13498 ;;		_secret_clear
 13499 ;; This function is called by:
 13500 ;;		_main
 13501 ;;		_scheduler_TaskRun
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505                           
 13506                           ;psect for function _secret_Main
 13507  045D                     _secret_Main:	
 13508                           
 13509                           ;secret_task.c: 100: struct t_secret_taskData *data = (struct t_secret_taskData *) taskD
      +                          ata;
 13510                           
 13511                           ;incstack = 0
 13512                           ; Regs used in _secret_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13513  045D  0020               	movlb	0	; select bank0
 13514  045E  0853               	movf	secret_Main@taskData+1,w
 13515  045F  00D9               	movwf	secret_Main@data+1
 13516  0460  0852               	movf	secret_Main@taskData,w
 13517  0461  00D8               	movwf	secret_Main@data
 13518                           
 13519                           ;secret_task.c: 101: u8 buttonPressed, secret_found = 0;
 13520  0462  01D6               	clrf	secret_Main@secret_found
 13521                           
 13522                           ;secret_task.c: 103: buttonPressed = nullifyBadge_buttonsGet();
 13523  0463  319A  22AA  3184   	fcall	_nullifyBadge_buttonsGet
 13524  0466  0020               	movlb	0	; select bank0
 13525  0467  00D4               	movwf	??_secret_Main
 13526  0468  0854               	movf	??_secret_Main,w
 13527  0469  00D7               	movwf	secret_Main@buttonPressed
 13528                           
 13529                           ;secret_task.c: 104: switch (buttonPressed) {
 13530  046A  2DFD               	goto	l7571
 13531  046B                     l7485:	
 13532                           ;secret_task.c: 105: case 0:
 13533                           
 13534                           
 13535                           ;secret_task.c: 107: if (data->delayTickCount == 0){
 13536  046B  0858               	movf	secret_Main@data,w
 13537  046C  0086               	movwf	6
 13538  046D  0859               	movf	secret_Main@data+1,w
 13539  046E  0087               	movwf	7
 13540  046F  3142               	addfsr 1,2
 13541  0470  0016               	moviw fsr1++
 13542  0471  0401               	iorwf	1,w
 13543  0472  1D03               	btfss	3,2
 13544  0473  2C85               	goto	l7491
 13545                           
 13546                           ;secret_task.c: 108: data->delayTickCount = 300;
 13547  0474  0858               	movf	secret_Main@data,w
 13548  0475  0086               	movwf	6
 13549  0476  0859               	movf	secret_Main@data+1,w
 13550  0477  0087               	movwf	7
 13551  0478  3142               	addfsr 1,2
 13552  0479  302C               	movlw	44
 13553  047A  3FC0               	movwi [0]fsr1
 13554  047B  3001               	movlw	1
 13555  047C  3FC1               	movwi [1]fsr1
 13556                           
 13557                           ;secret_task.c: 109: secret_check(data, 0);
 13558  047D  0859               	movf	secret_Main@data+1,w
 13559  047E  00F8               	movwf	secret_check@data+1
 13560  047F  0858               	movf	secret_Main@data,w
 13561  0480  00F7               	movwf	secret_check@data
 13562  0481  01F9               	clrf	secret_check@buttonPressed
 13563  0482  3195  255B  3184   	fcall	_secret_check
 13564  0485                     l7491:	
 13565                           
 13566                           ;secret_task.c: 110: }
 13567                           ;secret_task.c: 111: data->holdCountA = 0;
 13568  0485  0020               	movlb	0	; select bank0
 13569  0486  0858               	movf	secret_Main@data,w
 13570  0487  0086               	movwf	6
 13571  0488  0859               	movf	secret_Main@data+1,w
 13572  0489  0087               	movwf	7
 13573  048A  3144               	addfsr 1,4
 13574  048B  3000               	movlw	0
 13575  048C  3FC0               	movwi [0]fsr1
 13576  048D  3FC1               	movwi [1]fsr1
 13577                           
 13578                           ;secret_task.c: 112: data->holdCountB = 0;
 13579  048E  0858               	movf	secret_Main@data,w
 13580  048F  0086               	movwf	6
 13581  0490  0859               	movf	secret_Main@data+1,w
 13582  0491  0087               	movwf	7
 13583  0492  3146               	addfsr 1,6
 13584  0493  3000               	movlw	0
 13585  0494  3FC0               	movwi [0]fsr1
 13586  0495  3FC1               	movwi [1]fsr1
 13587                           
 13588                           ;secret_task.c: 113: data->holdCountX = 0;
 13589  0496  0858               	movf	secret_Main@data,w
 13590  0497  0086               	movwf	6
 13591  0498  0859               	movf	secret_Main@data+1,w
 13592  0499  0087               	movwf	7
 13593  049A  3148               	addfsr 1,8
 13594  049B  3000               	movlw	0
 13595  049C  3FC0               	movwi [0]fsr1
 13596  049D  3FC1               	movwi [1]fsr1
 13597                           
 13598                           ;secret_task.c: 114: data->holdCountY = 0;
 13599  049E  0858               	movf	secret_Main@data,w
 13600  049F  0086               	movwf	6
 13601  04A0  0859               	movf	secret_Main@data+1,w
 13602  04A1  0087               	movwf	7
 13603  04A2  314A               	addfsr 1,10
 13604  04A3  3000               	movlw	0
 13605  04A4  3FC0               	movwi [0]fsr1
 13606  04A5  3FC1               	movwi [1]fsr1
 13607                           
 13608                           ;secret_task.c: 115: data->noholdCount += 1;
 13609  04A6  0858               	movf	secret_Main@data,w
 13610  04A7  0086               	movwf	6
 13611  04A8  0859               	movf	secret_Main@data+1,w
 13612  04A9  0087               	movwf	7
 13613  04AA  314C               	addfsr 1,12
 13614  04AB  3001               	movlw	1
 13615  04AC  0781               	addwf	1,f
 13616  04AD  3141               	addfsr 1,1
 13617  04AE  1803               	skipnc
 13618  04AF  0A81               	incf	1,f
 13619                           
 13620                           ;secret_task.c: 116: data->delayTickCount -= 1;
 13621  04B0  0858               	movf	secret_Main@data,w
 13622  04B1  0086               	movwf	6
 13623  04B2  0859               	movf	secret_Main@data+1,w
 13624  04B3  0087               	movwf	7
 13625  04B4  3142               	addfsr 1,2
 13626  04B5  3001               	movlw	1
 13627  04B6  0281               	subwf	1,f
 13628  04B7  3141               	addfsr 1,1
 13629  04B8  3000               	movlw	0
 13630  04B9  3B81               	subwfb	1,f
 13631  04BA  317F               	addfsr 1,-1
 13632                           
 13633                           ;secret_task.c: 117: break;
 13634  04BB  2E0F               	goto	l7573
 13635  04BC                     l7503:	
 13636                           ;secret_task.c: 118: case 1:
 13637                           
 13638                           
 13639                           ;secret_task.c: 120: if (data->holdCountA == 0){
 13640  04BC  0858               	movf	secret_Main@data,w
 13641  04BD  0086               	movwf	6
 13642  04BE  0859               	movf	secret_Main@data+1,w
 13643  04BF  0087               	movwf	7
 13644  04C0  3144               	addfsr 1,4
 13645  04C1  0016               	moviw fsr1++
 13646  04C2  0401               	iorwf	1,w
 13647  04C3  1D03               	btfss	3,2
 13648  04C4  2CD4               	goto	l7507
 13649                           
 13650                           ;secret_task.c: 121: secret_found = secret_check(data, buttonPressed);
 13651  04C5  0859               	movf	secret_Main@data+1,w
 13652  04C6  00F8               	movwf	secret_check@data+1
 13653  04C7  0858               	movf	secret_Main@data,w
 13654  04C8  00F7               	movwf	secret_check@data
 13655  04C9  0857               	movf	secret_Main@buttonPressed,w
 13656  04CA  00D4               	movwf	??_secret_Main
 13657  04CB  0854               	movf	??_secret_Main,w
 13658  04CC  00F9               	movwf	secret_check@buttonPressed
 13659  04CD  3195  255B  3184   	fcall	_secret_check
 13660  04D0  0020               	movlb	0	; select bank0
 13661  04D1  00D5               	movwf	??_secret_Main+1
 13662  04D2  0855               	movf	??_secret_Main+1,w
 13663  04D3  00D6               	movwf	secret_Main@secret_found
 13664  04D4                     l7507:	
 13665                           
 13666                           ;secret_task.c: 122: }
 13667                           ;secret_task.c: 123: data->holdCountA += 1;
 13668  04D4  0858               	movf	secret_Main@data,w
 13669  04D5  0086               	movwf	6
 13670  04D6  0859               	movf	secret_Main@data+1,w
 13671  04D7  0087               	movwf	7
 13672  04D8  3144               	addfsr 1,4
 13673  04D9  3001               	movlw	1
 13674  04DA  0781               	addwf	1,f
 13675  04DB  3141               	addfsr 1,1
 13676  04DC  1803               	skipnc
 13677  04DD  0A81               	incf	1,f
 13678                           
 13679                           ;secret_task.c: 124: data->holdCountB = 0;
 13680  04DE  0858               	movf	secret_Main@data,w
 13681  04DF  0086               	movwf	6
 13682  04E0  0859               	movf	secret_Main@data+1,w
 13683  04E1  0087               	movwf	7
 13684  04E2  3146               	addfsr 1,6
 13685  04E3  3000               	movlw	0
 13686  04E4  3FC0               	movwi [0]fsr1
 13687  04E5  3FC1               	movwi [1]fsr1
 13688                           
 13689                           ;secret_task.c: 125: data->holdCountX = 0;
 13690  04E6  0858               	movf	secret_Main@data,w
 13691  04E7  0086               	movwf	6
 13692  04E8  0859               	movf	secret_Main@data+1,w
 13693  04E9  0087               	movwf	7
 13694  04EA  3148               	addfsr 1,8
 13695  04EB  3000               	movlw	0
 13696  04EC  3FC0               	movwi [0]fsr1
 13697  04ED  3FC1               	movwi [1]fsr1
 13698                           
 13699                           ;secret_task.c: 126: data->holdCountY = 0;
 13700  04EE  0858               	movf	secret_Main@data,w
 13701  04EF  0086               	movwf	6
 13702  04F0  0859               	movf	secret_Main@data+1,w
 13703  04F1  0087               	movwf	7
 13704  04F2  314A               	addfsr 1,10
 13705  04F3  3000               	movlw	0
 13706  04F4  3FC0               	movwi [0]fsr1
 13707  04F5  3FC1               	movwi [1]fsr1
 13708                           
 13709                           ;secret_task.c: 127: data->noholdCount = 0;
 13710  04F6  0858               	movf	secret_Main@data,w
 13711  04F7  0086               	movwf	6
 13712  04F8  0859               	movf	secret_Main@data+1,w
 13713  04F9  0087               	movwf	7
 13714  04FA  314C               	addfsr 1,12
 13715  04FB  3000               	movlw	0
 13716  04FC  3FC0               	movwi [0]fsr1
 13717  04FD  3FC1               	movwi [1]fsr1
 13718                           
 13719                           ;secret_task.c: 128: data->delayTickCount = 300;
 13720  04FE  0858               	movf	secret_Main@data,w
 13721  04FF  0086               	movwf	6
 13722  0500  0859               	movf	secret_Main@data+1,w
 13723  0501  0087               	movwf	7
 13724  0502  3142               	addfsr 1,2
 13725  0503  302C               	movlw	44
 13726  0504  3FC0               	movwi [0]fsr1
 13727  0505  3001               	movlw	1
 13728  0506  3FC1               	movwi [1]fsr1
 13729                           
 13730                           ;secret_task.c: 129: break;
 13731  0507  2E0F               	goto	l7573
 13732  0508                     l7519:	
 13733                           ;secret_task.c: 130: case 2:
 13734                           
 13735                           
 13736                           ;secret_task.c: 132: if (data->holdCountB == 0){
 13737  0508  0858               	movf	secret_Main@data,w
 13738  0509  0086               	movwf	6
 13739  050A  0859               	movf	secret_Main@data+1,w
 13740  050B  0087               	movwf	7
 13741  050C  3146               	addfsr 1,6
 13742  050D  0016               	moviw fsr1++
 13743  050E  0401               	iorwf	1,w
 13744  050F  1D03               	btfss	3,2
 13745  0510  2D20               	goto	l7523
 13746                           
 13747                           ;secret_task.c: 133: secret_found = secret_check(data, buttonPressed);
 13748  0511  0859               	movf	secret_Main@data+1,w
 13749  0512  00F8               	movwf	secret_check@data+1
 13750  0513  0858               	movf	secret_Main@data,w
 13751  0514  00F7               	movwf	secret_check@data
 13752  0515  0857               	movf	secret_Main@buttonPressed,w
 13753  0516  00D4               	movwf	??_secret_Main
 13754  0517  0854               	movf	??_secret_Main,w
 13755  0518  00F9               	movwf	secret_check@buttonPressed
 13756  0519  3195  255B  3184   	fcall	_secret_check
 13757  051C  0020               	movlb	0	; select bank0
 13758  051D  00D5               	movwf	??_secret_Main+1
 13759  051E  0855               	movf	??_secret_Main+1,w
 13760  051F  00D6               	movwf	secret_Main@secret_found
 13761  0520                     l7523:	
 13762                           
 13763                           ;secret_task.c: 134: }
 13764                           ;secret_task.c: 135: data->holdCountA = 0;
 13765  0520  0858               	movf	secret_Main@data,w
 13766  0521  0086               	movwf	6
 13767  0522  0859               	movf	secret_Main@data+1,w
 13768  0523  0087               	movwf	7
 13769  0524  3144               	addfsr 1,4
 13770  0525  3000               	movlw	0
 13771  0526  3FC0               	movwi [0]fsr1
 13772  0527  3FC1               	movwi [1]fsr1
 13773                           
 13774                           ;secret_task.c: 136: data->holdCountB += 1;
 13775  0528  0858               	movf	secret_Main@data,w
 13776  0529  0086               	movwf	6
 13777  052A  0859               	movf	secret_Main@data+1,w
 13778  052B  0087               	movwf	7
 13779  052C  3146               	addfsr 1,6
 13780  052D  3001               	movlw	1
 13781  052E  0781               	addwf	1,f
 13782  052F  3141               	addfsr 1,1
 13783  0530  1803               	skipnc
 13784  0531  0A81               	incf	1,f
 13785                           
 13786                           ;secret_task.c: 137: data->holdCountX = 0;
 13787  0532  0858               	movf	secret_Main@data,w
 13788  0533  0086               	movwf	6
 13789  0534  0859               	movf	secret_Main@data+1,w
 13790  0535  0087               	movwf	7
 13791  0536  3148               	addfsr 1,8
 13792  0537  3000               	movlw	0
 13793  0538  3FC0               	movwi [0]fsr1
 13794  0539  3FC1               	movwi [1]fsr1
 13795                           
 13796                           ;secret_task.c: 138: data->holdCountY = 0;
 13797  053A  0858               	movf	secret_Main@data,w
 13798  053B  0086               	movwf	6
 13799  053C  0859               	movf	secret_Main@data+1,w
 13800  053D  0087               	movwf	7
 13801  053E  314A               	addfsr 1,10
 13802  053F  3000               	movlw	0
 13803  0540  3FC0               	movwi [0]fsr1
 13804  0541  3FC1               	movwi [1]fsr1
 13805                           
 13806                           ;secret_task.c: 139: data->noholdCount = 0;
 13807  0542  0858               	movf	secret_Main@data,w
 13808  0543  0086               	movwf	6
 13809  0544  0859               	movf	secret_Main@data+1,w
 13810  0545  0087               	movwf	7
 13811  0546  314C               	addfsr 1,12
 13812  0547  3000               	movlw	0
 13813  0548  3FC0               	movwi [0]fsr1
 13814  0549  3FC1               	movwi [1]fsr1
 13815                           
 13816                           ;secret_task.c: 140: data->delayTickCount = 300;
 13817  054A  0858               	movf	secret_Main@data,w
 13818  054B  0086               	movwf	6
 13819  054C  0859               	movf	secret_Main@data+1,w
 13820  054D  0087               	movwf	7
 13821  054E  3142               	addfsr 1,2
 13822  054F  302C               	movlw	44
 13823  0550  3FC0               	movwi [0]fsr1
 13824  0551  3001               	movlw	1
 13825  0552  3FC1               	movwi [1]fsr1
 13826                           
 13827                           ;secret_task.c: 141: break;
 13828  0553  2E0F               	goto	l7573
 13829  0554                     l7535:	
 13830                           ;secret_task.c: 142: case 4:
 13831                           
 13832                           
 13833                           ;secret_task.c: 144: if (data->holdCountX == 0){
 13834  0554  0858               	movf	secret_Main@data,w
 13835  0555  0086               	movwf	6
 13836  0556  0859               	movf	secret_Main@data+1,w
 13837  0557  0087               	movwf	7
 13838  0558  3148               	addfsr 1,8
 13839  0559  0016               	moviw fsr1++
 13840  055A  0401               	iorwf	1,w
 13841  055B  1D03               	btfss	3,2
 13842  055C  2D6C               	goto	l7539
 13843                           
 13844                           ;secret_task.c: 145: secret_found = secret_check(data, buttonPressed);
 13845  055D  0859               	movf	secret_Main@data+1,w
 13846  055E  00F8               	movwf	secret_check@data+1
 13847  055F  0858               	movf	secret_Main@data,w
 13848  0560  00F7               	movwf	secret_check@data
 13849  0561  0857               	movf	secret_Main@buttonPressed,w
 13850  0562  00D4               	movwf	??_secret_Main
 13851  0563  0854               	movf	??_secret_Main,w
 13852  0564  00F9               	movwf	secret_check@buttonPressed
 13853  0565  3195  255B  3184   	fcall	_secret_check
 13854  0568  0020               	movlb	0	; select bank0
 13855  0569  00D5               	movwf	??_secret_Main+1
 13856  056A  0855               	movf	??_secret_Main+1,w
 13857  056B  00D6               	movwf	secret_Main@secret_found
 13858  056C                     l7539:	
 13859                           
 13860                           ;secret_task.c: 146: }
 13861                           ;secret_task.c: 147: data->holdCountA = 0;
 13862  056C  0858               	movf	secret_Main@data,w
 13863  056D  0086               	movwf	6
 13864  056E  0859               	movf	secret_Main@data+1,w
 13865  056F  0087               	movwf	7
 13866  0570  3144               	addfsr 1,4
 13867  0571  3000               	movlw	0
 13868  0572  3FC0               	movwi [0]fsr1
 13869  0573  3FC1               	movwi [1]fsr1
 13870                           
 13871                           ;secret_task.c: 148: data->holdCountB = 0;
 13872  0574  0858               	movf	secret_Main@data,w
 13873  0575  0086               	movwf	6
 13874  0576  0859               	movf	secret_Main@data+1,w
 13875  0577  0087               	movwf	7
 13876  0578  3146               	addfsr 1,6
 13877  0579  3000               	movlw	0
 13878  057A  3FC0               	movwi [0]fsr1
 13879  057B  3FC1               	movwi [1]fsr1
 13880                           
 13881                           ;secret_task.c: 149: data->holdCountX += 1;
 13882  057C  0858               	movf	secret_Main@data,w
 13883  057D  0086               	movwf	6
 13884  057E  0859               	movf	secret_Main@data+1,w
 13885  057F  0087               	movwf	7
 13886  0580  3148               	addfsr 1,8
 13887  0581  3001               	movlw	1
 13888  0582  0781               	addwf	1,f
 13889  0583  3141               	addfsr 1,1
 13890  0584  1803               	skipnc
 13891  0585  0A81               	incf	1,f
 13892                           
 13893                           ;secret_task.c: 150: data->holdCountY = 0;
 13894  0586  0858               	movf	secret_Main@data,w
 13895  0587  0086               	movwf	6
 13896  0588  0859               	movf	secret_Main@data+1,w
 13897  0589  0087               	movwf	7
 13898  058A  314A               	addfsr 1,10
 13899  058B  3000               	movlw	0
 13900  058C  3FC0               	movwi [0]fsr1
 13901  058D  3FC1               	movwi [1]fsr1
 13902                           
 13903                           ;secret_task.c: 151: data->noholdCount = 0;
 13904  058E  0858               	movf	secret_Main@data,w
 13905  058F  0086               	movwf	6
 13906  0590  0859               	movf	secret_Main@data+1,w
 13907  0591  0087               	movwf	7
 13908  0592  314C               	addfsr 1,12
 13909  0593  3000               	movlw	0
 13910  0594  3FC0               	movwi [0]fsr1
 13911  0595  3FC1               	movwi [1]fsr1
 13912                           
 13913                           ;secret_task.c: 152: data->delayTickCount = 300;
 13914  0596  0858               	movf	secret_Main@data,w
 13915  0597  0086               	movwf	6
 13916  0598  0859               	movf	secret_Main@data+1,w
 13917  0599  0087               	movwf	7
 13918  059A  3142               	addfsr 1,2
 13919  059B  302C               	movlw	44
 13920  059C  3FC0               	movwi [0]fsr1
 13921  059D  3001               	movlw	1
 13922  059E  3FC1               	movwi [1]fsr1
 13923                           
 13924                           ;secret_task.c: 153: break;
 13925  059F  2E0F               	goto	l7573
 13926  05A0                     l7551:	
 13927                           ;secret_task.c: 154: case 8:
 13928                           
 13929                           
 13930                           ;secret_task.c: 156: if (data->holdCountY == 0){
 13931  05A0  0858               	movf	secret_Main@data,w
 13932  05A1  0086               	movwf	6
 13933  05A2  0859               	movf	secret_Main@data+1,w
 13934  05A3  0087               	movwf	7
 13935  05A4  314A               	addfsr 1,10
 13936  05A5  0016               	moviw fsr1++
 13937  05A6  0401               	iorwf	1,w
 13938  05A7  1D03               	btfss	3,2
 13939  05A8  2DB8               	goto	l7555
 13940                           
 13941                           ;secret_task.c: 157: secret_found = secret_check(data, buttonPressed);
 13942  05A9  0859               	movf	secret_Main@data+1,w
 13943  05AA  00F8               	movwf	secret_check@data+1
 13944  05AB  0858               	movf	secret_Main@data,w
 13945  05AC  00F7               	movwf	secret_check@data
 13946  05AD  0857               	movf	secret_Main@buttonPressed,w
 13947  05AE  00D4               	movwf	??_secret_Main
 13948  05AF  0854               	movf	??_secret_Main,w
 13949  05B0  00F9               	movwf	secret_check@buttonPressed
 13950  05B1  3195  255B  3184   	fcall	_secret_check
 13951  05B4  0020               	movlb	0	; select bank0
 13952  05B5  00D5               	movwf	??_secret_Main+1
 13953  05B6  0855               	movf	??_secret_Main+1,w
 13954  05B7  00D6               	movwf	secret_Main@secret_found
 13955  05B8                     l7555:	
 13956                           
 13957                           ;secret_task.c: 158: }
 13958                           ;secret_task.c: 159: data->holdCountA = 0;
 13959  05B8  0858               	movf	secret_Main@data,w
 13960  05B9  0086               	movwf	6
 13961  05BA  0859               	movf	secret_Main@data+1,w
 13962  05BB  0087               	movwf	7
 13963  05BC  3144               	addfsr 1,4
 13964  05BD  3000               	movlw	0
 13965  05BE  3FC0               	movwi [0]fsr1
 13966  05BF  3FC1               	movwi [1]fsr1
 13967                           
 13968                           ;secret_task.c: 160: data->holdCountB = 0;
 13969  05C0  0858               	movf	secret_Main@data,w
 13970  05C1  0086               	movwf	6
 13971  05C2  0859               	movf	secret_Main@data+1,w
 13972  05C3  0087               	movwf	7
 13973  05C4  3146               	addfsr 1,6
 13974  05C5  3000               	movlw	0
 13975  05C6  3FC0               	movwi [0]fsr1
 13976  05C7  3FC1               	movwi [1]fsr1
 13977                           
 13978                           ;secret_task.c: 161: data->holdCountX = 0;
 13979  05C8  0858               	movf	secret_Main@data,w
 13980  05C9  0086               	movwf	6
 13981  05CA  0859               	movf	secret_Main@data+1,w
 13982  05CB  0087               	movwf	7
 13983  05CC  3148               	addfsr 1,8
 13984  05CD  3000               	movlw	0
 13985  05CE  3FC0               	movwi [0]fsr1
 13986  05CF  3FC1               	movwi [1]fsr1
 13987                           
 13988                           ;secret_task.c: 162: data->holdCountY += 1;
 13989  05D0  0858               	movf	secret_Main@data,w
 13990  05D1  0086               	movwf	6
 13991  05D2  0859               	movf	secret_Main@data+1,w
 13992  05D3  0087               	movwf	7
 13993  05D4  314A               	addfsr 1,10
 13994  05D5  3001               	movlw	1
 13995  05D6  0781               	addwf	1,f
 13996  05D7  3141               	addfsr 1,1
 13997  05D8  1803               	skipnc
 13998  05D9  0A81               	incf	1,f
 13999                           
 14000                           ;secret_task.c: 163: data->noholdCount = 0;
 14001  05DA  0858               	movf	secret_Main@data,w
 14002  05DB  0086               	movwf	6
 14003  05DC  0859               	movf	secret_Main@data+1,w
 14004  05DD  0087               	movwf	7
 14005  05DE  314C               	addfsr 1,12
 14006  05DF  3000               	movlw	0
 14007  05E0  3FC0               	movwi [0]fsr1
 14008  05E1  3FC1               	movwi [1]fsr1
 14009                           
 14010                           ;secret_task.c: 164: data->delayTickCount = 300;
 14011  05E2  0858               	movf	secret_Main@data,w
 14012  05E3  0086               	movwf	6
 14013  05E4  0859               	movf	secret_Main@data+1,w
 14014  05E5  0087               	movwf	7
 14015  05E6  3142               	addfsr 1,2
 14016  05E7  302C               	movlw	44
 14017  05E8  3FC0               	movwi [0]fsr1
 14018  05E9  3001               	movlw	1
 14019  05EA  3FC1               	movwi [1]fsr1
 14020                           
 14021                           ;secret_task.c: 165: break;
 14022  05EB  2E0F               	goto	l7573
 14023  05EC                     l7567:	
 14024                           ;secret_task.c: 166: default:
 14025                           
 14026                           
 14027                           ;secret_task.c: 168: secret_check(data, 0);
 14028  05EC  0859               	movf	secret_Main@data+1,w
 14029  05ED  00F8               	movwf	secret_check@data+1
 14030  05EE  0858               	movf	secret_Main@data,w
 14031  05EF  00F7               	movwf	secret_check@data
 14032  05F0  01F9               	clrf	secret_check@buttonPressed
 14033  05F1  3195  255B  3184   	fcall	_secret_check
 14034                           
 14035                           ;secret_task.c: 169: secret_clear(data);
 14036  05F4  0020               	movlb	0	; select bank0
 14037  05F5  0859               	movf	secret_Main@data+1,w
 14038  05F6  00F2               	movwf	secret_clear@data+1
 14039  05F7  0858               	movf	secret_Main@data,w
 14040  05F8  00F1               	movwf	secret_clear@data
 14041  05F9  319B  230D  3184   	fcall	_secret_clear
 14042                           
 14043                           ;secret_task.c: 170: }
 14044  05FC  2E0F               	goto	l7573
 14045  05FD                     l7571:	
 14046  05FD  0020               	movlb	0	; select bank0
 14047  05FE  0857               	movf	secret_Main@buttonPressed,w
 14048                           
 14049                           ; Switch size 1, requested type "space"
 14050                           ; Number of cases is 5, Range of values is 0 to 8
 14051                           ; switch strategies available:
 14052                           ; Name         Instructions Cycles
 14053                           ; simple_byte           16     9 (average)
 14054                           ; direct_byte           24     6 (fixed)
 14055                           ; jumptable            260     6 (fixed)
 14056                           ;	Chosen strategy is simple_byte
 14057  05FF  3A00               	xorlw	0	; case 0
 14058  0600  1903               	skipnz
 14059  0601  2C6B               	goto	l7485
 14060  0602  3A01               	xorlw	1	; case 1
 14061  0603  1903               	skipnz
 14062  0604  2CBC               	goto	l7503
 14063  0605  3A03               	xorlw	3	; case 2
 14064  0606  1903               	skipnz
 14065  0607  2D08               	goto	l7519
 14066  0608  3A06               	xorlw	6	; case 4
 14067  0609  1903               	skipnz
 14068  060A  2D54               	goto	l7535
 14069  060B  3A0C               	xorlw	12	; case 8
 14070  060C  1903               	skipnz
 14071  060D  2DA0               	goto	l7551
 14072  060E  2DEC               	goto	l7567
 14073  060F                     l7573:	
 14074                           
 14075                           ;secret_task.c: 173: if (secret_found){
 14076  060F  0020               	movlb	0	; select bank0
 14077  0610  0856               	movf	secret_Main@secret_found,w
 14078  0611  1903               	btfsc	3,2
 14079  0612  0008               	return
 14080                           
 14081                           ;secret_task.c: 174: secret_clear(data);
 14082  0613  0859               	movf	secret_Main@data+1,w
 14083  0614  00F2               	movwf	secret_clear@data+1
 14084  0615  0858               	movf	secret_Main@data,w
 14085  0616  00F1               	movwf	secret_clear@data
 14086  0617  319B  230D         	fcall	_secret_clear
 14087  0619  0008               	return
 14088  061A                     __end_of_secret_Main:	
 14089                           
 14090                           	psect	text14
 14091  0293                     __ptext14:	
 14092 ;; *************** function _locked_Main *****************
 14093 ;; Defined at:
 14094 ;;		line 84 in file "locked_task.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;  taskData        2   50[BANK0 ] PTR void 
 14097 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14098 ;;		 -> flashy_TaskData(30), NULL(0), 
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;  data            2   55[BANK0 ] PTR struct t_locked_task
 14101 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14102 ;;		 -> flashy_TaskData(30), NULL(0), 
 14103 ;;  buttonPresse    1   54[BANK0 ] unsigned char 
 14104 ;; Return value:  Size  Location     Type
 14105 ;;                  1    wreg      void 
 14106 ;; Registers used:
 14107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14108 ;; Tracked objects:
 14109 ;;		On entry : 0/0
 14110 ;;		On exit  : 0/0
 14111 ;;		Unchanged: 0/0
 14112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14114 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14116 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14117 ;;Total ram usage:        7 bytes
 14118 ;; Hardware stack levels used:    1
 14119 ;; Hardware stack levels required when called:   11
 14120 ;; This function calls:
 14121 ;;		___lwmod
 14122 ;;		_locked_clear
 14123 ;;		_locked_get_lock_leds
 14124 ;;		_locked_get_unlock_leds
 14125 ;;		_locked_lock_leds
 14126 ;;		_locked_unlock_leds
 14127 ;;		_marquee
 14128 ;;		_nullifyBadge_buttonsGet
 14129 ;;		_nullifyBadge_userLedsSet
 14130 ;; This function is called by:
 14131 ;;		_main
 14132 ;;		_scheduler_TaskRun
 14133 ;; This function uses a non-reentrant model
 14134 ;;
 14135                           
 14136                           
 14137                           ;psect for function _locked_Main
 14138  0293                     _locked_Main:	
 14139                           
 14140                           ;locked_task.c: 85: struct t_locked_taskData *data = (struct t_locked_taskData *) taskDa
      +                          ta;
 14141                           
 14142                           ;incstack = 0
 14143                           ; Regs used in _locked_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14144  0293  0020               	movlb	0	; select bank0
 14145  0294  0853               	movf	locked_Main@taskData+1,w
 14146  0295  00D8               	movwf	locked_Main@data+1
 14147  0296  0852               	movf	locked_Main@taskData,w
 14148  0297  00D7               	movwf	locked_Main@data
 14149                           
 14150                           ;locked_task.c: 86: u8 buttonPressed;
 14151                           ;locked_task.c: 88: if ( currentTask != LOCKED_TASK ){
 14152  0298  3003               	movlw	3
 14153  0299  0021               	movlb	1	; select bank1
 14154  029A  0634               	xorwf	_currentTask^(0+128),w
 14155  029B  0435               	iorwf	(_currentTask+1)^(0+128),w
 14156  029C  1903               	btfsc	3,2
 14157  029D  2B9B               	goto	l7445
 14158                           
 14159                           ;locked_task.c: 89: data->holdCountA = 1;
 14160  029E  0020               	movlb	0	; select bank0
 14161  029F  0857               	movf	locked_Main@data,w
 14162  02A0  0086               	movwf	6
 14163  02A1  0858               	movf	locked_Main@data+1,w
 14164  02A2  0087               	movwf	7
 14165  02A3  3143               	addfsr 1,3
 14166  02A4  3001               	movlw	1
 14167  02A5  3FC0               	movwi [0]fsr1
 14168  02A6  3000               	movlw	0
 14169  02A7  3FC1               	movwi [1]fsr1
 14170                           
 14171                           ;locked_task.c: 90: data->holdCountB = 1;
 14172  02A8  0857               	movf	locked_Main@data,w
 14173  02A9  0086               	movwf	6
 14174  02AA  0858               	movf	locked_Main@data+1,w
 14175  02AB  0087               	movwf	7
 14176  02AC  3145               	addfsr 1,5
 14177  02AD  3001               	movlw	1
 14178  02AE  3FC0               	movwi [0]fsr1
 14179  02AF  3000               	movlw	0
 14180  02B0  3FC1               	movwi [1]fsr1
 14181                           
 14182                           ;locked_task.c: 91: data->holdCountX = 1;
 14183  02B1  0857               	movf	locked_Main@data,w
 14184  02B2  0086               	movwf	6
 14185  02B3  0858               	movf	locked_Main@data+1,w
 14186  02B4  0087               	movwf	7
 14187  02B5  3147               	addfsr 1,7
 14188  02B6  3001               	movlw	1
 14189  02B7  3FC0               	movwi [0]fsr1
 14190  02B8  3000               	movlw	0
 14191  02B9  3FC1               	movwi [1]fsr1
 14192                           
 14193                           ;locked_task.c: 92: data->holdCountY = 1;
 14194  02BA  0857               	movf	locked_Main@data,w
 14195  02BB  0086               	movwf	6
 14196  02BC  0858               	movf	locked_Main@data+1,w
 14197  02BD  0087               	movwf	7
 14198  02BE  3149               	addfsr 1,9
 14199  02BF  3001               	movlw	1
 14200  02C0  3FC0               	movwi [0]fsr1
 14201  02C1  3000               	movlw	0
 14202  02C2  3FC1               	movwi [1]fsr1
 14203                           
 14204                           ;locked_task.c: 93: return;
 14205  02C3  0008               	return
 14206  02C4                     l7403:	
 14207                           ;locked_task.c: 100: case LOCKED_UNLOCKING_STATE:
 14208                           
 14209                           ;locked_task.c: 94: }
 14210                           ;locked_task.c: 99: switch (data->state){
 14211                           
 14212                           
 14213                           ;locked_task.c: 101: badge_locked = 0;
 14214  02C4  01FC               	clrf	_badge_locked
 14215                           
 14216                           ;locked_task.c: 102: marquee("UNLOCKING...", data->delayTickCount);
 14217  02C5  3000               	movlw	low (STR_16| (0+32768))
 14218  02C6  00BA               	movwf	marquee@string
 14219  02C7  30A8               	movlw	high (STR_16| (0+32768))
 14220  02C8  00BB               	movwf	marquee@string+1
 14221  02C9  0857               	movf	locked_Main@data,w
 14222  02CA  0086               	movwf	6
 14223  02CB  0858               	movf	locked_Main@data+1,w
 14224  02CC  0087               	movwf	7
 14225  02CD  3141               	addfsr 1,1
 14226  02CE  3F40               	moviw [0]fsr1
 14227  02CF  00BC               	movwf	marquee@count
 14228  02D0  3F41               	moviw [1]fsr1
 14229  02D1  00BD               	movwf	marquee@count+1
 14230  02D2  3193  23E6  3182   	fcall	_marquee
 14231                           
 14232                           ;locked_task.c: 104: if (data->delayTickCount % 75 == 0){
 14233  02D5  304B               	movlw	75
 14234  02D6  0020               	movlb	0	; select bank0
 14235  02D7  00A0               	movwf	___lwmod@divisor
 14236  02D8  3000               	movlw	0
 14237  02D9  00A1               	movwf	___lwmod@divisor+1
 14238  02DA  0857               	movf	locked_Main@data,w
 14239  02DB  0086               	movwf	6
 14240  02DC  0858               	movf	locked_Main@data+1,w
 14241  02DD  0087               	movwf	7
 14242  02DE  3141               	addfsr 1,1
 14243  02DF  3F40               	moviw [0]fsr1
 14244  02E0  00A2               	movwf	___lwmod@dividend
 14245  02E1  3F41               	moviw [1]fsr1
 14246  02E2  00A3               	movwf	___lwmod@dividend+1
 14247  02E3  319A  224E  3182   	fcall	___lwmod
 14248  02E6  0020               	movlb	0	; select bank0
 14249  02E7  0820               	movf	?___lwmod,w
 14250  02E8  0421               	iorwf	?___lwmod+1,w
 14251  02E9  1D03               	btfss	3,2
 14252  02EA  2AF5               	goto	l7411
 14253                           
 14254                           ;locked_task.c: 105: locked_leds = locked_lock_base_leds | locked_get_unlock_leds();
 14255  02EB  3198  2054  3182   	fcall	_locked_get_unlock_leds
 14256  02EE  0021               	movlb	1	; select bank1
 14257  02EF  085E               	movf	_locked_lock_base_leds^(0+128),w
 14258  02F0  0471               	iorwf	?_locked_get_unlock_leds,w
 14259  02F1  00A0               	movwf	_locked_leds^(0+128)
 14260  02F2  085F               	movf	(_locked_lock_base_leds+1)^(0+128),w
 14261  02F3  0472               	iorwf	?_locked_get_unlock_leds+1,w
 14262  02F4  00A1               	movwf	(_locked_leds+1)^(0+128)
 14263  02F5                     l7411:	
 14264                           
 14265                           ;locked_task.c: 106: }
 14266                           ;locked_task.c: 109: if (data->delayTickCount == 375){
 14267  02F5  0020               	movlb	0	; select bank0
 14268  02F6  0857               	movf	locked_Main@data,w
 14269  02F7  0086               	movwf	6
 14270  02F8  0858               	movf	locked_Main@data+1,w
 14271  02F9  0087               	movwf	7
 14272  02FA  3141               	addfsr 1,1
 14273  02FB  0016               	moviw fsr1++
 14274  02FC  3A77               	xorlw	119
 14275  02FD  00D4               	movwf	??_locked_Main
 14276  02FE  0016               	moviw fsr1++
 14277  02FF  3A01               	xorlw	1
 14278  0300  04D4               	iorwf	??_locked_Main,f
 14279  0301  1D03               	btfss	3,2
 14280  0302  2B65               	goto	l7431
 14281                           
 14282                           ;locked_task.c: 110: data->state = LOCKED_UNLOCKED_STATE;
 14283  0303  0857               	movf	locked_Main@data,w
 14284  0304  3E0D               	addlw	13
 14285  0305  00D4               	movwf	??_locked_Main
 14286  0306  3000               	movlw	0
 14287  0307  3D58               	addwfc	locked_Main@data+1,w
 14288  0308  00D5               	movwf	??_locked_Main+1
 14289  0309  0854               	movf	??_locked_Main,w
 14290  030A  0086               	movwf	6
 14291  030B  0855               	movf	??_locked_Main+1,w
 14292  030C  0087               	movwf	7
 14293  030D  3002               	movlw	2
 14294  030E  0081               	movwf	1
 14295                           
 14296                           ;locked_task.c: 111: data->delayTickCount = 0;
 14297  030F  0857               	movf	locked_Main@data,w
 14298  0310  0086               	movwf	6
 14299  0311  0858               	movf	locked_Main@data+1,w
 14300  0312  0087               	movwf	7
 14301  0313  3141               	addfsr 1,1
 14302  0314  3000               	movlw	0
 14303  0315  3FC0               	movwi [0]fsr1
 14304  0316  3FC1               	movwi [1]fsr1
 14305  0317  2BAF               	goto	l7447
 14306  0318                     l7419:	
 14307                           ;locked_task.c: 117: case LOCKED_LOCKING_STATE:
 14308                           
 14309                           ;locked_task.c: 115: }
 14310                           ;locked_task.c: 116: break;
 14311                           
 14312                           ;locked_task.c: 113: else {
 14313                           ;locked_task.c: 114: data->delayTickCount += 1;
 14314                           
 14315                           ;locked_task.c: 112: }
 14316                           
 14317                           
 14318                           ;locked_task.c: 118: marquee("LOCKING...", data->delayTickCount);
 14319  0318  3002               	movlw	low ((STR_16+2)| (0+32768))
 14320  0319  00BA               	movwf	marquee@string
 14321  031A  30A8               	movlw	high ((STR_16+2)| (0+32768))
 14322  031B  00BB               	movwf	marquee@string+1
 14323  031C  0857               	movf	locked_Main@data,w
 14324  031D  0086               	movwf	6
 14325  031E  0858               	movf	locked_Main@data+1,w
 14326  031F  0087               	movwf	7
 14327  0320  3141               	addfsr 1,1
 14328  0321  3F40               	moviw [0]fsr1
 14329  0322  00BC               	movwf	marquee@count
 14330  0323  3F41               	moviw [1]fsr1
 14331  0324  00BD               	movwf	marquee@count+1
 14332  0325  3193  23E6  3182   	fcall	_marquee
 14333                           
 14334                           ;locked_task.c: 120: if (data->delayTickCount % 75 == 0){
 14335  0328  304B               	movlw	75
 14336  0329  0020               	movlb	0	; select bank0
 14337  032A  00A0               	movwf	___lwmod@divisor
 14338  032B  3000               	movlw	0
 14339  032C  00A1               	movwf	___lwmod@divisor+1
 14340  032D  0857               	movf	locked_Main@data,w
 14341  032E  0086               	movwf	6
 14342  032F  0858               	movf	locked_Main@data+1,w
 14343  0330  0087               	movwf	7
 14344  0331  3141               	addfsr 1,1
 14345  0332  3F40               	moviw [0]fsr1
 14346  0333  00A2               	movwf	___lwmod@dividend
 14347  0334  3F41               	moviw [1]fsr1
 14348  0335  00A3               	movwf	___lwmod@dividend+1
 14349  0336  319A  224E  3182   	fcall	___lwmod
 14350  0339  0020               	movlb	0	; select bank0
 14351  033A  0820               	movf	?___lwmod,w
 14352  033B  0421               	iorwf	?___lwmod+1,w
 14353  033C  1D03               	btfss	3,2
 14354  033D  2B48               	goto	l7425
 14355                           
 14356                           ;locked_task.c: 121: locked_leds = locked_lock_base_leds | locked_get_lock_leds();
 14357  033E  3199  21D9  3182   	fcall	_locked_get_lock_leds
 14358  0341  0021               	movlb	1	; select bank1
 14359  0342  085E               	movf	_locked_lock_base_leds^(0+128),w
 14360  0343  0471               	iorwf	?_locked_get_lock_leds,w
 14361  0344  00A0               	movwf	_locked_leds^(0+128)
 14362  0345  085F               	movf	(_locked_lock_base_leds+1)^(0+128),w
 14363  0346  0472               	iorwf	?_locked_get_lock_leds+1,w
 14364  0347  00A1               	movwf	(_locked_leds+1)^(0+128)
 14365  0348                     l7425:	
 14366                           
 14367                           ;locked_task.c: 122: }
 14368                           ;locked_task.c: 125: if (data->delayTickCount == 375){
 14369  0348  0020               	movlb	0	; select bank0
 14370  0349  0857               	movf	locked_Main@data,w
 14371  034A  0086               	movwf	6
 14372  034B  0858               	movf	locked_Main@data+1,w
 14373  034C  0087               	movwf	7
 14374  034D  3141               	addfsr 1,1
 14375  034E  0016               	moviw fsr1++
 14376  034F  3A77               	xorlw	119
 14377  0350  00D4               	movwf	??_locked_Main
 14378  0351  0016               	moviw fsr1++
 14379  0352  3A01               	xorlw	1
 14380  0353  04D4               	iorwf	??_locked_Main,f
 14381  0354  1D03               	btfss	3,2
 14382  0355  2B65               	goto	l7431
 14383                           
 14384                           ;locked_task.c: 126: data->state = LOCKED_LOCKED_STATE;
 14385  0356  0857               	movf	locked_Main@data,w
 14386  0357  0086               	movwf	6
 14387  0358  0858               	movf	locked_Main@data+1,w
 14388  0359  0087               	movwf	7
 14389  035A  314D               	addfsr 1,13
 14390  035B  0181               	clrf	1
 14391                           
 14392                           ;locked_task.c: 127: data->delayTickCount = 0;
 14393  035C  0857               	movf	locked_Main@data,w
 14394  035D  0086               	movwf	6
 14395  035E  0858               	movf	locked_Main@data+1,w
 14396  035F  0087               	movwf	7
 14397  0360  3141               	addfsr 1,1
 14398  0361  3000               	movlw	0
 14399  0362  3FC0               	movwi [0]fsr1
 14400  0363  3FC1               	movwi [1]fsr1
 14401                           
 14402                           ;locked_task.c: 128: }
 14403  0364  2BAF               	goto	l7447
 14404  0365                     l7431:	
 14405                           
 14406                           ;locked_task.c: 129: else {
 14407                           ;locked_task.c: 130: data->delayTickCount += 1;
 14408  0365  0857               	movf	locked_Main@data,w
 14409  0366  0086               	movwf	6
 14410  0367  0858               	movf	locked_Main@data+1,w
 14411  0368  0087               	movwf	7
 14412  0369  3141               	addfsr 1,1
 14413  036A  3001               	movlw	1
 14414  036B  0781               	addwf	1,f
 14415  036C  3141               	addfsr 1,1
 14416  036D  1803               	skipnc
 14417  036E  0A81               	incf	1,f
 14418                           
 14419                           ;locked_task.c: 131: }
 14420                           ;locked_task.c: 132: break;
 14421  036F  2BAF               	goto	l7447
 14422  0370                     l7433:	
 14423                           ;locked_task.c: 133: case LOCKED_UNLOCKED_STATE:
 14424                           
 14425                           
 14426                           ;locked_task.c: 134: badge_locked = 0;
 14427  0370  01FC               	clrf	_badge_locked
 14428                           
 14429                           ;locked_task.c: 136: marquee("OPEN", data->delayTickCount);
 14430  0371  3044               	movlw	low (STR_18| (0+32768))
 14431  0372  00BA               	movwf	marquee@string
 14432  0373  30A8               	movlw	high (STR_18| (0+32768))
 14433  0374  00BB               	movwf	marquee@string+1
 14434  0375  0857               	movf	locked_Main@data,w
 14435  0376  0086               	movwf	6
 14436  0377  0858               	movf	locked_Main@data+1,w
 14437  0378  0087               	movwf	7
 14438  0379  3141               	addfsr 1,1
 14439  037A  3F40               	moviw [0]fsr1
 14440  037B  00BC               	movwf	marquee@count
 14441  037C  3F41               	moviw [1]fsr1
 14442  037D  00BD               	movwf	marquee@count+1
 14443  037E  3193  23E6  3182   	fcall	_marquee
 14444                           
 14445                           ;locked_task.c: 137: locked_unlock_leds();
 14446  0381  31A7  27ED  3182   	fcall	_locked_unlock_leds
 14447                           
 14448                           ;locked_task.c: 138: break;
 14449  0384  2BAF               	goto	l7447
 14450  0385                     l1202:	
 14451                           ;locked_task.c: 139: case LOCKED_LOCKED_STATE:
 14452                           
 14453                           
 14454                           ;locked_task.c: 140: badge_locked = 1;
 14455  0385  01FC               	clrf	_badge_locked
 14456  0386  0AFC               	incf	_badge_locked,f
 14457                           
 14458                           ;locked_task.c: 141: marquee("LOCK", data->delayTickCount);
 14459  0387  303F               	movlw	low (STR_19| (0+32768))
 14460  0388  00BA               	movwf	marquee@string
 14461  0389  30A8               	movlw	high (STR_19| (0+32768))
 14462  038A  00BB               	movwf	marquee@string+1
 14463  038B  0857               	movf	locked_Main@data,w
 14464  038C  0086               	movwf	6
 14465  038D  0858               	movf	locked_Main@data+1,w
 14466  038E  0087               	movwf	7
 14467  038F  3141               	addfsr 1,1
 14468  0390  3F40               	moviw [0]fsr1
 14469  0391  00BC               	movwf	marquee@count
 14470  0392  3F41               	moviw [1]fsr1
 14471  0393  00BD               	movwf	marquee@count+1
 14472  0394  3193  23E6  3182   	fcall	_marquee
 14473                           
 14474                           ;locked_task.c: 143: locked_lock_leds();
 14475  0397  3198  20A3  3182   	fcall	_locked_lock_leds
 14476                           
 14477                           ;locked_task.c: 145: }
 14478                           
 14479                           ;locked_task.c: 144: break;
 14480  039A  2BAF               	goto	l7447
 14481  039B                     l7445:	
 14482  039B  0020               	movlb	0	; select bank0
 14483  039C  0857               	movf	locked_Main@data,w
 14484  039D  0086               	movwf	6
 14485  039E  0858               	movf	locked_Main@data+1,w
 14486  039F  0087               	movwf	7
 14487  03A0  314D               	addfsr 1,13
 14488  03A1  0801               	movf	1,w
 14489                           
 14490                           ; Switch size 1, requested type "space"
 14491                           ; Number of cases is 4, Range of values is 0 to 3
 14492                           ; switch strategies available:
 14493                           ; Name         Instructions Cycles
 14494                           ; simple_byte           13     7 (average)
 14495                           ; direct_byte           14     6 (fixed)
 14496                           ; jumptable            260     6 (fixed)
 14497                           ;	Chosen strategy is simple_byte
 14498  03A2  3A00               	xorlw	0	; case 0
 14499  03A3  1903               	skipnz
 14500  03A4  2B85               	goto	l1202
 14501  03A5  3A01               	xorlw	1	; case 1
 14502  03A6  1903               	skipnz
 14503  03A7  2B18               	goto	l7419
 14504  03A8  3A03               	xorlw	3	; case 2
 14505  03A9  1903               	skipnz
 14506  03AA  2B70               	goto	l7433
 14507  03AB  3A01               	xorlw	1	; case 3
 14508  03AC  1903               	skipnz
 14509  03AD  2AC4               	goto	l7403
 14510  03AE  2BAF               	goto	l7447
 14511  03AF                     l7447:	
 14512                           
 14513                           ;locked_task.c: 146: nullifyBadge_userLedsSet(data->badge, locked_leds);
 14514  03AF  0021               	movlb	1	; select bank1
 14515  03B0  0821               	movf	(_locked_leds+1)^(0+128),w
 14516  03B1  0020               	movlb	0	; select bank0
 14517  03B2  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 14518  03B3  0021               	movlb	1	; select bank1
 14519  03B4  0820               	movf	_locked_leds^(0+128),w
 14520  03B5  0020               	movlb	0	; select bank0
 14521  03B6  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 14522  03B7  0857               	movf	locked_Main@data,w
 14523  03B8  0086               	movwf	6
 14524  03B9  0858               	movf	locked_Main@data+1,w
 14525  03BA  0087               	movwf	7
 14526  03BB  0801               	movf	1,w
 14527  03BC  31A7  2754  3182   	fcall	_nullifyBadge_userLedsSet
 14528                           
 14529                           ;locked_task.c: 149: buttonPressed = nullifyBadge_buttonsGet();
 14530  03BF  319A  22AA  3182   	fcall	_nullifyBadge_buttonsGet
 14531  03C2  0020               	movlb	0	; select bank0
 14532  03C3  00D4               	movwf	??_locked_Main
 14533  03C4  0854               	movf	??_locked_Main,w
 14534  03C5  00D6               	movwf	locked_Main@buttonPressed
 14535                           
 14536                           ;locked_task.c: 150: switch (buttonPressed) {
 14537  03C6  2C54               	goto	l7477
 14538  03C7                     l7451:	
 14539                           ;locked_task.c: 151: case 4:
 14540                           
 14541                           
 14542                           ;locked_task.c: 152: locked_clear(data);
 14543  03C7  0858               	movf	locked_Main@data+1,w
 14544  03C8  00BA               	movwf	locked_clear@data+1
 14545  03C9  0857               	movf	locked_Main@data,w
 14546  03CA  00B9               	movwf	locked_clear@data
 14547  03CB  319D  251D         	fcall	_locked_clear
 14548                           
 14549                           ;locked_task.c: 153: currentTask = MENU_TASK;
 14550  03CD  0021               	movlb	1	; select bank1
 14551  03CE  01B4               	clrf	_currentTask^(0+128)
 14552  03CF  01B5               	clrf	(_currentTask+1)^(0+128)
 14553                           
 14554                           ;locked_task.c: 154: break;
 14555  03D0  0008               	return
 14556  03D1                     l7455:	
 14557                           ;locked_task.c: 155: case 8:
 14558                           
 14559                           
 14560                           ;locked_task.c: 156: if (data->holdCountY == 0){
 14561  03D1  0020               	movlb	0	; select bank0
 14562  03D2  0857               	movf	locked_Main@data,w
 14563  03D3  0086               	movwf	6
 14564  03D4  0858               	movf	locked_Main@data+1,w
 14565  03D5  0087               	movwf	7
 14566  03D6  3149               	addfsr 1,9
 14567  03D7  0016               	moviw fsr1++
 14568  03D8  0401               	iorwf	1,w
 14569  03D9  1D03               	btfss	3,2
 14570  03DA  2BFE               	goto	l7465
 14571                           
 14572                           ;locked_task.c: 159: data->delayTickCount = 0;
 14573  03DB  0857               	movf	locked_Main@data,w
 14574  03DC  0086               	movwf	6
 14575  03DD  0858               	movf	locked_Main@data+1,w
 14576  03DE  0087               	movwf	7
 14577  03DF  3141               	addfsr 1,1
 14578  03E0  3000               	movlw	0
 14579  03E1  3FC0               	movwi [0]fsr1
 14580  03E2  3FC1               	movwi [1]fsr1
 14581                           
 14582                           ;locked_task.c: 160: if (badge_locked){
 14583  03E3  087C               	movf	_badge_locked,w
 14584  03E4  1903               	btfsc	3,2
 14585  03E5  2BF2               	goto	l7463
 14586                           
 14587                           ;locked_task.c: 162: data->state = LOCKED_UNLOCKING_STATE;
 14588  03E6  0857               	movf	locked_Main@data,w
 14589  03E7  3E0D               	addlw	13
 14590  03E8  00D4               	movwf	??_locked_Main
 14591  03E9  3000               	movlw	0
 14592  03EA  3D58               	addwfc	locked_Main@data+1,w
 14593  03EB  00D5               	movwf	??_locked_Main+1
 14594  03EC  0854               	movf	??_locked_Main,w
 14595  03ED  0086               	movwf	6
 14596  03EE  0855               	movf	??_locked_Main+1,w
 14597  03EF  0087               	movwf	7
 14598  03F0  3003               	movlw	3
 14599  03F1  2BFD               	goto	L3
 14600  03F2                     l7463:	
 14601                           ;locked_task.c: 163: }
 14602                           
 14603                           
 14604                           ;locked_task.c: 164: else {
 14605                           ;locked_task.c: 166: data->state = LOCKED_LOCKING_STATE;
 14606  03F2  0857               	movf	locked_Main@data,w
 14607  03F3  3E0D               	addlw	13
 14608  03F4  00D4               	movwf	??_locked_Main
 14609  03F5  3000               	movlw	0
 14610  03F6  3D58               	addwfc	locked_Main@data+1,w
 14611  03F7  00D5               	movwf	??_locked_Main+1
 14612  03F8  0854               	movf	??_locked_Main,w
 14613  03F9  0086               	movwf	6
 14614  03FA  0855               	movf	??_locked_Main+1,w
 14615  03FB  0087               	movwf	7
 14616  03FC  3001               	movlw	1
 14617  03FD                     L3:	
 14618  03FD  0081               	movwf	1
 14619  03FE                     l7465:	
 14620                           
 14621                           ;locked_task.c: 167: }
 14622                           ;locked_task.c: 168: }
 14623                           ;locked_task.c: 169: data->holdCountA = 0;
 14624  03FE  0857               	movf	locked_Main@data,w
 14625  03FF  0086               	movwf	6
 14626  0400  0858               	movf	locked_Main@data+1,w
 14627  0401  0087               	movwf	7
 14628  0402  3143               	addfsr 1,3
 14629  0403  3000               	movlw	0
 14630  0404  3FC0               	movwi [0]fsr1
 14631  0405  3FC1               	movwi [1]fsr1
 14632                           
 14633                           ;locked_task.c: 170: data->holdCountB = 0;
 14634  0406  0857               	movf	locked_Main@data,w
 14635  0407  0086               	movwf	6
 14636  0408  0858               	movf	locked_Main@data+1,w
 14637  0409  0087               	movwf	7
 14638  040A  3145               	addfsr 1,5
 14639  040B  3000               	movlw	0
 14640  040C  3FC0               	movwi [0]fsr1
 14641  040D  3FC1               	movwi [1]fsr1
 14642                           
 14643                           ;locked_task.c: 171: data->holdCountX = 0;
 14644  040E  0857               	movf	locked_Main@data,w
 14645  040F  0086               	movwf	6
 14646  0410  0858               	movf	locked_Main@data+1,w
 14647  0411  0087               	movwf	7
 14648  0412  3147               	addfsr 1,7
 14649  0413  3000               	movlw	0
 14650  0414  3FC0               	movwi [0]fsr1
 14651  0415  3FC1               	movwi [1]fsr1
 14652                           
 14653                           ;locked_task.c: 172: data->holdCountY += 1;
 14654  0416  0857               	movf	locked_Main@data,w
 14655  0417  0086               	movwf	6
 14656  0418  0858               	movf	locked_Main@data+1,w
 14657  0419  0087               	movwf	7
 14658  041A  3149               	addfsr 1,9
 14659  041B  3001               	movlw	1
 14660  041C  0781               	addwf	1,f
 14661  041D  3141               	addfsr 1,1
 14662  041E  1803               	skipnc
 14663  041F  0A81               	incf	1,f
 14664                           
 14665                           ;locked_task.c: 173: data->noholdCount = 0;
 14666  0420  0857               	movf	locked_Main@data,w
 14667  0421  0086               	movwf	6
 14668  0422  0858               	movf	locked_Main@data+1,w
 14669  0423  0087               	movwf	7
 14670  0424  314B               	addfsr 1,11
 14671  0425  3000               	movlw	0
 14672  0426  3FC0               	movwi [0]fsr1
 14673  0427  3FC1               	movwi [1]fsr1
 14674                           
 14675                           ;locked_task.c: 174: break;
 14676  0428  0008               	return
 14677  0429                     l7473:	
 14678                           ;locked_task.c: 175: default:
 14679                           
 14680                           
 14681                           ;locked_task.c: 176: data->holdCountA = 0;
 14682  0429  0857               	movf	locked_Main@data,w
 14683  042A  0086               	movwf	6
 14684  042B  0858               	movf	locked_Main@data+1,w
 14685  042C  0087               	movwf	7
 14686  042D  3143               	addfsr 1,3
 14687  042E  3000               	movlw	0
 14688  042F  3FC0               	movwi [0]fsr1
 14689  0430  3FC1               	movwi [1]fsr1
 14690                           
 14691                           ;locked_task.c: 177: data->holdCountB = 0;
 14692  0431  0857               	movf	locked_Main@data,w
 14693  0432  0086               	movwf	6
 14694  0433  0858               	movf	locked_Main@data+1,w
 14695  0434  0087               	movwf	7
 14696  0435  3145               	addfsr 1,5
 14697  0436  3000               	movlw	0
 14698  0437  3FC0               	movwi [0]fsr1
 14699  0438  3FC1               	movwi [1]fsr1
 14700                           
 14701                           ;locked_task.c: 178: data->holdCountX = 0;
 14702  0439  0857               	movf	locked_Main@data,w
 14703  043A  0086               	movwf	6
 14704  043B  0858               	movf	locked_Main@data+1,w
 14705  043C  0087               	movwf	7
 14706  043D  3147               	addfsr 1,7
 14707  043E  3000               	movlw	0
 14708  043F  3FC0               	movwi [0]fsr1
 14709  0440  3FC1               	movwi [1]fsr1
 14710                           
 14711                           ;locked_task.c: 179: data->holdCountY = 0;
 14712  0441  0857               	movf	locked_Main@data,w
 14713  0442  0086               	movwf	6
 14714  0443  0858               	movf	locked_Main@data+1,w
 14715  0444  0087               	movwf	7
 14716  0445  3149               	addfsr 1,9
 14717  0446  3000               	movlw	0
 14718  0447  3FC0               	movwi [0]fsr1
 14719  0448  3FC1               	movwi [1]fsr1
 14720                           
 14721                           ;locked_task.c: 180: data->noholdCount += 1;
 14722  0449  0857               	movf	locked_Main@data,w
 14723  044A  0086               	movwf	6
 14724  044B  0858               	movf	locked_Main@data+1,w
 14725  044C  0087               	movwf	7
 14726  044D  314B               	addfsr 1,11
 14727  044E  3001               	movlw	1
 14728  044F  0781               	addwf	1,f
 14729  0450  3141               	addfsr 1,1
 14730  0451  1803               	skipnc
 14731  0452  0A81               	incf	1,f
 14732                           
 14733                           ;locked_task.c: 181: }
 14734  0453  0008               	return
 14735  0454                     l7477:	
 14736  0454  0856               	movf	locked_Main@buttonPressed,w
 14737                           
 14738                           ; Switch size 1, requested type "space"
 14739                           ; Number of cases is 2, Range of values is 4 to 8
 14740                           ; switch strategies available:
 14741                           ; Name         Instructions Cycles
 14742                           ; simple_byte            7     4 (average)
 14743                           ; direct_byte           19     9 (fixed)
 14744                           ; jumptable            263     9 (fixed)
 14745                           ;	Chosen strategy is simple_byte
 14746  0455  3A04               	xorlw	4	; case 4
 14747  0456  1903               	skipnz
 14748  0457  2BC7               	goto	l7451
 14749  0458  3A0C               	xorlw	12	; case 8
 14750  0459  1903               	skipnz
 14751  045A  2BD1               	goto	l7455
 14752  045B  2C29               	goto	l7473
 14753  045C  0008               	return
 14754  045D                     __end_of_locked_Main:	
 14755                           
 14756                           	psect	text15
 14757  00A7                     __ptext15:	
 14758 ;; *************** function _menu_Main *****************
 14759 ;; Defined at:
 14760 ;;		line 54 in file "menu_task.c"
 14761 ;; Parameters:    Size  Location     Type
 14762 ;;  taskData        2   50[BANK0 ] PTR void 
 14763 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14764 ;;		 -> flashy_TaskData(30), NULL(0), 
 14765 ;; Auto vars:     Size  Location     Type
 14766 ;;  data            2   55[BANK0 ] PTR struct t_menu_taskDa
 14767 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14768 ;;		 -> flashy_TaskData(30), NULL(0), 
 14769 ;;  buttonPresse    1   54[BANK0 ] unsigned char 
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  1    wreg      void 
 14772 ;; Registers used:
 14773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14774 ;; Tracked objects:
 14775 ;;		On entry : 0/0
 14776 ;;		On exit  : 0/0
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14779 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14781 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14782 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14783 ;;Total ram usage:        7 bytes
 14784 ;; Hardware stack levels used:    1
 14785 ;; Hardware stack levels required when called:   12
 14786 ;; This function calls:
 14787 ;;		_menu_clear
 14788 ;;		_menu_display_option
 14789 ;;		_menu_run_option
 14790 ;;		_nullifyBadge_buttonsGet
 14791 ;; This function is called by:
 14792 ;;		_main
 14793 ;;		_scheduler_TaskRun
 14794 ;; This function uses a non-reentrant model
 14795 ;;
 14796                           
 14797                           
 14798                           ;psect for function _menu_Main
 14799  00A7                     _menu_Main:	
 14800                           
 14801                           ;menu_task.c: 55: struct t_menu_taskData *data = (struct t_menu_taskData *) taskData;
 14802                           
 14803                           ;incstack = 0
 14804                           ; Regs used in _menu_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14805  00A7  0020               	movlb	0	; select bank0
 14806  00A8  0853               	movf	menu_Main@taskData+1,w
 14807  00A9  00D8               	movwf	menu_Main@data+1
 14808  00AA  0852               	movf	menu_Main@taskData,w
 14809  00AB  00D7               	movwf	menu_Main@data
 14810                           
 14811                           ;menu_task.c: 56: u8 buttonPressed;
 14812                           ;menu_task.c: 58: if ( currentTask != MENU_TASK ){
 14813  00AC  0021               	movlb	1	; select bank1
 14814  00AD  0834               	movf	_currentTask^(0+128),w
 14815  00AE  0435               	iorwf	(_currentTask+1)^(0+128),w
 14816  00AF  1903               	btfsc	3,2
 14817  00B0  2920               	goto	l6905
 14818                           
 14819                           ;menu_task.c: 60: buttonPressed = nullifyBadge_buttonsGet();
 14820  00B1  319A  22AA  3180   	fcall	_nullifyBadge_buttonsGet
 14821  00B4  0020               	movlb	0	; select bank0
 14822  00B5  00D4               	movwf	??_menu_Main
 14823  00B6  0854               	movf	??_menu_Main,w
 14824  00B7  00D6               	movwf	menu_Main@buttonPressed
 14825                           
 14826                           ;menu_task.c: 61: switch (buttonPressed) {
 14827  00B8  291A               	goto	l6903
 14828  00B9                     l6885:	
 14829                           ;menu_task.c: 62: case 1 | 2 | 8:
 14830                           
 14831                           
 14832                           ;menu_task.c: 63: currentTask = MENU_TASK;
 14833  00B9  0021               	movlb	1	; select bank1
 14834  00BA  01B4               	clrf	_currentTask^(0+128)
 14835  00BB  01B5               	clrf	(_currentTask+1)^(0+128)
 14836                           
 14837                           ;menu_task.c: 64: menu_clear(data);
 14838  00BC  0020               	movlb	0	; select bank0
 14839  00BD  0858               	movf	menu_Main@data+1,w
 14840  00BE  00BA               	movwf	menu_clear@data+1
 14841  00BF  0857               	movf	menu_Main@data,w
 14842  00C0  00B9               	movwf	menu_clear@data
 14843  00C1  3192  2205  3180   	fcall	_menu_clear
 14844                           
 14845                           ;menu_task.c: 67: data->holdCountA = 1;
 14846  00C4  0020               	movlb	0	; select bank0
 14847  00C5  0857               	movf	menu_Main@data,w
 14848  00C6  0086               	movwf	6
 14849  00C7  0858               	movf	menu_Main@data+1,w
 14850  00C8  0087               	movwf	7
 14851  00C9  3144               	addfsr 1,4
 14852  00CA  3001               	movlw	1
 14853  00CB  3FC0               	movwi [0]fsr1
 14854  00CC  3000               	movlw	0
 14855  00CD  3FC1               	movwi [1]fsr1
 14856                           
 14857                           ;menu_task.c: 68: data->holdCountB = 1;
 14858  00CE  0857               	movf	menu_Main@data,w
 14859  00CF  0086               	movwf	6
 14860  00D0  0858               	movf	menu_Main@data+1,w
 14861  00D1  0087               	movwf	7
 14862  00D2  3146               	addfsr 1,6
 14863  00D3  3001               	movlw	1
 14864  00D4  3FC0               	movwi [0]fsr1
 14865  00D5  3000               	movlw	0
 14866  00D6  3FC1               	movwi [1]fsr1
 14867                           
 14868                           ;menu_task.c: 69: data->holdCountX = 1;
 14869  00D7  0857               	movf	menu_Main@data,w
 14870  00D8  0086               	movwf	6
 14871  00D9  0858               	movf	menu_Main@data+1,w
 14872  00DA  0087               	movwf	7
 14873  00DB  3148               	addfsr 1,8
 14874  00DC  3001               	movlw	1
 14875  00DD  3FC0               	movwi [0]fsr1
 14876  00DE  3000               	movlw	0
 14877  00DF  3FC1               	movwi [1]fsr1
 14878                           
 14879                           ;menu_task.c: 70: data->holdCountY = 1;
 14880  00E0  0857               	movf	menu_Main@data,w
 14881  00E1  0086               	movwf	6
 14882  00E2  0858               	movf	menu_Main@data+1,w
 14883  00E3  0087               	movwf	7
 14884  00E4  314A               	addfsr 1,10
 14885  00E5  3001               	movlw	1
 14886  00E6  3FC0               	movwi [0]fsr1
 14887  00E7  3000               	movlw	0
 14888  00E8  3FC1               	movwi [1]fsr1
 14889                           
 14890                           ;menu_task.c: 72: menu_option_idx = 0;
 14891  00E9  0021               	movlb	1	; select bank1
 14892  00EA  01B2               	clrf	_menu_option_idx^(0+128)
 14893  00EB  01B3               	clrf	(_menu_option_idx+1)^(0+128)
 14894                           
 14895                           ;menu_task.c: 73: menu_display_option(data);
 14896  00EC  0020               	movlb	0	; select bank0
 14897  00ED  0858               	movf	menu_Main@data+1,w
 14898  00EE  00CD               	movwf	menu_display_option@data+1
 14899  00EF  0857               	movf	menu_Main@data,w
 14900  00F0  00CC               	movwf	menu_display_option@data
 14901  00F1  3192  224C         	fcall	_menu_display_option
 14902                           
 14903                           ;menu_task.c: 74: break;
 14904  00F3  0008               	return
 14905  00F4                     l6899:	
 14906                           ;menu_task.c: 75: default:
 14907                           
 14908                           
 14909                           ;menu_task.c: 77: data->holdCountA = 1;
 14910  00F4  0020               	movlb	0	; select bank0
 14911  00F5  0857               	movf	menu_Main@data,w
 14912  00F6  0086               	movwf	6
 14913  00F7  0858               	movf	menu_Main@data+1,w
 14914  00F8  0087               	movwf	7
 14915  00F9  3144               	addfsr 1,4
 14916  00FA  3001               	movlw	1
 14917  00FB  3FC0               	movwi [0]fsr1
 14918  00FC  3000               	movlw	0
 14919  00FD  3FC1               	movwi [1]fsr1
 14920                           
 14921                           ;menu_task.c: 78: data->holdCountB = 1;
 14922  00FE  0857               	movf	menu_Main@data,w
 14923  00FF  0086               	movwf	6
 14924  0100  0858               	movf	menu_Main@data+1,w
 14925  0101  0087               	movwf	7
 14926  0102  3146               	addfsr 1,6
 14927  0103  3001               	movlw	1
 14928  0104  3FC0               	movwi [0]fsr1
 14929  0105  3000               	movlw	0
 14930  0106  3FC1               	movwi [1]fsr1
 14931                           
 14932                           ;menu_task.c: 79: data->holdCountX = 1;
 14933  0107  0857               	movf	menu_Main@data,w
 14934  0108  0086               	movwf	6
 14935  0109  0858               	movf	menu_Main@data+1,w
 14936  010A  0087               	movwf	7
 14937  010B  3148               	addfsr 1,8
 14938  010C  3001               	movlw	1
 14939  010D  3FC0               	movwi [0]fsr1
 14940  010E  3000               	movlw	0
 14941  010F  3FC1               	movwi [1]fsr1
 14942                           
 14943                           ;menu_task.c: 80: data->holdCountY = 1;
 14944  0110  0857               	movf	menu_Main@data,w
 14945  0111  0086               	movwf	6
 14946  0112  0858               	movf	menu_Main@data+1,w
 14947  0113  0087               	movwf	7
 14948  0114  314A               	addfsr 1,10
 14949  0115  3001               	movlw	1
 14950  0116  3FC0               	movwi [0]fsr1
 14951  0117  3000               	movlw	0
 14952  0118  3FC1               	movwi [1]fsr1
 14953                           
 14954                           ;menu_task.c: 82: }
 14955                           
 14956                           ;menu_task.c: 81: break;
 14957  0119  0008               	return
 14958  011A                     l6903:	
 14959  011A  0856               	movf	menu_Main@buttonPressed,w
 14960                           
 14961                           ; Switch size 1, requested type "space"
 14962                           ; Number of cases is 1, Range of values is 11 to 11
 14963                           ; switch strategies available:
 14964                           ; Name         Instructions Cycles
 14965                           ; simple_byte            4     3 (average)
 14966                           ; direct_byte           11     9 (fixed)
 14967                           ; jumptable            263     9 (fixed)
 14968                           ;	Chosen strategy is simple_byte
 14969  011B  3A0B               	xorlw	11	; case 11
 14970  011C  1903               	skipnz
 14971  011D  28B9               	goto	l6885
 14972  011E  28F4               	goto	l6899
 14973                           
 14974                           ;menu_task.c: 83: return;
 14975  011F  0008               	return
 14976  0120                     l6905:	
 14977                           
 14978                           ;menu_task.c: 84: }
 14979                           ;menu_task.c: 86: buttonPressed = nullifyBadge_buttonsGet();
 14980  0120  319A  22AA  3180   	fcall	_nullifyBadge_buttonsGet
 14981  0123  0020               	movlb	0	; select bank0
 14982  0124  00D4               	movwf	??_menu_Main
 14983  0125  0854               	movf	??_menu_Main,w
 14984  0126  00D6               	movwf	menu_Main@buttonPressed
 14985                           
 14986                           ;menu_task.c: 87: switch (buttonPressed) {
 14987  0127  2A81               	goto	l6989
 14988  0128                     l6907:	
 14989                           ;menu_task.c: 88: case 1:
 14990                           
 14991                           
 14992                           ;menu_task.c: 90: if (data->holdCountA == 0){
 14993  0128  0857               	movf	menu_Main@data,w
 14994  0129  0086               	movwf	6
 14995  012A  0858               	movf	menu_Main@data+1,w
 14996  012B  0087               	movwf	7
 14997  012C  3144               	addfsr 1,4
 14998  012D  0016               	moviw fsr1++
 14999  012E  0401               	iorwf	1,w
 15000  012F  1D03               	btfss	3,2
 15001  0130  2941               	goto	l6915
 15002                           
 15003                           ;menu_task.c: 92: if (menu_option_idx == 0){
 15004  0131  0021               	movlb	1	; select bank1
 15005  0132  0832               	movf	_menu_option_idx^(0+128),w
 15006  0133  0433               	iorwf	(_menu_option_idx+1)^(0+128),w
 15007  0134  1D03               	btfss	3,2
 15008  0135  293D               	goto	l6913
 15009                           
 15010                           ;menu_task.c: 93: menu_option_idx = menu_option_size - 1;
 15011  0136  0830               	movf	_menu_option_size^(0+128),w
 15012  0137  3EFF               	addlw	255
 15013  0138  00B2               	movwf	_menu_option_idx^(0+128)
 15014  0139  30FF               	movlw	255
 15015  013A  3D31               	addwfc	(_menu_option_size+1)^(0+128),w
 15016  013B  00B3               	movwf	(_menu_option_idx+1)^(0+128)
 15017                           
 15018                           ;menu_task.c: 94: }
 15019  013C  2941               	goto	l6915
 15020  013D                     l6913:	
 15021                           
 15022                           ;menu_task.c: 95: else {
 15023                           ;menu_task.c: 96: menu_option_idx -= 1;
 15024  013D  3001               	movlw	1
 15025  013E  02B2               	subwf	_menu_option_idx^(0+128),f
 15026  013F  3000               	movlw	0
 15027  0140  3BB3               	subwfb	(_menu_option_idx+1)^(0+128),f
 15028  0141                     l6915:	
 15029                           
 15030                           ;menu_task.c: 97: }
 15031                           ;menu_task.c: 98: }
 15032                           ;menu_task.c: 99: menu_display_option(data);
 15033  0141  0020               	movlb	0	; select bank0
 15034  0142  0858               	movf	menu_Main@data+1,w
 15035  0143  00CD               	movwf	menu_display_option@data+1
 15036  0144  0857               	movf	menu_Main@data,w
 15037  0145  00CC               	movwf	menu_display_option@data
 15038  0146  3192  224C  3180   	fcall	_menu_display_option
 15039                           
 15040                           ;menu_task.c: 100: data->holdCountA += 1;
 15041  0149  0020               	movlb	0	; select bank0
 15042  014A  0857               	movf	menu_Main@data,w
 15043  014B  0086               	movwf	6
 15044  014C  0858               	movf	menu_Main@data+1,w
 15045  014D  0087               	movwf	7
 15046  014E  3144               	addfsr 1,4
 15047  014F  3001               	movlw	1
 15048  0150  0781               	addwf	1,f
 15049  0151  3141               	addfsr 1,1
 15050  0152  1803               	skipnc
 15051  0153  0A81               	incf	1,f
 15052                           
 15053                           ;menu_task.c: 101: data->holdCountB = 0;
 15054  0154  0857               	movf	menu_Main@data,w
 15055  0155  0086               	movwf	6
 15056  0156  0858               	movf	menu_Main@data+1,w
 15057  0157  0087               	movwf	7
 15058  0158  3146               	addfsr 1,6
 15059  0159  3000               	movlw	0
 15060  015A  3FC0               	movwi [0]fsr1
 15061  015B  3FC1               	movwi [1]fsr1
 15062                           
 15063                           ;menu_task.c: 102: data->holdCountX = 0;
 15064  015C  0857               	movf	menu_Main@data,w
 15065  015D  0086               	movwf	6
 15066  015E  0858               	movf	menu_Main@data+1,w
 15067  015F  0087               	movwf	7
 15068  0160  3148               	addfsr 1,8
 15069  0161  3000               	movlw	0
 15070  0162  3FC0               	movwi [0]fsr1
 15071  0163  3FC1               	movwi [1]fsr1
 15072                           
 15073                           ;menu_task.c: 103: data->holdCountY = 0;
 15074  0164  0857               	movf	menu_Main@data,w
 15075  0165  0086               	movwf	6
 15076  0166  0858               	movf	menu_Main@data+1,w
 15077  0167  0087               	movwf	7
 15078  0168  314A               	addfsr 1,10
 15079  0169  3000               	movlw	0
 15080  016A  3FC0               	movwi [0]fsr1
 15081  016B  3FC1               	movwi [1]fsr1
 15082                           
 15083                           ;menu_task.c: 104: data->noholdCount = 0;
 15084  016C  0857               	movf	menu_Main@data,w
 15085  016D  0086               	movwf	6
 15086  016E  0858               	movf	menu_Main@data+1,w
 15087  016F  0087               	movwf	7
 15088  0170  314C               	addfsr 1,12
 15089  0171  3000               	movlw	0
 15090  0172  3FC0               	movwi [0]fsr1
 15091  0173  3FC1               	movwi [1]fsr1
 15092                           
 15093                           ;menu_task.c: 105: break;
 15094  0174  0008               	return
 15095  0175                     l6927:	
 15096                           ;menu_task.c: 106: case 2:
 15097                           
 15098                           
 15099                           ;menu_task.c: 108: if (data->holdCountB == 0){
 15100  0175  0857               	movf	menu_Main@data,w
 15101  0176  0086               	movwf	6
 15102  0177  0858               	movf	menu_Main@data+1,w
 15103  0178  0087               	movwf	7
 15104  0179  3146               	addfsr 1,6
 15105  017A  0016               	moviw fsr1++
 15106  017B  0401               	iorwf	1,w
 15107  017C  1D03               	btfss	3,2
 15108  017D  299D               	goto	l6935
 15109                           
 15110                           ;menu_task.c: 110: if (menu_option_idx == menu_option_size - 1){
 15111  017E  0021               	movlb	1	; select bank1
 15112  017F  0830               	movf	_menu_option_size^(0+128),w
 15113  0180  3EFF               	addlw	255
 15114  0181  0020               	movlb	0	; select bank0
 15115  0182  00D4               	movwf	??_menu_Main
 15116  0183  30FF               	movlw	255
 15117  0184  0021               	movlb	1	; select bank1
 15118  0185  3D31               	addwfc	(_menu_option_size+1)^(0+128),w
 15119  0186  0020               	movlb	0	; select bank0
 15120  0187  00D5               	movwf	??_menu_Main+1
 15121  0188  0021               	movlb	1	; select bank1
 15122  0189  0833               	movf	(_menu_option_idx+1)^(0+128),w
 15123  018A  0020               	movlb	0	; select bank0
 15124  018B  0655               	xorwf	??_menu_Main+1,w
 15125  018C  1D03               	skipz
 15126  018D  2992               	goto	u3975
 15127  018E  0021               	movlb	1	; select bank1
 15128  018F  0832               	movf	_menu_option_idx^(0+128),w
 15129  0190  0020               	movlb	0	; select bank0
 15130  0191  0654               	xorwf	??_menu_Main,w
 15131  0192                     u3975:	
 15132  0192  1D03               	skipz
 15133  0193  2998               	goto	l6933
 15134                           
 15135                           ;menu_task.c: 111: menu_option_idx = 0;
 15136  0194  0021               	movlb	1	; select bank1
 15137  0195  01B2               	clrf	_menu_option_idx^(0+128)
 15138  0196  01B3               	clrf	(_menu_option_idx+1)^(0+128)
 15139                           
 15140                           ;menu_task.c: 112: }
 15141  0197  299D               	goto	l6935
 15142  0198                     l6933:	
 15143                           
 15144                           ;menu_task.c: 113: else {
 15145                           ;menu_task.c: 114: menu_option_idx += 1;
 15146  0198  3001               	movlw	1
 15147  0199  0021               	movlb	1	; select bank1
 15148  019A  07B2               	addwf	_menu_option_idx^(0+128),f
 15149  019B  3000               	movlw	0
 15150  019C  3DB3               	addwfc	(_menu_option_idx+1)^(0+128),f
 15151  019D                     l6935:	
 15152                           
 15153                           ;menu_task.c: 115: }
 15154                           ;menu_task.c: 116: }
 15155                           ;menu_task.c: 117: menu_display_option(data);
 15156  019D  0020               	movlb	0	; select bank0
 15157  019E  0858               	movf	menu_Main@data+1,w
 15158  019F  00CD               	movwf	menu_display_option@data+1
 15159  01A0  0857               	movf	menu_Main@data,w
 15160  01A1  00CC               	movwf	menu_display_option@data
 15161  01A2  3192  224C  3180   	fcall	_menu_display_option
 15162                           
 15163                           ;menu_task.c: 118: data->holdCountA = 0;
 15164  01A5  0020               	movlb	0	; select bank0
 15165  01A6  0857               	movf	menu_Main@data,w
 15166  01A7  0086               	movwf	6
 15167  01A8  0858               	movf	menu_Main@data+1,w
 15168  01A9  0087               	movwf	7
 15169  01AA  3144               	addfsr 1,4
 15170  01AB  3000               	movlw	0
 15171  01AC  3FC0               	movwi [0]fsr1
 15172  01AD  3FC1               	movwi [1]fsr1
 15173                           
 15174                           ;menu_task.c: 119: data->holdCountB += 1;
 15175  01AE  0857               	movf	menu_Main@data,w
 15176  01AF  0086               	movwf	6
 15177  01B0  0858               	movf	menu_Main@data+1,w
 15178  01B1  0087               	movwf	7
 15179  01B2  3146               	addfsr 1,6
 15180  01B3  3001               	movlw	1
 15181  01B4  0781               	addwf	1,f
 15182  01B5  3141               	addfsr 1,1
 15183  01B6  1803               	skipnc
 15184  01B7  0A81               	incf	1,f
 15185                           
 15186                           ;menu_task.c: 120: data->holdCountX = 0;
 15187  01B8  0857               	movf	menu_Main@data,w
 15188  01B9  0086               	movwf	6
 15189  01BA  0858               	movf	menu_Main@data+1,w
 15190  01BB  0087               	movwf	7
 15191  01BC  3148               	addfsr 1,8
 15192  01BD  3000               	movlw	0
 15193  01BE  3FC0               	movwi [0]fsr1
 15194  01BF  3FC1               	movwi [1]fsr1
 15195                           
 15196                           ;menu_task.c: 121: data->holdCountY = 0;
 15197  01C0  0857               	movf	menu_Main@data,w
 15198  01C1  0086               	movwf	6
 15199  01C2  0858               	movf	menu_Main@data+1,w
 15200  01C3  0087               	movwf	7
 15201  01C4  314A               	addfsr 1,10
 15202  01C5  3000               	movlw	0
 15203  01C6  3FC0               	movwi [0]fsr1
 15204  01C7  3FC1               	movwi [1]fsr1
 15205                           
 15206                           ;menu_task.c: 122: data->noholdCount = 0;
 15207  01C8  0857               	movf	menu_Main@data,w
 15208  01C9  0086               	movwf	6
 15209  01CA  0858               	movf	menu_Main@data+1,w
 15210  01CB  0087               	movwf	7
 15211  01CC  314C               	addfsr 1,12
 15212  01CD  3000               	movlw	0
 15213  01CE  3FC0               	movwi [0]fsr1
 15214  01CF  3FC1               	movwi [1]fsr1
 15215                           
 15216                           ;menu_task.c: 123: break;
 15217  01D0  0008               	return
 15218  01D1                     l6947:	
 15219                           ;menu_task.c: 124: case 4:
 15220                           
 15221                           
 15222                           ;menu_task.c: 125: if (data->holdCountX == 0){
 15223  01D1  0857               	movf	menu_Main@data,w
 15224  01D2  0086               	movwf	6
 15225  01D3  0858               	movf	menu_Main@data+1,w
 15226  01D4  0087               	movwf	7
 15227  01D5  3148               	addfsr 1,8
 15228  01D6  0016               	moviw fsr1++
 15229  01D7  0401               	iorwf	1,w
 15230  01D8  1D03               	btfss	3,2
 15231  01D9  29E6               	goto	l6953
 15232                           
 15233                           ;menu_task.c: 127: menu_clear(data);
 15234  01DA  0858               	movf	menu_Main@data+1,w
 15235  01DB  00BA               	movwf	menu_clear@data+1
 15236  01DC  0857               	movf	menu_Main@data,w
 15237  01DD  00B9               	movwf	menu_clear@data
 15238  01DE  3192  2205  3180   	fcall	_menu_clear
 15239                           
 15240                           ;menu_task.c: 128: currentTask = FLASHY_TASK;
 15241  01E1  3002               	movlw	2
 15242  01E2  0021               	movlb	1	; select bank1
 15243  01E3  00B4               	movwf	_currentTask^(0+128)
 15244  01E4  3000               	movlw	0
 15245  01E5  00B5               	movwf	(_currentTask^(0+128)+1)
 15246  01E6                     l6953:	
 15247                           
 15248                           ;menu_task.c: 129: }
 15249                           ;menu_task.c: 130: data->holdCountA = 0;
 15250  01E6  0020               	movlb	0	; select bank0
 15251  01E7  0857               	movf	menu_Main@data,w
 15252  01E8  0086               	movwf	6
 15253  01E9  0858               	movf	menu_Main@data+1,w
 15254  01EA  0087               	movwf	7
 15255  01EB  3144               	addfsr 1,4
 15256  01EC  3000               	movlw	0
 15257  01ED  3FC0               	movwi [0]fsr1
 15258  01EE  3FC1               	movwi [1]fsr1
 15259                           
 15260                           ;menu_task.c: 131: data->holdCountB = 0;
 15261  01EF  0857               	movf	menu_Main@data,w
 15262  01F0  0086               	movwf	6
 15263  01F1  0858               	movf	menu_Main@data+1,w
 15264  01F2  0087               	movwf	7
 15265  01F3  3146               	addfsr 1,6
 15266  01F4  3000               	movlw	0
 15267  01F5  3FC0               	movwi [0]fsr1
 15268  01F6  3FC1               	movwi [1]fsr1
 15269                           
 15270                           ;menu_task.c: 132: data->holdCountX += 1;
 15271  01F7  0857               	movf	menu_Main@data,w
 15272  01F8  0086               	movwf	6
 15273  01F9  0858               	movf	menu_Main@data+1,w
 15274  01FA  0087               	movwf	7
 15275  01FB  3148               	addfsr 1,8
 15276  01FC  3001               	movlw	1
 15277  01FD  0781               	addwf	1,f
 15278  01FE  3141               	addfsr 1,1
 15279  01FF  1803               	skipnc
 15280  0200  0A81               	incf	1,f
 15281                           
 15282                           ;menu_task.c: 133: data->holdCountY = 0;
 15283  0201  0857               	movf	menu_Main@data,w
 15284  0202  0086               	movwf	6
 15285  0203  0858               	movf	menu_Main@data+1,w
 15286  0204  0087               	movwf	7
 15287  0205  314A               	addfsr 1,10
 15288  0206  3000               	movlw	0
 15289  0207  3FC0               	movwi [0]fsr1
 15290  0208  3FC1               	movwi [1]fsr1
 15291                           
 15292                           ;menu_task.c: 134: data->noholdCount = 0;
 15293  0209  0857               	movf	menu_Main@data,w
 15294  020A  0086               	movwf	6
 15295  020B  0858               	movf	menu_Main@data+1,w
 15296  020C  0087               	movwf	7
 15297  020D  314C               	addfsr 1,12
 15298  020E  3000               	movlw	0
 15299  020F  3FC0               	movwi [0]fsr1
 15300  0210  3FC1               	movwi [1]fsr1
 15301                           
 15302                           ;menu_task.c: 135: break;
 15303  0211  0008               	return
 15304  0212                     l6963:	
 15305                           ;menu_task.c: 136: case 8:
 15306                           
 15307                           
 15308                           ;menu_task.c: 137: if (data->holdCountY == 0){
 15309  0212  0857               	movf	menu_Main@data,w
 15310  0213  0086               	movwf	6
 15311  0214  0858               	movf	menu_Main@data+1,w
 15312  0215  0087               	movwf	7
 15313  0216  314A               	addfsr 1,10
 15314  0217  0016               	moviw fsr1++
 15315  0218  0401               	iorwf	1,w
 15316  0219  1D03               	btfss	3,2
 15317  021A  2A22               	goto	l6967
 15318                           
 15319                           ;menu_task.c: 138: menu_run_option(data);
 15320  021B  0858               	movf	menu_Main@data+1,w
 15321  021C  00BC               	movwf	menu_run_option@data+1
 15322  021D  0857               	movf	menu_Main@data,w
 15323  021E  00BB               	movwf	menu_run_option@data
 15324  021F  319B  23E3  3180   	fcall	_menu_run_option
 15325  0222                     l6967:	
 15326                           
 15327                           ;menu_task.c: 139: }
 15328                           ;menu_task.c: 140: data->holdCountA = 0;
 15329  0222  0020               	movlb	0	; select bank0
 15330  0223  0857               	movf	menu_Main@data,w
 15331  0224  0086               	movwf	6
 15332  0225  0858               	movf	menu_Main@data+1,w
 15333  0226  0087               	movwf	7
 15334  0227  3144               	addfsr 1,4
 15335  0228  3000               	movlw	0
 15336  0229  3FC0               	movwi [0]fsr1
 15337  022A  3FC1               	movwi [1]fsr1
 15338                           
 15339                           ;menu_task.c: 141: data->holdCountB = 0;
 15340  022B  0857               	movf	menu_Main@data,w
 15341  022C  0086               	movwf	6
 15342  022D  0858               	movf	menu_Main@data+1,w
 15343  022E  0087               	movwf	7
 15344  022F  3146               	addfsr 1,6
 15345  0230  3000               	movlw	0
 15346  0231  3FC0               	movwi [0]fsr1
 15347  0232  3FC1               	movwi [1]fsr1
 15348                           
 15349                           ;menu_task.c: 142: data->holdCountX = 0;
 15350  0233  0857               	movf	menu_Main@data,w
 15351  0234  0086               	movwf	6
 15352  0235  0858               	movf	menu_Main@data+1,w
 15353  0236  0087               	movwf	7
 15354  0237  3148               	addfsr 1,8
 15355  0238  3000               	movlw	0
 15356  0239  3FC0               	movwi [0]fsr1
 15357  023A  3FC1               	movwi [1]fsr1
 15358                           
 15359                           ;menu_task.c: 143: data->holdCountY += 1;
 15360  023B  0857               	movf	menu_Main@data,w
 15361  023C  0086               	movwf	6
 15362  023D  0858               	movf	menu_Main@data+1,w
 15363  023E  0087               	movwf	7
 15364  023F  314A               	addfsr 1,10
 15365  0240  3001               	movlw	1
 15366  0241  0781               	addwf	1,f
 15367  0242  3141               	addfsr 1,1
 15368  0243  1803               	skipnc
 15369  0244  0A81               	incf	1,f
 15370                           
 15371                           ;menu_task.c: 144: data->noholdCount = 0;
 15372  0245  0857               	movf	menu_Main@data,w
 15373  0246  0086               	movwf	6
 15374  0247  0858               	movf	menu_Main@data+1,w
 15375  0248  0087               	movwf	7
 15376  0249  314C               	addfsr 1,12
 15377  024A  3000               	movlw	0
 15378  024B  3FC0               	movwi [0]fsr1
 15379  024C  3FC1               	movwi [1]fsr1
 15380                           
 15381                           ;menu_task.c: 145: break;
 15382  024D  0008               	return
 15383  024E                     l6977:	
 15384                           ;menu_task.c: 147: default:
 15385                           
 15386                           ;menu_task.c: 146: case 1 | 2 | 8:
 15387                           
 15388                           
 15389                           ;menu_task.c: 148: menu_display_option(data);
 15390  024E  0858               	movf	menu_Main@data+1,w
 15391  024F  00CD               	movwf	menu_display_option@data+1
 15392  0250  0857               	movf	menu_Main@data,w
 15393  0251  00CC               	movwf	menu_display_option@data
 15394  0252  3192  224C  3180   	fcall	_menu_display_option
 15395                           
 15396                           ;menu_task.c: 149: data->holdCountA = 0;
 15397  0255  0020               	movlb	0	; select bank0
 15398  0256  0857               	movf	menu_Main@data,w
 15399  0257  0086               	movwf	6
 15400  0258  0858               	movf	menu_Main@data+1,w
 15401  0259  0087               	movwf	7
 15402  025A  3144               	addfsr 1,4
 15403  025B  3000               	movlw	0
 15404  025C  3FC0               	movwi [0]fsr1
 15405  025D  3FC1               	movwi [1]fsr1
 15406                           
 15407                           ;menu_task.c: 150: data->holdCountB = 0;
 15408  025E  0857               	movf	menu_Main@data,w
 15409  025F  0086               	movwf	6
 15410  0260  0858               	movf	menu_Main@data+1,w
 15411  0261  0087               	movwf	7
 15412  0262  3146               	addfsr 1,6
 15413  0263  3000               	movlw	0
 15414  0264  3FC0               	movwi [0]fsr1
 15415  0265  3FC1               	movwi [1]fsr1
 15416                           
 15417                           ;menu_task.c: 151: data->holdCountX = 0;
 15418  0266  0857               	movf	menu_Main@data,w
 15419  0267  0086               	movwf	6
 15420  0268  0858               	movf	menu_Main@data+1,w
 15421  0269  0087               	movwf	7
 15422  026A  3148               	addfsr 1,8
 15423  026B  3000               	movlw	0
 15424  026C  3FC0               	movwi [0]fsr1
 15425  026D  3FC1               	movwi [1]fsr1
 15426                           
 15427                           ;menu_task.c: 152: data->holdCountY = 0;
 15428  026E  0857               	movf	menu_Main@data,w
 15429  026F  0086               	movwf	6
 15430  0270  0858               	movf	menu_Main@data+1,w
 15431  0271  0087               	movwf	7
 15432  0272  314A               	addfsr 1,10
 15433  0273  3000               	movlw	0
 15434  0274  3FC0               	movwi [0]fsr1
 15435  0275  3FC1               	movwi [1]fsr1
 15436                           
 15437                           ;menu_task.c: 153: data->noholdCount += 1;
 15438  0276  0857               	movf	menu_Main@data,w
 15439  0277  0086               	movwf	6
 15440  0278  0858               	movf	menu_Main@data+1,w
 15441  0279  0087               	movwf	7
 15442  027A  314C               	addfsr 1,12
 15443  027B  3001               	movlw	1
 15444  027C  0781               	addwf	1,f
 15445  027D  3141               	addfsr 1,1
 15446  027E  1803               	skipnc
 15447  027F  0A81               	incf	1,f
 15448                           
 15449                           ;menu_task.c: 154: }
 15450  0280  0008               	return
 15451  0281                     l6989:	
 15452  0281  0856               	movf	menu_Main@buttonPressed,w
 15453                           
 15454                           ; Switch size 1, requested type "space"
 15455                           ; Number of cases is 5, Range of values is 1 to 11
 15456                           ; switch strategies available:
 15457                           ; Name         Instructions Cycles
 15458                           ; simple_byte           16     9 (average)
 15459                           ; direct_byte           31     9 (fixed)
 15460                           ; jumptable            263     9 (fixed)
 15461                           ;	Chosen strategy is simple_byte
 15462  0282  3A01               	xorlw	1	; case 1
 15463  0283  1903               	skipnz
 15464  0284  2928               	goto	l6907
 15465  0285  3A03               	xorlw	3	; case 2
 15466  0286  1903               	skipnz
 15467  0287  2975               	goto	l6927
 15468  0288  3A06               	xorlw	6	; case 4
 15469  0289  1903               	skipnz
 15470  028A  29D1               	goto	l6947
 15471  028B  3A0C               	xorlw	12	; case 8
 15472  028C  1903               	skipnz
 15473  028D  2A12               	goto	l6963
 15474  028E  3A03               	xorlw	3	; case 11
 15475  028F  1903               	skipnz
 15476  0290  2A4E               	goto	l6977
 15477  0291  2A4E               	goto	l6977
 15478  0292  0008               	return
 15479  0293                     __end_of_menu_Main:	
 15480                           
 15481                           	psect	text16
 15482  089A                     __ptext16:	
 15483 ;; *************** function _flashy_Main *****************
 15484 ;; Defined at:
 15485 ;;		line 93 in file "flashy_task.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;  taskData        2   50[BANK0 ] PTR void 
 15488 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15489 ;;		 -> flashy_TaskData(30), NULL(0), 
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;  hit_counter     6   54[BANK0 ] unsigned char [6]
 15492 ;;  data            2   62[BANK0 ] PTR struct t_flashy_task
 15493 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15494 ;;		 -> flashy_TaskData(30), NULL(0), 
 15495 ;;  buttonPresse    2   60[BANK0 ] unsigned int 
 15496 ;; Return value:  Size  Location     Type
 15497 ;;                  1    wreg      void 
 15498 ;; Registers used:
 15499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15500 ;; Tracked objects:
 15501 ;;		On entry : 0/0
 15502 ;;		On exit  : 0/0
 15503 ;;		Unchanged: 0/0
 15504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15506 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15507 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15508 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15509 ;;Total ram usage:       14 bytes
 15510 ;; Hardware stack levels used:    1
 15511 ;; Hardware stack levels required when called:   11
 15512 ;; This function calls:
 15513 ;;		_flashy_display_option
 15514 ;;		_led_circle
 15515 ;;		_led_curtain
 15516 ;;		_led_rand
 15517 ;;		_led_roundabout
 15518 ;;		_marquee
 15519 ;;		_nullifyBadge_buttonsGet
 15520 ;;		_nullifyBadge_irGet
 15521 ;;		_nullifyBadge_irTxClr
 15522 ;;		_nullifyBadge_irTxRegister
 15523 ;;		_nullifyBadge_irTxRelease
 15524 ;;		_nullifyBadge_irTxSet
 15525 ;;		_nullifyBadge_segDisplayForceUpdate
 15526 ;;		_nullifyBadge_segDisplayPutStr
 15527 ;;		_nullifyBadge_userLedsSet
 15528 ;;		_sprintf
 15529 ;; This function is called by:
 15530 ;;		_main
 15531 ;;		_scheduler_TaskRun
 15532 ;; This function uses a non-reentrant model
 15533 ;;
 15534                           
 15535                           
 15536                           ;psect for function _flashy_Main
 15537  089A                     _flashy_Main:	
 15538                           
 15539                           ;flashy_task.c: 94: struct t_flashy_taskData *data = (struct t_flashy_taskData *) taskDa
      +                          ta;
 15540                           
 15541                           ;incstack = 0
 15542                           ; Regs used in _flashy_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15543  089A  0020               	movlb	0	; select bank0
 15544  089B  0853               	movf	flashy_Main@taskData+1,w
 15545  089C  00DF               	movwf	flashy_Main@data+1
 15546  089D  0852               	movf	flashy_Main@taskData,w
 15547  089E  00DE               	movwf	flashy_Main@data
 15548                           
 15549                           ;flashy_task.c: 95: u16 buttonPressed;
 15550                           ;flashy_task.c: 96: char hit_counter[6];
 15551                           ;flashy_task.c: 98: if ( currentTask != FLASHY_TASK ){
 15552  089F  3002               	movlw	2
 15553  08A0  0021               	movlb	1	; select bank1
 15554  08A1  0634               	xorwf	_currentTask^(0+128),w
 15555  08A2  0435               	iorwf	(_currentTask+1)^(0+128),w
 15556  08A3  1903               	btfsc	3,2
 15557  08A4  2947               	goto	l7027
 15558                           
 15559                           ;flashy_task.c: 99: data->holdCountA = 1;
 15560  08A5  0020               	movlb	0	; select bank0
 15561  08A6  085E               	movf	flashy_Main@data,w
 15562  08A7  0086               	movwf	6
 15563  08A8  085F               	movf	flashy_Main@data+1,w
 15564  08A9  0087               	movwf	7
 15565  08AA  314A               	addfsr 1,10
 15566  08AB  3001               	movlw	1
 15567  08AC  3FC0               	movwi [0]fsr1
 15568  08AD  3000               	movlw	0
 15569  08AE  3FC1               	movwi [1]fsr1
 15570                           
 15571                           ;flashy_task.c: 100: data->holdCountB = 1;
 15572  08AF  085E               	movf	flashy_Main@data,w
 15573  08B0  0086               	movwf	6
 15574  08B1  085F               	movf	flashy_Main@data+1,w
 15575  08B2  0087               	movwf	7
 15576  08B3  314C               	addfsr 1,12
 15577  08B4  3001               	movlw	1
 15578  08B5  3FC0               	movwi [0]fsr1
 15579  08B6  3000               	movlw	0
 15580  08B7  3FC1               	movwi [1]fsr1
 15581                           
 15582                           ;flashy_task.c: 101: data->holdCountX = 1;
 15583  08B8  085E               	movf	flashy_Main@data,w
 15584  08B9  0086               	movwf	6
 15585  08BA  085F               	movf	flashy_Main@data+1,w
 15586  08BB  0087               	movwf	7
 15587  08BC  314E               	addfsr 1,14
 15588  08BD  3001               	movlw	1
 15589  08BE  3FC0               	movwi [0]fsr1
 15590  08BF  3000               	movlw	0
 15591  08C0  3FC1               	movwi [1]fsr1
 15592                           
 15593                           ;flashy_task.c: 102: data->holdCountY = 1;
 15594  08C1  085E               	movf	flashy_Main@data,w
 15595  08C2  0086               	movwf	6
 15596  08C3  085F               	movf	flashy_Main@data+1,w
 15597  08C4  0087               	movwf	7
 15598  08C5  3150               	addfsr 1,16
 15599  08C6  3001               	movlw	1
 15600  08C7  3FC0               	movwi [0]fsr1
 15601  08C8  3000               	movlw	0
 15602  08C9  3FC1               	movwi [1]fsr1
 15603                           
 15604                           ;flashy_task.c: 103: data->holdCountXY = 1;
 15605  08CA  085E               	movf	flashy_Main@data,w
 15606  08CB  0086               	movwf	6
 15607  08CC  085F               	movf	flashy_Main@data+1,w
 15608  08CD  0087               	movwf	7
 15609  08CE  3152               	addfsr 1,18
 15610  08CF  3001               	movlw	1
 15611  08D0  3FC0               	movwi [0]fsr1
 15612  08D1  3000               	movlw	0
 15613  08D2  3FC1               	movwi [1]fsr1
 15614                           
 15615                           ;flashy_task.c: 104: data->holdCountAY = 1;
 15616  08D3  085E               	movf	flashy_Main@data,w
 15617  08D4  0086               	movwf	6
 15618  08D5  085F               	movf	flashy_Main@data+1,w
 15619  08D6  0087               	movwf	7
 15620  08D7  3154               	addfsr 1,20
 15621  08D8  3001               	movlw	1
 15622  08D9  3FC0               	movwi [0]fsr1
 15623  08DA  3000               	movlw	0
 15624  08DB  3FC1               	movwi [1]fsr1
 15625                           
 15626                           ;flashy_task.c: 105: data->holdCountAX = 1;
 15627  08DC  085E               	movf	flashy_Main@data,w
 15628  08DD  0086               	movwf	6
 15629  08DE  085F               	movf	flashy_Main@data+1,w
 15630  08DF  0087               	movwf	7
 15631  08E0  3156               	addfsr 1,22
 15632  08E1  3001               	movlw	1
 15633  08E2  3FC0               	movwi [0]fsr1
 15634  08E3  3000               	movlw	0
 15635  08E4  3FC1               	movwi [1]fsr1
 15636                           
 15637                           ;flashy_task.c: 106: return;
 15638  08E5  0008               	return
 15639  08E6                     l6999:	
 15640                           ;flashy_task.c: 113: case SECRET_VALUE_TEST:
 15641                           
 15642                           ;flashy_task.c: 112: break;
 15643                           
 15644                           ;flashy_task.c: 111: case SECRET_VALUE_INIT:
 15645                           
 15646                           ;flashy_task.c: 107: }
 15647                           ;flashy_task.c: 110: switch (secret_value){
 15648                           
 15649                           
 15650                           ;flashy_task.c: 114: secret_value = SECRET_VALUE_INIT;
 15651  08E6  0021               	movlb	1	; select bank1
 15652  08E7  01D8               	clrf	_secret_value^(0+128)
 15653  08E8  01D9               	clrf	(_secret_value+1)^(0+128)
 15654                           
 15655                           ;flashy_task.c: 115: data->displayTickCount = 0;
 15656  08E9  0020               	movlb	0	; select bank0
 15657  08EA  085E               	movf	flashy_Main@data,w
 15658  08EB  0086               	movwf	6
 15659  08EC  085F               	movf	flashy_Main@data+1,w
 15660  08ED  0087               	movwf	7
 15661  08EE  3144               	addfsr 1,4
 15662  08EF  3000               	movlw	0
 15663  08F0  3FC0               	movwi [0]fsr1
 15664  08F1  3FC1               	movwi [1]fsr1
 15665                           
 15666                           ;flashy_task.c: 116: data->display_state = FLASHY_STATE_DISPLAY_SECRET_TEST;
 15667  08F2  085E               	movf	flashy_Main@data,w
 15668  08F3  3E06               	addlw	6
 15669  08F4  00D4               	movwf	??_flashy_Main
 15670  08F5  3000               	movlw	0
 15671  08F6  3D5F               	addwfc	flashy_Main@data+1,w
 15672  08F7  00D5               	movwf	??_flashy_Main+1
 15673  08F8  0854               	movf	??_flashy_Main,w
 15674  08F9  0086               	movwf	6
 15675  08FA  0855               	movf	??_flashy_Main+1,w
 15676  08FB  0087               	movwf	7
 15677  08FC  3005               	movlw	5
 15678  08FD  0081               	movwf	1
 15679                           
 15680                           ;flashy_task.c: 118: data->holdCountA = 1;
 15681  08FE  085E               	movf	flashy_Main@data,w
 15682  08FF  0086               	movwf	6
 15683  0900  085F               	movf	flashy_Main@data+1,w
 15684  0901  0087               	movwf	7
 15685  0902  314A               	addfsr 1,10
 15686  0903  3001               	movlw	1
 15687  0904  3FC0               	movwi [0]fsr1
 15688  0905  3000               	movlw	0
 15689  0906  3FC1               	movwi [1]fsr1
 15690                           
 15691                           ;flashy_task.c: 119: data->holdCountB = 1;
 15692  0907  085E               	movf	flashy_Main@data,w
 15693  0908  0086               	movwf	6
 15694  0909  085F               	movf	flashy_Main@data+1,w
 15695  090A  0087               	movwf	7
 15696  090B  314C               	addfsr 1,12
 15697  090C  3001               	movlw	1
 15698  090D  3FC0               	movwi [0]fsr1
 15699  090E  3000               	movlw	0
 15700  090F  3FC1               	movwi [1]fsr1
 15701                           
 15702                           ;flashy_task.c: 120: data->holdCountX = 1;
 15703  0910  085E               	movf	flashy_Main@data,w
 15704  0911  0086               	movwf	6
 15705  0912  085F               	movf	flashy_Main@data+1,w
 15706  0913  0087               	movwf	7
 15707  0914  314E               	addfsr 1,14
 15708  0915  3001               	movlw	1
 15709  0916  3FC0               	movwi [0]fsr1
 15710  0917  3000               	movlw	0
 15711  0918  3FC1               	movwi [1]fsr1
 15712                           
 15713                           ;flashy_task.c: 121: data->holdCountY = 1;
 15714  0919  085E               	movf	flashy_Main@data,w
 15715  091A  0086               	movwf	6
 15716  091B  085F               	movf	flashy_Main@data+1,w
 15717  091C  0087               	movwf	7
 15718  091D  3150               	addfsr 1,16
 15719  091E  3001               	movlw	1
 15720  091F  3FC0               	movwi [0]fsr1
 15721  0920  3000               	movlw	0
 15722  0921  3FC1               	movwi [1]fsr1
 15723                           
 15724                           ;flashy_task.c: 122: data->holdCountXY = 1;
 15725  0922  085E               	movf	flashy_Main@data,w
 15726  0923  0086               	movwf	6
 15727  0924  085F               	movf	flashy_Main@data+1,w
 15728  0925  0087               	movwf	7
 15729  0926  3152               	addfsr 1,18
 15730  0927  3001               	movlw	1
 15731  0928  3FC0               	movwi [0]fsr1
 15732  0929  3000               	movlw	0
 15733  092A  3FC1               	movwi [1]fsr1
 15734                           
 15735                           ;flashy_task.c: 123: data->holdCountAY = 1;
 15736  092B  085E               	movf	flashy_Main@data,w
 15737  092C  0086               	movwf	6
 15738  092D  085F               	movf	flashy_Main@data+1,w
 15739  092E  0087               	movwf	7
 15740  092F  3154               	addfsr 1,20
 15741  0930  3001               	movlw	1
 15742  0931  3FC0               	movwi [0]fsr1
 15743  0932  3000               	movlw	0
 15744  0933  3FC1               	movwi [1]fsr1
 15745                           
 15746                           ;flashy_task.c: 124: data->holdCountAX = 1;
 15747  0934  085E               	movf	flashy_Main@data,w
 15748  0935  0086               	movwf	6
 15749  0936  085F               	movf	flashy_Main@data+1,w
 15750  0937  0087               	movwf	7
 15751  0938  3156               	addfsr 1,22
 15752  0939  3001               	movlw	1
 15753  093A  3FC0               	movwi [0]fsr1
 15754  093B  3000               	movlw	0
 15755  093C  3FC1               	movwi [1]fsr1
 15756                           
 15757                           ;flashy_task.c: 125: data->noholdCount = 1;
 15758  093D  085E               	movf	flashy_Main@data,w
 15759  093E  0086               	movwf	6
 15760  093F  085F               	movf	flashy_Main@data+1,w
 15761  0940  0087               	movwf	7
 15762  0941  315C               	addfsr 1,28
 15763  0942  3001               	movlw	1
 15764  0943  3FC0               	movwi [0]fsr1
 15765  0944  3000               	movlw	0
 15766  0945  3FC1               	movwi [1]fsr1
 15767                           
 15768                           ;flashy_task.c: 126: return;
 15769  0946  0008               	return
 15770  0947                     l7027:	
 15771                           ;flashy_task.c: 128: }
 15772                           
 15773                           ;flashy_task.c: 127: break;
 15774                           
 15775                           
 15776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15777                           ; Switch size 1, requested type "space"
 15778                           ; Number of cases is 1, Range of values is 0 to 0
 15779                           ; switch strategies available:
 15780                           ; Name         Instructions Cycles
 15781                           ; simple_byte            4     3 (average)
 15782                           ; direct_byte            8     6 (fixed)
 15783                           ; jumptable            260     6 (fixed)
 15784                           ;	Chosen strategy is simple_byte
 15785  0947  0021               	movlb	1	; select bank1
 15786  0948  0859               	movf	(_secret_value+1)^(0+128),w
 15787  0949  3A00               	xorlw	0	; case 0
 15788  094A  1903               	skipnz
 15789  094B  294D               	goto	l8149
 15790  094C  2A08               	goto	l7075
 15791  094D                     l8149:	
 15792                           
 15793                           ; Switch size 1, requested type "space"
 15794                           ; Number of cases is 2, Range of values is 0 to 1
 15795                           ; switch strategies available:
 15796                           ; Name         Instructions Cycles
 15797                           ; simple_byte            7     4 (average)
 15798                           ; direct_byte           10     6 (fixed)
 15799                           ; jumptable            260     6 (fixed)
 15800                           ;	Chosen strategy is simple_byte
 15801  094D  0858               	movf	_secret_value^(0+128),w
 15802  094E  3A00               	xorlw	0	; case 0
 15803  094F  1903               	skipnz
 15804  0950  2A08               	goto	l7075
 15805  0951  3A01               	xorlw	1	; case 1
 15806  0952  1903               	skipnz
 15807  0953  28E6               	goto	l6999
 15808  0954  2A08               	goto	l7075
 15809                           
 15810                           ;flashy_task.c: 131: switch (data->led_state){
 15811  0955  2A08               	goto	l7075
 15812  0956                     l7029:	
 15813                           ;flashy_task.c: 132: case FLASHY_STATE_LED_ROUNDABOUT:
 15814                           
 15815                           
 15816                           ;flashy_task.c: 133: if (data->delayTickCount == 0){
 15817  0956  0020               	movlb	0	; select bank0
 15818  0957  085E               	movf	flashy_Main@data,w
 15819  0958  0086               	movwf	6
 15820  0959  085F               	movf	flashy_Main@data+1,w
 15821  095A  0087               	movwf	7
 15822  095B  3141               	addfsr 1,1
 15823  095C  0016               	moviw fsr1++
 15824  095D  0401               	iorwf	1,w
 15825  095E  1D03               	btfss	3,2
 15826  095F  29FC               	goto	L5
 15827                           
 15828                           ;flashy_task.c: 134: led_roundabout(flashy_leds_idx);
 15829  0960  0021               	movlb	1	; select bank1
 15830  0961  082F               	movf	(_flashy_leds_idx+1)^(0+128),w
 15831  0962  0020               	movlb	0	; select bank0
 15832  0963  00B1               	movwf	led_roundabout@counter+1
 15833  0964  0021               	movlb	1	; select bank1
 15834  0965  082E               	movf	_flashy_leds_idx^(0+128),w
 15835  0966  0020               	movlb	0	; select bank0
 15836  0967  00B0               	movwf	led_roundabout@counter
 15837  0968  319C  24DC  3188   	fcall	_led_roundabout
 15838                           
 15839                           ;flashy_task.c: 135: flashy_leds_idx += 1;
 15840  096B  3001               	movlw	1
 15841  096C  0021               	movlb	1	; select bank1
 15842  096D  07AE               	addwf	_flashy_leds_idx^(0+128),f
 15843  096E  3000               	movlw	0
 15844  096F  3DAF               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 15845                           
 15846                           ;flashy_task.c: 136: data->delayTickCount = 35;
 15847  0970  0020               	movlb	0	; select bank0
 15848  0971  085E               	movf	flashy_Main@data,w
 15849  0972  0086               	movwf	6
 15850  0973  085F               	movf	flashy_Main@data+1,w
 15851  0974  0087               	movwf	7
 15852  0975  3141               	addfsr 1,1
 15853  0976  3023               	movlw	35
 15854  0977  3FC0               	movwi [0]fsr1
 15855  0978  3000               	movlw	0
 15856  0979  3FC1               	movwi [1]fsr1
 15857                           
 15858                           ;flashy_task.c: 137: }
 15859  097A  2AA3               	goto	l7105
 15860  097B                     l7039:	
 15861                           ;flashy_task.c: 142: case FLASHY_STATE_LED_SHOT:
 15862                           
 15863                           ;flashy_task.c: 140: }
 15864                           ;flashy_task.c: 141: break;
 15865                           
 15866                           ;flashy_task.c: 138: else {
 15867                           ;flashy_task.c: 139: data->delayTickCount -= 1;
 15868                           
 15869                           
 15870                           ;flashy_task.c: 143: if (data->delayTickCount == 0){
 15871  097B  085E               	movf	flashy_Main@data,w
 15872  097C  0086               	movwf	6
 15873  097D  085F               	movf	flashy_Main@data+1,w
 15874  097E  0087               	movwf	7
 15875  097F  3141               	addfsr 1,1
 15876  0980  0016               	moviw fsr1++
 15877  0981  0401               	iorwf	1,w
 15878  0982  1D03               	btfss	3,2
 15879  0983  29FC               	goto	L5
 15880                           
 15881                           ;flashy_task.c: 144: led_curtain(flashy_leds_idx);
 15882  0984  0021               	movlb	1	; select bank1
 15883  0985  082F               	movf	(_flashy_leds_idx+1)^(0+128),w
 15884  0986  0020               	movlb	0	; select bank0
 15885  0987  00B1               	movwf	led_curtain@counter+1
 15886  0988  0021               	movlb	1	; select bank1
 15887  0989  082E               	movf	_flashy_leds_idx^(0+128),w
 15888  098A  0020               	movlb	0	; select bank0
 15889  098B  00B0               	movwf	led_curtain@counter
 15890  098C  319C  249B  3188   	fcall	_led_curtain
 15891                           
 15892                           ;flashy_task.c: 145: flashy_leds_idx += 1;
 15893  098F  3001               	movlw	1
 15894  0990  0021               	movlb	1	; select bank1
 15895  0991  07AE               	addwf	_flashy_leds_idx^(0+128),f
 15896  0992  3000               	movlw	0
 15897  0993  3DAF               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 15898                           
 15899                           ;flashy_task.c: 146: data->delayTickCount = 5;
 15900  0994  0020               	movlb	0	; select bank0
 15901  0995  085E               	movf	flashy_Main@data,w
 15902  0996  0086               	movwf	6
 15903  0997  085F               	movf	flashy_Main@data+1,w
 15904  0998  0087               	movwf	7
 15905  0999  3141               	addfsr 1,1
 15906  099A  3005               	movlw	5
 15907  099B  3FC0               	movwi [0]fsr1
 15908  099C  3000               	movlw	0
 15909  099D  3FC1               	movwi [1]fsr1
 15910                           
 15911                           ;flashy_task.c: 147: }
 15912  099E  2AA3               	goto	l7105
 15913  099F                     l7049:	
 15914                           ;flashy_task.c: 152: case FLASHY_STATE_SPARKLE:
 15915                           
 15916                           ;flashy_task.c: 150: }
 15917                           ;flashy_task.c: 151: break;
 15918                           
 15919                           ;flashy_task.c: 148: else {
 15920                           ;flashy_task.c: 149: data->delayTickCount -= 1;
 15921                           
 15922                           
 15923                           ;flashy_task.c: 153: if (data->delayTickCount < 1){
 15924  099F  085E               	movf	flashy_Main@data,w
 15925  09A0  0086               	movwf	6
 15926  09A1  085F               	movf	flashy_Main@data+1,w
 15927  09A2  0087               	movwf	7
 15928  09A3  3141               	addfsr 1,1
 15929  09A4  0016               	moviw fsr1++
 15930  09A5  0401               	iorwf	1,w
 15931  09A6  1D03               	btfss	3,2
 15932  09A7  29B7               	goto	l7055
 15933                           
 15934                           ;flashy_task.c: 154: led_rand();
 15935  09A8  31A7  27AB  3188   	fcall	_led_rand
 15936                           
 15937                           ;flashy_task.c: 155: data->delayTickCount = flashy_sparkle_rate;
 15938  09AB  0020               	movlb	0	; select bank0
 15939  09AC  085E               	movf	flashy_Main@data,w
 15940  09AD  0086               	movwf	6
 15941  09AE  085F               	movf	flashy_Main@data+1,w
 15942  09AF  0087               	movwf	7
 15943  09B0  3141               	addfsr 1,1
 15944  09B1  0021               	movlb	1	; select bank1
 15945  09B2  082C               	movf	_flashy_sparkle_rate^(0+128),w
 15946  09B3  3FC0               	movwi [0]fsr1
 15947  09B4  082D               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 15948  09B5  3FC1               	movwi [1]fsr1
 15949                           
 15950                           ;flashy_task.c: 156: }
 15951  09B6  29C3               	goto	l7057
 15952  09B7                     l7055:	
 15953                           
 15954                           ;flashy_task.c: 157: else {
 15955                           ;flashy_task.c: 158: data->delayTickCount -= 1;
 15956  09B7  0020               	movlb	0	; select bank0
 15957  09B8  085E               	movf	flashy_Main@data,w
 15958  09B9  0086               	movwf	6
 15959  09BA  085F               	movf	flashy_Main@data+1,w
 15960  09BB  0087               	movwf	7
 15961  09BC  3141               	addfsr 1,1
 15962  09BD  3001               	movlw	1
 15963  09BE  0281               	subwf	1,f
 15964  09BF  3141               	addfsr 1,1
 15965  09C0  3000               	movlw	0
 15966  09C1  3B81               	subwfb	1,f
 15967  09C2  317F               	addfsr 1,-1
 15968  09C3                     l7057:	
 15969                           ;flashy_task.c: 159: }
 15970                           ;flashy_task.c: 160: case FLASHY_STATE_CIRCLE:
 15971                           
 15972                           
 15973                           ;flashy_task.c: 161: if (data->delayTickCount ==0 ){
 15974  09C3  0020               	movlb	0	; select bank0
 15975  09C4  085E               	movf	flashy_Main@data,w
 15976  09C5  0086               	movwf	6
 15977  09C6  085F               	movf	flashy_Main@data+1,w
 15978  09C7  0087               	movwf	7
 15979  09C8  3141               	addfsr 1,1
 15980  09C9  0016               	moviw fsr1++
 15981  09CA  0401               	iorwf	1,w
 15982  09CB  1D03               	btfss	3,2
 15983  09CC  29FB               	goto	l7073
 15984                           
 15985                           ;flashy_task.c: 162: if (flashy_leds_idx == 1024 ){
 15986  09CD  3004               	movlw	4
 15987  09CE  0021               	movlb	1	; select bank1
 15988  09CF  062F               	xorwf	(_flashy_leds_idx+1)^(0+128),w
 15989  09D0  042E               	iorwf	_flashy_leds_idx^(0+128),w
 15990  09D1  1D03               	btfss	3,2
 15991  09D2  29D7               	goto	l7063
 15992                           
 15993                           ;flashy_task.c: 163: flashy_leds_idx = flashy_leds_idx << 1;
 15994  09D3  352E               	lslf	_flashy_leds_idx^(0+128),w
 15995  09D4  00AE               	movwf	_flashy_leds_idx^(0+128)
 15996  09D5  0D2F               	rlf	(_flashy_leds_idx+1)^(0+128),w
 15997  09D6  00AF               	movwf	(_flashy_leds_idx+1)^(0+128)
 15998  09D7                     l7063:	
 15999                           
 16000                           ;flashy_task.c: 164: }
 16001                           ;flashy_task.c: 165: led_circle(flashy_leds_idx);
 16002  09D7  082F               	movf	(_flashy_leds_idx+1)^(0+128),w
 16003  09D8  0020               	movlb	0	; select bank0
 16004  09D9  00B1               	movwf	led_circle@count+1
 16005  09DA  0021               	movlb	1	; select bank1
 16006  09DB  082E               	movf	_flashy_leds_idx^(0+128),w
 16007  09DC  0020               	movlb	0	; select bank0
 16008  09DD  00B0               	movwf	led_circle@count
 16009  09DE  31A6  26AF  3188   	fcall	_led_circle
 16010                           
 16011                           ;flashy_task.c: 166: if (flashy_leds_idx < 1 ){
 16012  09E1  0021               	movlb	1	; select bank1
 16013  09E2  082E               	movf	_flashy_leds_idx^(0+128),w
 16014  09E3  042F               	iorwf	(_flashy_leds_idx+1)^(0+128),w
 16015  09E4  1D03               	btfss	3,2
 16016  09E5  29EB               	goto	l7069
 16017                           
 16018                           ;flashy_task.c: 167: flashy_leds_idx = 1;
 16019  09E6  3001               	movlw	1
 16020  09E7  00AE               	movwf	_flashy_leds_idx^(0+128)
 16021  09E8  3000               	movlw	0
 16022  09E9  00AF               	movwf	(_flashy_leds_idx^(0+128)+1)
 16023                           
 16024                           ;flashy_task.c: 168: break;
 16025  09EA  2AA3               	goto	l7105
 16026  09EB                     l7069:	
 16027                           
 16028                           ;flashy_task.c: 169: }
 16029                           ;flashy_task.c: 170: flashy_leds_idx = flashy_leds_idx << 1;
 16030  09EB  352E               	lslf	_flashy_leds_idx^(0+128),w
 16031  09EC  00AE               	movwf	_flashy_leds_idx^(0+128)
 16032  09ED  0D2F               	rlf	(_flashy_leds_idx+1)^(0+128),w
 16033  09EE  00AF               	movwf	(_flashy_leds_idx+1)^(0+128)
 16034                           
 16035                           ;flashy_task.c: 172: data->delayTickCount = flashy_sparkle_rate;
 16036  09EF  0020               	movlb	0	; select bank0
 16037  09F0  085E               	movf	flashy_Main@data,w
 16038  09F1  0086               	movwf	6
 16039  09F2  085F               	movf	flashy_Main@data+1,w
 16040  09F3  0087               	movwf	7
 16041  09F4  3141               	addfsr 1,1
 16042  09F5  0021               	movlb	1	; select bank1
 16043  09F6  082C               	movf	_flashy_sparkle_rate^(0+128),w
 16044  09F7  3FC0               	movwi [0]fsr1
 16045  09F8  082D               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 16046  09F9  3FC1               	movwi [1]fsr1
 16047                           
 16048                           ;flashy_task.c: 173: }
 16049  09FA  2AA3               	goto	l7105
 16050  09FB                     l7073:	
 16051                           
 16052                           ;flashy_task.c: 174: else {
 16053                           ;flashy_task.c: 175: data->delayTickCount -= 1;
 16054  09FB  0020               	movlb	0	; select bank0
 16055  09FC                     L5:	
 16056  09FC  085E               	movf	flashy_Main@data,w
 16057  09FD  0086               	movwf	6
 16058  09FE  085F               	movf	flashy_Main@data+1,w
 16059  09FF  0087               	movwf	7
 16060  0A00  3141               	addfsr 1,1
 16061  0A01  3001               	movlw	1
 16062  0A02  0281               	subwf	1,f
 16063  0A03  3141               	addfsr 1,1
 16064  0A04  3000               	movlw	0
 16065  0A05  3B81               	subwfb	1,f
 16066  0A06  317F               	addfsr 1,-1
 16067                           
 16068                           ;flashy_task.c: 176: }
 16069                           ;flashy_task.c: 177: }
 16070  0A07  2AA3               	goto	l7105
 16071  0A08                     l7075:	
 16072  0A08  0020               	movlb	0	; select bank0
 16073  0A09  085E               	movf	flashy_Main@data,w
 16074  0A0A  0086               	movwf	6
 16075  0A0B  085F               	movf	flashy_Main@data+1,w
 16076  0A0C  0087               	movwf	7
 16077  0A0D  3143               	addfsr 1,3
 16078  0A0E  0801               	movf	1,w
 16079                           
 16080                           ; Switch size 1, requested type "space"
 16081                           ; Number of cases is 4, Range of values is 0 to 3
 16082                           ; switch strategies available:
 16083                           ; Name         Instructions Cycles
 16084                           ; simple_byte           13     7 (average)
 16085                           ; direct_byte           14     6 (fixed)
 16086                           ; jumptable            260     6 (fixed)
 16087                           ;	Chosen strategy is simple_byte
 16088  0A0F  3A00               	xorlw	0	; case 0
 16089  0A10  1903               	skipnz
 16090  0A11  2956               	goto	l7029
 16091  0A12  3A01               	xorlw	1	; case 1
 16092  0A13  1903               	skipnz
 16093  0A14  297B               	goto	l7039
 16094  0A15  3A03               	xorlw	3	; case 2
 16095  0A16  1903               	skipnz
 16096  0A17  299F               	goto	l7049
 16097  0A18  3A01               	xorlw	1	; case 3
 16098  0A19  1903               	skipnz
 16099  0A1A  29C3               	goto	l7057
 16100  0A1B  2AA3               	goto	l7105
 16101                           
 16102                           ;flashy_task.c: 180: switch (data->display_state){
 16103  0A1C  2AA3               	goto	l7105
 16104  0A1D                     l7077:	
 16105                           ;flashy_task.c: 181: case FLASHY_STATE_DISPLAY_BLASTER:
 16106                           
 16107                           
 16108                           ;flashy_task.c: 182: nullifyBadge_segDisplayPutStr(data->badge, "PEW ");
 16109  0A1D  3049               	movlw	low (STR_14| (0+32768))
 16110  0A1E  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 16111  0A1F  30A8               	movlw	high (STR_14| (0+32768))
 16112  0A20  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 16113  0A21  085E               	movf	flashy_Main@data,w
 16114  0A22  0086               	movwf	6
 16115  0A23  085F               	movf	flashy_Main@data+1,w
 16116  0A24  0087               	movwf	7
 16117  0A25  0801               	movf	1,w
 16118  0A26  31A6  26CC  3188   	fcall	_nullifyBadge_segDisplayPutStr
 16119                           
 16120                           ;flashy_task.c: 183: nullifyBadge_segDisplayForceUpdate(data->badge);
 16121  0A29  0020               	movlb	0	; select bank0
 16122  0A2A  085E               	movf	flashy_Main@data,w
 16123  0A2B  0086               	movwf	6
 16124  0A2C  085F               	movf	flashy_Main@data+1,w
 16125  0A2D  0087               	movwf	7
 16126  0A2E  0801               	movf	1,w
 16127  0A2F  31A6  2684  3188   	fcall	_nullifyBadge_segDisplayForceUpdate
 16128  0A32  2A97               	goto	L9
 16129  0A33                     l7083:	
 16130                           ;flashy_task.c: 186: case FLASHY_STATE_DISPLAY_SHOT:
 16131                           
 16132                           ;flashy_task.c: 185: break;
 16133                           
 16134                           ;flashy_task.c: 184: data->displayTickCount += 1;
 16135                           
 16136                           
 16137                           ;flashy_task.c: 187: sprintf((char *)hit_counter, "%4d", deaths);
 16138  0A33  3067               	movlw	low (STR_15| (0+32768))
 16139  0A34  00A4               	movwf	sprintf@f
 16140  0A35  30A8               	movlw	high (STR_15| (0+32768))
 16141  0A36  00A5               	movwf	sprintf@f+1
 16142  0A37  0021               	movlb	1	; select bank1
 16143  0A38  0829               	movf	(_deaths+1)^(0+128),w
 16144  0A39  0020               	movlb	0	; select bank0
 16145  0A3A  00A7               	movwf	?_sprintf+3
 16146  0A3B  0021               	movlb	1	; select bank1
 16147  0A3C  0828               	movf	_deaths^(0+128),w
 16148  0A3D  0020               	movlb	0	; select bank0
 16149  0A3E  00A6               	movwf	?_sprintf+2
 16150  0A3F  3056               	movlw	(low (flashy_Main@hit_counter| 0))& (0+255)
 16151  0A40  3186  261A  3188   	fcall	_sprintf
 16152                           
 16153                           ;flashy_task.c: 189: nullifyBadge_segDisplayPutStr(data->badge, hit_counter);
 16154  0A43  3056               	movlw	low flashy_Main@hit_counter
 16155  0A44  0020               	movlb	0	; select bank0
 16156  0A45  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 16157  0A46  3000               	movlw	high flashy_Main@hit_counter
 16158  0A47  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 16159  0A48  085E               	movf	flashy_Main@data,w
 16160  0A49  0086               	movwf	6
 16161  0A4A  085F               	movf	flashy_Main@data+1,w
 16162  0A4B  0087               	movwf	7
 16163  0A4C  0801               	movf	1,w
 16164  0A4D  31A6  26CC  3188   	fcall	_nullifyBadge_segDisplayPutStr
 16165                           
 16166                           ;flashy_task.c: 190: nullifyBadge_segDisplayForceUpdate(data->badge);
 16167  0A50  0020               	movlb	0	; select bank0
 16168  0A51  085E               	movf	flashy_Main@data,w
 16169  0A52  0086               	movwf	6
 16170  0A53  085F               	movf	flashy_Main@data+1,w
 16171  0A54  0087               	movwf	7
 16172  0A55  0801               	movf	1,w
 16173  0A56  31A6  2684  3188   	fcall	_nullifyBadge_segDisplayForceUpdate
 16174                           
 16175                           ;flashy_task.c: 191: if (data->displayTickCount == 150){
 16176  0A59  0020               	movlb	0	; select bank0
 16177  0A5A  085E               	movf	flashy_Main@data,w
 16178  0A5B  0086               	movwf	6
 16179  0A5C  085F               	movf	flashy_Main@data+1,w
 16180  0A5D  0087               	movwf	7
 16181  0A5E  3144               	addfsr 1,4
 16182  0A5F  0016               	moviw fsr1++
 16183  0A60  3A96               	xorlw	150
 16184  0A61  00D4               	movwf	??_flashy_Main
 16185  0A62  0016               	moviw fsr1++
 16186  0A63  04D4               	iorwf	??_flashy_Main,f
 16187  0A64  1D03               	btfss	3,2
 16188  0A65  2A98               	goto	L7
 16189                           
 16190                           ;flashy_task.c: 192: data->displayTickCount = 0;
 16191  0A66  085E               	movf	flashy_Main@data,w
 16192  0A67  0086               	movwf	6
 16193  0A68  085F               	movf	flashy_Main@data+1,w
 16194  0A69  0087               	movwf	7
 16195  0A6A  3144               	addfsr 1,4
 16196  0A6B  3000               	movlw	0
 16197  0A6C  3FC0               	movwi [0]fsr1
 16198  0A6D  3FC1               	movwi [1]fsr1
 16199                           
 16200                           ;flashy_task.c: 193: data->display_state = 35;
 16201  0A6E  085E               	movf	flashy_Main@data,w
 16202  0A6F  3E06               	addlw	6
 16203  0A70  00D4               	movwf	??_flashy_Main
 16204  0A71  3000               	movlw	0
 16205  0A72  3D5F               	addwfc	flashy_Main@data+1,w
 16206  0A73  00D5               	movwf	??_flashy_Main+1
 16207  0A74  0854               	movf	??_flashy_Main,w
 16208  0A75  0086               	movwf	6
 16209  0A76  0855               	movf	??_flashy_Main+1,w
 16210  0A77  0087               	movwf	7
 16211  0A78  3023               	movlw	35
 16212  0A79  0081               	movwf	1
 16213  0A7A  2A98               	goto	L7
 16214  0A7B                     l7095:	
 16215                           ;flashy_task.c: 197: case FLASHY_STATE_DISPLAY_SECRET_TEST:
 16216                           
 16217                           ;flashy_task.c: 196: break;
 16218                           
 16219                           ;flashy_task.c: 194: }
 16220                           ;flashy_task.c: 195: data->displayTickCount += 1;
 16221                           
 16222                           
 16223                           ;flashy_task.c: 198: marquee(FLASHY_TEXT_SECRET_TEST, data->displayTickCount);
 16224  0A7B  0021               	movlb	1	; select bank1
 16225  0A7C  0861               	movf	(_FLASHY_TEXT_SECRET_TEST+1)^(0+128),w
 16226  0A7D  0020               	movlb	0	; select bank0
 16227  0A7E  00BB               	movwf	marquee@string+1
 16228  0A7F  0021               	movlb	1	; select bank1
 16229  0A80  0860               	movf	_FLASHY_TEXT_SECRET_TEST^(0+128),w
 16230  0A81  0020               	movlb	0	; select bank0
 16231  0A82  00BA               	movwf	marquee@string
 16232  0A83  085E               	movf	flashy_Main@data,w
 16233  0A84  0086               	movwf	6
 16234  0A85  085F               	movf	flashy_Main@data+1,w
 16235  0A86  0087               	movwf	7
 16236  0A87  3144               	addfsr 1,4
 16237  0A88  3F40               	moviw [0]fsr1
 16238  0A89  00BC               	movwf	marquee@count
 16239  0A8A  3F41               	moviw [1]fsr1
 16240  0A8B  00BD               	movwf	marquee@count+1
 16241  0A8C  3193  23E6  3188   	fcall	_marquee
 16242  0A8F  2A97               	goto	L9
 16243  0A90                     l7099:	
 16244                           ;flashy_task.c: 203: default:
 16245                           
 16246                           ;flashy_task.c: 201: case FLASHY_STATE_DISPLAY:
 16247                           
 16248                           ;flashy_task.c: 200: break;
 16249                           
 16250                           ;flashy_task.c: 199: data->displayTickCount += 1;
 16251                           
 16252                           
 16253                           ;flashy_task.c: 204: flashy_display_option(data);
 16254  0A90  085F               	movf	flashy_Main@data+1,w
 16255  0A91  00CD               	movwf	flashy_display_option@data+1
 16256  0A92  085E               	movf	flashy_Main@data,w
 16257  0A93  00CC               	movwf	flashy_display_option@data
 16258  0A94  319F  27A1  3188   	fcall	_flashy_display_option
 16259  0A97                     L9:	
 16260                           
 16261                           ;flashy_task.c: 205: data->displayTickCount += 1;
 16262  0A97  0020               	movlb	0	; select bank0
 16263  0A98                     L7:	
 16264  0A98  085E               	movf	flashy_Main@data,w
 16265  0A99  0086               	movwf	6
 16266  0A9A  085F               	movf	flashy_Main@data+1,w
 16267  0A9B  0087               	movwf	7
 16268  0A9C  3144               	addfsr 1,4
 16269  0A9D  3001               	movlw	1
 16270  0A9E  0781               	addwf	1,f
 16271  0A9F  3141               	addfsr 1,1
 16272  0AA0  1803               	skipnc
 16273  0AA1  0A81               	incf	1,f
 16274                           
 16275                           ;flashy_task.c: 207: }
 16276                           
 16277                           ;flashy_task.c: 206: break;
 16278  0AA2  2AB7               	goto	l7107
 16279  0AA3                     l7105:	
 16280  0AA3  0020               	movlb	0	; select bank0
 16281  0AA4  085E               	movf	flashy_Main@data,w
 16282  0AA5  0086               	movwf	6
 16283  0AA6  085F               	movf	flashy_Main@data+1,w
 16284  0AA7  0087               	movwf	7
 16285  0AA8  3146               	addfsr 1,6
 16286  0AA9  0801               	movf	1,w
 16287                           
 16288                           ; Switch size 1, requested type "space"
 16289                           ; Number of cases is 4, Range of values is 0 to 5
 16290                           ; switch strategies available:
 16291                           ; Name         Instructions Cycles
 16292                           ; simple_byte           13     7 (average)
 16293                           ; direct_byte           18     6 (fixed)
 16294                           ; jumptable            260     6 (fixed)
 16295                           ;	Chosen strategy is simple_byte
 16296  0AAA  3A00               	xorlw	0	; case 0
 16297  0AAB  1903               	skipnz
 16298  0AAC  2A90               	goto	l7099
 16299  0AAD  3A02               	xorlw	2	; case 2
 16300  0AAE  1903               	skipnz
 16301  0AAF  2A1D               	goto	l7077
 16302  0AB0  3A01               	xorlw	1	; case 3
 16303  0AB1  1903               	skipnz
 16304  0AB2  2A33               	goto	l7083
 16305  0AB3  3A06               	xorlw	6	; case 5
 16306  0AB4  1903               	skipnz
 16307  0AB5  2A7B               	goto	l7095
 16308  0AB6  2A90               	goto	l7099
 16309  0AB7                     l7107:	
 16310                           
 16311                           ;flashy_task.c: 210: buttonPressed = nullifyBadge_buttonsGet();
 16312  0AB7  319A  22AA  3188   	fcall	_nullifyBadge_buttonsGet
 16313  0ABA  0020               	movlb	0	; select bank0
 16314  0ABB  00D4               	movwf	??_flashy_Main
 16315  0ABC  01D5               	clrf	??_flashy_Main+1
 16316  0ABD  0854               	movf	??_flashy_Main,w
 16317  0ABE  00DC               	movwf	flashy_Main@buttonPressed
 16318  0ABF  0855               	movf	??_flashy_Main+1,w
 16319  0AC0  00DD               	movwf	flashy_Main@buttonPressed+1
 16320                           
 16321                           ;flashy_task.c: 211: switch (buttonPressed) {
 16322  0AC1  2F36               	goto	l7345
 16323  0AC2                     l7109:	
 16324                           ;flashy_task.c: 212: case 4 | 8:
 16325                           
 16326                           
 16327                           ;flashy_task.c: 213: if (data->holdCountXY == 0 ){
 16328  0AC2  085E               	movf	flashy_Main@data,w
 16329  0AC3  0086               	movwf	6
 16330  0AC4  085F               	movf	flashy_Main@data+1,w
 16331  0AC5  0087               	movwf	7
 16332  0AC6  3152               	addfsr 1,18
 16333  0AC7  0016               	moviw fsr1++
 16334  0AC8  0401               	iorwf	1,w
 16335  0AC9  1D03               	btfss	3,2
 16336  0ACA  2AD1               	goto	l7113
 16337                           
 16338                           ;flashy_task.c: 215: data->display_state = FLASHY_STATE_DISPLAY;
 16339  0ACB  085E               	movf	flashy_Main@data,w
 16340  0ACC  0086               	movwf	6
 16341  0ACD  085F               	movf	flashy_Main@data+1,w
 16342  0ACE  0087               	movwf	7
 16343  0ACF  3146               	addfsr 1,6
 16344  0AD0  0181               	clrf	1
 16345  0AD1                     l7113:	
 16346                           
 16347                           ;flashy_task.c: 216: }
 16348                           ;flashy_task.c: 218: data->holdCountA = 0;
 16349  0AD1  085E               	movf	flashy_Main@data,w
 16350  0AD2  0086               	movwf	6
 16351  0AD3  085F               	movf	flashy_Main@data+1,w
 16352  0AD4  0087               	movwf	7
 16353  0AD5  314A               	addfsr 1,10
 16354  0AD6  3000               	movlw	0
 16355  0AD7  3FC0               	movwi [0]fsr1
 16356  0AD8  3FC1               	movwi [1]fsr1
 16357                           
 16358                           ;flashy_task.c: 219: data->holdCountB = 0;
 16359  0AD9  085E               	movf	flashy_Main@data,w
 16360  0ADA  0086               	movwf	6
 16361  0ADB  085F               	movf	flashy_Main@data+1,w
 16362  0ADC  0087               	movwf	7
 16363  0ADD  314C               	addfsr 1,12
 16364  0ADE  3000               	movlw	0
 16365  0ADF  3FC0               	movwi [0]fsr1
 16366  0AE0  3FC1               	movwi [1]fsr1
 16367                           
 16368                           ;flashy_task.c: 220: data->holdCountX = 0;
 16369  0AE1  085E               	movf	flashy_Main@data,w
 16370  0AE2  0086               	movwf	6
 16371  0AE3  085F               	movf	flashy_Main@data+1,w
 16372  0AE4  0087               	movwf	7
 16373  0AE5  314E               	addfsr 1,14
 16374  0AE6  3000               	movlw	0
 16375  0AE7  3FC0               	movwi [0]fsr1
 16376  0AE8  3FC1               	movwi [1]fsr1
 16377                           
 16378                           ;flashy_task.c: 221: data->holdCountY = 0;
 16379  0AE9  085E               	movf	flashy_Main@data,w
 16380  0AEA  0086               	movwf	6
 16381  0AEB  085F               	movf	flashy_Main@data+1,w
 16382  0AEC  0087               	movwf	7
 16383  0AED  3150               	addfsr 1,16
 16384  0AEE  3000               	movlw	0
 16385  0AEF  3FC0               	movwi [0]fsr1
 16386  0AF0  3FC1               	movwi [1]fsr1
 16387                           
 16388                           ;flashy_task.c: 222: data->holdCountXY += 1;
 16389  0AF1  085E               	movf	flashy_Main@data,w
 16390  0AF2  0086               	movwf	6
 16391  0AF3  085F               	movf	flashy_Main@data+1,w
 16392  0AF4  0087               	movwf	7
 16393  0AF5  3152               	addfsr 1,18
 16394  0AF6  3001               	movlw	1
 16395  0AF7  0781               	addwf	1,f
 16396  0AF8  3141               	addfsr 1,1
 16397  0AF9  1803               	skipnc
 16398  0AFA  0A81               	incf	1,f
 16399                           
 16400                           ;flashy_task.c: 223: data->holdCountAY = 0;
 16401  0AFB  085E               	movf	flashy_Main@data,w
 16402  0AFC  0086               	movwf	6
 16403  0AFD  085F               	movf	flashy_Main@data+1,w
 16404  0AFE  0087               	movwf	7
 16405  0AFF  3154               	addfsr 1,20
 16406  0B00  3000               	movlw	0
 16407  0B01  3FC0               	movwi [0]fsr1
 16408  0B02  3FC1               	movwi [1]fsr1
 16409                           
 16410                           ;flashy_task.c: 224: data->holdCountAX = 0;
 16411  0B03  085E               	movf	flashy_Main@data,w
 16412  0B04  0086               	movwf	6
 16413  0B05  085F               	movf	flashy_Main@data+1,w
 16414  0B06  0087               	movwf	7
 16415  0B07  3156               	addfsr 1,22
 16416  0B08  3000               	movlw	0
 16417  0B09  3FC0               	movwi [0]fsr1
 16418  0B0A  3FC1               	movwi [1]fsr1
 16419                           
 16420                           ;flashy_task.c: 225: data->holdCountBX = 0;
 16421  0B0B  085E               	movf	flashy_Main@data,w
 16422  0B0C  0086               	movwf	6
 16423  0B0D  085F               	movf	flashy_Main@data+1,w
 16424  0B0E  0087               	movwf	7
 16425  0B0F  3158               	addfsr 1,24
 16426  0B10  3000               	movlw	0
 16427  0B11  3FC0               	movwi [0]fsr1
 16428  0B12  3FC1               	movwi [1]fsr1
 16429                           
 16430                           ;flashy_task.c: 226: data->holdCountBY = 0;
 16431  0B13  085E               	movf	flashy_Main@data,w
 16432  0B14  0086               	movwf	6
 16433  0B15  085F               	movf	flashy_Main@data+1,w
 16434  0B16  0087               	movwf	7
 16435  0B17  315A               	addfsr 1,26
 16436  0B18  3000               	movlw	0
 16437  0B19  3FC0               	movwi [0]fsr1
 16438  0B1A  3FC1               	movwi [1]fsr1
 16439                           
 16440                           ;flashy_task.c: 227: data->noholdCount = 0;
 16441  0B1B  085E               	movf	flashy_Main@data,w
 16442  0B1C  0086               	movwf	6
 16443  0B1D  085F               	movf	flashy_Main@data+1,w
 16444  0B1E  0087               	movwf	7
 16445  0B1F  315C               	addfsr 1,28
 16446  0B20  3000               	movlw	0
 16447  0B21  3FC0               	movwi [0]fsr1
 16448  0B22  3FC1               	movwi [1]fsr1
 16449                           
 16450                           ;flashy_task.c: 228: break;
 16451  0B23  2FC9               	goto	l7375
 16452  0B24                     l7133:	
 16453                           ;flashy_task.c: 229: case 1 | 8:
 16454                           
 16455                           
 16456                           ;flashy_task.c: 230: if ( data->holdCountAY == 0 ){
 16457  0B24  085E               	movf	flashy_Main@data,w
 16458  0B25  0086               	movwf	6
 16459  0B26  085F               	movf	flashy_Main@data+1,w
 16460  0B27  0087               	movwf	7
 16461  0B28  3154               	addfsr 1,20
 16462  0B29  0016               	moviw fsr1++
 16463  0B2A  0401               	iorwf	1,w
 16464  0B2B  1D03               	btfss	3,2
 16465  0B2C  2B3D               	goto	l7139
 16466                           
 16467                           ;flashy_task.c: 231: if (flashy_sparkle_rate > 1000){
 16468  0B2D  3003               	movlw	3
 16469  0B2E  0021               	movlb	1	; select bank1
 16470  0B2F  022D               	subwf	(_flashy_sparkle_rate+1)^(0+128),w
 16471  0B30  30E9               	movlw	233
 16472  0B31  1903               	skipnz
 16473  0B32  022C               	subwf	_flashy_sparkle_rate^(0+128),w
 16474  0B33  1C03               	skipc
 16475  0B34  2B39               	goto	l1096
 16476                           
 16477                           ;flashy_task.c: 232: flashy_sparkle_rate = 1000;
 16478  0B35  30E8               	movlw	232
 16479  0B36  00AC               	movwf	_flashy_sparkle_rate^(0+128)
 16480  0B37  3003               	movlw	3
 16481  0B38  00AD               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 16482  0B39                     l1096:	
 16483                           
 16484                           ;flashy_task.c: 233: }
 16485                           ;flashy_task.c: 234: flashy_sparkle_rate += 5;
 16486  0B39  3005               	movlw	5
 16487  0B3A  07AC               	addwf	_flashy_sparkle_rate^(0+128),f
 16488  0B3B  3000               	movlw	0
 16489  0B3C  3DAD               	addwfc	(_flashy_sparkle_rate+1)^(0+128),f
 16490  0B3D                     l7139:	
 16491                           
 16492                           ;flashy_task.c: 235: }
 16493                           ;flashy_task.c: 237: data->holdCountA = 0;
 16494  0B3D  0020               	movlb	0	; select bank0
 16495  0B3E  085E               	movf	flashy_Main@data,w
 16496  0B3F  0086               	movwf	6
 16497  0B40  085F               	movf	flashy_Main@data+1,w
 16498  0B41  0087               	movwf	7
 16499  0B42  314A               	addfsr 1,10
 16500  0B43  3000               	movlw	0
 16501  0B44  3FC0               	movwi [0]fsr1
 16502  0B45  3FC1               	movwi [1]fsr1
 16503                           
 16504                           ;flashy_task.c: 238: data->holdCountB = 0;
 16505  0B46  085E               	movf	flashy_Main@data,w
 16506  0B47  0086               	movwf	6
 16507  0B48  085F               	movf	flashy_Main@data+1,w
 16508  0B49  0087               	movwf	7
 16509  0B4A  314C               	addfsr 1,12
 16510  0B4B  3000               	movlw	0
 16511  0B4C  3FC0               	movwi [0]fsr1
 16512  0B4D  3FC1               	movwi [1]fsr1
 16513                           
 16514                           ;flashy_task.c: 239: data->holdCountX = 0;
 16515  0B4E  085E               	movf	flashy_Main@data,w
 16516  0B4F  0086               	movwf	6
 16517  0B50  085F               	movf	flashy_Main@data+1,w
 16518  0B51  0087               	movwf	7
 16519  0B52  314E               	addfsr 1,14
 16520  0B53  3000               	movlw	0
 16521  0B54  3FC0               	movwi [0]fsr1
 16522  0B55  3FC1               	movwi [1]fsr1
 16523                           
 16524                           ;flashy_task.c: 240: data->holdCountY = 0;
 16525  0B56  085E               	movf	flashy_Main@data,w
 16526  0B57  0086               	movwf	6
 16527  0B58  085F               	movf	flashy_Main@data+1,w
 16528  0B59  0087               	movwf	7
 16529  0B5A  3150               	addfsr 1,16
 16530  0B5B  3000               	movlw	0
 16531  0B5C  3FC0               	movwi [0]fsr1
 16532  0B5D  3FC1               	movwi [1]fsr1
 16533                           
 16534                           ;flashy_task.c: 241: data->holdCountXY = 0;
 16535  0B5E  085E               	movf	flashy_Main@data,w
 16536  0B5F  0086               	movwf	6
 16537  0B60  085F               	movf	flashy_Main@data+1,w
 16538  0B61  0087               	movwf	7
 16539  0B62  3152               	addfsr 1,18
 16540  0B63  3000               	movlw	0
 16541  0B64  3FC0               	movwi [0]fsr1
 16542  0B65  3FC1               	movwi [1]fsr1
 16543                           
 16544                           ;flashy_task.c: 242: data->holdCountAY += 1;
 16545  0B66  085E               	movf	flashy_Main@data,w
 16546  0B67  0086               	movwf	6
 16547  0B68  085F               	movf	flashy_Main@data+1,w
 16548  0B69  0087               	movwf	7
 16549  0B6A  3154               	addfsr 1,20
 16550  0B6B  3001               	movlw	1
 16551  0B6C  0781               	addwf	1,f
 16552  0B6D  3141               	addfsr 1,1
 16553  0B6E  1803               	skipnc
 16554  0B6F  0A81               	incf	1,f
 16555                           
 16556                           ;flashy_task.c: 243: data->holdCountAX = 0;
 16557  0B70  085E               	movf	flashy_Main@data,w
 16558  0B71  0086               	movwf	6
 16559  0B72  085F               	movf	flashy_Main@data+1,w
 16560  0B73  0087               	movwf	7
 16561  0B74  3156               	addfsr 1,22
 16562  0B75  3000               	movlw	0
 16563  0B76  3FC0               	movwi [0]fsr1
 16564  0B77  3FC1               	movwi [1]fsr1
 16565                           
 16566                           ;flashy_task.c: 244: data->holdCountBX = 0;
 16567  0B78  085E               	movf	flashy_Main@data,w
 16568  0B79  0086               	movwf	6
 16569  0B7A  085F               	movf	flashy_Main@data+1,w
 16570  0B7B  0087               	movwf	7
 16571  0B7C  3158               	addfsr 1,24
 16572  0B7D  3000               	movlw	0
 16573  0B7E  3FC0               	movwi [0]fsr1
 16574  0B7F  3FC1               	movwi [1]fsr1
 16575                           
 16576                           ;flashy_task.c: 245: data->holdCountBY = 0;
 16577  0B80  085E               	movf	flashy_Main@data,w
 16578  0B81  0086               	movwf	6
 16579  0B82  085F               	movf	flashy_Main@data+1,w
 16580  0B83  0087               	movwf	7
 16581  0B84  315A               	addfsr 1,26
 16582  0B85  3000               	movlw	0
 16583  0B86  3FC0               	movwi [0]fsr1
 16584  0B87  3FC1               	movwi [1]fsr1
 16585                           
 16586                           ;flashy_task.c: 246: data->noholdCount = 0;
 16587  0B88  085E               	movf	flashy_Main@data,w
 16588  0B89  0086               	movwf	6
 16589  0B8A  085F               	movf	flashy_Main@data+1,w
 16590  0B8B  0087               	movwf	7
 16591  0B8C  315C               	addfsr 1,28
 16592  0B8D  3000               	movlw	0
 16593  0B8E  3FC0               	movwi [0]fsr1
 16594  0B8F  3FC1               	movwi [1]fsr1
 16595                           
 16596                           ;flashy_task.c: 247: break;
 16597  0B90  2FC9               	goto	l7375
 16598  0B91                     l7159:	
 16599                           ;flashy_task.c: 248: case 1 | 4:
 16600                           
 16601                           
 16602                           ;flashy_task.c: 249: if ( data->holdCountAX == 0 ){
 16603  0B91  085E               	movf	flashy_Main@data,w
 16604  0B92  0086               	movwf	6
 16605  0B93  085F               	movf	flashy_Main@data+1,w
 16606  0B94  0087               	movwf	7
 16607  0B95  3156               	addfsr 1,22
 16608  0B96  0016               	moviw fsr1++
 16609  0B97  0401               	iorwf	1,w
 16610  0B98  1D03               	btfss	3,2
 16611  0B99  2BAA               	goto	l7165
 16612                           
 16613                           ;flashy_task.c: 250: if (flashy_sparkle_rate < 5)
 16614  0B9A  3000               	movlw	0
 16615  0B9B  0021               	movlb	1	; select bank1
 16616  0B9C  022D               	subwf	(_flashy_sparkle_rate+1)^(0+128),w
 16617  0B9D  3005               	movlw	5
 16618  0B9E  1903               	skipnz
 16619  0B9F  022C               	subwf	_flashy_sparkle_rate^(0+128),w
 16620  0BA0  1803               	skipnc
 16621  0BA1  2BA6               	goto	l1099
 16622                           
 16623                           ;flashy_task.c: 251: flashy_sparkle_rate=5;
 16624  0BA2  3005               	movlw	5
 16625  0BA3  00AC               	movwf	_flashy_sparkle_rate^(0+128)
 16626  0BA4  3000               	movlw	0
 16627  0BA5  00AD               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 16628  0BA6                     l1099:	
 16629                           
 16630                           ;flashy_task.c: 252: flashy_sparkle_rate -= 5;
 16631  0BA6  3005               	movlw	5
 16632  0BA7  02AC               	subwf	_flashy_sparkle_rate^(0+128),f
 16633  0BA8  3000               	movlw	0
 16634  0BA9  3BAD               	subwfb	(_flashy_sparkle_rate+1)^(0+128),f
 16635  0BAA                     l7165:	
 16636                           
 16637                           ;flashy_task.c: 253: }
 16638                           ;flashy_task.c: 255: data->holdCountA = 0;
 16639  0BAA  0020               	movlb	0	; select bank0
 16640  0BAB  085E               	movf	flashy_Main@data,w
 16641  0BAC  0086               	movwf	6
 16642  0BAD  085F               	movf	flashy_Main@data+1,w
 16643  0BAE  0087               	movwf	7
 16644  0BAF  314A               	addfsr 1,10
 16645  0BB0  3000               	movlw	0
 16646  0BB1  3FC0               	movwi [0]fsr1
 16647  0BB2  3FC1               	movwi [1]fsr1
 16648                           
 16649                           ;flashy_task.c: 256: data->holdCountB = 0;
 16650  0BB3  085E               	movf	flashy_Main@data,w
 16651  0BB4  0086               	movwf	6
 16652  0BB5  085F               	movf	flashy_Main@data+1,w
 16653  0BB6  0087               	movwf	7
 16654  0BB7  314C               	addfsr 1,12
 16655  0BB8  3000               	movlw	0
 16656  0BB9  3FC0               	movwi [0]fsr1
 16657  0BBA  3FC1               	movwi [1]fsr1
 16658                           
 16659                           ;flashy_task.c: 257: data->holdCountX += 1;
 16660  0BBB  085E               	movf	flashy_Main@data,w
 16661  0BBC  0086               	movwf	6
 16662  0BBD  085F               	movf	flashy_Main@data+1,w
 16663  0BBE  0087               	movwf	7
 16664  0BBF  314E               	addfsr 1,14
 16665  0BC0  3001               	movlw	1
 16666  0BC1  0781               	addwf	1,f
 16667  0BC2  3141               	addfsr 1,1
 16668  0BC3  1803               	skipnc
 16669  0BC4  0A81               	incf	1,f
 16670                           
 16671                           ;flashy_task.c: 258: data->holdCountY = 0;
 16672  0BC5  085E               	movf	flashy_Main@data,w
 16673  0BC6  0086               	movwf	6
 16674  0BC7  085F               	movf	flashy_Main@data+1,w
 16675  0BC8  0087               	movwf	7
 16676  0BC9  3150               	addfsr 1,16
 16677  0BCA  3000               	movlw	0
 16678  0BCB  3FC0               	movwi [0]fsr1
 16679  0BCC  3FC1               	movwi [1]fsr1
 16680                           
 16681                           ;flashy_task.c: 259: data->holdCountXY = 0;
 16682  0BCD  085E               	movf	flashy_Main@data,w
 16683  0BCE  0086               	movwf	6
 16684  0BCF  085F               	movf	flashy_Main@data+1,w
 16685  0BD0  0087               	movwf	7
 16686  0BD1  3152               	addfsr 1,18
 16687  0BD2  3000               	movlw	0
 16688  0BD3  3FC0               	movwi [0]fsr1
 16689  0BD4  3FC1               	movwi [1]fsr1
 16690                           
 16691                           ;flashy_task.c: 260: data->holdCountAY = 0;
 16692  0BD5  085E               	movf	flashy_Main@data,w
 16693  0BD6  0086               	movwf	6
 16694  0BD7  085F               	movf	flashy_Main@data+1,w
 16695  0BD8  0087               	movwf	7
 16696  0BD9  3154               	addfsr 1,20
 16697  0BDA  3000               	movlw	0
 16698  0BDB  3FC0               	movwi [0]fsr1
 16699  0BDC  3FC1               	movwi [1]fsr1
 16700                           
 16701                           ;flashy_task.c: 261: data->holdCountAX += 1;
 16702  0BDD  085E               	movf	flashy_Main@data,w
 16703  0BDE  0086               	movwf	6
 16704  0BDF  085F               	movf	flashy_Main@data+1,w
 16705  0BE0  0087               	movwf	7
 16706  0BE1  3156               	addfsr 1,22
 16707  0BE2  3001               	movlw	1
 16708  0BE3  0781               	addwf	1,f
 16709  0BE4  3141               	addfsr 1,1
 16710  0BE5  1803               	skipnc
 16711  0BE6  0A81               	incf	1,f
 16712                           
 16713                           ;flashy_task.c: 262: data->holdCountBX = 0;
 16714  0BE7  085E               	movf	flashy_Main@data,w
 16715  0BE8  0086               	movwf	6
 16716  0BE9  085F               	movf	flashy_Main@data+1,w
 16717  0BEA  0087               	movwf	7
 16718  0BEB  3158               	addfsr 1,24
 16719  0BEC  3000               	movlw	0
 16720  0BED  3FC0               	movwi [0]fsr1
 16721  0BEE  3FC1               	movwi [1]fsr1
 16722                           
 16723                           ;flashy_task.c: 263: data->holdCountBY = 0;
 16724  0BEF  085E               	movf	flashy_Main@data,w
 16725  0BF0  0086               	movwf	6
 16726  0BF1  085F               	movf	flashy_Main@data+1,w
 16727  0BF2  0087               	movwf	7
 16728  0BF3  315A               	addfsr 1,26
 16729  0BF4  3000               	movlw	0
 16730  0BF5  3FC0               	movwi [0]fsr1
 16731  0BF6  3FC1               	movwi [1]fsr1
 16732                           
 16733                           ;flashy_task.c: 264: data->noholdCount = 0;
 16734  0BF7  085E               	movf	flashy_Main@data,w
 16735  0BF8  0086               	movwf	6
 16736  0BF9  085F               	movf	flashy_Main@data+1,w
 16737  0BFA  0087               	movwf	7
 16738  0BFB  315C               	addfsr 1,28
 16739  0BFC  3000               	movlw	0
 16740  0BFD  3FC0               	movwi [0]fsr1
 16741  0BFE  3FC1               	movwi [1]fsr1
 16742                           
 16743                           ;flashy_task.c: 265: break;
 16744  0BFF  2FC9               	goto	l7375
 16745  0C00                     l7185:	
 16746                           ;flashy_task.c: 266: case 2 | 8:
 16747                           
 16748                           
 16749                           ;flashy_task.c: 267: if (data->holdCountBY == 0){
 16750  0C00  085E               	movf	flashy_Main@data,w
 16751  0C01  0086               	movwf	6
 16752  0C02  085F               	movf	flashy_Main@data+1,w
 16753  0C03  0087               	movwf	7
 16754  0C04  315A               	addfsr 1,26
 16755  0C05  0016               	moviw fsr1++
 16756  0C06  0401               	iorwf	1,w
 16757  0C07  1D03               	btfss	3,2
 16758  0C08  2C1D               	goto	l7195
 16759                           
 16760                           ;flashy_task.c: 268: if (flashy_option_idx == 0){
 16761  0C09  0021               	movlb	1	; select bank1
 16762  0C0A  0826               	movf	_flashy_option_idx^(0+128),w
 16763  0C0B  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 16764  0C0C  1903               	btfsc	3,2
 16765  0C0D  2C1D               	goto	l7195
 16766                           
 16767                           ;flashy_task.c: 271: else {
 16768                           ;flashy_task.c: 272: if (flashy_scroll_rate > 150){
 16769                           
 16770                           ;flashy_task.c: 270: }
 16771  0C0E  3000               	movlw	0
 16772  0C0F  022B               	subwf	(_flashy_scroll_rate+1)^(0+128),w
 16773  0C10  3097               	movlw	151
 16774  0C11  1903               	skipnz
 16775  0C12  022A               	subwf	_flashy_scroll_rate^(0+128),w
 16776  0C13  1C03               	skipc
 16777  0C14  2C19               	goto	l1104
 16778                           
 16779                           ;flashy_task.c: 273: flashy_scroll_rate =150;
 16780  0C15  3096               	movlw	150
 16781  0C16  00AA               	movwf	_flashy_scroll_rate^(0+128)
 16782  0C17  3000               	movlw	0
 16783  0C18  00AB               	movwf	(_flashy_scroll_rate^(0+128)+1)
 16784  0C19                     l1104:	
 16785                           
 16786                           ;flashy_task.c: 274: }
 16787                           ;flashy_task.c: 275: flashy_scroll_rate +=2;
 16788  0C19  3002               	movlw	2
 16789  0C1A  07AA               	addwf	_flashy_scroll_rate^(0+128),f
 16790  0C1B  3000               	movlw	0
 16791  0C1C  3DAB               	addwfc	(_flashy_scroll_rate+1)^(0+128),f
 16792  0C1D                     l7195:	
 16793                           
 16794                           ;flashy_task.c: 276: }
 16795                           ;flashy_task.c: 278: }
 16796                           ;flashy_task.c: 279: data->holdCountA = 0;
 16797  0C1D  0020               	movlb	0	; select bank0
 16798  0C1E  085E               	movf	flashy_Main@data,w
 16799  0C1F  0086               	movwf	6
 16800  0C20  085F               	movf	flashy_Main@data+1,w
 16801  0C21  0087               	movwf	7
 16802  0C22  314A               	addfsr 1,10
 16803  0C23  3000               	movlw	0
 16804  0C24  3FC0               	movwi [0]fsr1
 16805  0C25  3FC1               	movwi [1]fsr1
 16806                           
 16807                           ;flashy_task.c: 280: data->holdCountB += 1;
 16808  0C26  085E               	movf	flashy_Main@data,w
 16809  0C27  0086               	movwf	6
 16810  0C28  085F               	movf	flashy_Main@data+1,w
 16811  0C29  0087               	movwf	7
 16812  0C2A  314C               	addfsr 1,12
 16813  0C2B  3001               	movlw	1
 16814  0C2C  0781               	addwf	1,f
 16815  0C2D  3141               	addfsr 1,1
 16816  0C2E  1803               	skipnc
 16817  0C2F  0A81               	incf	1,f
 16818                           
 16819                           ;flashy_task.c: 281: data->holdCountX = 0;
 16820  0C30  085E               	movf	flashy_Main@data,w
 16821  0C31  0086               	movwf	6
 16822  0C32  085F               	movf	flashy_Main@data+1,w
 16823  0C33  0087               	movwf	7
 16824  0C34  314E               	addfsr 1,14
 16825  0C35  3000               	movlw	0
 16826  0C36  3FC0               	movwi [0]fsr1
 16827  0C37  3FC1               	movwi [1]fsr1
 16828                           
 16829                           ;flashy_task.c: 282: data->holdCountY += 1;
 16830  0C38  085E               	movf	flashy_Main@data,w
 16831  0C39  0086               	movwf	6
 16832  0C3A  085F               	movf	flashy_Main@data+1,w
 16833  0C3B  0087               	movwf	7
 16834  0C3C  3150               	addfsr 1,16
 16835  0C3D  3001               	movlw	1
 16836  0C3E  0781               	addwf	1,f
 16837  0C3F  3141               	addfsr 1,1
 16838  0C40  1803               	skipnc
 16839  0C41  0A81               	incf	1,f
 16840                           
 16841                           ;flashy_task.c: 283: data->holdCountXY = 0;
 16842  0C42  085E               	movf	flashy_Main@data,w
 16843  0C43  0086               	movwf	6
 16844  0C44  085F               	movf	flashy_Main@data+1,w
 16845  0C45  0087               	movwf	7
 16846  0C46  3152               	addfsr 1,18
 16847  0C47  3000               	movlw	0
 16848  0C48  3FC0               	movwi [0]fsr1
 16849  0C49  3FC1               	movwi [1]fsr1
 16850                           
 16851                           ;flashy_task.c: 284: data->holdCountAY = 0;
 16852  0C4A  085E               	movf	flashy_Main@data,w
 16853  0C4B  0086               	movwf	6
 16854  0C4C  085F               	movf	flashy_Main@data+1,w
 16855  0C4D  0087               	movwf	7
 16856  0C4E  3154               	addfsr 1,20
 16857  0C4F  3000               	movlw	0
 16858  0C50  3FC0               	movwi [0]fsr1
 16859  0C51  3FC1               	movwi [1]fsr1
 16860                           
 16861                           ;flashy_task.c: 285: data->holdCountAX = 0;
 16862  0C52  085E               	movf	flashy_Main@data,w
 16863  0C53  0086               	movwf	6
 16864  0C54  085F               	movf	flashy_Main@data+1,w
 16865  0C55  0087               	movwf	7
 16866  0C56  3156               	addfsr 1,22
 16867  0C57  3000               	movlw	0
 16868  0C58  3FC0               	movwi [0]fsr1
 16869  0C59  3FC1               	movwi [1]fsr1
 16870                           
 16871                           ;flashy_task.c: 286: data->holdCountBX = 0;
 16872  0C5A  085E               	movf	flashy_Main@data,w
 16873  0C5B  0086               	movwf	6
 16874  0C5C  085F               	movf	flashy_Main@data+1,w
 16875  0C5D  0087               	movwf	7
 16876  0C5E  3158               	addfsr 1,24
 16877  0C5F  3000               	movlw	0
 16878  0C60  3FC0               	movwi [0]fsr1
 16879  0C61  3FC1               	movwi [1]fsr1
 16880                           
 16881                           ;flashy_task.c: 287: data->holdCountBY += 1;
 16882  0C62  085E               	movf	flashy_Main@data,w
 16883  0C63  0086               	movwf	6
 16884  0C64  085F               	movf	flashy_Main@data+1,w
 16885  0C65  0087               	movwf	7
 16886  0C66  315A               	addfsr 1,26
 16887  0C67  3001               	movlw	1
 16888  0C68  0781               	addwf	1,f
 16889  0C69  3141               	addfsr 1,1
 16890  0C6A  1803               	skipnc
 16891  0C6B  0A81               	incf	1,f
 16892                           
 16893                           ;flashy_task.c: 288: data->noholdCount = 0;
 16894  0C6C  085E               	movf	flashy_Main@data,w
 16895  0C6D  0086               	movwf	6
 16896  0C6E  085F               	movf	flashy_Main@data+1,w
 16897  0C6F  0087               	movwf	7
 16898  0C70  315C               	addfsr 1,28
 16899  0C71  3000               	movlw	0
 16900  0C72  3FC0               	movwi [0]fsr1
 16901  0C73  3FC1               	movwi [1]fsr1
 16902                           
 16903                           ;flashy_task.c: 289: break;
 16904  0C74  2FC9               	goto	l7375
 16905  0C75                     l7215:	
 16906                           ;flashy_task.c: 290: case 2 | 4:
 16907                           
 16908                           
 16909                           ;flashy_task.c: 291: if (data-> holdCountBX == 0){
 16910  0C75  085E               	movf	flashy_Main@data,w
 16911  0C76  0086               	movwf	6
 16912  0C77  085F               	movf	flashy_Main@data+1,w
 16913  0C78  0087               	movwf	7
 16914  0C79  3158               	addfsr 1,24
 16915  0C7A  0016               	moviw fsr1++
 16916  0C7B  0401               	iorwf	1,w
 16917  0C7C  1D03               	btfss	3,2
 16918  0C7D  2C92               	goto	l7225
 16919                           
 16920                           ;flashy_task.c: 292: if (flashy_option_idx == 0){
 16921  0C7E  0021               	movlb	1	; select bank1
 16922  0C7F  0826               	movf	_flashy_option_idx^(0+128),w
 16923  0C80  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 16924  0C81  1903               	btfsc	3,2
 16925  0C82  2C92               	goto	l7225
 16926                           
 16927                           ;flashy_task.c: 295: else {
 16928                           ;flashy_task.c: 296: if (flashy_scroll_rate < 5){
 16929                           
 16930                           ;flashy_task.c: 294: }
 16931  0C83  3000               	movlw	0
 16932  0C84  022B               	subwf	(_flashy_scroll_rate+1)^(0+128),w
 16933  0C85  3005               	movlw	5
 16934  0C86  1903               	skipnz
 16935  0C87  022A               	subwf	_flashy_scroll_rate^(0+128),w
 16936  0C88  1803               	skipnc
 16937  0C89  2C8E               	goto	l1109
 16938                           
 16939                           ;flashy_task.c: 297: flashy_scroll_rate =5;
 16940  0C8A  3005               	movlw	5
 16941  0C8B  00AA               	movwf	_flashy_scroll_rate^(0+128)
 16942  0C8C  3000               	movlw	0
 16943  0C8D  00AB               	movwf	(_flashy_scroll_rate^(0+128)+1)
 16944  0C8E                     l1109:	
 16945                           
 16946                           ;flashy_task.c: 298: }
 16947                           ;flashy_task.c: 299: flashy_scroll_rate -=3;
 16948  0C8E  3003               	movlw	3
 16949  0C8F  02AA               	subwf	_flashy_scroll_rate^(0+128),f
 16950  0C90  3000               	movlw	0
 16951  0C91  3BAB               	subwfb	(_flashy_scroll_rate+1)^(0+128),f
 16952  0C92                     l7225:	
 16953                           
 16954                           ;flashy_task.c: 300: }
 16955                           ;flashy_task.c: 302: }
 16956                           ;flashy_task.c: 303: data->holdCountA = 0;
 16957  0C92  0020               	movlb	0	; select bank0
 16958  0C93  085E               	movf	flashy_Main@data,w
 16959  0C94  0086               	movwf	6
 16960  0C95  085F               	movf	flashy_Main@data+1,w
 16961  0C96  0087               	movwf	7
 16962  0C97  314A               	addfsr 1,10
 16963  0C98  3000               	movlw	0
 16964  0C99  3FC0               	movwi [0]fsr1
 16965  0C9A  3FC1               	movwi [1]fsr1
 16966                           
 16967                           ;flashy_task.c: 304: data->holdCountB += 1;
 16968  0C9B  085E               	movf	flashy_Main@data,w
 16969  0C9C  0086               	movwf	6
 16970  0C9D  085F               	movf	flashy_Main@data+1,w
 16971  0C9E  0087               	movwf	7
 16972  0C9F  314C               	addfsr 1,12
 16973  0CA0  3001               	movlw	1
 16974  0CA1  0781               	addwf	1,f
 16975  0CA2  3141               	addfsr 1,1
 16976  0CA3  1803               	skipnc
 16977  0CA4  0A81               	incf	1,f
 16978                           
 16979                           ;flashy_task.c: 305: data->holdCountX += 1;
 16980  0CA5  085E               	movf	flashy_Main@data,w
 16981  0CA6  0086               	movwf	6
 16982  0CA7  085F               	movf	flashy_Main@data+1,w
 16983  0CA8  0087               	movwf	7
 16984  0CA9  314E               	addfsr 1,14
 16985  0CAA  3001               	movlw	1
 16986  0CAB  0781               	addwf	1,f
 16987  0CAC  3141               	addfsr 1,1
 16988  0CAD  1803               	skipnc
 16989  0CAE  0A81               	incf	1,f
 16990                           
 16991                           ;flashy_task.c: 306: data->holdCountY = 0;
 16992  0CAF  085E               	movf	flashy_Main@data,w
 16993  0CB0  0086               	movwf	6
 16994  0CB1  085F               	movf	flashy_Main@data+1,w
 16995  0CB2  0087               	movwf	7
 16996  0CB3  3150               	addfsr 1,16
 16997  0CB4  3000               	movlw	0
 16998  0CB5  3FC0               	movwi [0]fsr1
 16999  0CB6  3FC1               	movwi [1]fsr1
 17000                           
 17001                           ;flashy_task.c: 307: data->holdCountXY = 0;
 17002  0CB7  085E               	movf	flashy_Main@data,w
 17003  0CB8  0086               	movwf	6
 17004  0CB9  085F               	movf	flashy_Main@data+1,w
 17005  0CBA  0087               	movwf	7
 17006  0CBB  3152               	addfsr 1,18
 17007  0CBC  3000               	movlw	0
 17008  0CBD  3FC0               	movwi [0]fsr1
 17009  0CBE  3FC1               	movwi [1]fsr1
 17010                           
 17011                           ;flashy_task.c: 308: data->holdCountAY = 0;
 17012  0CBF  085E               	movf	flashy_Main@data,w
 17013  0CC0  0086               	movwf	6
 17014  0CC1  085F               	movf	flashy_Main@data+1,w
 17015  0CC2  0087               	movwf	7
 17016  0CC3  3154               	addfsr 1,20
 17017  0CC4  3000               	movlw	0
 17018  0CC5  3FC0               	movwi [0]fsr1
 17019  0CC6  3FC1               	movwi [1]fsr1
 17020                           
 17021                           ;flashy_task.c: 309: data->holdCountAX = 0;
 17022  0CC7  085E               	movf	flashy_Main@data,w
 17023  0CC8  0086               	movwf	6
 17024  0CC9  085F               	movf	flashy_Main@data+1,w
 17025  0CCA  0087               	movwf	7
 17026  0CCB  3156               	addfsr 1,22
 17027  0CCC  3000               	movlw	0
 17028  0CCD  3FC0               	movwi [0]fsr1
 17029  0CCE  3FC1               	movwi [1]fsr1
 17030                           
 17031                           ;flashy_task.c: 310: data->holdCountBX += 1;
 17032  0CCF  085E               	movf	flashy_Main@data,w
 17033  0CD0  0086               	movwf	6
 17034  0CD1  085F               	movf	flashy_Main@data+1,w
 17035  0CD2  0087               	movwf	7
 17036  0CD3  3158               	addfsr 1,24
 17037  0CD4  3001               	movlw	1
 17038  0CD5  0781               	addwf	1,f
 17039  0CD6  3141               	addfsr 1,1
 17040  0CD7  1803               	skipnc
 17041  0CD8  0A81               	incf	1,f
 17042                           
 17043                           ;flashy_task.c: 311: data->holdCountBY = 0;
 17044  0CD9  085E               	movf	flashy_Main@data,w
 17045  0CDA  0086               	movwf	6
 17046  0CDB  085F               	movf	flashy_Main@data+1,w
 17047  0CDC  0087               	movwf	7
 17048  0CDD  315A               	addfsr 1,26
 17049  0CDE  3000               	movlw	0
 17050  0CDF  3FC0               	movwi [0]fsr1
 17051  0CE0  3FC1               	movwi [1]fsr1
 17052                           
 17053                           ;flashy_task.c: 312: data->noholdCount = 0;
 17054  0CE1  085E               	movf	flashy_Main@data,w
 17055  0CE2  0086               	movwf	6
 17056  0CE3  085F               	movf	flashy_Main@data+1,w
 17057  0CE4  0087               	movwf	7
 17058  0CE5  315C               	addfsr 1,28
 17059  0CE6  3000               	movlw	0
 17060  0CE7  3FC0               	movwi [0]fsr1
 17061  0CE8  3FC1               	movwi [1]fsr1
 17062                           
 17063                           ;flashy_task.c: 313: break;
 17064  0CE9  2FC9               	goto	l7375
 17065  0CEA                     l7245:	
 17066                           ;flashy_task.c: 314: case 8:
 17067                           
 17068                           
 17069                           ;flashy_task.c: 316: if (data->holdCountY == 0 && data->blasterTickCount == 0){
 17070  0CEA  085E               	movf	flashy_Main@data,w
 17071  0CEB  0086               	movwf	6
 17072  0CEC  085F               	movf	flashy_Main@data+1,w
 17073  0CED  0087               	movwf	7
 17074  0CEE  3150               	addfsr 1,16
 17075  0CEF  0016               	moviw fsr1++
 17076  0CF0  0401               	iorwf	1,w
 17077  0CF1  1D03               	btfss	3,2
 17078  0CF2  2D40               	goto	l7263
 17079  0CF3  085E               	movf	flashy_Main@data,w
 17080  0CF4  0086               	movwf	6
 17081  0CF5  085F               	movf	flashy_Main@data+1,w
 17082  0CF6  0087               	movwf	7
 17083  0CF7  3147               	addfsr 1,7
 17084  0CF8  0016               	moviw fsr1++
 17085  0CF9  0401               	iorwf	1,w
 17086  0CFA  1D03               	btfss	3,2
 17087  0CFB  2D40               	goto	l7263
 17088                           
 17089                           ;flashy_task.c: 318: nullifyBadge_userLedsSet(data->badge, 0x0);
 17090  0CFC  3000               	movlw	0
 17091  0CFD  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 17092  0CFE  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 17093  0CFF  085E               	movf	flashy_Main@data,w
 17094  0D00  0086               	movwf	6
 17095  0D01  085F               	movf	flashy_Main@data+1,w
 17096  0D02  0087               	movwf	7
 17097  0D03  0801               	movf	1,w
 17098  0D04  31A7  2754  3188   	fcall	_nullifyBadge_userLedsSet
 17099                           
 17100                           ;flashy_task.c: 320: data->displayTickCount = 0;
 17101  0D07  0020               	movlb	0	; select bank0
 17102  0D08  085E               	movf	flashy_Main@data,w
 17103  0D09  0086               	movwf	6
 17104  0D0A  085F               	movf	flashy_Main@data+1,w
 17105  0D0B  0087               	movwf	7
 17106  0D0C  3144               	addfsr 1,4
 17107  0D0D  3000               	movlw	0
 17108  0D0E  3FC0               	movwi [0]fsr1
 17109  0D0F  3FC1               	movwi [1]fsr1
 17110                           
 17111                           ;flashy_task.c: 321: data->blasterTickCount = 100;
 17112  0D10  085E               	movf	flashy_Main@data,w
 17113  0D11  0086               	movwf	6
 17114  0D12  085F               	movf	flashy_Main@data+1,w
 17115  0D13  0087               	movwf	7
 17116  0D14  3147               	addfsr 1,7
 17117  0D15  3064               	movlw	100
 17118  0D16  3FC0               	movwi [0]fsr1
 17119  0D17  3000               	movlw	0
 17120  0D18  3FC1               	movwi [1]fsr1
 17121                           
 17122                           ;flashy_task.c: 322: data->delayTickCount = 5;
 17123  0D19  085E               	movf	flashy_Main@data,w
 17124  0D1A  0086               	movwf	6
 17125  0D1B  085F               	movf	flashy_Main@data+1,w
 17126  0D1C  0087               	movwf	7
 17127  0D1D  3141               	addfsr 1,1
 17128  0D1E  3005               	movlw	5
 17129  0D1F  3FC0               	movwi [0]fsr1
 17130  0D20  3000               	movlw	0
 17131  0D21  3FC1               	movwi [1]fsr1
 17132                           
 17133                           ;flashy_task.c: 324: data->led_state = FLASHY_STATE_LED_SHOT;
 17134  0D22  085E               	movf	flashy_Main@data,w
 17135  0D23  3E03               	addlw	3
 17136  0D24  00D4               	movwf	??_flashy_Main
 17137  0D25  3000               	movlw	0
 17138  0D26  3D5F               	addwfc	flashy_Main@data+1,w
 17139  0D27  00D5               	movwf	??_flashy_Main+1
 17140  0D28  0854               	movf	??_flashy_Main,w
 17141  0D29  0086               	movwf	6
 17142  0D2A  0855               	movf	??_flashy_Main+1,w
 17143  0D2B  0087               	movwf	7
 17144  0D2C  3001               	movlw	1
 17145  0D2D  0081               	movwf	1
 17146                           
 17147                           ;flashy_task.c: 325: data->display_state = FLASHY_STATE_DISPLAY_BLASTER;
 17148  0D2E  085E               	movf	flashy_Main@data,w
 17149  0D2F  3E06               	addlw	6
 17150  0D30  00D4               	movwf	??_flashy_Main
 17151  0D31  3000               	movlw	0
 17152  0D32  3D5F               	addwfc	flashy_Main@data+1,w
 17153  0D33  00D5               	movwf	??_flashy_Main+1
 17154  0D34  0854               	movf	??_flashy_Main,w
 17155  0D35  0086               	movwf	6
 17156  0D36  0855               	movf	??_flashy_Main+1,w
 17157  0D37  0087               	movwf	7
 17158  0D38  3002               	movlw	2
 17159  0D39  0081               	movwf	1
 17160                           
 17161                           ;flashy_task.c: 326: data->blaster_state = FLASHY_BLASTER_SHOOTING_STATE;
 17162  0D3A  085E               	movf	flashy_Main@data,w
 17163  0D3B  0086               	movwf	6
 17164  0D3C  085F               	movf	flashy_Main@data+1,w
 17165  0D3D  0087               	movwf	7
 17166  0D3E  3149               	addfsr 1,9
 17167  0D3F  0181               	clrf	1
 17168  0D40                     l7263:	
 17169                           
 17170                           ;flashy_task.c: 327: }
 17171                           ;flashy_task.c: 329: data->holdCountA = 0;
 17172  0D40  085E               	movf	flashy_Main@data,w
 17173  0D41  0086               	movwf	6
 17174  0D42  085F               	movf	flashy_Main@data+1,w
 17175  0D43  0087               	movwf	7
 17176  0D44  314A               	addfsr 1,10
 17177  0D45  3000               	movlw	0
 17178  0D46  3FC0               	movwi [0]fsr1
 17179  0D47  3FC1               	movwi [1]fsr1
 17180                           
 17181                           ;flashy_task.c: 330: data->holdCountB = 0;
 17182  0D48  085E               	movf	flashy_Main@data,w
 17183  0D49  0086               	movwf	6
 17184  0D4A  085F               	movf	flashy_Main@data+1,w
 17185  0D4B  0087               	movwf	7
 17186  0D4C  314C               	addfsr 1,12
 17187  0D4D  3000               	movlw	0
 17188  0D4E  3FC0               	movwi [0]fsr1
 17189  0D4F  3FC1               	movwi [1]fsr1
 17190                           
 17191                           ;flashy_task.c: 331: data->holdCountX = 0;
 17192  0D50  085E               	movf	flashy_Main@data,w
 17193  0D51  0086               	movwf	6
 17194  0D52  085F               	movf	flashy_Main@data+1,w
 17195  0D53  0087               	movwf	7
 17196  0D54  314E               	addfsr 1,14
 17197  0D55  3000               	movlw	0
 17198  0D56  3FC0               	movwi [0]fsr1
 17199  0D57  3FC1               	movwi [1]fsr1
 17200                           
 17201                           ;flashy_task.c: 332: data->holdCountY += 1;
 17202  0D58  085E               	movf	flashy_Main@data,w
 17203  0D59  0086               	movwf	6
 17204  0D5A  085F               	movf	flashy_Main@data+1,w
 17205  0D5B  0087               	movwf	7
 17206  0D5C  3150               	addfsr 1,16
 17207  0D5D  3001               	movlw	1
 17208  0D5E  0781               	addwf	1,f
 17209  0D5F  3141               	addfsr 1,1
 17210  0D60  1803               	skipnc
 17211  0D61  0A81               	incf	1,f
 17212                           
 17213                           ;flashy_task.c: 333: data->holdCountXY = 0;
 17214  0D62  085E               	movf	flashy_Main@data,w
 17215  0D63  0086               	movwf	6
 17216  0D64  085F               	movf	flashy_Main@data+1,w
 17217  0D65  0087               	movwf	7
 17218  0D66  3152               	addfsr 1,18
 17219  0D67  3000               	movlw	0
 17220  0D68  3FC0               	movwi [0]fsr1
 17221  0D69  3FC1               	movwi [1]fsr1
 17222                           
 17223                           ;flashy_task.c: 334: data->holdCountAY = 0;
 17224  0D6A  085E               	movf	flashy_Main@data,w
 17225  0D6B  0086               	movwf	6
 17226  0D6C  085F               	movf	flashy_Main@data+1,w
 17227  0D6D  0087               	movwf	7
 17228  0D6E  3154               	addfsr 1,20
 17229  0D6F  3000               	movlw	0
 17230  0D70  3FC0               	movwi [0]fsr1
 17231  0D71  3FC1               	movwi [1]fsr1
 17232                           
 17233                           ;flashy_task.c: 335: data->holdCountAX = 0;
 17234  0D72  085E               	movf	flashy_Main@data,w
 17235  0D73  0086               	movwf	6
 17236  0D74  085F               	movf	flashy_Main@data+1,w
 17237  0D75  0087               	movwf	7
 17238  0D76  3156               	addfsr 1,22
 17239  0D77  3000               	movlw	0
 17240  0D78  3FC0               	movwi [0]fsr1
 17241  0D79  3FC1               	movwi [1]fsr1
 17242                           
 17243                           ;flashy_task.c: 336: data->holdCountBX = 0;
 17244  0D7A  085E               	movf	flashy_Main@data,w
 17245  0D7B  0086               	movwf	6
 17246  0D7C  085F               	movf	flashy_Main@data+1,w
 17247  0D7D  0087               	movwf	7
 17248  0D7E  3158               	addfsr 1,24
 17249  0D7F  3000               	movlw	0
 17250  0D80  3FC0               	movwi [0]fsr1
 17251  0D81  3FC1               	movwi [1]fsr1
 17252                           
 17253                           ;flashy_task.c: 337: data->holdCountBY = 0;
 17254  0D82  085E               	movf	flashy_Main@data,w
 17255  0D83  0086               	movwf	6
 17256  0D84  085F               	movf	flashy_Main@data+1,w
 17257  0D85  0087               	movwf	7
 17258  0D86  315A               	addfsr 1,26
 17259  0D87  3000               	movlw	0
 17260  0D88  3FC0               	movwi [0]fsr1
 17261  0D89  3FC1               	movwi [1]fsr1
 17262                           
 17263                           ;flashy_task.c: 338: data->noholdCount = 0;
 17264  0D8A  085E               	movf	flashy_Main@data,w
 17265  0D8B  0086               	movwf	6
 17266  0D8C  085F               	movf	flashy_Main@data+1,w
 17267  0D8D  0087               	movwf	7
 17268  0D8E  315C               	addfsr 1,28
 17269  0D8F  3000               	movlw	0
 17270  0D90  3FC0               	movwi [0]fsr1
 17271  0D91  3FC1               	movwi [1]fsr1
 17272                           
 17273                           ;flashy_task.c: 339: break;
 17274  0D92  2FC9               	goto	l7375
 17275  0D93                     l7283:	
 17276                           ;flashy_task.c: 340: case 2:
 17277                           
 17278                           
 17279                           ;flashy_task.c: 342: if (data->holdCountB == 0){
 17280  0D93  085E               	movf	flashy_Main@data,w
 17281  0D94  0086               	movwf	6
 17282  0D95  085F               	movf	flashy_Main@data+1,w
 17283  0D96  0087               	movwf	7
 17284  0D97  314C               	addfsr 1,12
 17285  0D98  0016               	moviw fsr1++
 17286  0D99  0401               	iorwf	1,w
 17287  0D9A  1D03               	btfss	3,2
 17288  0D9B  2DC1               	goto	l7293
 17289                           
 17290                           ;flashy_task.c: 343: data->display_state = FLASHY_STATE_DISPLAY;
 17291  0D9C  085E               	movf	flashy_Main@data,w
 17292  0D9D  0086               	movwf	6
 17293  0D9E  085F               	movf	flashy_Main@data+1,w
 17294  0D9F  0087               	movwf	7
 17295  0DA0  3146               	addfsr 1,6
 17296  0DA1  0181               	clrf	1
 17297                           
 17298                           ;flashy_task.c: 344: if (flashy_option_idx == flashy_option_size - 1){
 17299  0DA2  0021               	movlb	1	; select bank1
 17300  0DA3  0824               	movf	_flashy_option_size^(0+128),w
 17301  0DA4  3EFF               	addlw	255
 17302  0DA5  0020               	movlb	0	; select bank0
 17303  0DA6  00D4               	movwf	??_flashy_Main
 17304  0DA7  30FF               	movlw	255
 17305  0DA8  0021               	movlb	1	; select bank1
 17306  0DA9  3D25               	addwfc	(_flashy_option_size+1)^(0+128),w
 17307  0DAA  0020               	movlb	0	; select bank0
 17308  0DAB  00D5               	movwf	??_flashy_Main+1
 17309  0DAC  0021               	movlb	1	; select bank1
 17310  0DAD  0827               	movf	(_flashy_option_idx+1)^(0+128),w
 17311  0DAE  0020               	movlb	0	; select bank0
 17312  0DAF  0655               	xorwf	??_flashy_Main+1,w
 17313  0DB0  1D03               	skipz
 17314  0DB1  2DB6               	goto	u4225
 17315  0DB2  0021               	movlb	1	; select bank1
 17316  0DB3  0826               	movf	_flashy_option_idx^(0+128),w
 17317  0DB4  0020               	movlb	0	; select bank0
 17318  0DB5  0654               	xorwf	??_flashy_Main,w
 17319  0DB6                     u4225:	
 17320  0DB6  1D03               	skipz
 17321  0DB7  2DBC               	goto	l7291
 17322                           
 17323                           ;flashy_task.c: 345: flashy_option_idx = 0;
 17324  0DB8  0021               	movlb	1	; select bank1
 17325  0DB9  01A6               	clrf	_flashy_option_idx^(0+128)
 17326  0DBA  01A7               	clrf	(_flashy_option_idx+1)^(0+128)
 17327                           
 17328                           ;flashy_task.c: 346: }
 17329  0DBB  2DC1               	goto	l7293
 17330  0DBC                     l7291:	
 17331                           
 17332                           ;flashy_task.c: 347: else {
 17333                           ;flashy_task.c: 348: flashy_option_idx += 1;
 17334  0DBC  3001               	movlw	1
 17335  0DBD  0021               	movlb	1	; select bank1
 17336  0DBE  07A6               	addwf	_flashy_option_idx^(0+128),f
 17337  0DBF  3000               	movlw	0
 17338  0DC0  3DA7               	addwfc	(_flashy_option_idx+1)^(0+128),f
 17339  0DC1                     l7293:	
 17340                           
 17341                           ;flashy_task.c: 349: }
 17342                           ;flashy_task.c: 350: }
 17343                           ;flashy_task.c: 351: data->holdCountA = 0;
 17344  0DC1  0020               	movlb	0	; select bank0
 17345  0DC2  085E               	movf	flashy_Main@data,w
 17346  0DC3  0086               	movwf	6
 17347  0DC4  085F               	movf	flashy_Main@data+1,w
 17348  0DC5  0087               	movwf	7
 17349  0DC6  314A               	addfsr 1,10
 17350  0DC7  3000               	movlw	0
 17351  0DC8  3FC0               	movwi [0]fsr1
 17352  0DC9  3FC1               	movwi [1]fsr1
 17353                           
 17354                           ;flashy_task.c: 352: data->holdCountB += 1;
 17355  0DCA  085E               	movf	flashy_Main@data,w
 17356  0DCB  0086               	movwf	6
 17357  0DCC  085F               	movf	flashy_Main@data+1,w
 17358  0DCD  0087               	movwf	7
 17359  0DCE  314C               	addfsr 1,12
 17360  0DCF  3001               	movlw	1
 17361  0DD0  0781               	addwf	1,f
 17362  0DD1  3141               	addfsr 1,1
 17363  0DD2  1803               	skipnc
 17364  0DD3  0A81               	incf	1,f
 17365                           
 17366                           ;flashy_task.c: 353: data->holdCountX = 0;
 17367  0DD4  085E               	movf	flashy_Main@data,w
 17368  0DD5  0086               	movwf	6
 17369  0DD6  085F               	movf	flashy_Main@data+1,w
 17370  0DD7  0087               	movwf	7
 17371  0DD8  314E               	addfsr 1,14
 17372  0DD9  3000               	movlw	0
 17373  0DDA  3FC0               	movwi [0]fsr1
 17374  0DDB  3FC1               	movwi [1]fsr1
 17375                           
 17376                           ;flashy_task.c: 354: data->holdCountY = 0;
 17377  0DDC  085E               	movf	flashy_Main@data,w
 17378  0DDD  0086               	movwf	6
 17379  0DDE  085F               	movf	flashy_Main@data+1,w
 17380  0DDF  0087               	movwf	7
 17381  0DE0  3150               	addfsr 1,16
 17382  0DE1  3000               	movlw	0
 17383  0DE2  3FC0               	movwi [0]fsr1
 17384  0DE3  3FC1               	movwi [1]fsr1
 17385                           
 17386                           ;flashy_task.c: 355: data->holdCountXY = 0;
 17387  0DE4  085E               	movf	flashy_Main@data,w
 17388  0DE5  0086               	movwf	6
 17389  0DE6  085F               	movf	flashy_Main@data+1,w
 17390  0DE7  0087               	movwf	7
 17391  0DE8  3152               	addfsr 1,18
 17392  0DE9  3000               	movlw	0
 17393  0DEA  3FC0               	movwi [0]fsr1
 17394  0DEB  3FC1               	movwi [1]fsr1
 17395                           
 17396                           ;flashy_task.c: 356: data->holdCountAY = 0;
 17397  0DEC  085E               	movf	flashy_Main@data,w
 17398  0DED  0086               	movwf	6
 17399  0DEE  085F               	movf	flashy_Main@data+1,w
 17400  0DEF  0087               	movwf	7
 17401  0DF0  3154               	addfsr 1,20
 17402  0DF1  3000               	movlw	0
 17403  0DF2  3FC0               	movwi [0]fsr1
 17404  0DF3  3FC1               	movwi [1]fsr1
 17405                           
 17406                           ;flashy_task.c: 357: data->holdCountAX = 0;
 17407  0DF4  085E               	movf	flashy_Main@data,w
 17408  0DF5  0086               	movwf	6
 17409  0DF6  085F               	movf	flashy_Main@data+1,w
 17410  0DF7  0087               	movwf	7
 17411  0DF8  3156               	addfsr 1,22
 17412  0DF9  3000               	movlw	0
 17413  0DFA  3FC0               	movwi [0]fsr1
 17414  0DFB  3FC1               	movwi [1]fsr1
 17415                           
 17416                           ;flashy_task.c: 358: data->holdCountBX = 0;
 17417  0DFC  085E               	movf	flashy_Main@data,w
 17418  0DFD  0086               	movwf	6
 17419  0DFE  085F               	movf	flashy_Main@data+1,w
 17420  0DFF  0087               	movwf	7
 17421  0E00  3158               	addfsr 1,24
 17422  0E01  3000               	movlw	0
 17423  0E02  3FC0               	movwi [0]fsr1
 17424  0E03  3FC1               	movwi [1]fsr1
 17425                           
 17426                           ;flashy_task.c: 359: data->holdCountBY = 0;
 17427  0E04  085E               	movf	flashy_Main@data,w
 17428  0E05  0086               	movwf	6
 17429  0E06  085F               	movf	flashy_Main@data+1,w
 17430  0E07  0087               	movwf	7
 17431  0E08  315A               	addfsr 1,26
 17432  0E09  3000               	movlw	0
 17433  0E0A  3FC0               	movwi [0]fsr1
 17434  0E0B  3FC1               	movwi [1]fsr1
 17435                           
 17436                           ;flashy_task.c: 360: data->noholdCount = 0;
 17437  0E0C  085E               	movf	flashy_Main@data,w
 17438  0E0D  0086               	movwf	6
 17439  0E0E  085F               	movf	flashy_Main@data+1,w
 17440  0E0F  0087               	movwf	7
 17441  0E10  315C               	addfsr 1,28
 17442  0E11  3000               	movlw	0
 17443  0E12  3FC0               	movwi [0]fsr1
 17444  0E13  3FC1               	movwi [1]fsr1
 17445                           
 17446                           ;flashy_task.c: 361: break;
 17447  0E14  2FC9               	goto	l7375
 17448  0E15                     l7313:	
 17449                           ;flashy_task.c: 362: case 1:
 17450                           
 17451                           
 17452                           ;flashy_task.c: 363: if ( data->holdCountA == 0){
 17453  0E15  085E               	movf	flashy_Main@data,w
 17454  0E16  0086               	movwf	6
 17455  0E17  085F               	movf	flashy_Main@data+1,w
 17456  0E18  0087               	movwf	7
 17457  0E19  314A               	addfsr 1,10
 17458  0E1A  0016               	moviw fsr1++
 17459  0E1B  0401               	iorwf	1,w
 17460  0E1C  1D03               	btfss	3,2
 17461  0E1D  2E3F               	goto	l1117
 17462                           
 17463                           ;flashy_task.c: 364: if (data->led_state != FLASHY_STATE_SPARKLE){
 17464  0E1E  085E               	movf	flashy_Main@data,w
 17465  0E1F  0086               	movwf	6
 17466  0E20  085F               	movf	flashy_Main@data+1,w
 17467  0E21  0087               	movwf	7
 17468  0E22  3143               	addfsr 1,3
 17469  0E23  3002               	movlw	2
 17470  0E24  0601               	xorwf	1,w
 17471  0E25  1903               	btfsc	3,2
 17472  0E26  2E33               	goto	l7319
 17473                           
 17474                           ;flashy_task.c: 365: data->led_state = FLASHY_STATE_SPARKLE;
 17475  0E27  085E               	movf	flashy_Main@data,w
 17476  0E28  3E03               	addlw	3
 17477  0E29  00D4               	movwf	??_flashy_Main
 17478  0E2A  3000               	movlw	0
 17479  0E2B  3D5F               	addwfc	flashy_Main@data+1,w
 17480  0E2C  00D5               	movwf	??_flashy_Main+1
 17481  0E2D  0854               	movf	??_flashy_Main,w
 17482  0E2E  0086               	movwf	6
 17483  0E2F  0855               	movf	??_flashy_Main+1,w
 17484  0E30  0087               	movwf	7
 17485  0E31  3002               	movlw	2
 17486  0E32  2E3E               	goto	L8
 17487  0E33                     l7319:	
 17488                           ;flashy_task.c: 366: }
 17489                           
 17490                           
 17491                           ;flashy_task.c: 367: else {
 17492                           ;flashy_task.c: 368: data->led_state = FLASHY_STATE_CIRCLE;
 17493  0E33  085E               	movf	flashy_Main@data,w
 17494  0E34  3E03               	addlw	3
 17495  0E35  00D4               	movwf	??_flashy_Main
 17496  0E36  3000               	movlw	0
 17497  0E37  3D5F               	addwfc	flashy_Main@data+1,w
 17498  0E38  00D5               	movwf	??_flashy_Main+1
 17499  0E39  0854               	movf	??_flashy_Main,w
 17500  0E3A  0086               	movwf	6
 17501  0E3B  0855               	movf	??_flashy_Main+1,w
 17502  0E3C  0087               	movwf	7
 17503  0E3D  3003               	movlw	3
 17504  0E3E                     L8:	
 17505  0E3E  0081               	movwf	1
 17506  0E3F                     l1117:	
 17507                           
 17508                           ;flashy_task.c: 369: }
 17509                           ;flashy_task.c: 370: }
 17510                           ;flashy_task.c: 372: data->holdCountA += 1;
 17511  0E3F  085E               	movf	flashy_Main@data,w
 17512  0E40  0086               	movwf	6
 17513  0E41  085F               	movf	flashy_Main@data+1,w
 17514  0E42  0087               	movwf	7
 17515  0E43  314A               	addfsr 1,10
 17516  0E44  3001               	movlw	1
 17517  0E45  0781               	addwf	1,f
 17518  0E46  3141               	addfsr 1,1
 17519  0E47  1803               	skipnc
 17520  0E48  0A81               	incf	1,f
 17521                           
 17522                           ;flashy_task.c: 373: data->holdCountB = 0;
 17523  0E49  085E               	movf	flashy_Main@data,w
 17524  0E4A  0086               	movwf	6
 17525  0E4B  085F               	movf	flashy_Main@data+1,w
 17526  0E4C  0087               	movwf	7
 17527  0E4D  314C               	addfsr 1,12
 17528  0E4E  3000               	movlw	0
 17529  0E4F  3FC0               	movwi [0]fsr1
 17530  0E50  3FC1               	movwi [1]fsr1
 17531                           
 17532                           ;flashy_task.c: 374: data->holdCountX = 0;
 17533  0E51  085E               	movf	flashy_Main@data,w
 17534  0E52  0086               	movwf	6
 17535  0E53  085F               	movf	flashy_Main@data+1,w
 17536  0E54  0087               	movwf	7
 17537  0E55  314E               	addfsr 1,14
 17538  0E56  3000               	movlw	0
 17539  0E57  3FC0               	movwi [0]fsr1
 17540  0E58  3FC1               	movwi [1]fsr1
 17541                           
 17542                           ;flashy_task.c: 375: data->holdCountY = 0;
 17543  0E59  085E               	movf	flashy_Main@data,w
 17544  0E5A  0086               	movwf	6
 17545  0E5B  085F               	movf	flashy_Main@data+1,w
 17546  0E5C  0087               	movwf	7
 17547  0E5D  3150               	addfsr 1,16
 17548  0E5E  3000               	movlw	0
 17549  0E5F  3FC0               	movwi [0]fsr1
 17550  0E60  3FC1               	movwi [1]fsr1
 17551                           
 17552                           ;flashy_task.c: 376: data->holdCountXY = 0;
 17553  0E61  085E               	movf	flashy_Main@data,w
 17554  0E62  0086               	movwf	6
 17555  0E63  085F               	movf	flashy_Main@data+1,w
 17556  0E64  0087               	movwf	7
 17557  0E65  3152               	addfsr 1,18
 17558  0E66  3000               	movlw	0
 17559  0E67  3FC0               	movwi [0]fsr1
 17560  0E68  3FC1               	movwi [1]fsr1
 17561                           
 17562                           ;flashy_task.c: 377: data->holdCountAY = 0;
 17563  0E69  085E               	movf	flashy_Main@data,w
 17564  0E6A  0086               	movwf	6
 17565  0E6B  085F               	movf	flashy_Main@data+1,w
 17566  0E6C  0087               	movwf	7
 17567  0E6D  3154               	addfsr 1,20
 17568  0E6E  3000               	movlw	0
 17569  0E6F  3FC0               	movwi [0]fsr1
 17570  0E70  3FC1               	movwi [1]fsr1
 17571                           
 17572                           ;flashy_task.c: 378: data->holdCountAX = 0;
 17573  0E71  085E               	movf	flashy_Main@data,w
 17574  0E72  0086               	movwf	6
 17575  0E73  085F               	movf	flashy_Main@data+1,w
 17576  0E74  0087               	movwf	7
 17577  0E75  3156               	addfsr 1,22
 17578  0E76  3000               	movlw	0
 17579  0E77  3FC0               	movwi [0]fsr1
 17580  0E78  3FC1               	movwi [1]fsr1
 17581                           
 17582                           ;flashy_task.c: 379: data->holdCountBX = 0;
 17583  0E79  085E               	movf	flashy_Main@data,w
 17584  0E7A  0086               	movwf	6
 17585  0E7B  085F               	movf	flashy_Main@data+1,w
 17586  0E7C  0087               	movwf	7
 17587  0E7D  3158               	addfsr 1,24
 17588  0E7E  3000               	movlw	0
 17589  0E7F  3FC0               	movwi [0]fsr1
 17590  0E80  3FC1               	movwi [1]fsr1
 17591                           
 17592                           ;flashy_task.c: 380: data->holdCountBY = 0;
 17593  0E81  085E               	movf	flashy_Main@data,w
 17594  0E82  0086               	movwf	6
 17595  0E83  085F               	movf	flashy_Main@data+1,w
 17596  0E84  0087               	movwf	7
 17597  0E85  315A               	addfsr 1,26
 17598  0E86  3000               	movlw	0
 17599  0E87  3FC0               	movwi [0]fsr1
 17600  0E88  3FC1               	movwi [1]fsr1
 17601                           
 17602                           ;flashy_task.c: 381: data->noholdCount = 0;
 17603  0E89  085E               	movf	flashy_Main@data,w
 17604  0E8A  0086               	movwf	6
 17605  0E8B  085F               	movf	flashy_Main@data+1,w
 17606  0E8C  0087               	movwf	7
 17607  0E8D  315C               	addfsr 1,28
 17608  0E8E  3000               	movlw	0
 17609  0E8F  3FC0               	movwi [0]fsr1
 17610  0E90  3FC1               	movwi [1]fsr1
 17611                           
 17612                           ;flashy_task.c: 382: break;
 17613  0E91  2FC9               	goto	l7375
 17614  0E92                     l7339:	
 17615                           ;flashy_task.c: 383: case 0:
 17616                           
 17617                           
 17618                           ;flashy_task.c: 385: data->holdCountA = 0;
 17619  0E92  085E               	movf	flashy_Main@data,w
 17620  0E93  0086               	movwf	6
 17621  0E94  085F               	movf	flashy_Main@data+1,w
 17622  0E95  0087               	movwf	7
 17623  0E96  314A               	addfsr 1,10
 17624  0E97  3000               	movlw	0
 17625  0E98  3FC0               	movwi [0]fsr1
 17626  0E99  3FC1               	movwi [1]fsr1
 17627                           
 17628                           ;flashy_task.c: 386: data->holdCountB = 0;
 17629  0E9A  085E               	movf	flashy_Main@data,w
 17630  0E9B  0086               	movwf	6
 17631  0E9C  085F               	movf	flashy_Main@data+1,w
 17632  0E9D  0087               	movwf	7
 17633  0E9E  314C               	addfsr 1,12
 17634  0E9F  3000               	movlw	0
 17635  0EA0  3FC0               	movwi [0]fsr1
 17636  0EA1  3FC1               	movwi [1]fsr1
 17637                           
 17638                           ;flashy_task.c: 387: data->holdCountX = 0;
 17639  0EA2  085E               	movf	flashy_Main@data,w
 17640  0EA3  0086               	movwf	6
 17641  0EA4  085F               	movf	flashy_Main@data+1,w
 17642  0EA5  0087               	movwf	7
 17643  0EA6  314E               	addfsr 1,14
 17644  0EA7  3000               	movlw	0
 17645  0EA8  3FC0               	movwi [0]fsr1
 17646  0EA9  3FC1               	movwi [1]fsr1
 17647                           
 17648                           ;flashy_task.c: 388: data->holdCountY = 0;
 17649  0EAA  085E               	movf	flashy_Main@data,w
 17650  0EAB  0086               	movwf	6
 17651  0EAC  085F               	movf	flashy_Main@data+1,w
 17652  0EAD  0087               	movwf	7
 17653  0EAE  3150               	addfsr 1,16
 17654  0EAF  3000               	movlw	0
 17655  0EB0  3FC0               	movwi [0]fsr1
 17656  0EB1  3FC1               	movwi [1]fsr1
 17657                           
 17658                           ;flashy_task.c: 389: data->holdCountXY = 0;
 17659  0EB2  085E               	movf	flashy_Main@data,w
 17660  0EB3  0086               	movwf	6
 17661  0EB4  085F               	movf	flashy_Main@data+1,w
 17662  0EB5  0087               	movwf	7
 17663  0EB6  3152               	addfsr 1,18
 17664  0EB7  3000               	movlw	0
 17665  0EB8  3FC0               	movwi [0]fsr1
 17666  0EB9  3FC1               	movwi [1]fsr1
 17667                           
 17668                           ;flashy_task.c: 390: data->holdCountAY = 0;
 17669  0EBA  085E               	movf	flashy_Main@data,w
 17670  0EBB  0086               	movwf	6
 17671  0EBC  085F               	movf	flashy_Main@data+1,w
 17672  0EBD  0087               	movwf	7
 17673  0EBE  3154               	addfsr 1,20
 17674  0EBF  3000               	movlw	0
 17675  0EC0  3FC0               	movwi [0]fsr1
 17676  0EC1  3FC1               	movwi [1]fsr1
 17677                           
 17678                           ;flashy_task.c: 391: data->holdCountAX = 0;
 17679  0EC2  085E               	movf	flashy_Main@data,w
 17680  0EC3  0086               	movwf	6
 17681  0EC4  085F               	movf	flashy_Main@data+1,w
 17682  0EC5  0087               	movwf	7
 17683  0EC6  3156               	addfsr 1,22
 17684  0EC7  3000               	movlw	0
 17685  0EC8  3FC0               	movwi [0]fsr1
 17686  0EC9  3FC1               	movwi [1]fsr1
 17687                           
 17688                           ;flashy_task.c: 392: data->holdCountBX = 0;
 17689  0ECA  085E               	movf	flashy_Main@data,w
 17690  0ECB  0086               	movwf	6
 17691  0ECC  085F               	movf	flashy_Main@data+1,w
 17692  0ECD  0087               	movwf	7
 17693  0ECE  3158               	addfsr 1,24
 17694  0ECF  3000               	movlw	0
 17695  0ED0  3FC0               	movwi [0]fsr1
 17696  0ED1  3FC1               	movwi [1]fsr1
 17697                           
 17698                           ;flashy_task.c: 393: data->holdCountBY = 0;
 17699  0ED2  085E               	movf	flashy_Main@data,w
 17700  0ED3  0086               	movwf	6
 17701  0ED4  085F               	movf	flashy_Main@data+1,w
 17702  0ED5  0087               	movwf	7
 17703  0ED6  315A               	addfsr 1,26
 17704  0ED7  3000               	movlw	0
 17705  0ED8  3FC0               	movwi [0]fsr1
 17706  0ED9  3FC1               	movwi [1]fsr1
 17707                           
 17708                           ;flashy_task.c: 394: data->noholdCount += 1;
 17709  0EDA  085E               	movf	flashy_Main@data,w
 17710  0EDB  0086               	movwf	6
 17711  0EDC  085F               	movf	flashy_Main@data+1,w
 17712  0EDD  0087               	movwf	7
 17713  0EDE  315C               	addfsr 1,28
 17714  0EDF  3001               	movlw	1
 17715  0EE0  0781               	addwf	1,f
 17716  0EE1  3141               	addfsr 1,1
 17717  0EE2  1803               	skipnc
 17718  0EE3  0A81               	incf	1,f
 17719                           
 17720                           ;flashy_task.c: 395: break;
 17721  0EE4  2FC9               	goto	l7375
 17722  0EE5                     l7343:	
 17723                           ;flashy_task.c: 396: default:
 17724                           
 17725                           
 17726                           ;flashy_task.c: 397: data->holdCountA = 0;
 17727  0EE5  085E               	movf	flashy_Main@data,w
 17728  0EE6  0086               	movwf	6
 17729  0EE7  085F               	movf	flashy_Main@data+1,w
 17730  0EE8  0087               	movwf	7
 17731  0EE9  314A               	addfsr 1,10
 17732  0EEA  3000               	movlw	0
 17733  0EEB  3FC0               	movwi [0]fsr1
 17734  0EEC  3FC1               	movwi [1]fsr1
 17735                           
 17736                           ;flashy_task.c: 398: data->holdCountB = 0;
 17737  0EED  085E               	movf	flashy_Main@data,w
 17738  0EEE  0086               	movwf	6
 17739  0EEF  085F               	movf	flashy_Main@data+1,w
 17740  0EF0  0087               	movwf	7
 17741  0EF1  314C               	addfsr 1,12
 17742  0EF2  3000               	movlw	0
 17743  0EF3  3FC0               	movwi [0]fsr1
 17744  0EF4  3FC1               	movwi [1]fsr1
 17745                           
 17746                           ;flashy_task.c: 399: data->holdCountX = 0;
 17747  0EF5  085E               	movf	flashy_Main@data,w
 17748  0EF6  0086               	movwf	6
 17749  0EF7  085F               	movf	flashy_Main@data+1,w
 17750  0EF8  0087               	movwf	7
 17751  0EF9  314E               	addfsr 1,14
 17752  0EFA  3000               	movlw	0
 17753  0EFB  3FC0               	movwi [0]fsr1
 17754  0EFC  3FC1               	movwi [1]fsr1
 17755                           
 17756                           ;flashy_task.c: 400: data->holdCountY = 0;
 17757  0EFD  085E               	movf	flashy_Main@data,w
 17758  0EFE  0086               	movwf	6
 17759  0EFF  085F               	movf	flashy_Main@data+1,w
 17760  0F00  0087               	movwf	7
 17761  0F01  3150               	addfsr 1,16
 17762  0F02  3000               	movlw	0
 17763  0F03  3FC0               	movwi [0]fsr1
 17764  0F04  3FC1               	movwi [1]fsr1
 17765                           
 17766                           ;flashy_task.c: 401: data->holdCountXY = 0;
 17767  0F05  085E               	movf	flashy_Main@data,w
 17768  0F06  0086               	movwf	6
 17769  0F07  085F               	movf	flashy_Main@data+1,w
 17770  0F08  0087               	movwf	7
 17771  0F09  3152               	addfsr 1,18
 17772  0F0A  3000               	movlw	0
 17773  0F0B  3FC0               	movwi [0]fsr1
 17774  0F0C  3FC1               	movwi [1]fsr1
 17775                           
 17776                           ;flashy_task.c: 402: data->holdCountAY = 0;
 17777  0F0D  085E               	movf	flashy_Main@data,w
 17778  0F0E  0086               	movwf	6
 17779  0F0F  085F               	movf	flashy_Main@data+1,w
 17780  0F10  0087               	movwf	7
 17781  0F11  3154               	addfsr 1,20
 17782  0F12  3000               	movlw	0
 17783  0F13  3FC0               	movwi [0]fsr1
 17784  0F14  3FC1               	movwi [1]fsr1
 17785                           
 17786                           ;flashy_task.c: 403: data->holdCountAX = 0;
 17787  0F15  085E               	movf	flashy_Main@data,w
 17788  0F16  0086               	movwf	6
 17789  0F17  085F               	movf	flashy_Main@data+1,w
 17790  0F18  0087               	movwf	7
 17791  0F19  3156               	addfsr 1,22
 17792  0F1A  3000               	movlw	0
 17793  0F1B  3FC0               	movwi [0]fsr1
 17794  0F1C  3FC1               	movwi [1]fsr1
 17795                           
 17796                           ;flashy_task.c: 404: data->holdCountBX = 0;
 17797  0F1D  085E               	movf	flashy_Main@data,w
 17798  0F1E  0086               	movwf	6
 17799  0F1F  085F               	movf	flashy_Main@data+1,w
 17800  0F20  0087               	movwf	7
 17801  0F21  3158               	addfsr 1,24
 17802  0F22  3000               	movlw	0
 17803  0F23  3FC0               	movwi [0]fsr1
 17804  0F24  3FC1               	movwi [1]fsr1
 17805                           
 17806                           ;flashy_task.c: 405: data->holdCountBY = 0;
 17807  0F25  085E               	movf	flashy_Main@data,w
 17808  0F26  0086               	movwf	6
 17809  0F27  085F               	movf	flashy_Main@data+1,w
 17810  0F28  0087               	movwf	7
 17811  0F29  315A               	addfsr 1,26
 17812  0F2A  3000               	movlw	0
 17813  0F2B  3FC0               	movwi [0]fsr1
 17814  0F2C  3FC1               	movwi [1]fsr1
 17815                           
 17816                           ;flashy_task.c: 406: data->noholdCount = 0;
 17817  0F2D  085E               	movf	flashy_Main@data,w
 17818  0F2E  0086               	movwf	6
 17819  0F2F  085F               	movf	flashy_Main@data+1,w
 17820  0F30  0087               	movwf	7
 17821  0F31  315C               	addfsr 1,28
 17822  0F32  3000               	movlw	0
 17823  0F33  3FC0               	movwi [0]fsr1
 17824  0F34  3FC1               	movwi [1]fsr1
 17825                           
 17826                           ;flashy_task.c: 407: }
 17827  0F35  2FC9               	goto	l7375
 17828  0F36                     l7345:	
 17829                           
 17830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17831                           ; Switch size 1, requested type "space"
 17832                           ; Number of cases is 1, Range of values is 0 to 0
 17833                           ; switch strategies available:
 17834                           ; Name         Instructions Cycles
 17835                           ; simple_byte            4     3 (average)
 17836                           ; direct_byte            8     6 (fixed)
 17837                           ; jumptable            260     6 (fixed)
 17838                           ;	Chosen strategy is simple_byte
 17839  0F36  085D               	movf	flashy_Main@buttonPressed+1,w
 17840  0F37  3A00               	xorlw	0	; case 0
 17841  0F38  1903               	skipnz
 17842  0F39  2F3B               	goto	l8151
 17843  0F3A  2EE5               	goto	l7343
 17844  0F3B                     l8151:	
 17845                           
 17846                           ; Switch size 1, requested type "space"
 17847                           ; Number of cases is 9, Range of values is 0 to 12
 17848                           ; switch strategies available:
 17849                           ; Name         Instructions Cycles
 17850                           ; simple_byte           28    15 (average)
 17851                           ; direct_byte           32     6 (fixed)
 17852                           ; jumptable            260     6 (fixed)
 17853                           ;	Chosen strategy is simple_byte
 17854  0F3B  085C               	movf	flashy_Main@buttonPressed,w
 17855  0F3C  3A00               	xorlw	0	; case 0
 17856  0F3D  1903               	skipnz
 17857  0F3E  2E92               	goto	l7339
 17858  0F3F  3A01               	xorlw	1	; case 1
 17859  0F40  1903               	skipnz
 17860  0F41  2E15               	goto	l7313
 17861  0F42  3A03               	xorlw	3	; case 2
 17862  0F43  1903               	skipnz
 17863  0F44  2D93               	goto	l7283
 17864  0F45  3A07               	xorlw	7	; case 5
 17865  0F46  1903               	skipnz
 17866  0F47  2B91               	goto	l7159
 17867  0F48  3A03               	xorlw	3	; case 6
 17868  0F49  1903               	skipnz
 17869  0F4A  2C75               	goto	l7215
 17870  0F4B  3A0E               	xorlw	14	; case 8
 17871  0F4C  1903               	skipnz
 17872  0F4D  2CEA               	goto	l7245
 17873  0F4E  3A01               	xorlw	1	; case 9
 17874  0F4F  1903               	skipnz
 17875  0F50  2B24               	goto	l7133
 17876  0F51  3A03               	xorlw	3	; case 10
 17877  0F52  1903               	skipnz
 17878  0F53  2C00               	goto	l7185
 17879  0F54  3A06               	xorlw	6	; case 12
 17880  0F55  1903               	skipnz
 17881  0F56  2AC2               	goto	l7109
 17882  0F57  2EE5               	goto	l7343
 17883                           
 17884                           ;flashy_task.c: 410: switch (data->blaster_state) {
 17885  0F58  2FC9               	goto	l7375
 17886  0F59                     l7347:	
 17887                           ;flashy_task.c: 411: case FLASHY_BLASTER_SHOOTING_STATE:
 17888                           
 17889                           
 17890                           ;flashy_task.c: 413: if (data->blasterTickCount == 100) {
 17891  0F59  085E               	movf	flashy_Main@data,w
 17892  0F5A  0086               	movwf	6
 17893  0F5B  085F               	movf	flashy_Main@data+1,w
 17894  0F5C  0087               	movwf	7
 17895  0F5D  3147               	addfsr 1,7
 17896  0F5E  0016               	moviw fsr1++
 17897  0F5F  3A64               	xorlw	100
 17898  0F60  00D4               	movwf	??_flashy_Main
 17899  0F61  0016               	moviw fsr1++
 17900  0F62  04D4               	iorwf	??_flashy_Main,f
 17901  0F63  1D03               	btfss	3,2
 17902  0F64  2F70               	goto	l7353
 17903                           
 17904                           ;flashy_task.c: 414: nullifyBadge_irTxRegister(data->badge);
 17905  0F65  085E               	movf	flashy_Main@data,w
 17906  0F66  0086               	movwf	6
 17907  0F67  085F               	movf	flashy_Main@data+1,w
 17908  0F68  0087               	movwf	7
 17909  0F69  0801               	movf	1,w
 17910  0F6A  31A7  277D  3188   	fcall	_nullifyBadge_irTxRegister
 17911                           
 17912                           ;flashy_task.c: 415: nullifyBadge_irTxSet();
 17913  0F6D  31A6  2671  3188   	fcall	_nullifyBadge_irTxSet
 17914  0F70                     l7353:	
 17915                           
 17916                           ;flashy_task.c: 416: }
 17917                           ;flashy_task.c: 417: if (data->blasterTickCount == 100 - 1 ){
 17918  0F70  0020               	movlb	0	; select bank0
 17919  0F71  085E               	movf	flashy_Main@data,w
 17920  0F72  0086               	movwf	6
 17921  0F73  085F               	movf	flashy_Main@data+1,w
 17922  0F74  0087               	movwf	7
 17923  0F75  3147               	addfsr 1,7
 17924  0F76  0016               	moviw fsr1++
 17925  0F77  3A63               	xorlw	99
 17926  0F78  00D4               	movwf	??_flashy_Main
 17927  0F79  0016               	moviw fsr1++
 17928  0F7A  04D4               	iorwf	??_flashy_Main,f
 17929  0F7B  1D03               	btfss	3,2
 17930  0F7C  2F89               	goto	l7359
 17931                           
 17932                           ;flashy_task.c: 418: nullifyBadge_irTxClr();
 17933  0F7D  31A6  266E  3188   	fcall	_nullifyBadge_irTxClr
 17934                           
 17935                           ;flashy_task.c: 419: nullifyBadge_irTxRelease(data->badge);
 17936  0F80  0020               	movlb	0	; select bank0
 17937  0F81  085E               	movf	flashy_Main@data,w
 17938  0F82  0086               	movwf	6
 17939  0F83  085F               	movf	flashy_Main@data+1,w
 17940  0F84  0087               	movwf	7
 17941  0F85  0801               	movf	1,w
 17942  0F86  31A7  270C  3188   	fcall	_nullifyBadge_irTxRelease
 17943  0F89                     l7359:	
 17944                           
 17945                           ;flashy_task.c: 420: }
 17946                           ;flashy_task.c: 421: if (data->blasterTickCount == 0){
 17947  0F89  0020               	movlb	0	; select bank0
 17948  0F8A  085E               	movf	flashy_Main@data,w
 17949  0F8B  0086               	movwf	6
 17950  0F8C  085F               	movf	flashy_Main@data+1,w
 17951  0F8D  0087               	movwf	7
 17952  0F8E  3147               	addfsr 1,7
 17953  0F8F  0016               	moviw fsr1++
 17954  0F90  0401               	iorwf	1,w
 17955  0F91  1D03               	btfss	3,2
 17956  0F92  2FBD               	goto	l7371
 17957                           
 17958                           ;flashy_task.c: 422: data->displayTickCount = 0;
 17959  0F93  085E               	movf	flashy_Main@data,w
 17960  0F94  0086               	movwf	6
 17961  0F95  085F               	movf	flashy_Main@data+1,w
 17962  0F96  0087               	movwf	7
 17963  0F97  3144               	addfsr 1,4
 17964  0F98  3000               	movlw	0
 17965  0F99  3FC0               	movwi [0]fsr1
 17966  0F9A  3FC1               	movwi [1]fsr1
 17967                           
 17968                           ;flashy_task.c: 423: data->delayTickCount = 5;
 17969  0F9B  085E               	movf	flashy_Main@data,w
 17970  0F9C  0086               	movwf	6
 17971  0F9D  085F               	movf	flashy_Main@data+1,w
 17972  0F9E  0087               	movwf	7
 17973  0F9F  3141               	addfsr 1,1
 17974  0FA0  3005               	movlw	5
 17975  0FA1  3FC0               	movwi [0]fsr1
 17976  0FA2  3000               	movlw	0
 17977  0FA3  3FC1               	movwi [1]fsr1
 17978                           
 17979                           ;flashy_task.c: 425: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 17980  0FA4  085E               	movf	flashy_Main@data,w
 17981  0FA5  0086               	movwf	6
 17982  0FA6  085F               	movf	flashy_Main@data+1,w
 17983  0FA7  0087               	movwf	7
 17984  0FA8  3143               	addfsr 1,3
 17985  0FA9  0181               	clrf	1
 17986                           
 17987                           ;flashy_task.c: 426: data->display_state = FLASHY_STATE_DISPLAY;
 17988  0FAA  085E               	movf	flashy_Main@data,w
 17989  0FAB  0086               	movwf	6
 17990  0FAC  085F               	movf	flashy_Main@data+1,w
 17991  0FAD  0087               	movwf	7
 17992  0FAE  3146               	addfsr 1,6
 17993  0FAF  0181               	clrf	1
 17994                           
 17995                           ;flashy_task.c: 427: data->blaster_state = FLASHY_BLASTER_IDLE_STATE;
 17996  0FB0  085E               	movf	flashy_Main@data,w
 17997  0FB1  3E09               	addlw	9
 17998  0FB2  00D4               	movwf	??_flashy_Main
 17999  0FB3  3000               	movlw	0
 18000  0FB4  3D5F               	addwfc	flashy_Main@data+1,w
 18001  0FB5  00D5               	movwf	??_flashy_Main+1
 18002  0FB6  0854               	movf	??_flashy_Main,w
 18003  0FB7  0086               	movwf	6
 18004  0FB8  0855               	movf	??_flashy_Main+1,w
 18005  0FB9  0087               	movwf	7
 18006  0FBA  3001               	movlw	1
 18007  0FBB  0081               	movwf	1
 18008                           
 18009                           ;flashy_task.c: 428: }
 18010  0FBC  2FD6               	goto	l7377
 18011  0FBD                     l7371:	
 18012                           
 18013                           ;flashy_task.c: 429: else {
 18014                           ;flashy_task.c: 430: data->blasterTickCount -= 1;
 18015  0FBD  085E               	movf	flashy_Main@data,w
 18016  0FBE  0086               	movwf	6
 18017  0FBF  085F               	movf	flashy_Main@data+1,w
 18018  0FC0  0087               	movwf	7
 18019  0FC1  3147               	addfsr 1,7
 18020  0FC2  3001               	movlw	1
 18021  0FC3  0281               	subwf	1,f
 18022  0FC4  3141               	addfsr 1,1
 18023  0FC5  3000               	movlw	0
 18024  0FC6  3B81               	subwfb	1,f
 18025  0FC7  317F               	addfsr 1,-1
 18026                           
 18027                           ;flashy_task.c: 435: }
 18028                           
 18029                           ;flashy_task.c: 434: break;
 18030                           
 18031                           ;flashy_task.c: 433: case FLASHY_BLASTER_IDLE_STATE:
 18032                           
 18033                           ;flashy_task.c: 431: }
 18034                           ;flashy_task.c: 432: break;
 18035  0FC8  2FD6               	goto	l7377
 18036  0FC9                     l7375:	
 18037  0FC9  085E               	movf	flashy_Main@data,w
 18038  0FCA  0086               	movwf	6
 18039  0FCB  085F               	movf	flashy_Main@data+1,w
 18040  0FCC  0087               	movwf	7
 18041  0FCD  3149               	addfsr 1,9
 18042  0FCE  0801               	movf	1,w
 18043                           
 18044                           ; Switch size 1, requested type "space"
 18045                           ; Number of cases is 2, Range of values is 0 to 1
 18046                           ; switch strategies available:
 18047                           ; Name         Instructions Cycles
 18048                           ; simple_byte            7     4 (average)
 18049                           ; direct_byte           10     6 (fixed)
 18050                           ; jumptable            260     6 (fixed)
 18051                           ;	Chosen strategy is simple_byte
 18052  0FCF  3A00               	xorlw	0	; case 0
 18053  0FD0  1903               	skipnz
 18054  0FD1  2F59               	goto	l7347
 18055  0FD2  3A01               	xorlw	1	; case 1
 18056  0FD3  1903               	skipnz
 18057  0FD4  2FD6               	goto	l7377
 18058  0FD5  2FD6               	goto	l7377
 18059  0FD6                     l7377:	
 18060                           
 18061                           ;flashy_task.c: 438: if (nullifyBadge_irGet() && (data->blaster_state != FLASHY_BLASTER_
      +                          SHOOTING_STATE)) {
 18062  0FD6  3192  2200  3188   	fcall	_nullifyBadge_irGet
 18063  0FD9  3A00               	xorlw	0
 18064  0FDA  1903               	skipnz
 18065  0FDB  0008               	return
 18066  0FDC  0020               	movlb	0	; select bank0
 18067  0FDD  085E               	movf	flashy_Main@data,w
 18068  0FDE  0086               	movwf	6
 18069  0FDF  085F               	movf	flashy_Main@data+1,w
 18070  0FE0  0087               	movwf	7
 18071  0FE1  3149               	addfsr 1,9
 18072  0FE2  0801               	movf	1,w
 18073  0FE3  1903               	btfsc	3,2
 18074  0FE4  0008               	return
 18075                           
 18076                           ;flashy_task.c: 439: data->displayTickCount = 0;
 18077  0FE5  085E               	movf	flashy_Main@data,w
 18078  0FE6  0086               	movwf	6
 18079  0FE7  085F               	movf	flashy_Main@data+1,w
 18080  0FE8  0087               	movwf	7
 18081  0FE9  3144               	addfsr 1,4
 18082  0FEA  3000               	movlw	0
 18083  0FEB  3FC0               	movwi [0]fsr1
 18084  0FEC  3FC1               	movwi [1]fsr1
 18085                           
 18086                           ;flashy_task.c: 440: deaths += 1;
 18087  0FED  3001               	movlw	1
 18088  0FEE  0021               	movlb	1	; select bank1
 18089  0FEF  07A8               	addwf	_deaths^(0+128),f
 18090  0FF0  3000               	movlw	0
 18091  0FF1  3DA9               	addwfc	(_deaths+1)^(0+128),f
 18092                           
 18093                           ;flashy_task.c: 441: data->display_state = FLASHY_STATE_DISPLAY_SHOT;
 18094  0FF2  0020               	movlb	0	; select bank0
 18095  0FF3  085E               	movf	flashy_Main@data,w
 18096  0FF4  3E06               	addlw	6
 18097  0FF5  00D4               	movwf	??_flashy_Main
 18098  0FF6  3000               	movlw	0
 18099  0FF7  3D5F               	addwfc	flashy_Main@data+1,w
 18100  0FF8  00D5               	movwf	??_flashy_Main+1
 18101  0FF9  0854               	movf	??_flashy_Main,w
 18102  0FFA  0086               	movwf	6
 18103  0FFB  0855               	movf	??_flashy_Main+1,w
 18104  0FFC  0087               	movwf	7
 18105  0FFD  3003               	movlw	3
 18106  0FFE  0081               	movwf	1
 18107  0FFF  0008               	return
 18108  1000                     __end_of_flashy_Main:	
 18109                           
 18110                           	psect	text17
 18111  14D9                     __ptext17:	
 18112 ;; *************** function _slot_Main *****************
 18113 ;; Defined at:
 18114 ;;		line 34 in file "slot_task.c"
 18115 ;; Parameters:    Size  Location     Type
 18116 ;;  taskData        2   50[BANK0 ] PTR void 
 18117 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18118 ;;		 -> flashy_TaskData(30), NULL(0), 
 18119 ;; Auto vars:     Size  Location     Type
 18120 ;;  data            2   54[BANK0 ] PTR struct t_slot_taskDa
 18121 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18122 ;;		 -> flashy_TaskData(30), NULL(0), 
 18123 ;;  buttonPresse    1   53[BANK0 ] unsigned char 
 18124 ;; Return value:  Size  Location     Type
 18125 ;;                  1    wreg      void 
 18126 ;; Registers used:
 18127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18128 ;; Tracked objects:
 18129 ;;		On entry : 0/0
 18130 ;;		On exit  : 0/0
 18131 ;;		Unchanged: 0/0
 18132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18134 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18135 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18136 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18137 ;;Total ram usage:        6 bytes
 18138 ;; Hardware stack levels used:    1
 18139 ;; Hardware stack levels required when called:   10
 18140 ;; This function calls:
 18141 ;;		_marquee
 18142 ;;		_nullifyBadge_buttonsGet
 18143 ;; This function is called by:
 18144 ;;		_main
 18145 ;;		_scheduler_TaskRun
 18146 ;; This function uses a non-reentrant model
 18147 ;;
 18148                           
 18149                           
 18150                           ;psect for function _slot_Main
 18151  14D9                     _slot_Main:	
 18152                           
 18153                           ;slot_task.c: 35: struct t_slot_taskData *data = (struct t_slot_taskData *) taskData;
 18154                           
 18155                           ;incstack = 0
 18156                           ; Regs used in _slot_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18157  14D9  0020               	movlb	0	; select bank0
 18158  14DA  0853               	movf	slot_Main@taskData+1,w
 18159  14DB  00D7               	movwf	slot_Main@data+1
 18160  14DC  0852               	movf	slot_Main@taskData,w
 18161  14DD  00D6               	movwf	slot_Main@data
 18162                           
 18163                           ;slot_task.c: 36: u8 buttonPressed;
 18164                           ;slot_task.c: 39: if ( currentTask != SLOT_TASK ){
 18165  14DE  0021               	movlb	1	; select bank1
 18166  14DF  0334               	decf	_currentTask^(0+128),w
 18167  14E0  0435               	iorwf	(_currentTask+1)^(0+128),w
 18168  14E1  1903               	btfsc	3,2
 18169  14E2  2D0E               	goto	l7587
 18170                           
 18171                           ;slot_task.c: 40: buttonPressed = nullifyBadge_buttonsGet();
 18172  14E3  319A  22AA         	fcall	_nullifyBadge_buttonsGet
 18173  14E5  0020               	movlb	0	; select bank0
 18174  14E6  00D4               	movwf	??_slot_Main
 18175  14E7  0854               	movf	??_slot_Main,w
 18176  14E8  00D5               	movwf	slot_Main@buttonPressed
 18177                           
 18178                           ;slot_task.c: 44: data->holdCountA = 1;
 18179                           
 18180                           ;slot_task.c: 42: default:
 18181                           
 18182                           ;slot_task.c: 41: switch (buttonPressed) {
 18183  14E9  0856               	movf	slot_Main@data,w
 18184  14EA  0086               	movwf	6
 18185  14EB  0857               	movf	slot_Main@data+1,w
 18186  14EC  0087               	movwf	7
 18187  14ED  3144               	addfsr 1,4
 18188  14EE  3001               	movlw	1
 18189  14EF  3FC0               	movwi [0]fsr1
 18190  14F0  3000               	movlw	0
 18191  14F1  3FC1               	movwi [1]fsr1
 18192                           
 18193                           ;slot_task.c: 45: data->holdCountB = 1;
 18194  14F2  0856               	movf	slot_Main@data,w
 18195  14F3  0086               	movwf	6
 18196  14F4  0857               	movf	slot_Main@data+1,w
 18197  14F5  0087               	movwf	7
 18198  14F6  3146               	addfsr 1,6
 18199  14F7  3001               	movlw	1
 18200  14F8  3FC0               	movwi [0]fsr1
 18201  14F9  3000               	movlw	0
 18202  14FA  3FC1               	movwi [1]fsr1
 18203                           
 18204                           ;slot_task.c: 46: data->holdCountX = 1;
 18205  14FB  0856               	movf	slot_Main@data,w
 18206  14FC  0086               	movwf	6
 18207  14FD  0857               	movf	slot_Main@data+1,w
 18208  14FE  0087               	movwf	7
 18209  14FF  3148               	addfsr 1,8
 18210  1500  3001               	movlw	1
 18211  1501  3FC0               	movwi [0]fsr1
 18212  1502  3000               	movlw	0
 18213  1503  3FC1               	movwi [1]fsr1
 18214                           
 18215                           ;slot_task.c: 47: data->holdCountY = 1;
 18216  1504  0856               	movf	slot_Main@data,w
 18217  1505  0086               	movwf	6
 18218  1506  0857               	movf	slot_Main@data+1,w
 18219  1507  0087               	movwf	7
 18220  1508  314A               	addfsr 1,10
 18221  1509  3001               	movlw	1
 18222  150A  3FC0               	movwi [0]fsr1
 18223  150B  3000               	movlw	0
 18224  150C  3FC1               	movwi [1]fsr1
 18225                           
 18226                           ;slot_task.c: 49: }
 18227                           
 18228                           ;slot_task.c: 48: break;
 18229  150D  0008               	return
 18230  150E                     l7587:	
 18231                           ;slot_task.c: 50: return;
 18232                           
 18233                           
 18234                           ;slot_task.c: 51: }
 18235                           ;slot_task.c: 53: buttonPressed = nullifyBadge_buttonsGet();
 18236  150E  319A  22AA  3194   	fcall	_nullifyBadge_buttonsGet
 18237  1511  0020               	movlb	0	; select bank0
 18238  1512  00D4               	movwf	??_slot_Main
 18239  1513  0854               	movf	??_slot_Main,w
 18240  1514  00D5               	movwf	slot_Main@buttonPressed
 18241                           
 18242                           ;slot_task.c: 56: marquee("$$$ ", data->displayTickCount);
 18243                           
 18244                           ;slot_task.c: 55: default:
 18245                           
 18246                           ;slot_task.c: 54: switch (buttonPressed) {
 18247  1515  303A               	movlw	low (STR_20| (0+32768))
 18248  1516  00BA               	movwf	marquee@string
 18249  1517  30A8               	movlw	high (STR_20| (0+32768))
 18250  1518  00BB               	movwf	marquee@string+1
 18251  1519  0856               	movf	slot_Main@data,w
 18252  151A  0086               	movwf	6
 18253  151B  0857               	movf	slot_Main@data+1,w
 18254  151C  0087               	movwf	7
 18255  151D  3142               	addfsr 1,2
 18256  151E  3F40               	moviw [0]fsr1
 18257  151F  00BC               	movwf	marquee@count
 18258  1520  3F41               	moviw [1]fsr1
 18259  1521  00BD               	movwf	marquee@count+1
 18260  1522  3193  23E6  3194   	fcall	_marquee
 18261                           
 18262                           ;slot_task.c: 57: data->displayTickCount += 1;
 18263  1525  0020               	movlb	0	; select bank0
 18264  1526  0856               	movf	slot_Main@data,w
 18265  1527  0086               	movwf	6
 18266  1528  0857               	movf	slot_Main@data+1,w
 18267  1529  0087               	movwf	7
 18268  152A  3142               	addfsr 1,2
 18269  152B  3001               	movlw	1
 18270  152C  0781               	addwf	1,f
 18271  152D  3141               	addfsr 1,1
 18272  152E  1803               	skipnc
 18273  152F  0A81               	incf	1,f
 18274                           
 18275                           ;slot_task.c: 59: data->holdCountA = 0;
 18276  1530  0856               	movf	slot_Main@data,w
 18277  1531  0086               	movwf	6
 18278  1532  0857               	movf	slot_Main@data+1,w
 18279  1533  0087               	movwf	7
 18280  1534  3144               	addfsr 1,4
 18281  1535  3000               	movlw	0
 18282  1536  3FC0               	movwi [0]fsr1
 18283  1537  3FC1               	movwi [1]fsr1
 18284                           
 18285                           ;slot_task.c: 60: data->holdCountB = 0;
 18286  1538  0856               	movf	slot_Main@data,w
 18287  1539  0086               	movwf	6
 18288  153A  0857               	movf	slot_Main@data+1,w
 18289  153B  0087               	movwf	7
 18290  153C  3146               	addfsr 1,6
 18291  153D  3000               	movlw	0
 18292  153E  3FC0               	movwi [0]fsr1
 18293  153F  3FC1               	movwi [1]fsr1
 18294                           
 18295                           ;slot_task.c: 61: data->holdCountX = 0;
 18296  1540  0856               	movf	slot_Main@data,w
 18297  1541  0086               	movwf	6
 18298  1542  0857               	movf	slot_Main@data+1,w
 18299  1543  0087               	movwf	7
 18300  1544  3148               	addfsr 1,8
 18301  1545  3000               	movlw	0
 18302  1546  3FC0               	movwi [0]fsr1
 18303  1547  3FC1               	movwi [1]fsr1
 18304                           
 18305                           ;slot_task.c: 62: data->holdCountY = 0;
 18306  1548  0856               	movf	slot_Main@data,w
 18307  1549  0086               	movwf	6
 18308  154A  0857               	movf	slot_Main@data+1,w
 18309  154B  0087               	movwf	7
 18310  154C  314A               	addfsr 1,10
 18311  154D  3000               	movlw	0
 18312  154E  3FC0               	movwi [0]fsr1
 18313  154F  3FC1               	movwi [1]fsr1
 18314                           
 18315                           ;slot_task.c: 63: data->noholdCount += 1;
 18316  1550  0856               	movf	slot_Main@data,w
 18317  1551  0086               	movwf	6
 18318  1552  0857               	movf	slot_Main@data+1,w
 18319  1553  0087               	movwf	7
 18320  1554  314C               	addfsr 1,12
 18321  1555  3001               	movlw	1
 18322  1556  0781               	addwf	1,f
 18323  1557  3141               	addfsr 1,1
 18324  1558  1803               	skipnc
 18325  1559  0A81               	incf	1,f
 18326                           
 18327                           ;slot_task.c: 64: }
 18328  155A  0008               	return
 18329  155B                     __end_of_slot_Main:	
 18330                           
 18331                           	psect	text18
 18332  1B0D                     __ptext18:	
 18333 ;; *************** function _secret_clear *****************
 18334 ;; Defined at:
 18335 ;;		line 178 in file "secret_task.c"
 18336 ;; Parameters:    Size  Location     Type
 18337 ;;  data            2    1[COMMON] PTR struct t_secret_task
 18338 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18339 ;;		 -> flashy_TaskData(30), NULL(0), 
 18340 ;; Auto vars:     Size  Location     Type
 18341 ;;		None
 18342 ;; Return value:  Size  Location     Type
 18343 ;;                  1    wreg      void 
 18344 ;; Registers used:
 18345 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18346 ;; Tracked objects:
 18347 ;;		On entry : 0/0
 18348 ;;		On exit  : 0/0
 18349 ;;		Unchanged: 0/0
 18350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18355 ;;Total ram usage:        2 bytes
 18356 ;; Hardware stack levels used:    1
 18357 ;; Hardware stack levels required when called:    4
 18358 ;; This function calls:
 18359 ;;		Nothing
 18360 ;; This function is called by:
 18361 ;;		_secret_Main
 18362 ;; This function uses a non-reentrant model
 18363 ;;
 18364                           
 18365                           
 18366                           ;psect for function _secret_clear
 18367  1B0D                     _secret_clear:	
 18368                           
 18369                           ;secret_task.c: 180: data->delayTickCount = 300;
 18370                           
 18371                           ;incstack = 0
 18372                           ; Regs used in _secret_clear: [wreg+fsr1l+fsr1h+status,2+status,0]
 18373  1B0D  0871               	movf	secret_clear@data,w
 18374  1B0E  0086               	movwf	6
 18375  1B0F  0872               	movf	secret_clear@data+1,w
 18376  1B10  0087               	movwf	7
 18377  1B11  3142               	addfsr 1,2
 18378  1B12  302C               	movlw	44
 18379  1B13  3FC0               	movwi [0]fsr1
 18380  1B14  3001               	movlw	1
 18381  1B15  3FC1               	movwi [1]fsr1
 18382                           
 18383                           ;secret_task.c: 181: data->holdCountA = 0;
 18384  1B16  0871               	movf	secret_clear@data,w
 18385  1B17  0086               	movwf	6
 18386  1B18  0872               	movf	secret_clear@data+1,w
 18387  1B19  0087               	movwf	7
 18388  1B1A  3144               	addfsr 1,4
 18389  1B1B  3000               	movlw	0
 18390  1B1C  3FC0               	movwi [0]fsr1
 18391  1B1D  3FC1               	movwi [1]fsr1
 18392                           
 18393                           ;secret_task.c: 182: data->holdCountB = 0;
 18394  1B1E  0871               	movf	secret_clear@data,w
 18395  1B1F  0086               	movwf	6
 18396  1B20  0872               	movf	secret_clear@data+1,w
 18397  1B21  0087               	movwf	7
 18398  1B22  3146               	addfsr 1,6
 18399  1B23  3000               	movlw	0
 18400  1B24  3FC0               	movwi [0]fsr1
 18401  1B25  3FC1               	movwi [1]fsr1
 18402                           
 18403                           ;secret_task.c: 183: data->holdCountX = 0;
 18404  1B26  0871               	movf	secret_clear@data,w
 18405  1B27  0086               	movwf	6
 18406  1B28  0872               	movf	secret_clear@data+1,w
 18407  1B29  0087               	movwf	7
 18408  1B2A  3148               	addfsr 1,8
 18409  1B2B  3000               	movlw	0
 18410  1B2C  3FC0               	movwi [0]fsr1
 18411  1B2D  3FC1               	movwi [1]fsr1
 18412                           
 18413                           ;secret_task.c: 184: data->holdCountY = 0;
 18414  1B2E  0871               	movf	secret_clear@data,w
 18415  1B2F  0086               	movwf	6
 18416  1B30  0872               	movf	secret_clear@data+1,w
 18417  1B31  0087               	movwf	7
 18418  1B32  314A               	addfsr 1,10
 18419  1B33  3000               	movlw	0
 18420  1B34  3FC0               	movwi [0]fsr1
 18421  1B35  3FC1               	movwi [1]fsr1
 18422                           
 18423                           ;secret_task.c: 185: data->noholdCount = 0;
 18424  1B36  0871               	movf	secret_clear@data,w
 18425  1B37  0086               	movwf	6
 18426  1B38  0872               	movf	secret_clear@data+1,w
 18427  1B39  0087               	movwf	7
 18428  1B3A  314C               	addfsr 1,12
 18429  1B3B  3000               	movlw	0
 18430  1B3C  3FC0               	movwi [0]fsr1
 18431  1B3D  3FC1               	movwi [1]fsr1
 18432  1B3E  0008               	return
 18433  1B3F                     __end_of_secret_clear:	
 18434                           
 18435                           	psect	text19
 18436  155B                     __ptext19:	
 18437 ;; *************** function _secret_check *****************
 18438 ;; Defined at:
 18439 ;;		line 69 in file "secret_task.c"
 18440 ;; Parameters:    Size  Location     Type
 18441 ;;  data            2    7[COMMON] PTR struct t_secret_task
 18442 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18443 ;;		 -> flashy_TaskData(30), NULL(0), 
 18444 ;;  buttonPresse    1    9[COMMON] unsigned char 
 18445 ;; Auto vars:     Size  Location     Type
 18446 ;;  i               2    8[BANK0 ] unsigned int 
 18447 ;;  hit_counter     6    0        unsigned char [6]
 18448 ;;  currents_siz    2    5[BANK0 ] unsigned int 
 18449 ;;  size            2    3[BANK0 ] unsigned int 
 18450 ;;  inputs          1    7[BANK0 ] PTR unsigned char 
 18451 ;;		 -> secret_inputs.inputs(20), secret_inputs(25), 
 18452 ;; Return value:  Size  Location     Type
 18453 ;;                  1    wreg      unsigned char 
 18454 ;; Registers used:
 18455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18456 ;; Tracked objects:
 18457 ;;		On entry : 0/0
 18458 ;;		On exit  : 0/0
 18459 ;;		Unchanged: 0/0
 18460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18461 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18462 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18463 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18464 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18465 ;;Total ram usage:       13 bytes
 18466 ;; Hardware stack levels used:    1
 18467 ;; Hardware stack levels required when called:    5
 18468 ;; This function calls:
 18469 ;;		___bmul
 18470 ;;		_strlen
 18471 ;; This function is called by:
 18472 ;;		_secret_Main
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           
 18477                           ;psect for function _secret_check
 18478  155B                     _secret_check:	
 18479                           
 18480                           ;secret_task.c: 70: u8 *inputs;
 18481                           ;secret_task.c: 71: u16 size = sizeof(secret_inputs) / sizeof(secret_inputs[0]);
 18482                           
 18483                           ;incstack = 0
 18484                           ; Regs used in _secret_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18485  155B  3001               	movlw	1
 18486  155C  0020               	movlb	0	; select bank0
 18487  155D  00A3               	movwf	secret_check@size
 18488  155E  3000               	movlw	0
 18489  155F  00A4               	movwf	secret_check@size+1
 18490                           
 18491                           ;secret_task.c: 72: u16 currents_size;
 18492                           ;secret_task.c: 73: char hit_counter[6];
 18493                           ;secret_task.c: 75: for (u16 i = 0; i < size; i++){
 18494  1560  01A8               	clrf	secret_check@i
 18495  1561  01A9               	clrf	secret_check@i+1
 18496  1562                     l6713:	
 18497  1562  0824               	movf	secret_check@size+1,w
 18498  1563  0229               	subwf	secret_check@i+1,w
 18499  1564  1D03               	skipz
 18500  1565  2D68               	goto	u3885
 18501  1566  0823               	movf	secret_check@size,w
 18502  1567  0228               	subwf	secret_check@i,w
 18503  1568                     u3885:	
 18504  1568  1803               	btfsc	3,0
 18505  1569  2E14               	goto	l6715
 18506                           
 18507                           ;secret_task.c: 76: inputs = secret_inputs[i].inputs;
 18508  156A  3019               	movlw	25
 18509  156B  00A0               	movwf	??_secret_check
 18510  156C  0820               	movf	??_secret_check,w
 18511  156D  00F1               	movwf	___bmul@multiplicand
 18512  156E  0828               	movf	secret_check@i,w
 18513  156F  31A7  27DC  3195   	fcall	___bmul
 18514  1572  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18515  1573  0020               	movlb	0	; select bank0
 18516  1574  00A1               	movwf	??_secret_check+1
 18517  1575  0821               	movf	??_secret_check+1,w
 18518  1576  00A7               	movwf	secret_check@inputs
 18519                           
 18520                           ;secret_task.c: 78: if (buttonPressed == inputs[secret_inputs[i].idx]){
 18521  1577  3019               	movlw	25
 18522  1578  00A0               	movwf	??_secret_check
 18523  1579  0820               	movf	??_secret_check,w
 18524  157A  00F1               	movwf	___bmul@multiplicand
 18525  157B  0828               	movf	secret_check@i,w
 18526  157C  31A7  27DC  3195   	fcall	___bmul
 18527  157F  3E14               	addlw	20
 18528  1580  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18529  1581  0086               	movwf	6
 18530  1582  3001               	movlw	1	; select bank3/4
 18531  1583  0087               	movwf	7
 18532  1584  0801               	movf	1,w
 18533  1585  0020               	movlb	0	; select bank0
 18534  1586  0727               	addwf	secret_check@inputs,w
 18535  1587  00A1               	movwf	??_secret_check+1
 18536  1588  0821               	movf	??_secret_check+1,w
 18537  1589  0086               	movwf	6
 18538  158A  3001               	movlw	1	; select bank2/3
 18539  158B  0087               	movwf	7
 18540  158C  0801               	movf	1,w
 18541  158D  0679               	xorwf	secret_check@buttonPressed,w
 18542  158E  1D03               	skipz
 18543  158F  2DFD               	goto	l6709
 18544                           
 18545                           ;secret_task.c: 79: currents_size = strlen((const char *)inputs);
 18546  1590  0827               	movf	secret_check@inputs,w
 18547  1591  00F1               	movwf	strlen@s
 18548  1592  3001               	movlw	1
 18549  1593  00F2               	movwf	strlen@s+1
 18550  1594  3199  2116  3195   	fcall	_strlen
 18551  1597  0872               	movf	?_strlen+1,w
 18552  1598  0020               	movlb	0	; select bank0
 18553  1599  00A6               	movwf	secret_check@currents_size+1
 18554  159A  0871               	movf	?_strlen,w
 18555  159B  00A5               	movwf	secret_check@currents_size
 18556                           
 18557                           ;secret_task.c: 80: secret_inputs[i].idx++;
 18558  159C  3019               	movlw	25
 18559  159D  00A0               	movwf	??_secret_check
 18560  159E  0820               	movf	??_secret_check,w
 18561  159F  00F1               	movwf	___bmul@multiplicand
 18562  15A0  0828               	movf	secret_check@i,w
 18563  15A1  31A7  27DC  3195   	fcall	___bmul
 18564  15A4  3E14               	addlw	20
 18565  15A5  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18566  15A6  0086               	movwf	6
 18567  15A7  3001               	movlw	1	; select bank3/4
 18568  15A8  0087               	movwf	7
 18569  15A9  3001               	movlw	1
 18570  15AA  0781               	addwf	1,f
 18571  15AB  3141               	addfsr 1,1
 18572  15AC  1803               	skipnc
 18573  15AD  0A81               	incf	1,f
 18574                           
 18575                           ;secret_task.c: 82: if (secret_inputs[i].idx == currents_size) {
 18576  15AE  3019               	movlw	25
 18577  15AF  0020               	movlb	0	; select bank0
 18578  15B0  00A0               	movwf	??_secret_check
 18579  15B1  0820               	movf	??_secret_check,w
 18580  15B2  00F1               	movwf	___bmul@multiplicand
 18581  15B3  0828               	movf	secret_check@i,w
 18582  15B4  31A7  27DC  3195   	fcall	___bmul
 18583  15B7  3E14               	addlw	20
 18584  15B8  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18585  15B9  0086               	movwf	6
 18586  15BA  3001               	movlw	1	; select bank3/4
 18587  15BB  0087               	movwf	7
 18588  15BC  3F40               	moviw [0]fsr1
 18589  15BD  0020               	movlb	0	; select bank0
 18590  15BE  00A1               	movwf	??_secret_check+1
 18591  15BF  3F41               	moviw [1]fsr1
 18592  15C0  00A2               	movwf	??_secret_check+2
 18593  15C1  0826               	movf	secret_check@currents_size+1,w
 18594  15C2  0622               	xorwf	??_secret_check+2,w
 18595  15C3  1D03               	skipz
 18596  15C4  2DC7               	goto	u3875
 18597  15C5  0825               	movf	secret_check@currents_size,w
 18598  15C6  0621               	xorwf	??_secret_check+1,w
 18599  15C7                     u3875:	
 18600  15C7  1D03               	skipz
 18601  15C8  2E0E               	goto	l6711
 18602                           
 18603                           ;secret_task.c: 84: secret_inputs[i].idx = 0;
 18604  15C9  3019               	movlw	25
 18605  15CA  00A0               	movwf	??_secret_check
 18606  15CB  0820               	movf	??_secret_check,w
 18607  15CC  00F1               	movwf	___bmul@multiplicand
 18608  15CD  0828               	movf	secret_check@i,w
 18609  15CE  31A7  27DC  3195   	fcall	___bmul
 18610  15D1  3E14               	addlw	20
 18611  15D2  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18612  15D3  0086               	movwf	6
 18613  15D4  3001               	movlw	1	; select bank3/4
 18614  15D5  0087               	movwf	7
 18615  15D6  3000               	movlw	0
 18616  15D7  3FC0               	movwi [0]fsr1
 18617  15D8  3FC1               	movwi [1]fsr1
 18618                           
 18619                           ;secret_task.c: 87: *(secret_inputs[i].variable) = (u16) secret_inputs[i].value;
 18620  15D9  3019               	movlw	25
 18621  15DA  0020               	movlb	0	; select bank0
 18622  15DB  00A0               	movwf	??_secret_check
 18623  15DC  0820               	movf	??_secret_check,w
 18624  15DD  00F1               	movwf	___bmul@multiplicand
 18625  15DE  0828               	movf	secret_check@i,w
 18626  15DF  31A7  27DC  3195   	fcall	___bmul
 18627  15E2  3E17               	addlw	23
 18628  15E3  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18629  15E4  0086               	movwf	6
 18630  15E5  3001               	movlw	1	; select bank3/4
 18631  15E6  0087               	movwf	7
 18632  15E7  3019               	movlw	25
 18633  15E8  0020               	movlb	0	; select bank0
 18634  15E9  00A1               	movwf	??_secret_check+1
 18635  15EA  0821               	movf	??_secret_check+1,w
 18636  15EB  00F1               	movwf	___bmul@multiplicand
 18637  15EC  0828               	movf	secret_check@i,w
 18638  15ED  31A7  27DC         	fcall	___bmul
 18639  15EF  3E16               	addlw	22
 18640  15F0  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18641  15F1  0084               	movwf	4
 18642  15F2  3001               	movlw	1	; select bank3/4
 18643  15F3  0085               	movwf	5
 18644  15F4  0800               	movf	0,w
 18645  15F5  0084               	movwf	4
 18646  15F6  0185               	clrf	5
 18647  15F7  3F40               	moviw [0]fsr1
 18648  15F8  3F80               	movwi [0]fsr0
 18649  15F9  3F41               	moviw [1]fsr1
 18650  15FA  3F81               	movwi [1]fsr0
 18651                           
 18652                           ;secret_task.c: 89: return 1;
 18653  15FB  3001               	movlw	1
 18654  15FC  0008               	return
 18655  15FD                     l6709:	
 18656                           ;secret_task.c: 90: }
 18657                           ;secret_task.c: 91: } else {
 18658                           
 18659                           
 18660                           ;secret_task.c: 93: secret_inputs[i].idx = 0;
 18661  15FD  3019               	movlw	25
 18662  15FE  0020               	movlb	0	; select bank0
 18663  15FF  00A0               	movwf	??_secret_check
 18664  1600  0820               	movf	??_secret_check,w
 18665  1601  00F1               	movwf	___bmul@multiplicand
 18666  1602  0828               	movf	secret_check@i,w
 18667  1603  31A7  27DC  3195   	fcall	___bmul
 18668  1606  3E14               	addlw	20
 18669  1607  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18670  1608  0086               	movwf	6
 18671  1609  3001               	movlw	1	; select bank3/4
 18672  160A  0087               	movwf	7
 18673  160B  3000               	movlw	0
 18674  160C  3FC0               	movwi [0]fsr1
 18675  160D  3FC1               	movwi [1]fsr1
 18676  160E                     l6711:	
 18677  160E  3001               	movlw	1
 18678  160F  0020               	movlb	0	; select bank0
 18679  1610  07A8               	addwf	secret_check@i,f
 18680  1611  3000               	movlw	0
 18681  1612  3DA9               	addwfc	secret_check@i+1,f
 18682  1613  2D62               	goto	l6713
 18683  1614                     l6715:	
 18684                           
 18685                           ;secret_task.c: 94: }
 18686                           ;secret_task.c: 95: }
 18687                           ;secret_task.c: 96: return 0;
 18688  1614  3000               	movlw	0
 18689  1615  0008               	return
 18690  1616                     __end_of_secret_check:	
 18691                           
 18692                           	psect	text20
 18693  27DC                     __ptext20:	
 18694 ;; *************** function ___bmul *****************
 18695 ;; Defined at:
 18696 ;;		line 4 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul8.c"
 18697 ;; Parameters:    Size  Location     Type
 18698 ;;  multiplier      1    wreg     unsigned char 
 18699 ;;  multiplicand    1    1[COMMON] unsigned char 
 18700 ;; Auto vars:     Size  Location     Type
 18701 ;;  multiplier      1    4[COMMON] unsigned char 
 18702 ;;  product         1    3[COMMON] unsigned char 
 18703 ;; Return value:  Size  Location     Type
 18704 ;;                  1    wreg      unsigned char 
 18705 ;; Registers used:
 18706 ;;		wreg, status,2, status,0
 18707 ;; Tracked objects:
 18708 ;;		On entry : 0/0
 18709 ;;		On exit  : 0/0
 18710 ;;		Unchanged: 0/0
 18711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18714 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18715 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18716 ;;Total ram usage:        4 bytes
 18717 ;; Hardware stack levels used:    1
 18718 ;; Hardware stack levels required when called:    4
 18719 ;; This function calls:
 18720 ;;		Nothing
 18721 ;; This function is called by:
 18722 ;;		_secret_check
 18723 ;; This function uses a non-reentrant model
 18724 ;;
 18725                           
 18726                           
 18727                           ;psect for function ___bmul
 18728  27DC                     ___bmul:	
 18729                           
 18730                           ;incstack = 0
 18731                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 18732                           ;___bmul@multiplier stored from wreg
 18733  27DC  00F4               	movwf	___bmul@multiplier
 18734  27DD  01F3               	clrf	___bmul@product
 18735  27DE                     l6439:	
 18736  27DE  1C74               	btfss	___bmul@multiplier,0
 18737  27DF  2FE4               	goto	l6443
 18738  27E0  0871               	movf	___bmul@multiplicand,w
 18739  27E1  00F2               	movwf	??___bmul
 18740  27E2  0872               	movf	??___bmul,w
 18741  27E3  07F3               	addwf	___bmul@product,f
 18742  27E4                     l6443:	
 18743  27E4  1003               	clrc
 18744  27E5  0DF1               	rlf	___bmul@multiplicand,f
 18745  27E6  1003               	clrc
 18746  27E7  0CF4               	rrf	___bmul@multiplier,f
 18747  27E8  0874               	movf	___bmul@multiplier,w
 18748  27E9  1D03               	btfss	3,2
 18749  27EA  2FDE               	goto	l6439
 18750  27EB  0873               	movf	___bmul@product,w
 18751  27EC  0008               	return
 18752  27ED                     __end_of___bmul:	
 18753                           
 18754                           	psect	text21
 18755  1BE3                     __ptext21:	
 18756 ;; *************** function _menu_run_option *****************
 18757 ;; Defined at:
 18758 ;;		line 177 in file "menu_task.c"
 18759 ;; Parameters:    Size  Location     Type
 18760 ;;  data            2   27[BANK0 ] PTR struct t_menu_taskDa
 18761 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18762 ;;		 -> flashy_TaskData(30), NULL(0), 
 18763 ;; Auto vars:     Size  Location     Type
 18764 ;;		None
 18765 ;; Return value:  Size  Location     Type
 18766 ;;                  1    wreg      void 
 18767 ;; Registers used:
 18768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18769 ;; Tracked objects:
 18770 ;;		On entry : 0/0
 18771 ;;		On exit  : 0/0
 18772 ;;		Unchanged: 0/0
 18773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18778 ;;Total ram usage:        2 bytes
 18779 ;; Hardware stack levels used:    1
 18780 ;; Hardware stack levels required when called:   11
 18781 ;; This function calls:
 18782 ;;		_menu_clear
 18783 ;; This function is called by:
 18784 ;;		_menu_Main
 18785 ;; This function uses a non-reentrant model
 18786 ;;
 18787                           
 18788                           
 18789                           ;psect for function _menu_run_option
 18790  1BE3                     _menu_run_option:	
 18791                           
 18792                           ;menu_task.c: 178: switch (menu_option_idx){
 18793                           
 18794                           ;incstack = 0
 18795                           ; Regs used in _menu_run_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18796  1BE3  2C0B               	goto	l6543
 18797  1BE4                     l6529:	
 18798                           ;menu_task.c: 179: case 1:
 18799                           
 18800                           
 18801                           ;menu_task.c: 180: menu_clear(data);
 18802  1BE4  0020               	movlb	0	; select bank0
 18803  1BE5  083C               	movf	menu_run_option@data+1,w
 18804  1BE6  00BA               	movwf	menu_clear@data+1
 18805  1BE7  083B               	movf	menu_run_option@data,w
 18806  1BE8  00B9               	movwf	menu_clear@data
 18807  1BE9  3192  2205         	fcall	_menu_clear
 18808                           
 18809                           ;menu_task.c: 181: currentTask = SLOT_TASK;
 18810  1BEB  3001               	movlw	1
 18811  1BEC  0021               	movlb	1	; select bank1
 18812  1BED  00B4               	movwf	_currentTask^(0+128)
 18813  1BEE  3000               	movlw	0
 18814  1BEF  00B5               	movwf	(_currentTask^(0+128)+1)
 18815                           
 18816                           ;menu_task.c: 182: break;
 18817  1BF0  0008               	return
 18818  1BF1                     l6533:	
 18819                           ;menu_task.c: 183: case 2:
 18820                           
 18821                           
 18822                           ;menu_task.c: 184: menu_clear(data);
 18823  1BF1  0020               	movlb	0	; select bank0
 18824  1BF2  083C               	movf	menu_run_option@data+1,w
 18825  1BF3  00BA               	movwf	menu_clear@data+1
 18826  1BF4  083B               	movf	menu_run_option@data,w
 18827  1BF5  00B9               	movwf	menu_clear@data
 18828  1BF6  3192  2205         	fcall	_menu_clear
 18829                           
 18830                           ;menu_task.c: 185: currentTask = LOCKED_TASK;
 18831  1BF8  3003               	movlw	3
 18832  1BF9  0021               	movlb	1	; select bank1
 18833  1BFA  00B4               	movwf	_currentTask^(0+128)
 18834  1BFB  3000               	movlw	0
 18835  1BFC  00B5               	movwf	(_currentTask^(0+128)+1)
 18836                           
 18837                           ;menu_task.c: 186: break;
 18838  1BFD  0008               	return
 18839  1BFE                     l6537:	
 18840                           ;menu_task.c: 187: case 3:
 18841                           
 18842                           
 18843                           ;menu_task.c: 188: menu_clear(data);
 18844  1BFE  0020               	movlb	0	; select bank0
 18845  1BFF  083C               	movf	menu_run_option@data+1,w
 18846  1C00  00BA               	movwf	menu_clear@data+1
 18847  1C01  083B               	movf	menu_run_option@data,w
 18848  1C02  00B9               	movwf	menu_clear@data
 18849  1C03  3192  2205         	fcall	_menu_clear
 18850                           
 18851                           ;menu_task.c: 189: currentTask = FLASHY_TASK;
 18852  1C05  3002               	movlw	2
 18853  1C06  0021               	movlb	1	; select bank1
 18854  1C07  00B4               	movwf	_currentTask^(0+128)
 18855  1C08  3000               	movlw	0
 18856  1C09  00B5               	movwf	(_currentTask^(0+128)+1)
 18857                           
 18858                           ;menu_task.c: 191: }
 18859                           
 18860                           ;menu_task.c: 190: break;
 18861  1C0A  0008               	return
 18862  1C0B                     l6543:	
 18863                           
 18864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18865                           ; Switch size 1, requested type "space"
 18866                           ; Number of cases is 1, Range of values is 0 to 0
 18867                           ; switch strategies available:
 18868                           ; Name         Instructions Cycles
 18869                           ; simple_byte            4     3 (average)
 18870                           ; direct_byte            8     6 (fixed)
 18871                           ; jumptable            260     6 (fixed)
 18872                           ;	Chosen strategy is simple_byte
 18873  1C0B  0021               	movlb	1	; select bank1
 18874  1C0C  0833               	movf	(_menu_option_idx+1)^(0+128),w
 18875  1C0D  3A00               	xorlw	0	; case 0
 18876  1C0E  1903               	skipnz
 18877  1C0F  2C11               	goto	l8153
 18878  1C10  2C1C               	goto	l971
 18879  1C11                     l8153:	
 18880                           
 18881                           ; Switch size 1, requested type "space"
 18882                           ; Number of cases is 3, Range of values is 1 to 3
 18883                           ; switch strategies available:
 18884                           ; Name         Instructions Cycles
 18885                           ; simple_byte           10     6 (average)
 18886                           ; direct_byte           15     9 (fixed)
 18887                           ; jumptable            263     9 (fixed)
 18888                           ;	Chosen strategy is simple_byte
 18889  1C11  0832               	movf	_menu_option_idx^(0+128),w
 18890  1C12  3A01               	xorlw	1	; case 1
 18891  1C13  1903               	skipnz
 18892  1C14  2BE4               	goto	l6529
 18893  1C15  3A03               	xorlw	3	; case 2
 18894  1C16  1903               	skipnz
 18895  1C17  2BF1               	goto	l6533
 18896  1C18  3A01               	xorlw	1	; case 3
 18897  1C19  1903               	skipnz
 18898  1C1A  2BFE               	goto	l6537
 18899  1C1B  2C1C               	goto	l971
 18900  1C1C                     l971:	
 18901  1C1C  0008               	return
 18902  1C1D                     __end_of_menu_run_option:	
 18903                           
 18904                           	psect	text22
 18905  1205                     __ptext22:	
 18906 ;; *************** function _menu_clear *****************
 18907 ;; Defined at:
 18908 ;;		line 194 in file "menu_task.c"
 18909 ;; Parameters:    Size  Location     Type
 18910 ;;  data            2   25[BANK0 ] PTR struct t_menu_taskDa
 18911 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18912 ;;		 -> flashy_TaskData(30), NULL(0), 
 18913 ;; Auto vars:     Size  Location     Type
 18914 ;;		None
 18915 ;; Return value:  Size  Location     Type
 18916 ;;                  1    wreg      void 
 18917 ;; Registers used:
 18918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18919 ;; Tracked objects:
 18920 ;;		On entry : 0/0
 18921 ;;		On exit  : 0/0
 18922 ;;		Unchanged: 0/0
 18923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18928 ;;Total ram usage:        2 bytes
 18929 ;; Hardware stack levels used:    1
 18930 ;; Hardware stack levels required when called:   10
 18931 ;; This function calls:
 18932 ;;		_nullifyBadge_segDisplayErase
 18933 ;;		_nullifyBadge_userLedsClr
 18934 ;; This function is called by:
 18935 ;;		_menu_Main
 18936 ;;		_menu_run_option
 18937 ;; This function uses a non-reentrant model
 18938 ;;
 18939                           
 18940                           
 18941                           ;psect for function _menu_clear
 18942  1205                     _menu_clear:	
 18943                           
 18944                           ;menu_task.c: 196: data->delayTickCount = 50;
 18945                           
 18946                           ;incstack = 0
 18947                           ; Regs used in _menu_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18948  1205  0020               	movlb	0	; select bank0
 18949  1206  0839               	movf	menu_clear@data,w
 18950  1207  0086               	movwf	6
 18951  1208  083A               	movf	menu_clear@data+1,w
 18952  1209  0087               	movwf	7
 18953  120A  3142               	addfsr 1,2
 18954  120B  3032               	movlw	50
 18955  120C  3FC0               	movwi [0]fsr1
 18956  120D  3000               	movlw	0
 18957  120E  3FC1               	movwi [1]fsr1
 18958                           
 18959                           ;menu_task.c: 197: data->holdCountA = 0;
 18960  120F  0839               	movf	menu_clear@data,w
 18961  1210  0086               	movwf	6
 18962  1211  083A               	movf	menu_clear@data+1,w
 18963  1212  0087               	movwf	7
 18964  1213  3144               	addfsr 1,4
 18965  1214  3000               	movlw	0
 18966  1215  3FC0               	movwi [0]fsr1
 18967  1216  3FC1               	movwi [1]fsr1
 18968                           
 18969                           ;menu_task.c: 198: data->holdCountB = 0;
 18970  1217  0839               	movf	menu_clear@data,w
 18971  1218  0086               	movwf	6
 18972  1219  083A               	movf	menu_clear@data+1,w
 18973  121A  0087               	movwf	7
 18974  121B  3146               	addfsr 1,6
 18975  121C  3000               	movlw	0
 18976  121D  3FC0               	movwi [0]fsr1
 18977  121E  3FC1               	movwi [1]fsr1
 18978                           
 18979                           ;menu_task.c: 199: data->holdCountX = 0;
 18980  121F  0839               	movf	menu_clear@data,w
 18981  1220  0086               	movwf	6
 18982  1221  083A               	movf	menu_clear@data+1,w
 18983  1222  0087               	movwf	7
 18984  1223  3148               	addfsr 1,8
 18985  1224  3000               	movlw	0
 18986  1225  3FC0               	movwi [0]fsr1
 18987  1226  3FC1               	movwi [1]fsr1
 18988                           
 18989                           ;menu_task.c: 200: data->holdCountY = 0;
 18990  1227  0839               	movf	menu_clear@data,w
 18991  1228  0086               	movwf	6
 18992  1229  083A               	movf	menu_clear@data+1,w
 18993  122A  0087               	movwf	7
 18994  122B  314A               	addfsr 1,10
 18995  122C  3000               	movlw	0
 18996  122D  3FC0               	movwi [0]fsr1
 18997  122E  3FC1               	movwi [1]fsr1
 18998                           
 18999                           ;menu_task.c: 201: data->noholdCount = 0;
 19000  122F  0839               	movf	menu_clear@data,w
 19001  1230  0086               	movwf	6
 19002  1231  083A               	movf	menu_clear@data+1,w
 19003  1232  0087               	movwf	7
 19004  1233  314C               	addfsr 1,12
 19005  1234  3000               	movlw	0
 19006  1235  3FC0               	movwi [0]fsr1
 19007  1236  3FC1               	movwi [1]fsr1
 19008                           
 19009                           ;menu_task.c: 203: menu_option_idx = 0;
 19010  1237  0021               	movlb	1	; select bank1
 19011  1238  01B2               	clrf	_menu_option_idx^(0+128)
 19012  1239  01B3               	clrf	(_menu_option_idx+1)^(0+128)
 19013                           
 19014                           ;menu_task.c: 206: nullifyBadge_userLedsClr(data->badge);
 19015  123A  0020               	movlb	0	; select bank0
 19016  123B  0839               	movf	menu_clear@data,w
 19017  123C  0086               	movwf	6
 19018  123D  083A               	movf	menu_clear@data+1,w
 19019  123E  0087               	movwf	7
 19020  123F  0801               	movf	1,w
 19021  1240  31A6  2690  3192   	fcall	_nullifyBadge_userLedsClr
 19022                           
 19023                           ;menu_task.c: 207: nullifyBadge_segDisplayErase(data->badge);
 19024  1243  0020               	movlb	0	; select bank0
 19025  1244  0839               	movf	menu_clear@data,w
 19026  1245  0086               	movwf	6
 19027  1246  083A               	movf	menu_clear@data+1,w
 19028  1247  0087               	movwf	7
 19029  1248  0801               	movf	1,w
 19030  1249  31A6  268A         	fcall	_nullifyBadge_segDisplayErase
 19031  124B  0008               	return
 19032  124C                     __end_of_menu_clear:	
 19033                           
 19034                           	psect	text23
 19035  124C                     __ptext23:	
 19036 ;; *************** function _menu_display_option *****************
 19037 ;; Defined at:
 19038 ;;		line 158 in file "menu_task.c"
 19039 ;; Parameters:    Size  Location     Type
 19040 ;;  data            2   44[BANK0 ] PTR struct t_menu_taskDa
 19041 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19042 ;;		 -> flashy_TaskData(30), NULL(0), 
 19043 ;; Auto vars:     Size  Location     Type
 19044 ;;  led             2   48[BANK0 ] unsigned int 
 19045 ;;  size            2   46[BANK0 ] unsigned int 
 19046 ;; Return value:  Size  Location     Type
 19047 ;;                  1    wreg      void 
 19048 ;; Registers used:
 19049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19050 ;; Tracked objects:
 19051 ;;		On entry : 0/0
 19052 ;;		On exit  : 0/0
 19053 ;;		Unchanged: 0/0
 19054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19056 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19058 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19059 ;;Total ram usage:        6 bytes
 19060 ;; Hardware stack levels used:    1
 19061 ;; Hardware stack levels required when called:   10
 19062 ;; This function calls:
 19063 ;;		___lwmod
 19064 ;;		_marquee
 19065 ;;		_nullifyBadge_segDisplayForceUpdate
 19066 ;;		_nullifyBadge_segDisplayPutStr
 19067 ;;		_nullifyBadge_userLedsSet
 19068 ;; This function is called by:
 19069 ;;		_menu_Main
 19070 ;; This function uses a non-reentrant model
 19071 ;;
 19072                           
 19073                           
 19074                           ;psect for function _menu_display_option
 19075  124C                     _menu_display_option:	
 19076                           
 19077                           ;menu_task.c: 159: u16 size = sizeof(menu_options_leds)/sizeof(menu_options_leds[0]);
 19078                           
 19079                           ;incstack = 0
 19080                           ; Regs used in _menu_display_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19081  124C  3005               	movlw	5
 19082  124D  0020               	movlb	0	; select bank0
 19083  124E  00CE               	movwf	menu_display_option@size
 19084  124F  3000               	movlw	0
 19085  1250  00CF               	movwf	menu_display_option@size+1
 19086                           
 19087                           ;menu_task.c: 160: u16 led = menu_options_leds[menu_option_idx % size];
 19088  1251  084F               	movf	menu_display_option@size+1,w
 19089  1252  00A1               	movwf	___lwmod@divisor+1
 19090  1253  084E               	movf	menu_display_option@size,w
 19091  1254  00A0               	movwf	___lwmod@divisor
 19092  1255  0021               	movlb	1	; select bank1
 19093  1256  0833               	movf	(_menu_option_idx+1)^(0+128),w
 19094  1257  0020               	movlb	0	; select bank0
 19095  1258  00A3               	movwf	___lwmod@dividend+1
 19096  1259  0021               	movlb	1	; select bank1
 19097  125A  0832               	movf	_menu_option_idx^(0+128),w
 19098  125B  0020               	movlb	0	; select bank0
 19099  125C  00A2               	movwf	___lwmod@dividend
 19100  125D  319A  224E  3192   	fcall	___lwmod
 19101  1260  0020               	movlb	0	; select bank0
 19102  1261  0820               	movf	?___lwmod,w
 19103  1262  0709               	addwf	9,w
 19104  1263  3EA0               	addlw	(low (_menu_options_leds| (0+256)))& (0+255)
 19105  1264  0086               	movwf	6
 19106  1265  3001               	movlw	1	; select bank3/4
 19107  1266  0087               	movwf	7
 19108  1267  3F40               	moviw [0]fsr1
 19109  1268  00D0               	movwf	menu_display_option@led
 19110  1269  3F41               	moviw [1]fsr1
 19111  126A  00D1               	movwf	menu_display_option@led+1
 19112                           
 19113                           ;menu_task.c: 166: nullifyBadge_userLedsSet(data->badge, led);
 19114  126B  0851               	movf	menu_display_option@led+1,w
 19115  126C  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 19116  126D  0850               	movf	menu_display_option@led,w
 19117  126E  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 19118  126F  084C               	movf	menu_display_option@data,w
 19119  1270  0086               	movwf	6
 19120  1271  084D               	movf	menu_display_option@data+1,w
 19121  1272  0087               	movwf	7
 19122  1273  0801               	movf	1,w
 19123  1274  31A7  2754  3192   	fcall	_nullifyBadge_userLedsSet
 19124                           
 19125                           ;menu_task.c: 168: if (menu_option_idx == 0){
 19126  1277  0021               	movlb	1	; select bank1
 19127  1278  0832               	movf	_menu_option_idx^(0+128),w
 19128  1279  0433               	iorwf	(_menu_option_idx+1)^(0+128),w
 19129  127A  1D03               	btfss	3,2
 19130  127B  2A97               	goto	l6525
 19131                           
 19132                           ;menu_task.c: 169: nullifyBadge_segDisplayPutStr(data->badge, menu_option[menu_option_id
      +                          x]);
 19133  127C  3532               	lslf	_menu_option_idx^(0+128),w
 19134  127D  3E5B               	addlw	(low (_menu_option| (0+256)))& (0+255)
 19135  127E  0086               	movwf	6
 19136  127F  3001               	movlw	1	; select bank2/3
 19137  1280  0087               	movwf	7
 19138  1281  3F40               	moviw [0]fsr1
 19139  1282  0020               	movlb	0	; select bank0
 19140  1283  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 19141  1284  3F41               	moviw [1]fsr1
 19142  1285  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 19143  1286  084C               	movf	menu_display_option@data,w
 19144  1287  0086               	movwf	6
 19145  1288  084D               	movf	menu_display_option@data+1,w
 19146  1289  0087               	movwf	7
 19147  128A  0801               	movf	1,w
 19148  128B  31A6  26CC  3192   	fcall	_nullifyBadge_segDisplayPutStr
 19149                           
 19150                           ;menu_task.c: 170: nullifyBadge_segDisplayForceUpdate(data->badge);
 19151  128E  0020               	movlb	0	; select bank0
 19152  128F  084C               	movf	menu_display_option@data,w
 19153  1290  0086               	movwf	6
 19154  1291  084D               	movf	menu_display_option@data+1,w
 19155  1292  0087               	movwf	7
 19156  1293  0801               	movf	1,w
 19157  1294  31A6  2684         	fcall	_nullifyBadge_segDisplayForceUpdate
 19158                           
 19159                           ;menu_task.c: 171: }
 19160  1296  0008               	return
 19161  1297                     l6525:	
 19162                           
 19163                           ;menu_task.c: 172: else {
 19164                           ;menu_task.c: 173: marquee(menu_option[menu_option_idx], data->noholdCount);
 19165  1297  0021               	movlb	1	; select bank1
 19166  1298  3532               	lslf	_menu_option_idx^(0+128),w
 19167  1299  3E5B               	addlw	(low (_menu_option| (0+256)))& (0+255)
 19168  129A  0086               	movwf	6
 19169  129B  3001               	movlw	1	; select bank2/3
 19170  129C  0087               	movwf	7
 19171  129D  3F40               	moviw [0]fsr1
 19172  129E  0020               	movlb	0	; select bank0
 19173  129F  00BA               	movwf	marquee@string
 19174  12A0  3F41               	moviw [1]fsr1
 19175  12A1  00BB               	movwf	marquee@string+1
 19176  12A2  084C               	movf	menu_display_option@data,w
 19177  12A3  0086               	movwf	6
 19178  12A4  084D               	movf	menu_display_option@data+1,w
 19179  12A5  0087               	movwf	7
 19180  12A6  314C               	addfsr 1,12
 19181  12A7  3F40               	moviw [0]fsr1
 19182  12A8  00BC               	movwf	marquee@count
 19183  12A9  3F41               	moviw [1]fsr1
 19184  12AA  00BD               	movwf	marquee@count+1
 19185  12AB  3193  23E6         	fcall	_marquee
 19186  12AD  0008               	return
 19187  12AE                     __end_of_menu_display_option:	
 19188                           
 19189                           	psect	text24
 19190  27ED                     __ptext24:	
 19191 ;; *************** function _locked_unlock_leds *****************
 19192 ;; Defined at:
 19193 ;;		line 36 in file "locked_task.c"
 19194 ;; Parameters:    Size  Location     Type
 19195 ;;		None
 19196 ;; Auto vars:     Size  Location     Type
 19197 ;;		None
 19198 ;; Return value:  Size  Location     Type
 19199 ;;                  2  1174[None  ] unsigned int 
 19200 ;; Registers used:
 19201 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19202 ;; Tracked objects:
 19203 ;;		On entry : 0/0
 19204 ;;		On exit  : 0/0
 19205 ;;		Unchanged: 0/0
 19206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19209 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19211 ;;Total ram usage:        2 bytes
 19212 ;; Hardware stack levels used:    1
 19213 ;; Hardware stack levels required when called:    4
 19214 ;; This function calls:
 19215 ;;		Nothing
 19216 ;; This function is called by:
 19217 ;;		_locked_Main
 19218 ;; This function uses a non-reentrant model
 19219 ;;
 19220                           
 19221                           
 19222                           ;psect for function _locked_unlock_leds
 19223  27ED                     _locked_unlock_leds:	
 19224                           
 19225                           ;locked_task.c: 37: locked_locking_leds_idx = 0;
 19226                           
 19227                           ;incstack = 0
 19228                           ; Regs used in _locked_unlock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19229  27ED  0021               	movlb	1	; select bank1
 19230  27EE  01A2               	clrf	_locked_locking_leds_idx^(0+128)
 19231  27EF  01A3               	clrf	(_locked_locking_leds_idx+1)^(0+128)
 19232                           
 19233                           ;locked_task.c: 38: locked_leds = locked_lock_base_leds | locked_locking_leds[locked_loc
      +                          king_leds_idx];
 19234  27F0  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19235  27F1  3E47               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19236  27F2  0086               	movwf	6
 19237  27F3  3001               	movlw	1	; select bank2/3
 19238  27F4  0087               	movwf	7
 19239  27F5  3F40               	moviw [0]fsr1
 19240  27F6  00F1               	movwf	??_locked_unlock_leds
 19241  27F7  3F41               	moviw [1]fsr1
 19242  27F8  00F2               	movwf	??_locked_unlock_leds+1
 19243  27F9  085E               	movf	_locked_lock_base_leds^(0+128),w
 19244  27FA  0471               	iorwf	??_locked_unlock_leds,w
 19245  27FB  00A0               	movwf	_locked_leds^(0+128)
 19246  27FC  085F               	movf	(_locked_lock_base_leds+1)^(0+128),w
 19247  27FD  0472               	iorwf	??_locked_unlock_leds+1,w
 19248  27FE  00A1               	movwf	(_locked_leds+1)^(0+128)
 19249  27FF  0008               	return
 19250  2800                     __end_of_locked_unlock_leds:	
 19251                           ;locked_task.c: 39: return locked_leds;
 19252                           ;	Return value of _locked_unlock_leds is never used
 19253                           
 19254                           
 19255                           	psect	text25
 19256  18A3                     __ptext25:	
 19257 ;; *************** function _locked_lock_leds *****************
 19258 ;; Defined at:
 19259 ;;		line 28 in file "locked_task.c"
 19260 ;; Parameters:    Size  Location     Type
 19261 ;;		None
 19262 ;; Auto vars:     Size  Location     Type
 19263 ;;  size            2    3[COMMON] unsigned int 
 19264 ;; Return value:  Size  Location     Type
 19265 ;;                  2  1171[None  ] unsigned int 
 19266 ;; Registers used:
 19267 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19268 ;; Tracked objects:
 19269 ;;		On entry : 0/0
 19270 ;;		On exit  : 0/0
 19271 ;;		Unchanged: 0/0
 19272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19277 ;;Total ram usage:        4 bytes
 19278 ;; Hardware stack levels used:    1
 19279 ;; Hardware stack levels required when called:    4
 19280 ;; This function calls:
 19281 ;;		Nothing
 19282 ;; This function is called by:
 19283 ;;		_locked_Init
 19284 ;;		_locked_Main
 19285 ;; This function uses a non-reentrant model
 19286 ;;
 19287                           
 19288                           
 19289                           ;psect for function _locked_lock_leds
 19290  18A3                     _locked_lock_leds:	
 19291                           
 19292                           ;locked_task.c: 29: u16 size = sizeof(locked_locking_leds) / sizeof(locked_locking_leds[
      +                          0]);
 19293                           
 19294                           ;incstack = 0
 19295                           ; Regs used in _locked_lock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19296  18A3  3006               	movlw	6
 19297  18A4  00F3               	movwf	locked_lock_leds@size
 19298  18A5  3000               	movlw	0
 19299  18A6  00F4               	movwf	locked_lock_leds@size+1
 19300                           
 19301                           ;locked_task.c: 30: locked_locking_leds_idx = size - 1;
 19302  18A7  0873               	movf	locked_lock_leds@size,w
 19303  18A8  3EFF               	addlw	255
 19304  18A9  0021               	movlb	1	; select bank1
 19305  18AA  00A2               	movwf	_locked_locking_leds_idx^(0+128)
 19306  18AB  30FF               	movlw	255
 19307  18AC  3D74               	addwfc	locked_lock_leds@size+1,w
 19308  18AD  00A3               	movwf	(_locked_locking_leds_idx+1)^(0+128)
 19309                           
 19310                           ;locked_task.c: 31: locked_leds = locked_lock_base_leds | locked_locking_leds[locked_loc
      +                          king_leds_idx];
 19311  18AE  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19312  18AF  3E47               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19313  18B0  0086               	movwf	6
 19314  18B1  3001               	movlw	1	; select bank2/3
 19315  18B2  0087               	movwf	7
 19316  18B3  3F40               	moviw [0]fsr1
 19317  18B4  00F1               	movwf	??_locked_lock_leds
 19318  18B5  3F41               	moviw [1]fsr1
 19319  18B6  00F2               	movwf	??_locked_lock_leds+1
 19320  18B7  085E               	movf	_locked_lock_base_leds^(0+128),w
 19321  18B8  0471               	iorwf	??_locked_lock_leds,w
 19322  18B9  00A0               	movwf	_locked_leds^(0+128)
 19323  18BA  085F               	movf	(_locked_lock_base_leds+1)^(0+128),w
 19324  18BB  0472               	iorwf	??_locked_lock_leds+1,w
 19325  18BC  00A1               	movwf	(_locked_leds+1)^(0+128)
 19326  18BD  0008               	return
 19327  18BE                     __end_of_locked_lock_leds:	
 19328                           ;locked_task.c: 32: return locked_leds;
 19329                           ;	Return value of _locked_lock_leds is never used
 19330                           
 19331                           
 19332                           	psect	text26
 19333  1854                     __ptext26:	
 19334 ;; *************** function _locked_get_unlock_leds *****************
 19335 ;; Defined at:
 19336 ;;		line 53 in file "locked_task.c"
 19337 ;; Parameters:    Size  Location     Type
 19338 ;;		None
 19339 ;; Auto vars:     Size  Location     Type
 19340 ;;  leds            2    3[COMMON] unsigned int 
 19341 ;; Return value:  Size  Location     Type
 19342 ;;                  2    1[COMMON] unsigned int 
 19343 ;; Registers used:
 19344 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19345 ;; Tracked objects:
 19346 ;;		On entry : 0/0
 19347 ;;		On exit  : 0/0
 19348 ;;		Unchanged: 0/0
 19349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19353 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19354 ;;Total ram usage:        4 bytes
 19355 ;; Hardware stack levels used:    1
 19356 ;; Hardware stack levels required when called:    4
 19357 ;; This function calls:
 19358 ;;		Nothing
 19359 ;; This function is called by:
 19360 ;;		_locked_Main
 19361 ;; This function uses a non-reentrant model
 19362 ;;
 19363                           
 19364                           
 19365                           ;psect for function _locked_get_unlock_leds
 19366  1854                     _locked_get_unlock_leds:	
 19367                           
 19368                           ;locked_task.c: 54: u16 leds = locked_locking_leds[locked_locking_leds_idx];
 19369                           
 19370                           ;incstack = 0
 19371                           ; Regs used in _locked_get_unlock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19372  1854  0021               	movlb	1	; select bank1
 19373  1855  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19374  1856  3E47               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19375  1857  0086               	movwf	6
 19376  1858  3001               	movlw	1	; select bank2/3
 19377  1859  0087               	movwf	7
 19378  185A  3F40               	moviw [0]fsr1
 19379  185B  00F3               	movwf	locked_get_unlock_leds@leds
 19380  185C  3F41               	moviw [1]fsr1
 19381  185D  00F4               	movwf	locked_get_unlock_leds@leds+1
 19382                           
 19383                           ;locked_task.c: 57: if (locked_locking_leds_idx > 0){
 19384  185E  0822               	movf	_locked_locking_leds_idx^(0+128),w
 19385  185F  0423               	iorwf	(_locked_locking_leds_idx+1)^(0+128),w
 19386  1860  1903               	btfsc	3,2
 19387  1861  2866               	goto	l1182
 19388                           
 19389                           ;locked_task.c: 58: locked_locking_leds_idx -= 1;
 19390  1862  3001               	movlw	1
 19391  1863  02A2               	subwf	_locked_locking_leds_idx^(0+128),f
 19392  1864  3000               	movlw	0
 19393  1865  3BA3               	subwfb	(_locked_locking_leds_idx+1)^(0+128),f
 19394  1866                     l1182:	
 19395                           
 19396                           ;locked_task.c: 59: }
 19397                           ;locked_task.c: 60: return locked_lock_base_leds | leds;
 19398  1866  0873               	movf	locked_get_unlock_leds@leds,w
 19399  1867  045E               	iorwf	_locked_lock_base_leds^(0+128),w
 19400  1868  00F1               	movwf	?_locked_get_unlock_leds
 19401  1869  0874               	movf	locked_get_unlock_leds@leds+1,w
 19402  186A  045F               	iorwf	(_locked_lock_base_leds+1)^(0+128),w
 19403  186B  00F2               	movwf	?_locked_get_unlock_leds+1
 19404  186C  0008               	return
 19405  186D                     __end_of_locked_get_unlock_leds:	
 19406                           
 19407                           	psect	text27
 19408  19D9                     __ptext27:	
 19409 ;; *************** function _locked_get_lock_leds *****************
 19410 ;; Defined at:
 19411 ;;		line 42 in file "locked_task.c"
 19412 ;; Parameters:    Size  Location     Type
 19413 ;;		None
 19414 ;; Auto vars:     Size  Location     Type
 19415 ;;  leds            2    7[COMMON] unsigned int 
 19416 ;;  size            2    5[COMMON] unsigned int 
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  2    1[COMMON] unsigned int 
 19419 ;; Registers used:
 19420 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19427 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19429 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19430 ;;Total ram usage:        8 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; Hardware stack levels required when called:    4
 19433 ;; This function calls:
 19434 ;;		Nothing
 19435 ;; This function is called by:
 19436 ;;		_locked_Main
 19437 ;; This function uses a non-reentrant model
 19438 ;;
 19439                           
 19440                           
 19441                           ;psect for function _locked_get_lock_leds
 19442  19D9                     _locked_get_lock_leds:	
 19443                           
 19444                           ;locked_task.c: 43: u16 size = sizeof(locked_locking_leds) / sizeof(locked_locking_leds[
      +                          0]);
 19445                           
 19446                           ;incstack = 0
 19447                           ; Regs used in _locked_get_lock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19448  19D9  3006               	movlw	6
 19449  19DA  00F5               	movwf	locked_get_lock_leds@size
 19450  19DB  3000               	movlw	0
 19451  19DC  00F6               	movwf	locked_get_lock_leds@size+1
 19452                           
 19453                           ;locked_task.c: 44: u16 leds = locked_locking_leds[locked_locking_leds_idx];
 19454  19DD  0021               	movlb	1	; select bank1
 19455  19DE  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19456  19DF  3E47               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19457  19E0  0086               	movwf	6
 19458  19E1  3001               	movlw	1	; select bank2/3
 19459  19E2  0087               	movwf	7
 19460  19E3  3F40               	moviw [0]fsr1
 19461  19E4  00F7               	movwf	locked_get_lock_leds@leds
 19462  19E5  3F41               	moviw [1]fsr1
 19463  19E6  00F8               	movwf	locked_get_lock_leds@leds+1
 19464                           
 19465                           ;locked_task.c: 47: if (locked_locking_leds_idx < size - 1){
 19466  19E7  0875               	movf	locked_get_lock_leds@size,w
 19467  19E8  3EFF               	addlw	255
 19468  19E9  00F3               	movwf	??_locked_get_lock_leds
 19469  19EA  30FF               	movlw	255
 19470  19EB  3D76               	addwfc	locked_get_lock_leds@size+1,w
 19471  19EC  00F4               	movwf	??_locked_get_lock_leds+1
 19472  19ED  0874               	movf	??_locked_get_lock_leds+1,w
 19473  19EE  0223               	subwf	(_locked_locking_leds_idx+1)^(0+128),w
 19474  19EF  1D03               	skipz
 19475  19F0  29F3               	goto	u3845
 19476  19F1  0873               	movf	??_locked_get_lock_leds,w
 19477  19F2  0222               	subwf	_locked_locking_leds_idx^(0+128),w
 19478  19F3                     u3845:	
 19479  19F3  1803               	skipnc
 19480  19F4  29F9               	goto	l1178
 19481                           
 19482                           ;locked_task.c: 48: locked_locking_leds_idx += 1;
 19483  19F5  3001               	movlw	1
 19484  19F6  07A2               	addwf	_locked_locking_leds_idx^(0+128),f
 19485  19F7  3000               	movlw	0
 19486  19F8  3DA3               	addwfc	(_locked_locking_leds_idx+1)^(0+128),f
 19487  19F9                     l1178:	
 19488                           
 19489                           ;locked_task.c: 49: }
 19490                           ;locked_task.c: 50: return leds;
 19491  19F9  0878               	movf	locked_get_lock_leds@leds+1,w
 19492  19FA  00F2               	movwf	?_locked_get_lock_leds+1
 19493  19FB  0877               	movf	locked_get_lock_leds@leds,w
 19494  19FC  00F1               	movwf	?_locked_get_lock_leds
 19495  19FD  0008               	return
 19496  19FE                     __end_of_locked_get_lock_leds:	
 19497                           
 19498                           	psect	text28
 19499  1D1D                     __ptext28:	
 19500 ;; *************** function _locked_clear *****************
 19501 ;; Defined at:
 19502 ;;		line 184 in file "locked_task.c"
 19503 ;; Parameters:    Size  Location     Type
 19504 ;;  data            2   25[BANK0 ] PTR struct t_locked_task
 19505 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19506 ;;		 -> flashy_TaskData(30), NULL(0), 
 19507 ;; Auto vars:     Size  Location     Type
 19508 ;;		None
 19509 ;; Return value:  Size  Location     Type
 19510 ;;                  1    wreg      void 
 19511 ;; Registers used:
 19512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19513 ;; Tracked objects:
 19514 ;;		On entry : 0/0
 19515 ;;		On exit  : 0/0
 19516 ;;		Unchanged: 0/0
 19517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19518 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19521 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19522 ;;Total ram usage:        2 bytes
 19523 ;; Hardware stack levels used:    1
 19524 ;; Hardware stack levels required when called:   10
 19525 ;; This function calls:
 19526 ;;		_nullifyBadge_segDisplayErase
 19527 ;;		_nullifyBadge_userLedsClr
 19528 ;; This function is called by:
 19529 ;;		_locked_Main
 19530 ;; This function uses a non-reentrant model
 19531 ;;
 19532                           
 19533                           
 19534                           ;psect for function _locked_clear
 19535  1D1D                     _locked_clear:	
 19536                           
 19537                           ;locked_task.c: 186: data->delayTickCount = 0;
 19538                           
 19539                           ;incstack = 0
 19540                           ; Regs used in _locked_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19541  1D1D  0020               	movlb	0	; select bank0
 19542  1D1E  0839               	movf	locked_clear@data,w
 19543  1D1F  0086               	movwf	6
 19544  1D20  083A               	movf	locked_clear@data+1,w
 19545  1D21  0087               	movwf	7
 19546  1D22  3141               	addfsr 1,1
 19547  1D23  3000               	movlw	0
 19548  1D24  3FC0               	movwi [0]fsr1
 19549  1D25  3FC1               	movwi [1]fsr1
 19550                           
 19551                           ;locked_task.c: 187: data->holdCountA = 0;
 19552  1D26  0839               	movf	locked_clear@data,w
 19553  1D27  0086               	movwf	6
 19554  1D28  083A               	movf	locked_clear@data+1,w
 19555  1D29  0087               	movwf	7
 19556  1D2A  3143               	addfsr 1,3
 19557  1D2B  3000               	movlw	0
 19558  1D2C  3FC0               	movwi [0]fsr1
 19559  1D2D  3FC1               	movwi [1]fsr1
 19560                           
 19561                           ;locked_task.c: 188: data->holdCountB = 0;
 19562  1D2E  0839               	movf	locked_clear@data,w
 19563  1D2F  0086               	movwf	6
 19564  1D30  083A               	movf	locked_clear@data+1,w
 19565  1D31  0087               	movwf	7
 19566  1D32  3145               	addfsr 1,5
 19567  1D33  3000               	movlw	0
 19568  1D34  3FC0               	movwi [0]fsr1
 19569  1D35  3FC1               	movwi [1]fsr1
 19570                           
 19571                           ;locked_task.c: 189: data->holdCountX = 0;
 19572  1D36  0839               	movf	locked_clear@data,w
 19573  1D37  0086               	movwf	6
 19574  1D38  083A               	movf	locked_clear@data+1,w
 19575  1D39  0087               	movwf	7
 19576  1D3A  3147               	addfsr 1,7
 19577  1D3B  3000               	movlw	0
 19578  1D3C  3FC0               	movwi [0]fsr1
 19579  1D3D  3FC1               	movwi [1]fsr1
 19580                           
 19581                           ;locked_task.c: 190: data->holdCountY = 0;
 19582  1D3E  0839               	movf	locked_clear@data,w
 19583  1D3F  0086               	movwf	6
 19584  1D40  083A               	movf	locked_clear@data+1,w
 19585  1D41  0087               	movwf	7
 19586  1D42  3149               	addfsr 1,9
 19587  1D43  3000               	movlw	0
 19588  1D44  3FC0               	movwi [0]fsr1
 19589  1D45  3FC1               	movwi [1]fsr1
 19590                           
 19591                           ;locked_task.c: 191: data->noholdCount = 0;
 19592  1D46  0839               	movf	locked_clear@data,w
 19593  1D47  0086               	movwf	6
 19594  1D48  083A               	movf	locked_clear@data+1,w
 19595  1D49  0087               	movwf	7
 19596  1D4A  314B               	addfsr 1,11
 19597  1D4B  3000               	movlw	0
 19598  1D4C  3FC0               	movwi [0]fsr1
 19599  1D4D  3FC1               	movwi [1]fsr1
 19600                           
 19601                           ;locked_task.c: 194: nullifyBadge_userLedsClr(data->badge);
 19602  1D4E  0839               	movf	locked_clear@data,w
 19603  1D4F  0086               	movwf	6
 19604  1D50  083A               	movf	locked_clear@data+1,w
 19605  1D51  0087               	movwf	7
 19606  1D52  0801               	movf	1,w
 19607  1D53  31A6  2690  319D   	fcall	_nullifyBadge_userLedsClr
 19608                           
 19609                           ;locked_task.c: 195: nullifyBadge_segDisplayErase(data->badge);
 19610  1D56  0020               	movlb	0	; select bank0
 19611  1D57  0839               	movf	locked_clear@data,w
 19612  1D58  0086               	movwf	6
 19613  1D59  083A               	movf	locked_clear@data+1,w
 19614  1D5A  0087               	movwf	7
 19615  1D5B  0801               	movf	1,w
 19616  1D5C  31A6  268A         	fcall	_nullifyBadge_segDisplayErase
 19617  1D5E  0008               	return
 19618  1D5F                     __end_of_locked_clear:	
 19619                           
 19620                           	psect	text29
 19621  2690                     __ptext29:	
 19622 ;; *************** function _nullifyBadge_userLedsClr *****************
 19623 ;; Defined at:
 19624 ;;		line 177 in file "nullifyBadge.c"
 19625 ;; Parameters:    Size  Location     Type
 19626 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 19627 ;;		 -> badge_inst(18), 
 19628 ;; Auto vars:     Size  Location     Type
 19629 ;;  badge           1   11[BANK0 ] PTR struct t_nullifyBadg
 19630 ;;		 -> badge_inst(18), 
 19631 ;; Return value:  Size  Location     Type
 19632 ;;                  1    wreg      void 
 19633 ;; Registers used:
 19634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19635 ;; Tracked objects:
 19636 ;;		On entry : 0/0
 19637 ;;		On exit  : 0/0
 19638 ;;		Unchanged: 0/0
 19639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19644 ;;Total ram usage:        1 bytes
 19645 ;; Hardware stack levels used:    1
 19646 ;; Hardware stack levels required when called:    8
 19647 ;; This function calls:
 19648 ;;		_displayL2_ClrUserLeds
 19649 ;; This function is called by:
 19650 ;;		_menu_Init
 19651 ;;		_menu_clear
 19652 ;;		_menu_Exit
 19653 ;;		_flashy_Init
 19654 ;;		_flashy_Exit
 19655 ;;		_locked_Init
 19656 ;;		_locked_clear
 19657 ;;		_locked_Exit
 19658 ;;		_secret_Init
 19659 ;;		_secret_Exit
 19660 ;;		_slot_Init
 19661 ;;		_slot_Exit
 19662 ;; This function uses a non-reentrant model
 19663 ;;
 19664                           
 19665                           
 19666                           ;psect for function _nullifyBadge_userLedsClr
 19667  2690                     _nullifyBadge_userLedsClr:	
 19668                           
 19669                           ;incstack = 0
 19670                           ; Regs used in _nullifyBadge_userLedsClr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 19671                           ;nullifyBadge_userLedsClr@badge stored from wreg
 19672  2690  0020               	movlb	0	; select bank0
 19673  2691  00AB               	movwf	nullifyBadge_userLedsClr@badge
 19674                           
 19675                           ;nullifyBadge.c: 178: displayL2_ClrUserLeds(&badge->display);
 19676  2692  082B               	movf	nullifyBadge_userLedsClr@badge,w
 19677  2693  31A7  276F         	fcall	_displayL2_ClrUserLeds
 19678  2695  0008               	return
 19679  2696                     __end_of_nullifyBadge_userLedsClr:	
 19680                           
 19681                           	psect	text30
 19682  276F                     __ptext30:	
 19683 ;; *************** function _displayL2_ClrUserLeds *****************
 19684 ;; Defined at:
 19685 ;;		line 94 in file "nullifyBadge_displayL2.c"
 19686 ;; Parameters:    Size  Location     Type
 19687 ;;  display         1    wreg     PTR struct t_nullifyDisp
 19688 ;;		 -> badge_inst(18), 
 19689 ;; Auto vars:     Size  Location     Type
 19690 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 19691 ;;		 -> badge_inst(18), 
 19692 ;; Return value:  Size  Location     Type
 19693 ;;                  1    wreg      void 
 19694 ;; Registers used:
 19695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19696 ;; Tracked objects:
 19697 ;;		On entry : 0/0
 19698 ;;		On exit  : 0/0
 19699 ;;		Unchanged: 0/0
 19700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19705 ;;Total ram usage:        1 bytes
 19706 ;; Hardware stack levels used:    1
 19707 ;; Hardware stack levels required when called:    7
 19708 ;; This function calls:
 19709 ;;		_displayL1_SetUserLed
 19710 ;;		_displayL1_Update
 19711 ;; This function is called by:
 19712 ;;		_nullifyBadge_userLedsClr
 19713 ;; This function uses a non-reentrant model
 19714 ;;
 19715                           
 19716                           
 19717                           ;psect for function _displayL2_ClrUserLeds
 19718  276F                     _displayL2_ClrUserLeds:	
 19719                           
 19720                           ;incstack = 0
 19721                           ; Regs used in _displayL2_ClrUserLeds: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19722                           ;displayL2_ClrUserLeds@display stored from wreg
 19723  276F  00FB               	movwf	displayL2_ClrUserLeds@display
 19724                           
 19725                           ;nullifyBadge_displayL2.c: 95: displayL1_SetUserLed(&display->display_l1, 0);
 19726  2770  3000               	movlw	0
 19727  2771  00F1               	movwf	displayL1_SetUserLed@userLedVect
 19728  2772  00F2               	movwf	displayL1_SetUserLed@userLedVect+1
 19729  2773  087B               	movf	displayL2_ClrUserLeds@display,w
 19730  2774  3E07               	addlw	7
 19731  2775  3198  2000  31A7   	fcall	_displayL1_SetUserLed
 19732                           
 19733                           ;nullifyBadge_displayL2.c: 96: displayL1_Update(&display->display_l1);
 19734  2778  087B               	movf	displayL2_ClrUserLeds@display,w
 19735  2779  3E07               	addlw	7
 19736  277A  31A7  27CB         	fcall	_displayL1_Update
 19737  277C  0008               	return
 19738  277D                     __end_of_displayL2_ClrUserLeds:	
 19739                           
 19740                           	psect	text31
 19741  268A                     __ptext31:	
 19742 ;; *************** function _nullifyBadge_segDisplayErase *****************
 19743 ;; Defined at:
 19744 ;;		line 123 in file "nullifyBadge.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 19747 ;;		 -> badge_inst(18), 
 19748 ;; Auto vars:     Size  Location     Type
 19749 ;;  badge           1   24[BANK0 ] PTR struct t_nullifyBadg
 19750 ;;		 -> badge_inst(18), 
 19751 ;; Return value:  Size  Location     Type
 19752 ;;                  1    wreg      void 
 19753 ;; Registers used:
 19754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19763 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19764 ;;Total ram usage:        1 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:    9
 19767 ;; This function calls:
 19768 ;;		_displayL2_EraseSegDisplay
 19769 ;; This function is called by:
 19770 ;;		_menu_Init
 19771 ;;		_menu_clear
 19772 ;;		_menu_Exit
 19773 ;;		_flashy_Init
 19774 ;;		_flashy_Exit
 19775 ;;		_locked_Init
 19776 ;;		_locked_clear
 19777 ;;		_locked_Exit
 19778 ;;		_secret_Init
 19779 ;;		_secret_Exit
 19780 ;;		_slot_Init
 19781 ;;		_slot_Exit
 19782 ;;		_fadeDisplay_Init
 19783 ;;		_fadeDisplay_Exit
 19784 ;; This function uses a non-reentrant model
 19785 ;;
 19786                           
 19787                           
 19788                           ;psect for function _nullifyBadge_segDisplayErase
 19789  268A                     _nullifyBadge_segDisplayErase:	
 19790                           
 19791                           ;incstack = 0
 19792                           ; Regs used in _nullifyBadge_segDisplayErase: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 19793                           ;nullifyBadge_segDisplayErase@badge stored from wreg
 19794  268A  0020               	movlb	0	; select bank0
 19795  268B  00B8               	movwf	nullifyBadge_segDisplayErase@badge
 19796                           
 19797                           ;nullifyBadge.c: 124: displayL2_EraseSegDisplay(&badge->display);
 19798  268C  0838               	movf	nullifyBadge_segDisplayErase@badge,w
 19799  268D  31A7  27BB         	fcall	_displayL2_EraseSegDisplay
 19800  268F  0008               	return
 19801  2690                     __end_of_nullifyBadge_segDisplayErase:	
 19802                           
 19803                           	psect	text32
 19804  27BB                     __ptext32:	
 19805 ;; *************** function _displayL2_EraseSegDisplay *****************
 19806 ;; Defined at:
 19807 ;;		line 83 in file "nullifyBadge_displayL2.c"
 19808 ;; Parameters:    Size  Location     Type
 19809 ;;  display         1    wreg     PTR struct t_nullifyDisp
 19810 ;;		 -> badge_inst(18), 
 19811 ;; Auto vars:     Size  Location     Type
 19812 ;;  display         1   23[BANK0 ] PTR struct t_nullifyDisp
 19813 ;;		 -> badge_inst(18), 
 19814 ;; Return value:  Size  Location     Type
 19815 ;;                  1    wreg      void 
 19816 ;; Registers used:
 19817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19818 ;; Tracked objects:
 19819 ;;		On entry : 0/0
 19820 ;;		On exit  : 0/0
 19821 ;;		Unchanged: 0/0
 19822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19826 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19827 ;;Total ram usage:        1 bytes
 19828 ;; Hardware stack levels used:    1
 19829 ;; Hardware stack levels required when called:    8
 19830 ;; This function calls:
 19831 ;;		_displayL1_Update
 19832 ;;		_displayL2_PutStr
 19833 ;; This function is called by:
 19834 ;;		_nullifyBadge_segDisplayErase
 19835 ;; This function uses a non-reentrant model
 19836 ;;
 19837                           
 19838                           
 19839                           ;psect for function _displayL2_EraseSegDisplay
 19840  27BB                     _displayL2_EraseSegDisplay:	
 19841                           
 19842                           ;incstack = 0
 19843                           ; Regs used in _displayL2_EraseSegDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19844                           ;displayL2_EraseSegDisplay@display stored from wreg
 19845  27BB  0020               	movlb	0	; select bank0
 19846  27BC  00B7               	movwf	displayL2_EraseSegDisplay@display
 19847                           
 19848                           ;nullifyBadge_displayL2.c: 84: displayL2_PutStr(display, "    ");
 19849  27BD  3058               	movlw	low (STR_3| (0+32768))
 19850  27BE  00B0               	movwf	displayL2_PutStr@str
 19851  27BF  30A8               	movlw	high (STR_3| (0+32768))
 19852  27C0  00B1               	movwf	displayL2_PutStr@str+1
 19853  27C1  0837               	movf	displayL2_EraseSegDisplay@display,w
 19854  27C2  319A  2224  31A7   	fcall	_displayL2_PutStr
 19855                           
 19856                           ;nullifyBadge_displayL2.c: 85: displayL1_Update(&display->display_l1);
 19857  27C5  0020               	movlb	0	; select bank0
 19858  27C6  0837               	movf	displayL2_EraseSegDisplay@display,w
 19859  27C7  3E07               	addlw	7
 19860  27C8  31A7  27CB         	fcall	_displayL1_Update
 19861  27CA  0008               	return
 19862  27CB                     __end_of_displayL2_EraseSegDisplay:	
 19863                           
 19864                           	psect	text33
 19865  061A                     __ptext33:	
 19866 ;; *************** function _sprintf *****************
 19867 ;; Defined at:
 19868 ;;		line 492 in file "/Applications/microchip/xc8/v1.42/sources/common/doprnt.c"
 19869 ;; Parameters:    Size  Location     Type
 19870 ;;  sp              1    wreg     PTR unsigned char 
 19871 ;;		 -> flashy_Main@hit_counter(6), 
 19872 ;;  f               2    4[BANK0 ] PTR const unsigned char 
 19873 ;;		 -> STR_15(4), 
 19874 ;; Auto vars:     Size  Location     Type
 19875 ;;  sp              1   17[BANK0 ] PTR unsigned char 
 19876 ;;		 -> flashy_Main@hit_counter(6), 
 19877 ;;  tmpval          4    0        struct .
 19878 ;;  width           2   18[BANK0 ] int 
 19879 ;;  val             2   15[BANK0 ] unsigned int 
 19880 ;;  cp              2    0        PTR const unsigned char 
 19881 ;;  len             2    0        unsigned int 
 19882 ;;  c               1   20[BANK0 ] char 
 19883 ;;  flag            1   14[BANK0 ] unsigned char 
 19884 ;;  prec            1   13[BANK0 ] char 
 19885 ;;  ap              1   12[BANK0 ] PTR void [1]
 19886 ;;		 -> ?_sprintf(2), 
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  2    4[BANK0 ] int 
 19889 ;; Registers used:
 19890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/0
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19896 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19897 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19898 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19899 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19900 ;;Total ram usage:       17 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:    5
 19903 ;; This function calls:
 19904 ;;		___lwdiv
 19905 ;;		___lwmod
 19906 ;;		___wmul
 19907 ;;		_isdigit
 19908 ;; This function is called by:
 19909 ;;		_flashy_Main
 19910 ;; This function uses a non-reentrant model
 19911 ;;
 19912                           
 19913                           
 19914                           ;psect for function _sprintf
 19915  061A                     _sprintf:	
 19916                           
 19917                           ;incstack = 0
 19918                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19919                           ;sprintf@sp stored from wreg
 19920  061A  0020               	movlb	0	; select bank0
 19921  061B  00B1               	movwf	sprintf@sp
 19922                           
 19923                           ;doprnt.c: 494: va_list ap;
 19924                           ;doprnt.c: 499: signed char c;
 19925                           ;doprnt.c: 501: int width;
 19926                           ;doprnt.c: 506: signed char prec;
 19927                           ;doprnt.c: 508: unsigned char flag;
 19928                           ;doprnt.c: 523: union {
 19929                           ;doprnt.c: 524: unsigned long vd;
 19930                           ;doprnt.c: 525: double integ;
 19931                           ;doprnt.c: 526: } tmpval;
 19932                           ;doprnt.c: 528: unsigned int val;
 19933                           ;doprnt.c: 529: unsigned len;
 19934                           ;doprnt.c: 530: const char * cp;
 19935                           ;doprnt.c: 533: *ap = __va_start();
 19936  061C  3026               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 19937  061D  00A8               	movwf	??_sprintf
 19938  061E  0828               	movf	??_sprintf,w
 19939  061F  00AC               	movwf	sprintf@ap
 19940  0620                     l6643:	
 19941                           ;doprnt.c: 536: while(c = *f++) {
 19942                           
 19943  0620  0020               	movlb	0	; select bank0
 19944  0621  0825               	movf	sprintf@f+1,w
 19945  0622  00A9               	movwf	??_sprintf+1
 19946  0623  0824               	movf	sprintf@f,w
 19947  0624  00A8               	movwf	??_sprintf
 19948  0625  0AA4               	incf	sprintf@f,f
 19949  0626  1903               	skipnz
 19950  0627  0AA5               	incf	sprintf@f+1,f
 19951  0628  0828               	movf	??_sprintf,w
 19952  0629  0084               	movwf	4
 19953  062A  0829               	movf	??_sprintf+1,w
 19954  062B  0085               	movwf	5
 19955  062C  0800               	movf	0,w	;code access
 19956  062D  00AA               	movwf	??_sprintf+2
 19957  062E  082A               	movf	??_sprintf+2,w
 19958  062F  00B4               	movwf	sprintf@c
 19959  0630  0834               	movf	sprintf@c,w
 19960  0631  1903               	btfsc	3,2
 19961  0632  2F65               	goto	l6645
 19962                           
 19963                           ;doprnt.c: 538: if(c != '%')
 19964  0633  3025               	movlw	37
 19965  0634  0634               	xorwf	sprintf@c,w
 19966  0635  1903               	btfsc	3,2
 19967  0636  2E43               	goto	l6569
 19968                           
 19969                           ;doprnt.c: 540: {
 19970                           ;doprnt.c: 541: ((*sp++ = (c)));
 19971  0637  0834               	movf	sprintf@c,w
 19972  0638  00A8               	movwf	??_sprintf
 19973  0639  0831               	movf	sprintf@sp,w
 19974  063A  0086               	movwf	6
 19975  063B  0187               	clrf	7
 19976  063C  0828               	movf	??_sprintf,w
 19977  063D  0081               	movwf	1
 19978  063E  3001               	movlw	1
 19979  063F  00A8               	movwf	??_sprintf
 19980  0640  0828               	movf	??_sprintf,w
 19981  0641  07B1               	addwf	sprintf@sp,f
 19982                           
 19983                           ;doprnt.c: 542: continue;
 19984  0642  2E20               	goto	l6643
 19985  0643                     l6569:	
 19986                           
 19987                           ;doprnt.c: 543: }
 19988                           ;doprnt.c: 546: width = 0;
 19989  0643  01B2               	clrf	sprintf@width
 19990  0644  01B3               	clrf	sprintf@width+1
 19991                           
 19992                           ;doprnt.c: 548: flag = 0;
 19993  0645  01AE               	clrf	sprintf@flag
 19994                           
 19995                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 19996  0646  0824               	movf	sprintf@f,w
 19997  0647  0084               	movwf	4
 19998  0648  0825               	movf	sprintf@f+1,w
 19999  0649  0085               	movwf	5
 20000  064A  0800               	movf	0,w	;code access
 20001  064B  31A7  2761  3186   	fcall	_isdigit
 20002  064E  1C03               	btfss	3,0
 20003  064F  2E81               	goto	l6585
 20004                           
 20005                           ;doprnt.c: 598: width = 0;
 20006  0650  0020               	movlb	0	; select bank0
 20007  0651  01B2               	clrf	sprintf@width
 20008  0652  01B3               	clrf	sprintf@width+1
 20009  0653                     l6575:	
 20010                           ;doprnt.c: 599: do {
 20011                           
 20012                           
 20013                           ;doprnt.c: 600: width *= 10;
 20014  0653  300A               	movlw	10
 20015  0654  00F1               	movwf	___wmul@multiplier
 20016  0655  3000               	movlw	0
 20017  0656  00F2               	movwf	___wmul@multiplier+1
 20018  0657  0020               	movlb	0	; select bank0
 20019  0658  0833               	movf	sprintf@width+1,w
 20020  0659  00F4               	movwf	___wmul@multiplicand+1
 20021  065A  0832               	movf	sprintf@width,w
 20022  065B  00F3               	movwf	___wmul@multiplicand
 20023  065C  3198  2088  3186   	fcall	___wmul
 20024  065F  0872               	movf	?___wmul+1,w
 20025  0660  0020               	movlb	0	; select bank0
 20026  0661  00B3               	movwf	sprintf@width+1
 20027  0662  0871               	movf	?___wmul,w
 20028  0663  00B2               	movwf	sprintf@width
 20029                           
 20030                           ;doprnt.c: 601: width += *f++ - '0';
 20031  0664  0824               	movf	sprintf@f,w
 20032  0665  0084               	movwf	4
 20033  0666  0825               	movf	sprintf@f+1,w
 20034  0667  0085               	movwf	5
 20035  0668  0800               	movf	0,w	;code access
 20036  0669  3ED0               	addlw	208
 20037  066A  00A8               	movwf	??_sprintf
 20038  066B  30FF               	movlw	255
 20039  066C  1803               	skipnc
 20040  066D  3000               	movlw	0
 20041  066E  00A9               	movwf	??_sprintf+1
 20042  066F  0828               	movf	??_sprintf,w
 20043  0670  07B2               	addwf	sprintf@width,f
 20044  0671  0829               	movf	??_sprintf+1,w
 20045  0672  3DB3               	addwfc	sprintf@width+1,f
 20046  0673  3001               	movlw	1
 20047  0674  07A4               	addwf	sprintf@f,f
 20048  0675  3000               	movlw	0
 20049  0676  3DA5               	addwfc	sprintf@f+1,f
 20050                           
 20051                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20052  0677  0824               	movf	sprintf@f,w
 20053  0678  0084               	movwf	4
 20054  0679  0825               	movf	sprintf@f+1,w
 20055  067A  0085               	movwf	5
 20056  067B  0800               	movf	0,w	;code access
 20057  067C  31A7  2761  3186   	fcall	_isdigit
 20058  067F  1803               	btfsc	3,0
 20059  0680  2E53               	goto	l6575
 20060  0681                     l6585:	
 20061                           ;doprnt.c: 822: }
 20062                           
 20063                           ;doprnt.c: 813: continue;
 20064                           
 20065                           ;doprnt.c: 802: default:
 20066                           
 20067                           ;doprnt.c: 698: case 'i':
 20068                           ;doprnt.c: 699: break;
 20069                           
 20070                           ;doprnt.c: 697: case 'd':
 20071                           
 20072                           ;doprnt.c: 638: goto alldone;
 20073                           
 20074                           ;doprnt.c: 637: case 0:
 20075                           
 20076                           ;doprnt.c: 608: }
 20077                           ;doprnt.c: 635: switch(c = *f++) {
 20078                           
 20079  0681  0020               	movlb	0	; select bank0
 20080  0682  0825               	movf	sprintf@f+1,w
 20081  0683  00A9               	movwf	??_sprintf+1
 20082  0684  0824               	movf	sprintf@f,w
 20083  0685  00A8               	movwf	??_sprintf
 20084  0686  0AA4               	incf	sprintf@f,f
 20085  0687  1903               	skipnz
 20086  0688  0AA5               	incf	sprintf@f+1,f
 20087  0689  0828               	movf	??_sprintf,w
 20088  068A  0084               	movwf	4
 20089  068B  0829               	movf	??_sprintf+1,w
 20090  068C  0085               	movwf	5
 20091  068D  0800               	movf	0,w	;code access
 20092  068E  00B4               	movwf	sprintf@c
 20093                           
 20094                           ; Switch size 1, requested type "space"
 20095                           ; Number of cases is 3, Range of values is 0 to 105
 20096                           ; switch strategies available:
 20097                           ; Name         Instructions Cycles
 20098                           ; simple_byte           10     6 (average)
 20099                           ; direct_byte          218     6 (fixed)
 20100                           ; jumptable            260     6 (fixed)
 20101                           ;	Chosen strategy is simple_byte
 20102  068F  3A00               	xorlw	0	; case 0
 20103  0690  1903               	skipnz
 20104  0691  2F65               	goto	l6645
 20105  0692  3A64               	xorlw	100	; case 100
 20106  0693  1903               	skipnz
 20107  0694  2E99               	goto	l6587
 20108  0695  3A0D               	xorlw	13	; case 105
 20109  0696  1903               	skipnz
 20110  0697  2E99               	goto	l6587
 20111  0698  2E20               	goto	l6643
 20112  0699                     l6587:	
 20113                           
 20114                           ;doprnt.c: 1253: {
 20115                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 20116  0699  0020               	movlb	0	; select bank0
 20117  069A  082C               	movf	sprintf@ap,w
 20118  069B  0086               	movwf	6
 20119  069C  0187               	clrf	7
 20120  069D  3F40               	moviw [0]fsr1
 20121  069E  00AF               	movwf	sprintf@val
 20122  069F  3F41               	moviw [1]fsr1
 20123  06A0  00B0               	movwf	sprintf@val+1
 20124  06A1  3002               	movlw	2
 20125  06A2  00A8               	movwf	??_sprintf
 20126  06A3  0828               	movf	??_sprintf,w
 20127  06A4  07AC               	addwf	sprintf@ap,f
 20128                           
 20129                           ;doprnt.c: 1261: if((int)val < 0) {
 20130  06A5  1FB0               	btfss	sprintf@val+1,7
 20131  06A6  2EB0               	goto	l6597
 20132                           
 20133                           ;doprnt.c: 1262: flag |= 0x03;
 20134  06A7  3003               	movlw	3
 20135  06A8  00A8               	movwf	??_sprintf
 20136  06A9  0828               	movf	??_sprintf,w
 20137  06AA  04AE               	iorwf	sprintf@flag,f
 20138                           
 20139                           ;doprnt.c: 1263: val = -val;
 20140  06AB  09AF               	comf	sprintf@val,f
 20141  06AC  09B0               	comf	sprintf@val+1,f
 20142  06AD  0AAF               	incf	sprintf@val,f
 20143  06AE  1903               	skipnz
 20144  06AF  0AB0               	incf	sprintf@val+1,f
 20145  06B0                     l6597:	
 20146                           
 20147                           ;doprnt.c: 1264: }
 20148                           ;doprnt.c: 1266: }
 20149                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20150  06B0  01B4               	clrf	sprintf@c
 20151  06B1  0AB4               	incf	sprintf@c,f
 20152  06B2  3005               	movlw	5
 20153  06B3  0634               	xorwf	sprintf@c,w
 20154  06B4  1903               	btfsc	3,2
 20155  06B5  2ED5               	goto	l6609
 20156  06B6                     l6603:	
 20157                           
 20158                           ;doprnt.c: 1306: if(val < dpowers[c])
 20159  06B6  0834               	movf	sprintf@c,w
 20160  06B7  00A8               	movwf	??_sprintf
 20161  06B8  01A9               	clrf	??_sprintf+1
 20162  06B9  35A8               	lslf	??_sprintf,f
 20163  06BA  0DA9               	rlf	??_sprintf+1,f
 20164  06BB  3000               	movlw	low (_dpowers| (0+32768))
 20165  06BC  0728               	addwf	??_sprintf,w
 20166  06BD  0084               	movwf	4
 20167  06BE  30A0               	movlw	high (_dpowers| (0+32768))
 20168  06BF  3D29               	addwfc	??_sprintf+1,w
 20169  06C0  0085               	movwf	5
 20170  06C1  3F00               	moviw [0]fsr0
 20171  06C2  00AA               	movwf	??_sprintf+2
 20172  06C3  3F01               	moviw [1]fsr0
 20173  06C4  00AB               	movwf	??_sprintf+3
 20174  06C5  082B               	movf	??_sprintf+3,w
 20175  06C6  0230               	subwf	sprintf@val+1,w
 20176  06C7  1D03               	skipz
 20177  06C8  2ECB               	goto	u3745
 20178  06C9  082A               	movf	??_sprintf+2,w
 20179  06CA  022F               	subwf	sprintf@val,w
 20180  06CB                     u3745:	
 20181  06CB  1C03               	btfss	3,0
 20182  06CC  2ED5               	goto	l6609
 20183                           
 20184                           ;doprnt.c: 1307: break;
 20185  06CD  3001               	movlw	1
 20186  06CE  00A8               	movwf	??_sprintf
 20187  06CF  0828               	movf	??_sprintf,w
 20188  06D0  07B4               	addwf	sprintf@c,f
 20189  06D1  3005               	movlw	5
 20190  06D2  0634               	xorwf	sprintf@c,w
 20191  06D3  1D03               	btfss	3,2
 20192  06D4  2EB6               	goto	l6603
 20193  06D5                     l6609:	
 20194                           
 20195                           ;doprnt.c: 1345: if(width && flag & 0x03)
 20196  06D5  0832               	movf	sprintf@width,w
 20197  06D6  0433               	iorwf	sprintf@width+1,w
 20198  06D7  1903               	btfsc	3,2
 20199  06D8  2EE1               	goto	l1343
 20200  06D9  082E               	movf	sprintf@flag,w
 20201  06DA  3903               	andlw	3
 20202  06DB  1903               	btfsc	3,2
 20203  06DC  2EE1               	goto	l1343
 20204                           
 20205                           ;doprnt.c: 1346: width--;
 20206  06DD  30FF               	movlw	255
 20207  06DE  07B2               	addwf	sprintf@width,f
 20208  06DF  30FF               	movlw	255
 20209  06E0  3DB3               	addwfc	sprintf@width+1,f
 20210  06E1                     l1343:	
 20211                           
 20212                           ;doprnt.c: 1381: if(width > c)
 20213  06E1  0834               	movf	sprintf@c,w
 20214  06E2  00A8               	movwf	??_sprintf
 20215  06E3  01A9               	clrf	??_sprintf+1
 20216  06E4  1BA8               	btfsc	??_sprintf,7
 20217  06E5  03A9               	decf	??_sprintf+1,f
 20218  06E6  0829               	movf	??_sprintf+1,w
 20219  06E7  3A80               	xorlw	128
 20220  06E8  00AA               	movwf	??_sprintf+2
 20221  06E9  0833               	movf	sprintf@width+1,w
 20222  06EA  3A80               	xorlw	128
 20223  06EB  022A               	subwf	??_sprintf+2,w
 20224  06EC  1D03               	skipz
 20225  06ED  2EF0               	goto	u3785
 20226  06EE  0832               	movf	sprintf@width,w
 20227  06EF  0228               	subwf	??_sprintf,w
 20228  06F0                     u3785:	
 20229  06F0  1803               	skipnc
 20230  06F1  2EFD               	goto	l6617
 20231                           
 20232                           ;doprnt.c: 1382: width -= c;
 20233  06F2  0020               	movlb	0	; select bank0
 20234  06F3  0834               	movf	sprintf@c,w
 20235  06F4  00A8               	movwf	??_sprintf
 20236  06F5  01A9               	clrf	??_sprintf+1
 20237  06F6  1BA8               	btfsc	??_sprintf,7
 20238  06F7  03A9               	decf	??_sprintf+1,f
 20239  06F8  0828               	movf	??_sprintf,w
 20240  06F9  02B2               	subwf	sprintf@width,f
 20241  06FA  0829               	movf	??_sprintf+1,w
 20242  06FB  3BB3               	subwfb	sprintf@width+1,f
 20243  06FC  2F00               	goto	l6619
 20244  06FD                     l6617:	
 20245                           
 20246                           ;doprnt.c: 1383: else
 20247                           ;doprnt.c: 1384: width = 0;
 20248  06FD  0020               	movlb	0	; select bank0
 20249  06FE  01B2               	clrf	sprintf@width
 20250  06FF  01B3               	clrf	sprintf@width+1
 20251  0700                     l6619:	
 20252                           
 20253                           ;doprnt.c: 1422: {
 20254                           ;doprnt.c: 1424: if(width
 20255                           ;doprnt.c: 1428: )
 20256  0700  0832               	movf	sprintf@width,w
 20257  0701  0433               	iorwf	sprintf@width+1,w
 20258  0702  1903               	btfsc	3,2
 20259  0703  2F17               	goto	l6627
 20260  0704                     l6621:	
 20261                           ;doprnt.c: 1429: do
 20262                           
 20263                           
 20264                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 20265  0704  3020               	movlw	32
 20266  0705  00A8               	movwf	??_sprintf
 20267  0706  0831               	movf	sprintf@sp,w
 20268  0707  0086               	movwf	6
 20269  0708  0187               	clrf	7
 20270  0709  0828               	movf	??_sprintf,w
 20271  070A  0081               	movwf	1
 20272  070B  3001               	movlw	1
 20273  070C  00A8               	movwf	??_sprintf
 20274  070D  0828               	movf	??_sprintf,w
 20275  070E  07B1               	addwf	sprintf@sp,f
 20276                           
 20277                           ;doprnt.c: 1431: while(--width);
 20278  070F  30FF               	movlw	255
 20279  0710  07B2               	addwf	sprintf@width,f
 20280  0711  30FF               	movlw	255
 20281  0712  3DB3               	addwfc	sprintf@width+1,f
 20282  0713  0832               	movf	sprintf@width,w
 20283  0714  0433               	iorwf	sprintf@width+1,w
 20284  0715  1D03               	btfss	3,2
 20285  0716  2F04               	goto	l6621
 20286  0717                     l6627:	
 20287                           
 20288                           ;doprnt.c: 1438: if(flag & 0x03)
 20289  0717  082E               	movf	sprintf@flag,w
 20290  0718  3903               	andlw	3
 20291  0719  1903               	btfsc	3,2
 20292  071A  2F26               	goto	l6633
 20293                           
 20294                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 20295  071B  302D               	movlw	45
 20296  071C  00A8               	movwf	??_sprintf
 20297  071D  0831               	movf	sprintf@sp,w
 20298  071E  0086               	movwf	6
 20299  071F  0187               	clrf	7
 20300  0720  0828               	movf	??_sprintf,w
 20301  0721  0081               	movwf	1
 20302  0722  3001               	movlw	1
 20303  0723  00A8               	movwf	??_sprintf
 20304  0724  0828               	movf	??_sprintf,w
 20305  0725  07B1               	addwf	sprintf@sp,f
 20306  0726                     l6633:	
 20307                           
 20308                           ;doprnt.c: 1469: }
 20309                           ;doprnt.c: 1472: prec = c;
 20310  0726  0834               	movf	sprintf@c,w
 20311  0727  00A8               	movwf	??_sprintf
 20312  0728  0828               	movf	??_sprintf,w
 20313  0729  00AD               	movwf	sprintf@prec
 20314  072A                     l6641:	
 20315                           ;doprnt.c: 1474: while(prec--) {
 20316                           
 20317  072A  30FF               	movlw	255
 20318  072B  00A8               	movwf	??_sprintf
 20319  072C  0828               	movf	??_sprintf,w
 20320  072D  07AD               	addwf	sprintf@prec,f
 20321  072E  0A2D               	incf	sprintf@prec,w
 20322  072F  1903               	btfsc	3,2
 20323  0730  2E20               	goto	l6643
 20324                           
 20325                           ;doprnt.c: 1478: {
 20326                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 20327  0731  300A               	movlw	10
 20328  0732  00A0               	movwf	___lwmod@divisor
 20329  0733  3000               	movlw	0
 20330  0734  00A1               	movwf	___lwmod@divisor+1
 20331  0735  082D               	movf	sprintf@prec,w
 20332  0736  00A8               	movwf	??_sprintf
 20333  0737  01A9               	clrf	??_sprintf+1
 20334  0738  35A8               	lslf	??_sprintf,f
 20335  0739  0DA9               	rlf	??_sprintf+1,f
 20336  073A  3000               	movlw	low (_dpowers| (0+32768))
 20337  073B  0728               	addwf	??_sprintf,w
 20338  073C  0084               	movwf	4
 20339  073D  30A0               	movlw	high (_dpowers| (0+32768))
 20340  073E  3D29               	addwfc	??_sprintf+1,w
 20341  073F  0085               	movwf	5
 20342  0740  3F00               	moviw [0]fsr0
 20343  0741  00F1               	movwf	___lwdiv@divisor
 20344  0742  3F01               	moviw [1]fsr0
 20345  0743  00F2               	movwf	___lwdiv@divisor+1
 20346  0744  0830               	movf	sprintf@val+1,w
 20347  0745  00F4               	movwf	___lwdiv@dividend+1
 20348  0746  082F               	movf	sprintf@val,w
 20349  0747  00F3               	movwf	___lwdiv@dividend
 20350  0748  319B  233F  3186   	fcall	___lwdiv
 20351  074B  0872               	movf	?___lwdiv+1,w
 20352  074C  0020               	movlb	0	; select bank0
 20353  074D  00A3               	movwf	___lwmod@dividend+1
 20354  074E  0871               	movf	?___lwdiv,w
 20355  074F  00A2               	movwf	___lwmod@dividend
 20356  0750  319A  224E  3186   	fcall	___lwmod
 20357  0753  0020               	movlb	0	; select bank0
 20358  0754  0820               	movf	?___lwmod,w
 20359  0755  3E30               	addlw	48
 20360  0756  00AA               	movwf	??_sprintf+2
 20361  0757  082A               	movf	??_sprintf+2,w
 20362  0758  00B4               	movwf	sprintf@c
 20363                           
 20364                           ;doprnt.c: 1523: }
 20365                           ;doprnt.c: 1524: ((*sp++ = (c)));
 20366  0759  0834               	movf	sprintf@c,w
 20367  075A  00A8               	movwf	??_sprintf
 20368  075B  0831               	movf	sprintf@sp,w
 20369  075C  0086               	movwf	6
 20370  075D  0187               	clrf	7
 20371  075E  0828               	movf	??_sprintf,w
 20372  075F  0081               	movwf	1
 20373  0760  3001               	movlw	1
 20374  0761  00A8               	movwf	??_sprintf
 20375  0762  0828               	movf	??_sprintf,w
 20376  0763  07B1               	addwf	sprintf@sp,f
 20377  0764  2F2A               	goto	l6641
 20378  0765                     l6645:	
 20379                           ;doprnt.c: 1525: }
 20380                           ;doprnt.c: 1533: }
 20381                           ;doprnt.c: 1535: alldone:
 20382                           
 20383                           
 20384                           ;doprnt.c: 1538: *sp = 0;
 20385  0765  0020               	movlb	0	; select bank0
 20386  0766  0831               	movf	sprintf@sp,w
 20387  0767  0086               	movwf	6
 20388  0768  0187               	clrf	7
 20389  0769  0181               	clrf	1
 20390  076A  0008               	return
 20391  076B                     __end_of_sprintf:	
 20392                           ;doprnt.c: 1540: return 0;
 20393                           ;	Return value of _sprintf is never used
 20394                           
 20395                           
 20396                           	psect	text34
 20397  2761                     __ptext34:	
 20398 ;; *************** function _isdigit *****************
 20399 ;; Defined at:
 20400 ;;		line 8 in file "/Applications/microchip/xc8/v1.42/sources/common/isdigit.c"
 20401 ;; Parameters:    Size  Location     Type
 20402 ;;  c               1    wreg     unsigned char 
 20403 ;; Auto vars:     Size  Location     Type
 20404 ;;  c               1    2[COMMON] unsigned char 
 20405 ;; Return value:  Size  Location     Type
 20406 ;;		None               void
 20407 ;; Registers used:
 20408 ;;		wreg, status,2, status,0
 20409 ;; Tracked objects:
 20410 ;;		On entry : 0/0
 20411 ;;		On exit  : 0/0
 20412 ;;		Unchanged: 0/0
 20413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20418 ;;Total ram usage:        2 bytes
 20419 ;; Hardware stack levels used:    1
 20420 ;; Hardware stack levels required when called:    4
 20421 ;; This function calls:
 20422 ;;		Nothing
 20423 ;; This function is called by:
 20424 ;;		_sprintf
 20425 ;; This function uses a non-reentrant model
 20426 ;;
 20427                           
 20428                           
 20429                           ;psect for function _isdigit
 20430  2761                     _isdigit:	
 20431                           
 20432                           ;incstack = 0
 20433                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 20434                           ;isdigit@c stored from wreg
 20435  2761  00F2               	movwf	isdigit@c
 20436  2762  01F1               	clrf	_isdigit$3092
 20437  2763  303A               	movlw	58
 20438  2764  0272               	subwf	isdigit@c,w
 20439  2765  1803               	skipnc
 20440  2766  2F6D               	goto	l6419
 20441  2767  3030               	movlw	48
 20442  2768  0272               	subwf	isdigit@c,w
 20443  2769  1C03               	skipc
 20444  276A  2F6D               	goto	l6419
 20445  276B  01F1               	clrf	_isdigit$3092
 20446  276C  0AF1               	incf	_isdigit$3092,f
 20447  276D                     l6419:	
 20448  276D  0C71               	rrf	_isdigit$3092,w
 20449  276E  0008               	return
 20450  276F                     __end_of_isdigit:	
 20451                           
 20452                           	psect	text35
 20453  1888                     __ptext35:	
 20454 ;; *************** function ___wmul *****************
 20455 ;; Defined at:
 20456 ;;		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul16.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;  multiplier      2    1[COMMON] unsigned int 
 20459 ;;  multiplicand    2    3[COMMON] unsigned int 
 20460 ;; Auto vars:     Size  Location     Type
 20461 ;;  product         2    5[COMMON] unsigned int 
 20462 ;; Return value:  Size  Location     Type
 20463 ;;                  2    1[COMMON] unsigned int 
 20464 ;; Registers used:
 20465 ;;		wreg, status,2, status,0
 20466 ;; Tracked objects:
 20467 ;;		On entry : 0/0
 20468 ;;		On exit  : 0/0
 20469 ;;		Unchanged: 0/0
 20470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20475 ;;Total ram usage:        6 bytes
 20476 ;; Hardware stack levels used:    1
 20477 ;; Hardware stack levels required when called:    4
 20478 ;; This function calls:
 20479 ;;		Nothing
 20480 ;; This function is called by:
 20481 ;;		_secret_check
 20482 ;;		_sprintf
 20483 ;; This function uses a non-reentrant model
 20484 ;;
 20485                           
 20486                           
 20487                           ;psect for function ___wmul
 20488  1888                     ___wmul:	
 20489                           
 20490                           ;incstack = 0
 20491                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 20492  1888  01F5               	clrf	___wmul@product
 20493  1889  01F6               	clrf	___wmul@product+1
 20494  188A                     l6425:	
 20495  188A  1C71               	btfss	___wmul@multiplier,0
 20496  188B  2890               	goto	l1436
 20497  188C  0873               	movf	___wmul@multiplicand,w
 20498  188D  07F5               	addwf	___wmul@product,f
 20499  188E  0874               	movf	___wmul@multiplicand+1,w
 20500  188F  3DF6               	addwfc	___wmul@product+1,f
 20501  1890                     l1436:	
 20502  1890  3001               	movlw	1
 20503  1891                     u3575:	
 20504  1891  35F3               	lslf	___wmul@multiplicand,f
 20505  1892  0DF4               	rlf	___wmul@multiplicand+1,f
 20506  1893  0B89               	decfsz	9,f
 20507  1894  2891               	goto	u3575
 20508  1895  3001               	movlw	1
 20509  1896                     u3585:	
 20510  1896  36F2               	lsrf	___wmul@multiplier+1,f
 20511  1897  0CF1               	rrf	___wmul@multiplier,f
 20512  1898  0B89               	decfsz	9,f
 20513  1899  2896               	goto	u3585
 20514  189A  0871               	movf	___wmul@multiplier,w
 20515  189B  0472               	iorwf	___wmul@multiplier+1,w
 20516  189C  1D03               	btfss	3,2
 20517  189D  288A               	goto	l6425
 20518  189E  0876               	movf	___wmul@product+1,w
 20519  189F  00F2               	movwf	?___wmul+1
 20520  18A0  0875               	movf	___wmul@product,w
 20521  18A1  00F1               	movwf	?___wmul
 20522  18A2  0008               	return
 20523  18A3                     __end_of___wmul:	
 20524                           
 20525                           	psect	text36
 20526  2671                     __ptext36:	
 20527 ;; *************** function _nullifyBadge_irTxSet *****************
 20528 ;; Defined at:
 20529 ;;		line 264 in file "nullifyBadge.c"
 20530 ;; Parameters:    Size  Location     Type
 20531 ;;		None
 20532 ;; Auto vars:     Size  Location     Type
 20533 ;;		None
 20534 ;; Return value:  Size  Location     Type
 20535 ;;                  1    wreg      void 
 20536 ;; Registers used:
 20537 ;;		None
 20538 ;; Tracked objects:
 20539 ;;		On entry : 0/0
 20540 ;;		On exit  : 0/0
 20541 ;;		Unchanged: 0/0
 20542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20547 ;;Total ram usage:        0 bytes
 20548 ;; Hardware stack levels used:    1
 20549 ;; Hardware stack levels required when called:    4
 20550 ;; This function calls:
 20551 ;;		Nothing
 20552 ;; This function is called by:
 20553 ;;		_flashy_Main
 20554 ;; This function uses a non-reentrant model
 20555 ;;
 20556                           
 20557                           
 20558                           ;psect for function _nullifyBadge_irTxSet
 20559  2671                     _nullifyBadge_irTxSet:	
 20560                           
 20561                           ;incstack = 0
 20562                           ; Regs used in _nullifyBadge_irTxSet: []
 20563                           ;nullifyBadge.c: 266: do { LATBbits.LATB7 = 0; } while(0);
 20564  2671  0022               	movlb	2	; select bank2
 20565  2672  138D               	bcf	13,7	;volatile
 20566  2673  0008               	return
 20567  2674                     __end_of_nullifyBadge_irTxSet:	
 20568                           
 20569                           	psect	text37
 20570  270C                     __ptext37:	
 20571 ;; *************** function _nullifyBadge_irTxRelease *****************
 20572 ;; Defined at:
 20573 ;;		line 254 in file "nullifyBadge.c"
 20574 ;; Parameters:    Size  Location     Type
 20575 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20576 ;;		 -> badge_inst(18), 
 20577 ;; Auto vars:     Size  Location     Type
 20578 ;;  badge           1    2[COMMON] PTR struct t_nullifyBadg
 20579 ;;		 -> badge_inst(18), 
 20580 ;; Return value:  Size  Location     Type
 20581 ;;                  1    wreg      void 
 20582 ;; Registers used:
 20583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20584 ;; Tracked objects:
 20585 ;;		On entry : 0/0
 20586 ;;		On exit  : 0/0
 20587 ;;		Unchanged: 0/0
 20588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20593 ;;Total ram usage:        2 bytes
 20594 ;; Hardware stack levels used:    1
 20595 ;; Hardware stack levels required when called:    4
 20596 ;; This function calls:
 20597 ;;		Nothing
 20598 ;; This function is called by:
 20599 ;;		_flashy_Main
 20600 ;; This function uses a non-reentrant model
 20601 ;;
 20602                           
 20603                           
 20604                           ;psect for function _nullifyBadge_irTxRelease
 20605  270C                     _nullifyBadge_irTxRelease:	
 20606                           
 20607                           ;incstack = 0
 20608                           ; Regs used in _nullifyBadge_irTxRelease: [wreg+fsr1l+fsr1h+status,2+status,0]
 20609                           ;nullifyBadge_irTxRelease@badge stored from wreg
 20610  270C  00F2               	movwf	nullifyBadge_irTxRelease@badge
 20611                           
 20612                           ;nullifyBadge.c: 255: badge->registeredHw &= ~(1 << HW_IR_TX);
 20613  270D  30FB               	movlw	251
 20614  270E  00F1               	movwf	??_nullifyBadge_irTxRelease
 20615  270F  0872               	movf	nullifyBadge_irTxRelease@badge,w
 20616  2710  3E11               	addlw	17
 20617  2711  0086               	movwf	6
 20618  2712  3001               	movlw	1	; select bank2/3
 20619  2713  0087               	movwf	7
 20620  2714  0871               	movf	??_nullifyBadge_irTxRelease,w
 20621  2715  0581               	andwf	1,f
 20622  2716  0008               	return
 20623  2717                     __end_of_nullifyBadge_irTxRelease:	
 20624                           
 20625                           	psect	text38
 20626  277D                     __ptext38:	
 20627 ;; *************** function _nullifyBadge_irTxRegister *****************
 20628 ;; Defined at:
 20629 ;;		line 242 in file "nullifyBadge.c"
 20630 ;; Parameters:    Size  Location     Type
 20631 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20632 ;;		 -> badge_inst(18), 
 20633 ;; Auto vars:     Size  Location     Type
 20634 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 20635 ;;		 -> badge_inst(18), 
 20636 ;; Return value:  Size  Location     Type
 20637 ;;                  1    wreg      char 
 20638 ;; Registers used:
 20639 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20640 ;; Tracked objects:
 20641 ;;		On entry : 0/0
 20642 ;;		On exit  : 0/0
 20643 ;;		Unchanged: 0/0
 20644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20649 ;;Total ram usage:        1 bytes
 20650 ;; Hardware stack levels used:    1
 20651 ;; Hardware stack levels required when called:    4
 20652 ;; This function calls:
 20653 ;;		Nothing
 20654 ;; This function is called by:
 20655 ;;		_flashy_Main
 20656 ;; This function uses a non-reentrant model
 20657 ;;
 20658                           
 20659                           
 20660                           ;psect for function _nullifyBadge_irTxRegister
 20661  277D                     _nullifyBadge_irTxRegister:	
 20662                           
 20663                           ;incstack = 0
 20664                           ; Regs used in _nullifyBadge_irTxRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 20665                           ;nullifyBadge_irTxRegister@badge stored from wreg
 20666  277D  00F1               	movwf	nullifyBadge_irTxRegister@badge
 20667                           
 20668                           ;nullifyBadge.c: 243: if (badge->registeredHw & HW_IR_TX) {
 20669  277E  0871               	movf	nullifyBadge_irTxRegister@badge,w
 20670  277F  3E11               	addlw	17
 20671  2780  0086               	movwf	6
 20672  2781  3001               	movlw	1	; select bank2/3
 20673  2782  0087               	movwf	7
 20674  2783  1881               	btfsc	1,1
 20675  2784  0008               	return
 20676                           
 20677                           ;nullifyBadge.c: 246: else {
 20678                           ;nullifyBadge.c: 247: badge->registeredHw |= (1 << HW_IR_TX);
 20679                           
 20680                           ;nullifyBadge.c: 245: }
 20681                           
 20682                           ;nullifyBadge.c: 244: return -1;
 20683                           ;	Return value of _nullifyBadge_irTxRegister is never used
 20684  2785  0871               	movf	nullifyBadge_irTxRegister@badge,w
 20685  2786  3E11               	addlw	17
 20686  2787  0086               	movwf	6
 20687  2788  3001               	movlw	1	; select bank2/3
 20688  2789  0087               	movwf	7
 20689  278A  1501               	bsf	1,2
 20690                           
 20691                           ;nullifyBadge.c: 248: return 0;
 20692                           ;	Return value of _nullifyBadge_irTxRegister is never used
 20693  278B  0008               	return
 20694  278C                     __end_of_nullifyBadge_irTxRegister:	
 20695                           
 20696                           	psect	text39
 20697  266E                     __ptext39:	
 20698 ;; *************** function _nullifyBadge_irTxClr *****************
 20699 ;; Defined at:
 20700 ;;		line 270 in file "nullifyBadge.c"
 20701 ;; Parameters:    Size  Location     Type
 20702 ;;		None
 20703 ;; Auto vars:     Size  Location     Type
 20704 ;;		None
 20705 ;; Return value:  Size  Location     Type
 20706 ;;                  1    wreg      void 
 20707 ;; Registers used:
 20708 ;;		None
 20709 ;; Tracked objects:
 20710 ;;		On entry : 0/0
 20711 ;;		On exit  : 0/0
 20712 ;;		Unchanged: 0/0
 20713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20718 ;;Total ram usage:        0 bytes
 20719 ;; Hardware stack levels used:    1
 20720 ;; Hardware stack levels required when called:    4
 20721 ;; This function calls:
 20722 ;;		Nothing
 20723 ;; This function is called by:
 20724 ;;		_flashy_Main
 20725 ;; This function uses a non-reentrant model
 20726 ;;
 20727                           
 20728                           
 20729                           ;psect for function _nullifyBadge_irTxClr
 20730  266E                     _nullifyBadge_irTxClr:	
 20731                           
 20732                           ;incstack = 0
 20733                           ; Regs used in _nullifyBadge_irTxClr: []
 20734                           ;nullifyBadge.c: 272: do { LATBbits.LATB7 = 1; } while(0);
 20735  266E  0022               	movlb	2	; select bank2
 20736  266F  178D               	bsf	13,7	;volatile
 20737  2670  0008               	return
 20738  2671                     __end_of_nullifyBadge_irTxClr:	
 20739                           
 20740                           	psect	text40
 20741  1200                     __ptext40:	
 20742 ;; *************** function _nullifyBadge_irGet *****************
 20743 ;; Defined at:
 20744 ;;		line 232 in file "nullifyBadge.c"
 20745 ;; Parameters:    Size  Location     Type
 20746 ;;		None
 20747 ;; Auto vars:     Size  Location     Type
 20748 ;;		None
 20749 ;; Return value:  Size  Location     Type
 20750 ;;                  1    wreg      unsigned char 
 20751 ;; Registers used:
 20752 ;;		wreg, status,2, status,0
 20753 ;; Tracked objects:
 20754 ;;		On entry : 0/0
 20755 ;;		On exit  : 0/0
 20756 ;;		Unchanged: 0/0
 20757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20762 ;;Total ram usage:        0 bytes
 20763 ;; Hardware stack levels used:    1
 20764 ;; Hardware stack levels required when called:    4
 20765 ;; This function calls:
 20766 ;;		Nothing
 20767 ;; This function is called by:
 20768 ;;		_flashy_Main
 20769 ;; This function uses a non-reentrant model
 20770 ;;
 20771                           
 20772                           
 20773                           ;psect for function _nullifyBadge_irGet
 20774  1200                     _nullifyBadge_irGet:	
 20775                           
 20776                           ;nullifyBadge.c: 233: return PORTBbits.RB5;
 20777                           
 20778                           ;incstack = 0
 20779                           ; Regs used in _nullifyBadge_irGet: [wreg+status,2+status,0]
 20780  1200  0020               	movlb	0	; select bank0
 20781  1201  0E0D               	swapf	13,w	;volatile
 20782  1202  0C89               	rrf	9,f
 20783  1203  3901               	andlw	1
 20784  1204  0008               	return
 20785  1205                     __end_of_nullifyBadge_irGet:	
 20786                           
 20787                           	psect	text41
 20788  1AAA                     __ptext41:	
 20789 ;; *************** function _nullifyBadge_buttonsGet *****************
 20790 ;; Defined at:
 20791 ;;		line 187 in file "nullifyBadge.c"
 20792 ;; Parameters:    Size  Location     Type
 20793 ;;		None
 20794 ;; Auto vars:     Size  Location     Type
 20795 ;;  retVal          1    3[COMMON] unsigned char 
 20796 ;; Return value:  Size  Location     Type
 20797 ;;                  1    wreg      unsigned char 
 20798 ;; Registers used:
 20799 ;;		wreg, status,2, status,0
 20800 ;; Tracked objects:
 20801 ;;		On entry : 0/0
 20802 ;;		On exit  : 0/0
 20803 ;;		Unchanged: 0/0
 20804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20808 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20809 ;;Total ram usage:        3 bytes
 20810 ;; Hardware stack levels used:    1
 20811 ;; Hardware stack levels required when called:    4
 20812 ;; This function calls:
 20813 ;;		Nothing
 20814 ;; This function is called by:
 20815 ;;		_menu_Main
 20816 ;;		_flashy_Main
 20817 ;;		_locked_Main
 20818 ;;		_secret_Main
 20819 ;;		_slot_Main
 20820 ;; This function uses a non-reentrant model
 20821 ;;
 20822                           
 20823                           
 20824                           ;psect for function _nullifyBadge_buttonsGet
 20825  1AAA                     _nullifyBadge_buttonsGet:	
 20826                           
 20827                           ;nullifyBadge.c: 188: u8 retVal = 0x0F;
 20828                           
 20829                           ;incstack = 0
 20830                           ; Regs used in _nullifyBadge_buttonsGet: [wreg+status,2+status,0]
 20831  1AAA  300F               	movlw	15
 20832  1AAB  00F1               	movwf	??_nullifyBadge_buttonsGet
 20833  1AAC  0871               	movf	??_nullifyBadge_buttonsGet,w
 20834  1AAD  00F3               	movwf	nullifyBadge_buttonsGet@retVal
 20835                           
 20836                           ;nullifyBadge.c: 190: retVal &= ~(PORTCbits.RC5 << 0);
 20837  1AAE  0020               	movlb	0	; select bank0
 20838  1AAF  0E0E               	swapf	14,w	;volatile
 20839  1AB0  0C89               	rrf	9,f
 20840  1AB1  3901               	andlw	1
 20841  1AB2  3AFF               	xorlw	255
 20842  1AB3  00F1               	movwf	??_nullifyBadge_buttonsGet
 20843  1AB4  0871               	movf	??_nullifyBadge_buttonsGet,w
 20844  1AB5  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 20845                           
 20846                           ;nullifyBadge.c: 191: retVal &= ~(PORTAbits.RA2 << 1);
 20847  1AB6  0C0C               	rrf	12,w	;volatile
 20848  1AB7  0C89               	rrf	9,f
 20849  1AB8  3901               	andlw	1
 20850  1AB9  0709               	addwf	9,w
 20851  1ABA  3AFF               	xorlw	255
 20852  1ABB  00F1               	movwf	??_nullifyBadge_buttonsGet
 20853  1ABC  0871               	movf	??_nullifyBadge_buttonsGet,w
 20854  1ABD  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 20855                           
 20856                           ;nullifyBadge.c: 192: retVal &= ~(PORTAbits.RA4 << 2);
 20857  1ABE  0E0C               	swapf	12,w	;volatile
 20858  1ABF  3901               	andlw	1
 20859  1AC0  00F1               	movwf	??_nullifyBadge_buttonsGet
 20860  1AC1  3001               	movlw	1
 20861  1AC2                     u3625:	
 20862  1AC2  35F1               	lslf	??_nullifyBadge_buttonsGet,f
 20863  1AC3  3EFF               	addlw	-1
 20864  1AC4  1D03               	skipz
 20865  1AC5  2AC2               	goto	u3625
 20866  1AC6  3571               	lslf	??_nullifyBadge_buttonsGet,w
 20867  1AC7  3AFF               	xorlw	255
 20868  1AC8  00F2               	movwf	??_nullifyBadge_buttonsGet+1
 20869  1AC9  0872               	movf	??_nullifyBadge_buttonsGet+1,w
 20870  1ACA  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 20871                           
 20872                           ;nullifyBadge.c: 193: retVal &= ~(PORTAbits.RA5 << 3);
 20873  1ACB  0E0C               	swapf	12,w	;volatile
 20874  1ACC  0C89               	rrf	9,f
 20875  1ACD  3901               	andlw	1
 20876  1ACE  00F1               	movwf	??_nullifyBadge_buttonsGet
 20877  1ACF  3002               	movlw	2
 20878  1AD0                     u3635:	
 20879  1AD0  35F1               	lslf	??_nullifyBadge_buttonsGet,f
 20880  1AD1  3EFF               	addlw	-1
 20881  1AD2  1D03               	skipz
 20882  1AD3  2AD0               	goto	u3635
 20883  1AD4  3571               	lslf	??_nullifyBadge_buttonsGet,w
 20884  1AD5  3AFF               	xorlw	255
 20885  1AD6  00F2               	movwf	??_nullifyBadge_buttonsGet+1
 20886  1AD7  0872               	movf	??_nullifyBadge_buttonsGet+1,w
 20887  1AD8  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 20888                           
 20889                           ;nullifyBadge.c: 195: return retVal;
 20890  1AD9  0873               	movf	nullifyBadge_buttonsGet@retVal,w
 20891  1ADA  0008               	return
 20892  1ADB                     __end_of_nullifyBadge_buttonsGet:	
 20893                           
 20894                           	psect	text42
 20895  1CDC                     __ptext42:	
 20896 ;; *************** function _led_roundabout *****************
 20897 ;; Defined at:
 20898 ;;		line 154 in file "main.c"
 20899 ;; Parameters:    Size  Location     Type
 20900 ;;  counter         2   16[BANK0 ] unsigned int 
 20901 ;; Auto vars:     Size  Location     Type
 20902 ;;  size            2   22[BANK0 ] unsigned int 
 20903 ;;  leds            2   20[BANK0 ] unsigned int 
 20904 ;; Return value:  Size  Location     Type
 20905 ;;                  1    wreg      void 
 20906 ;; Registers used:
 20907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20908 ;; Tracked objects:
 20909 ;;		On entry : 0/0
 20910 ;;		On exit  : 0/0
 20911 ;;		Unchanged: 0/0
 20912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20914 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20917 ;;Total ram usage:        8 bytes
 20918 ;; Hardware stack levels used:    1
 20919 ;; Hardware stack levels required when called:    9
 20920 ;; This function calls:
 20921 ;;		___lwmod
 20922 ;;		_nullifyBadge_userLedsSet
 20923 ;; This function is called by:
 20924 ;;		_flashy_Main
 20925 ;; This function uses a non-reentrant model
 20926 ;;
 20927                           
 20928                           
 20929                           ;psect for function _led_roundabout
 20930  1CDC                     _led_roundabout:	
 20931                           
 20932                           ;main.c: 155: u16 size = sizeof(roundabout_leds) / sizeof(roundabout_leds[0]);
 20933                           
 20934                           ;incstack = 0
 20935                           ; Regs used in _led_roundabout: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20936  1CDC  300E               	movlw	14
 20937  1CDD  0020               	movlb	0	; select bank0
 20938  1CDE  00B6               	movwf	led_roundabout@size
 20939  1CDF  3000               	movlw	0
 20940  1CE0  00B7               	movwf	led_roundabout@size+1
 20941                           
 20942                           ;main.c: 156: u16 leds = roundabout_leds[counter % size];
 20943  1CE1  0837               	movf	led_roundabout@size+1,w
 20944  1CE2  00A1               	movwf	___lwmod@divisor+1
 20945  1CE3  0836               	movf	led_roundabout@size,w
 20946  1CE4  00A0               	movwf	___lwmod@divisor
 20947  1CE5  0831               	movf	led_roundabout@counter+1,w
 20948  1CE6  00A3               	movwf	___lwmod@dividend+1
 20949  1CE7  0830               	movf	led_roundabout@counter,w
 20950  1CE8  00A2               	movwf	___lwmod@dividend
 20951  1CE9  319A  224E  319C   	fcall	___lwmod
 20952  1CEC  0020               	movlb	0	; select bank0
 20953  1CED  0820               	movf	?___lwmod,w
 20954  1CEE  0709               	addwf	9,w
 20955  1CEF  3EBC               	addlw	(low (_roundabout_leds| (0+512)))& (0+255)
 20956  1CF0  0086               	movwf	6
 20957  1CF1  3002               	movlw	2	; select bank5/6
 20958  1CF2  0087               	movwf	7
 20959  1CF3  3F40               	moviw [0]fsr1
 20960  1CF4  00B4               	movwf	led_roundabout@leds
 20961  1CF5  3F41               	moviw [1]fsr1
 20962  1CF6  00B5               	movwf	led_roundabout@leds+1
 20963                           
 20964                           ;main.c: 158: size = sizeof(roundabout_leds_inverse) / sizeof(roundabout_leds_inverse[0]
      +                          );
 20965  1CF7  300E               	movlw	14
 20966  1CF8  00B6               	movwf	led_roundabout@size
 20967  1CF9  3000               	movlw	0
 20968  1CFA  00B7               	movwf	led_roundabout@size+1
 20969                           
 20970                           ;main.c: 159: leds |= roundabout_leds_inverse[counter % size];
 20971  1CFB  0837               	movf	led_roundabout@size+1,w
 20972  1CFC  00A1               	movwf	___lwmod@divisor+1
 20973  1CFD  0836               	movf	led_roundabout@size,w
 20974  1CFE  00A0               	movwf	___lwmod@divisor
 20975  1CFF  0831               	movf	led_roundabout@counter+1,w
 20976  1D00  00A3               	movwf	___lwmod@dividend+1
 20977  1D01  0830               	movf	led_roundabout@counter,w
 20978  1D02  00A2               	movwf	___lwmod@dividend
 20979  1D03  319A  224E  319C   	fcall	___lwmod
 20980  1D06  0020               	movlb	0	; select bank0
 20981  1D07  0820               	movf	?___lwmod,w
 20982  1D08  0709               	addwf	9,w
 20983  1D09  3EA0               	addlw	(low (_roundabout_leds_inverse| (0+512)))& (0+255)
 20984  1D0A  0086               	movwf	6
 20985  1D0B  3002               	movlw	2	; select bank5/6
 20986  1D0C  0087               	movwf	7
 20987  1D0D  3F40               	moviw [0]fsr1
 20988  1D0E  00B2               	movwf	??_led_roundabout
 20989  1D0F  3F41               	moviw [1]fsr1
 20990  1D10  00B3               	movwf	??_led_roundabout+1
 20991  1D11  0832               	movf	??_led_roundabout,w
 20992  1D12  04B4               	iorwf	led_roundabout@leds,f
 20993  1D13  0833               	movf	??_led_roundabout+1,w
 20994  1D14  04B5               	iorwf	led_roundabout@leds+1,f
 20995                           
 20996                           ;main.c: 161: nullifyBadge_userLedsSet(&badge_inst, leds);
 20997  1D15  0835               	movf	led_roundabout@leds+1,w
 20998  1D16  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 20999  1D17  0834               	movf	led_roundabout@leds,w
 21000  1D18  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21001  1D19  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21002  1D1A  31A7  2754         	fcall	_nullifyBadge_userLedsSet
 21003  1D1C  0008               	return
 21004  1D1D                     __end_of_led_roundabout:	
 21005                           
 21006                           	psect	text43
 21007  27AB                     __ptext43:	
 21008 ;; *************** function _led_rand *****************
 21009 ;; Defined at:
 21010 ;;		line 174 in file "main.c"
 21011 ;; Parameters:    Size  Location     Type
 21012 ;;		None
 21013 ;; Auto vars:     Size  Location     Type
 21014 ;;  spark           2   16[BANK0 ] unsigned int 
 21015 ;; Return value:  Size  Location     Type
 21016 ;;                  1    wreg      void 
 21017 ;; Registers used:
 21018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21019 ;; Tracked objects:
 21020 ;;		On entry : 0/0
 21021 ;;		On exit  : 0/0
 21022 ;;		Unchanged: 0/0
 21023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21027 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21028 ;;Total ram usage:        2 bytes
 21029 ;; Hardware stack levels used:    1
 21030 ;; Hardware stack levels required when called:    9
 21031 ;; This function calls:
 21032 ;;		_nullifyBadge_userLedsSet
 21033 ;;		_rand
 21034 ;; This function is called by:
 21035 ;;		_flashy_Main
 21036 ;; This function uses a non-reentrant model
 21037 ;;
 21038                           
 21039                           
 21040                           ;psect for function _led_rand
 21041  27AB                     _led_rand:	
 21042                           
 21043                           ;main.c: 176: u16 spark = rand() % 65536;
 21044                           
 21045                           ;incstack = 0
 21046                           ; Regs used in _led_rand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21047  27AB  319D  255F  31A7   	fcall	_rand
 21048  27AE  0020               	movlb	0	; select bank0
 21049  27AF  0825               	movf	?_rand+1,w
 21050  27B0  00B1               	movwf	led_rand@spark+1
 21051  27B1  0824               	movf	?_rand,w
 21052  27B2  00B0               	movwf	led_rand@spark
 21053                           
 21054                           ;main.c: 177: nullifyBadge_userLedsSet(&badge_inst,spark);
 21055  27B3  0831               	movf	led_rand@spark+1,w
 21056  27B4  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21057  27B5  0830               	movf	led_rand@spark,w
 21058  27B6  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21059  27B7  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21060  27B8  31A7  2754         	fcall	_nullifyBadge_userLedsSet
 21061  27BA  0008               	return
 21062  27BB                     __end_of_led_rand:	
 21063                           
 21064                           	psect	text44
 21065  1D5F                     __ptext44:	
 21066 ;; *************** function _rand *****************
 21067 ;; Defined at:
 21068 ;;		line 12 in file "/Applications/microchip/xc8/v1.42/sources/common/rand.c"
 21069 ;; Parameters:    Size  Location     Type
 21070 ;;		None
 21071 ;; Auto vars:     Size  Location     Type
 21072 ;;		None
 21073 ;; Return value:  Size  Location     Type
 21074 ;;                  2    4[BANK0 ] int 
 21075 ;; Registers used:
 21076 ;;		wreg, status,2, status,0, pclath, cstack
 21077 ;; Tracked objects:
 21078 ;;		On entry : 0/0
 21079 ;;		On exit  : 0/0
 21080 ;;		Unchanged: 0/0
 21081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21084 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21085 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21086 ;;Total ram usage:        7 bytes
 21087 ;; Hardware stack levels used:    1
 21088 ;; Hardware stack levels required when called:    5
 21089 ;; This function calls:
 21090 ;;		___lmul
 21091 ;; This function is called by:
 21092 ;;		_led_rand
 21093 ;; This function uses a non-reentrant model
 21094 ;;
 21095                           
 21096                           
 21097                           ;psect for function _rand
 21098  1D5F                     _rand:	
 21099                           
 21100                           ;incstack = 0
 21101                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
 21102  1D5F  0021               	movlb	1	; select bank1
 21103  1D60  085D               	movf	(_randx+3)^(0+128),w
 21104  1D61  00F4               	movwf	___lmul@multiplier+3
 21105  1D62  085C               	movf	(_randx+2)^(0+128),w
 21106  1D63  00F3               	movwf	___lmul@multiplier+2
 21107  1D64  085B               	movf	(_randx+1)^(0+128),w
 21108  1D65  00F2               	movwf	___lmul@multiplier+1
 21109  1D66  085A               	movf	_randx^(0+128),w
 21110  1D67  00F1               	movwf	___lmul@multiplier
 21111  1D68  3041               	movlw	65
 21112  1D69  00F8               	movwf	___lmul@multiplicand+3
 21113  1D6A  30C6               	movlw	198
 21114  1D6B  00F7               	movwf	___lmul@multiplicand+2
 21115  1D6C  304E               	movlw	78
 21116  1D6D  00F6               	movwf	___lmul@multiplicand+1
 21117  1D6E  306D               	movlw	109
 21118  1D6F  00F5               	movwf	___lmul@multiplicand
 21119  1D70  319A  22DB  319D   	fcall	___lmul
 21120  1D73  0874               	movf	?___lmul+3,w
 21121  1D74  0021               	movlb	1	; select bank1
 21122  1D75  00DD               	movwf	(_randx+3)^(0+128)
 21123  1D76  0873               	movf	?___lmul+2,w
 21124  1D77  00DC               	movwf	(_randx+2)^(0+128)
 21125  1D78  0872               	movf	?___lmul+1,w
 21126  1D79  00DB               	movwf	(_randx+1)^(0+128)
 21127  1D7A  0871               	movf	?___lmul,w
 21128  1D7B  00DA               	movwf	_randx^(0+128)
 21129  1D7C  3039               	movlw	57
 21130  1D7D  07DA               	addwf	_randx^(0+128),f
 21131  1D7E  3030               	movlw	48
 21132  1D7F  3DDB               	addwfc	(_randx+1)^(0+128),f
 21133  1D80  3000               	movlw	0
 21134  1D81  3DDC               	addwfc	(_randx+2)^(0+128),f
 21135  1D82  3000               	movlw	0
 21136  1D83  3DDD               	addwfc	(_randx+3)^(0+128),f
 21137  1D84  085A               	movf	_randx^(0+128),w
 21138  1D85  0020               	movlb	0	; select bank0
 21139  1D86  00A6               	movwf	??_rand
 21140  1D87  0021               	movlb	1	; select bank1
 21141  1D88  085B               	movf	(_randx+1)^(0+128),w
 21142  1D89  0020               	movlb	0	; select bank0
 21143  1D8A  00A7               	movwf	??_rand+1
 21144  1D8B  0021               	movlb	1	; select bank1
 21145  1D8C  085C               	movf	(_randx+2)^(0+128),w
 21146  1D8D  0020               	movlb	0	; select bank0
 21147  1D8E  00A8               	movwf	??_rand+2
 21148  1D8F  0021               	movlb	1	; select bank1
 21149  1D90  085D               	movf	(_randx+3)^(0+128),w
 21150  1D91  0020               	movlb	0	; select bank0
 21151  1D92  00A9               	movwf	??_rand+3
 21152  1D93  3010               	movlw	16
 21153  1D94  00AA               	movwf	??_rand+4
 21154  1D95                     u3535:	
 21155  1D95  37A9               	asrf	??_rand+3,f
 21156  1D96  0CA8               	rrf	??_rand+2,f
 21157  1D97  0CA7               	rrf	??_rand+1,f
 21158  1D98  0CA6               	rrf	??_rand,f
 21159  1D99  0BAA               	decfsz	??_rand+4,f
 21160  1D9A  2D95               	goto	u3535
 21161  1D9B  30FF               	movlw	255
 21162  1D9C  0526               	andwf	??_rand,w
 21163  1D9D  00A4               	movwf	?_rand
 21164  1D9E  307F               	movlw	127
 21165  1D9F  0527               	andwf	??_rand+1,w
 21166  1DA0  00A5               	movwf	?_rand+1
 21167  1DA1  0008               	return
 21168  1DA2                     __end_of_rand:	
 21169                           
 21170                           	psect	text45
 21171  1ADB                     __ptext45:	
 21172 ;; *************** function ___lmul *****************
 21173 ;; Defined at:
 21174 ;;		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul32.c"
 21175 ;; Parameters:    Size  Location     Type
 21176 ;;  multiplier      4    1[COMMON] unsigned long 
 21177 ;;  multiplicand    4    5[COMMON] unsigned long 
 21178 ;; Auto vars:     Size  Location     Type
 21179 ;;  product         4    0[BANK0 ] unsigned long 
 21180 ;; Return value:  Size  Location     Type
 21181 ;;                  4    1[COMMON] unsigned long 
 21182 ;; Registers used:
 21183 ;;		wreg, status,2, status,0
 21184 ;; Tracked objects:
 21185 ;;		On entry : 0/0
 21186 ;;		On exit  : 0/0
 21187 ;;		Unchanged: 0/0
 21188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21189 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21190 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21192 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21193 ;;Total ram usage:       12 bytes
 21194 ;; Hardware stack levels used:    1
 21195 ;; Hardware stack levels required when called:    4
 21196 ;; This function calls:
 21197 ;;		Nothing
 21198 ;; This function is called by:
 21199 ;;		_rand
 21200 ;; This function uses a non-reentrant model
 21201 ;;
 21202                           
 21203                           
 21204                           ;psect for function ___lmul
 21205  1ADB                     ___lmul:	
 21206                           
 21207                           ;incstack = 0
 21208                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 21209  1ADB  3000               	movlw	0
 21210  1ADC  0020               	movlb	0	; select bank0
 21211  1ADD  00A3               	movwf	___lmul@product+3
 21212  1ADE  3000               	movlw	0
 21213  1ADF  00A2               	movwf	___lmul@product+2
 21214  1AE0  3000               	movlw	0
 21215  1AE1  00A1               	movwf	___lmul@product+1
 21216  1AE2  3000               	movlw	0
 21217  1AE3  00A0               	movwf	___lmul@product
 21218  1AE4                     l6273:	
 21219  1AE4  1C71               	btfss	___lmul@multiplier,0
 21220  1AE5  2AEF               	goto	l6277
 21221  1AE6  0875               	movf	___lmul@multiplicand,w
 21222  1AE7  0020               	movlb	0	; select bank0
 21223  1AE8  07A0               	addwf	___lmul@product,f
 21224  1AE9  0876               	movf	___lmul@multiplicand+1,w
 21225  1AEA  3DA1               	addwfc	___lmul@product+1,f
 21226  1AEB  0877               	movf	___lmul@multiplicand+2,w
 21227  1AEC  3DA2               	addwfc	___lmul@product+2,f
 21228  1AED  0878               	movf	___lmul@multiplicand+3,w
 21229  1AEE  3DA3               	addwfc	___lmul@product+3,f
 21230  1AEF                     l6277:	
 21231  1AEF  3001               	movlw	1
 21232  1AF0                     u3305:	
 21233  1AF0  35F5               	lslf	___lmul@multiplicand,f
 21234  1AF1  0DF6               	rlf	___lmul@multiplicand+1,f
 21235  1AF2  0DF7               	rlf	___lmul@multiplicand+2,f
 21236  1AF3  0DF8               	rlf	___lmul@multiplicand+3,f
 21237  1AF4  0B89               	decfsz	9,f
 21238  1AF5  2AF0               	goto	u3305
 21239  1AF6  3001               	movlw	1
 21240  1AF7                     u3315:	
 21241  1AF7  36F4               	lsrf	___lmul@multiplier+3,f
 21242  1AF8  0CF3               	rrf	___lmul@multiplier+2,f
 21243  1AF9  0CF2               	rrf	___lmul@multiplier+1,f
 21244  1AFA  0CF1               	rrf	___lmul@multiplier,f
 21245  1AFB  0B89               	decfsz	9,f
 21246  1AFC  2AF7               	goto	u3315
 21247  1AFD  0874               	movf	___lmul@multiplier+3,w
 21248  1AFE  0473               	iorwf	___lmul@multiplier+2,w
 21249  1AFF  0472               	iorwf	___lmul@multiplier+1,w
 21250  1B00  0471               	iorwf	___lmul@multiplier,w
 21251  1B01  1D03               	skipz
 21252  1B02  2AE4               	goto	l6273
 21253  1B03  0020               	movlb	0	; select bank0
 21254  1B04  0823               	movf	___lmul@product+3,w
 21255  1B05  00F4               	movwf	?___lmul+3
 21256  1B06  0822               	movf	___lmul@product+2,w
 21257  1B07  00F3               	movwf	?___lmul+2
 21258  1B08  0821               	movf	___lmul@product+1,w
 21259  1B09  00F2               	movwf	?___lmul+1
 21260  1B0A  0820               	movf	___lmul@product,w
 21261  1B0B  00F1               	movwf	?___lmul
 21262  1B0C  0008               	return
 21263  1B0D                     __end_of___lmul:	
 21264                           
 21265                           	psect	text46
 21266  1C9B                     __ptext46:	
 21267 ;; *************** function _led_curtain *****************
 21268 ;; Defined at:
 21269 ;;		line 164 in file "main.c"
 21270 ;; Parameters:    Size  Location     Type
 21271 ;;  counter         2   16[BANK0 ] unsigned int 
 21272 ;; Auto vars:     Size  Location     Type
 21273 ;;  size            2   22[BANK0 ] unsigned int 
 21274 ;;  leds            2   20[BANK0 ] unsigned int 
 21275 ;; Return value:  Size  Location     Type
 21276 ;;                  1    wreg      void 
 21277 ;; Registers used:
 21278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21279 ;; Tracked objects:
 21280 ;;		On entry : 0/0
 21281 ;;		On exit  : 0/0
 21282 ;;		Unchanged: 0/0
 21283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21285 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21287 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21288 ;;Total ram usage:        8 bytes
 21289 ;; Hardware stack levels used:    1
 21290 ;; Hardware stack levels required when called:    9
 21291 ;; This function calls:
 21292 ;;		___lwmod
 21293 ;;		_nullifyBadge_userLedsSet
 21294 ;; This function is called by:
 21295 ;;		_flashy_Main
 21296 ;; This function uses a non-reentrant model
 21297 ;;
 21298                           
 21299                           
 21300                           ;psect for function _led_curtain
 21301  1C9B                     _led_curtain:	
 21302                           
 21303                           ;main.c: 165: u16 size = sizeof(curtain_leds) / sizeof(curtain_leds[0]);
 21304                           
 21305                           ;incstack = 0
 21306                           ; Regs used in _led_curtain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21307  1C9B  300E               	movlw	14
 21308  1C9C  0020               	movlb	0	; select bank0
 21309  1C9D  00B6               	movwf	led_curtain@size
 21310  1C9E  3000               	movlw	0
 21311  1C9F  00B7               	movwf	led_curtain@size+1
 21312                           
 21313                           ;main.c: 166: u16 leds = curtain_leds[counter % size];
 21314  1CA0  0837               	movf	led_curtain@size+1,w
 21315  1CA1  00A1               	movwf	___lwmod@divisor+1
 21316  1CA2  0836               	movf	led_curtain@size,w
 21317  1CA3  00A0               	movwf	___lwmod@divisor
 21318  1CA4  0831               	movf	led_curtain@counter+1,w
 21319  1CA5  00A3               	movwf	___lwmod@dividend+1
 21320  1CA6  0830               	movf	led_curtain@counter,w
 21321  1CA7  00A2               	movwf	___lwmod@dividend
 21322  1CA8  319A  224E  319C   	fcall	___lwmod
 21323  1CAB  0020               	movlb	0	; select bank0
 21324  1CAC  0820               	movf	?___lwmod,w
 21325  1CAD  0709               	addwf	9,w
 21326  1CAE  3E3C               	addlw	(low (_curtain_leds| (0+768)))& (0+255)
 21327  1CAF  0086               	movwf	6
 21328  1CB0  3003               	movlw	3	; select bank6/7
 21329  1CB1  0087               	movwf	7
 21330  1CB2  3F40               	moviw [0]fsr1
 21331  1CB3  00B4               	movwf	led_curtain@leds
 21332  1CB4  3F41               	moviw [1]fsr1
 21333  1CB5  00B5               	movwf	led_curtain@leds+1
 21334                           
 21335                           ;main.c: 168: size = sizeof(curtain_leds_inverse) / sizeof(curtain_leds_inverse[0]);
 21336  1CB6  300E               	movlw	14
 21337  1CB7  00B6               	movwf	led_curtain@size
 21338  1CB8  3000               	movlw	0
 21339  1CB9  00B7               	movwf	led_curtain@size+1
 21340                           
 21341                           ;main.c: 169: leds |= curtain_leds_inverse[counter % size];
 21342  1CBA  0837               	movf	led_curtain@size+1,w
 21343  1CBB  00A1               	movwf	___lwmod@divisor+1
 21344  1CBC  0836               	movf	led_curtain@size,w
 21345  1CBD  00A0               	movwf	___lwmod@divisor
 21346  1CBE  0831               	movf	led_curtain@counter+1,w
 21347  1CBF  00A3               	movwf	___lwmod@dividend+1
 21348  1CC0  0830               	movf	led_curtain@counter,w
 21349  1CC1  00A2               	movwf	___lwmod@dividend
 21350  1CC2  319A  224E  319C   	fcall	___lwmod
 21351  1CC5  0020               	movlb	0	; select bank0
 21352  1CC6  0820               	movf	?___lwmod,w
 21353  1CC7  0709               	addwf	9,w
 21354  1CC8  3E20               	addlw	(low (_curtain_leds_inverse| (0+768)))& (0+255)
 21355  1CC9  0086               	movwf	6
 21356  1CCA  3003               	movlw	3	; select bank6/7
 21357  1CCB  0087               	movwf	7
 21358  1CCC  3F40               	moviw [0]fsr1
 21359  1CCD  00B2               	movwf	??_led_curtain
 21360  1CCE  3F41               	moviw [1]fsr1
 21361  1CCF  00B3               	movwf	??_led_curtain+1
 21362  1CD0  0832               	movf	??_led_curtain,w
 21363  1CD1  04B4               	iorwf	led_curtain@leds,f
 21364  1CD2  0833               	movf	??_led_curtain+1,w
 21365  1CD3  04B5               	iorwf	led_curtain@leds+1,f
 21366                           
 21367                           ;main.c: 171: nullifyBadge_userLedsSet(&badge_inst, leds);
 21368  1CD4  0835               	movf	led_curtain@leds+1,w
 21369  1CD5  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21370  1CD6  0834               	movf	led_curtain@leds,w
 21371  1CD7  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21372  1CD8  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21373  1CD9  31A7  2754         	fcall	_nullifyBadge_userLedsSet
 21374  1CDB  0008               	return
 21375  1CDC                     __end_of_led_curtain:	
 21376                           
 21377                           	psect	text47
 21378  26AF                     __ptext47:	
 21379 ;; *************** function _led_circle *****************
 21380 ;; Defined at:
 21381 ;;		line 180 in file "main.c"
 21382 ;; Parameters:    Size  Location     Type
 21383 ;;  count           2   16[BANK0 ] unsigned int 
 21384 ;; Auto vars:     Size  Location     Type
 21385 ;;		None
 21386 ;; Return value:  Size  Location     Type
 21387 ;;                  1    wreg      void 
 21388 ;; Registers used:
 21389 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21390 ;; Tracked objects:
 21391 ;;		On entry : 0/0
 21392 ;;		On exit  : 0/0
 21393 ;;		Unchanged: 0/0
 21394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21399 ;;Total ram usage:        2 bytes
 21400 ;; Hardware stack levels used:    1
 21401 ;; Hardware stack levels required when called:    9
 21402 ;; This function calls:
 21403 ;;		_nullifyBadge_userLedsSet
 21404 ;; This function is called by:
 21405 ;;		_flashy_Main
 21406 ;; This function uses a non-reentrant model
 21407 ;;
 21408                           
 21409                           
 21410                           ;psect for function _led_circle
 21411  26AF                     _led_circle:	
 21412                           
 21413                           ;main.c: 182: nullifyBadge_userLedsSet(&badge_inst,count);
 21414                           
 21415                           ;incstack = 0
 21416                           ; Regs used in _led_circle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21417  26AF  0020               	movlb	0	; select bank0
 21418  26B0  0831               	movf	led_circle@count+1,w
 21419  26B1  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21420  26B2  0830               	movf	led_circle@count,w
 21421  26B3  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21422  26B4  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21423  26B5  31A7  2754         	fcall	_nullifyBadge_userLedsSet
 21424  26B7  0008               	return
 21425  26B8                     __end_of_led_circle:	
 21426                           
 21427                           	psect	text48
 21428  2754                     __ptext48:	
 21429 ;; *************** function _nullifyBadge_userLedsSet *****************
 21430 ;; Defined at:
 21431 ;;		line 164 in file "nullifyBadge.c"
 21432 ;; Parameters:    Size  Location     Type
 21433 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 21434 ;;		 -> badge_inst(18), 
 21435 ;;  userLedData     2   13[BANK0 ] unsigned int 
 21436 ;; Auto vars:     Size  Location     Type
 21437 ;;  badge           1   15[BANK0 ] PTR struct t_nullifyBadg
 21438 ;;		 -> badge_inst(18), 
 21439 ;; Return value:  Size  Location     Type
 21440 ;;                  1    wreg      void 
 21441 ;; Registers used:
 21442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21443 ;; Tracked objects:
 21444 ;;		On entry : 0/0
 21445 ;;		On exit  : 0/0
 21446 ;;		Unchanged: 0/0
 21447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21451 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21452 ;;Total ram usage:        3 bytes
 21453 ;; Hardware stack levels used:    1
 21454 ;; Hardware stack levels required when called:    8
 21455 ;; This function calls:
 21456 ;;		_displayL2_SetUserLeds
 21457 ;; This function is called by:
 21458 ;;		_led_roundabout
 21459 ;;		_led_curtain
 21460 ;;		_led_rand
 21461 ;;		_led_circle
 21462 ;;		_menu_display_option
 21463 ;;		_flashy_Main
 21464 ;;		_locked_Main
 21465 ;; This function uses a non-reentrant model
 21466 ;;
 21467                           
 21468                           
 21469                           ;psect for function _nullifyBadge_userLedsSet
 21470  2754                     _nullifyBadge_userLedsSet:	
 21471                           
 21472                           ;incstack = 0
 21473                           ; Regs used in _nullifyBadge_userLedsSet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 21474                           ;nullifyBadge_userLedsSet@badge stored from wreg
 21475  2754  0020               	movlb	0	; select bank0
 21476  2755  00AF               	movwf	nullifyBadge_userLedsSet@badge
 21477                           
 21478                           ;nullifyBadge.c: 165: if (badge_locked) {
 21479  2756  087C               	movf	_badge_locked,w
 21480  2757  1D03               	btfss	3,2
 21481                           
 21482                           ;nullifyBadge.c: 166: userLedData |= 1024;
 21483  2758  152E               	bsf	nullifyBadge_userLedsSet@userLedData+1,2
 21484                           
 21485                           ;nullifyBadge.c: 167: }
 21486                           ;nullifyBadge.c: 168: displayL2_SetUserLeds(&badge->display, userLedData);
 21487  2759  082E               	movf	nullifyBadge_userLedsSet@userLedData+1,w
 21488  275A  00AC               	movwf	displayL2_SetUserLeds@userLedData+1
 21489  275B  082D               	movf	nullifyBadge_userLedsSet@userLedData,w
 21490  275C  00AB               	movwf	displayL2_SetUserLeds@userLedData
 21491  275D  082F               	movf	nullifyBadge_userLedsSet@badge,w
 21492  275E  3199  2134         	fcall	_displayL2_SetUserLeds
 21493  2760  0008               	return
 21494  2761                     __end_of_nullifyBadge_userLedsSet:	
 21495                           
 21496                           	psect	text49
 21497  1934                     __ptext49:	
 21498 ;; *************** function _displayL2_SetUserLeds *****************
 21499 ;; Defined at:
 21500 ;;		line 88 in file "nullifyBadge_displayL2.c"
 21501 ;; Parameters:    Size  Location     Type
 21502 ;;  display         1    wreg     PTR struct t_nullifyDisp
 21503 ;;		 -> badge_inst(18), 
 21504 ;;  userLedData     2   11[BANK0 ] unsigned int 
 21505 ;; Auto vars:     Size  Location     Type
 21506 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 21507 ;;		 -> badge_inst(18), 
 21508 ;; Return value:  Size  Location     Type
 21509 ;;                  1    wreg      void 
 21510 ;; Registers used:
 21511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21512 ;; Tracked objects:
 21513 ;;		On entry : 0/0
 21514 ;;		On exit  : 0/0
 21515 ;;		Unchanged: 0/0
 21516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21520 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21521 ;;Total ram usage:        3 bytes
 21522 ;; Hardware stack levels used:    1
 21523 ;; Hardware stack levels required when called:    7
 21524 ;; This function calls:
 21525 ;;		_displayL1_SetUserLed
 21526 ;;		_displayL1_Update
 21527 ;; This function is called by:
 21528 ;;		_nullifyBadge_userLedsSet
 21529 ;;		_nullifyBadge_userLedsSetForce
 21530 ;; This function uses a non-reentrant model
 21531 ;;
 21532                           
 21533                           
 21534                           ;psect for function _displayL2_SetUserLeds
 21535  1934                     _displayL2_SetUserLeds:	
 21536                           
 21537                           ;incstack = 0
 21538                           ; Regs used in _displayL2_SetUserLeds: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21539                           ;displayL2_SetUserLeds@display stored from wreg
 21540  1934  00FB               	movwf	displayL2_SetUserLeds@display
 21541                           
 21542                           ;nullifyBadge_displayL2.c: 89: display->ledVect = userLedData;
 21543  1935  087B               	movf	displayL2_SetUserLeds@display,w
 21544  1936  3E05               	addlw	5
 21545  1937  0086               	movwf	6
 21546  1938  3001               	movlw	1	; select bank2/3
 21547  1939  0087               	movwf	7
 21548  193A  0020               	movlb	0	; select bank0
 21549  193B  082B               	movf	displayL2_SetUserLeds@userLedData,w
 21550  193C  3FC0               	movwi [0]fsr1
 21551  193D  082C               	movf	displayL2_SetUserLeds@userLedData+1,w
 21552  193E  3FC1               	movwi [1]fsr1
 21553                           
 21554                           ;nullifyBadge_displayL2.c: 90: displayL1_SetUserLed(&display->display_l1, display->ledVe
      +                          ct);
 21555  193F  087B               	movf	displayL2_SetUserLeds@display,w
 21556  1940  3E05               	addlw	5
 21557  1941  0086               	movwf	6
 21558  1942  3001               	movlw	1	; select bank2/3
 21559  1943  0087               	movwf	7
 21560  1944  3F40               	moviw [0]fsr1
 21561  1945  00F1               	movwf	displayL1_SetUserLed@userLedVect
 21562  1946  3F41               	moviw [1]fsr1
 21563  1947  00F2               	movwf	displayL1_SetUserLed@userLedVect+1
 21564  1948  087B               	movf	displayL2_SetUserLeds@display,w
 21565  1949  3E07               	addlw	7
 21566  194A  3198  2000  3199   	fcall	_displayL1_SetUserLed
 21567                           
 21568                           ;nullifyBadge_displayL2.c: 91: displayL1_Update(&display->display_l1);
 21569  194D  087B               	movf	displayL2_SetUserLeds@display,w
 21570  194E  3E07               	addlw	7
 21571  194F  31A7  27CB         	fcall	_displayL1_Update
 21572  1951  0008               	return
 21573  1952                     __end_of_displayL2_SetUserLeds:	
 21574                           
 21575                           	psect	text50
 21576  1800                     __ptext50:	
 21577 ;; *************** function _displayL1_SetUserLed *****************
 21578 ;; Defined at:
 21579 ;;		line 71 in file "nullifyBadge_displayL1.c"
 21580 ;; Parameters:    Size  Location     Type
 21581 ;;  display         1    wreg     PTR struct t_nullifyDisp
 21582 ;;		 -> badge_inst(18), 
 21583 ;;  userLedVect     2    1[COMMON] unsigned int 
 21584 ;; Auto vars:     Size  Location     Type
 21585 ;;  display         1    4[COMMON] PTR struct t_nullifyDisp
 21586 ;;		 -> badge_inst(18), 
 21587 ;; Return value:  Size  Location     Type
 21588 ;;                  1    wreg      void 
 21589 ;; Registers used:
 21590 ;;		wreg, fsr1l, fsr1h, status,2
 21591 ;; Tracked objects:
 21592 ;;		On entry : 0/0
 21593 ;;		On exit  : 0/0
 21594 ;;		Unchanged: 0/0
 21595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21599 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21600 ;;Total ram usage:        4 bytes
 21601 ;; Hardware stack levels used:    1
 21602 ;; Hardware stack levels required when called:    4
 21603 ;; This function calls:
 21604 ;;		Nothing
 21605 ;; This function is called by:
 21606 ;;		_displayL2_SetUserLeds
 21607 ;;		_displayL2_ClrUserLeds
 21608 ;; This function uses a non-reentrant model
 21609 ;;
 21610                           
 21611                           
 21612                           ;psect for function _displayL1_SetUserLed
 21613  1800                     _displayL1_SetUserLed:	
 21614                           
 21615                           ;incstack = 0
 21616                           ; Regs used in _displayL1_SetUserLed: [wreg+fsr1l+fsr1h+status,2]
 21617                           ;displayL1_SetUserLed@display stored from wreg
 21618  1800  00F4               	movwf	displayL1_SetUserLed@display
 21619                           
 21620                           ;nullifyBadge_displayL1.c: 73: display->displayVect[0] = (u8) (userLedVect >> 8);
 21621  1801  0872               	movf	displayL1_SetUserLed@userLedVect+1,w
 21622  1802  00F3               	movwf	??_displayL1_SetUserLed
 21623  1803  0874               	movf	displayL1_SetUserLed@display,w
 21624  1804  0086               	movwf	6
 21625  1805  3001               	movlw	1	; select bank2/3
 21626  1806  0087               	movwf	7
 21627  1807  0873               	movf	??_displayL1_SetUserLed,w
 21628  1808  0081               	movwf	1
 21629                           
 21630                           ;nullifyBadge_displayL1.c: 74: display->displayVect[1] = (u8) (userLedVect & 0xFF);
 21631  1809  0871               	movf	displayL1_SetUserLed@userLedVect,w
 21632  180A  00F3               	movwf	??_displayL1_SetUserLed
 21633  180B  0A74               	incf	displayL1_SetUserLed@display,w
 21634  180C  0086               	movwf	6
 21635  180D  3001               	movlw	1	; select bank2/3
 21636  180E  0087               	movwf	7
 21637  180F  0873               	movf	??_displayL1_SetUserLed,w
 21638  1810  0081               	movwf	1
 21639  1811  0008               	return
 21640  1812                     __end_of_displayL1_SetUserLed:	
 21641                           
 21642                           	psect	text51
 21643  1FA1                     __ptext51:	
 21644 ;; *************** function _flashy_display_option *****************
 21645 ;; Defined at:
 21646 ;;		line 76 in file "flashy_task.c"
 21647 ;; Parameters:    Size  Location     Type
 21648 ;;  data            2   44[BANK0 ] PTR struct t_flashy_task
 21649 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 21650 ;;		 -> flashy_TaskData(30), NULL(0), 
 21651 ;; Auto vars:     Size  Location     Type
 21652 ;;		None
 21653 ;; Return value:  Size  Location     Type
 21654 ;;                  1    wreg      void 
 21655 ;; Registers used:
 21656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21657 ;; Tracked objects:
 21658 ;;		On entry : 0/0
 21659 ;;		On exit  : 0/0
 21660 ;;		Unchanged: 0/0
 21661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21662 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21666 ;;Total ram usage:        2 bytes
 21667 ;; Hardware stack levels used:    1
 21668 ;; Hardware stack levels required when called:   10
 21669 ;; This function calls:
 21670 ;;		_marquee
 21671 ;;		_marquee_speedy
 21672 ;;		_nullifyBadge_segDisplayForceUpdate
 21673 ;;		_nullifyBadge_segDisplayPutStr
 21674 ;; This function is called by:
 21675 ;;		_flashy_Main
 21676 ;; This function uses a non-reentrant model
 21677 ;;
 21678                           
 21679                           
 21680                           ;psect for function _flashy_display_option
 21681  1FA1                     _flashy_display_option:	
 21682                           
 21683                           ;flashy_task.c: 77: if (flashy_option_idx == 0){
 21684                           
 21685                           ;incstack = 0
 21686                           ; Regs used in _flashy_display_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21687  1FA1  0021               	movlb	1	; select bank1
 21688  1FA2  0826               	movf	_flashy_option_idx^(0+128),w
 21689  1FA3  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 21690  1FA4  1D03               	btfss	3,2
 21691  1FA5  2FC1               	goto	l6555
 21692                           
 21693                           ;flashy_task.c: 78: nullifyBadge_segDisplayPutStr(data->badge, flashy_option[flashy_opti
      +                          on_idx]);
 21694  1FA6  3526               	lslf	_flashy_option_idx^(0+128),w
 21695  1FA7  3E53               	addlw	(low (_flashy_option| (0+256)))& (0+255)
 21696  1FA8  0086               	movwf	6
 21697  1FA9  3001               	movlw	1	; select bank2/3
 21698  1FAA  0087               	movwf	7
 21699  1FAB  3F40               	moviw [0]fsr1
 21700  1FAC  0020               	movlb	0	; select bank0
 21701  1FAD  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 21702  1FAE  3F41               	moviw [1]fsr1
 21703  1FAF  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 21704  1FB0  084C               	movf	flashy_display_option@data,w
 21705  1FB1  0086               	movwf	6
 21706  1FB2  084D               	movf	flashy_display_option@data+1,w
 21707  1FB3  0087               	movwf	7
 21708  1FB4  0801               	movf	1,w
 21709  1FB5  31A6  26CC  319F   	fcall	_nullifyBadge_segDisplayPutStr
 21710                           
 21711                           ;flashy_task.c: 79: nullifyBadge_segDisplayForceUpdate(data->badge);
 21712  1FB8  0020               	movlb	0	; select bank0
 21713  1FB9  084C               	movf	flashy_display_option@data,w
 21714  1FBA  0086               	movwf	6
 21715  1FBB  084D               	movf	flashy_display_option@data+1,w
 21716  1FBC  0087               	movwf	7
 21717  1FBD  0801               	movf	1,w
 21718  1FBE  31A6  2684         	fcall	_nullifyBadge_segDisplayForceUpdate
 21719                           
 21720                           ;flashy_task.c: 80: }
 21721  1FC0  0008               	return
 21722  1FC1                     l6555:	
 21723                           
 21724                           ;flashy_task.c: 81: else {
 21725                           ;flashy_task.c: 82: if (data->display_state==FLASHY_STATE_DISPLAY ){
 21726  1FC1  0020               	movlb	0	; select bank0
 21727  1FC2  084C               	movf	flashy_display_option@data,w
 21728  1FC3  0086               	movwf	6
 21729  1FC4  084D               	movf	flashy_display_option@data+1,w
 21730  1FC5  0087               	movwf	7
 21731  1FC6  3146               	addfsr 1,6
 21732  1FC7  0801               	movf	1,w
 21733  1FC8  1D03               	btfss	3,2
 21734  1FC9  2FE9               	goto	l6559
 21735                           
 21736                           ;flashy_task.c: 84: marquee_speedy(flashy_option[flashy_option_idx], data->noholdCount, 
      +                          flashy_scroll_rate);
 21737  1FCA  0021               	movlb	1	; select bank1
 21738  1FCB  3526               	lslf	_flashy_option_idx^(0+128),w
 21739  1FCC  3E53               	addlw	(low (_flashy_option| (0+256)))& (0+255)
 21740  1FCD  0086               	movwf	6
 21741  1FCE  3001               	movlw	1	; select bank2/3
 21742  1FCF  0087               	movwf	7
 21743  1FD0  3F40               	moviw [0]fsr1
 21744  1FD1  0020               	movlb	0	; select bank0
 21745  1FD2  00BA               	movwf	marquee_speedy@string
 21746  1FD3  3F41               	moviw [1]fsr1
 21747  1FD4  00BB               	movwf	marquee_speedy@string+1
 21748  1FD5  084C               	movf	flashy_display_option@data,w
 21749  1FD6  0086               	movwf	6
 21750  1FD7  084D               	movf	flashy_display_option@data+1,w
 21751  1FD8  0087               	movwf	7
 21752  1FD9  315C               	addfsr 1,28
 21753  1FDA  3F40               	moviw [0]fsr1
 21754  1FDB  00BC               	movwf	marquee_speedy@count
 21755  1FDC  3F41               	moviw [1]fsr1
 21756  1FDD  00BD               	movwf	marquee_speedy@count+1
 21757  1FDE  0021               	movlb	1	; select bank1
 21758  1FDF  082B               	movf	(_flashy_scroll_rate+1)^(0+128),w
 21759  1FE0  0020               	movlb	0	; select bank0
 21760  1FE1  00BF               	movwf	marquee_speedy@multiplier+1
 21761  1FE2  0021               	movlb	1	; select bank1
 21762  1FE3  082A               	movf	_flashy_scroll_rate^(0+128),w
 21763  1FE4  0020               	movlb	0	; select bank0
 21764  1FE5  00BE               	movwf	marquee_speedy@multiplier
 21765  1FE6  3193  2373         	fcall	_marquee_speedy
 21766                           
 21767                           ;flashy_task.c: 85: }
 21768  1FE8  0008               	return
 21769  1FE9                     l6559:	
 21770                           
 21771                           ;flashy_task.c: 86: else{
 21772                           ;flashy_task.c: 87: marquee(flashy_option[flashy_option_idx], data->noholdCount);
 21773  1FE9  0021               	movlb	1	; select bank1
 21774  1FEA  3526               	lslf	_flashy_option_idx^(0+128),w
 21775  1FEB  3E53               	addlw	(low (_flashy_option| (0+256)))& (0+255)
 21776  1FEC  0086               	movwf	6
 21777  1FED  3001               	movlw	1	; select bank2/3
 21778  1FEE  0087               	movwf	7
 21779  1FEF  3F40               	moviw [0]fsr1
 21780  1FF0  0020               	movlb	0	; select bank0
 21781  1FF1  00BA               	movwf	marquee@string
 21782  1FF2  3F41               	moviw [1]fsr1
 21783  1FF3  00BB               	movwf	marquee@string+1
 21784  1FF4  084C               	movf	flashy_display_option@data,w
 21785  1FF5  0086               	movwf	6
 21786  1FF6  084D               	movf	flashy_display_option@data+1,w
 21787  1FF7  0087               	movwf	7
 21788  1FF8  315C               	addfsr 1,28
 21789  1FF9  3F40               	moviw [0]fsr1
 21790  1FFA  00BC               	movwf	marquee@count
 21791  1FFB  3F41               	moviw [1]fsr1
 21792  1FFC  00BD               	movwf	marquee@count+1
 21793  1FFD  3193  23E6         	fcall	_marquee
 21794  1FFF  0008               	return
 21795  2000                     __end_of_flashy_display_option:	
 21796                           
 21797                           	psect	text52
 21798  1373                     __ptext52:	
 21799 ;; *************** function _marquee_speedy *****************
 21800 ;; Defined at:
 21801 ;;		line 128 in file "main.c"
 21802 ;; Parameters:    Size  Location     Type
 21803 ;;  string          2   26[BANK0 ] PTR unsigned char 
 21804 ;;		 -> STR_13(6), STR_12(8), STR_11(9), STR_10(5), 
 21805 ;;  count           2   28[BANK0 ] unsigned int 
 21806 ;;  multiplier      2   30[BANK0 ] unsigned int 
 21807 ;; Auto vars:     Size  Location     Type
 21808 ;;  j               2   42[BANK0 ] unsigned int 
 21809 ;;  display_stri    5   33[BANK0 ] unsigned char [5]
 21810 ;;  string_lengt    2   40[BANK0 ] unsigned int 
 21811 ;;  i               2   38[BANK0 ] unsigned int 
 21812 ;; Return value:  Size  Location     Type
 21813 ;;                  1    wreg      void 
 21814 ;; Registers used:
 21815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21816 ;; Tracked objects:
 21817 ;;		On entry : 0/0
 21818 ;;		On exit  : 0/0
 21819 ;;		Unchanged: 0/0
 21820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21821 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21822 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21823 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21824 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21825 ;;Total ram usage:       18 bytes
 21826 ;; Hardware stack levels used:    1
 21827 ;; Hardware stack levels required when called:    9
 21828 ;; This function calls:
 21829 ;;		___lwdiv
 21830 ;;		___lwmod
 21831 ;;		_nullifyBadge_segDisplayForceUpdate
 21832 ;;		_nullifyBadge_segDisplayPutStr
 21833 ;;		_strlen
 21834 ;; This function is called by:
 21835 ;;		_flashy_display_option
 21836 ;; This function uses a non-reentrant model
 21837 ;;
 21838                           
 21839                           
 21840                           ;psect for function _marquee_speedy
 21841  1373                     _marquee_speedy:	
 21842                           
 21843                           ;main.c: 129: u16 string_length = strlen((const char *) string);
 21844                           
 21845                           ;incstack = 0
 21846                           ; Regs used in _marquee_speedy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21847  1373  0020               	movlb	0	; select bank0
 21848  1374  083B               	movf	marquee_speedy@string+1,w
 21849  1375  00F2               	movwf	strlen@s+1
 21850  1376  083A               	movf	marquee_speedy@string,w
 21851  1377  00F1               	movwf	strlen@s
 21852  1378  3199  2116  3193   	fcall	_strlen
 21853  137B  0872               	movf	?_strlen+1,w
 21854  137C  0020               	movlb	0	; select bank0
 21855  137D  00C9               	movwf	marquee_speedy@string_length+1
 21856  137E  0871               	movf	?_strlen,w
 21857  137F  00C8               	movwf	marquee_speedy@string_length
 21858                           
 21859                           ;main.c: 130: char display_string[] = { ' ', ' ', ' ', ' ', '\0' };
 21860  1380  3068               	movlw	low marquee_speedy@F14026
 21861  1381  0086               	movwf	6
 21862  1382  3001               	movlw	high marquee_speedy@F14026
 21863  1383  0087               	movwf	7
 21864  1384  3041               	movlw	low marquee_speedy@display_string
 21865  1385  0084               	movwf	4
 21866  1386  3000               	movlw	high marquee_speedy@display_string
 21867  1387  0085               	movwf	5
 21868  1388  3005               	movlw	5
 21869  1389  00C0               	movwf	??_marquee_speedy
 21870  138A                     u3460:	
 21871  138A  0016               	moviw fsr1++
 21872  138B  001A               	movwi fsr0++
 21873  138C  0BC0               	decfsz	??_marquee_speedy,f
 21874  138D  2B8A               	goto	u3460
 21875                           
 21876                           ;main.c: 131: u16 i = (count / multiplier) % string_length;
 21877  138E  0849               	movf	marquee_speedy@string_length+1,w
 21878  138F  00A1               	movwf	___lwmod@divisor+1
 21879  1390  0848               	movf	marquee_speedy@string_length,w
 21880  1391  00A0               	movwf	___lwmod@divisor
 21881  1392  083F               	movf	marquee_speedy@multiplier+1,w
 21882  1393  00F2               	movwf	___lwdiv@divisor+1
 21883  1394  083E               	movf	marquee_speedy@multiplier,w
 21884  1395  00F1               	movwf	___lwdiv@divisor
 21885  1396  083D               	movf	marquee_speedy@count+1,w
 21886  1397  00F4               	movwf	___lwdiv@dividend+1
 21887  1398  083C               	movf	marquee_speedy@count,w
 21888  1399  00F3               	movwf	___lwdiv@dividend
 21889  139A  319B  233F  3193   	fcall	___lwdiv
 21890  139D  0872               	movf	?___lwdiv+1,w
 21891  139E  0020               	movlb	0	; select bank0
 21892  139F  00A3               	movwf	___lwmod@dividend+1
 21893  13A0  0871               	movf	?___lwdiv,w
 21894  13A1  00A2               	movwf	___lwmod@dividend
 21895  13A2  319A  224E  3193   	fcall	___lwmod
 21896  13A5  0020               	movlb	0	; select bank0
 21897  13A6  0821               	movf	?___lwmod+1,w
 21898  13A7  00C7               	movwf	marquee_speedy@i+1
 21899  13A8  0820               	movf	?___lwmod,w
 21900  13A9  00C6               	movwf	marquee_speedy@i
 21901                           
 21902                           ;main.c: 133: for (u16 j=0; j < 4; j++){
 21903  13AA  01CA               	clrf	marquee_speedy@j
 21904  13AB  01CB               	clrf	marquee_speedy@j+1
 21905  13AC  3000               	movlw	0
 21906  13AD  024B               	subwf	marquee_speedy@j+1,w
 21907  13AE  3004               	movlw	4
 21908  13AF  1903               	skipnz
 21909  13B0  024A               	subwf	marquee_speedy@j,w
 21910  13B1  1803               	btfsc	3,0
 21911  13B2  2BDA               	goto	l6351
 21912  13B3                     l6345:	
 21913                           
 21914                           ;main.c: 134: display_string[j] = string[(i + j) % string_length];
 21915  13B3  0849               	movf	marquee_speedy@string_length+1,w
 21916  13B4  00A1               	movwf	___lwmod@divisor+1
 21917  13B5  0848               	movf	marquee_speedy@string_length,w
 21918  13B6  00A0               	movwf	___lwmod@divisor
 21919  13B7  084A               	movf	marquee_speedy@j,w
 21920  13B8  0746               	addwf	marquee_speedy@i,w
 21921  13B9  00A2               	movwf	___lwmod@dividend
 21922  13BA  084B               	movf	marquee_speedy@j+1,w
 21923  13BB  3D47               	addwfc	marquee_speedy@i+1,w
 21924  13BC  00A3               	movwf	___lwmod@dividend+1
 21925  13BD  319A  224E  3193   	fcall	___lwmod
 21926  13C0  0020               	movlb	0	; select bank0
 21927  13C1  083A               	movf	marquee_speedy@string,w
 21928  13C2  0720               	addwf	?___lwmod,w
 21929  13C3  0084               	movwf	4
 21930  13C4  083B               	movf	marquee_speedy@string+1,w
 21931  13C5  3D21               	addwfc	?___lwmod+1,w
 21932  13C6  0085               	movwf	5
 21933  13C7  0800               	movf	0,w	;code access
 21934  13C8  00C0               	movwf	??_marquee_speedy
 21935  13C9  084A               	movf	marquee_speedy@j,w
 21936  13CA  3E41               	addlw	(low (marquee_speedy@display_string| 0))& (0+255)
 21937  13CB  0086               	movwf	6
 21938  13CC  0187               	clrf	7
 21939  13CD  0840               	movf	??_marquee_speedy,w
 21940  13CE  0081               	movwf	1
 21941  13CF  3001               	movlw	1
 21942  13D0  07CA               	addwf	marquee_speedy@j,f
 21943  13D1  3000               	movlw	0
 21944  13D2  3DCB               	addwfc	marquee_speedy@j+1,f
 21945  13D3  3000               	movlw	0
 21946  13D4  024B               	subwf	marquee_speedy@j+1,w
 21947  13D5  3004               	movlw	4
 21948  13D6  1903               	skipnz
 21949  13D7  024A               	subwf	marquee_speedy@j,w
 21950  13D8  1C03               	skipc
 21951  13D9  2BB3               	goto	l6345
 21952  13DA                     l6351:	
 21953                           
 21954                           ;main.c: 135: }
 21955                           ;main.c: 136: nullifyBadge_segDisplayPutStr(&badge_inst, display_string);
 21956  13DA  3041               	movlw	low marquee_speedy@display_string
 21957  13DB  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 21958  13DC  3000               	movlw	high marquee_speedy@display_string
 21959  13DD  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 21960  13DE  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21961  13DF  31A6  26CC  3193   	fcall	_nullifyBadge_segDisplayPutStr
 21962                           
 21963                           ;main.c: 137: nullifyBadge_segDisplayForceUpdate(&badge_inst);
 21964  13E2  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21965  13E3  31A6  2684         	fcall	_nullifyBadge_segDisplayForceUpdate
 21966  13E5  0008               	return
 21967  13E6                     __end_of_marquee_speedy:	
 21968                           
 21969                           	psect	text53
 21970  13E6                     __ptext53:	
 21971 ;; *************** function _marquee *****************
 21972 ;; Defined at:
 21973 ;;		line 141 in file "main.c"
 21974 ;; Parameters:    Size  Location     Type
 21975 ;;  string          2   26[BANK0 ] PTR unsigned char 
 21976 ;;		 -> STR_20(5), STR_19(5), STR_18(5), STR_17(11), 
 21977 ;;		 -> STR_16(13), STR_13(6), STR_12(8), STR_11(9), 
 21978 ;;		 -> STR_10(5), STR_9(18), STR_7(6), STR_6(10), 
 21979 ;;		 -> STR_5(6), STR_4(5), 
 21980 ;;  count           2   28[BANK0 ] unsigned int 
 21981 ;; Auto vars:     Size  Location     Type
 21982 ;;  j               2   42[BANK0 ] unsigned int 
 21983 ;;  display_stri    5   31[BANK0 ] unsigned char [5]
 21984 ;;  string_lengt    2   40[BANK0 ] unsigned int 
 21985 ;;  i               2   38[BANK0 ] unsigned int 
 21986 ;;  multiplier      2   36[BANK0 ] unsigned int 
 21987 ;; Return value:  Size  Location     Type
 21988 ;;                  1    wreg      void 
 21989 ;; Registers used:
 21990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21991 ;; Tracked objects:
 21992 ;;		On entry : 0/0
 21993 ;;		On exit  : 0/0
 21994 ;;		Unchanged: 0/0
 21995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21996 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21997 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21998 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21999 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22000 ;;Total ram usage:       18 bytes
 22001 ;; Hardware stack levels used:    1
 22002 ;; Hardware stack levels required when called:    9
 22003 ;; This function calls:
 22004 ;;		___lwdiv
 22005 ;;		___lwmod
 22006 ;;		_nullifyBadge_segDisplayForceUpdate
 22007 ;;		_nullifyBadge_segDisplayPutStr
 22008 ;;		_strlen
 22009 ;; This function is called by:
 22010 ;;		_menu_display_option
 22011 ;;		_flashy_display_option
 22012 ;;		_flashy_Main
 22013 ;;		_locked_Main
 22014 ;;		_slot_Main
 22015 ;; This function uses a non-reentrant model
 22016 ;;
 22017                           
 22018                           
 22019                           ;psect for function _marquee
 22020  13E6                     _marquee:	
 22021                           
 22022                           ;main.c: 142: u16 multiplier = 50;
 22023                           
 22024                           ;incstack = 0
 22025                           ; Regs used in _marquee: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22026  13E6  3032               	movlw	50
 22027  13E7  0020               	movlb	0	; select bank0
 22028  13E8  00C4               	movwf	marquee@multiplier
 22029  13E9  3000               	movlw	0
 22030  13EA  00C5               	movwf	marquee@multiplier+1
 22031                           
 22032                           ;main.c: 143: u16 string_length = strlen((const char *) string);
 22033  13EB  083B               	movf	marquee@string+1,w
 22034  13EC  00F2               	movwf	strlen@s+1
 22035  13ED  083A               	movf	marquee@string,w
 22036  13EE  00F1               	movwf	strlen@s
 22037  13EF  3199  2116  3193   	fcall	_strlen
 22038  13F2  0872               	movf	?_strlen+1,w
 22039  13F3  0020               	movlb	0	; select bank0
 22040  13F4  00C9               	movwf	marquee@string_length+1
 22041  13F5  0871               	movf	?_strlen,w
 22042  13F6  00C8               	movwf	marquee@string_length
 22043                           
 22044                           ;main.c: 144: char display_string[] = { ' ', ' ', ' ', ' ', '\0' };
 22045  13F7  3063               	movlw	low marquee@F14035
 22046  13F8  0086               	movwf	6
 22047  13F9  3001               	movlw	high marquee@F14035
 22048  13FA  0087               	movwf	7
 22049  13FB  303F               	movlw	low marquee@display_string
 22050  13FC  0084               	movwf	4
 22051  13FD  3000               	movlw	high marquee@display_string
 22052  13FE  0085               	movwf	5
 22053  13FF  3005               	movlw	5
 22054  1400  00BE               	movwf	??_marquee
 22055  1401                     u3490:	
 22056  1401  0016               	moviw fsr1++
 22057  1402  001A               	movwi fsr0++
 22058  1403  0BBE               	decfsz	??_marquee,f
 22059  1404  2C01               	goto	u3490
 22060                           
 22061                           ;main.c: 145: u16 i = (count / multiplier) % string_length;
 22062  1405  0849               	movf	marquee@string_length+1,w
 22063  1406  00A1               	movwf	___lwmod@divisor+1
 22064  1407  0848               	movf	marquee@string_length,w
 22065  1408  00A0               	movwf	___lwmod@divisor
 22066  1409  0845               	movf	marquee@multiplier+1,w
 22067  140A  00F2               	movwf	___lwdiv@divisor+1
 22068  140B  0844               	movf	marquee@multiplier,w
 22069  140C  00F1               	movwf	___lwdiv@divisor
 22070  140D  083D               	movf	marquee@count+1,w
 22071  140E  00F4               	movwf	___lwdiv@dividend+1
 22072  140F  083C               	movf	marquee@count,w
 22073  1410  00F3               	movwf	___lwdiv@dividend
 22074  1411  319B  233F  3193   	fcall	___lwdiv
 22075  1414  0872               	movf	?___lwdiv+1,w
 22076  1415  0020               	movlb	0	; select bank0
 22077  1416  00A3               	movwf	___lwmod@dividend+1
 22078  1417  0871               	movf	?___lwdiv,w
 22079  1418  00A2               	movwf	___lwmod@dividend
 22080  1419  319A  224E  3193   	fcall	___lwmod
 22081  141C  0020               	movlb	0	; select bank0
 22082  141D  0821               	movf	?___lwmod+1,w
 22083  141E  00C7               	movwf	marquee@i+1
 22084  141F  0820               	movf	?___lwmod,w
 22085  1420  00C6               	movwf	marquee@i
 22086                           
 22087                           ;main.c: 147: for (u16 j=0; j < 4; j++){
 22088  1421  01CA               	clrf	marquee@j
 22089  1422  01CB               	clrf	marquee@j+1
 22090  1423  3000               	movlw	0
 22091  1424  024B               	subwf	marquee@j+1,w
 22092  1425  3004               	movlw	4
 22093  1426  1903               	skipnz
 22094  1427  024A               	subwf	marquee@j,w
 22095  1428  1803               	btfsc	3,0
 22096  1429  2C51               	goto	l6375
 22097  142A                     l6369:	
 22098                           
 22099                           ;main.c: 148: display_string[j] = string[(i + j) % string_length];
 22100  142A  0849               	movf	marquee@string_length+1,w
 22101  142B  00A1               	movwf	___lwmod@divisor+1
 22102  142C  0848               	movf	marquee@string_length,w
 22103  142D  00A0               	movwf	___lwmod@divisor
 22104  142E  084A               	movf	marquee@j,w
 22105  142F  0746               	addwf	marquee@i,w
 22106  1430  00A2               	movwf	___lwmod@dividend
 22107  1431  084B               	movf	marquee@j+1,w
 22108  1432  3D47               	addwfc	marquee@i+1,w
 22109  1433  00A3               	movwf	___lwmod@dividend+1
 22110  1434  319A  224E  3193   	fcall	___lwmod
 22111  1437  0020               	movlb	0	; select bank0
 22112  1438  083A               	movf	marquee@string,w
 22113  1439  0720               	addwf	?___lwmod,w
 22114  143A  0084               	movwf	4
 22115  143B  083B               	movf	marquee@string+1,w
 22116  143C  3D21               	addwfc	?___lwmod+1,w
 22117  143D  0085               	movwf	5
 22118  143E  0800               	movf	0,w	;code access
 22119  143F  00BE               	movwf	??_marquee
 22120  1440  084A               	movf	marquee@j,w
 22121  1441  3E3F               	addlw	(low (marquee@display_string| 0))& (0+255)
 22122  1442  0086               	movwf	6
 22123  1443  0187               	clrf	7
 22124  1444  083E               	movf	??_marquee,w
 22125  1445  0081               	movwf	1
 22126  1446  3001               	movlw	1
 22127  1447  07CA               	addwf	marquee@j,f
 22128  1448  3000               	movlw	0
 22129  1449  3DCB               	addwfc	marquee@j+1,f
 22130  144A  3000               	movlw	0
 22131  144B  024B               	subwf	marquee@j+1,w
 22132  144C  3004               	movlw	4
 22133  144D  1903               	skipnz
 22134  144E  024A               	subwf	marquee@j,w
 22135  144F  1C03               	skipc
 22136  1450  2C2A               	goto	l6369
 22137  1451                     l6375:	
 22138                           
 22139                           ;main.c: 149: }
 22140                           ;main.c: 150: nullifyBadge_segDisplayPutStr(&badge_inst, display_string);
 22141  1451  303F               	movlw	low marquee@display_string
 22142  1452  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 22143  1453  3000               	movlw	high marquee@display_string
 22144  1454  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 22145  1455  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 22146  1456  31A6  26CC  3193   	fcall	_nullifyBadge_segDisplayPutStr
 22147                           
 22148                           ;main.c: 151: nullifyBadge_segDisplayForceUpdate(&badge_inst);
 22149  1459  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 22150  145A  31A6  2684         	fcall	_nullifyBadge_segDisplayForceUpdate
 22151  145C  0008               	return
 22152  145D                     __end_of_marquee:	
 22153                           
 22154                           	psect	text54
 22155  1916                     __ptext54:	
 22156 ;; *************** function _strlen *****************
 22157 ;; Defined at:
 22158 ;;		line 4 in file "/Applications/microchip/xc8/v1.42/sources/common/strlen.c"
 22159 ;; Parameters:    Size  Location     Type
 22160 ;;  s               2    1[COMMON] PTR const unsigned char 
 22161 ;;		 -> STR_20(5), secret_inputs.inputs(20), secret_inputs(25), STR_19(5), 
 22162 ;;		 -> STR_18(5), STR_17(11), STR_16(13), STR_13(6), 
 22163 ;;		 -> STR_12(8), STR_11(9), STR_10(5), STR_9(18), 
 22164 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 22165 ;; Auto vars:     Size  Location     Type
 22166 ;;  cp              2    5[COMMON] PTR const unsigned char 
 22167 ;;		 -> STR_20(5), secret_inputs.inputs(20), secret_inputs(25), STR_19(5), 
 22168 ;;		 -> STR_18(5), STR_17(11), STR_16(13), STR_13(6), 
 22169 ;;		 -> STR_12(8), STR_11(9), STR_10(5), STR_9(18), 
 22170 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 22171 ;; Return value:  Size  Location     Type
 22172 ;;                  2    1[COMMON] unsigned int 
 22173 ;; Registers used:
 22174 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 22175 ;; Tracked objects:
 22176 ;;		On entry : 0/0
 22177 ;;		On exit  : 0/0
 22178 ;;		Unchanged: 0/0
 22179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22184 ;;Total ram usage:        6 bytes
 22185 ;; Hardware stack levels used:    1
 22186 ;; Hardware stack levels required when called:    4
 22187 ;; This function calls:
 22188 ;;		Nothing
 22189 ;; This function is called by:
 22190 ;;		_marquee_speedy
 22191 ;;		_marquee
 22192 ;;		_secret_check
 22193 ;; This function uses a non-reentrant model
 22194 ;;
 22195                           
 22196                           
 22197                           ;psect for function _strlen
 22198  1916                     _strlen:	
 22199                           
 22200                           ;incstack = 0
 22201                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 22202  1916  0872               	movf	strlen@s+1,w
 22203  1917  00F6               	movwf	strlen@cp+1
 22204  1918  0871               	movf	strlen@s,w
 22205  1919  00F5               	movwf	strlen@cp
 22206  191A                     l6253:	
 22207  191A  0875               	movf	strlen@cp,w
 22208  191B  0084               	movwf	4
 22209  191C  0876               	movf	strlen@cp+1,w
 22210  191D  0085               	movwf	5
 22211  191E  0012               	moviw fsr0++
 22212  191F  1903               	btfsc	3,2
 22213  1920  2926               	goto	l6255
 22214  1921  3001               	movlw	1
 22215  1922  07F5               	addwf	strlen@cp,f
 22216  1923  3000               	movlw	0
 22217  1924  3DF6               	addwfc	strlen@cp+1,f
 22218  1925  291A               	goto	l6253
 22219  1926                     l6255:	
 22220  1926  0971               	comf	strlen@s,w
 22221  1927  00F3               	movwf	??_strlen
 22222  1928  0972               	comf	strlen@s+1,w
 22223  1929  00F4               	movwf	??_strlen+1
 22224  192A  0AF3               	incf	??_strlen,f
 22225  192B  1903               	skipnz
 22226  192C  0AF4               	incf	??_strlen+1,f
 22227  192D  0875               	movf	strlen@cp,w
 22228  192E  0773               	addwf	??_strlen,w
 22229  192F  00F1               	movwf	?_strlen
 22230  1930  0876               	movf	strlen@cp+1,w
 22231  1931  3D74               	addwfc	??_strlen+1,w
 22232  1932  00F2               	movwf	?_strlen+1
 22233  1933  0008               	return
 22234  1934                     __end_of_strlen:	
 22235                           
 22236                           	psect	text55
 22237  26CC                     __ptext55:	
 22238 ;; *************** function _nullifyBadge_segDisplayPutStr *****************
 22239 ;; Defined at:
 22240 ;;		line 113 in file "nullifyBadge.c"
 22241 ;; Parameters:    Size  Location     Type
 22242 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 22243 ;;		 -> badge_inst(18), 
 22244 ;;  str             2   23[BANK0 ] PTR unsigned char 
 22245 ;;		 -> flashy_Main@hit_counter(6), STR_14(5), STR_13(6), STR_12(8), 
 22246 ;;		 -> STR_11(9), STR_10(5), STR_7(6), STR_6(10), 
 22247 ;;		 -> STR_5(6), STR_4(5), marquee@display_string(5), marquee_speedy@display_string(5), 
 22248 ;; Auto vars:     Size  Location     Type
 22249 ;;  badge           1   25[BANK0 ] PTR struct t_nullifyBadg
 22250 ;;		 -> badge_inst(18), 
 22251 ;; Return value:  Size  Location     Type
 22252 ;;                  1    wreg      void 
 22253 ;; Registers used:
 22254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22255 ;; Tracked objects:
 22256 ;;		On entry : 0/0
 22257 ;;		On exit  : 0/0
 22258 ;;		Unchanged: 0/0
 22259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22263 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22264 ;;Total ram usage:        3 bytes
 22265 ;; Hardware stack levels used:    1
 22266 ;; Hardware stack levels required when called:    8
 22267 ;; This function calls:
 22268 ;;		_displayL2_PutStr
 22269 ;; This function is called by:
 22270 ;;		_marquee_speedy
 22271 ;;		_marquee
 22272 ;;		_menu_display_option
 22273 ;;		_flashy_display_option
 22274 ;;		_flashy_Main
 22275 ;; This function uses a non-reentrant model
 22276 ;;
 22277                           
 22278                           
 22279                           ;psect for function _nullifyBadge_segDisplayPutStr
 22280  26CC                     _nullifyBadge_segDisplayPutStr:	
 22281                           
 22282                           ;incstack = 0
 22283                           ; Regs used in _nullifyBadge_segDisplayPutStr: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 22284                           ;nullifyBadge_segDisplayPutStr@badge stored from wreg
 22285  26CC  0020               	movlb	0	; select bank0
 22286  26CD  00B9               	movwf	nullifyBadge_segDisplayPutStr@badge
 22287                           
 22288                           ;nullifyBadge.c: 114: displayL2_PutStr(&badge->display, str);
 22289  26CE  0838               	movf	nullifyBadge_segDisplayPutStr@str+1,w
 22290  26CF  00B1               	movwf	displayL2_PutStr@str+1
 22291  26D0  0837               	movf	nullifyBadge_segDisplayPutStr@str,w
 22292  26D1  00B0               	movwf	displayL2_PutStr@str
 22293  26D2  0839               	movf	nullifyBadge_segDisplayPutStr@badge,w
 22294  26D3  319A  2224         	fcall	_displayL2_PutStr
 22295  26D5  0008               	return
 22296  26D6                     __end_of_nullifyBadge_segDisplayPutStr:	
 22297                           
 22298                           	psect	text56
 22299  1A24                     __ptext56:	
 22300 ;; *************** function _displayL2_PutStr *****************
 22301 ;; Defined at:
 22302 ;;		line 55 in file "nullifyBadge_displayL2.c"
 22303 ;; Parameters:    Size  Location     Type
 22304 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22305 ;;		 -> badge_inst(18), 
 22306 ;;  str             2   16[BANK0 ] PTR unsigned char 
 22307 ;;		 -> flashy_Main@hit_counter(6), STR_14(5), STR_13(6), STR_12(8), 
 22308 ;;		 -> STR_11(9), STR_10(5), STR_7(6), STR_6(10), 
 22309 ;;		 -> STR_5(6), STR_4(5), STR_3(5), marquee@display_string(5), 
 22310 ;;		 -> marquee_speedy@display_string(5), 
 22311 ;; Auto vars:     Size  Location     Type
 22312 ;;  display         1   21[BANK0 ] PTR struct t_nullifyDisp
 22313 ;;		 -> badge_inst(18), 
 22314 ;;  k               1   22[BANK0 ] unsigned char 
 22315 ;; Return value:  Size  Location     Type
 22316 ;;                  1    wreg      void 
 22317 ;; Registers used:
 22318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22319 ;; Tracked objects:
 22320 ;;		On entry : 0/0
 22321 ;;		On exit  : 0/0
 22322 ;;		Unchanged: 0/0
 22323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22326 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22327 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22328 ;;Total ram usage:        7 bytes
 22329 ;; Hardware stack levels used:    1
 22330 ;; Hardware stack levels required when called:    7
 22331 ;; This function calls:
 22332 ;;		_displayL2_PutChar
 22333 ;; This function is called by:
 22334 ;;		_nullifyBadge_segDisplayPutStr
 22335 ;;		_displayL2_EraseSegDisplay
 22336 ;; This function uses a non-reentrant model
 22337 ;;
 22338                           
 22339                           
 22340                           ;psect for function _displayL2_PutStr
 22341  1A24                     _displayL2_PutStr:	
 22342                           
 22343                           ;incstack = 0
 22344                           ; Regs used in _displayL2_PutStr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22345                           ;displayL2_PutStr@display stored from wreg
 22346  1A24  0020               	movlb	0	; select bank0
 22347  1A25  00B5               	movwf	displayL2_PutStr@display
 22348                           
 22349                           ;nullifyBadge_displayL2.c: 57: u8 k = 0;
 22350  1A26  01B6               	clrf	displayL2_PutStr@k
 22351  1A27                     l6227:	
 22352                           ;nullifyBadge_displayL2.c: 59: while (str[k] != '\0') {
 22353                           
 22354  1A27  0831               	movf	displayL2_PutStr@str+1,w
 22355  1A28  00B3               	movwf	??_displayL2_PutStr+1
 22356  1A29  0830               	movf	displayL2_PutStr@str,w
 22357  1A2A  00B2               	movwf	??_displayL2_PutStr
 22358  1A2B  0836               	movf	displayL2_PutStr@k,w
 22359  1A2C  0732               	addwf	??_displayL2_PutStr,w
 22360  1A2D  0084               	movwf	4
 22361  1A2E  0833               	movf	??_displayL2_PutStr+1,w
 22362  1A2F  1803               	skipnc
 22363  1A30  0A33               	incf	??_displayL2_PutStr+1,w
 22364  1A31  0085               	movwf	5
 22365  1A32  0012               	moviw fsr0++
 22366  1A33  1903               	btfsc	3,2
 22367  1A34  0008               	return
 22368                           
 22369                           ;nullifyBadge_displayL2.c: 60: displayL2_PutChar(display, str[k]);
 22370  1A35  0831               	movf	displayL2_PutStr@str+1,w
 22371  1A36  00B3               	movwf	??_displayL2_PutStr+1
 22372  1A37  0830               	movf	displayL2_PutStr@str,w
 22373  1A38  00B2               	movwf	??_displayL2_PutStr
 22374  1A39  0836               	movf	displayL2_PutStr@k,w
 22375  1A3A  0732               	addwf	??_displayL2_PutStr,w
 22376  1A3B  0084               	movwf	4
 22377  1A3C  0833               	movf	??_displayL2_PutStr+1,w
 22378  1A3D  1803               	skipnc
 22379  1A3E  0A33               	incf	??_displayL2_PutStr+1,w
 22380  1A3F  0085               	movwf	5
 22381  1A40  0800               	movf	0,w	;code access
 22382  1A41  00B4               	movwf	??_displayL2_PutStr+2
 22383  1A42  0834               	movf	??_displayL2_PutStr+2,w
 22384  1A43  00AA               	movwf	displayL2_PutChar@c
 22385  1A44  0835               	movf	displayL2_PutStr@display,w
 22386  1A45  319D  25F0  319A   	fcall	_displayL2_PutChar
 22387                           
 22388                           ;nullifyBadge_displayL2.c: 61: k++;
 22389  1A48  3001               	movlw	1
 22390  1A49  0020               	movlb	0	; select bank0
 22391  1A4A  00B2               	movwf	??_displayL2_PutStr
 22392  1A4B  0832               	movf	??_displayL2_PutStr,w
 22393  1A4C  07B6               	addwf	displayL2_PutStr@k,f
 22394  1A4D  2A27               	goto	l6227
 22395  1A4E                     __end_of_displayL2_PutStr:	
 22396                           
 22397                           	psect	text57
 22398  1DF0                     __ptext57:	
 22399 ;; *************** function _displayL2_PutChar *****************
 22400 ;; Defined at:
 22401 ;;		line 38 in file "nullifyBadge_displayL2.c"
 22402 ;; Parameters:    Size  Location     Type
 22403 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22404 ;;		 -> badge_inst(18), 
 22405 ;;  c               1   10[BANK0 ] unsigned char 
 22406 ;; Auto vars:     Size  Location     Type
 22407 ;;  display         1   15[BANK0 ] PTR struct t_nullifyDisp
 22408 ;;		 -> badge_inst(18), 
 22409 ;;  k               1   14[BANK0 ] unsigned char 
 22410 ;; Return value:  Size  Location     Type
 22411 ;;                  1    wreg      void 
 22412 ;; Registers used:
 22413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22414 ;; Tracked objects:
 22415 ;;		On entry : 0/0
 22416 ;;		On exit  : 0/0
 22417 ;;		Unchanged: 0/0
 22418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22419 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22421 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22422 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22423 ;;Total ram usage:        6 bytes
 22424 ;; Hardware stack levels used:    1
 22425 ;; Hardware stack levels required when called:    6
 22426 ;; This function calls:
 22427 ;;		_displayL1_SetSegChar
 22428 ;; This function is called by:
 22429 ;;		_displayL2_PutStr
 22430 ;;		_nullifyBadge_segDisplayPutChar
 22431 ;; This function uses a non-reentrant model
 22432 ;;
 22433                           
 22434                           
 22435                           ;psect for function _displayL2_PutChar
 22436  1DF0                     _displayL2_PutChar:	
 22437                           
 22438                           ;incstack = 0
 22439                           ; Regs used in _displayL2_PutChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22440                           ;displayL2_PutChar@display stored from wreg
 22441  1DF0  0020               	movlb	0	; select bank0
 22442  1DF1  00AF               	movwf	displayL2_PutChar@display
 22443                           
 22444                           ;nullifyBadge_displayL2.c: 40: display->charVect[0] = display->charVect[1];
 22445  1DF2  0A2F               	incf	displayL2_PutChar@display,w
 22446  1DF3  0086               	movwf	6
 22447  1DF4  3001               	movlw	1	; select bank2/3
 22448  1DF5  0087               	movwf	7
 22449  1DF6  0801               	movf	1,w
 22450  1DF7  00AB               	movwf	??_displayL2_PutChar
 22451  1DF8  082F               	movf	displayL2_PutChar@display,w
 22452  1DF9  0086               	movwf	6
 22453  1DFA  3001               	movlw	1	; select bank2/3
 22454  1DFB  0087               	movwf	7
 22455  1DFC  082B               	movf	??_displayL2_PutChar,w
 22456  1DFD  0081               	movwf	1
 22457                           
 22458                           ;nullifyBadge_displayL2.c: 41: display->charVect[1] = display->charVect[2];
 22459  1DFE  082F               	movf	displayL2_PutChar@display,w
 22460  1DFF  3E02               	addlw	2
 22461  1E00  0086               	movwf	6
 22462  1E01  3001               	movlw	1	; select bank2/3
 22463  1E02  0087               	movwf	7
 22464  1E03  0801               	movf	1,w
 22465  1E04  00AB               	movwf	??_displayL2_PutChar
 22466  1E05  0A2F               	incf	displayL2_PutChar@display,w
 22467  1E06  0086               	movwf	6
 22468  1E07  3001               	movlw	1	; select bank2/3
 22469  1E08  0087               	movwf	7
 22470  1E09  082B               	movf	??_displayL2_PutChar,w
 22471  1E0A  0081               	movwf	1
 22472                           
 22473                           ;nullifyBadge_displayL2.c: 42: display->charVect[2] = display->charVect[3];
 22474  1E0B  082F               	movf	displayL2_PutChar@display,w
 22475  1E0C  3E03               	addlw	3
 22476  1E0D  0086               	movwf	6
 22477  1E0E  3001               	movlw	1	; select bank2/3
 22478  1E0F  0087               	movwf	7
 22479  1E10  0801               	movf	1,w
 22480  1E11  00AB               	movwf	??_displayL2_PutChar
 22481  1E12  082F               	movf	displayL2_PutChar@display,w
 22482  1E13  3E02               	addlw	2
 22483  1E14  0086               	movwf	6
 22484  1E15  3001               	movlw	1	; select bank2/3
 22485  1E16  0087               	movwf	7
 22486  1E17  082B               	movf	??_displayL2_PutChar,w
 22487  1E18  0081               	movwf	1
 22488                           
 22489                           ;nullifyBadge_displayL2.c: 45: display->charVect[3] = c;
 22490  1E19  082A               	movf	displayL2_PutChar@c,w
 22491  1E1A  00AB               	movwf	??_displayL2_PutChar
 22492  1E1B  082F               	movf	displayL2_PutChar@display,w
 22493  1E1C  3E03               	addlw	3
 22494  1E1D  0086               	movwf	6
 22495  1E1E  3001               	movlw	1	; select bank2/3
 22496  1E1F  0087               	movwf	7
 22497  1E20  082B               	movf	??_displayL2_PutChar,w
 22498  1E21  0081               	movwf	1
 22499                           
 22500                           ;nullifyBadge_displayL2.c: 48: u8 k = 0;
 22501  1E22  01AE               	clrf	displayL2_PutChar@k
 22502                           
 22503                           ;nullifyBadge_displayL2.c: 49: for (k = 0; k < 4; k++) {
 22504  1E23  01AE               	clrf	displayL2_PutChar@k
 22505  1E24                     L10:	
 22506  1E24  3004               	movlw	4
 22507  1E25  022E               	subwf	displayL2_PutChar@k,w
 22508  1E26  1803               	btfsc	3,0
 22509  1E27  0008               	return
 22510                           
 22511                           ;nullifyBadge_displayL2.c: 50: displayL1_SetSegChar(&display->display_l1, display->charV
      +                          ect[k], k);
 22512  1E28  082E               	movf	displayL2_PutChar@k,w
 22513  1E29  072F               	addwf	displayL2_PutChar@display,w
 22514  1E2A  00AB               	movwf	??_displayL2_PutChar
 22515  1E2B  082B               	movf	??_displayL2_PutChar,w
 22516  1E2C  0086               	movwf	6
 22517  1E2D  3001               	movlw	1	; select bank2/3
 22518  1E2E  0087               	movwf	7
 22519  1E2F  0801               	movf	1,w
 22520  1E30  00AC               	movwf	??_displayL2_PutChar+1
 22521  1E31  082C               	movf	??_displayL2_PutChar+1,w
 22522  1E32  00A0               	movwf	displayL1_SetSegChar@c
 22523  1E33  082E               	movf	displayL2_PutChar@k,w
 22524  1E34  00AD               	movwf	??_displayL2_PutChar+2
 22525  1E35  082D               	movf	??_displayL2_PutChar+2,w
 22526  1E36  00A1               	movwf	displayL1_SetSegChar@charPos
 22527  1E37  082F               	movf	displayL2_PutChar@display,w
 22528  1E38  3E07               	addlw	7
 22529  1E39  319C  245A  319D   	fcall	_displayL1_SetSegChar
 22530  1E3C  3001               	movlw	1
 22531  1E3D  0020               	movlb	0	; select bank0
 22532  1E3E  00AB               	movwf	??_displayL2_PutChar
 22533  1E3F  082B               	movf	??_displayL2_PutChar,w
 22534  1E40  07AE               	addwf	displayL2_PutChar@k,f
 22535  1E41  2E24               	goto	L10
 22536  1E42                     __end_of_displayL2_PutChar:	
 22537                           
 22538                           	psect	text58
 22539  1C5A                     __ptext58:	
 22540 ;; *************** function _displayL1_SetSegChar *****************
 22541 ;; Defined at:
 22542 ;;		line 18 in file "nullifyBadge_displayL1.c"
 22543 ;; Parameters:    Size  Location     Type
 22544 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22545 ;;		 -> badge_inst(18), 
 22546 ;;  c               1    0[BANK0 ] unsigned char 
 22547 ;;  charPos         1    1[BANK0 ] unsigned char 
 22548 ;; Auto vars:     Size  Location     Type
 22549 ;;  display         1    7[BANK0 ] PTR struct t_nullifyDisp
 22550 ;;		 -> badge_inst(18), 
 22551 ;;  charData        2    8[BANK0 ] unsigned int 
 22552 ;;  dispDataVect    1    6[BANK0 ] unsigned char 
 22553 ;; Return value:  Size  Location     Type
 22554 ;;                  1    wreg      void 
 22555 ;; Registers used:
 22556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22557 ;; Tracked objects:
 22558 ;;		On entry : 0/0
 22559 ;;		On exit  : 0/0
 22560 ;;		Unchanged: 0/0
 22561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22562 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22563 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22564 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22565 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22566 ;;Total ram usage:       10 bytes
 22567 ;; Hardware stack levels used:    1
 22568 ;; Hardware stack levels required when called:    5
 22569 ;; This function calls:
 22570 ;;		_displayCharReverse
 22571 ;; This function is called by:
 22572 ;;		_displayL2_PutChar
 22573 ;;		_nullifyBadge_segDisplayPutCharPos
 22574 ;;		_displayL2_PrintChar
 22575 ;; This function uses a non-reentrant model
 22576 ;;
 22577                           
 22578                           
 22579                           ;psect for function _displayL1_SetSegChar
 22580  1C5A                     _displayL1_SetSegChar:	
 22581                           
 22582                           ;incstack = 0
 22583                           ; Regs used in _displayL1_SetSegChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22584                           ;displayL1_SetSegChar@display stored from wreg
 22585  1C5A  0020               	movlb	0	; select bank0
 22586  1C5B  00A7               	movwf	displayL1_SetSegChar@display
 22587                           
 22588                           ;nullifyBadge_displayL1.c: 23: u16 charData = asciiCharTableLookup[(u8) c];
 22589  1C5C  0820               	movf	displayL1_SetSegChar@c,w
 22590  1C5D  00A2               	movwf	??_displayL1_SetSegChar
 22591  1C5E  01A3               	clrf	??_displayL1_SetSegChar+1
 22592  1C5F  35A2               	lslf	??_displayL1_SetSegChar,f
 22593  1C60  0DA3               	rlf	??_displayL1_SetSegChar+1,f
 22594  1C61  30F0               	movlw	240
 22595  1C62  00A4               	movwf	??_displayL1_SetSegChar+2
 22596  1C63  3026               	movlw	38
 22597  1C64  00A5               	movwf	??_displayL1_SetSegChar+3
 22598  1C65  0822               	movf	??_displayL1_SetSegChar,w
 22599  1C66  0724               	addwf	??_displayL1_SetSegChar+2,w
 22600  1C67  0086               	movwf	6
 22601  1C68  0823               	movf	??_displayL1_SetSegChar+1,w
 22602  1C69  3D25               	addwfc	??_displayL1_SetSegChar+3,w
 22603  1C6A  0087               	movwf	7
 22604  1C6B  3F40               	moviw [0]fsr1
 22605  1C6C  00A8               	movwf	displayL1_SetSegChar@charData
 22606  1C6D  3F41               	moviw [1]fsr1
 22607  1C6E  00A9               	movwf	displayL1_SetSegChar@charData+1
 22608                           
 22609                           ;nullifyBadge_displayL1.c: 29: if (charPos & 0x1) {
 22610  1C6F  1C21               	btfss	displayL1_SetSegChar@charPos,0
 22611  1C70  2C7C               	goto	l6165
 22612                           
 22613                           ;nullifyBadge_displayL1.c: 30: charData = displayCharReverse(charData);
 22614  1C71  0829               	movf	displayL1_SetSegChar@charData+1,w
 22615  1C72  00F2               	movwf	displayCharReverse@cVal+1
 22616  1C73  0828               	movf	displayL1_SetSegChar@charData,w
 22617  1C74  00F1               	movwf	displayCharReverse@cVal
 22618  1C75  319A  227B         	fcall	_displayCharReverse
 22619  1C77  0872               	movf	?_displayCharReverse+1,w
 22620  1C78  0020               	movlb	0	; select bank0
 22621  1C79  00A9               	movwf	displayL1_SetSegChar@charData+1
 22622  1C7A  0871               	movf	?_displayCharReverse,w
 22623  1C7B  00A8               	movwf	displayL1_SetSegChar@charData
 22624  1C7C                     l6165:	
 22625                           
 22626                           ;nullifyBadge_displayL1.c: 31: }
 22627                           ;nullifyBadge_displayL1.c: 61: u8 dispDataVectBaseIdx = 8 - ( charPos << 1 );
 22628  1C7C  3521               	lslf	displayL1_SetSegChar@charPos,w
 22629  1C7D  3AFF               	xorlw	255
 22630  1C7E  3E01               	addlw	1
 22631  1C7F  3E08               	addlw	8
 22632  1C80  00A2               	movwf	??_displayL1_SetSegChar
 22633  1C81  0822               	movf	??_displayL1_SetSegChar,w
 22634  1C82  00A6               	movwf	displayL1_SetSegChar@dispDataVectBaseIdx
 22635                           
 22636                           ;nullifyBadge_displayL1.c: 64: display->displayVect[dispDataVectBaseIdx] = (u8) (charDat
      +                          a >> 8);
 22637  1C83  0829               	movf	displayL1_SetSegChar@charData+1,w
 22638  1C84  00A2               	movwf	??_displayL1_SetSegChar
 22639  1C85  0826               	movf	displayL1_SetSegChar@dispDataVectBaseIdx,w
 22640  1C86  0727               	addwf	displayL1_SetSegChar@display,w
 22641  1C87  00A3               	movwf	??_displayL1_SetSegChar+1
 22642  1C88  0823               	movf	??_displayL1_SetSegChar+1,w
 22643  1C89  0086               	movwf	6
 22644  1C8A  3001               	movlw	1	; select bank2/3
 22645  1C8B  0087               	movwf	7
 22646  1C8C  0822               	movf	??_displayL1_SetSegChar,w
 22647  1C8D  0081               	movwf	1
 22648                           
 22649                           ;nullifyBadge_displayL1.c: 67: display->displayVect[dispDataVectBaseIdx+1] = (u8) (charD
      +                          ata & 0xFF);
 22650  1C8E  0828               	movf	displayL1_SetSegChar@charData,w
 22651  1C8F  00A2               	movwf	??_displayL1_SetSegChar
 22652  1C90  0826               	movf	displayL1_SetSegChar@dispDataVectBaseIdx,w
 22653  1C91  3E01               	addlw	1
 22654  1C92  0727               	addwf	displayL1_SetSegChar@display,w
 22655  1C93  00A3               	movwf	??_displayL1_SetSegChar+1
 22656  1C94  0823               	movf	??_displayL1_SetSegChar+1,w
 22657  1C95  0086               	movwf	6
 22658  1C96  3001               	movlw	1	; select bank2/3
 22659  1C97  0087               	movwf	7
 22660  1C98  0822               	movf	??_displayL1_SetSegChar,w
 22661  1C99  0081               	movwf	1
 22662  1C9A  0008               	return
 22663  1C9B                     __end_of_displayL1_SetSegChar:	
 22664                           
 22665                           	psect	text59
 22666  1A7B                     __ptext59:	
 22667 ;; *************** function _displayCharReverse *****************
 22668 ;; Defined at:
 22669 ;;		line 105 in file "nullifyBadge_displayL1.c"
 22670 ;; Parameters:    Size  Location     Type
 22671 ;;  cVal            2    1[COMMON] unsigned int 
 22672 ;; Auto vars:     Size  Location     Type
 22673 ;;  k               1   11[COMMON] unsigned char 
 22674 ;;  retValUpperR    1   10[COMMON] unsigned char 
 22675 ;;  retValUpper     1    9[COMMON] unsigned char 
 22676 ;;  retValLower     1    8[COMMON] unsigned char 
 22677 ;; Return value:  Size  Location     Type
 22678 ;;                  2    1[COMMON] unsigned int 
 22679 ;; Registers used:
 22680 ;;		wreg, status,2, status,0
 22681 ;; Tracked objects:
 22682 ;;		On entry : 0/0
 22683 ;;		On exit  : 0/0
 22684 ;;		Unchanged: 0/0
 22685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22687 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22688 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22689 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22690 ;;Total ram usage:       11 bytes
 22691 ;; Hardware stack levels used:    1
 22692 ;; Hardware stack levels required when called:    4
 22693 ;; This function calls:
 22694 ;;		Nothing
 22695 ;; This function is called by:
 22696 ;;		_displayL1_SetSegChar
 22697 ;; This function uses a non-reentrant model
 22698 ;;
 22699                           
 22700                           
 22701                           ;psect for function _displayCharReverse
 22702  1A7B                     _displayCharReverse:	
 22703                           
 22704                           ;nullifyBadge_displayL1.c: 106: u8 retValUpper, retValLower, retValUpperRev;
 22705                           ;nullifyBadge_displayL1.c: 108: u8 k;
 22706                           ;nullifyBadge_displayL1.c: 111: retValUpper = cVal >> 8;
 22707                           
 22708                           ;incstack = 0
 22709                           ; Regs used in _displayCharReverse: [wreg+status,2+status,0]
 22710  1A7B  0872               	movf	displayCharReverse@cVal+1,w
 22711  1A7C  00F3               	movwf	??_displayCharReverse
 22712  1A7D  0873               	movf	??_displayCharReverse,w
 22713  1A7E  00F9               	movwf	displayCharReverse@retValUpper
 22714                           
 22715                           ;nullifyBadge_displayL1.c: 112: retValLower = cVal & 0xFF;
 22716  1A7F  0871               	movf	displayCharReverse@cVal,w
 22717  1A80  00F3               	movwf	??_displayCharReverse
 22718  1A81  0873               	movf	??_displayCharReverse,w
 22719  1A82  00F8               	movwf	displayCharReverse@retValLower
 22720                           
 22721                           ;nullifyBadge_displayL1.c: 115: retValUpperRev = 0;
 22722  1A83  01FA               	clrf	displayCharReverse@retValUpperRev
 22723                           
 22724                           ;nullifyBadge_displayL1.c: 117: for (k = 0; k < 7; k++) {
 22725  1A84  01FB               	clrf	displayCharReverse@k
 22726  1A85  3007               	movlw	7
 22727  1A86  027B               	subwf	displayCharReverse@k,w
 22728  1A87  1803               	btfsc	3,0
 22729  1A88  2A9A               	goto	l6147
 22730  1A89                     l6139:	
 22731                           
 22732                           ;nullifyBadge_displayL1.c: 118: retValUpperRev |= (retValUpper & 0x1);
 22733  1A89  0879               	movf	displayCharReverse@retValUpper,w
 22734  1A8A  3901               	andlw	1
 22735  1A8B  00F3               	movwf	??_displayCharReverse
 22736  1A8C  0873               	movf	??_displayCharReverse,w
 22737  1A8D  04FA               	iorwf	displayCharReverse@retValUpperRev,f
 22738                           
 22739                           ;nullifyBadge_displayL1.c: 119: retValUpper >>= 1;
 22740  1A8E  1003               	clrc
 22741  1A8F  0CF9               	rrf	displayCharReverse@retValUpper,f
 22742                           
 22743                           ;nullifyBadge_displayL1.c: 120: retValUpperRev <<= 1;
 22744  1A90  1003               	clrc
 22745  1A91  0DFA               	rlf	displayCharReverse@retValUpperRev,f
 22746  1A92  3001               	movlw	1
 22747  1A93  00F3               	movwf	??_displayCharReverse
 22748  1A94  0873               	movf	??_displayCharReverse,w
 22749  1A95  07FB               	addwf	displayCharReverse@k,f
 22750  1A96  3007               	movlw	7
 22751  1A97  027B               	subwf	displayCharReverse@k,w
 22752  1A98  1C03               	skipc
 22753  1A99  2A89               	goto	l6139
 22754  1A9A                     l6147:	
 22755                           
 22756                           ;nullifyBadge_displayL1.c: 121: }
 22757                           ;nullifyBadge_displayL1.c: 123: return (retValLower << 8) | (retValUpperRev);
 22758  1A9A  087A               	movf	displayCharReverse@retValUpperRev,w
 22759  1A9B  00F3               	movwf	??_displayCharReverse
 22760  1A9C  01F4               	clrf	??_displayCharReverse+1
 22761  1A9D  0878               	movf	displayCharReverse@retValLower,w
 22762  1A9E  00F5               	movwf	??_displayCharReverse+2
 22763  1A9F  01F6               	clrf	??_displayCharReverse+3
 22764  1AA0  0875               	movf	??_displayCharReverse+2,w
 22765  1AA1  00F6               	movwf	??_displayCharReverse+3
 22766  1AA2  01F5               	clrf	??_displayCharReverse+2
 22767  1AA3  0873               	movf	??_displayCharReverse,w
 22768  1AA4  0475               	iorwf	??_displayCharReverse+2,w
 22769  1AA5  00F1               	movwf	?_displayCharReverse
 22770  1AA6  0874               	movf	??_displayCharReverse+1,w
 22771  1AA7  0476               	iorwf	??_displayCharReverse+3,w
 22772  1AA8  00F2               	movwf	?_displayCharReverse+1
 22773  1AA9  0008               	return
 22774  1AAA                     __end_of_displayCharReverse:	
 22775                           
 22776                           	psect	text60
 22777  2684                     __ptext60:	
 22778 ;; *************** function _nullifyBadge_segDisplayForceUpdate *****************
 22779 ;; Defined at:
 22780 ;;		line 108 in file "nullifyBadge.c"
 22781 ;; Parameters:    Size  Location     Type
 22782 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 22783 ;;		 -> badge_inst(18), 
 22784 ;; Auto vars:     Size  Location     Type
 22785 ;;  badge           1   11[BANK0 ] PTR struct t_nullifyBadg
 22786 ;;		 -> badge_inst(18), 
 22787 ;; Return value:  Size  Location     Type
 22788 ;;                  1    wreg      void 
 22789 ;; Registers used:
 22790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22791 ;; Tracked objects:
 22792 ;;		On entry : 0/0
 22793 ;;		On exit  : 0/0
 22794 ;;		Unchanged: 0/0
 22795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22799 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22800 ;;Total ram usage:        1 bytes
 22801 ;; Hardware stack levels used:    1
 22802 ;; Hardware stack levels required when called:    8
 22803 ;; This function calls:
 22804 ;;		_displayL2_ForceUpdate
 22805 ;; This function is called by:
 22806 ;;		_marquee_speedy
 22807 ;;		_marquee
 22808 ;;		_menu_display_option
 22809 ;;		_flashy_display_option
 22810 ;;		_flashy_Main
 22811 ;; This function uses a non-reentrant model
 22812 ;;
 22813                           
 22814                           
 22815                           ;psect for function _nullifyBadge_segDisplayForceUpdate
 22816  2684                     _nullifyBadge_segDisplayForceUpdate:	
 22817                           
 22818                           ;incstack = 0
 22819                           ; Regs used in _nullifyBadge_segDisplayForceUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+
      +                          pclath+cstack]
 22820                           ;nullifyBadge_segDisplayForceUpdate@badge stored from wreg
 22821  2684  0020               	movlb	0	; select bank0
 22822  2685  00AB               	movwf	nullifyBadge_segDisplayForceUpdate@badge
 22823                           
 22824                           ;nullifyBadge.c: 109: displayL2_ForceUpdate(&badge->display);
 22825  2686  082B               	movf	nullifyBadge_segDisplayForceUpdate@badge,w
 22826  2687  31A6  267E         	fcall	_displayL2_ForceUpdate
 22827  2689  0008               	return
 22828  268A                     __end_of_nullifyBadge_segDisplayForceUpdate:	
 22829                           
 22830                           	psect	text61
 22831  267E                     __ptext61:	
 22832 ;; *************** function _displayL2_ForceUpdate *****************
 22833 ;; Defined at:
 22834 ;;		line 79 in file "nullifyBadge_displayL2.c"
 22835 ;; Parameters:    Size  Location     Type
 22836 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22837 ;;		 -> badge_inst(18), 
 22838 ;; Auto vars:     Size  Location     Type
 22839 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 22840 ;;		 -> badge_inst(18), 
 22841 ;; Return value:  Size  Location     Type
 22842 ;;                  1    wreg      void 
 22843 ;; Registers used:
 22844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22845 ;; Tracked objects:
 22846 ;;		On entry : 0/0
 22847 ;;		On exit  : 0/0
 22848 ;;		Unchanged: 0/0
 22849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22854 ;;Total ram usage:        1 bytes
 22855 ;; Hardware stack levels used:    1
 22856 ;; Hardware stack levels required when called:    7
 22857 ;; This function calls:
 22858 ;;		_displayL1_Update
 22859 ;; This function is called by:
 22860 ;;		_nullifyBadge_segDisplayForceUpdate
 22861 ;; This function uses a non-reentrant model
 22862 ;;
 22863                           
 22864                           
 22865                           ;psect for function _displayL2_ForceUpdate
 22866  267E                     _displayL2_ForceUpdate:	
 22867                           
 22868                           ;incstack = 0
 22869                           ; Regs used in _displayL2_ForceUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22870                           ;displayL2_ForceUpdate@display stored from wreg
 22871  267E  00FB               	movwf	displayL2_ForceUpdate@display
 22872                           
 22873                           ;nullifyBadge_displayL2.c: 80: displayL1_Update(&display->display_l1);
 22874  267F  087B               	movf	displayL2_ForceUpdate@display,w
 22875  2680  3E07               	addlw	7
 22876  2681  31A7  27CB         	fcall	_displayL1_Update
 22877  2683  0008               	return
 22878  2684                     __end_of_displayL2_ForceUpdate:	
 22879                           
 22880                           	psect	text62
 22881  1A4E                     __ptext62:	
 22882 ;; *************** function ___lwmod *****************
 22883 ;; Defined at:
 22884 ;;		line 6 in file "/Applications/microchip/xc8/v1.42/sources/common/lwmod.c"
 22885 ;; Parameters:    Size  Location     Type
 22886 ;;  divisor         2    0[BANK0 ] unsigned int 
 22887 ;;  dividend        2    2[BANK0 ] unsigned int 
 22888 ;; Auto vars:     Size  Location     Type
 22889 ;;  counter         1   10[COMMON] unsigned char 
 22890 ;; Return value:  Size  Location     Type
 22891 ;;                  2    0[BANK0 ] unsigned int 
 22892 ;; Registers used:
 22893 ;;		wreg, status,2, status,0
 22894 ;; Tracked objects:
 22895 ;;		On entry : 0/0
 22896 ;;		On exit  : 0/0
 22897 ;;		Unchanged: 0/0
 22898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22899 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22902 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22903 ;;Total ram usage:        6 bytes
 22904 ;; Hardware stack levels used:    1
 22905 ;; Hardware stack levels required when called:    4
 22906 ;; This function calls:
 22907 ;;		Nothing
 22908 ;; This function is called by:
 22909 ;;		_marquee_speedy
 22910 ;;		_marquee
 22911 ;;		_led_roundabout
 22912 ;;		_led_curtain
 22913 ;;		_menu_display_option
 22914 ;;		_locked_Main
 22915 ;;		_sprintf
 22916 ;; This function uses a non-reentrant model
 22917 ;;
 22918                           
 22919                           
 22920                           ;psect for function ___lwmod
 22921  1A4E                     ___lwmod:	
 22922                           
 22923                           ;incstack = 0
 22924                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 22925  1A4E  0020               	movlb	0	; select bank0
 22926  1A4F  0820               	movf	___lwmod@divisor,w
 22927  1A50  0421               	iorwf	___lwmod@divisor+1,w
 22928  1A51  1903               	btfsc	3,2
 22929  1A52  2A76               	goto	l6329
 22930  1A53  01FA               	clrf	___lwmod@counter
 22931  1A54  0AFA               	incf	___lwmod@counter,f
 22932  1A55                     l6319:	
 22933  1A55  1BA1               	btfsc	___lwmod@divisor+1,7
 22934  1A56  2A61               	goto	l6321
 22935  1A57  3001               	movlw	1
 22936  1A58                     u3415:	
 22937  1A58  35A0               	lslf	___lwmod@divisor,f
 22938  1A59  0DA1               	rlf	___lwmod@divisor+1,f
 22939  1A5A  0B89               	decfsz	9,f
 22940  1A5B  2A58               	goto	u3415
 22941  1A5C  3001               	movlw	1
 22942  1A5D  00F9               	movwf	??___lwmod
 22943  1A5E  0879               	movf	??___lwmod,w
 22944  1A5F  07FA               	addwf	___lwmod@counter,f
 22945  1A60  2A55               	goto	l6319
 22946  1A61                     l6321:	
 22947  1A61  0821               	movf	___lwmod@divisor+1,w
 22948  1A62  0223               	subwf	___lwmod@dividend+1,w
 22949  1A63  1D03               	skipz
 22950  1A64  2A67               	goto	u3435
 22951  1A65  0820               	movf	___lwmod@divisor,w
 22952  1A66  0222               	subwf	___lwmod@dividend,w
 22953  1A67                     u3435:	
 22954  1A67  1C03               	skipc
 22955  1A68  2A6D               	goto	l6325
 22956  1A69  0820               	movf	___lwmod@divisor,w
 22957  1A6A  02A2               	subwf	___lwmod@dividend,f
 22958  1A6B  0821               	movf	___lwmod@divisor+1,w
 22959  1A6C  3BA3               	subwfb	___lwmod@dividend+1,f
 22960  1A6D                     l6325:	
 22961  1A6D  3001               	movlw	1
 22962  1A6E                     u3445:	
 22963  1A6E  36A1               	lsrf	___lwmod@divisor+1,f
 22964  1A6F  0CA0               	rrf	___lwmod@divisor,f
 22965  1A70  0B89               	decfsz	9,f
 22966  1A71  2A6E               	goto	u3445
 22967  1A72  3001               	movlw	1
 22968  1A73  02FA               	subwf	___lwmod@counter,f
 22969  1A74  1D03               	btfss	3,2
 22970  1A75  2A61               	goto	l6321
 22971  1A76                     l6329:	
 22972  1A76  0823               	movf	___lwmod@dividend+1,w
 22973  1A77  00A1               	movwf	?___lwmod+1
 22974  1A78  0822               	movf	___lwmod@dividend,w
 22975  1A79  00A0               	movwf	?___lwmod
 22976  1A7A  0008               	return
 22977  1A7B                     __end_of___lwmod:	
 22978                           
 22979                           	psect	text63
 22980  1B3F                     __ptext63:	
 22981 ;; *************** function ___lwdiv *****************
 22982 ;; Defined at:
 22983 ;;		line 6 in file "/Applications/microchip/xc8/v1.42/sources/common/lwdiv.c"
 22984 ;; Parameters:    Size  Location     Type
 22985 ;;  divisor         2    1[COMMON] unsigned int 
 22986 ;;  dividend        2    3[COMMON] unsigned int 
 22987 ;; Auto vars:     Size  Location     Type
 22988 ;;  quotient        2    7[COMMON] unsigned int 
 22989 ;;  counter         1    6[COMMON] unsigned char 
 22990 ;; Return value:  Size  Location     Type
 22991 ;;                  2    1[COMMON] unsigned int 
 22992 ;; Registers used:
 22993 ;;		wreg, status,2, status,0
 22994 ;; Tracked objects:
 22995 ;;		On entry : 0/0
 22996 ;;		On exit  : 0/0
 22997 ;;		Unchanged: 0/0
 22998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23000 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23002 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23003 ;;Total ram usage:        8 bytes
 23004 ;; Hardware stack levels used:    1
 23005 ;; Hardware stack levels required when called:    4
 23006 ;; This function calls:
 23007 ;;		Nothing
 23008 ;; This function is called by:
 23009 ;;		_marquee_speedy
 23010 ;;		_marquee
 23011 ;;		_sprintf
 23012 ;; This function uses a non-reentrant model
 23013 ;;
 23014                           
 23015                           
 23016                           ;psect for function ___lwdiv
 23017  1B3F                     ___lwdiv:	
 23018                           
 23019                           ;incstack = 0
 23020                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 23021  1B3F  01F7               	clrf	___lwdiv@quotient
 23022  1B40  01F8               	clrf	___lwdiv@quotient+1
 23023  1B41  0871               	movf	___lwdiv@divisor,w
 23024  1B42  0472               	iorwf	___lwdiv@divisor+1,w
 23025  1B43  1903               	btfsc	3,2
 23026  1B44  2B6E               	goto	l6307
 23027  1B45  01F6               	clrf	___lwdiv@counter
 23028  1B46  0AF6               	incf	___lwdiv@counter,f
 23029  1B47                     l6295:	
 23030  1B47  1BF2               	btfsc	___lwdiv@divisor+1,7
 23031  1B48  2B53               	goto	l6297
 23032  1B49  3001               	movlw	1
 23033  1B4A                     u3345:	
 23034  1B4A  35F1               	lslf	___lwdiv@divisor,f
 23035  1B4B  0DF2               	rlf	___lwdiv@divisor+1,f
 23036  1B4C  0B89               	decfsz	9,f
 23037  1B4D  2B4A               	goto	u3345
 23038  1B4E  3001               	movlw	1
 23039  1B4F  00F5               	movwf	??___lwdiv
 23040  1B50  0875               	movf	??___lwdiv,w
 23041  1B51  07F6               	addwf	___lwdiv@counter,f
 23042  1B52  2B47               	goto	l6295
 23043  1B53                     l6297:	
 23044  1B53  3001               	movlw	1
 23045  1B54                     u3365:	
 23046  1B54  35F7               	lslf	___lwdiv@quotient,f
 23047  1B55  0DF8               	rlf	___lwdiv@quotient+1,f
 23048  1B56  0B89               	decfsz	9,f
 23049  1B57  2B54               	goto	u3365
 23050  1B58  0872               	movf	___lwdiv@divisor+1,w
 23051  1B59  0274               	subwf	___lwdiv@dividend+1,w
 23052  1B5A  1D03               	skipz
 23053  1B5B  2B5E               	goto	u3375
 23054  1B5C  0871               	movf	___lwdiv@divisor,w
 23055  1B5D  0273               	subwf	___lwdiv@dividend,w
 23056  1B5E                     u3375:	
 23057  1B5E  1C03               	skipc
 23058  1B5F  2B65               	goto	l6303
 23059  1B60  0871               	movf	___lwdiv@divisor,w
 23060  1B61  02F3               	subwf	___lwdiv@dividend,f
 23061  1B62  0872               	movf	___lwdiv@divisor+1,w
 23062  1B63  3BF4               	subwfb	___lwdiv@dividend+1,f
 23063  1B64  1477               	bsf	___lwdiv@quotient,0
 23064  1B65                     l6303:	
 23065  1B65  3001               	movlw	1
 23066  1B66                     u3385:	
 23067  1B66  36F2               	lsrf	___lwdiv@divisor+1,f
 23068  1B67  0CF1               	rrf	___lwdiv@divisor,f
 23069  1B68  0B89               	decfsz	9,f
 23070  1B69  2B66               	goto	u3385
 23071  1B6A  3001               	movlw	1
 23072  1B6B  02F6               	subwf	___lwdiv@counter,f
 23073  1B6C  1D03               	btfss	3,2
 23074  1B6D  2B53               	goto	l6297
 23075  1B6E                     l6307:	
 23076  1B6E  0878               	movf	___lwdiv@quotient+1,w
 23077  1B6F  00F2               	movwf	?___lwdiv+1
 23078  1B70  0877               	movf	___lwdiv@quotient,w
 23079  1B71  00F1               	movwf	?___lwdiv
 23080  1B72  0008               	return
 23081  1B73                     __end_of___lwdiv:	
 23082                           
 23083                           	psect	text64
 23084  18BE                     __ptext64:	
 23085 ;; *************** function _TMR0_Read16bitTimer *****************
 23086 ;; Defined at:
 23087 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 23088 ;; Parameters:    Size  Location     Type
 23089 ;;		None
 23090 ;; Auto vars:     Size  Location     Type
 23091 ;;  readVal         2    8[COMMON] unsigned int 
 23092 ;;  readValHigh     1   11[COMMON] unsigned char 
 23093 ;;  readValLow      1   10[COMMON] unsigned char 
 23094 ;; Return value:  Size  Location     Type
 23095 ;;                  2    1[COMMON] unsigned int 
 23096 ;; Registers used:
 23097 ;;		wreg, status,2, status,0
 23098 ;; Tracked objects:
 23099 ;;		On entry : 0/0
 23100 ;;		On exit  : 0/0
 23101 ;;		Unchanged: 0/0
 23102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23104 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23105 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23106 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23107 ;;Total ram usage:       11 bytes
 23108 ;; Hardware stack levels used:    1
 23109 ;; Hardware stack levels required when called:    4
 23110 ;; This function calls:
 23111 ;;		Nothing
 23112 ;; This function is called by:
 23113 ;;		_scheduler_TaskRun
 23114 ;;		_schedulerExecute
 23115 ;; This function uses a non-reentrant model
 23116 ;;
 23117                           
 23118                           
 23119                           ;psect for function _TMR0_Read16bitTimer
 23120  18BE                     _TMR0_Read16bitTimer:	
 23121                           
 23122                           ;tmr0.c: 111: uint16_t readVal;
 23123                           ;tmr0.c: 112: uint8_t readValLow;
 23124                           ;tmr0.c: 113: uint8_t readValHigh;
 23125                           ;tmr0.c: 115: readValLow = TMR0L;
 23126                           
 23127                           ;incstack = 0
 23128                           ; Regs used in _TMR0_Read16bitTimer: [wreg+status,2+status,0]
 23129  18BE  0020               	movlb	0	; select bank0
 23130  18BF  0815               	movf	21,w	;volatile
 23131  18C0  00F3               	movwf	??_TMR0_Read16bitTimer
 23132  18C1  0873               	movf	??_TMR0_Read16bitTimer,w
 23133  18C2  00FA               	movwf	TMR0_Read16bitTimer@readValLow
 23134                           
 23135                           ;tmr0.c: 116: readValHigh = TMR0H;
 23136  18C3  0816               	movf	22,w	;volatile
 23137  18C4  00F3               	movwf	??_TMR0_Read16bitTimer
 23138  18C5  0873               	movf	??_TMR0_Read16bitTimer,w
 23139  18C6  00FB               	movwf	TMR0_Read16bitTimer@readValHigh
 23140                           
 23141                           ;tmr0.c: 117: readVal = ((uint16_t)readValHigh << 8) + readValLow;
 23142  18C7  087A               	movf	TMR0_Read16bitTimer@readValLow,w
 23143  18C8  00F3               	movwf	??_TMR0_Read16bitTimer
 23144  18C9  01F4               	clrf	??_TMR0_Read16bitTimer+1
 23145  18CA  087B               	movf	TMR0_Read16bitTimer@readValHigh,w
 23146  18CB  00F5               	movwf	??_TMR0_Read16bitTimer+2
 23147  18CC  01F6               	clrf	??_TMR0_Read16bitTimer+3
 23148  18CD  0875               	movf	??_TMR0_Read16bitTimer+2,w
 23149  18CE  00F6               	movwf	??_TMR0_Read16bitTimer+3
 23150  18CF  01F5               	clrf	??_TMR0_Read16bitTimer+2
 23151  18D0  0873               	movf	??_TMR0_Read16bitTimer,w
 23152  18D1  0775               	addwf	??_TMR0_Read16bitTimer+2,w
 23153  18D2  00F8               	movwf	TMR0_Read16bitTimer@readVal
 23154  18D3  0874               	movf	??_TMR0_Read16bitTimer+1,w
 23155  18D4  3D76               	addwfc	??_TMR0_Read16bitTimer+3,w
 23156  18D5  00F9               	movwf	TMR0_Read16bitTimer@readVal+1
 23157                           
 23158                           ;tmr0.c: 119: return readVal;
 23159  18D6  0879               	movf	TMR0_Read16bitTimer@readVal+1,w
 23160  18D7  00F2               	movwf	?_TMR0_Read16bitTimer+1
 23161  18D8  0878               	movf	TMR0_Read16bitTimer@readVal,w
 23162  18D9  00F1               	movwf	?_TMR0_Read16bitTimer
 23163  18DA  0008               	return
 23164  18DB                     __end_of_TMR0_Read16bitTimer:	
 23165                           
 23166                           	psect	text65
 23167  1E97                     __ptext65:	
 23168 ;; *************** function _nullifyBadge_platformInit *****************
 23169 ;; Defined at:
 23170 ;;		line 13 in file "nullifyBadge.c"
 23171 ;; Parameters:    Size  Location     Type
 23172 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 23173 ;;		 -> badge_inst(18), 
 23174 ;; Auto vars:     Size  Location     Type
 23175 ;;  badge           1   12[BANK0 ] PTR struct t_nullifyBadg
 23176 ;;		 -> badge_inst(18), 
 23177 ;; Return value:  Size  Location     Type
 23178 ;;                  1    wreg      void 
 23179 ;; Registers used:
 23180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23181 ;; Tracked objects:
 23182 ;;		On entry : 0/0
 23183 ;;		On exit  : 0/0
 23184 ;;		Unchanged: 0/0
 23185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23189 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23190 ;;Total ram usage:        1 bytes
 23191 ;; Hardware stack levels used:    1
 23192 ;; Hardware stack levels required when called:    9
 23193 ;; This function calls:
 23194 ;;		_OSCILLATOR_Initialize
 23195 ;;		_PIN_MANAGER_Initialize
 23196 ;;		_PWM1_Initialize
 23197 ;;		_PWM1_LoadDutyValue
 23198 ;;		_PWM2_Initialize
 23199 ;;		_PWM2_LoadDutyValue
 23200 ;;		_PWM5_Initialize
 23201 ;;		_PWM5_LoadDutyValue
 23202 ;;		_PWM6_Initialize
 23203 ;;		_PWM6_LoadDutyValue
 23204 ;;		_SPI1_Initialize
 23205 ;;		_SYSTEM_Initialize
 23206 ;;		_TMR0_Initialize
 23207 ;;		_TMR2_Initialize
 23208 ;;		_TMR4_Initialize
 23209 ;;		_displayL2_Initialize
 23210 ;; This function is called by:
 23211 ;;		_main
 23212 ;; This function uses a non-reentrant model
 23213 ;;
 23214                           
 23215                           
 23216                           ;psect for function _nullifyBadge_platformInit
 23217  1E97                     _nullifyBadge_platformInit:	
 23218                           
 23219                           ;incstack = 0
 23220                           ; Regs used in _nullifyBadge_platformInit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23221                           ;nullifyBadge_platformInit@badge stored from wreg
 23222  1E97  0020               	movlb	0	; select bank0
 23223  1E98  00AC               	movwf	nullifyBadge_platformInit@badge
 23224                           
 23225                           ;nullifyBadge.c: 15: SYSTEM_Initialize();
 23226  1E99  3199  2172  319E   	fcall	_SYSTEM_Initialize
 23227                           
 23228                           ;nullifyBadge.c: 16: OSCILLATOR_Initialize();
 23229  1E9C  31A6  26B8  319E   	fcall	_OSCILLATOR_Initialize
 23230                           
 23231                           ;nullifyBadge.c: 19: TMR0_Initialize();
 23232  1E9F  3198  20F8  319E   	fcall	_TMR0_Initialize
 23233                           
 23234                           ;nullifyBadge.c: 20: TMR2_Initialize();
 23235  1EA2  31A6  26C2  319E   	fcall	_TMR2_Initialize
 23236                           
 23237                           ;nullifyBadge.c: 21: TMR4_Initialize();
 23238  1EA5  31A7  2701  319E   	fcall	_TMR4_Initialize
 23239                           
 23240                           ;nullifyBadge.c: 23: PIN_MANAGER_Initialize();
 23241  1EA8  319E  2642  319E   	fcall	_PIN_MANAGER_Initialize
 23242                           
 23243                           ;nullifyBadge.c: 24: PWM1_Initialize();
 23244  1EAB  31A6  26EB  319E   	fcall	_PWM1_Initialize
 23245                           
 23246                           ;nullifyBadge.c: 26: PWM2_Initialize();
 23247  1EAE  31A6  26F6  319E   	fcall	_PWM2_Initialize
 23248                           
 23249                           ;nullifyBadge.c: 27: PWM5_Initialize();
 23250  1EB1  31A7  2717  319E   	fcall	_PWM5_Initialize
 23251                           
 23252                           ;nullifyBadge.c: 28: PWM6_Initialize();
 23253  1EB4  31A7  2723  319E   	fcall	_PWM6_Initialize
 23254                           
 23255                           ;nullifyBadge.c: 29: SPI1_Initialize();
 23256  1EB7  31A6  2696  319E   	fcall	_SPI1_Initialize
 23257                           
 23258                           ;nullifyBadge.c: 32: PWM1_LoadDutyValue(128);
 23259  1EBA  3080               	movlw	128
 23260  1EBB  00F1               	movwf	PWM1_LoadDutyValue@dutyValue
 23261  1EBC  3000               	movlw	0
 23262  1EBD  00F2               	movwf	PWM1_LoadDutyValue@dutyValue+1
 23263  1EBE  3198  2012  319E   	fcall	_PWM1_LoadDutyValue
 23264                           
 23265                           ;nullifyBadge.c: 44: do { LATBbits.LATB7 = 1; } while(0);
 23266  1EC1  0022               	movlb	2	; select bank2
 23267  1EC2  178D               	bsf	13,7	;volatile
 23268                           
 23269                           ;nullifyBadge.c: 45: PWM2_LoadDutyValue(192);
 23270  1EC3  30C0               	movlw	192
 23271  1EC4  00F1               	movwf	PWM2_LoadDutyValue@dutyValue
 23272  1EC5  3000               	movlw	0
 23273  1EC6  00F2               	movwf	PWM2_LoadDutyValue@dutyValue+1
 23274  1EC7  3198  2028  319E   	fcall	_PWM2_LoadDutyValue
 23275                           
 23276                           ;nullifyBadge.c: 50: PWM5_LoadDutyValue(gamma_table_256x1k[128]);
 23277  1ECA  3000               	movlw	low ((_gamma_table_256x1k+256)| (0+32768))
 23278  1ECB  0084               	movwf	4
 23279  1ECC  3091               	movlw	high ((_gamma_table_256x1k+256)| (0+32768))
 23280  1ECD  0085               	movwf	5
 23281  1ECE  3F00               	moviw [0]fsr0
 23282  1ECF  00F1               	movwf	PWM5_LoadDutyValue@dutyValue
 23283  1ED0  3F01               	moviw [1]fsr0
 23284  1ED1  00F2               	movwf	PWM5_LoadDutyValue@dutyValue+1
 23285  1ED2  3198  203E  319E   	fcall	_PWM5_LoadDutyValue
 23286                           
 23287                           ;nullifyBadge.c: 51: PWM6_LoadDutyValue(gamma_table_256x1k[128]);
 23288  1ED5  3000               	movlw	low ((_gamma_table_256x1k+256)| (0+32768))
 23289  1ED6  0084               	movwf	4
 23290  1ED7  3091               	movlw	high ((_gamma_table_256x1k+256)| (0+32768))
 23291  1ED8  0085               	movwf	5
 23292  1ED9  3F00               	moviw [0]fsr0
 23293  1EDA  00F1               	movwf	PWM6_LoadDutyValue@dutyValue
 23294  1EDB  3F01               	moviw [1]fsr0
 23295  1EDC  00F2               	movwf	PWM6_LoadDutyValue@dutyValue+1
 23296  1EDD  3188  2002  319E   	fcall	_PWM6_LoadDutyValue
 23297                           
 23298                           ;nullifyBadge.c: 54: displayL2_Initialize(&badge->display);
 23299  1EE0  0020               	movlb	0	; select bank0
 23300  1EE1  082C               	movf	nullifyBadge_platformInit@badge,w
 23301  1EE2  3199  2193         	fcall	_displayL2_Initialize
 23302                           
 23303                           ;nullifyBadge.c: 57: badge->registeredHw = 0x0;
 23304  1EE4  0020               	movlb	0	; select bank0
 23305  1EE5  082C               	movf	nullifyBadge_platformInit@badge,w
 23306  1EE6  3E11               	addlw	17
 23307  1EE7  0086               	movwf	6
 23308  1EE8  3001               	movlw	1	; select bank2/3
 23309  1EE9  0087               	movwf	7
 23310  1EEA  0181               	clrf	1
 23311  1EEB  0008               	return
 23312  1EEC                     __end_of_nullifyBadge_platformInit:	
 23313                           
 23314                           	psect	text66
 23315  1993                     __ptext66:	
 23316 ;; *************** function _displayL2_Initialize *****************
 23317 ;; Defined at:
 23318 ;;		line 12 in file "nullifyBadge_displayL2.c"
 23319 ;; Parameters:    Size  Location     Type
 23320 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23321 ;;		 -> badge_inst(18), 
 23322 ;; Auto vars:     Size  Location     Type
 23323 ;;  display         1   11[BANK0 ] PTR struct t_nullifyDisp
 23324 ;;		 -> badge_inst(18), 
 23325 ;; Return value:  Size  Location     Type
 23326 ;;                  1    wreg      void 
 23327 ;; Registers used:
 23328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23329 ;; Tracked objects:
 23330 ;;		On entry : 0/0
 23331 ;;		On exit  : 0/0
 23332 ;;		Unchanged: 0/0
 23333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23338 ;;Total ram usage:        1 bytes
 23339 ;; Hardware stack levels used:    1
 23340 ;; Hardware stack levels required when called:    8
 23341 ;; This function calls:
 23342 ;;		_displayL1_Initialize
 23343 ;;		_memset
 23344 ;; This function is called by:
 23345 ;;		_nullifyBadge_platformInit
 23346 ;; This function uses a non-reentrant model
 23347 ;;
 23348                           
 23349                           
 23350                           ;psect for function _displayL2_Initialize
 23351  1993                     _displayL2_Initialize:	
 23352                           
 23353                           ;incstack = 0
 23354                           ; Regs used in _displayL2_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23355                           ;displayL2_Initialize@display stored from wreg
 23356  1993  0020               	movlb	0	; select bank0
 23357  1994  00AB               	movwf	displayL2_Initialize@display
 23358                           
 23359                           ;nullifyBadge_displayL2.c: 13: displayL1_Initialize(&display->display_l1);
 23360  1995  082B               	movf	displayL2_Initialize@display,w
 23361  1996  3E07               	addlw	7
 23362  1997  31A7  279B  3199   	fcall	_displayL1_Initialize
 23363                           
 23364                           ;nullifyBadge_displayL2.c: 14: memset(display->charVect, ' ', sizeof(display->charVect))
      +                          ;
 23365  199A  3020               	movlw	32
 23366  199B  00F1               	movwf	memset@c
 23367  199C  3000               	movlw	0
 23368  199D  00F2               	movwf	memset@c+1
 23369  199E  3004               	movlw	4
 23370  199F  00F3               	movwf	memset@n
 23371  19A0  3000               	movlw	0
 23372  19A1  00F4               	movwf	memset@n+1
 23373  19A2  0020               	movlb	0	; select bank0
 23374  19A3  082B               	movf	displayL2_Initialize@display,w
 23375  19A4  3198  206D         	fcall	_memset
 23376                           
 23377                           ;nullifyBadge_displayL2.c: 15: display->dpVect = 0;
 23378  19A6  0020               	movlb	0	; select bank0
 23379  19A7  082B               	movf	displayL2_Initialize@display,w
 23380  19A8  3E04               	addlw	4
 23381  19A9  0086               	movwf	6
 23382  19AA  3001               	movlw	1	; select bank2/3
 23383  19AB  0087               	movwf	7
 23384  19AC  0181               	clrf	1
 23385                           
 23386                           ;nullifyBadge_displayL2.c: 16: display->ledVect = 0;
 23387  19AD  082B               	movf	displayL2_Initialize@display,w
 23388  19AE  3E05               	addlw	5
 23389  19AF  0086               	movwf	6
 23390  19B0  3001               	movlw	1	; select bank2/3
 23391  19B1  0087               	movwf	7
 23392  19B2  3000               	movlw	0
 23393  19B3  3FC0               	movwi [0]fsr1
 23394  19B4  3FC1               	movwi [1]fsr1
 23395  19B5  0008               	return
 23396  19B6                     __end_of_displayL2_Initialize:	
 23397                           
 23398                           	psect	text67
 23399  279B                     __ptext67:	
 23400 ;; *************** function _displayL1_Initialize *****************
 23401 ;; Defined at:
 23402 ;;		line 13 in file "nullifyBadge_displayL1.c"
 23403 ;; Parameters:    Size  Location     Type
 23404 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23405 ;;		 -> badge_inst(18), 
 23406 ;; Auto vars:     Size  Location     Type
 23407 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 23408 ;;		 -> badge_inst(18), 
 23409 ;; Return value:  Size  Location     Type
 23410 ;;                  1    wreg      void 
 23411 ;; Registers used:
 23412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23413 ;; Tracked objects:
 23414 ;;		On entry : 0/0
 23415 ;;		On exit  : 0/0
 23416 ;;		Unchanged: 0/0
 23417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23422 ;;Total ram usage:        1 bytes
 23423 ;; Hardware stack levels used:    1
 23424 ;; Hardware stack levels required when called:    7
 23425 ;; This function calls:
 23426 ;;		_displayL1_Update
 23427 ;;		_memset
 23428 ;; This function is called by:
 23429 ;;		_displayL2_Initialize
 23430 ;; This function uses a non-reentrant model
 23431 ;;
 23432                           
 23433                           
 23434                           ;psect for function _displayL1_Initialize
 23435  279B                     _displayL1_Initialize:	
 23436                           
 23437                           ;incstack = 0
 23438                           ; Regs used in _displayL1_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23439                           ;displayL1_Initialize@display stored from wreg
 23440  279B  00FB               	movwf	displayL1_Initialize@display
 23441                           
 23442                           ;nullifyBadge_displayL1.c: 14: memset(display->displayVect, 0, sizeof(struct t_nullifyDi
      +                          splay_l1));
 23443  279C  3000               	movlw	0
 23444  279D  00F1               	movwf	memset@c
 23445  279E  00F2               	movwf	memset@c+1
 23446  279F  300A               	movlw	10
 23447  27A0  00F3               	movwf	memset@n
 23448  27A1  3000               	movlw	0
 23449  27A2  00F4               	movwf	memset@n+1
 23450  27A3  087B               	movf	displayL1_Initialize@display,w
 23451  27A4  3198  206D  31A7   	fcall	_memset
 23452                           
 23453                           ;nullifyBadge_displayL1.c: 15: displayL1_Update(display);
 23454  27A7  087B               	movf	displayL1_Initialize@display,w
 23455  27A8  31A7  27CB         	fcall	_displayL1_Update
 23456  27AA  0008               	return
 23457  27AB                     __end_of_displayL1_Initialize:	
 23458                           
 23459                           	psect	text68
 23460  186D                     __ptext68:	
 23461 ;; *************** function _memset *****************
 23462 ;; Defined at:
 23463 ;;		line 8 in file "/Applications/microchip/xc8/v1.42/sources/common/memset.c"
 23464 ;; Parameters:    Size  Location     Type
 23465 ;;  p1              1    wreg     PTR void 
 23466 ;;		 -> badge_inst(18), 
 23467 ;;  c               2    1[COMMON] int 
 23468 ;;  n               2    3[COMMON] unsigned int 
 23469 ;; Auto vars:     Size  Location     Type
 23470 ;;  p1              1    7[COMMON] PTR void 
 23471 ;;		 -> badge_inst(18), 
 23472 ;;  p               1    6[COMMON] PTR unsigned char 
 23473 ;;		 -> badge_inst(18), 
 23474 ;; Return value:  Size  Location     Type
 23475 ;;                  1    wreg      PTR void 
 23476 ;; Registers used:
 23477 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23478 ;; Tracked objects:
 23479 ;;		On entry : 0/0
 23480 ;;		On exit  : 0/0
 23481 ;;		Unchanged: 0/0
 23482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23486 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23487 ;;Total ram usage:        7 bytes
 23488 ;; Hardware stack levels used:    1
 23489 ;; Hardware stack levels required when called:    4
 23490 ;; This function calls:
 23491 ;;		Nothing
 23492 ;; This function is called by:
 23493 ;;		_displayL1_Initialize
 23494 ;;		_displayL2_Initialize
 23495 ;; This function uses a non-reentrant model
 23496 ;;
 23497                           
 23498                           
 23499                           ;psect for function _memset
 23500  186D                     _memset:	
 23501                           
 23502                           ;incstack = 0
 23503                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 23504                           ;memset@p1 stored from wreg
 23505  186D  00F7               	movwf	memset@p1
 23506  186E  0877               	movf	memset@p1,w
 23507  186F  00F5               	movwf	??_memset
 23508  1870  0875               	movf	??_memset,w
 23509  1871  00F6               	movwf	memset@p
 23510  1872                     l6511:	
 23511  1872  3001               	movlw	1
 23512  1873  02F3               	subwf	memset@n,f
 23513  1874  3000               	movlw	0
 23514  1875  3BF4               	subwfb	memset@n+1,f
 23515  1876  0A73               	incf	memset@n,w
 23516  1877  1903               	btfsc	3,2
 23517  1878  0A74               	incf	memset@n+1,w
 23518  1879  1903               	btfsc	3,2
 23519  187A  0008               	return
 23520  187B  0871               	movf	memset@c,w
 23521  187C  00F5               	movwf	??_memset
 23522  187D  0876               	movf	memset@p,w
 23523  187E  0086               	movwf	6
 23524  187F  3001               	movlw	1	; select bank2/3
 23525  1880  0087               	movwf	7
 23526  1881  0875               	movf	??_memset,w
 23527  1882  0081               	movwf	1
 23528  1883  3001               	movlw	1
 23529  1884  00F5               	movwf	??_memset
 23530  1885  0875               	movf	??_memset,w
 23531  1886  07F6               	addwf	memset@p,f
 23532  1887  2872               	goto	l6511
 23533  1888                     __end_of_memset:	
 23534                           ;	Return value of _memset is never used
 23535                           
 23536                           
 23537                           	psect	text69
 23538  27CB                     __ptext69:	
 23539 ;; *************** function _displayL1_Update *****************
 23540 ;; Defined at:
 23541 ;;		line 97 in file "nullifyBadge_displayL1.c"
 23542 ;; Parameters:    Size  Location     Type
 23543 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23544 ;;		 -> badge_inst(18), 
 23545 ;; Auto vars:     Size  Location     Type
 23546 ;;  display         1   10[BANK0 ] PTR struct t_nullifyDisp
 23547 ;;		 -> badge_inst(18), 
 23548 ;;  tmpRxBuf       10    0[BANK0 ] unsigned char [10]
 23549 ;; Return value:  Size  Location     Type
 23550 ;;                  1    wreg      void 
 23551 ;; Registers used:
 23552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23553 ;; Tracked objects:
 23554 ;;		On entry : 0/0
 23555 ;;		On exit  : 0/0
 23556 ;;		Unchanged: 0/0
 23557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23559 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23561 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23562 ;;Total ram usage:       13 bytes
 23563 ;; Hardware stack levels used:    1
 23564 ;; Hardware stack levels required when called:    6
 23565 ;; This function calls:
 23566 ;;		_SPI1_Exchange8bitBuffer
 23567 ;; This function is called by:
 23568 ;;		_displayL1_Initialize
 23569 ;;		_displayL2_ForceUpdate
 23570 ;;		_displayL2_EraseSegDisplay
 23571 ;;		_displayL2_SetUserLeds
 23572 ;;		_displayL2_ClrUserLeds
 23573 ;;		_displayL2_PrintChar
 23574 ;;		_displayL2_PrintStr
 23575 ;; This function uses a non-reentrant model
 23576 ;;
 23577                           
 23578                           
 23579                           ;psect for function _displayL1_Update
 23580  27CB                     _displayL1_Update:	
 23581                           
 23582                           ;incstack = 0
 23583                           ; Regs used in _displayL1_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23584                           ;displayL1_Update@display stored from wreg
 23585  27CB  0020               	movlb	0	; select bank0
 23586  27CC  00AA               	movwf	displayL1_Update@display
 23587                           
 23588                           ;nullifyBadge_displayL1.c: 98: u8 tmpRxBuf[10];
 23589                           ;nullifyBadge_displayL1.c: 100: SPI1_Exchange8bitBuffer(display->displayVect, 10, tmpRxB
      +                          uf);
 23590  27CD  300A               	movlw	10
 23591  27CE  00F9               	movwf	??_displayL1_Update
 23592  27CF  0879               	movf	??_displayL1_Update,w
 23593  27D0  00F2               	movwf	SPI1_Exchange8bitBuffer@bufLen
 23594  27D1  3020               	movlw	(low (displayL1_Update@tmpRxBuf| 0))& (0+255)
 23595  27D2  00FA               	movwf	??_displayL1_Update+1
 23596  27D3  087A               	movf	??_displayL1_Update+1,w
 23597  27D4  00F3               	movwf	SPI1_Exchange8bitBuffer@dataOut
 23598  27D5  082A               	movf	displayL1_Update@display,w
 23599  27D6  319D  25A2         	fcall	_SPI1_Exchange8bitBuffer
 23600                           
 23601                           ;nullifyBadge_displayL1.c: 101: do { LATCbits.LATC7 = 1; } while(0);
 23602  27D8  0022               	movlb	2	; select bank2
 23603  27D9  178E               	bsf	14,7	;volatile
 23604                           
 23605                           ;nullifyBadge_displayL1.c: 102: do { LATCbits.LATC7 = 0; } while(0);
 23606  27DA  138E               	bcf	14,7	;volatile
 23607  27DB  0008               	return
 23608  27DC                     __end_of_displayL1_Update:	
 23609                           
 23610                           	psect	text70
 23611  1DA2                     __ptext70:	
 23612 ;; *************** function _SPI1_Exchange8bitBuffer *****************
 23613 ;; Defined at:
 23614 ;;		line 91 in file "mcc_generated_files/spi1.c"
 23615 ;; Parameters:    Size  Location     Type
 23616 ;;  dataIn          1    wreg     PTR unsigned char 
 23617 ;;		 -> badge_inst(18), 
 23618 ;;  bufLen          1    2[COMMON] unsigned char 
 23619 ;;  dataOut         1    3[COMMON] PTR unsigned char 
 23620 ;;		 -> displayL1_Update@tmpRxBuf(10), 
 23621 ;; Auto vars:     Size  Location     Type
 23622 ;;  dataIn          1    7[COMMON] PTR unsigned char 
 23623 ;;		 -> badge_inst(18), 
 23624 ;;  bytesWritten    1    8[COMMON] unsigned char 
 23625 ;; Return value:  Size  Location     Type
 23626 ;;                  1    wreg      unsigned char 
 23627 ;; Registers used:
 23628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23629 ;; Tracked objects:
 23630 ;;		On entry : 0/0
 23631 ;;		On exit  : 0/0
 23632 ;;		Unchanged: 0/0
 23633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23636 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23637 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23638 ;;Total ram usage:        7 bytes
 23639 ;; Hardware stack levels used:    1
 23640 ;; Hardware stack levels required when called:    5
 23641 ;; This function calls:
 23642 ;;		_SPI1_Exchange8bit
 23643 ;; This function is called by:
 23644 ;;		_displayL1_Update
 23645 ;; This function uses a non-reentrant model
 23646 ;;
 23647                           
 23648                           
 23649                           ;psect for function _SPI1_Exchange8bitBuffer
 23650  1DA2                     _SPI1_Exchange8bitBuffer:	
 23651                           
 23652                           ;incstack = 0
 23653                           ; Regs used in _SPI1_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 23654                           ;SPI1_Exchange8bitBuffer@dataIn stored from wreg
 23655  1DA2  00F7               	movwf	SPI1_Exchange8bitBuffer@dataIn
 23656                           
 23657                           ;spi1.c: 93: uint8_t bytesWritten = 0;
 23658  1DA3  01F8               	clrf	SPI1_Exchange8bitBuffer@bytesWritten
 23659                           
 23660                           ;spi1.c: 95: if(bufLen != 0)
 23661  1DA4  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 23662  1DA5  1903               	btfsc	3,2
 23663  1DA6  0008               	return
 23664                           
 23665                           ;spi1.c: 96: {
 23666                           ;spi1.c: 97: if(dataIn != (0))
 23667  1DA7  0877               	movf	SPI1_Exchange8bitBuffer@dataIn,w
 23668  1DA8  1D03               	btfss	3,2
 23669  1DA9  2DD2               	goto	l6187
 23670  1DAA  2DD7               	goto	l6189
 23671  1DAB                     l6179:	
 23672                           ;spi1.c: 98: {
 23673                           ;spi1.c: 99: while(bytesWritten < bufLen)
 23674                           
 23675                           
 23676                           ;spi1.c: 100: {
 23677                           ;spi1.c: 101: if(dataOut == (0))
 23678  1DAB  0873               	movf	SPI1_Exchange8bitBuffer@dataOut,w
 23679  1DAC  1D03               	btfss	3,2
 23680  1DAD  2DBA               	goto	l6183
 23681                           
 23682                           ;spi1.c: 102: {
 23683                           ;spi1.c: 103: SPI1_Exchange8bit(dataIn[bytesWritten]);
 23684  1DAE  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 23685  1DAF  0777               	addwf	SPI1_Exchange8bitBuffer@dataIn,w
 23686  1DB0  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 23687  1DB1  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 23688  1DB2  0086               	movwf	6
 23689  1DB3  3001               	movlw	1	; select bank2/3
 23690  1DB4  0087               	movwf	7
 23691  1DB5  0801               	movf	1,w
 23692  1DB6  31A6  26A6  319D   	fcall	_SPI1_Exchange8bit
 23693                           
 23694                           ;spi1.c: 104: }
 23695  1DB9  2DCE               	goto	l6185
 23696  1DBA                     l6183:	
 23697                           
 23698                           ;spi1.c: 105: else
 23699                           ;spi1.c: 106: {
 23700                           ;spi1.c: 107: dataOut[bytesWritten] = SPI1_Exchange8bit(dataIn[bytesWritten]);
 23701  1DBA  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 23702  1DBB  0777               	addwf	SPI1_Exchange8bitBuffer@dataIn,w
 23703  1DBC  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 23704  1DBD  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 23705  1DBE  0086               	movwf	6
 23706  1DBF  3001               	movlw	1	; select bank2/3
 23707  1DC0  0087               	movwf	7
 23708  1DC1  0801               	movf	1,w
 23709  1DC2  31A6  26A6  319D   	fcall	_SPI1_Exchange8bit
 23710  1DC5  00F5               	movwf	??_SPI1_Exchange8bitBuffer+1
 23711  1DC6  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 23712  1DC7  0773               	addwf	SPI1_Exchange8bitBuffer@dataOut,w
 23713  1DC8  00F6               	movwf	??_SPI1_Exchange8bitBuffer+2
 23714  1DC9  0876               	movf	??_SPI1_Exchange8bitBuffer+2,w
 23715  1DCA  0086               	movwf	6
 23716  1DCB  0187               	clrf	7
 23717  1DCC  0875               	movf	??_SPI1_Exchange8bitBuffer+1,w
 23718  1DCD  0081               	movwf	1
 23719  1DCE                     l6185:	
 23720                           
 23721                           ;spi1.c: 108: }
 23722                           ;spi1.c: 110: bytesWritten++;
 23723  1DCE  3001               	movlw	1
 23724  1DCF  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 23725  1DD0  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 23726  1DD1  07F8               	addwf	SPI1_Exchange8bitBuffer@bytesWritten,f
 23727  1DD2                     l6187:	
 23728  1DD2  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 23729  1DD3  0278               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w
 23730  1DD4  1803               	btfsc	3,0
 23731  1DD5  0008               	return
 23732  1DD6  2DAB               	goto	l6179
 23733  1DD7                     l6189:	
 23734                           ;spi1.c: 111: }
 23735                           ;spi1.c: 112: }
 23736                           
 23737                           
 23738                           ;spi1.c: 113: else
 23739                           ;spi1.c: 114: {
 23740                           ;spi1.c: 115: if(dataOut != (0))
 23741  1DD7  0873               	movf	SPI1_Exchange8bitBuffer@dataOut,w
 23742  1DD8  1903               	btfsc	3,2
 23743  1DD9  0008               	return
 23744  1DDA                     l6197:	
 23745  1DDA  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 23746  1DDB  0278               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w
 23747  1DDC  1803               	btfsc	3,0
 23748  1DDD  0008               	return
 23749                           
 23750                           ;spi1.c: 118: {
 23751                           ;spi1.c: 119: dataOut[bytesWritten] = SPI1_Exchange8bit(0x0);
 23752                           
 23753                           ;spi1.c: 116: {
 23754                           ;spi1.c: 117: while(bytesWritten < bufLen )
 23755  1DDE  3000               	movlw	0
 23756  1DDF  31A6  26A6  319D   	fcall	_SPI1_Exchange8bit
 23757  1DE2  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 23758  1DE3  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 23759  1DE4  0773               	addwf	SPI1_Exchange8bitBuffer@dataOut,w
 23760  1DE5  00F5               	movwf	??_SPI1_Exchange8bitBuffer+1
 23761  1DE6  0875               	movf	??_SPI1_Exchange8bitBuffer+1,w
 23762  1DE7  0086               	movwf	6
 23763  1DE8  0187               	clrf	7
 23764  1DE9  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 23765  1DEA  0081               	movwf	1
 23766                           
 23767                           ;spi1.c: 121: bytesWritten++;
 23768  1DEB  3001               	movlw	1
 23769  1DEC  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 23770  1DED  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 23771  1DEE  07F8               	addwf	SPI1_Exchange8bitBuffer@bytesWritten,f
 23772  1DEF  2DDA               	goto	l6197
 23773  1DF0                     __end_of_SPI1_Exchange8bitBuffer:	
 23774                           ;spi1.c: 122: }
 23775                           ;spi1.c: 123: }
 23776                           ;spi1.c: 124: }
 23777                           ;spi1.c: 125: }
 23778                           ;spi1.c: 127: return bytesWritten;
 23779                           ;	Return value of _SPI1_Exchange8bitBuffer is never used
 23780                           
 23781                           
 23782                           	psect	text71
 23783  26A6                     __ptext71:	
 23784 ;; *************** function _SPI1_Exchange8bit *****************
 23785 ;; Defined at:
 23786 ;;		line 77 in file "mcc_generated_files/spi1.c"
 23787 ;; Parameters:    Size  Location     Type
 23788 ;;  data            1    wreg     unsigned char 
 23789 ;; Auto vars:     Size  Location     Type
 23790 ;;  data            1    1[COMMON] unsigned char 
 23791 ;; Return value:  Size  Location     Type
 23792 ;;                  1    wreg      unsigned char 
 23793 ;; Registers used:
 23794 ;;		wreg
 23795 ;; Tracked objects:
 23796 ;;		On entry : 0/0
 23797 ;;		On exit  : 0/0
 23798 ;;		Unchanged: 0/0
 23799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23803 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23804 ;;Total ram usage:        1 bytes
 23805 ;; Hardware stack levels used:    1
 23806 ;; Hardware stack levels required when called:    4
 23807 ;; This function calls:
 23808 ;;		Nothing
 23809 ;; This function is called by:
 23810 ;;		_SPI1_Exchange8bitBuffer
 23811 ;; This function uses a non-reentrant model
 23812 ;;
 23813                           
 23814                           
 23815                           ;psect for function _SPI1_Exchange8bit
 23816  26A6                     _SPI1_Exchange8bit:	
 23817                           
 23818                           ;incstack = 0
 23819                           ; Regs used in _SPI1_Exchange8bit: [wreg]
 23820                           ;SPI1_Exchange8bit@data stored from wreg
 23821  26A6  00F1               	movwf	SPI1_Exchange8bit@data
 23822                           
 23823                           ;spi1.c: 80: SSP1CON1bits.WCOL = 0;
 23824  26A7  0024               	movlb	4	; select bank4
 23825  26A8  1395               	bcf	21,7	;volatile
 23826                           
 23827                           ;spi1.c: 82: SSP1BUF = data;
 23828  26A9  0871               	movf	SPI1_Exchange8bit@data,w
 23829  26AA  0091               	movwf	17	;volatile
 23830  26AB                     l18:	
 23831                           ;spi1.c: 85: {
 23832                           
 23833                           ;spi1.c: 84: while(SSP1STATbits.BF == 0x0)
 23834                           
 23835  26AB  1C14               	btfss	20,0	;volatile
 23836  26AC  2EAB               	goto	l18
 23837                           
 23838                           ;spi1.c: 86: }
 23839                           ;spi1.c: 88: return (SSP1BUF);
 23840  26AD  0811               	movf	17,w	;volatile
 23841  26AE  0008               	return
 23842  26AF                     __end_of_SPI1_Exchange8bit:	
 23843                           
 23844                           	psect	text72
 23845  1972                     __ptext72:	
 23846 ;; *************** function _SYSTEM_Initialize *****************
 23847 ;; Defined at:
 23848 ;;		line 76 in file "mcc_generated_files/mcc.c"
 23849 ;; Parameters:    Size  Location     Type
 23850 ;;		None
 23851 ;; Auto vars:     Size  Location     Type
 23852 ;;		None
 23853 ;; Return value:  Size  Location     Type
 23854 ;;                  1    wreg      void 
 23855 ;; Registers used:
 23856 ;;		wreg, status,2, status,0, pclath, cstack
 23857 ;; Tracked objects:
 23858 ;;		On entry : 0/0
 23859 ;;		On exit  : 0/0
 23860 ;;		Unchanged: 0/0
 23861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23866 ;;Total ram usage:        0 bytes
 23867 ;; Hardware stack levels used:    1
 23868 ;; Hardware stack levels required when called:    6
 23869 ;; This function calls:
 23870 ;;		_OSCILLATOR_Initialize
 23871 ;;		_PIN_MANAGER_Initialize
 23872 ;;		_PWM1_Initialize
 23873 ;;		_PWM2_Initialize
 23874 ;;		_PWM5_Initialize
 23875 ;;		_PWM6_Initialize
 23876 ;;		_SPI1_Initialize
 23877 ;;		_TMR0_Initialize
 23878 ;;		_TMR2_Initialize
 23879 ;;		_TMR4_Initialize
 23880 ;;		_WDT_Initialize
 23881 ;; This function is called by:
 23882 ;;		_nullifyBadge_platformInit
 23883 ;; This function uses a non-reentrant model
 23884 ;;
 23885                           
 23886                           
 23887                           ;psect for function _SYSTEM_Initialize
 23888  1972                     _SYSTEM_Initialize:	
 23889                           
 23890                           ;mcc.c: 79: PIN_MANAGER_Initialize();
 23891                           
 23892                           ;incstack = 0
 23893                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23894  1972  319E  2642  3199   	fcall	_PIN_MANAGER_Initialize
 23895                           
 23896                           ;mcc.c: 80: OSCILLATOR_Initialize();
 23897  1975  31A6  26B8  3199   	fcall	_OSCILLATOR_Initialize
 23898                           
 23899                           ;mcc.c: 81: WDT_Initialize();
 23900  1978  31A6  2674  3199   	fcall	_WDT_Initialize
 23901                           
 23902                           ;mcc.c: 82: SPI1_Initialize();
 23903  197B  31A6  2696  3199   	fcall	_SPI1_Initialize
 23904                           
 23905                           ;mcc.c: 83: PWM6_Initialize();
 23906  197E  31A7  2723  3199   	fcall	_PWM6_Initialize
 23907                           
 23908                           ;mcc.c: 84: PWM1_Initialize();
 23909  1981  31A6  26EB  3199   	fcall	_PWM1_Initialize
 23910                           
 23911                           ;mcc.c: 85: PWM2_Initialize();
 23912  1984  31A6  26F6  3199   	fcall	_PWM2_Initialize
 23913                           
 23914                           ;mcc.c: 86: TMR4_Initialize();
 23915  1987  31A7  2701  3199   	fcall	_TMR4_Initialize
 23916                           
 23917                           ;mcc.c: 87: TMR2_Initialize();
 23918  198A  31A6  26C2  3199   	fcall	_TMR2_Initialize
 23919                           
 23920                           ;mcc.c: 88: PWM5_Initialize();
 23921  198D  31A7  2717  3199   	fcall	_PWM5_Initialize
 23922                           
 23923                           ;mcc.c: 89: TMR0_Initialize();
 23924  1990  3198  20F8         	fcall	_TMR0_Initialize
 23925  1992  0008               	return
 23926  1993                     __end_of_SYSTEM_Initialize:	
 23927                           
 23928                           	psect	text73
 23929  2674                     __ptext73:	
 23930 ;; *************** function _WDT_Initialize *****************
 23931 ;; Defined at:
 23932 ;;		line 110 in file "mcc_generated_files/mcc.c"
 23933 ;; Parameters:    Size  Location     Type
 23934 ;;		None
 23935 ;; Auto vars:     Size  Location     Type
 23936 ;;		None
 23937 ;; Return value:  Size  Location     Type
 23938 ;;                  1    wreg      void 
 23939 ;; Registers used:
 23940 ;;		wreg
 23941 ;; Tracked objects:
 23942 ;;		On entry : 0/0
 23943 ;;		On exit  : 0/0
 23944 ;;		Unchanged: 0/0
 23945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23950 ;;Total ram usage:        0 bytes
 23951 ;; Hardware stack levels used:    1
 23952 ;; Hardware stack levels required when called:    4
 23953 ;; This function calls:
 23954 ;;		Nothing
 23955 ;; This function is called by:
 23956 ;;		_SYSTEM_Initialize
 23957 ;; This function uses a non-reentrant model
 23958 ;;
 23959                           
 23960                           
 23961                           ;psect for function _WDT_Initialize
 23962  2674                     _WDT_Initialize:	
 23963                           
 23964                           ;mcc.c: 113: WDTCON = 0x16;
 23965                           
 23966                           ;incstack = 0
 23967                           ; Regs used in _WDT_Initialize: [wreg]
 23968  2674  3016               	movlw	22
 23969  2675  0021               	movlb	1	; select bank1
 23970  2676  0097               	movwf	23	;volatile
 23971  2677  0008               	return
 23972  2678                     __end_of_WDT_Initialize:	
 23973                           
 23974                           	psect	text74
 23975  2701                     __ptext74:	
 23976 ;; *************** function _TMR4_Initialize *****************
 23977 ;; Defined at:
 23978 ;;		line 63 in file "mcc_generated_files/tmr4.c"
 23979 ;; Parameters:    Size  Location     Type
 23980 ;;		None
 23981 ;; Auto vars:     Size  Location     Type
 23982 ;;		None
 23983 ;; Return value:  Size  Location     Type
 23984 ;;                  1    wreg      void 
 23985 ;; Registers used:
 23986 ;;		wreg, status,2, status,0, pclath, cstack
 23987 ;; Tracked objects:
 23988 ;;		On entry : 0/0
 23989 ;;		On exit  : 0/0
 23990 ;;		Unchanged: 0/0
 23991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23996 ;;Total ram usage:        0 bytes
 23997 ;; Hardware stack levels used:    1
 23998 ;; Hardware stack levels required when called:    5
 23999 ;; This function calls:
 24000 ;;		_TMR4_StartTimer
 24001 ;; This function is called by:
 24002 ;;		_SYSTEM_Initialize
 24003 ;;		_nullifyBadge_platformInit
 24004 ;; This function uses a non-reentrant model
 24005 ;;
 24006                           
 24007                           
 24008                           ;psect for function _TMR4_Initialize
 24009  2701                     _TMR4_Initialize:	
 24010                           
 24011                           ;tmr4.c: 68: T4CON = 0x7B;
 24012                           
 24013                           ;incstack = 0
 24014                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 24015  2701  307B               	movlw	123
 24016  2702  0028               	movlb	8	; select bank8
 24017  2703  0097               	movwf	23	;volatile
 24018                           
 24019                           ;tmr4.c: 71: PR4 = 0xFF;
 24020  2704  30FF               	movlw	255
 24021  2705  0096               	movwf	22	;volatile
 24022                           
 24023                           ;tmr4.c: 74: TMR4 = 0x00;
 24024  2706  0195               	clrf	21	;volatile
 24025                           
 24026                           ;tmr4.c: 77: PIR2bits.TMR4IF = 0;
 24027  2707  0020               	movlb	0	; select bank0
 24028  2708  1092               	bcf	18,1	;volatile
 24029                           
 24030                           ;tmr4.c: 80: TMR4_StartTimer();
 24031  2709  31A6  266B         	fcall	_TMR4_StartTimer
 24032  270B  0008               	return
 24033  270C                     __end_of_TMR4_Initialize:	
 24034                           
 24035                           	psect	text75
 24036  266B                     __ptext75:	
 24037 ;; *************** function _TMR4_StartTimer *****************
 24038 ;; Defined at:
 24039 ;;		line 83 in file "mcc_generated_files/tmr4.c"
 24040 ;; Parameters:    Size  Location     Type
 24041 ;;		None
 24042 ;; Auto vars:     Size  Location     Type
 24043 ;;		None
 24044 ;; Return value:  Size  Location     Type
 24045 ;;                  1    wreg      void 
 24046 ;; Registers used:
 24047 ;;		None
 24048 ;; Tracked objects:
 24049 ;;		On entry : 0/0
 24050 ;;		On exit  : 0/0
 24051 ;;		Unchanged: 0/0
 24052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24057 ;;Total ram usage:        0 bytes
 24058 ;; Hardware stack levels used:    1
 24059 ;; Hardware stack levels required when called:    4
 24060 ;; This function calls:
 24061 ;;		Nothing
 24062 ;; This function is called by:
 24063 ;;		_TMR4_Initialize
 24064 ;; This function uses a non-reentrant model
 24065 ;;
 24066                           
 24067                           
 24068                           ;psect for function _TMR4_StartTimer
 24069  266B                     _TMR4_StartTimer:	
 24070                           
 24071                           ;tmr4.c: 86: T4CONbits.TMR4ON = 1;
 24072                           
 24073                           ;incstack = 0
 24074                           ; Regs used in _TMR4_StartTimer: []
 24075  266B  0028               	movlb	8	; select bank8
 24076  266C  1517               	bsf	23,2	;volatile
 24077  266D  0008               	return
 24078  266E                     __end_of_TMR4_StartTimer:	
 24079                           
 24080                           	psect	text76
 24081  26C2                     __ptext76:	
 24082 ;; *************** function _TMR2_Initialize *****************
 24083 ;; Defined at:
 24084 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;		None
 24087 ;; Auto vars:     Size  Location     Type
 24088 ;;		None
 24089 ;; Return value:  Size  Location     Type
 24090 ;;                  1    wreg      void 
 24091 ;; Registers used:
 24092 ;;		wreg, status,2, status,0, pclath, cstack
 24093 ;; Tracked objects:
 24094 ;;		On entry : 0/0
 24095 ;;		On exit  : 0/0
 24096 ;;		Unchanged: 0/0
 24097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24102 ;;Total ram usage:        0 bytes
 24103 ;; Hardware stack levels used:    1
 24104 ;; Hardware stack levels required when called:    5
 24105 ;; This function calls:
 24106 ;;		_TMR2_StartTimer
 24107 ;; This function is called by:
 24108 ;;		_SYSTEM_Initialize
 24109 ;;		_nullifyBadge_platformInit
 24110 ;; This function uses a non-reentrant model
 24111 ;;
 24112                           
 24113                           
 24114                           ;psect for function _TMR2_Initialize
 24115  26C2                     _TMR2_Initialize:	
 24116                           
 24117                           ;tmr2.c: 68: T2CON = 0x01;
 24118                           
 24119                           ;incstack = 0
 24120                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 24121  26C2  3001               	movlw	1
 24122  26C3  0020               	movlb	0	; select bank0
 24123  26C4  009F               	movwf	31	;volatile
 24124                           
 24125                           ;tmr2.c: 71: PR2 = 0x4A;
 24126  26C5  304A               	movlw	74
 24127  26C6  009E               	movwf	30	;volatile
 24128                           
 24129                           ;tmr2.c: 74: TMR2 = 0x00;
 24130  26C7  019D               	clrf	29	;volatile
 24131                           
 24132                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 24133  26C8  1091               	bcf	17,1	;volatile
 24134                           
 24135                           ;tmr2.c: 80: TMR2_StartTimer();
 24136  26C9  31A6  2668         	fcall	_TMR2_StartTimer
 24137  26CB  0008               	return
 24138  26CC                     __end_of_TMR2_Initialize:	
 24139                           
 24140                           	psect	text77
 24141  2668                     __ptext77:	
 24142 ;; *************** function _TMR2_StartTimer *****************
 24143 ;; Defined at:
 24144 ;;		line 83 in file "mcc_generated_files/tmr2.c"
 24145 ;; Parameters:    Size  Location     Type
 24146 ;;		None
 24147 ;; Auto vars:     Size  Location     Type
 24148 ;;		None
 24149 ;; Return value:  Size  Location     Type
 24150 ;;                  1    wreg      void 
 24151 ;; Registers used:
 24152 ;;		None
 24153 ;; Tracked objects:
 24154 ;;		On entry : 0/0
 24155 ;;		On exit  : 0/0
 24156 ;;		Unchanged: 0/0
 24157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24162 ;;Total ram usage:        0 bytes
 24163 ;; Hardware stack levels used:    1
 24164 ;; Hardware stack levels required when called:    4
 24165 ;; This function calls:
 24166 ;;		Nothing
 24167 ;; This function is called by:
 24168 ;;		_TMR2_Initialize
 24169 ;; This function uses a non-reentrant model
 24170 ;;
 24171                           
 24172                           
 24173                           ;psect for function _TMR2_StartTimer
 24174  2668                     _TMR2_StartTimer:	
 24175                           
 24176                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
 24177                           
 24178                           ;incstack = 0
 24179                           ; Regs used in _TMR2_StartTimer: []
 24180  2668  0020               	movlb	0	; select bank0
 24181  2669  151F               	bsf	31,2	;volatile
 24182  266A  0008               	return
 24183  266B                     __end_of_TMR2_StartTimer:	
 24184                           
 24185                           	psect	text78
 24186  18F8                     __ptext78:	
 24187 ;; *************** function _TMR0_Initialize *****************
 24188 ;; Defined at:
 24189 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 24190 ;; Parameters:    Size  Location     Type
 24191 ;;		None
 24192 ;; Auto vars:     Size  Location     Type
 24193 ;;		None
 24194 ;; Return value:  Size  Location     Type
 24195 ;;                  1    wreg      void 
 24196 ;; Registers used:
 24197 ;;		wreg, status,2, status,0, pclath, cstack
 24198 ;; Tracked objects:
 24199 ;;		On entry : 0/0
 24200 ;;		On exit  : 0/0
 24201 ;;		Unchanged: 0/0
 24202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24207 ;;Total ram usage:        0 bytes
 24208 ;; Hardware stack levels used:    1
 24209 ;; Hardware stack levels required when called:    5
 24210 ;; This function calls:
 24211 ;;		_TMR0_SetInterruptHandler
 24212 ;;		_TMR0_StartTimer
 24213 ;; This function is called by:
 24214 ;;		_SYSTEM_Initialize
 24215 ;;		_nullifyBadge_platformInit
 24216 ;; This function uses a non-reentrant model
 24217 ;;
 24218                           
 24219                           
 24220                           ;psect for function _TMR0_Initialize
 24221  18F8                     _TMR0_Initialize:	
 24222                           
 24223                           ;tmr0.c: 70: T0CON0 = 0x10;
 24224                           
 24225                           ;incstack = 0
 24226                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 24227  18F8  3010               	movlw	16
 24228  18F9  0020               	movlb	0	; select bank0
 24229  18FA  0097               	movwf	23	;volatile
 24230                           
 24231                           ;tmr0.c: 73: T0CON1 = 0x4D;
 24232  18FB  304D               	movlw	77
 24233  18FC  0098               	movwf	24	;volatile
 24234                           
 24235                           ;tmr0.c: 76: TMR0H = 0xFF;
 24236  18FD  30FF               	movlw	255
 24237  18FE  0096               	movwf	22	;volatile
 24238                           
 24239                           ;tmr0.c: 79: TMR0L = 0xFF;
 24240  18FF  30FF               	movlw	255
 24241  1900  0095               	movwf	21	;volatile
 24242                           
 24243                           ;tmr0.c: 82: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 24244  1901  0816               	movf	22,w	;volatile
 24245  1902  0021               	movlb	1	; select bank1
 24246  1903  00B9               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
 24247  1904  0020               	movlb	0	; select bank0
 24248  1905  0815               	movf	21,w	;volatile
 24249  1906  0021               	movlb	1	; select bank1
 24250  1907  00B8               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
 24251                           
 24252                           ;tmr0.c: 85: PIR0bits.TMR0IF = 0;
 24253  1908  0020               	movlb	0	; select bank0
 24254  1909  1290               	bcf	16,5	;volatile
 24255                           
 24256                           ;tmr0.c: 88: PIE0bits.TMR0IE = 1;
 24257  190A  0021               	movlb	1	; select bank1
 24258  190B  1690               	bsf	16,5	;volatile
 24259                           
 24260                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 24261  190C  30FF               	movlw	low _TMR0_DefaultInterruptHandler
 24262  190D  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 24263  190E  3007               	movlw	high _TMR0_DefaultInterruptHandler
 24264  190F  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 24265  1910  31A6  2678  3198   	fcall	_TMR0_SetInterruptHandler
 24266                           
 24267                           ;tmr0.c: 94: TMR0_StartTimer();
 24268  1913  31A6  2665         	fcall	_TMR0_StartTimer
 24269  1915  0008               	return
 24270  1916                     __end_of_TMR0_Initialize:	
 24271                           
 24272                           	psect	text79
 24273  2665                     __ptext79:	
 24274 ;; *************** function _TMR0_StartTimer *****************
 24275 ;; Defined at:
 24276 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 24277 ;; Parameters:    Size  Location     Type
 24278 ;;		None
 24279 ;; Auto vars:     Size  Location     Type
 24280 ;;		None
 24281 ;; Return value:  Size  Location     Type
 24282 ;;                  1    wreg      void 
 24283 ;; Registers used:
 24284 ;;		None
 24285 ;; Tracked objects:
 24286 ;;		On entry : 0/0
 24287 ;;		On exit  : 0/0
 24288 ;;		Unchanged: 0/0
 24289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24294 ;;Total ram usage:        0 bytes
 24295 ;; Hardware stack levels used:    1
 24296 ;; Hardware stack levels required when called:    4
 24297 ;; This function calls:
 24298 ;;		Nothing
 24299 ;; This function is called by:
 24300 ;;		_TMR0_Initialize
 24301 ;; This function uses a non-reentrant model
 24302 ;;
 24303                           
 24304                           
 24305                           ;psect for function _TMR0_StartTimer
 24306  2665                     _TMR0_StartTimer:	
 24307                           
 24308                           ;tmr0.c: 100: T0CON0bits.T0EN = 1;
 24309                           
 24310                           ;incstack = 0
 24311                           ; Regs used in _TMR0_StartTimer: []
 24312  2665  0020               	movlb	0	; select bank0
 24313  2666  1797               	bsf	23,7	;volatile
 24314  2667  0008               	return
 24315  2668                     __end_of_TMR0_StartTimer:	
 24316                           
 24317                           	psect	text80
 24318  2678                     __ptext80:	
 24319 ;; *************** function _TMR0_SetInterruptHandler *****************
 24320 ;; Defined at:
 24321 ;;		line 161 in file "mcc_generated_files/tmr0.c"
 24322 ;; Parameters:    Size  Location     Type
 24323 ;;  InterruptHan    2    1[COMMON] PTR void 
 24324 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 24325 ;; Auto vars:     Size  Location     Type
 24326 ;;		None
 24327 ;; Return value:  Size  Location     Type
 24328 ;;                  1    wreg      void 
 24329 ;; Registers used:
 24330 ;;		wreg
 24331 ;; Tracked objects:
 24332 ;;		On entry : 0/0
 24333 ;;		On exit  : 0/0
 24334 ;;		Unchanged: 0/0
 24335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24340 ;;Total ram usage:        2 bytes
 24341 ;; Hardware stack levels used:    1
 24342 ;; Hardware stack levels required when called:    4
 24343 ;; This function calls:
 24344 ;;		Nothing
 24345 ;; This function is called by:
 24346 ;;		_TMR0_Initialize
 24347 ;; This function uses a non-reentrant model
 24348 ;;
 24349                           
 24350                           
 24351                           ;psect for function _TMR0_SetInterruptHandler
 24352  2678                     _TMR0_SetInterruptHandler:	
 24353                           
 24354                           ;tmr0.c: 162: TMR0_InterruptHandler = InterruptHandler;
 24355                           
 24356                           ;incstack = 0
 24357                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 24358  2678  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 24359  2679  0021               	movlb	1	; select bank1
 24360  267A  00B7               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 24361  267B  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 24362  267C  00B6               	movwf	_TMR0_InterruptHandler^(0+128)
 24363  267D  0008               	return
 24364  267E                     __end_of_TMR0_SetInterruptHandler:	
 24365                           
 24366                           	psect	text81
 24367  2696                     __ptext81:	
 24368 ;; *************** function _SPI1_Initialize *****************
 24369 ;; Defined at:
 24370 ;;		line 63 in file "mcc_generated_files/spi1.c"
 24371 ;; Parameters:    Size  Location     Type
 24372 ;;		None
 24373 ;; Auto vars:     Size  Location     Type
 24374 ;;		None
 24375 ;; Return value:  Size  Location     Type
 24376 ;;                  1    wreg      void 
 24377 ;; Registers used:
 24378 ;;		wreg
 24379 ;; Tracked objects:
 24380 ;;		On entry : 0/0
 24381 ;;		On exit  : 0/0
 24382 ;;		Unchanged: 0/0
 24383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24388 ;;Total ram usage:        0 bytes
 24389 ;; Hardware stack levels used:    1
 24390 ;; Hardware stack levels required when called:    4
 24391 ;; This function calls:
 24392 ;;		Nothing
 24393 ;; This function is called by:
 24394 ;;		_SYSTEM_Initialize
 24395 ;;		_nullifyBadge_platformInit
 24396 ;; This function uses a non-reentrant model
 24397 ;;
 24398                           
 24399                           
 24400                           ;psect for function _SPI1_Initialize
 24401  2696                     _SPI1_Initialize:	
 24402                           
 24403                           ;spi1.c: 68: SSP1STAT = 0x40;
 24404                           
 24405                           ;incstack = 0
 24406                           ; Regs used in _SPI1_Initialize: [wreg]
 24407  2696  3040               	movlw	64
 24408  2697  0024               	movlb	4	; select bank4
 24409  2698  0094               	movwf	20	;volatile
 24410                           
 24411                           ;spi1.c: 71: SSP1CON1 = 0x22;
 24412  2699  3022               	movlw	34
 24413  269A  0095               	movwf	21	;volatile
 24414                           
 24415                           ;spi1.c: 74: SSP1ADD = 0x01;
 24416  269B  3001               	movlw	1
 24417  269C  0092               	movwf	18	;volatile
 24418  269D  0008               	return
 24419  269E                     __end_of_SPI1_Initialize:	
 24420                           
 24421                           	psect	text82
 24422  2723                     __ptext82:	
 24423 ;; *************** function _PWM6_Initialize *****************
 24424 ;; Defined at:
 24425 ;;		line 57 in file "mcc_generated_files/pwm6.c"
 24426 ;; Parameters:    Size  Location     Type
 24427 ;;		None
 24428 ;; Auto vars:     Size  Location     Type
 24429 ;;		None
 24430 ;; Return value:  Size  Location     Type
 24431 ;;                  1    wreg      void 
 24432 ;; Registers used:
 24433 ;;		wreg, status,2, status,0
 24434 ;; Tracked objects:
 24435 ;;		On entry : 0/0
 24436 ;;		On exit  : 0/0
 24437 ;;		Unchanged: 0/0
 24438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24443 ;;Total ram usage:        0 bytes
 24444 ;; Hardware stack levels used:    1
 24445 ;; Hardware stack levels required when called:    4
 24446 ;; This function calls:
 24447 ;;		Nothing
 24448 ;; This function is called by:
 24449 ;;		_SYSTEM_Initialize
 24450 ;;		_nullifyBadge_platformInit
 24451 ;; This function uses a non-reentrant model
 24452 ;;
 24453                           
 24454                           
 24455                           ;psect for function _PWM6_Initialize
 24456  2723                     _PWM6_Initialize:	
 24457                           
 24458                           ;pwm6.c: 61: PWM6CON = 0x90;
 24459                           
 24460                           ;incstack = 0
 24461                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 24462  2723  3090               	movlw	144
 24463  2724  002C               	movlb	12	; select bank12
 24464  2725  009C               	movwf	28	;volatile
 24465                           
 24466                           ;pwm6.c: 64: PWM6DCH = 0x7F;
 24467  2726  307F               	movlw	127
 24468  2727  009B               	movwf	27	;volatile
 24469                           
 24470                           ;pwm6.c: 67: PWM6DCL = 0xC0;
 24471  2728  30C0               	movlw	192
 24472  2729  009A               	movwf	26	;volatile
 24473                           
 24474                           ;pwm6.c: 71: PWMTMRSbits.P6TSEL = 0x2;
 24475  272A  081F               	movf	31,w	;volatile
 24476  272B  39F3               	andlw	-13
 24477  272C  3808               	iorlw	8
 24478  272D  009F               	movwf	31	;volatile
 24479  272E  0008               	return
 24480  272F                     __end_of_PWM6_Initialize:	
 24481                           
 24482                           	psect	text83
 24483  2717                     __ptext83:	
 24484 ;; *************** function _PWM5_Initialize *****************
 24485 ;; Defined at:
 24486 ;;		line 57 in file "mcc_generated_files/pwm5.c"
 24487 ;; Parameters:    Size  Location     Type
 24488 ;;		None
 24489 ;; Auto vars:     Size  Location     Type
 24490 ;;		None
 24491 ;; Return value:  Size  Location     Type
 24492 ;;                  1    wreg      void 
 24493 ;; Registers used:
 24494 ;;		wreg, status,2, status,0
 24495 ;; Tracked objects:
 24496 ;;		On entry : 0/0
 24497 ;;		On exit  : 0/0
 24498 ;;		Unchanged: 0/0
 24499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24504 ;;Total ram usage:        0 bytes
 24505 ;; Hardware stack levels used:    1
 24506 ;; Hardware stack levels required when called:    4
 24507 ;; This function calls:
 24508 ;;		Nothing
 24509 ;; This function is called by:
 24510 ;;		_SYSTEM_Initialize
 24511 ;;		_nullifyBadge_platformInit
 24512 ;; This function uses a non-reentrant model
 24513 ;;
 24514                           
 24515                           
 24516                           ;psect for function _PWM5_Initialize
 24517  2717                     _PWM5_Initialize:	
 24518                           
 24519                           ;pwm5.c: 61: PWM5CON = 0x90;
 24520                           
 24521                           ;incstack = 0
 24522                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 24523  2717  3090               	movlw	144
 24524  2718  002C               	movlb	12	; select bank12
 24525  2719  0099               	movwf	25	;volatile
 24526                           
 24527                           ;pwm5.c: 64: PWM5DCH = 0x7F;
 24528  271A  307F               	movlw	127
 24529  271B  0098               	movwf	24	;volatile
 24530                           
 24531                           ;pwm5.c: 67: PWM5DCL = 0xC0;
 24532  271C  30C0               	movlw	192
 24533  271D  0097               	movwf	23	;volatile
 24534                           
 24535                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 0x2;
 24536  271E  081F               	movf	31,w	;volatile
 24537  271F  39FC               	andlw	-4
 24538  2720  3802               	iorlw	2
 24539  2721  009F               	movwf	31	;volatile
 24540  2722  0008               	return
 24541  2723                     __end_of_PWM5_Initialize:	
 24542                           
 24543                           	psect	text84
 24544  26F6                     __ptext84:	
 24545 ;; *************** function _PWM2_Initialize *****************
 24546 ;; Defined at:
 24547 ;;		line 63 in file "mcc_generated_files/pwm2.c"
 24548 ;; Parameters:    Size  Location     Type
 24549 ;;		None
 24550 ;; Auto vars:     Size  Location     Type
 24551 ;;		None
 24552 ;; Return value:  Size  Location     Type
 24553 ;;                  1    wreg      void 
 24554 ;; Registers used:
 24555 ;;		wreg, status,2, status,0
 24556 ;; Tracked objects:
 24557 ;;		On entry : 0/0
 24558 ;;		On exit  : 0/0
 24559 ;;		Unchanged: 0/0
 24560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24565 ;;Total ram usage:        0 bytes
 24566 ;; Hardware stack levels used:    1
 24567 ;; Hardware stack levels required when called:    4
 24568 ;; This function calls:
 24569 ;;		Nothing
 24570 ;; This function is called by:
 24571 ;;		_SYSTEM_Initialize
 24572 ;;		_nullifyBadge_platformInit
 24573 ;; This function uses a non-reentrant model
 24574 ;;
 24575                           
 24576                           
 24577                           ;psect for function _PWM2_Initialize
 24578  26F6                     _PWM2_Initialize:	
 24579                           
 24580                           ;pwm2.c: 68: CCP2CON = 0x8F;
 24581                           
 24582                           ;incstack = 0
 24583                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 24584  26F6  308F               	movlw	143
 24585  26F7  0025               	movlb	5	; select bank5
 24586  26F8  0097               	movwf	23	;volatile
 24587                           
 24588                           ;pwm2.c: 71: CCPR2H = 0x00;
 24589  26F9  0196               	clrf	22	;volatile
 24590                           
 24591                           ;pwm2.c: 74: CCPR2L = 0xE0;
 24592  26FA  30E0               	movlw	224
 24593  26FB  0095               	movwf	21	;volatile
 24594                           
 24595                           ;pwm2.c: 77: CCPTMRSbits.C2TSEL = 0x1;
 24596  26FC  081F               	movf	31,w	;volatile
 24597  26FD  39F3               	andlw	-13
 24598  26FE  3804               	iorlw	4
 24599  26FF  009F               	movwf	31	;volatile
 24600  2700  0008               	return
 24601  2701                     __end_of_PWM2_Initialize:	
 24602                           
 24603                           	psect	text85
 24604  26EB                     __ptext85:	
 24605 ;; *************** function _PWM1_Initialize *****************
 24606 ;; Defined at:
 24607 ;;		line 63 in file "mcc_generated_files/pwm1.c"
 24608 ;; Parameters:    Size  Location     Type
 24609 ;;		None
 24610 ;; Auto vars:     Size  Location     Type
 24611 ;;		None
 24612 ;; Return value:  Size  Location     Type
 24613 ;;                  1    wreg      void 
 24614 ;; Registers used:
 24615 ;;		wreg, status,2, status,0
 24616 ;; Tracked objects:
 24617 ;;		On entry : 0/0
 24618 ;;		On exit  : 0/0
 24619 ;;		Unchanged: 0/0
 24620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24625 ;;Total ram usage:        0 bytes
 24626 ;; Hardware stack levels used:    1
 24627 ;; Hardware stack levels required when called:    4
 24628 ;; This function calls:
 24629 ;;		Nothing
 24630 ;; This function is called by:
 24631 ;;		_SYSTEM_Initialize
 24632 ;;		_nullifyBadge_platformInit
 24633 ;; This function uses a non-reentrant model
 24634 ;;
 24635                           
 24636                           
 24637                           ;psect for function _PWM1_Initialize
 24638  26EB                     _PWM1_Initialize:	
 24639                           
 24640                           ;pwm1.c: 68: CCP1CON = 0x8F;
 24641                           
 24642                           ;incstack = 0
 24643                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 24644  26EB  308F               	movlw	143
 24645  26EC  0025               	movlb	5	; select bank5
 24646  26ED  0093               	movwf	19	;volatile
 24647                           
 24648                           ;pwm1.c: 71: CCPR1H = 0x00;
 24649  26EE  0192               	clrf	18	;volatile
 24650                           
 24651                           ;pwm1.c: 74: CCPR1L = 0x95;
 24652  26EF  3095               	movlw	149
 24653  26F0  0091               	movwf	17	;volatile
 24654                           
 24655                           ;pwm1.c: 77: CCPTMRSbits.C1TSEL = 0x1;
 24656  26F1  081F               	movf	31,w	;volatile
 24657  26F2  39FC               	andlw	-4
 24658  26F3  3801               	iorlw	1
 24659  26F4  009F               	movwf	31	;volatile
 24660  26F5  0008               	return
 24661  26F6                     __end_of_PWM1_Initialize:	
 24662                           
 24663                           	psect	text86
 24664  1E42                     __ptext86:	
 24665 ;; *************** function _PIN_MANAGER_Initialize *****************
 24666 ;; Defined at:
 24667 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 24668 ;; Parameters:    Size  Location     Type
 24669 ;;		None
 24670 ;; Auto vars:     Size  Location     Type
 24671 ;;  state           1    1[COMMON] unsigned char 
 24672 ;; Return value:  Size  Location     Type
 24673 ;;                  1    wreg      void 
 24674 ;; Registers used:
 24675 ;;		wreg, status,2, status,0
 24676 ;; Tracked objects:
 24677 ;;		On entry : 0/0
 24678 ;;		On exit  : 0/0
 24679 ;;		Unchanged: 0/0
 24680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24684 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24685 ;;Total ram usage:        1 bytes
 24686 ;; Hardware stack levels used:    1
 24687 ;; Hardware stack levels required when called:    4
 24688 ;; This function calls:
 24689 ;;		Nothing
 24690 ;; This function is called by:
 24691 ;;		_SYSTEM_Initialize
 24692 ;;		_nullifyBadge_platformInit
 24693 ;; This function uses a non-reentrant model
 24694 ;;
 24695                           
 24696                           
 24697                           ;psect for function _PIN_MANAGER_Initialize
 24698  1E42                     _PIN_MANAGER_Initialize:	
 24699                           
 24700                           ;pin_manager.c: 56: LATA = 0x00;
 24701                           
 24702                           ;incstack = 0
 24703                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 24704  1E42  0022               	movlb	2	; select bank2
 24705  1E43  018C               	clrf	12	;volatile
 24706                           
 24707                           ;pin_manager.c: 57: LATB = 0x80;
 24708  1E44  3080               	movlw	128
 24709  1E45  008D               	movwf	13	;volatile
 24710                           
 24711                           ;pin_manager.c: 58: LATC = 0x1A;
 24712  1E46  301A               	movlw	26
 24713  1E47  008E               	movwf	14	;volatile
 24714                           
 24715                           ;pin_manager.c: 63: TRISA = 0x37;
 24716  1E48  3037               	movlw	55
 24717  1E49  0021               	movlb	1	; select bank1
 24718  1E4A  008C               	movwf	12	;volatile
 24719                           
 24720                           ;pin_manager.c: 64: TRISB = 0x30;
 24721  1E4B  3030               	movlw	48
 24722  1E4C  008D               	movwf	13	;volatile
 24723                           
 24724                           ;pin_manager.c: 65: TRISC = 0x60;
 24725  1E4D  3060               	movlw	96
 24726  1E4E  008E               	movwf	14	;volatile
 24727                           
 24728                           ;pin_manager.c: 70: ANSELC = 0x40;
 24729  1E4F  3040               	movlw	64
 24730  1E50  0023               	movlb	3	; select bank3
 24731  1E51  008E               	movwf	14	;volatile
 24732                           
 24733                           ;pin_manager.c: 71: ANSELB = 0x00;
 24734  1E52  018D               	clrf	13	;volatile
 24735                           
 24736                           ;pin_manager.c: 72: ANSELA = 0x03;
 24737  1E53  3003               	movlw	3
 24738  1E54  008C               	movwf	12	;volatile
 24739                           
 24740                           ;pin_manager.c: 77: WPUB = 0x00;
 24741  1E55  0024               	movlb	4	; select bank4
 24742  1E56  018D               	clrf	13	;volatile
 24743                           
 24744                           ;pin_manager.c: 78: WPUA = 0x00;
 24745  1E57  018C               	clrf	12	;volatile
 24746                           
 24747                           ;pin_manager.c: 79: WPUC = 0x00;
 24748  1E58  018E               	clrf	14	;volatile
 24749                           
 24750                           ;pin_manager.c: 84: ODCONA = 0x00;
 24751  1E59  0025               	movlb	5	; select bank5
 24752  1E5A  018C               	clrf	12	;volatile
 24753                           
 24754                           ;pin_manager.c: 85: ODCONB = 0x00;
 24755  1E5B  018D               	clrf	13	;volatile
 24756                           
 24757                           ;pin_manager.c: 86: ODCONC = 0x00;
 24758  1E5C  018E               	clrf	14	;volatile
 24759                           
 24760                           ;pin_manager.c: 93: bool state = GIE;
 24761  1E5D  3000               	movlw	0
 24762  1E5E  1B8B               	btfsc	11,7	;volatile
 24763  1E5F  3001               	movlw	1
 24764  1E60  00F1               	movwf	PIN_MANAGER_Initialize@state
 24765                           
 24766                           ;pin_manager.c: 94: GIE = 0;
 24767  1E61  138B               	bcf	11,7	;volatile
 24768                           
 24769                           ;pin_manager.c: 95: PPSLOCK = 0x55;
 24770  1E62  3055               	movlw	85
 24771  1E63  003C               	movlb	28	; select bank28
 24772  1E64  008F               	movwf	15	;volatile
 24773                           
 24774                           ;pin_manager.c: 96: PPSLOCK = 0xAA;
 24775  1E65  30AA               	movlw	170
 24776  1E66  008F               	movwf	15	;volatile
 24777                           
 24778                           ;pin_manager.c: 97: PPSLOCKbits.PPSLOCKED = 0x00;
 24779  1E67  100F               	bcf	15,0	;volatile
 24780                           
 24781                           ;pin_manager.c: 99: RC1PPSbits.RC1PPS = 0x0D;
 24782  1E68  003D               	movlb	29	; select bank29
 24783  1E69  0821               	movf	33,w	;volatile
 24784  1E6A  39E0               	andlw	-32
 24785  1E6B  380D               	iorlw	13
 24786  1E6C  00A1               	movwf	33	;volatile
 24787                           
 24788                           ;pin_manager.c: 100: SSP1DATPPSbits.SSP1DATPPS = 0x0C;
 24789  1E6D  003C               	movlb	28	; select bank28
 24790  1E6E  0821               	movf	33,w	;volatile
 24791  1E6F  39E0               	andlw	-32
 24792  1E70  380C               	iorlw	12
 24793  1E71  00A1               	movwf	33	;volatile
 24794                           
 24795                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 24796  1E72  0820               	movf	32,w	;volatile
 24797  1E73  39E0               	andlw	-32
 24798  1E74  380E               	iorlw	14
 24799  1E75  00A0               	movwf	32	;volatile
 24800                           
 24801                           ;pin_manager.c: 102: RC4PPSbits.RC4PPS = 0x02;
 24802  1E76  003D               	movlb	29	; select bank29
 24803  1E77  0824               	movf	36,w	;volatile
 24804  1E78  39E0               	andlw	-32
 24805  1E79  3802               	iorlw	2
 24806  1E7A  00A4               	movwf	36	;volatile
 24807                           
 24808                           ;pin_manager.c: 103: RC0PPSbits.RC0PPS = 0x0C;
 24809  1E7B  0820               	movf	32,w	;volatile
 24810  1E7C  39E0               	andlw	-32
 24811  1E7D  380C               	iorlw	12
 24812  1E7E  00A0               	movwf	32	;volatile
 24813                           
 24814                           ;pin_manager.c: 104: RC3PPSbits.RC3PPS = 0x03;
 24815  1E7F  0823               	movf	35,w	;volatile
 24816  1E80  39E0               	andlw	-32
 24817  1E81  3803               	iorlw	3
 24818  1E82  00A3               	movwf	35	;volatile
 24819                           
 24820                           ;pin_manager.c: 105: RB6PPSbits.RB6PPS = 0x18;
 24821  1E83  081E               	movf	30,w	;volatile
 24822  1E84  39E0               	andlw	-32
 24823  1E85  3818               	iorlw	24
 24824  1E86  009E               	movwf	30	;volatile
 24825                           
 24826                           ;pin_manager.c: 106: RC2PPSbits.RC2PPS = 0x19;
 24827  1E87  0822               	movf	34,w	;volatile
 24828  1E88  39E0               	andlw	-32
 24829  1E89  3819               	iorlw	25
 24830  1E8A  00A2               	movwf	34	;volatile
 24831                           
 24832                           ;pin_manager.c: 108: PPSLOCK = 0x55;
 24833  1E8B  3055               	movlw	85
 24834  1E8C  003C               	movlb	28	; select bank28
 24835  1E8D  008F               	movwf	15	;volatile
 24836                           
 24837                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
 24838  1E8E  30AA               	movlw	170
 24839  1E8F  008F               	movwf	15	;volatile
 24840                           
 24841                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x01;
 24842  1E90  140F               	bsf	15,0	;volatile
 24843                           
 24844                           ;pin_manager.c: 112: GIE = state;
 24845  1E91  1C71               	btfss	PIN_MANAGER_Initialize@state,0
 24846  1E92  2E95               	goto	u3890
 24847  1E93  178B               	bsf	11,7	;volatile
 24848  1E94  0008               	return
 24849  1E95                     u3890:	
 24850  1E95  138B               	bcf	11,7	;volatile
 24851  1E96  0008               	return
 24852  1E97                     __end_of_PIN_MANAGER_Initialize:	
 24853                           
 24854                           	psect	text87
 24855  26B8                     __ptext87:	
 24856 ;; *************** function _OSCILLATOR_Initialize *****************
 24857 ;; Defined at:
 24858 ;;		line 92 in file "mcc_generated_files/mcc.c"
 24859 ;; Parameters:    Size  Location     Type
 24860 ;;		None
 24861 ;; Auto vars:     Size  Location     Type
 24862 ;;		None
 24863 ;; Return value:  Size  Location     Type
 24864 ;;                  1    wreg      void 
 24865 ;; Registers used:
 24866 ;;		wreg, status,2
 24867 ;; Tracked objects:
 24868 ;;		On entry : 0/0
 24869 ;;		On exit  : 0/0
 24870 ;;		Unchanged: 0/0
 24871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24876 ;;Total ram usage:        0 bytes
 24877 ;; Hardware stack levels used:    1
 24878 ;; Hardware stack levels required when called:    4
 24879 ;; This function calls:
 24880 ;;		Nothing
 24881 ;; This function is called by:
 24882 ;;		_SYSTEM_Initialize
 24883 ;;		_nullifyBadge_platformInit
 24884 ;; This function uses a non-reentrant model
 24885 ;;
 24886                           
 24887                           
 24888                           ;psect for function _OSCILLATOR_Initialize
 24889  26B8                     _OSCILLATOR_Initialize:	
 24890                           
 24891                           ;mcc.c: 95: OSCCON1 = 0x00;
 24892                           
 24893                           ;incstack = 0
 24894                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 24895  26B8  0032               	movlb	18	; select bank18
 24896  26B9  0199               	clrf	25	;volatile
 24897                           
 24898                           ;mcc.c: 97: OSCCON3 = 0x00;
 24899  26BA  019B               	clrf	27	;volatile
 24900                           
 24901                           ;mcc.c: 99: OSCEN = 0x00;
 24902  26BB  019D               	clrf	29	;volatile
 24903                           
 24904                           ;mcc.c: 101: OSCFRQ = 0x06;
 24905  26BC  3006               	movlw	6
 24906  26BD  009F               	movwf	31	;volatile
 24907                           
 24908                           ;mcc.c: 103: OSCTUNE = 0x00;
 24909  26BE  019E               	clrf	30	;volatile
 24910  26BF                     l208:	
 24911                           ;mcc.c: 106: {
 24912                           
 24913                           ;mcc.c: 105: while(PLLR == 0)
 24914                           
 24915  26BF  181C               	btfsc	28,0	;volatile
 24916  26C0  0008               	return
 24917  26C1  2EBF               	goto	l208
 24918  26C2                     __end_of_OSCILLATOR_Initialize:	
 24919                           
 24920                           	psect	text88
 24921  0802                     __ptext88:	
 24922 ;; *************** function _PWM6_LoadDutyValue *****************
 24923 ;; Defined at:
 24924 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 24925 ;; Parameters:    Size  Location     Type
 24926 ;;  dutyValue       2    1[COMMON] unsigned int 
 24927 ;; Auto vars:     Size  Location     Type
 24928 ;;		None
 24929 ;; Return value:  Size  Location     Type
 24930 ;;                  1    wreg      void 
 24931 ;; Registers used:
 24932 ;;		wreg, status,2, status,0
 24933 ;; Tracked objects:
 24934 ;;		On entry : 0/0
 24935 ;;		On exit  : 0/0
 24936 ;;		Unchanged: 0/0
 24937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24941 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24942 ;;Total ram usage:        4 bytes
 24943 ;; Hardware stack levels used:    1
 24944 ;; Hardware stack levels required when called:    4
 24945 ;; This function calls:
 24946 ;;		Nothing
 24947 ;; This function is called by:
 24948 ;;		_nullifyBadge_platformInit
 24949 ;;		_nullifyBadge_userLedsSetBrightness
 24950 ;; This function uses a non-reentrant model
 24951 ;;
 24952                           
 24953                           
 24954                           ;psect for function _PWM6_LoadDutyValue
 24955  0802                     _PWM6_LoadDutyValue:	
 24956                           
 24957                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 24958                           
 24959                           ;incstack = 0
 24960                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 24961  0802  0872               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 24962  0803  00F4               	movwf	??_PWM6_LoadDutyValue+1
 24963  0804  0871               	movf	PWM6_LoadDutyValue@dutyValue,w
 24964  0805  00F3               	movwf	??_PWM6_LoadDutyValue
 24965  0806  36F4               	lsrf	??_PWM6_LoadDutyValue+1,f
 24966  0807  0CF3               	rrf	??_PWM6_LoadDutyValue,f
 24967  0808  36F4               	lsrf	??_PWM6_LoadDutyValue+1,f
 24968  0809  0CF3               	rrf	??_PWM6_LoadDutyValue,f
 24969  080A  0873               	movf	??_PWM6_LoadDutyValue,w
 24970  080B  002C               	movlb	12	; select bank12
 24971  080C  009B               	movwf	27	;volatile
 24972                           
 24973                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 24974  080D  0871               	movf	PWM6_LoadDutyValue@dutyValue,w
 24975  080E  3903               	andlw	3
 24976  080F  00F3               	movwf	??_PWM6_LoadDutyValue
 24977  0810  3005               	movlw	5
 24978  0811                     u4455:	
 24979  0811  35F3               	lslf	??_PWM6_LoadDutyValue,f
 24980  0812  3EFF               	addlw	-1
 24981  0813  1D03               	skipz
 24982  0814  2811               	goto	u4455
 24983  0815  3573               	lslf	??_PWM6_LoadDutyValue,w
 24984  0816  009A               	movwf	26	;volatile
 24985  0817  0008               	return
 24986  0818                     __end_of_PWM6_LoadDutyValue:	
 24987                           
 24988                           	psect	text89
 24989  183E                     __ptext89:	
 24990 ;; *************** function _PWM5_LoadDutyValue *****************
 24991 ;; Defined at:
 24992 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 24993 ;; Parameters:    Size  Location     Type
 24994 ;;  dutyValue       2    1[COMMON] unsigned int 
 24995 ;; Auto vars:     Size  Location     Type
 24996 ;;		None
 24997 ;; Return value:  Size  Location     Type
 24998 ;;                  1    wreg      void 
 24999 ;; Registers used:
 25000 ;;		wreg, status,2, status,0
 25001 ;; Tracked objects:
 25002 ;;		On entry : 0/0
 25003 ;;		On exit  : 0/0
 25004 ;;		Unchanged: 0/0
 25005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25010 ;;Total ram usage:        4 bytes
 25011 ;; Hardware stack levels used:    1
 25012 ;; Hardware stack levels required when called:    4
 25013 ;; This function calls:
 25014 ;;		Nothing
 25015 ;; This function is called by:
 25016 ;;		_nullifyBadge_platformInit
 25017 ;;		_fadeDisplay_Init
 25018 ;;		_nullifyBadge_segDisplaySetBrightness
 25019 ;; This function uses a non-reentrant model
 25020 ;;
 25021                           
 25022                           
 25023                           ;psect for function _PWM5_LoadDutyValue
 25024  183E                     _PWM5_LoadDutyValue:	
 25025                           
 25026                           ;pwm5.c: 77: PWM5DCH = (dutyValue & 0x03FC)>>2;
 25027                           
 25028                           ;incstack = 0
 25029                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 25030  183E  0872               	movf	PWM5_LoadDutyValue@dutyValue+1,w
 25031  183F  00F4               	movwf	??_PWM5_LoadDutyValue+1
 25032  1840  0871               	movf	PWM5_LoadDutyValue@dutyValue,w
 25033  1841  00F3               	movwf	??_PWM5_LoadDutyValue
 25034  1842  36F4               	lsrf	??_PWM5_LoadDutyValue+1,f
 25035  1843  0CF3               	rrf	??_PWM5_LoadDutyValue,f
 25036  1844  36F4               	lsrf	??_PWM5_LoadDutyValue+1,f
 25037  1845  0CF3               	rrf	??_PWM5_LoadDutyValue,f
 25038  1846  0873               	movf	??_PWM5_LoadDutyValue,w
 25039  1847  002C               	movlb	12	; select bank12
 25040  1848  0098               	movwf	24	;volatile
 25041                           
 25042                           ;pwm5.c: 80: PWM5DCL = (dutyValue & 0x0003)<<6;
 25043  1849  0871               	movf	PWM5_LoadDutyValue@dutyValue,w
 25044  184A  3903               	andlw	3
 25045  184B  00F3               	movwf	??_PWM5_LoadDutyValue
 25046  184C  3005               	movlw	5
 25047  184D                     u4445:	
 25048  184D  35F3               	lslf	??_PWM5_LoadDutyValue,f
 25049  184E  3EFF               	addlw	-1
 25050  184F  1D03               	skipz
 25051  1850  284D               	goto	u4445
 25052  1851  3573               	lslf	??_PWM5_LoadDutyValue,w
 25053  1852  0097               	movwf	23	;volatile
 25054  1853  0008               	return
 25055  1854                     __end_of_PWM5_LoadDutyValue:	
 25056                           
 25057                           	psect	text90
 25058  1828                     __ptext90:	
 25059 ;; *************** function _PWM2_LoadDutyValue *****************
 25060 ;; Defined at:
 25061 ;;		line 80 in file "mcc_generated_files/pwm2.c"
 25062 ;; Parameters:    Size  Location     Type
 25063 ;;  dutyValue       2    1[COMMON] unsigned int 
 25064 ;; Auto vars:     Size  Location     Type
 25065 ;;		None
 25066 ;; Return value:  Size  Location     Type
 25067 ;;                  1    wreg      void 
 25068 ;; Registers used:
 25069 ;;		wreg, status,2
 25070 ;; Tracked objects:
 25071 ;;		On entry : 0/0
 25072 ;;		On exit  : 0/0
 25073 ;;		Unchanged: 0/0
 25074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25079 ;;Total ram usage:        2 bytes
 25080 ;; Hardware stack levels used:    1
 25081 ;; Hardware stack levels required when called:    4
 25082 ;; This function calls:
 25083 ;;		Nothing
 25084 ;; This function is called by:
 25085 ;;		_nullifyBadge_platformInit
 25086 ;; This function uses a non-reentrant model
 25087 ;;
 25088                           
 25089                           
 25090                           ;psect for function _PWM2_LoadDutyValue
 25091  1828                     _PWM2_LoadDutyValue:	
 25092                           
 25093                           ;pwm2.c: 82: dutyValue &= 0x03FF;
 25094                           
 25095                           ;incstack = 0
 25096                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 25097  1828  30FF               	movlw	255
 25098  1829  05F1               	andwf	PWM2_LoadDutyValue@dutyValue,f
 25099  182A  3003               	movlw	3
 25100  182B  05F2               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 25101                           
 25102                           ;pwm2.c: 85: if(CCP2CONbits.CCP2FMT)
 25103  182C  0025               	movlb	5	; select bank5
 25104  182D  1E17               	btfss	23,4	;volatile
 25105  182E  2839               	goto	l7633
 25106                           
 25107                           ;pwm2.c: 86: {
 25108                           ;pwm2.c: 87: dutyValue <<= 6;
 25109  182F  3006               	movlw	6
 25110  1830                     u4495:	
 25111  1830  35F1               	lslf	PWM2_LoadDutyValue@dutyValue,f
 25112  1831  0DF2               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 25113  1832  0B89               	decfsz	9,f
 25114  1833  2830               	goto	u4495
 25115                           
 25116                           ;pwm2.c: 88: CCPR2H = dutyValue >> 8;
 25117  1834  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 25118  1835  0096               	movwf	22	;volatile
 25119                           
 25120                           ;pwm2.c: 89: CCPR2L = dutyValue;
 25121  1836  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
 25122  1837  0095               	movwf	21	;volatile
 25123                           
 25124                           ;pwm2.c: 90: }
 25125  1838  0008               	return
 25126  1839                     l7633:	
 25127                           
 25128                           ;pwm2.c: 91: else
 25129                           ;pwm2.c: 92: {
 25130                           ;pwm2.c: 93: CCPR2H = dutyValue >> 8;
 25131  1839  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 25132  183A  0096               	movwf	22	;volatile
 25133                           
 25134                           ;pwm2.c: 94: CCPR2L = dutyValue;
 25135  183B  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
 25136  183C  0095               	movwf	21	;volatile
 25137  183D  0008               	return
 25138  183E                     __end_of_PWM2_LoadDutyValue:	
 25139                           
 25140                           	psect	text91
 25141  1812                     __ptext91:	
 25142 ;; *************** function _PWM1_LoadDutyValue *****************
 25143 ;; Defined at:
 25144 ;;		line 80 in file "mcc_generated_files/pwm1.c"
 25145 ;; Parameters:    Size  Location     Type
 25146 ;;  dutyValue       2    1[COMMON] unsigned int 
 25147 ;; Auto vars:     Size  Location     Type
 25148 ;;		None
 25149 ;; Return value:  Size  Location     Type
 25150 ;;                  1    wreg      void 
 25151 ;; Registers used:
 25152 ;;		wreg, status,2
 25153 ;; Tracked objects:
 25154 ;;		On entry : 0/0
 25155 ;;		On exit  : 0/0
 25156 ;;		Unchanged: 0/0
 25157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25162 ;;Total ram usage:        2 bytes
 25163 ;; Hardware stack levels used:    1
 25164 ;; Hardware stack levels required when called:    4
 25165 ;; This function calls:
 25166 ;;		Nothing
 25167 ;; This function is called by:
 25168 ;;		_nullifyBadge_platformInit
 25169 ;; This function uses a non-reentrant model
 25170 ;;
 25171                           
 25172                           
 25173                           ;psect for function _PWM1_LoadDutyValue
 25174  1812                     _PWM1_LoadDutyValue:	
 25175                           
 25176                           ;pwm1.c: 82: dutyValue &= 0x03FF;
 25177                           
 25178                           ;incstack = 0
 25179                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 25180  1812  30FF               	movlw	255
 25181  1813  05F1               	andwf	PWM1_LoadDutyValue@dutyValue,f
 25182  1814  3003               	movlw	3
 25183  1815  05F2               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 25184                           
 25185                           ;pwm1.c: 85: if(CCP1CONbits.CCP1FMT)
 25186  1816  0025               	movlb	5	; select bank5
 25187  1817  1E13               	btfss	19,4	;volatile
 25188  1818  2823               	goto	l7617
 25189                           
 25190                           ;pwm1.c: 86: {
 25191                           ;pwm1.c: 87: dutyValue <<= 6;
 25192  1819  3006               	movlw	6
 25193  181A                     u4475:	
 25194  181A  35F1               	lslf	PWM1_LoadDutyValue@dutyValue,f
 25195  181B  0DF2               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 25196  181C  0B89               	decfsz	9,f
 25197  181D  281A               	goto	u4475
 25198                           
 25199                           ;pwm1.c: 88: CCPR1H = dutyValue >> 8;
 25200  181E  0872               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 25201  181F  0092               	movwf	18	;volatile
 25202                           
 25203                           ;pwm1.c: 89: CCPR1L = dutyValue;
 25204  1820  0871               	movf	PWM1_LoadDutyValue@dutyValue,w
 25205  1821  0091               	movwf	17	;volatile
 25206                           
 25207                           ;pwm1.c: 90: }
 25208  1822  0008               	return
 25209  1823                     l7617:	
 25210                           
 25211                           ;pwm1.c: 91: else
 25212                           ;pwm1.c: 92: {
 25213                           ;pwm1.c: 93: CCPR1H = dutyValue >> 8;
 25214  1823  0872               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 25215  1824  0092               	movwf	18	;volatile
 25216                           
 25217                           ;pwm1.c: 94: CCPR1L = dutyValue;
 25218  1825  0871               	movf	PWM1_LoadDutyValue@dutyValue,w
 25219  1826  0091               	movwf	17	;volatile
 25220  1827  0008               	return
 25221  1828                     __end_of_PWM1_LoadDutyValue:	
 25222                           
 25223                           	psect	intentry
 25224  0004                     __pintentry:	
 25225 ;; *************** function _INTERRUPT_InterruptManager *****************
 25226 ;; Defined at:
 25227 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 25228 ;; Parameters:    Size  Location     Type
 25229 ;;		None
 25230 ;; Auto vars:     Size  Location     Type
 25231 ;;		None
 25232 ;; Return value:  Size  Location     Type
 25233 ;;                  1    wreg      void 
 25234 ;; Registers used:
 25235 ;;		wreg, status,2, status,0, pclath, cstack
 25236 ;; Tracked objects:
 25237 ;;		On entry : 0/0
 25238 ;;		On exit  : 0/0
 25239 ;;		Unchanged: 0/0
 25240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25245 ;;Total ram usage:        1 bytes
 25246 ;; Hardware stack levels used:    1
 25247 ;; Hardware stack levels required when called:    3
 25248 ;; This function calls:
 25249 ;;		_TMR0_ISR
 25250 ;; This function is called by:
 25251 ;;		Interrupt level 1
 25252 ;; This function uses a non-reentrant model
 25253 ;;
 25254                           
 25255  0004                     _INTERRUPT_InterruptManager:	
 25256                           
 25257                           ;incstack = 0
 25258  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 25259                           
 25260                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 25261  0005  3180               	pagesel	$
 25262  0006  0020               	movlb	0	; select bank0
 25263  0007  087F               	movf	127,w
 25264  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
 25265                           
 25266                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 25267  0009  0021               	movlb	1	; select bank1
 25268  000A  1E90               	btfss	16,5	;volatile
 25269  000B  2811               	goto	i1l363
 25270  000C  0020               	movlb	0	; select bank0
 25271  000D  1E90               	btfss	16,5	;volatile
 25272  000E  2811               	goto	i1l363
 25273                           
 25274                           ;interrupt_manager.c: 55: {
 25275                           ;interrupt_manager.c: 56: TMR0_ISR();
 25276  000F  31A7  2747         	fcall	_TMR0_ISR
 25277  0011                     i1l363:	
 25278                           ;interrupt_manager.c: 58: else
 25279                           ;interrupt_manager.c: 59: {
 25280                           
 25281                           ;interrupt_manager.c: 57: }
 25282                           
 25283  0011  0870               	movf	??_INTERRUPT_InterruptManager,w
 25284  0012  0020               	movlb	0	; select bank0
 25285  0013  00FF               	movwf	127
 25286  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 25287  0015  0009               	retfie
 25288  0016                     __end_of_INTERRUPT_InterruptManager:	
 25289                           
 25290                           	psect	text93
 25291  2747                     __ptext93:	
 25292 ;; *************** function _TMR0_ISR *****************
 25293 ;; Defined at:
 25294 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 25295 ;; Parameters:    Size  Location     Type
 25296 ;;		None
 25297 ;; Auto vars:     Size  Location     Type
 25298 ;;		None
 25299 ;; Return value:  Size  Location     Type
 25300 ;;                  1    wreg      void 
 25301 ;; Registers used:
 25302 ;;		wreg, status,2, status,0, pclath, cstack
 25303 ;; Tracked objects:
 25304 ;;		On entry : 0/0
 25305 ;;		On exit  : 0/0
 25306 ;;		Unchanged: 0/0
 25307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25312 ;;Total ram usage:        0 bytes
 25313 ;; Hardware stack levels used:    1
 25314 ;; Hardware stack levels required when called:    2
 25315 ;; This function calls:
 25316 ;;		_TMR0_CallBack
 25317 ;; This function is called by:
 25318 ;;		_INTERRUPT_InterruptManager
 25319 ;; This function uses a non-reentrant model
 25320 ;;
 25321                           
 25322                           
 25323                           ;psect for function _TMR0_ISR
 25324  2747                     _TMR0_ISR:	
 25325                           
 25326                           ;tmr0.c: 139: PIR0bits.TMR0IF = 0;
 25327                           
 25328                           ;incstack = 0
 25329                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 25330  2747  0020               	movlb	0	; select bank0
 25331  2748  1290               	bcf	16,5	;volatile
 25332                           
 25333                           ;tmr0.c: 141: TMR0H = timer0ReloadVal16bit >> 8;
 25334  2749  0021               	movlb	1	; select bank1
 25335  274A  0839               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
 25336  274B  0020               	movlb	0	; select bank0
 25337  274C  0096               	movwf	22	;volatile
 25338                           
 25339                           ;tmr0.c: 142: TMR0L = (uint8_t) timer0ReloadVal16bit;
 25340  274D  0021               	movlb	1	; select bank1
 25341  274E  0838               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
 25342  274F  0020               	movlb	0	; select bank0
 25343  2750  0095               	movwf	21	;volatile
 25344                           
 25345                           ;tmr0.c: 146: TMR0_CallBack();
 25346  2751  31A6  26E0         	fcall	_TMR0_CallBack
 25347  2753  0008               	return
 25348  2754                     __end_of_TMR0_ISR:	
 25349                           
 25350                           	psect	text94
 25351  26E0                     __ptext94:	
 25352 ;; *************** function _TMR0_CallBack *****************
 25353 ;; Defined at:
 25354 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 25355 ;; Parameters:    Size  Location     Type
 25356 ;;		None
 25357 ;; Auto vars:     Size  Location     Type
 25358 ;;		None
 25359 ;; Return value:  Size  Location     Type
 25360 ;;                  1    wreg      void 
 25361 ;; Registers used:
 25362 ;;		wreg, status,2, status,0, pclath, cstack
 25363 ;; Tracked objects:
 25364 ;;		On entry : 0/0
 25365 ;;		On exit  : 0/0
 25366 ;;		Unchanged: 0/0
 25367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25372 ;;Total ram usage:        0 bytes
 25373 ;; Hardware stack levels used:    1
 25374 ;; Hardware stack levels required when called:    1
 25375 ;; This function calls:
 25376 ;;		Absolute function
 25377 ;;		_TMR0_DefaultInterruptHandler
 25378 ;; This function is called by:
 25379 ;;		_TMR0_ISR
 25380 ;; This function uses a non-reentrant model
 25381 ;;
 25382                           
 25383                           
 25384                           ;psect for function _TMR0_CallBack
 25385  26E0                     _TMR0_CallBack:	
 25386                           
 25387                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
 25388                           
 25389                           ;incstack = 0
 25390                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 25391  26E0  0021               	movlb	1	; select bank1
 25392  26E1  0836               	movf	_TMR0_InterruptHandler^(0+128),w
 25393  26E2  0437               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 25394  26E3  1903               	btfsc	3,2
 25395  26E4  0008               	return
 25396                           
 25397                           ;tmr0.c: 156: {
 25398                           ;tmr0.c: 157: TMR0_InterruptHandler();
 25399  26E5  0837               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 25400  26E6  008A               	movwf	10
 25401  26E7  0836               	movf	_TMR0_InterruptHandler^(0+128),w
 25402  26E8  000A               	callw
 25403  26E9  31A6               	pagesel	$
 25404  26EA  0008               	return
 25405  26EB                     __end_of_TMR0_CallBack:	
 25406                           
 25407                           	psect	text95
 25408  07FF                     __ptext95:	
 25409 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 25410 ;; Defined at:
 25411 ;;		line 165 in file "mcc_generated_files/tmr0.c"
 25412 ;; Parameters:    Size  Location     Type
 25413 ;;		None
 25414 ;; Auto vars:     Size  Location     Type
 25415 ;;		None
 25416 ;; Return value:  Size  Location     Type
 25417 ;;                  1    wreg      void 
 25418 ;; Registers used:
 25419 ;;		None
 25420 ;; Tracked objects:
 25421 ;;		On entry : 0/0
 25422 ;;		On exit  : 0/0
 25423 ;;		Unchanged: 0/0
 25424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25429 ;;Total ram usage:        0 bytes
 25430 ;; Hardware stack levels used:    1
 25431 ;; This function calls:
 25432 ;;		Nothing
 25433 ;; This function is called by:
 25434 ;;		_TMR0_Initialize
 25435 ;;		_TMR0_CallBack
 25436 ;; This function uses a non-reentrant model
 25437 ;;
 25438                           
 25439                           
 25440                           ;psect for function _TMR0_DefaultInterruptHandler
 25441  07FF                     _TMR0_DefaultInterruptHandler:	
 25442                           
 25443                           ;incstack = 0
 25444                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 25445  07FF  0008               	return
 25446  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 25447  007E                     btemp	set	126	;btemp
 25448  007E                     int$flags	set	126
 25449  007E                     wtemp0	set	126


Data Sizes:
    Strings     125
    Constant    522
    Data        451
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80      1      69
    BANK2            80      0      77
    BANK3            80      0      67
    BANK4            80      0      76
    BANK5            80      0      56
    BANK6            80      0      56
    BANK7            80      0      30
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           16      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    menu_run_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    schedulerInst.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    schedulerInst.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    schedulerInst.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    schedulerInst.tasks.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    schedulerExecute$3535	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    secret_check@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S902$3$0	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S902$2$0	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S902$4$0	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_20(CODE[5]), secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), STR_19(CODE[5]), 
		 -> STR_18(CODE[5]), STR_17(CODE[11]), STR_16(CODE[13]), STR_13(CODE[6]), 
		 -> STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), STR_9(CODE[18]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_20(CODE[5]), secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), STR_19(CODE[5]), 
		 -> STR_18(CODE[5]), STR_17(CODE[11]), STR_16(CODE[13]), STR_13(CODE[6]), 
		 -> STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), STR_9(CODE[18]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    memset@p1	PTR void  size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    memset@p	PTR unsigned char  size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_15(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> flashy_Main@hit_counter(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    slot_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_Main@data	PTR struct t_slot_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_Init@data	PTR struct t_slot_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_clear@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Main@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_check@inputs	PTR unsigned char  size(1) Largest target is 26
		 -> secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), 

    secret_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Init@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S2657secret_input$variable	PTR unsigned int  size(1) Largest target is 2
		 -> secret_value(BANK1[2]), 

    secret_inputs.variable	PTR unsigned int  size(1) Largest target is 2
		 -> secret_value(BANK1[2]), 

    locked_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_clear@data	PTR struct t_locked_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Main@data	PTR struct t_locked_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Init@data	PTR struct t_locked_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Main@data	PTR struct t_flashy_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_display_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_display_option@data	PTR struct t_flashy_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Init@data	PTR struct t_flashy_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_option	PTR unsigned char [4] size(2) Largest target is 9
		 -> STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), 

    FLASHY_TEXT_SECRET_TEST	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_9(CODE[18]), 

    FLASHY_TEXT	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    menu_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_clear@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_run_option@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_display_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_display_option@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Main@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Init@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_option	PTR unsigned char [4] size(2) Largest target is 10
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    displayL2_ClrUserLeds@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_SetUserLeds@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_EraseSegDisplay@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_ForceUpdate@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_PutStr@str	PTR unsigned char  size(2) Largest target is 10
		 -> flashy_Main@hit_counter(BANK0[6]), STR_14(CODE[5]), STR_13(CODE[6]), STR_12(CODE[8]), 
		 -> STR_11(CODE[9]), STR_10(CODE[5]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), STR_3(CODE[5]), marquee@display_string(BANK0[5]), 
		 -> marquee_speedy@display_string(BANK0[5]), 

    displayL2_PutStr@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_PutChar@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_Initialize@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL1_Update@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL1_SetUserLed@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL1_SetSegChar@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    sp__memset	PTR void  size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL1_Initialize@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_irTxRelease@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_irTxRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_userLedsClr@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_userLedsSet@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_userLedsRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_segDisplayErase@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_segDisplayPutStr@str	PTR unsigned char  size(2) Largest target is 10
		 -> flashy_Main@hit_counter(BANK0[6]), STR_14(CODE[5]), STR_13(CODE[6]), STR_12(CODE[8]), 
		 -> STR_11(CODE[9]), STR_10(CODE[5]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), marquee@display_string(BANK0[5]), marquee_speedy@display_string(BANK0[5]), 

    nullifyBadge_segDisplayPutStr@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_segDisplayForceUpdate@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_segDisplayRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_platformInit@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    marquee@string	PTR unsigned char  size(2) Largest target is 18
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[11]), 
		 -> STR_16(CODE[13]), STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), 
		 -> STR_10(CODE[5]), STR_9(CODE[18]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), 

    marquee_speedy@string	PTR unsigned char  size(2) Largest target is 9
		 -> STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), 

    schedulerInst.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    S1165t_secret_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    S1156t_locked_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    S1142t_slot_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    S1133t_menu_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    S1115t_flashy_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    secret_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    secret_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    secret_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    locked_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    locked_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    locked_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    slot_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    slot_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    slot_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    menu_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    menu_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    menu_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    flashy_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    flashy_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    flashy_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    fadeDisplay_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    fadeDisplay_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    S1013t_fadeDisplay_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    fadeDisplay_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    schedulerExecute@scheduler.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    schedulerExecute@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    schedulerExecute@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    scheduler_TaskRemove@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskRemove@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskRemove@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskRemove@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskRemove@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_TaskAdd@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskAdd@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskAdd@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskAdd@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskAdd@scheduler.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskAdd@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), 

    scheduler_TaskAdd@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_TaskAdd@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    scheduler_TaskInit@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskInit@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskInit@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskInit@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskInit@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), 

    S923t_scheduler$tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_Init@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_Init@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    S902t_schedulerTask$taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskRun@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    S902t_schedulerTask$taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskRun@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    S902t_schedulerTask$taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskRun@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    S902t_schedulerTask$taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskRun@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskRun@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    SPI1_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 10
		 -> displayL1_Update@tmpRxBuf(BANK0[10]), 

    SPI1_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 


Critical Paths under _main in COMMON

    _schedulerExecute->_TMR0_Read16bitTimer
    _scheduler_TaskRun->_TMR0_Read16bitTimer
    _secret_check->_strlen
    _nullifyBadge_userLedsClr->_displayL2_ClrUserLeds
    _displayL2_ClrUserLeds->_displayL1_Update
    _sprintf->___lwmod
    _rand->___lmul
    _nullifyBadge_userLedsSet->_displayL2_SetUserLeds
    _displayL2_SetUserLeds->_displayL1_Update
    _displayL1_SetSegChar->_displayCharReverse
    _nullifyBadge_segDisplayForceUpdate->_displayL2_ForceUpdate
    _displayL2_ForceUpdate->_displayL1_Update
    ___lwmod->___lwdiv
    _displayL2_Initialize->_displayL1_Initialize
    _displayL1_Initialize->_displayL1_Update
    _displayL1_Update->_SPI1_Exchange8bitBuffer
    _SPI1_Exchange8bitBuffer->_SPI1_Exchange8bit
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_schedulerExecute
    _scheduler_TaskAdd->_flashy_Init
    _scheduler_TaskAdd->_locked_Init
    _scheduler_TaskAdd->_menu_Init
    _scheduler_TaskAdd->_secret_Init
    _scheduler_TaskAdd->_slot_Init
    _slot_Init->_nullifyBadge_segDisplayErase
    _secret_Init->_nullifyBadge_segDisplayErase
    _menu_Init->_nullifyBadge_segDisplayErase
    _locked_Init->_nullifyBadge_segDisplayErase
    _flashy_Init->_nullifyBadge_segDisplayErase
    _schedulerExecute->_scheduler_TaskRun
    _scheduler_TaskRun->_flashy_Main
    _menu_Main->_menu_display_option
    _menu_run_option->_menu_clear
    _menu_clear->_nullifyBadge_segDisplayErase
    _menu_display_option->_marquee
    _locked_clear->_nullifyBadge_segDisplayErase
    _displayL2_ClrUserLeds->_displayL1_Update
    _nullifyBadge_segDisplayErase->_displayL2_EraseSegDisplay
    _displayL2_EraseSegDisplay->_displayL2_PutStr
    _sprintf->___lwmod
    _led_roundabout->_nullifyBadge_userLedsSet
    _led_rand->_nullifyBadge_userLedsSet
    _rand->___lmul
    _led_curtain->_nullifyBadge_userLedsSet
    _led_circle->_nullifyBadge_userLedsSet
    _nullifyBadge_userLedsSet->_displayL2_SetUserLeds
    _displayL2_SetUserLeds->_displayL1_Update
    _flashy_display_option->_marquee
    _flashy_display_option->_marquee_speedy
    _marquee_speedy->_nullifyBadge_segDisplayPutStr
    _marquee->_nullifyBadge_segDisplayPutStr
    _nullifyBadge_segDisplayPutStr->_displayL2_PutStr
    _displayL2_PutStr->_displayL2_PutChar
    _displayL2_PutChar->_displayL1_SetSegChar
    _displayL2_ForceUpdate->_displayL1_Update
    _nullifyBadge_platformInit->_displayL2_Initialize
    _displayL1_Initialize->_displayL1_Update

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  187482
                                              0 BANK1      1     1      0
          _nullifyBadge_platformInit
                   _schedulerExecute
                     _scheduler_Init
                  _scheduler_TaskAdd
                 _scheduler_TaskInit
 ---------------------------------------------------------------------------------
 (1) _scheduler_TaskInit                                   4     2      2     417
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _scheduler_TaskAdd                                   10     8      2   36288
                                             29 BANK0     10     8      2
                   Absolute function *
                        _flashy_Init *
                        _locked_Init *
                          _menu_Init *
                        _secret_Init *
                          _slot_Init *
 ---------------------------------------------------------------------------------
 (2) _slot_Init                                            4     2      2    6979
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _secret_Init                                          4     2      2    7044
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _menu_Init                                            4     2      2    6979
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _locked_Init                                          4     2      2    7044
                                             25 BANK0      4     2      2
                   _locked_lock_leds
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _flashy_Init                                          4     2      2    7134
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_userLedsRegister                        1     1      0     242
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_segDisplayRegister                      1     1      0     247
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scheduler_Init                                       3     3      0     197
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _schedulerExecute                                    14    14      0  146677
                                             66 BANK0     14    14      0
                _TMR0_Read16bitTimer
                  _scheduler_TaskRun
 ---------------------------------------------------------------------------------
 (2) _scheduler_TaskRun                                    2     0      2  146121
                                             64 BANK0      2     0      2
                   Absolute function *
                _TMR0_Read16bitTimer
                        _flashy_Main *
                        _locked_Main *
                          _menu_Main *
                        _secret_Main *
                          _slot_Main *
 ---------------------------------------------------------------------------------
 (3) _slot_Main                                            6     4      2   10716
                                             50 BANK0      6     4      2
                            _marquee
            _nullifyBadge_buttonsGet
 ---------------------------------------------------------------------------------
 (3) _secret_Main                                          8     6      2    3770
                                             50 BANK0      8     6      2
            _nullifyBadge_buttonsGet
                       _secret_check
                       _secret_clear
 ---------------------------------------------------------------------------------
 (4) _secret_clear                                         2     0      2     286
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _secret_check                                        19    16      3    1771
                                              7 COMMON     3     0      3
                                              0 BANK0     10    10      0
                             ___bmul
                             _strlen
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1      28
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _menu_Main                                            7     5      2   35454
                                             50 BANK0      7     5      2
                         _menu_clear
                _menu_display_option
                    _menu_run_option
            _nullifyBadge_buttonsGet
 ---------------------------------------------------------------------------------
 (4) _menu_run_option                                      2     0      2    6787
                                             27 BANK0      2     0      2
                         _menu_clear
 ---------------------------------------------------------------------------------
 (5) _menu_clear                                           2     0      2    6644
                                             25 BANK0      2     0      2
       _nullifyBadge_segDisplayErase
           _nullifyBadge_userLedsClr
 ---------------------------------------------------------------------------------
 (4) _menu_display_option                                  6     4      2   20511
                                             44 BANK0      6     4      2
                            ___lwmod
                            _marquee
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (3) _locked_Main                                          7     5      2   23275
                                             50 BANK0      7     5      2
                            ___lwmod
                       _locked_clear
               _locked_get_lock_leds
             _locked_get_unlock_leds
                   _locked_lock_leds
                 _locked_unlock_leds
                            _marquee
            _nullifyBadge_buttonsGet
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _locked_unlock_leds                                   2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _locked_lock_leds                                     4     4      0      34
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _locked_get_unlock_leds                               4     2      2      34
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _locked_get_lock_leds                                 8     6      2      68
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _locked_clear                                         2     0      2    6444
                                             25 BANK0      2     0      2
       _nullifyBadge_segDisplayErase
           _nullifyBadge_userLedsClr
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_userLedsClr                             1     1      0    2022
                                             11 BANK0      1     1      0
              _displayL2_ClrUserLeds
 ---------------------------------------------------------------------------------
 (4) _displayL2_ClrUserLeds                                1     1      0    1559
                                             11 COMMON     1     1      0
               _displayL1_SetUserLed
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_segDisplayErase                         1     1      0    4124
                                             24 BANK0      1     1      0
          _displayL2_EraseSegDisplay
 ---------------------------------------------------------------------------------
 (4) _displayL2_EraseSegDisplay                            1     1      0    3589
                                             23 BANK0      1     1      0
                   _displayL1_Update
                   _displayL2_PutStr
 ---------------------------------------------------------------------------------
 (3) _flashy_Main                                         14    12      2   72671
                                             50 BANK0     14    12      2
              _flashy_display_option
                         _led_circle
                        _led_curtain
                           _led_rand
                     _led_roundabout
                            _marquee
            _nullifyBadge_buttonsGet
                 _nullifyBadge_irGet
               _nullifyBadge_irTxClr
          _nullifyBadge_irTxRegister
           _nullifyBadge_irTxRelease
               _nullifyBadge_irTxSet
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
           _nullifyBadge_userLedsSet
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             25    21      4    7725
                                              4 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      99
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3012
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxSet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxRelease                             2     2      0      67
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxRegister                            1     1      0      98
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxClr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irGet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_buttonsGet                              3     3      0      46
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _led_roundabout                                       8     6      2    5464
                                             16 BANK0      8     6      2
                            ___lwmod
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_rand                                             2     2      0    3165
                                             16 BANK0      2     2      0
           _nullifyBadge_userLedsSet
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 7     5      2     316
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _led_curtain                                          8     6      2    5464
                                             16 BANK0      8     6      2
                            ___lwmod
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_circle                                           2     0      2    2936
                                             16 BANK0      2     0      2
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_userLedsSet                             3     1      2    2815
                                             13 BANK0      3     1      2
              _displayL2_SetUserLeds
 ---------------------------------------------------------------------------------
 (6) _displayL2_SetUserLeds                                3     1      2    1868
                                             11 COMMON     1     1      0
                                             11 BANK0      2     0      2
               _displayL1_SetUserLed
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (5) _displayL1_SetUserLed                                 4     2      2     376
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _flashy_display_option                                2     0      2   24233
                                             44 BANK0      2     0      2
                            _marquee
                     _marquee_speedy
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
 ---------------------------------------------------------------------------------
 (5) _marquee_speedy                                      18    12      6    9116
                                             26 BANK0     18    12      6
                            ___lwdiv
                            ___lwmod
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _marquee                                             18    14      4   10289
                                             26 BANK0     18    14      4
                            ___lwdiv
                            ___lwmod
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     400
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_segDisplayPutStr                        3     1      2    3224
                                             23 BANK0      3     1      2
                   _displayL2_PutStr
 ---------------------------------------------------------------------------------
 (5) _displayL2_PutStr                                     7     5      2    2406
                                             16 BANK0      7     5      2
                  _displayL2_PutChar
 ---------------------------------------------------------------------------------
 (6) _displayL2_PutChar                                    6     5      1    1993
                                             10 BANK0      6     5      1
               _displayL1_SetSegChar
 ---------------------------------------------------------------------------------
 (7) _displayL1_SetSegChar                                10     8      2    1298
                                              0 BANK0     10     8      2
                 _displayCharReverse
 ---------------------------------------------------------------------------------
 (8) _displayCharReverse                                  11     9      2     331
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_segDisplayForceUpdate                   1     1      0    1399
                                             11 BANK0      1     1      0
              _displayL2_ForceUpdate
 ---------------------------------------------------------------------------------
 (6) _displayL2_ForceUpdate                                1     1      0    1152
                                             11 COMMON     1     1      0
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4    2392
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4    1001
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _TMR0_Read16bitTimer                                 11     9      2     102
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _nullifyBadge_platformInit                            1     1      0    3903
                                             12 BANK0      1     1      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                 _PWM1_LoadDutyValue
                    _PWM2_Initialize
                 _PWM2_LoadDutyValue
                    _PWM5_Initialize
                 _PWM5_LoadDutyValue
                    _PWM6_Initialize
                 _PWM6_LoadDutyValue
                    _SPI1_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
               _displayL2_Initialize
 ---------------------------------------------------------------------------------
 (2) _displayL2_Initialize                                 1     1      0    2481
                                             11 BANK0      1     1      0
               _displayL1_Initialize
                             _memset
 ---------------------------------------------------------------------------------
 (3) _displayL1_Initialize                                 1     1      0    1752
                                             11 COMMON     1     1      0
                   _displayL1_Update
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     569
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _displayL1_Update                                    13    13      0    1085
                                              9 COMMON     2     2      0
                                              0 BANK0     11    11      0
            _SPI1_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (6) _SPI1_Exchange8bitBuffer                              7     5      2     759
                                              2 COMMON     7     5      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI1_Exchange8bit                                    1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     155
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               1     1      0      34
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     332
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2     220
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     220
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nullifyBadge_platformInit
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM1_LoadDutyValue
     _PWM2_Initialize
     _PWM2_LoadDutyValue
     _PWM5_Initialize
     _PWM5_LoadDutyValue
     _PWM6_Initialize
     _PWM6_LoadDutyValue
     _SPI1_Initialize
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PWM1_Initialize
       _PWM2_Initialize
       _PWM5_Initialize
       _PWM6_Initialize
       _SPI1_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
         _TMR0_StartTimer
       _TMR2_Initialize
         _TMR2_StartTimer
       _TMR4_Initialize
         _TMR4_StartTimer
       _WDT_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer
     _displayL2_Initialize
       _displayL1_Initialize
         _displayL1_Update
           _SPI1_Exchange8bitBuffer
             _SPI1_Exchange8bit
         _memset
       _memset
   _schedulerExecute
     _TMR0_Read16bitTimer
     _scheduler_TaskRun
       Absolute function(Fake) *
       _TMR0_Read16bitTimer *
       _flashy_Main *
         _flashy_display_option
           _marquee
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _marquee_speedy
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
         _led_circle
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _led_curtain
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _led_rand
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _rand
             ___lmul
         _led_roundabout
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
         _nullifyBadge_irGet
         _nullifyBadge_irTxClr
         _nullifyBadge_irTxRegister
         _nullifyBadge_irTxRelease
         _nullifyBadge_irTxSet
         _nullifyBadge_segDisplayForceUpdate
           _displayL2_ForceUpdate
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
         _nullifyBadge_segDisplayPutStr
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
         _nullifyBadge_userLedsSet
           _displayL2_SetUserLeds
             _displayL1_SetUserLed
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _locked_Main *
         ___lwmod
           ___lwdiv (ARG)
         _locked_clear
           _nullifyBadge_segDisplayErase
             _displayL2_EraseSegDisplay
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
           _nullifyBadge_userLedsClr
             _displayL2_ClrUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _locked_get_lock_leds
         _locked_get_unlock_leds
         _locked_lock_leds
         _locked_unlock_leds
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
         _nullifyBadge_userLedsSet
           _displayL2_SetUserLeds
             _displayL1_SetUserLed
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
       _menu_Main *
         _menu_clear
           _nullifyBadge_segDisplayErase
             _displayL2_EraseSegDisplay
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
           _nullifyBadge_userLedsClr
             _displayL2_ClrUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _menu_display_option
           ___lwmod
             ___lwdiv (ARG)
           _marquee
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _menu_run_option
           _menu_clear
             _nullifyBadge_segDisplayErase
               _displayL2_EraseSegDisplay
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
                 _displayL2_PutStr
                   _displayL2_PutChar
                     _displayL1_SetSegChar
                       _displayCharReverse
             _nullifyBadge_userLedsClr
               _displayL2_ClrUserLeds
                 _displayL1_SetUserLed
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
         _nullifyBadge_buttonsGet
       _secret_Main *
         _nullifyBadge_buttonsGet
         _secret_check
           ___bmul
           _strlen
         _secret_clear
       _slot_Main *
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
   _scheduler_Init
   _scheduler_TaskAdd
     Absolute function(Fake) *
     _flashy_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _locked_Init *
       _locked_lock_leds
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _menu_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _secret_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _slot_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
   _scheduler_TaskInit

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      1      45       7       86.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4D       9       96.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     20C      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      38      16       70.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      38      18       70.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      1E      20       37.5%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     20C      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              10      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Jul 23 15:32:22 2017

                          _SPI1_Exchange8bit 26A6                               ___bmul@product 0073  
                 __end_of_gamma_table_256x1k 1200                           ?_SPI1_Exchange8bit 0070  
                                __CFG_CP$OFF 0000                                           l18 26AB  
                      _displayL2_ClrUserLeds 276F                          ___wmul@multiplicand 0073  
                   marquee_speedy@multiplier 003E                                 ?_led_curtain 0030  
              nullifyBadge_buttonsGet@retVal 0073                  __size_of_PWM6_LoadDutyValue 0016  
                                __CFG_LVP$ON 0000                   ??_nullifyBadge_userLedsClr 007C  
                 ??_nullifyBadge_userLedsSet 007C                                          l208 26BF  
                                        l971 1C1C                                          _GIE 005F  
            ??_nullifyBadge_segDisplayPutStr 007C                                          _PR2 001E  
                                        _PR4 0416                                 __CFG_CPD$OFF 0000  
                             _scheduler_Init 18DB                          ??_SPI1_Exchange8bit 0071  
                         _locked_unlock_leds 27ED                  marquee_speedy@string_length 0048  
                            _TMR2_Initialize 26C2               SPI1_Exchange8bitBuffer@dataOut 0073  
                   displayL1_Update@tmpRxBuf 0020                                          wreg 0009  
               marquee_speedy@display_string 0041                  displayL1_Initialize@display 007B  
        nullifyBadge_userLedsSet@userLedData 002D                              led_curtain@leds 0034  
                    secret_Main@secret_found 0056                              led_curtain@size 0036  
                       _displayL1_Initialize 279B                                         l1104 0C19  
                                       l1202 0385                                         l1117 0E3F  
                                       l1109 0C8E                                         l1182 1866  
                                       l1343 06E1                                         l1096 0B39  
                                       l1178 19F9                                         l1099 0BA6  
                                       l1436 1890                                         l6303 1B65  
                                       l6321 1A61                                         l7113 0AD1  
                                       l7105 0AA3                                         l6307 1B6E  
                                       l6147 1A9A                                         l6139 1A89  
                                       l6227 1A27                                         l7107 0AB7  
                                       l7027 0947                                         l6325 1A6D  
                                       l6165 1C7C                                         l6253 191A  
                                       l7133 0B24                                         l7109 0AC2  
                                       l7029 0956                                         l6183 1DBA  
                                       l6511 1872                                         l6319 1A55  
                                       l6255 1926                                         l6351 13DA  
                                       l7215 0C75                                         l7063 09D7  
                                       l7055 09B7                                         l7039 097B  
                                       l6185 1DCE                                         l6329 1A76  
                                       l6345 13B3                                         l6273 1AE4  
                                       l6425 188A                                         l7313 0E15  
                                       l7225 0C92                                         l7073 09FB  
                                       l7057 09C3                                         l7049 099F  
                                       l8017 16FB                                         l6179 1DAB  
                                       l6187 1DD2                                         l6419 276D  
                                       l6603 06B6                                         l6443 27E4  
                                       l7139 0B3D                                         l7083 0A33  
                                       l7075 0A08                                         l7411 02F5  
                                       l7403 02C4                                         l6197 1DDA  
                                       l6189 1DD7                                         l6277 1AEF  
                                       l6621 0704                                         l6525 1297  
                                       l6533 1BF1                                         l7245 0CEA  
                                       l7165 0BAA                                         l7077 0A1D  
                                       l7069 09EB                                         l6295 1B47  
                                       l6375 1451                                         l6543 1C0B  
                                       l6439 27DE                                         l6711 160E  
                                       l8151 0F3B                                         l7343 0EE5  
                                       l7319 0E33                                         l7263 0D40  
                                       l7159 0B91                                         l7095 0A7B  
                                       l7431 0365                                         l7503 04BC  
                                       l6297 1B53                                         l6369 142A  
                                       l6641 072A                                         l6633 0726  
                                       l6617 06FD                                         l6609 06D5  
                                       l8153 1C11                                         l6537 1BFE  
                                       l6529 1BE4                                         l6713 1562  
                                       l7353 0F70                                         l7185 0C00  
                                       l7345 0F36                                         l7433 0370  
                                       l7425 0348                                         l6555 1FC1  
                                       l6627 0717                                         l6619 0700  
                                       l6643 0620                                         l6715 1614  
                                       l7371 0FBD                                         l7347 0F59  
                                       l7339 0E92                                         l7291 0DBC  
                                       l7283 0D93                                         l7195 0C1D  
                                       l7099 0A90                                         l7451 03C7  
                                       l7419 0318                                         l7523 0520  
                                       l7507 04D4                                         l6645 0765  
                                       l6709 15FD                                         l7293 0DC1  
                                       l8149 094D                                         l7445 039B  
                                       l6559 1FE9                                         l6575 0653  
                                       l7359 0F89                                         l7375 0FC9  
                                       l6903 011A                                         l7463 03F2  
                                       l7455 03D1                                         l7447 03AF  
                                       l7551 05A0                                         l7535 0554  
                                       l7519 0508                                         l7617 1823  
                                       l7633 1839                                         l6585 0681  
                                       l6569 0643                                         l7377 0FD6  
                                       l6913 013D                                         l6905 0120  
                                       l7473 0429                                         l7465 03FE  
                                       l6587 0699                                         l6915 0141  
                                       l6907 0128                                         l7555 05B8  
                                       l7539 056C                                         l7491 0485  
                                       l7571 05FD                                         l7811 081F  
                                       l6597 06B0                                         l6933 0198  
                                       l7477 0454                                         l7573 060F  
                                       l7485 046B                                         l7821 0885  
                                       l6935 019D                                         l6927 0175  
                                       l7567 05EC                                         l6953 01E6  
                                       l7817 0877                                         l7825 088D  
                                       l7587 150E                                         l6963 0212  
                                       l6947 01D1                                         l6885 00B9  
                                       l6967 0222                                         l6977 024E  
                                       l7849 14D3                                         l6899 00F4  
                                       l6989 0281                                         l6999 08E6  
                                       STR_1 2862                                         STR_2 285D  
                        ?_locked_unlock_leds 0070                                         STR_3 2858  
                                       STR_4 2853                                         STR_5 2834  
                                       STR_6 280D                                         STR_7 282E  
                                       STR_8 284E                                         STR_9 200A  
                    __end_of_PWM1_Initialize 26F6                                         _LATA 010C  
                                       _LATB 010D                                         _LATC 010E  
                                       u3305 1AF0                                         u3315 1AF7  
                                       u3415 1A58                                         u3345 1B4A  
                                       u4225 0DB6                                         u3435 1A67  
                                       u3460 138A                                         u3365 1B54  
                                       u3445 1A6E                                         u3375 1B5E  
                                       u3535 1D95                                         u3385 1B66  
                                       u3625 1AC2                                         u3490 1401  
                                       u3635 1AD0                                         u4445 184D  
                                       u4534 0830                                         u4455 0811  
                                       u3575 1891                                         u4615 14C3  
                                       u4535 082E                                         u3585 1896  
                                       u3745 06CB                                         u4554 084F  
                                       u4475 181A                                         u4555 084D  
                                       u3845 19F3                                         u4495 1830  
                                       u3785 06F0                                         u3890 1E95  
                                       u4594 1475                                         u3875 15C7  
                                       u4595 1473                                         u3885 1568  
                                       u3975 0192                                         _PLLR 48E0  
                                       _TMR2 001D                                         _TMR4 0415  
                                       _WPUA 020C                                         _WPUB 020D  
                                       _WPUC 020E                                 __CFG_WRT$OFF 0000  
                              __CFG_FCMEN$ON 0000                                         _main 1616  
                                       _rand 1D5F                              _TMR0_StartTimer 2665  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                                __CFG_BOREN$ON 0000  
                           ??_marquee_speedy 0040                                __CFG_BORV$LOW 0000  
                                       start 0016                    __end_of_SPI1_Exchange8bit 26AF  
                        _menu_display_option 124C                              _PWM5_Initialize 2717  
                        locked_Main@taskData 0052                 displayL2_ClrUserLeds@display 007B  
                    displayL2_PutStr@display 0035                                __CFG_CSWEN$ON 0000  
                          ___bmul@multiplier 0074                                __CFG_MCLRE$ON 0000  
                       _displayL1_SetSegChar 1C5A                   __end_of_PWM5_LoadDutyValue 1854  
                        menu_run_option@data 003B                         _displayL2_Initialize 1993  
                       ??_locked_unlock_leds 0071                      __end_of_PWM2_Initialize 2701  
                    __end_of_TMR0_Initialize 1916               ??_TMR0_DefaultInterruptHandler 0070  
             __size_of_OSCILLATOR_Initialize 000A                       __end_of_scheduler_Init 18F8  
                       _displayL1_SetUserLed 1800                        marquee@display_string 003F  
              __end_of_OSCILLATOR_Initialize 26C2                      ?_locked_get_unlock_leds 0071  
                    _locked_locking_leds_idx 00A2                                        ?_main 0070  
                                      ?_rand 0024                                        STR_10 284E  
                                      STR_11 2817                                        STR_20 283A  
                                      STR_12 2820                                        STR_13 2828  
                                      STR_14 2849                                        STR_15 2867  
                                      STR_16 2800                                        STR_17 2802  
                              __CFG_WDTE$OFF 0000                                        STR_18 2844  
                                      STR_19 283F                             _schedulerExecute 145D  
                                      _T2CON 001F                                        _T4CON 0417  
                             __CFG_DEBUG$OFF 0000                              __end_of___lwdiv 1B73  
                            __end_of___lwmod 1A7B                                        i1l363 0011  
                                      _OSCEN 091D                                        _TMR0H 0016  
                                      _TMR0L 0015                               _led_roundabout 1CDC  
                       ?_menu_display_option 004C               nullifyBadge_irTxRegister@badge 0071  
                 __end_of_scheduler_TaskInit 1C5A                                        _TRISA 008C  
                                      _TRISB 008D                                        _TRISC 008E  
           __size_of_nullifyBadge_buttonsGet 0031            __size_of_TMR0_SetInterruptHandler 0006  
                            _TMR4_Initialize 2701                              _PWM6_Initialize 2723  
                        ___lmul@multiplicand 0075                    ?_TMR0_SetInterruptHandler 0071  
                      _displayL2_ForceUpdate 267E                       ??_locked_get_lock_leds 0073  
                           __end_of_TMR0_ISR 2754                                 _badge_locked 007C  
                               ?_locked_Main 0052                                 ?_locked_Init 0039  
                      ?_displayL1_Initialize 0070                              __end_of_dpowers 200A  
                    _SPI1_Exchange8bitBuffer 1DA2                               _WDT_Initialize 2674  
                            __end_of_isdigit 276F                              __end_of_marquee 145D  
                                      _randx 00DA                                        pclath 000A  
         __size_of_nullifyBadge_platformInit 0055                                        status 0003  
                                      wtemp0 007E                              __end_of_sprintf 076B  
                            _TMR2_StartTimer 2668            __size_of_nullifyBadge_irTxRelease 000B  
                           _menu_option_size 00B0                    ?_nullifyBadge_irTxRelease 0070  
                   __size_of_SPI1_Initialize 0008                       menu_Main@buttonPressed 0056  
               displayL1_SetSegChar@charData 0028                        ?_displayL1_SetSegChar 0020  
                            __initialization 0018                            ?_displayL1_Update 0070  
                               __end_of_main 1700                                 __end_of_rand 1DA2  
                      ?_displayL2_Initialize 0070                            ?_displayL2_PutStr 0030  
                     ?_displayL2_ClrUserLeds 0070               __end_of_locked_get_unlock_leds 186D  
                         ??_displayL1_Update 0079                      __end_of_TMR2_Initialize 26CC  
                      ?_displayL1_SetUserLed 0071                  ?_INTERRUPT_InterruptManager 0070  
                         ??_displayL2_PutStr 0032             displayCharReverse@retValUpperRev 007A  
                            ?_scheduler_Init 0070                       __end_of_led_roundabout 1D1D  
                                     ??_main 00E4                                       ??_rand 0026  
                              slot_Main@data 0056                         _nullifyBadge_irTxClr 266E  
                      ??_menu_display_option 007C                         _nullifyBadge_irTxSet 2671  
                               ?_secret_Main 0052                                 ?_secret_Init 0039  
                     __end_of_WDT_Initialize 2678                                slot_Init@data 003B  
      __end_of_nullifyBadge_segDisplayPutStr 26D6       __size_of_nullifyBadge_segDisplayPutStr 000A  
              _nullifyBadge_segDisplayPutStr 26CC                      __end_of_TMR0_StartTimer 2668  
                            scheduler_Init@k 0073               nullifyBadge_platformInit@badge 002C  
                                     _CCPR1H 0292                                       _CCPR2H 0296  
                                     _CCPR1L 0291                                       _CCPR2L 0295  
                                     _ANSELA 018C                                       _ANSELB 018D  
                                     _ANSELC 018E                                       _T0CON0 0017  
                                     _T0CON1 0018                             ?_PWM1_Initialize 0070  
                                     _ODCONA 028C                                       _ODCONB 028D  
                                     _ODCONC 028E                      __end_of_PWM5_Initialize 2723  
                __end_of_TMR0_Read16bitTimer 18DB                                       _OSCFRQ 091F  
                                     _WDTCON 0097                              _TMR4_StartTimer 266B  
                      SPI1_Exchange8bit@data 0071                            _scheduler_TaskAdd 0818  
                   __size_of_menu_run_option 003A                     __end_of_locked_lock_leds 18BE  
          __end_of_nullifyBadge_platformInit 1EEC                   __size_of_SPI1_Exchange8bit 0009  
                          _scheduler_TaskRun 1952                               __CFG_PWRTE$OFF 0000  
                         ?_scheduler_TaskAdd 003D                           ?_scheduler_TaskRun 0060  
                                     ___bmul 27DC                             __end_of_led_rand 27BB  
                                     ___lmul 1ADB                     locked_get_lock_leds@leds 0077  
                                     ___wmul 1888                               __CFG_STVREN$ON 0000  
                   locked_get_lock_leds@size 0075                                       _deaths 00A8  
                       __size_of_flashy_Main 0766                         __size_of_flashy_Init 0094  
                                  ??___lwdiv 0075                                    ??___lwmod 0079  
                      _flashy_display_option 1FA1                             ?_TMR0_Initialize 0070  
                           ?_PWM2_Initialize 0070                                ?_locked_clear 0039  
                                     _memset 186D                      __end_of_PWM6_Initialize 272F  
                    __end_of_TMR4_Initialize 270C                          ??_scheduler_TaskAdd 003F  
           nullifyBadge_segDisplayPutStr@str 0037             __end_of_nullifyBadge_userLedsClr 2696  
           __end_of_nullifyBadge_userLedsSet 2761                          ??_scheduler_TaskRun 007C  
                            ?_led_roundabout 0030                        ?_nullifyBadge_irTxClr 0070  
                      ?_nullifyBadge_irTxSet 0070                                       _strlen 1916  
                               __pdataBIGRAM 26F0                         __size_of_led_curtain 0041  
                     ?_displayL2_ForceUpdate 0070                                    ??_isdigit 0071  
                                  ??_marquee 003E                    ??_SPI1_Exchange8bitBuffer 0074  
                            ?_WDT_Initialize 0070                       ??_displayL1_Initialize 007B  
                      _displayL2_SetUserLeds 1934                TMR0_Read16bitTimer@readValLow 007A  
                      __end_of_TMR0_CallBack 26EB                      __end_of_TMR2_StartTimer 266B  
   TMR0_SetInterruptHandler@InterruptHandler 0071                                    ??_sprintf 0028  
                 ?_displayL2_EraseSegDisplay 0070                   __end_of_nullifyBadge_irGet 1205  
                       locked_lock_leds@size 0073                            _SYSTEM_Initialize 1972  
           displayL2_EraseSegDisplay@display 0037                   ?_nullifyBadge_irTxRegister 0070  
                          _menu_options_leds 01A0                    __end_of_scheduler_TaskAdd 089A  
                    __end_of__initialization 00A3                    secret_check@buttonPressed 0079  
                  __end_of_scheduler_TaskRun 1972                       menu_display_option@led 0050  
                    _roundabout_leds_inverse 02A0                           ?_SYSTEM_Initialize 0070  
                 __end_of_PWM2_LoadDutyValue 183E                       ??_displayL1_SetSegChar 0022  
                PWM1_LoadDutyValue@dutyValue 0071                    secret_check@currents_size 0025  
                        ___bmul@multiplicand 0071                                led_rand@spark 0030  
                     ??_displayL2_Initialize 007C                            _displayL2_PutChar 1DF0  
                             __pcstackCOMMON 0070                  displayL1_SetSegChar@charPos 0021  
                __size_of_displayCharReverse 002F                                 __pidataBANK1 26D6  
                               __pidataBANK2 19FE                                 __pidataBANK3 19B6  
                               __pidataBANK5 1BAB                                 __pidataBANK6 1B73  
                        ??_SYSTEM_Initialize 0073                                    ?_TMR0_ISR 0070  
                     ??_displayL1_SetUserLed 0073                           ?_displayL2_PutChar 002A  
                                 _badge_inst 01C3                               ??_locked_clear 007C  
                          ??_SPI1_Initialize 0071                  displayL1_SetSegChar@display 0027  
                         _PWM1_LoadDutyValue 1812                        scheduler_TaskAdd@task 003D  
                           ?_TMR2_Initialize 0070                          locked_Init@taskData 0039  
                        _flashy_sparkle_rate 00AC         __end_of_nullifyBadge_segDisplayErase 2690  
      __size_of_nullifyBadge_segDisplayErase 0006                 _nullifyBadge_segDisplayErase 268A  
                    _nullifyBadge_buttonsGet 1AAA                          ??_displayL2_PutChar 002B  
                        ?_PWM1_LoadDutyValue 0071                           _gamma_table_256x1k 1000  
                           ?_TMR0_StartTimer 0070                      __end_of_TMR4_StartTimer 266E  
                  __end_of_SYSTEM_Initialize 1993                           led_curtain@counter 0030  
                               sprintf@width 0032                                _menu_TaskData 01D5  
                                 __pbssBANK1 00A0                                   __pbssBANK2 0120  
                                 __pbssBANK3 01C3                                   __pbssBANK4 0220  
                                 __pbssBANK7 03A0                         __size_of_locked_Main 01CA  
                       __size_of_locked_Init 0063                          secret_Main@taskData 0052  
                           ?_PWM5_Initialize 0070               ?_nullifyBadge_segDisplayPutStr 0037  
                          _flashy_option_idx 00A6                     __end_of_schedulerExecute 14D9  
                      _TMR4_InterruptHandler 00BA           nullifyBadge_userLedsRegister@badge 0071  
                         __size_of_menu_Main 01EC                           __size_of_menu_Init 0062  
                  __end_of_displayL2_PutChar 1E42                                ?_secret_check 0077  
                       ??_PWM1_LoadDutyValue 0073                                ?_secret_clear 0071  
                             _SSP1DATPPSbits 0E21                              _secret_TaskData 0242  
                                 __pmaintext 1616                                      ?___bmul 0071  
           __end_of_TMR0_SetInterruptHandler 267E                                      ?___lmul 0071  
                     ?_flashy_display_option 004C                                      ?___wmul 0071  
                      scheduler_TaskRun@task 0060                                   ??_TMR0_ISR 0070  
                            __CFG_PPS1WAY$ON 0000                   __end_of_PWM6_LoadDutyValue 0818  
                                 __pintentry 0004                            ??_menu_run_option 007C  
                                    _CCP1CON 0293                                      _CCP2CON 0297  
                                    ?_memset 0071                               ___lmul@product 0020  
                     ??_nullifyBadge_irTxClr 0071                             ?_TMR4_Initialize 0070  
                           ?_PWM6_Initialize 0070                       ??_nullifyBadge_irTxSet 0071  
                             _SSP1CLKPPSbits 0E20                          __CFG_RSTOSC$HFINT32 0000  
                                    ?_strlen 0071                ?_nullifyBadge_segDisplayErase 0070  
                     ?_displayL2_SetUserLeds 002B                           _PWM5_LoadDutyValue 183E  
                                    _OSCCON1 0919                     displayL2_PutChar@display 002F  
                                    _OSCCON3 091B                           __size_of_slot_Main 0082  
                         __size_of_slot_Init 005A                                      _NVMADRH 0892  
                                    _NVMADRL 0891                                      _NVMDATH 0894  
                                    _OSCTUNE 091E                                      _NVMDATL 0893  
                                    _NVMCON2 0896                                      _PWM5DCH 0618  
                                    _PWM5DCL 0617                                      _PWM6DCH 061B  
                                    _PWM6DCL 061A                                      _PWM5CON 0619  
                                    _PWM6CON 061C                                      _SSP1ADD 0212  
                       __size_of_secret_Main 01BD                                      _PPSLOCK 0E0F  
                                    _SSP1BUF 0211                                   _led_circle 26AF  
                       __size_of_secret_Init 005B                             ?_TMR2_StartTimer 0070  
                                  ?_led_rand 0070                          ?_PWM5_LoadDutyValue 0071  
                    _FLASHY_TEXT_SECRET_TEST 00E0                     flashy_Main@buttonPressed 005C  
                 __size_of_scheduler_TaskAdd 0082            __size_of_nullifyBadge_userLedsClr 0006  
                 __size_of_scheduler_TaskRun 0020            __size_of_nullifyBadge_userLedsSet 000D  
                         _scheduler_TaskInit 1C1D                    ?_nullifyBadge_userLedsClr 0070  
                  ?_nullifyBadge_userLedsSet 002D                               ??_secret_check 0020  
                             ??_secret_clear 0073                      ??_displayL2_ClrUserLeds 007B  
               displayL2_SetUserLeds@display 007B                             ??_scheduler_Init 0071  
                        ?_scheduler_TaskInit 0071                              __size_of___bmul 0011  
                            __size_of___lmul 0032                              __size_of___wmul 001B  
            ??_nullifyBadge_userLedsRegister 0071                                      ___lwdiv 1B3F  
                         scheduler_TaskAdd@k 0046                                      ___lwmod 1A4E  
                       ??_PWM5_LoadDutyValue 0073                  __size_of_locked_unlock_leds 0013  
                  ??_nullifyBadge_buttonsGet 0071                              _roundabout_leds 02BC  
                    scheduler_Init@scheduler 0072                              __size_of_memset 001B  
                      displayL1_SetSegChar@c 0020                              _locked_TaskData 0250  
                                 _menu_clear 1205                                      __ptext1 1C1D  
                                    __ptext2 0818                                      __ptext3 1F46  
                                    __ptext4 1310                                      __ptext5 12AE  
                                    __ptext6 076B                                      __ptext7 1EEC  
                                    __ptext8 278C                                      __ptext9 269E  
                            __size_of_strlen 001E                                      _dpowers 2000  
                      _OSCILLATOR_Initialize 26B8                                    _T2CONbits 001F  
                          __end_of_menu_Main 0293                            __end_of_menu_Init 1310  
                                    _isdigit 2761                                      _marquee 13E6  
                                  _T4CONbits 0417                     ??_PIN_MANAGER_Initialize 0071  
    nullifyBadge_segDisplayForceUpdate@badge 002B                    __size_of_displayL1_Update 0011  
                       ??_scheduler_TaskInit 0073                    __size_of_displayL2_PutStr 002A  
                 __size_of_SYSTEM_Initialize 0021                                      _sprintf 061A  
                                    clrloop0 2730                             ?_TMR4_StartTimer 0070  
              __size_of_locked_get_lock_leds 0025                          displayL2_PutStr@str 0030  
                                 ??_led_rand 007C                         end_of_initialization 00A3  
                       __end_of_locked_clear 1D5F                                      init_ram 273B  
                                    memset@c 0071                                      memset@n 0073  
                                    memset@p 0076                                secret_check@i 0028  
                                    initloop 273C                                 marquee@count 003C  
                 __size_of_displayL2_PutChar 0052                            ?_locked_lock_leds 0070  
                          __end_of_slot_Main 155B                            __end_of_slot_Init 1F46  
                           ??_led_roundabout 0032                           ??_locked_lock_leds 0071  
             TMR0_Read16bitTimer@readValHigh 007B                  __end_of_menu_display_option 12AE  
                     slot_Main@buttonPressed 0055                                      strlen@s 0071  
                    ??_displayL2_ForceUpdate 007B                      __size_of_marquee_speedy 0073  
                         secret_check@inputs 0027                             ??_WDT_Initialize 0071  
                   _TMR0_SetInterruptHandler 2678                                    _PORTAbits 000C  
                                  _PORTBbits 000D                                    _PORTCbits 000E  
              nullifyBadge_userLedsClr@badge 002B                      displayL1_Update@display 002A  
                                ?_led_circle 0030                      menu_display_option@data 004C  
             ??_nullifyBadge_segDisplayErase 007C                      menu_display_option@size 004E  
                           __CFG_FEXTOSC$OFF 0000                  ??_displayL2_EraseSegDisplay 007C  
            __end_of_nullifyBadge_buttonsGet 1ADB                                _schedulerInst 0220  
                   _nullifyBadge_irTxRelease 270C                  ??_nullifyBadge_irTxRegister 0071  
                                _CCP1CONbits 0293                              _SPI1_Initialize 2696  
                                _CCP2CONbits 0297                            slot_Main@taskData 0052  
                              ??_flashy_Main 0054                                ??_flashy_Init 007C  
                 ?_nullifyBadge_platformInit 0070                 __size_of_TMR0_Read16bitTimer 001D  
                   __size_of_PWM1_Initialize 000B                          secret_Init@taskData 0039  
                       _timer0ReloadVal16bit 00B8                           _nullifyBadge_irGet 1200  
                            flashy_Main@data 005E                               __end_of___bmul 27ED  
              nullifyBadge_userLedsSet@badge 002F                               __end_of___lmul 1B0D  
                              __pidataBIGRAM 1700                                ??_led_curtain 0032  
                             __end_of___wmul 18A3                       flashy_Main@hit_counter 0056  
                          __size_of_TMR0_ISR 000D                           _PWM2_LoadDutyValue 1828  
                                ?_menu_clear 0039                       ?_OSCILLATOR_Initialize 0070  
                             __end_of_memset 1888                          ?_nullifyBadge_irGet 0070  
                            flashy_Init@data 003B        __end_of_nullifyBadge_userLedsRegister 279B  
     __size_of_nullifyBadge_userLedsRegister 000F                _nullifyBadge_userLedsRegister 278C  
                       __end_of_secret_check 1616                              _menu_option_idx 00B2  
                       __end_of_secret_clear 1B3F                               __end_of_strlen 1934  
                        start_initialization 0018                     __size_of_PWM2_Initialize 000B  
                   __size_of_TMR0_Initialize 001E                          ?_PWM2_LoadDutyValue 0071  
            __size_of_PIN_MANAGER_Initialize 0055                         marquee_speedy@F14026 0168  
              __size_of_displayL1_Initialize 0010                         ??_nullifyBadge_irGet 0071  
                            _menu_run_option 1BE3                            ?_schedulerExecute 0070  
                    ??_flashy_display_option 007C                   __end_of_displayCharReverse 1AAA  
                   ??_locked_get_unlock_leds 0073                           led_roundabout@leds 0034  
                           __CFG_LPBOREN$OFF 0000                           led_roundabout@size 0036  
                         _flashy_scroll_rate 00AA                         ??_PWM2_LoadDutyValue 0073  
                              _secret_inputs 01AA                           ??_schedulerExecute 0062  
                  flashy_display_option@data 004C                __size_of_displayL1_SetSegChar 0041  
                                   ??___bmul 0072                  PWM2_LoadDutyValue@dutyValue 0071  
                                   ??___lmul 0079                                     ??___wmul 0075  
                  _displayL2_EraseSegDisplay 27BB                                  _CCPTMRSbits 029F  
                        __size_of_led_circle 0009                __size_of_displayL2_Initialize 0023  
                     __size_of_TMR0_CallBack 000B                                  __pdataBANK1 00DA  
                                __pdataBANK2 0147                                  __pdataBANK3 01A0  
                                __pdataBANK5 02A0                                  __pdataBANK6 0320  
                                   ??_memset 0075                    _nullifyBadge_irTxRegister 277D  
              __size_of_displayL1_SetUserLed 0012                          __end_of_flashy_Main 1000  
                        __end_of_flashy_Init 07FF                     ?_SPI1_Exchange8bitBuffer 0072  
                    ??_displayL2_SetUserLeds 007B                             secret_check@data 0077  
                                   ??_strlen 0073                             secret_check@size 0023  
                  schedulerExecute@scheduler 006E           nullifyBadge_segDisplayPutStr@badge 0039  
                PWM5_LoadDutyValue@dutyValue 0071                         marquee_speedy@string 003A  
                                __pbssCOMMON 007C                    schedulerExecute@tickDelta 006C  
                                  ___latbits 0003                          __end_of_led_curtain 1CDC  
                              __pcstackBANK0 0020                                __pcstackBANK1 00E4  
                      __size_of_locked_clear 0042                             _displayL1_Update 27CB  
                         _PWM6_LoadDutyValue 0802                     __size_of_TMR2_Initialize 000A  
                              ??_locked_Main 0054                             _displayL2_PutStr 1A24  
                              ??_locked_Init 007C                       scheduler_TaskInit@task 0071  
                           secret_clear@data 0071                      __end_of_SPI1_Initialize 269E  
                               _isdigit$3092 0071                         _asciiCharTableLookup 26F0  
                      _locked_lock_base_leds 00DE                           _flashy_option_size 00A4  
                               _curtain_leds 033C                          ?_PWM6_LoadDutyValue 0071  
           displayL2_SetUserLeds@userLedData 002B                                  sprintf@flag 002E  
                          __size_of_led_rand 0010                                  sprintf@prec 002D  
                        __size_of_menu_clear 0047                        _TMR0_InterruptHandler 00B6  
                   __size_of_TMR0_StartTimer 0003                  __size_of_PWM1_LoadDutyValue 0016  
                           ___lwdiv@dividend 0073                       _PIN_MANAGER_Initialize 1E42  
                                _FLASHY_TEXT 00E2                     __size_of_PWM5_Initialize 000C  
                          menu_Main@taskData 0052               __size_of_displayL2_ClrUserLeds 000E  
              __end_of_displayL2_ClrUserLeds 277D                  displayL1_SetUserLed@display 0074  
                          schedulerExecute@k 006F                                     ?___lwdiv 0071  
                                   ?___lwmod 0020                               _marquee_speedy 1373  
                       ??_PWM6_LoadDutyValue 0073                                 _locked_clear 1D1D  
                          ??_PWM1_Initialize 0071                 ??_INTERRUPT_InterruptManager 0070  
                          marquee@multiplier 0044                       displayCharReverse@cVal 0071  
              __size_of_nullifyBadge_irTxClr 0003                __size_of_nullifyBadge_irTxSet 0003  
                              ??_secret_Main 0054                                ??_secret_Init 007C  
                        _locked_locking_leds 0147                                     ?_isdigit 0070  
                                   ?_marquee 003A                     __size_of_PWM6_Initialize 000C  
                   __size_of_TMR4_Initialize 000B               ?_nullifyBadge_userLedsRegister 0070  
                displayL2_Initialize@display 002B                      __end_of_menu_run_option 1C1D  
                           ___lwdiv@quotient 0077                              secret_Main@data 0058  
                                  _menu_Main 00A7                                    _menu_Init 12AE  
              nullifyBadge_irTxRelease@badge 0072                                    _menu_Exit 0000  
                                   ?_sprintf 0024                          flashy_Main@taskData 0052  
                              _TMR0_CallBack 26E0                           displayL2_PutChar@c 002A  
                         displayL2_PutChar@k 002E                                    _menu_task 00BE  
    displayL1_SetSegChar@dispDataVectBaseIdx 0026                            ??_TMR0_Initialize 0073  
                          ??_PWM2_Initialize 0071                              secret_Init@data 003B  
              SPI1_Exchange8bitBuffer@dataIn 0077                               ___wmul@product 0075  
                        __end_of_locked_Main 045D                          __end_of_locked_Init 1373  
                                   _LATBbits 010D                                     _LATCbits 010E  
              SPI1_Exchange8bitBuffer@bufLen 0072                                    clear_ram0 272F  
                                   _PIE0bits 0090                     __size_of_TMR2_StartTimer 0003  
        __size_of_INTERRUPT_InterruptManager 0012                   ??_TMR0_SetInterruptHandler 0073  
            __size_of_locked_get_unlock_leds 0019                                     _PIR0bits 0010  
                                   _PIR1bits 0011                                     _PIR2bits 0012  
                                _flashy_Main 089A                                  _flashy_Init 076B  
                                _flashy_Exit 0000                   TMR0_Read16bitTimer@readVal 0078  
                 __end_of_locked_unlock_leds 2800                   scheduler_TaskAdd@scheduler 0045  
            __end_of_SPI1_Exchange8bitBuffer 1DF0                 __end_of_locked_get_lock_leds 19FE  
                     __end_of_marquee_speedy 13E6                                  _flashy_task 00CB  
                                   _SSP1CON1 0215                                     _TMR0_ISR 2747  
                                   _SSP1STAT 0214                            slot_Init@taskData 0039  
                __size_of_PWM5_LoadDutyValue 0016                        __size_of_secret_check 00BB  
                                  _slot_Main 14D9                        __size_of_secret_clear 0032  
                                  _slot_Init 1EEC                                    _slot_Exit 0000  
                                _led_curtain 1C9B              displayL1_SetUserLed@userLedVect 0071  
                            _flashy_TaskData 03A0                                    _slot_task 013A  
          schedulerExecute@currentSystemTick 0068                            ___wmul@multiplier 0071  
             __size_of_displayL2_ForceUpdate 0006                __end_of_displayL2_ForceUpdate 2684  
                 ??_nullifyBadge_irTxRelease 0071                    __size_of_locked_lock_leds 001B  
          nullifyBadge_segDisplayErase@badge 0038                     locked_Main@buttonPressed 0056  
                        _TMR0_Read16bitTimer 18BE                                 ??_led_circle 007C  
                            led_circle@count 0030                  __size_of_scheduler_TaskInit 003D  
                             ?_TMR0_CallBack 0070                                   ?_menu_Main 0052  
                                 ?_menu_Init 0039                             ?_SPI1_Initialize 0070  
                   _nullifyBadge_userLedsClr 2690                            ___lmul@multiplier 0071  
                      led_roundabout@counter 0030                     _nullifyBadge_userLedsSet 2754  
                        __end_of_secret_Main 061A                          __end_of_secret_Init 1FA1  
                          ??_TMR2_Initialize 0071                     secret_Main@buttonPressed 0057  
                 locked_get_unlock_leds@leds 0073                     __size_of_TMR4_StartTimer 0003  
                               _secret_check 155B                                 _secret_clear 1B0D  
                       ?_TMR0_Read16bitTimer 0071                              marquee_speedy@i 0046  
                            marquee_speedy@j 004A                  ??_nullifyBadge_platformInit 007C  
                   ?_nullifyBadge_buttonsGet 0070                                 _secret_value 00D8  
                            _flashy_leds_idx 00AE   __end_of_nullifyBadge_segDisplayForceUpdate 268A  
__size_of_nullifyBadge_segDisplayForceUpdate 0006         ??_nullifyBadge_segDisplayForceUpdate 007C  
        ?_nullifyBadge_segDisplayForceUpdate 0070           _nullifyBadge_segDisplayForceUpdate 2684  
                            ?_marquee_speedy 003A                      ??_OSCILLATOR_Initialize 0071  
                        marquee_speedy@count 003C                            ??_TMR0_StartTimer 0071  
                         __end_of_led_circle 26B8                                   ?_slot_Main 0052  
                                 ?_slot_Init 0039                             __size_of___lwdiv 0034  
                           __size_of___lwmod 002D                                 ??_menu_clear 007C  
                          ??_PWM5_Initialize 0071                      __size_of_scheduler_Init 001D  
                                _currentTask 00B4                                   sprintf@val 002F  
               __size_of_menu_display_option 0062           __size_of_displayL2_EraseSegDisplay 0010  
                                 _T0CON0bits 0017                       _locked_get_unlock_leds 1854  
                           __size_of_isdigit 000E                             __size_of_marquee 0077  
                            ___lwdiv@divisor 0071                              ___lwdiv@counter 0076  
                        displayCharReverse@k 007B           __size_of_nullifyBadge_irTxRegister 000F  
                                   __ptext10 18DB                                     __ptext11 145D  
                                   __ptext20 27DC                                     __ptext12 1952  
                                   __ptext21 1BE3                                     __ptext13 045D  
                                   __ptext30 276F                                     __ptext22 1205  
                                   __ptext14 0293                                     __ptext31 268A  
                                   __ptext23 124C                                     __ptext15 00A7  
                                   __ptext40 1200                                     __ptext32 27BB  
                                   __ptext24 27ED                                     __ptext16 089A  
                                   __ptext41 1AAA                                     __ptext33 061A  
                                   __ptext25 18A3                                     __ptext17 14D9  
                                   __ptext50 1800                                     __ptext42 1CDC  
                                   __ptext34 2761                                     __ptext26 1854  
                                   __ptext18 1B0D                                     __ptext51 1FA1  
                                   __ptext43 27AB                                     __ptext35 1888  
                                   __ptext27 19D9                                     __ptext19 155B  
                                   __ptext60 2684                                     __ptext52 1373  
                                   __ptext44 1D5F                                     __ptext36 2671  
                                   __ptext28 1D1D                                     __ptext61 267E  
                                   __ptext53 13E6                                     __ptext45 1ADB  
                                   __ptext37 270C                                     __ptext29 2690  
                                   __ptext70 1DA2                                     __ptext62 1A4E  
                                   __ptext54 1916                                     __ptext46 1C9B  
                                   __ptext38 277D                                     __ptext71 26A6  
                                   __ptext63 1B3F                                     __ptext55 26CC  
                                   __ptext47 26AF                                     __ptext39 266E  
                                   __ptext80 2678                                     __ptext72 1972  
                                   __ptext64 18BE                                     __ptext56 1A24  
                                   __ptext48 2754                                     __ptext81 2696  
                                   __ptext73 2674                                     __ptext65 1E97  
                                   __ptext57 1DF0                                     __ptext49 1934  
                                   __ptext90 1828                                     __ptext82 2723  
                                   __ptext74 2701                                     __ptext66 1993  
                                   __ptext58 1C5A                                     __ptext91 1812  
                                   __ptext83 2717                                     __ptext75 266B  
                                   __ptext67 279B                                     __ptext59 1A7B  
                                   __ptext84 26F6                                     __ptext76 26C2  
                                   __ptext68 186D                                     __ptext93 2747  
                                   __ptext85 26EB                                     __ptext77 2668  
                                   __ptext69 27CB                                     __ptext94 26E0  
                                   __ptext86 1E42                                     __ptext78 18F8  
                                   __ptext95 07FF                                     __ptext87 26B8  
                                   __ptext79 2665                                     __ptext88 0802  
                                   __ptext89 183E                                  _locked_Main 0293  
                                _locked_Init 1310                                  _locked_Exit 0000  
                               _SSP1CON1bits 0215                             ?_menu_run_option 003B  
                                _locked_leds 00A0                                  _locked_task 012D  
                                   _led_rand 27AB                             __size_of_sprintf 0151  
                                _menu_option 015B      __end_of_nullifyBadge_segDisplayRegister 26A6  
   __size_of_nullifyBadge_segDisplayRegister 0008            ??_nullifyBadge_segDisplayRegister 0071  
           ?_nullifyBadge_segDisplayRegister 0070              _nullifyBadge_segDisplayRegister 269E  
                       marquee@string_length 0048                                menu_Main@data 0057  
                          ??_TMR4_Initialize 0071                            ??_PWM6_Initialize 0071  
                              __size_of_main 00EA                                __size_of_rand 0043  
       __end_of_TMR0_DefaultInterruptHandler 0800        __size_of_TMR0_DefaultInterruptHandler 0001  
               _TMR0_DefaultInterruptHandler 07FF                           __end_of_menu_clear 124C  
                          displayL2_PutStr@k 0036                        ??_TMR0_Read16bitTimer 0073  
                                 _RC0PPSbits 0EA0                                marquee@F14035 0163  
                                 _RC1PPSbits 0EA1                                menu_Init@data 003B  
                   __end_of_displayL1_Update 27DC                                   _RC2PPSbits 0EA2  
             __size_of_flashy_display_option 005F                     __end_of_displayL2_PutStr 1A4E  
              __end_of_flashy_display_option 2000                                   _RC3PPSbits 0EA3  
               __end_of_displayL1_Initialize 27AB                         _curtain_leds_inverse 0320  
                                 _RC4PPSbits 0EA4                                   _RB6PPSbits 0E9E  
                                   int$flags 007E                 displayL2_ForceUpdate@display 007B  
                            locked_Main@data 0057                            ??_TMR2_StartTimer 0071  
         __end_of_INTERRUPT_InterruptManager 0016                   _INTERRUPT_InterruptManager 0004  
                               _SSP1STATbits 0214         nullifyBadge_segDisplayRegister@badge 0071  
                PIN_MANAGER_Initialize@state 0071           schedulerExecute@taskLastSystemTick 006A  
                         _displayCharReverse 1A7B                            menu_Init@taskData 0039  
                  __size_of_schedulerExecute 007C               __size_of_displayL2_SetUserLeds 001E  
                            locked_Init@data 003B                __end_of_displayL2_SetUserLeds 1952  
              displayCharReverse@retValLower 0078                displayCharReverse@retValUpper 0079  
                                 _INTCONbits 000B                                  _secret_Main 045D  
                    __size_of_led_roundabout 0041                                  _secret_Init 1F46  
                                _secret_Exit 0000                              ??_TMR0_CallBack 0070  
                                _NVMCON1bits 0895                    _nullifyBadge_platformInit 1E97  
               __end_of_displayL1_SetSegChar 1C9B                                  _secret_task 0120  
                             __pstringtext10 283A                               __pstringtext11 283F  
                             __pstringtext20 0000                               __pstringtext12 2844  
                             __pstringtext13 2849                               __pstringtext14 284E  
                             __pstringtext15 2853                               __pstringtext16 2858  
                             __pstringtext17 285D                               __pstringtext18 2862  
                             __pstringtext19 2867            __end_of_displayL2_EraseSegDisplay 27CB  
                                   isdigit@c 0072                                     marquee@i 0046  
                                   marquee@j 004A                                     memset@p1 0077  
               __end_of_displayL2_Initialize 19B6                          ?_displayCharReverse 0071  
                                ??_menu_Main 0054                                  ??_menu_Init 007C  
                    __size_of_WDT_Initialize 0004                         _locked_get_lock_leds 19D9  
          __end_of_nullifyBadge_irTxRegister 278C             __size_of_SPI1_Exchange8bitBuffer 004E  
               __end_of_displayL1_SetUserLed 1812                                     intlevel1 0000  
                                  sprintf@ap 002C                                    sprintf@sp 0031  
                           ___lwmod@dividend 0022                      ?_PIN_MANAGER_Initialize 0070  
                              marquee@string 003A                  __size_of_nullifyBadge_irGet 0005  
                          __CFG_CLKOUTEN$OFF 0000          SPI1_Exchange8bitBuffer@bytesWritten 0078  
                                _PPSLOCKbits 0E0F                              _PWM1_Initialize 26EB  
                        flashy_Init@taskData 0039                               menu_clear@data 0039  
              ?_TMR0_DefaultInterruptHandler 0070                  __size_of_PWM2_LoadDutyValue 0016  
                       ??_displayCharReverse 0073                            ??_TMR4_StartTimer 0071  
                                ??_slot_Main 0054                                  ??_slot_Init 007C  
                              __pstringtext1 1000                                __pstringtext2 2000  
                              __pstringtext3 2800                                __pstringtext4 280D  
                              __pstringtext5 2817                                __pstringtext6 2820  
                              __pstringtext7 2828                                __pstringtext8 282E  
                              __pstringtext9 2834             __end_of_nullifyBadge_irTxRelease 2717  
                                   sprintf@c 0034                                     sprintf@f 0024  
                              _flashy_option 0153                             _locked_lock_leds 18A3  
                            ___lwmod@divisor 0020                              _TMR0_Initialize 18F8  
                            _PWM2_Initialize 26F6                                     strlen@cp 0075  
                              _slot_TaskData 025E                              ___lwmod@counter 007A  
                PWM6_LoadDutyValue@dutyValue 0071                        ?_locked_get_lock_leds 0071  
             __end_of_PIN_MANAGER_Initialize 1E97                             locked_clear@data 0039  
                                _PWMTMRSbits 061F                 __end_of_nullifyBadge_irTxClr 2671  
               __end_of_nullifyBadge_irTxSet 2674                   __end_of_PWM1_LoadDutyValue 1828  
                      _TMR2_InterruptHandler 00BC                                 ?_flashy_Main 0052  
                               ?_flashy_Init 0039  
