

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Jul 23 17:23:56 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16LF18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK5,global,class=CODE,delta=2
     8                           	psect	idataBANK6,global,class=CODE,delta=2
     9                           	psect	idataBIGRAM,global,class=CODE,delta=2
    10                           	psect	stringtext1,global,class=STRCODE,delta=2
    11                           	psect	stringtext2,global,class=STRCODE,delta=2
    12                           	psect	stringtext3,global,class=STRCODE,delta=2
    13                           	psect	stringtext4,global,class=STRCODE,delta=2
    14                           	psect	stringtext5,global,class=STRCODE,delta=2
    15                           	psect	stringtext6,global,class=STRCODE,delta=2
    16                           	psect	stringtext7,global,class=STRCODE,delta=2
    17                           	psect	stringtext8,global,class=STRCODE,delta=2
    18                           	psect	stringtext9,global,class=STRCODE,delta=2
    19                           	psect	stringtext10,global,class=STRCODE,delta=2
    20                           	psect	stringtext11,global,class=STRCODE,delta=2
    21                           	psect	stringtext12,global,class=STRCODE,delta=2
    22                           	psect	stringtext13,global,class=STRCODE,delta=2
    23                           	psect	stringtext14,global,class=STRCODE,delta=2
    24                           	psect	stringtext15,global,class=STRCODE,delta=2
    25                           	psect	stringtext16,global,class=STRCODE,delta=2
    26                           	psect	stringtext17,global,class=STRCODE,delta=2
    27                           	psect	stringtext18,global,class=STRCODE,delta=2
    28                           	psect	stringtext19,global,class=STRCODE,delta=2
    29                           	psect	stringtext20,global,class=STRCODE,delta=2
    30                           	psect	stringtext21,global,class=STRCODE,delta=2
    31                           	psect	stringtext22,global,class=STRCODE,delta=2
    32                           	psect	stringtext23,global,class=STRCODE,delta=2
    33                           	psect	stringtext24,global,class=STRCODE,delta=2
    34                           	psect	stringtext25,global,class=STRCODE,delta=2
    35                           	psect	cinit,global,class=CODE,merge=1,delta=2
    36                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    38                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    39                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    40                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    41                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    42                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    43                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    44                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    45                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    46                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    47                           	psect	inittext,global,class=CODE,delta=2
    48                           	psect	clrtext,global,class=CODE,delta=2
    49                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    50                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    51                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    52                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    53                           	psect	text1,local,class=CODE,merge=1,delta=2
    54                           	psect	text2,local,class=CODE,merge=1,delta=2
    55                           	psect	text3,local,class=CODE,merge=1,delta=2
    56                           	psect	text4,local,class=CODE,merge=1,delta=2
    57                           	psect	text5,local,class=CODE,merge=1,delta=2
    58                           	psect	text6,local,class=CODE,merge=1,delta=2
    59                           	psect	text7,local,class=CODE,merge=1,delta=2
    60                           	psect	text8,local,class=CODE,merge=1,delta=2
    61                           	psect	text9,local,class=CODE,merge=1,delta=2
    62                           	psect	text10,local,class=CODE,merge=1,delta=2
    63                           	psect	text11,local,class=CODE,merge=1,delta=2
    64                           	psect	text12,local,class=CODE,merge=1,delta=2
    65                           	psect	text13,local,class=CODE,merge=1,delta=2
    66                           	psect	text14,local,class=CODE,merge=1,delta=2
    67                           	psect	text15,local,class=CODE,merge=1,delta=2
    68                           	psect	text16,local,class=CODE,merge=1,delta=2
    69                           	psect	swtext1,local,class=CONST,delta=2
    70                           	psect	text17,local,class=CODE,merge=1,delta=2
    71                           	psect	text18,local,class=CODE,merge=1,delta=2
    72                           	psect	text19,local,class=CODE,merge=1,delta=2
    73                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text21,local,class=CODE,merge=1,delta=2
    75                           	psect	text22,local,class=CODE,merge=1,delta=2
    76                           	psect	text23,local,class=CODE,merge=1,delta=2
    77                           	psect	text24,local,class=CODE,merge=1,delta=2
    78                           	psect	text25,local,class=CODE,merge=1,delta=2
    79                           	psect	text26,local,class=CODE,merge=1,delta=2
    80                           	psect	text27,local,class=CODE,merge=1,delta=2
    81                           	psect	text28,local,class=CODE,merge=1,delta=2
    82                           	psect	text29,local,class=CODE,merge=1,delta=2
    83                           	psect	text30,local,class=CODE,merge=1,delta=2
    84                           	psect	text31,local,class=CODE,merge=1,delta=2
    85                           	psect	text32,local,class=CODE,merge=1,delta=2
    86                           	psect	text33,local,class=CODE,merge=1,delta=2
    87                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text36,local,class=CODE,merge=1,delta=2
    90                           	psect	text37,local,class=CODE,merge=1,delta=2
    91                           	psect	text38,local,class=CODE,merge=1,delta=2
    92                           	psect	text39,local,class=CODE,merge=1,delta=2
    93                           	psect	text40,local,class=CODE,merge=1,delta=2
    94                           	psect	text41,local,class=CODE,merge=1,delta=2
    95                           	psect	text42,local,class=CODE,merge=1,delta=2
    96                           	psect	text43,local,class=CODE,merge=1,delta=2
    97                           	psect	text44,local,class=CODE,merge=1,delta=2
    98                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
   100                           	psect	text47,local,class=CODE,merge=1,delta=2
   101                           	psect	text48,local,class=CODE,merge=1,delta=2
   102                           	psect	text49,local,class=CODE,merge=1,delta=2
   103                           	psect	text50,local,class=CODE,merge=1,delta=2
   104                           	psect	text51,local,class=CODE,merge=1,delta=2
   105                           	psect	text52,local,class=CODE,merge=1,delta=2
   106                           	psect	text53,local,class=CODE,merge=1,delta=2
   107                           	psect	text54,local,class=CODE,merge=1,delta=2
   108                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text56,local,class=CODE,merge=1,delta=2
   110                           	psect	text57,local,class=CODE,merge=1,delta=2
   111                           	psect	text58,local,class=CODE,merge=1,delta=2
   112                           	psect	text59,local,class=CODE,merge=1,delta=2
   113                           	psect	text60,local,class=CODE,merge=1,delta=2
   114                           	psect	text61,local,class=CODE,merge=1,delta=2
   115                           	psect	text62,local,class=CODE,merge=1,delta=2
   116                           	psect	text63,local,class=CODE,merge=1,delta=2,group=2
   117                           	psect	text64,local,class=CODE,merge=1,delta=2,group=2
   118                           	psect	text65,local,class=CODE,merge=1,delta=2
   119                           	psect	text66,local,class=CODE,merge=1,delta=2
   120                           	psect	text67,local,class=CODE,merge=1,delta=2
   121                           	psect	text68,local,class=CODE,merge=1,delta=2
   122                           	psect	text69,local,class=CODE,merge=1,delta=2,group=2
   123                           	psect	text70,local,class=CODE,merge=1,delta=2
   124                           	psect	text71,local,class=CODE,merge=1,delta=2
   125                           	psect	text72,local,class=CODE,merge=1,delta=2
   126                           	psect	text73,local,class=CODE,merge=1,delta=2
   127                           	psect	text74,local,class=CODE,merge=1,delta=2
   128                           	psect	text75,local,class=CODE,merge=1,delta=2
   129                           	psect	text76,local,class=CODE,merge=1,delta=2
   130                           	psect	text77,local,class=CODE,merge=1,delta=2
   131                           	psect	text78,local,class=CODE,merge=1,delta=2
   132                           	psect	text79,local,class=CODE,merge=1,delta=2
   133                           	psect	text80,local,class=CODE,merge=1,delta=2
   134                           	psect	text81,local,class=CODE,merge=1,delta=2
   135                           	psect	text82,local,class=CODE,merge=1,delta=2
   136                           	psect	text83,local,class=CODE,merge=1,delta=2
   137                           	psect	text84,local,class=CODE,merge=1,delta=2
   138                           	psect	text85,local,class=CODE,merge=1,delta=2
   139                           	psect	text86,local,class=CODE,merge=1,delta=2
   140                           	psect	text87,local,class=CODE,merge=1,delta=2
   141                           	psect	text88,local,class=CODE,merge=1,delta=2
   142                           	psect	text89,local,class=CODE,merge=1,delta=2
   143                           	psect	text90,local,class=CODE,merge=1,delta=2
   144                           	psect	text91,local,class=CODE,merge=1,delta=2
   145                           	psect	text92,local,class=CODE,merge=1,delta=2
   146                           	psect	intentry,global,class=CODE,delta=2
   147                           	psect	text94,local,class=CODE,merge=1,delta=2
   148                           	psect	text95,local,class=CODE,merge=1,delta=2
   149                           	psect	text96,local,class=CODE,merge=1,delta=2
   150                           	dabs	1,0xCA0,32
   151                           	dabs	1,0xC20,80
   152                           	dabs	1,0xBA0,80
   153                           	dabs	1,0xB30,64
   154                           	dabs	1,0x26F0,0,_asciiCharTableLookup
   155                           	dabs	1,0x7E,2
   156  0000                     
   157                           ; Version 1.42
   158                           ; Generated 13/04/2017 GMT
   159                           ; 
   160                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   161                           ; All rights reserved.
   162                           ; 
   163                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   164                           ; 
   165                           ; Redistribution and use in source and binary forms, with or without modification, are
   166                           ; permitted provided that the following conditions are met:
   167                           ; 
   168                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   169                           ;        conditions and the following disclaimer.
   170                           ; 
   171                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   172                           ;        of conditions and the following disclaimer in the documentation and/or other
   173                           ;        materials provided with the distribution.
   174                           ; 
   175                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   176                           ;        software without specific prior written permission.
   177                           ; 
   178                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   179                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   180                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   181                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   182                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   183                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   184                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   185                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   186                           ; 
   187                           ; 
   188                           ; Code-generator required, PIC16LF18346 Definitions
   189                           ; 
   190                           ; SFR Addresses
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  0090                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0094                     	;# 
   233  0097                     	;# 
   234  009B                     	;# 
   235  009B                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009E                     	;# 
   239  009F                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  0111                     	;# 
   244  0112                     	;# 
   245  0113                     	;# 
   246  0114                     	;# 
   247  0115                     	;# 
   248  0116                     	;# 
   249  0117                     	;# 
   250  0118                     	;# 
   251  0119                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  018E                     	;# 
   255  0199                     	;# 
   256  0199                     	;# 
   257  0199                     	;# 
   258  019A                     	;# 
   259  019A                     	;# 
   260  019A                     	;# 
   261  019B                     	;# 
   262  019B                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019C                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019D                     	;# 
   271  019D                     	;# 
   272  019E                     	;# 
   273  019E                     	;# 
   274  019E                     	;# 
   275  019F                     	;# 
   276  019F                     	;# 
   277  019F                     	;# 
   278  019F                     	;# 
   279  019F                     	;# 
   280  020C                     	;# 
   281  020D                     	;# 
   282  020E                     	;# 
   283  0211                     	;# 
   284  0211                     	;# 
   285  0212                     	;# 
   286  0212                     	;# 
   287  0213                     	;# 
   288  0213                     	;# 
   289  0214                     	;# 
   290  0214                     	;# 
   291  0215                     	;# 
   292  0215                     	;# 
   293  0215                     	;# 
   294  0215                     	;# 
   295  0216                     	;# 
   296  0216                     	;# 
   297  0217                     	;# 
   298  0217                     	;# 
   299  0219                     	;# 
   300  021A                     	;# 
   301  021B                     	;# 
   302  021C                     	;# 
   303  021D                     	;# 
   304  021D                     	;# 
   305  021E                     	;# 
   306  021F                     	;# 
   307  028C                     	;# 
   308  028D                     	;# 
   309  028E                     	;# 
   310  0291                     	;# 
   311  0291                     	;# 
   312  0292                     	;# 
   313  0293                     	;# 
   314  0294                     	;# 
   315  0295                     	;# 
   316  0295                     	;# 
   317  0296                     	;# 
   318  0297                     	;# 
   319  0298                     	;# 
   320  029F                     	;# 
   321  030C                     	;# 
   322  030D                     	;# 
   323  030E                     	;# 
   324  0311                     	;# 
   325  0311                     	;# 
   326  0312                     	;# 
   327  0313                     	;# 
   328  0314                     	;# 
   329  0315                     	;# 
   330  0315                     	;# 
   331  0316                     	;# 
   332  0317                     	;# 
   333  0318                     	;# 
   334  038C                     	;# 
   335  038D                     	;# 
   336  038E                     	;# 
   337  0391                     	;# 
   338  0392                     	;# 
   339  0393                     	;# 
   340  0394                     	;# 
   341  0395                     	;# 
   342  0396                     	;# 
   343  0397                     	;# 
   344  0398                     	;# 
   345  0399                     	;# 
   346  039A                     	;# 
   347  039C                     	;# 
   348  039D                     	;# 
   349  039E                     	;# 
   350  039F                     	;# 
   351  0411                     	;# 
   352  0411                     	;# 
   353  0412                     	;# 
   354  0413                     	;# 
   355  0414                     	;# 
   356  0415                     	;# 
   357  0416                     	;# 
   358  0417                     	;# 
   359  0418                     	;# 
   360  0418                     	;# 
   361  0419                     	;# 
   362  041A                     	;# 
   363  041B                     	;# 
   364  041C                     	;# 
   365  041D                     	;# 
   366  041E                     	;# 
   367  041F                     	;# 
   368  0498                     	;# 
   369  0498                     	;# 
   370  0499                     	;# 
   371  049A                     	;# 
   372  049B                     	;# 
   373  049B                     	;# 
   374  049C                     	;# 
   375  049D                     	;# 
   376  049E                     	;# 
   377  049F                     	;# 
   378  0617                     	;# 
   379  0618                     	;# 
   380  0619                     	;# 
   381  0619                     	;# 
   382  061A                     	;# 
   383  061B                     	;# 
   384  061C                     	;# 
   385  061C                     	;# 
   386  061F                     	;# 
   387  0691                     	;# 
   388  0692                     	;# 
   389  0693                     	;# 
   390  0694                     	;# 
   391  0695                     	;# 
   392  0696                     	;# 
   393  0697                     	;# 
   394  0698                     	;# 
   395  0699                     	;# 
   396  0711                     	;# 
   397  0712                     	;# 
   398  0713                     	;# 
   399  0714                     	;# 
   400  0715                     	;# 
   401  0716                     	;# 
   402  0717                     	;# 
   403  0718                     	;# 
   404  0719                     	;# 
   405  0891                     	;# 
   406  0891                     	;# 
   407  0891                     	;# 
   408  0891                     	;# 
   409  0891                     	;# 
   410  0891                     	;# 
   411  0892                     	;# 
   412  0892                     	;# 
   413  0892                     	;# 
   414  0893                     	;# 
   415  0893                     	;# 
   416  0893                     	;# 
   417  0893                     	;# 
   418  0893                     	;# 
   419  0893                     	;# 
   420  0894                     	;# 
   421  0894                     	;# 
   422  0894                     	;# 
   423  0895                     	;# 
   424  0895                     	;# 
   425  0895                     	;# 
   426  0896                     	;# 
   427  0896                     	;# 
   428  0896                     	;# 
   429  089B                     	;# 
   430  0911                     	;# 
   431  0912                     	;# 
   432  0913                     	;# 
   433  0914                     	;# 
   434  0915                     	;# 
   435  0916                     	;# 
   436  0918                     	;# 
   437  0919                     	;# 
   438  091A                     	;# 
   439  091B                     	;# 
   440  091C                     	;# 
   441  091D                     	;# 
   442  091E                     	;# 
   443  091F                     	;# 
   444  0E0F                     	;# 
   445  0E10                     	;# 
   446  0E11                     	;# 
   447  0E12                     	;# 
   448  0E13                     	;# 
   449  0E14                     	;# 
   450  0E15                     	;# 
   451  0E16                     	;# 
   452  0E17                     	;# 
   453  0E18                     	;# 
   454  0E19                     	;# 
   455  0E1A                     	;# 
   456  0E1B                     	;# 
   457  0E1C                     	;# 
   458  0E1D                     	;# 
   459  0E1E                     	;# 
   460  0E1F                     	;# 
   461  0E20                     	;# 
   462  0E21                     	;# 
   463  0E22                     	;# 
   464  0E24                     	;# 
   465  0E25                     	;# 
   466  0E28                     	;# 
   467  0E29                     	;# 
   468  0E2A                     	;# 
   469  0E2B                     	;# 
   470  0E2C                     	;# 
   471  0E2D                     	;# 
   472  0E2E                     	;# 
   473  0E2F                     	;# 
   474  0E90                     	;# 
   475  0E91                     	;# 
   476  0E92                     	;# 
   477  0E94                     	;# 
   478  0E95                     	;# 
   479  0E9C                     	;# 
   480  0E9D                     	;# 
   481  0E9E                     	;# 
   482  0E9F                     	;# 
   483  0EA0                     	;# 
   484  0EA1                     	;# 
   485  0EA2                     	;# 
   486  0EA3                     	;# 
   487  0EA4                     	;# 
   488  0EA5                     	;# 
   489  0EA6                     	;# 
   490  0EA7                     	;# 
   491  0F0F                     	;# 
   492  0F10                     	;# 
   493  0F11                     	;# 
   494  0F12                     	;# 
   495  0F13                     	;# 
   496  0F14                     	;# 
   497  0F15                     	;# 
   498  0F16                     	;# 
   499  0F17                     	;# 
   500  0F18                     	;# 
   501  0F19                     	;# 
   502  0F1A                     	;# 
   503  0F1B                     	;# 
   504  0F1C                     	;# 
   505  0F1D                     	;# 
   506  0F1E                     	;# 
   507  0F1F                     	;# 
   508  0F20                     	;# 
   509  0F21                     	;# 
   510  0F22                     	;# 
   511  0F23                     	;# 
   512  0F24                     	;# 
   513  0F25                     	;# 
   514  0F26                     	;# 
   515  0F27                     	;# 
   516  0F28                     	;# 
   517  0F29                     	;# 
   518  0F2A                     	;# 
   519  0F2B                     	;# 
   520  0F2C                     	;# 
   521  0F2D                     	;# 
   522  0F2E                     	;# 
   523  0F2F                     	;# 
   524  0F30                     	;# 
   525  0F31                     	;# 
   526  0F32                     	;# 
   527  0F33                     	;# 
   528  0F34                     	;# 
   529  0F35                     	;# 
   530  0F36                     	;# 
   531  0F37                     	;# 
   532  0FE4                     	;# 
   533  0FE5                     	;# 
   534  0FE6                     	;# 
   535  0FE7                     	;# 
   536  0FE8                     	;# 
   537  0FE9                     	;# 
   538  0FEA                     	;# 
   539  0FEB                     	;# 
   540  0FED                     	;# 
   541  0FEE                     	;# 
   542  0FEF                     	;# 
   543  0000                     	;# 
   544  0001                     	;# 
   545  0002                     	;# 
   546  0003                     	;# 
   547  0004                     	;# 
   548  0005                     	;# 
   549  0006                     	;# 
   550  0007                     	;# 
   551  0008                     	;# 
   552  0009                     	;# 
   553  000A                     	;# 
   554  000B                     	;# 
   555  000C                     	;# 
   556  000D                     	;# 
   557  000E                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0016                     	;# 
   567  0017                     	;# 
   568  0018                     	;# 
   569  0019                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  001D                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  008E                     	;# 
   580  0090                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0094                     	;# 
   585  0097                     	;# 
   586  009B                     	;# 
   587  009B                     	;# 
   588  009C                     	;# 
   589  009D                     	;# 
   590  009E                     	;# 
   591  009F                     	;# 
   592  010C                     	;# 
   593  010D                     	;# 
   594  010E                     	;# 
   595  0111                     	;# 
   596  0112                     	;# 
   597  0113                     	;# 
   598  0114                     	;# 
   599  0115                     	;# 
   600  0116                     	;# 
   601  0117                     	;# 
   602  0118                     	;# 
   603  0119                     	;# 
   604  018C                     	;# 
   605  018D                     	;# 
   606  018E                     	;# 
   607  0199                     	;# 
   608  0199                     	;# 
   609  0199                     	;# 
   610  019A                     	;# 
   611  019A                     	;# 
   612  019A                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019C                     	;# 
   621  019D                     	;# 
   622  019D                     	;# 
   623  019D                     	;# 
   624  019E                     	;# 
   625  019E                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  019F                     	;# 
   629  019F                     	;# 
   630  019F                     	;# 
   631  019F                     	;# 
   632  020C                     	;# 
   633  020D                     	;# 
   634  020E                     	;# 
   635  0211                     	;# 
   636  0211                     	;# 
   637  0212                     	;# 
   638  0212                     	;# 
   639  0213                     	;# 
   640  0213                     	;# 
   641  0214                     	;# 
   642  0214                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0216                     	;# 
   648  0216                     	;# 
   649  0217                     	;# 
   650  0217                     	;# 
   651  0219                     	;# 
   652  021A                     	;# 
   653  021B                     	;# 
   654  021C                     	;# 
   655  021D                     	;# 
   656  021D                     	;# 
   657  021E                     	;# 
   658  021F                     	;# 
   659  028C                     	;# 
   660  028D                     	;# 
   661  028E                     	;# 
   662  0291                     	;# 
   663  0291                     	;# 
   664  0292                     	;# 
   665  0293                     	;# 
   666  0294                     	;# 
   667  0295                     	;# 
   668  0295                     	;# 
   669  0296                     	;# 
   670  0297                     	;# 
   671  0298                     	;# 
   672  029F                     	;# 
   673  030C                     	;# 
   674  030D                     	;# 
   675  030E                     	;# 
   676  0311                     	;# 
   677  0311                     	;# 
   678  0312                     	;# 
   679  0313                     	;# 
   680  0314                     	;# 
   681  0315                     	;# 
   682  0315                     	;# 
   683  0316                     	;# 
   684  0317                     	;# 
   685  0318                     	;# 
   686  038C                     	;# 
   687  038D                     	;# 
   688  038E                     	;# 
   689  0391                     	;# 
   690  0392                     	;# 
   691  0393                     	;# 
   692  0394                     	;# 
   693  0395                     	;# 
   694  0396                     	;# 
   695  0397                     	;# 
   696  0398                     	;# 
   697  0399                     	;# 
   698  039A                     	;# 
   699  039C                     	;# 
   700  039D                     	;# 
   701  039E                     	;# 
   702  039F                     	;# 
   703  0411                     	;# 
   704  0411                     	;# 
   705  0412                     	;# 
   706  0413                     	;# 
   707  0414                     	;# 
   708  0415                     	;# 
   709  0416                     	;# 
   710  0417                     	;# 
   711  0418                     	;# 
   712  0418                     	;# 
   713  0419                     	;# 
   714  041A                     	;# 
   715  041B                     	;# 
   716  041C                     	;# 
   717  041D                     	;# 
   718  041E                     	;# 
   719  041F                     	;# 
   720  0498                     	;# 
   721  0498                     	;# 
   722  0499                     	;# 
   723  049A                     	;# 
   724  049B                     	;# 
   725  049B                     	;# 
   726  049C                     	;# 
   727  049D                     	;# 
   728  049E                     	;# 
   729  049F                     	;# 
   730  0617                     	;# 
   731  0618                     	;# 
   732  0619                     	;# 
   733  0619                     	;# 
   734  061A                     	;# 
   735  061B                     	;# 
   736  061C                     	;# 
   737  061C                     	;# 
   738  061F                     	;# 
   739  0691                     	;# 
   740  0692                     	;# 
   741  0693                     	;# 
   742  0694                     	;# 
   743  0695                     	;# 
   744  0696                     	;# 
   745  0697                     	;# 
   746  0698                     	;# 
   747  0699                     	;# 
   748  0711                     	;# 
   749  0712                     	;# 
   750  0713                     	;# 
   751  0714                     	;# 
   752  0715                     	;# 
   753  0716                     	;# 
   754  0717                     	;# 
   755  0718                     	;# 
   756  0719                     	;# 
   757  0891                     	;# 
   758  0891                     	;# 
   759  0891                     	;# 
   760  0891                     	;# 
   761  0891                     	;# 
   762  0891                     	;# 
   763  0892                     	;# 
   764  0892                     	;# 
   765  0892                     	;# 
   766  0893                     	;# 
   767  0893                     	;# 
   768  0893                     	;# 
   769  0893                     	;# 
   770  0893                     	;# 
   771  0893                     	;# 
   772  0894                     	;# 
   773  0894                     	;# 
   774  0894                     	;# 
   775  0895                     	;# 
   776  0895                     	;# 
   777  0895                     	;# 
   778  0896                     	;# 
   779  0896                     	;# 
   780  0896                     	;# 
   781  089B                     	;# 
   782  0911                     	;# 
   783  0912                     	;# 
   784  0913                     	;# 
   785  0914                     	;# 
   786  0915                     	;# 
   787  0916                     	;# 
   788  0918                     	;# 
   789  0919                     	;# 
   790  091A                     	;# 
   791  091B                     	;# 
   792  091C                     	;# 
   793  091D                     	;# 
   794  091E                     	;# 
   795  091F                     	;# 
   796  0E0F                     	;# 
   797  0E10                     	;# 
   798  0E11                     	;# 
   799  0E12                     	;# 
   800  0E13                     	;# 
   801  0E14                     	;# 
   802  0E15                     	;# 
   803  0E16                     	;# 
   804  0E17                     	;# 
   805  0E18                     	;# 
   806  0E19                     	;# 
   807  0E1A                     	;# 
   808  0E1B                     	;# 
   809  0E1C                     	;# 
   810  0E1D                     	;# 
   811  0E1E                     	;# 
   812  0E1F                     	;# 
   813  0E20                     	;# 
   814  0E21                     	;# 
   815  0E22                     	;# 
   816  0E24                     	;# 
   817  0E25                     	;# 
   818  0E28                     	;# 
   819  0E29                     	;# 
   820  0E2A                     	;# 
   821  0E2B                     	;# 
   822  0E2C                     	;# 
   823  0E2D                     	;# 
   824  0E2E                     	;# 
   825  0E2F                     	;# 
   826  0E90                     	;# 
   827  0E91                     	;# 
   828  0E92                     	;# 
   829  0E94                     	;# 
   830  0E95                     	;# 
   831  0E9C                     	;# 
   832  0E9D                     	;# 
   833  0E9E                     	;# 
   834  0E9F                     	;# 
   835  0EA0                     	;# 
   836  0EA1                     	;# 
   837  0EA2                     	;# 
   838  0EA3                     	;# 
   839  0EA4                     	;# 
   840  0EA5                     	;# 
   841  0EA6                     	;# 
   842  0EA7                     	;# 
   843  0F0F                     	;# 
   844  0F10                     	;# 
   845  0F11                     	;# 
   846  0F12                     	;# 
   847  0F13                     	;# 
   848  0F14                     	;# 
   849  0F15                     	;# 
   850  0F16                     	;# 
   851  0F17                     	;# 
   852  0F18                     	;# 
   853  0F19                     	;# 
   854  0F1A                     	;# 
   855  0F1B                     	;# 
   856  0F1C                     	;# 
   857  0F1D                     	;# 
   858  0F1E                     	;# 
   859  0F1F                     	;# 
   860  0F20                     	;# 
   861  0F21                     	;# 
   862  0F22                     	;# 
   863  0F23                     	;# 
   864  0F24                     	;# 
   865  0F25                     	;# 
   866  0F26                     	;# 
   867  0F27                     	;# 
   868  0F28                     	;# 
   869  0F29                     	;# 
   870  0F2A                     	;# 
   871  0F2B                     	;# 
   872  0F2C                     	;# 
   873  0F2D                     	;# 
   874  0F2E                     	;# 
   875  0F2F                     	;# 
   876  0F30                     	;# 
   877  0F31                     	;# 
   878  0F32                     	;# 
   879  0F33                     	;# 
   880  0F34                     	;# 
   881  0F35                     	;# 
   882  0F36                     	;# 
   883  0F37                     	;# 
   884  0FE4                     	;# 
   885  0FE5                     	;# 
   886  0FE6                     	;# 
   887  0FE7                     	;# 
   888  0FE8                     	;# 
   889  0FE9                     	;# 
   890  0FEA                     	;# 
   891  0FEB                     	;# 
   892  0FED                     	;# 
   893  0FEE                     	;# 
   894  0FEF                     	;# 
   895  0000                     	;# 
   896  0001                     	;# 
   897  0002                     	;# 
   898  0003                     	;# 
   899  0004                     	;# 
   900  0005                     	;# 
   901  0006                     	;# 
   902  0007                     	;# 
   903  0008                     	;# 
   904  0009                     	;# 
   905  000A                     	;# 
   906  000B                     	;# 
   907  000C                     	;# 
   908  000D                     	;# 
   909  000E                     	;# 
   910  0010                     	;# 
   911  0011                     	;# 
   912  0012                     	;# 
   913  0013                     	;# 
   914  0014                     	;# 
   915  0015                     	;# 
   916  0015                     	;# 
   917  0016                     	;# 
   918  0016                     	;# 
   919  0017                     	;# 
   920  0018                     	;# 
   921  0019                     	;# 
   922  0019                     	;# 
   923  001A                     	;# 
   924  001B                     	;# 
   925  001C                     	;# 
   926  001D                     	;# 
   927  001E                     	;# 
   928  001F                     	;# 
   929  008C                     	;# 
   930  008D                     	;# 
   931  008E                     	;# 
   932  0090                     	;# 
   933  0091                     	;# 
   934  0092                     	;# 
   935  0093                     	;# 
   936  0094                     	;# 
   937  0097                     	;# 
   938  009B                     	;# 
   939  009B                     	;# 
   940  009C                     	;# 
   941  009D                     	;# 
   942  009E                     	;# 
   943  009F                     	;# 
   944  010C                     	;# 
   945  010D                     	;# 
   946  010E                     	;# 
   947  0111                     	;# 
   948  0112                     	;# 
   949  0113                     	;# 
   950  0114                     	;# 
   951  0115                     	;# 
   952  0116                     	;# 
   953  0117                     	;# 
   954  0118                     	;# 
   955  0119                     	;# 
   956  018C                     	;# 
   957  018D                     	;# 
   958  018E                     	;# 
   959  0199                     	;# 
   960  0199                     	;# 
   961  0199                     	;# 
   962  019A                     	;# 
   963  019A                     	;# 
   964  019A                     	;# 
   965  019B                     	;# 
   966  019B                     	;# 
   967  019B                     	;# 
   968  019B                     	;# 
   969  019B                     	;# 
   970  019C                     	;# 
   971  019C                     	;# 
   972  019C                     	;# 
   973  019D                     	;# 
   974  019D                     	;# 
   975  019D                     	;# 
   976  019E                     	;# 
   977  019E                     	;# 
   978  019E                     	;# 
   979  019F                     	;# 
   980  019F                     	;# 
   981  019F                     	;# 
   982  019F                     	;# 
   983  019F                     	;# 
   984  020C                     	;# 
   985  020D                     	;# 
   986  020E                     	;# 
   987  0211                     	;# 
   988  0211                     	;# 
   989  0212                     	;# 
   990  0212                     	;# 
   991  0213                     	;# 
   992  0213                     	;# 
   993  0214                     	;# 
   994  0214                     	;# 
   995  0215                     	;# 
   996  0215                     	;# 
   997  0215                     	;# 
   998  0215                     	;# 
   999  0216                     	;# 
  1000  0216                     	;# 
  1001  0217                     	;# 
  1002  0217                     	;# 
  1003  0219                     	;# 
  1004  021A                     	;# 
  1005  021B                     	;# 
  1006  021C                     	;# 
  1007  021D                     	;# 
  1008  021D                     	;# 
  1009  021E                     	;# 
  1010  021F                     	;# 
  1011  028C                     	;# 
  1012  028D                     	;# 
  1013  028E                     	;# 
  1014  0291                     	;# 
  1015  0291                     	;# 
  1016  0292                     	;# 
  1017  0293                     	;# 
  1018  0294                     	;# 
  1019  0295                     	;# 
  1020  0295                     	;# 
  1021  0296                     	;# 
  1022  0297                     	;# 
  1023  0298                     	;# 
  1024  029F                     	;# 
  1025  030C                     	;# 
  1026  030D                     	;# 
  1027  030E                     	;# 
  1028  0311                     	;# 
  1029  0311                     	;# 
  1030  0312                     	;# 
  1031  0313                     	;# 
  1032  0314                     	;# 
  1033  0315                     	;# 
  1034  0315                     	;# 
  1035  0316                     	;# 
  1036  0317                     	;# 
  1037  0318                     	;# 
  1038  038C                     	;# 
  1039  038D                     	;# 
  1040  038E                     	;# 
  1041  0391                     	;# 
  1042  0392                     	;# 
  1043  0393                     	;# 
  1044  0394                     	;# 
  1045  0395                     	;# 
  1046  0396                     	;# 
  1047  0397                     	;# 
  1048  0398                     	;# 
  1049  0399                     	;# 
  1050  039A                     	;# 
  1051  039C                     	;# 
  1052  039D                     	;# 
  1053  039E                     	;# 
  1054  039F                     	;# 
  1055  0411                     	;# 
  1056  0411                     	;# 
  1057  0412                     	;# 
  1058  0413                     	;# 
  1059  0414                     	;# 
  1060  0415                     	;# 
  1061  0416                     	;# 
  1062  0417                     	;# 
  1063  0418                     	;# 
  1064  0418                     	;# 
  1065  0419                     	;# 
  1066  041A                     	;# 
  1067  041B                     	;# 
  1068  041C                     	;# 
  1069  041D                     	;# 
  1070  041E                     	;# 
  1071  041F                     	;# 
  1072  0498                     	;# 
  1073  0498                     	;# 
  1074  0499                     	;# 
  1075  049A                     	;# 
  1076  049B                     	;# 
  1077  049B                     	;# 
  1078  049C                     	;# 
  1079  049D                     	;# 
  1080  049E                     	;# 
  1081  049F                     	;# 
  1082  0617                     	;# 
  1083  0618                     	;# 
  1084  0619                     	;# 
  1085  0619                     	;# 
  1086  061A                     	;# 
  1087  061B                     	;# 
  1088  061C                     	;# 
  1089  061C                     	;# 
  1090  061F                     	;# 
  1091  0691                     	;# 
  1092  0692                     	;# 
  1093  0693                     	;# 
  1094  0694                     	;# 
  1095  0695                     	;# 
  1096  0696                     	;# 
  1097  0697                     	;# 
  1098  0698                     	;# 
  1099  0699                     	;# 
  1100  0711                     	;# 
  1101  0712                     	;# 
  1102  0713                     	;# 
  1103  0714                     	;# 
  1104  0715                     	;# 
  1105  0716                     	;# 
  1106  0717                     	;# 
  1107  0718                     	;# 
  1108  0719                     	;# 
  1109  0891                     	;# 
  1110  0891                     	;# 
  1111  0891                     	;# 
  1112  0891                     	;# 
  1113  0891                     	;# 
  1114  0891                     	;# 
  1115  0892                     	;# 
  1116  0892                     	;# 
  1117  0892                     	;# 
  1118  0893                     	;# 
  1119  0893                     	;# 
  1120  0893                     	;# 
  1121  0893                     	;# 
  1122  0893                     	;# 
  1123  0893                     	;# 
  1124  0894                     	;# 
  1125  0894                     	;# 
  1126  0894                     	;# 
  1127  0895                     	;# 
  1128  0895                     	;# 
  1129  0895                     	;# 
  1130  0896                     	;# 
  1131  0896                     	;# 
  1132  0896                     	;# 
  1133  089B                     	;# 
  1134  0911                     	;# 
  1135  0912                     	;# 
  1136  0913                     	;# 
  1137  0914                     	;# 
  1138  0915                     	;# 
  1139  0916                     	;# 
  1140  0918                     	;# 
  1141  0919                     	;# 
  1142  091A                     	;# 
  1143  091B                     	;# 
  1144  091C                     	;# 
  1145  091D                     	;# 
  1146  091E                     	;# 
  1147  091F                     	;# 
  1148  0E0F                     	;# 
  1149  0E10                     	;# 
  1150  0E11                     	;# 
  1151  0E12                     	;# 
  1152  0E13                     	;# 
  1153  0E14                     	;# 
  1154  0E15                     	;# 
  1155  0E16                     	;# 
  1156  0E17                     	;# 
  1157  0E18                     	;# 
  1158  0E19                     	;# 
  1159  0E1A                     	;# 
  1160  0E1B                     	;# 
  1161  0E1C                     	;# 
  1162  0E1D                     	;# 
  1163  0E1E                     	;# 
  1164  0E1F                     	;# 
  1165  0E20                     	;# 
  1166  0E21                     	;# 
  1167  0E22                     	;# 
  1168  0E24                     	;# 
  1169  0E25                     	;# 
  1170  0E28                     	;# 
  1171  0E29                     	;# 
  1172  0E2A                     	;# 
  1173  0E2B                     	;# 
  1174  0E2C                     	;# 
  1175  0E2D                     	;# 
  1176  0E2E                     	;# 
  1177  0E2F                     	;# 
  1178  0E90                     	;# 
  1179  0E91                     	;# 
  1180  0E92                     	;# 
  1181  0E94                     	;# 
  1182  0E95                     	;# 
  1183  0E9C                     	;# 
  1184  0E9D                     	;# 
  1185  0E9E                     	;# 
  1186  0E9F                     	;# 
  1187  0EA0                     	;# 
  1188  0EA1                     	;# 
  1189  0EA2                     	;# 
  1190  0EA3                     	;# 
  1191  0EA4                     	;# 
  1192  0EA5                     	;# 
  1193  0EA6                     	;# 
  1194  0EA7                     	;# 
  1195  0F0F                     	;# 
  1196  0F10                     	;# 
  1197  0F11                     	;# 
  1198  0F12                     	;# 
  1199  0F13                     	;# 
  1200  0F14                     	;# 
  1201  0F15                     	;# 
  1202  0F16                     	;# 
  1203  0F17                     	;# 
  1204  0F18                     	;# 
  1205  0F19                     	;# 
  1206  0F1A                     	;# 
  1207  0F1B                     	;# 
  1208  0F1C                     	;# 
  1209  0F1D                     	;# 
  1210  0F1E                     	;# 
  1211  0F1F                     	;# 
  1212  0F20                     	;# 
  1213  0F21                     	;# 
  1214  0F22                     	;# 
  1215  0F23                     	;# 
  1216  0F24                     	;# 
  1217  0F25                     	;# 
  1218  0F26                     	;# 
  1219  0F27                     	;# 
  1220  0F28                     	;# 
  1221  0F29                     	;# 
  1222  0F2A                     	;# 
  1223  0F2B                     	;# 
  1224  0F2C                     	;# 
  1225  0F2D                     	;# 
  1226  0F2E                     	;# 
  1227  0F2F                     	;# 
  1228  0F30                     	;# 
  1229  0F31                     	;# 
  1230  0F32                     	;# 
  1231  0F33                     	;# 
  1232  0F34                     	;# 
  1233  0F35                     	;# 
  1234  0F36                     	;# 
  1235  0F37                     	;# 
  1236  0FE4                     	;# 
  1237  0FE5                     	;# 
  1238  0FE6                     	;# 
  1239  0FE7                     	;# 
  1240  0FE8                     	;# 
  1241  0FE9                     	;# 
  1242  0FEA                     	;# 
  1243  0FEB                     	;# 
  1244  0FED                     	;# 
  1245  0FEE                     	;# 
  1246  0FEF                     	;# 
  1247  0000                     	;# 
  1248  0001                     	;# 
  1249  0002                     	;# 
  1250  0003                     	;# 
  1251  0004                     	;# 
  1252  0005                     	;# 
  1253  0006                     	;# 
  1254  0007                     	;# 
  1255  0008                     	;# 
  1256  0009                     	;# 
  1257  000A                     	;# 
  1258  000B                     	;# 
  1259  000C                     	;# 
  1260  000D                     	;# 
  1261  000E                     	;# 
  1262  0010                     	;# 
  1263  0011                     	;# 
  1264  0012                     	;# 
  1265  0013                     	;# 
  1266  0014                     	;# 
  1267  0015                     	;# 
  1268  0015                     	;# 
  1269  0016                     	;# 
  1270  0016                     	;# 
  1271  0017                     	;# 
  1272  0018                     	;# 
  1273  0019                     	;# 
  1274  0019                     	;# 
  1275  001A                     	;# 
  1276  001B                     	;# 
  1277  001C                     	;# 
  1278  001D                     	;# 
  1279  001E                     	;# 
  1280  001F                     	;# 
  1281  008C                     	;# 
  1282  008D                     	;# 
  1283  008E                     	;# 
  1284  0090                     	;# 
  1285  0091                     	;# 
  1286  0092                     	;# 
  1287  0093                     	;# 
  1288  0094                     	;# 
  1289  0097                     	;# 
  1290  009B                     	;# 
  1291  009B                     	;# 
  1292  009C                     	;# 
  1293  009D                     	;# 
  1294  009E                     	;# 
  1295  009F                     	;# 
  1296  010C                     	;# 
  1297  010D                     	;# 
  1298  010E                     	;# 
  1299  0111                     	;# 
  1300  0112                     	;# 
  1301  0113                     	;# 
  1302  0114                     	;# 
  1303  0115                     	;# 
  1304  0116                     	;# 
  1305  0117                     	;# 
  1306  0118                     	;# 
  1307  0119                     	;# 
  1308  018C                     	;# 
  1309  018D                     	;# 
  1310  018E                     	;# 
  1311  0199                     	;# 
  1312  0199                     	;# 
  1313  0199                     	;# 
  1314  019A                     	;# 
  1315  019A                     	;# 
  1316  019A                     	;# 
  1317  019B                     	;# 
  1318  019B                     	;# 
  1319  019B                     	;# 
  1320  019B                     	;# 
  1321  019B                     	;# 
  1322  019C                     	;# 
  1323  019C                     	;# 
  1324  019C                     	;# 
  1325  019D                     	;# 
  1326  019D                     	;# 
  1327  019D                     	;# 
  1328  019E                     	;# 
  1329  019E                     	;# 
  1330  019E                     	;# 
  1331  019F                     	;# 
  1332  019F                     	;# 
  1333  019F                     	;# 
  1334  019F                     	;# 
  1335  019F                     	;# 
  1336  020C                     	;# 
  1337  020D                     	;# 
  1338  020E                     	;# 
  1339  0211                     	;# 
  1340  0211                     	;# 
  1341  0212                     	;# 
  1342  0212                     	;# 
  1343  0213                     	;# 
  1344  0213                     	;# 
  1345  0214                     	;# 
  1346  0214                     	;# 
  1347  0215                     	;# 
  1348  0215                     	;# 
  1349  0215                     	;# 
  1350  0215                     	;# 
  1351  0216                     	;# 
  1352  0216                     	;# 
  1353  0217                     	;# 
  1354  0217                     	;# 
  1355  0219                     	;# 
  1356  021A                     	;# 
  1357  021B                     	;# 
  1358  021C                     	;# 
  1359  021D                     	;# 
  1360  021D                     	;# 
  1361  021E                     	;# 
  1362  021F                     	;# 
  1363  028C                     	;# 
  1364  028D                     	;# 
  1365  028E                     	;# 
  1366  0291                     	;# 
  1367  0291                     	;# 
  1368  0292                     	;# 
  1369  0293                     	;# 
  1370  0294                     	;# 
  1371  0295                     	;# 
  1372  0295                     	;# 
  1373  0296                     	;# 
  1374  0297                     	;# 
  1375  0298                     	;# 
  1376  029F                     	;# 
  1377  030C                     	;# 
  1378  030D                     	;# 
  1379  030E                     	;# 
  1380  0311                     	;# 
  1381  0311                     	;# 
  1382  0312                     	;# 
  1383  0313                     	;# 
  1384  0314                     	;# 
  1385  0315                     	;# 
  1386  0315                     	;# 
  1387  0316                     	;# 
  1388  0317                     	;# 
  1389  0318                     	;# 
  1390  038C                     	;# 
  1391  038D                     	;# 
  1392  038E                     	;# 
  1393  0391                     	;# 
  1394  0392                     	;# 
  1395  0393                     	;# 
  1396  0394                     	;# 
  1397  0395                     	;# 
  1398  0396                     	;# 
  1399  0397                     	;# 
  1400  0398                     	;# 
  1401  0399                     	;# 
  1402  039A                     	;# 
  1403  039C                     	;# 
  1404  039D                     	;# 
  1405  039E                     	;# 
  1406  039F                     	;# 
  1407  0411                     	;# 
  1408  0411                     	;# 
  1409  0412                     	;# 
  1410  0413                     	;# 
  1411  0414                     	;# 
  1412  0415                     	;# 
  1413  0416                     	;# 
  1414  0417                     	;# 
  1415  0418                     	;# 
  1416  0418                     	;# 
  1417  0419                     	;# 
  1418  041A                     	;# 
  1419  041B                     	;# 
  1420  041C                     	;# 
  1421  041D                     	;# 
  1422  041E                     	;# 
  1423  041F                     	;# 
  1424  0498                     	;# 
  1425  0498                     	;# 
  1426  0499                     	;# 
  1427  049A                     	;# 
  1428  049B                     	;# 
  1429  049B                     	;# 
  1430  049C                     	;# 
  1431  049D                     	;# 
  1432  049E                     	;# 
  1433  049F                     	;# 
  1434  0617                     	;# 
  1435  0618                     	;# 
  1436  0619                     	;# 
  1437  0619                     	;# 
  1438  061A                     	;# 
  1439  061B                     	;# 
  1440  061C                     	;# 
  1441  061C                     	;# 
  1442  061F                     	;# 
  1443  0691                     	;# 
  1444  0692                     	;# 
  1445  0693                     	;# 
  1446  0694                     	;# 
  1447  0695                     	;# 
  1448  0696                     	;# 
  1449  0697                     	;# 
  1450  0698                     	;# 
  1451  0699                     	;# 
  1452  0711                     	;# 
  1453  0712                     	;# 
  1454  0713                     	;# 
  1455  0714                     	;# 
  1456  0715                     	;# 
  1457  0716                     	;# 
  1458  0717                     	;# 
  1459  0718                     	;# 
  1460  0719                     	;# 
  1461  0891                     	;# 
  1462  0891                     	;# 
  1463  0891                     	;# 
  1464  0891                     	;# 
  1465  0891                     	;# 
  1466  0891                     	;# 
  1467  0892                     	;# 
  1468  0892                     	;# 
  1469  0892                     	;# 
  1470  0893                     	;# 
  1471  0893                     	;# 
  1472  0893                     	;# 
  1473  0893                     	;# 
  1474  0893                     	;# 
  1475  0893                     	;# 
  1476  0894                     	;# 
  1477  0894                     	;# 
  1478  0894                     	;# 
  1479  0895                     	;# 
  1480  0895                     	;# 
  1481  0895                     	;# 
  1482  0896                     	;# 
  1483  0896                     	;# 
  1484  0896                     	;# 
  1485  089B                     	;# 
  1486  0911                     	;# 
  1487  0912                     	;# 
  1488  0913                     	;# 
  1489  0914                     	;# 
  1490  0915                     	;# 
  1491  0916                     	;# 
  1492  0918                     	;# 
  1493  0919                     	;# 
  1494  091A                     	;# 
  1495  091B                     	;# 
  1496  091C                     	;# 
  1497  091D                     	;# 
  1498  091E                     	;# 
  1499  091F                     	;# 
  1500  0E0F                     	;# 
  1501  0E10                     	;# 
  1502  0E11                     	;# 
  1503  0E12                     	;# 
  1504  0E13                     	;# 
  1505  0E14                     	;# 
  1506  0E15                     	;# 
  1507  0E16                     	;# 
  1508  0E17                     	;# 
  1509  0E18                     	;# 
  1510  0E19                     	;# 
  1511  0E1A                     	;# 
  1512  0E1B                     	;# 
  1513  0E1C                     	;# 
  1514  0E1D                     	;# 
  1515  0E1E                     	;# 
  1516  0E1F                     	;# 
  1517  0E20                     	;# 
  1518  0E21                     	;# 
  1519  0E22                     	;# 
  1520  0E24                     	;# 
  1521  0E25                     	;# 
  1522  0E28                     	;# 
  1523  0E29                     	;# 
  1524  0E2A                     	;# 
  1525  0E2B                     	;# 
  1526  0E2C                     	;# 
  1527  0E2D                     	;# 
  1528  0E2E                     	;# 
  1529  0E2F                     	;# 
  1530  0E90                     	;# 
  1531  0E91                     	;# 
  1532  0E92                     	;# 
  1533  0E94                     	;# 
  1534  0E95                     	;# 
  1535  0E9C                     	;# 
  1536  0E9D                     	;# 
  1537  0E9E                     	;# 
  1538  0E9F                     	;# 
  1539  0EA0                     	;# 
  1540  0EA1                     	;# 
  1541  0EA2                     	;# 
  1542  0EA3                     	;# 
  1543  0EA4                     	;# 
  1544  0EA5                     	;# 
  1545  0EA6                     	;# 
  1546  0EA7                     	;# 
  1547  0F0F                     	;# 
  1548  0F10                     	;# 
  1549  0F11                     	;# 
  1550  0F12                     	;# 
  1551  0F13                     	;# 
  1552  0F14                     	;# 
  1553  0F15                     	;# 
  1554  0F16                     	;# 
  1555  0F17                     	;# 
  1556  0F18                     	;# 
  1557  0F19                     	;# 
  1558  0F1A                     	;# 
  1559  0F1B                     	;# 
  1560  0F1C                     	;# 
  1561  0F1D                     	;# 
  1562  0F1E                     	;# 
  1563  0F1F                     	;# 
  1564  0F20                     	;# 
  1565  0F21                     	;# 
  1566  0F22                     	;# 
  1567  0F23                     	;# 
  1568  0F24                     	;# 
  1569  0F25                     	;# 
  1570  0F26                     	;# 
  1571  0F27                     	;# 
  1572  0F28                     	;# 
  1573  0F29                     	;# 
  1574  0F2A                     	;# 
  1575  0F2B                     	;# 
  1576  0F2C                     	;# 
  1577  0F2D                     	;# 
  1578  0F2E                     	;# 
  1579  0F2F                     	;# 
  1580  0F30                     	;# 
  1581  0F31                     	;# 
  1582  0F32                     	;# 
  1583  0F33                     	;# 
  1584  0F34                     	;# 
  1585  0F35                     	;# 
  1586  0F36                     	;# 
  1587  0F37                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0014                     	;# 
  1619  0015                     	;# 
  1620  0015                     	;# 
  1621  0016                     	;# 
  1622  0016                     	;# 
  1623  0017                     	;# 
  1624  0018                     	;# 
  1625  0019                     	;# 
  1626  0019                     	;# 
  1627  001A                     	;# 
  1628  001B                     	;# 
  1629  001C                     	;# 
  1630  001D                     	;# 
  1631  001E                     	;# 
  1632  001F                     	;# 
  1633  008C                     	;# 
  1634  008D                     	;# 
  1635  008E                     	;# 
  1636  0090                     	;# 
  1637  0091                     	;# 
  1638  0092                     	;# 
  1639  0093                     	;# 
  1640  0094                     	;# 
  1641  0097                     	;# 
  1642  009B                     	;# 
  1643  009B                     	;# 
  1644  009C                     	;# 
  1645  009D                     	;# 
  1646  009E                     	;# 
  1647  009F                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  0111                     	;# 
  1652  0112                     	;# 
  1653  0113                     	;# 
  1654  0114                     	;# 
  1655  0115                     	;# 
  1656  0116                     	;# 
  1657  0117                     	;# 
  1658  0118                     	;# 
  1659  0119                     	;# 
  1660  018C                     	;# 
  1661  018D                     	;# 
  1662  018E                     	;# 
  1663  0199                     	;# 
  1664  0199                     	;# 
  1665  0199                     	;# 
  1666  019A                     	;# 
  1667  019A                     	;# 
  1668  019A                     	;# 
  1669  019B                     	;# 
  1670  019B                     	;# 
  1671  019B                     	;# 
  1672  019B                     	;# 
  1673  019B                     	;# 
  1674  019C                     	;# 
  1675  019C                     	;# 
  1676  019C                     	;# 
  1677  019D                     	;# 
  1678  019D                     	;# 
  1679  019D                     	;# 
  1680  019E                     	;# 
  1681  019E                     	;# 
  1682  019E                     	;# 
  1683  019F                     	;# 
  1684  019F                     	;# 
  1685  019F                     	;# 
  1686  019F                     	;# 
  1687  019F                     	;# 
  1688  020C                     	;# 
  1689  020D                     	;# 
  1690  020E                     	;# 
  1691  0211                     	;# 
  1692  0211                     	;# 
  1693  0212                     	;# 
  1694  0212                     	;# 
  1695  0213                     	;# 
  1696  0213                     	;# 
  1697  0214                     	;# 
  1698  0214                     	;# 
  1699  0215                     	;# 
  1700  0215                     	;# 
  1701  0215                     	;# 
  1702  0215                     	;# 
  1703  0216                     	;# 
  1704  0216                     	;# 
  1705  0217                     	;# 
  1706  0217                     	;# 
  1707  0219                     	;# 
  1708  021A                     	;# 
  1709  021B                     	;# 
  1710  021C                     	;# 
  1711  021D                     	;# 
  1712  021D                     	;# 
  1713  021E                     	;# 
  1714  021F                     	;# 
  1715  028C                     	;# 
  1716  028D                     	;# 
  1717  028E                     	;# 
  1718  0291                     	;# 
  1719  0291                     	;# 
  1720  0292                     	;# 
  1721  0293                     	;# 
  1722  0294                     	;# 
  1723  0295                     	;# 
  1724  0295                     	;# 
  1725  0296                     	;# 
  1726  0297                     	;# 
  1727  0298                     	;# 
  1728  029F                     	;# 
  1729  030C                     	;# 
  1730  030D                     	;# 
  1731  030E                     	;# 
  1732  0311                     	;# 
  1733  0311                     	;# 
  1734  0312                     	;# 
  1735  0313                     	;# 
  1736  0314                     	;# 
  1737  0315                     	;# 
  1738  0315                     	;# 
  1739  0316                     	;# 
  1740  0317                     	;# 
  1741  0318                     	;# 
  1742  038C                     	;# 
  1743  038D                     	;# 
  1744  038E                     	;# 
  1745  0391                     	;# 
  1746  0392                     	;# 
  1747  0393                     	;# 
  1748  0394                     	;# 
  1749  0395                     	;# 
  1750  0396                     	;# 
  1751  0397                     	;# 
  1752  0398                     	;# 
  1753  0399                     	;# 
  1754  039A                     	;# 
  1755  039C                     	;# 
  1756  039D                     	;# 
  1757  039E                     	;# 
  1758  039F                     	;# 
  1759  0411                     	;# 
  1760  0411                     	;# 
  1761  0412                     	;# 
  1762  0413                     	;# 
  1763  0414                     	;# 
  1764  0415                     	;# 
  1765  0416                     	;# 
  1766  0417                     	;# 
  1767  0418                     	;# 
  1768  0418                     	;# 
  1769  0419                     	;# 
  1770  041A                     	;# 
  1771  041B                     	;# 
  1772  041C                     	;# 
  1773  041D                     	;# 
  1774  041E                     	;# 
  1775  041F                     	;# 
  1776  0498                     	;# 
  1777  0498                     	;# 
  1778  0499                     	;# 
  1779  049A                     	;# 
  1780  049B                     	;# 
  1781  049B                     	;# 
  1782  049C                     	;# 
  1783  049D                     	;# 
  1784  049E                     	;# 
  1785  049F                     	;# 
  1786  0617                     	;# 
  1787  0618                     	;# 
  1788  0619                     	;# 
  1789  0619                     	;# 
  1790  061A                     	;# 
  1791  061B                     	;# 
  1792  061C                     	;# 
  1793  061C                     	;# 
  1794  061F                     	;# 
  1795  0691                     	;# 
  1796  0692                     	;# 
  1797  0693                     	;# 
  1798  0694                     	;# 
  1799  0695                     	;# 
  1800  0696                     	;# 
  1801  0697                     	;# 
  1802  0698                     	;# 
  1803  0699                     	;# 
  1804  0711                     	;# 
  1805  0712                     	;# 
  1806  0713                     	;# 
  1807  0714                     	;# 
  1808  0715                     	;# 
  1809  0716                     	;# 
  1810  0717                     	;# 
  1811  0718                     	;# 
  1812  0719                     	;# 
  1813  0891                     	;# 
  1814  0891                     	;# 
  1815  0891                     	;# 
  1816  0891                     	;# 
  1817  0891                     	;# 
  1818  0891                     	;# 
  1819  0892                     	;# 
  1820  0892                     	;# 
  1821  0892                     	;# 
  1822  0893                     	;# 
  1823  0893                     	;# 
  1824  0893                     	;# 
  1825  0893                     	;# 
  1826  0893                     	;# 
  1827  0893                     	;# 
  1828  0894                     	;# 
  1829  0894                     	;# 
  1830  0894                     	;# 
  1831  0895                     	;# 
  1832  0895                     	;# 
  1833  0895                     	;# 
  1834  0896                     	;# 
  1835  0896                     	;# 
  1836  0896                     	;# 
  1837  089B                     	;# 
  1838  0911                     	;# 
  1839  0912                     	;# 
  1840  0913                     	;# 
  1841  0914                     	;# 
  1842  0915                     	;# 
  1843  0916                     	;# 
  1844  0918                     	;# 
  1845  0919                     	;# 
  1846  091A                     	;# 
  1847  091B                     	;# 
  1848  091C                     	;# 
  1849  091D                     	;# 
  1850  091E                     	;# 
  1851  091F                     	;# 
  1852  0E0F                     	;# 
  1853  0E10                     	;# 
  1854  0E11                     	;# 
  1855  0E12                     	;# 
  1856  0E13                     	;# 
  1857  0E14                     	;# 
  1858  0E15                     	;# 
  1859  0E16                     	;# 
  1860  0E17                     	;# 
  1861  0E18                     	;# 
  1862  0E19                     	;# 
  1863  0E1A                     	;# 
  1864  0E1B                     	;# 
  1865  0E1C                     	;# 
  1866  0E1D                     	;# 
  1867  0E1E                     	;# 
  1868  0E1F                     	;# 
  1869  0E20                     	;# 
  1870  0E21                     	;# 
  1871  0E22                     	;# 
  1872  0E24                     	;# 
  1873  0E25                     	;# 
  1874  0E28                     	;# 
  1875  0E29                     	;# 
  1876  0E2A                     	;# 
  1877  0E2B                     	;# 
  1878  0E2C                     	;# 
  1879  0E2D                     	;# 
  1880  0E2E                     	;# 
  1881  0E2F                     	;# 
  1882  0E90                     	;# 
  1883  0E91                     	;# 
  1884  0E92                     	;# 
  1885  0E94                     	;# 
  1886  0E95                     	;# 
  1887  0E9C                     	;# 
  1888  0E9D                     	;# 
  1889  0E9E                     	;# 
  1890  0E9F                     	;# 
  1891  0EA0                     	;# 
  1892  0EA1                     	;# 
  1893  0EA2                     	;# 
  1894  0EA3                     	;# 
  1895  0EA4                     	;# 
  1896  0EA5                     	;# 
  1897  0EA6                     	;# 
  1898  0EA7                     	;# 
  1899  0F0F                     	;# 
  1900  0F10                     	;# 
  1901  0F11                     	;# 
  1902  0F12                     	;# 
  1903  0F13                     	;# 
  1904  0F14                     	;# 
  1905  0F15                     	;# 
  1906  0F16                     	;# 
  1907  0F17                     	;# 
  1908  0F18                     	;# 
  1909  0F19                     	;# 
  1910  0F1A                     	;# 
  1911  0F1B                     	;# 
  1912  0F1C                     	;# 
  1913  0F1D                     	;# 
  1914  0F1E                     	;# 
  1915  0F1F                     	;# 
  1916  0F20                     	;# 
  1917  0F21                     	;# 
  1918  0F22                     	;# 
  1919  0F23                     	;# 
  1920  0F24                     	;# 
  1921  0F25                     	;# 
  1922  0F26                     	;# 
  1923  0F27                     	;# 
  1924  0F28                     	;# 
  1925  0F29                     	;# 
  1926  0F2A                     	;# 
  1927  0F2B                     	;# 
  1928  0F2C                     	;# 
  1929  0F2D                     	;# 
  1930  0F2E                     	;# 
  1931  0F2F                     	;# 
  1932  0F30                     	;# 
  1933  0F31                     	;# 
  1934  0F32                     	;# 
  1935  0F33                     	;# 
  1936  0F34                     	;# 
  1937  0F35                     	;# 
  1938  0F36                     	;# 
  1939  0F37                     	;# 
  1940  0FE4                     	;# 
  1941  0FE5                     	;# 
  1942  0FE6                     	;# 
  1943  0FE7                     	;# 
  1944  0FE8                     	;# 
  1945  0FE9                     	;# 
  1946  0FEA                     	;# 
  1947  0FEB                     	;# 
  1948  0FED                     	;# 
  1949  0FEE                     	;# 
  1950  0FEF                     	;# 
  1951  0000                     	;# 
  1952  0001                     	;# 
  1953  0002                     	;# 
  1954  0003                     	;# 
  1955  0004                     	;# 
  1956  0005                     	;# 
  1957  0006                     	;# 
  1958  0007                     	;# 
  1959  0008                     	;# 
  1960  0009                     	;# 
  1961  000A                     	;# 
  1962  000B                     	;# 
  1963  000C                     	;# 
  1964  000D                     	;# 
  1965  000E                     	;# 
  1966  0010                     	;# 
  1967  0011                     	;# 
  1968  0012                     	;# 
  1969  0013                     	;# 
  1970  0014                     	;# 
  1971  0015                     	;# 
  1972  0015                     	;# 
  1973  0016                     	;# 
  1974  0016                     	;# 
  1975  0017                     	;# 
  1976  0018                     	;# 
  1977  0019                     	;# 
  1978  0019                     	;# 
  1979  001A                     	;# 
  1980  001B                     	;# 
  1981  001C                     	;# 
  1982  001D                     	;# 
  1983  001E                     	;# 
  1984  001F                     	;# 
  1985  008C                     	;# 
  1986  008D                     	;# 
  1987  008E                     	;# 
  1988  0090                     	;# 
  1989  0091                     	;# 
  1990  0092                     	;# 
  1991  0093                     	;# 
  1992  0094                     	;# 
  1993  0097                     	;# 
  1994  009B                     	;# 
  1995  009B                     	;# 
  1996  009C                     	;# 
  1997  009D                     	;# 
  1998  009E                     	;# 
  1999  009F                     	;# 
  2000  010C                     	;# 
  2001  010D                     	;# 
  2002  010E                     	;# 
  2003  0111                     	;# 
  2004  0112                     	;# 
  2005  0113                     	;# 
  2006  0114                     	;# 
  2007  0115                     	;# 
  2008  0116                     	;# 
  2009  0117                     	;# 
  2010  0118                     	;# 
  2011  0119                     	;# 
  2012  018C                     	;# 
  2013  018D                     	;# 
  2014  018E                     	;# 
  2015  0199                     	;# 
  2016  0199                     	;# 
  2017  0199                     	;# 
  2018  019A                     	;# 
  2019  019A                     	;# 
  2020  019A                     	;# 
  2021  019B                     	;# 
  2022  019B                     	;# 
  2023  019B                     	;# 
  2024  019B                     	;# 
  2025  019B                     	;# 
  2026  019C                     	;# 
  2027  019C                     	;# 
  2028  019C                     	;# 
  2029  019D                     	;# 
  2030  019D                     	;# 
  2031  019D                     	;# 
  2032  019E                     	;# 
  2033  019E                     	;# 
  2034  019E                     	;# 
  2035  019F                     	;# 
  2036  019F                     	;# 
  2037  019F                     	;# 
  2038  019F                     	;# 
  2039  019F                     	;# 
  2040  020C                     	;# 
  2041  020D                     	;# 
  2042  020E                     	;# 
  2043  0211                     	;# 
  2044  0211                     	;# 
  2045  0212                     	;# 
  2046  0212                     	;# 
  2047  0213                     	;# 
  2048  0213                     	;# 
  2049  0214                     	;# 
  2050  0214                     	;# 
  2051  0215                     	;# 
  2052  0215                     	;# 
  2053  0215                     	;# 
  2054  0215                     	;# 
  2055  0216                     	;# 
  2056  0216                     	;# 
  2057  0217                     	;# 
  2058  0217                     	;# 
  2059  0219                     	;# 
  2060  021A                     	;# 
  2061  021B                     	;# 
  2062  021C                     	;# 
  2063  021D                     	;# 
  2064  021D                     	;# 
  2065  021E                     	;# 
  2066  021F                     	;# 
  2067  028C                     	;# 
  2068  028D                     	;# 
  2069  028E                     	;# 
  2070  0291                     	;# 
  2071  0291                     	;# 
  2072  0292                     	;# 
  2073  0293                     	;# 
  2074  0294                     	;# 
  2075  0295                     	;# 
  2076  0295                     	;# 
  2077  0296                     	;# 
  2078  0297                     	;# 
  2079  0298                     	;# 
  2080  029F                     	;# 
  2081  030C                     	;# 
  2082  030D                     	;# 
  2083  030E                     	;# 
  2084  0311                     	;# 
  2085  0311                     	;# 
  2086  0312                     	;# 
  2087  0313                     	;# 
  2088  0314                     	;# 
  2089  0315                     	;# 
  2090  0315                     	;# 
  2091  0316                     	;# 
  2092  0317                     	;# 
  2093  0318                     	;# 
  2094  038C                     	;# 
  2095  038D                     	;# 
  2096  038E                     	;# 
  2097  0391                     	;# 
  2098  0392                     	;# 
  2099  0393                     	;# 
  2100  0394                     	;# 
  2101  0395                     	;# 
  2102  0396                     	;# 
  2103  0397                     	;# 
  2104  0398                     	;# 
  2105  0399                     	;# 
  2106  039A                     	;# 
  2107  039C                     	;# 
  2108  039D                     	;# 
  2109  039E                     	;# 
  2110  039F                     	;# 
  2111  0411                     	;# 
  2112  0411                     	;# 
  2113  0412                     	;# 
  2114  0413                     	;# 
  2115  0414                     	;# 
  2116  0415                     	;# 
  2117  0416                     	;# 
  2118  0417                     	;# 
  2119  0418                     	;# 
  2120  0418                     	;# 
  2121  0419                     	;# 
  2122  041A                     	;# 
  2123  041B                     	;# 
  2124  041C                     	;# 
  2125  041D                     	;# 
  2126  041E                     	;# 
  2127  041F                     	;# 
  2128  0498                     	;# 
  2129  0498                     	;# 
  2130  0499                     	;# 
  2131  049A                     	;# 
  2132  049B                     	;# 
  2133  049B                     	;# 
  2134  049C                     	;# 
  2135  049D                     	;# 
  2136  049E                     	;# 
  2137  049F                     	;# 
  2138  0617                     	;# 
  2139  0618                     	;# 
  2140  0619                     	;# 
  2141  0619                     	;# 
  2142  061A                     	;# 
  2143  061B                     	;# 
  2144  061C                     	;# 
  2145  061C                     	;# 
  2146  061F                     	;# 
  2147  0691                     	;# 
  2148  0692                     	;# 
  2149  0693                     	;# 
  2150  0694                     	;# 
  2151  0695                     	;# 
  2152  0696                     	;# 
  2153  0697                     	;# 
  2154  0698                     	;# 
  2155  0699                     	;# 
  2156  0711                     	;# 
  2157  0712                     	;# 
  2158  0713                     	;# 
  2159  0714                     	;# 
  2160  0715                     	;# 
  2161  0716                     	;# 
  2162  0717                     	;# 
  2163  0718                     	;# 
  2164  0719                     	;# 
  2165  0891                     	;# 
  2166  0891                     	;# 
  2167  0891                     	;# 
  2168  0891                     	;# 
  2169  0891                     	;# 
  2170  0891                     	;# 
  2171  0892                     	;# 
  2172  0892                     	;# 
  2173  0892                     	;# 
  2174  0893                     	;# 
  2175  0893                     	;# 
  2176  0893                     	;# 
  2177  0893                     	;# 
  2178  0893                     	;# 
  2179  0893                     	;# 
  2180  0894                     	;# 
  2181  0894                     	;# 
  2182  0894                     	;# 
  2183  0895                     	;# 
  2184  0895                     	;# 
  2185  0895                     	;# 
  2186  0896                     	;# 
  2187  0896                     	;# 
  2188  0896                     	;# 
  2189  089B                     	;# 
  2190  0911                     	;# 
  2191  0912                     	;# 
  2192  0913                     	;# 
  2193  0914                     	;# 
  2194  0915                     	;# 
  2195  0916                     	;# 
  2196  0918                     	;# 
  2197  0919                     	;# 
  2198  091A                     	;# 
  2199  091B                     	;# 
  2200  091C                     	;# 
  2201  091D                     	;# 
  2202  091E                     	;# 
  2203  091F                     	;# 
  2204  0E0F                     	;# 
  2205  0E10                     	;# 
  2206  0E11                     	;# 
  2207  0E12                     	;# 
  2208  0E13                     	;# 
  2209  0E14                     	;# 
  2210  0E15                     	;# 
  2211  0E16                     	;# 
  2212  0E17                     	;# 
  2213  0E18                     	;# 
  2214  0E19                     	;# 
  2215  0E1A                     	;# 
  2216  0E1B                     	;# 
  2217  0E1C                     	;# 
  2218  0E1D                     	;# 
  2219  0E1E                     	;# 
  2220  0E1F                     	;# 
  2221  0E20                     	;# 
  2222  0E21                     	;# 
  2223  0E22                     	;# 
  2224  0E24                     	;# 
  2225  0E25                     	;# 
  2226  0E28                     	;# 
  2227  0E29                     	;# 
  2228  0E2A                     	;# 
  2229  0E2B                     	;# 
  2230  0E2C                     	;# 
  2231  0E2D                     	;# 
  2232  0E2E                     	;# 
  2233  0E2F                     	;# 
  2234  0E90                     	;# 
  2235  0E91                     	;# 
  2236  0E92                     	;# 
  2237  0E94                     	;# 
  2238  0E95                     	;# 
  2239  0E9C                     	;# 
  2240  0E9D                     	;# 
  2241  0E9E                     	;# 
  2242  0E9F                     	;# 
  2243  0EA0                     	;# 
  2244  0EA1                     	;# 
  2245  0EA2                     	;# 
  2246  0EA3                     	;# 
  2247  0EA4                     	;# 
  2248  0EA5                     	;# 
  2249  0EA6                     	;# 
  2250  0EA7                     	;# 
  2251  0F0F                     	;# 
  2252  0F10                     	;# 
  2253  0F11                     	;# 
  2254  0F12                     	;# 
  2255  0F13                     	;# 
  2256  0F14                     	;# 
  2257  0F15                     	;# 
  2258  0F16                     	;# 
  2259  0F17                     	;# 
  2260  0F18                     	;# 
  2261  0F19                     	;# 
  2262  0F1A                     	;# 
  2263  0F1B                     	;# 
  2264  0F1C                     	;# 
  2265  0F1D                     	;# 
  2266  0F1E                     	;# 
  2267  0F1F                     	;# 
  2268  0F20                     	;# 
  2269  0F21                     	;# 
  2270  0F22                     	;# 
  2271  0F23                     	;# 
  2272  0F24                     	;# 
  2273  0F25                     	;# 
  2274  0F26                     	;# 
  2275  0F27                     	;# 
  2276  0F28                     	;# 
  2277  0F29                     	;# 
  2278  0F2A                     	;# 
  2279  0F2B                     	;# 
  2280  0F2C                     	;# 
  2281  0F2D                     	;# 
  2282  0F2E                     	;# 
  2283  0F2F                     	;# 
  2284  0F30                     	;# 
  2285  0F31                     	;# 
  2286  0F32                     	;# 
  2287  0F33                     	;# 
  2288  0F34                     	;# 
  2289  0F35                     	;# 
  2290  0F36                     	;# 
  2291  0F37                     	;# 
  2292  0FE4                     	;# 
  2293  0FE5                     	;# 
  2294  0FE6                     	;# 
  2295  0FE7                     	;# 
  2296  0FE8                     	;# 
  2297  0FE9                     	;# 
  2298  0FEA                     	;# 
  2299  0FEB                     	;# 
  2300  0FED                     	;# 
  2301  0FEE                     	;# 
  2302  0FEF                     	;# 
  2303  0000                     	;# 
  2304  0001                     	;# 
  2305  0002                     	;# 
  2306  0003                     	;# 
  2307  0004                     	;# 
  2308  0005                     	;# 
  2309  0006                     	;# 
  2310  0007                     	;# 
  2311  0008                     	;# 
  2312  0009                     	;# 
  2313  000A                     	;# 
  2314  000B                     	;# 
  2315  000C                     	;# 
  2316  000D                     	;# 
  2317  000E                     	;# 
  2318  0010                     	;# 
  2319  0011                     	;# 
  2320  0012                     	;# 
  2321  0013                     	;# 
  2322  0014                     	;# 
  2323  0015                     	;# 
  2324  0015                     	;# 
  2325  0016                     	;# 
  2326  0016                     	;# 
  2327  0017                     	;# 
  2328  0018                     	;# 
  2329  0019                     	;# 
  2330  0019                     	;# 
  2331  001A                     	;# 
  2332  001B                     	;# 
  2333  001C                     	;# 
  2334  001D                     	;# 
  2335  001E                     	;# 
  2336  001F                     	;# 
  2337  008C                     	;# 
  2338  008D                     	;# 
  2339  008E                     	;# 
  2340  0090                     	;# 
  2341  0091                     	;# 
  2342  0092                     	;# 
  2343  0093                     	;# 
  2344  0094                     	;# 
  2345  0097                     	;# 
  2346  009B                     	;# 
  2347  009B                     	;# 
  2348  009C                     	;# 
  2349  009D                     	;# 
  2350  009E                     	;# 
  2351  009F                     	;# 
  2352  010C                     	;# 
  2353  010D                     	;# 
  2354  010E                     	;# 
  2355  0111                     	;# 
  2356  0112                     	;# 
  2357  0113                     	;# 
  2358  0114                     	;# 
  2359  0115                     	;# 
  2360  0116                     	;# 
  2361  0117                     	;# 
  2362  0118                     	;# 
  2363  0119                     	;# 
  2364  018C                     	;# 
  2365  018D                     	;# 
  2366  018E                     	;# 
  2367  0199                     	;# 
  2368  0199                     	;# 
  2369  0199                     	;# 
  2370  019A                     	;# 
  2371  019A                     	;# 
  2372  019A                     	;# 
  2373  019B                     	;# 
  2374  019B                     	;# 
  2375  019B                     	;# 
  2376  019B                     	;# 
  2377  019B                     	;# 
  2378  019C                     	;# 
  2379  019C                     	;# 
  2380  019C                     	;# 
  2381  019D                     	;# 
  2382  019D                     	;# 
  2383  019D                     	;# 
  2384  019E                     	;# 
  2385  019E                     	;# 
  2386  019E                     	;# 
  2387  019F                     	;# 
  2388  019F                     	;# 
  2389  019F                     	;# 
  2390  019F                     	;# 
  2391  019F                     	;# 
  2392  020C                     	;# 
  2393  020D                     	;# 
  2394  020E                     	;# 
  2395  0211                     	;# 
  2396  0211                     	;# 
  2397  0212                     	;# 
  2398  0212                     	;# 
  2399  0213                     	;# 
  2400  0213                     	;# 
  2401  0214                     	;# 
  2402  0214                     	;# 
  2403  0215                     	;# 
  2404  0215                     	;# 
  2405  0215                     	;# 
  2406  0215                     	;# 
  2407  0216                     	;# 
  2408  0216                     	;# 
  2409  0217                     	;# 
  2410  0217                     	;# 
  2411  0219                     	;# 
  2412  021A                     	;# 
  2413  021B                     	;# 
  2414  021C                     	;# 
  2415  021D                     	;# 
  2416  021D                     	;# 
  2417  021E                     	;# 
  2418  021F                     	;# 
  2419  028C                     	;# 
  2420  028D                     	;# 
  2421  028E                     	;# 
  2422  0291                     	;# 
  2423  0291                     	;# 
  2424  0292                     	;# 
  2425  0293                     	;# 
  2426  0294                     	;# 
  2427  0295                     	;# 
  2428  0295                     	;# 
  2429  0296                     	;# 
  2430  0297                     	;# 
  2431  0298                     	;# 
  2432  029F                     	;# 
  2433  030C                     	;# 
  2434  030D                     	;# 
  2435  030E                     	;# 
  2436  0311                     	;# 
  2437  0311                     	;# 
  2438  0312                     	;# 
  2439  0313                     	;# 
  2440  0314                     	;# 
  2441  0315                     	;# 
  2442  0315                     	;# 
  2443  0316                     	;# 
  2444  0317                     	;# 
  2445  0318                     	;# 
  2446  038C                     	;# 
  2447  038D                     	;# 
  2448  038E                     	;# 
  2449  0391                     	;# 
  2450  0392                     	;# 
  2451  0393                     	;# 
  2452  0394                     	;# 
  2453  0395                     	;# 
  2454  0396                     	;# 
  2455  0397                     	;# 
  2456  0398                     	;# 
  2457  0399                     	;# 
  2458  039A                     	;# 
  2459  039C                     	;# 
  2460  039D                     	;# 
  2461  039E                     	;# 
  2462  039F                     	;# 
  2463  0411                     	;# 
  2464  0411                     	;# 
  2465  0412                     	;# 
  2466  0413                     	;# 
  2467  0414                     	;# 
  2468  0415                     	;# 
  2469  0416                     	;# 
  2470  0417                     	;# 
  2471  0418                     	;# 
  2472  0418                     	;# 
  2473  0419                     	;# 
  2474  041A                     	;# 
  2475  041B                     	;# 
  2476  041C                     	;# 
  2477  041D                     	;# 
  2478  041E                     	;# 
  2479  041F                     	;# 
  2480  0498                     	;# 
  2481  0498                     	;# 
  2482  0499                     	;# 
  2483  049A                     	;# 
  2484  049B                     	;# 
  2485  049B                     	;# 
  2486  049C                     	;# 
  2487  049D                     	;# 
  2488  049E                     	;# 
  2489  049F                     	;# 
  2490  0617                     	;# 
  2491  0618                     	;# 
  2492  0619                     	;# 
  2493  0619                     	;# 
  2494  061A                     	;# 
  2495  061B                     	;# 
  2496  061C                     	;# 
  2497  061C                     	;# 
  2498  061F                     	;# 
  2499  0691                     	;# 
  2500  0692                     	;# 
  2501  0693                     	;# 
  2502  0694                     	;# 
  2503  0695                     	;# 
  2504  0696                     	;# 
  2505  0697                     	;# 
  2506  0698                     	;# 
  2507  0699                     	;# 
  2508  0711                     	;# 
  2509  0712                     	;# 
  2510  0713                     	;# 
  2511  0714                     	;# 
  2512  0715                     	;# 
  2513  0716                     	;# 
  2514  0717                     	;# 
  2515  0718                     	;# 
  2516  0719                     	;# 
  2517  0891                     	;# 
  2518  0891                     	;# 
  2519  0891                     	;# 
  2520  0891                     	;# 
  2521  0891                     	;# 
  2522  0891                     	;# 
  2523  0892                     	;# 
  2524  0892                     	;# 
  2525  0892                     	;# 
  2526  0893                     	;# 
  2527  0893                     	;# 
  2528  0893                     	;# 
  2529  0893                     	;# 
  2530  0893                     	;# 
  2531  0893                     	;# 
  2532  0894                     	;# 
  2533  0894                     	;# 
  2534  0894                     	;# 
  2535  0895                     	;# 
  2536  0895                     	;# 
  2537  0895                     	;# 
  2538  0896                     	;# 
  2539  0896                     	;# 
  2540  0896                     	;# 
  2541  089B                     	;# 
  2542  0911                     	;# 
  2543  0912                     	;# 
  2544  0913                     	;# 
  2545  0914                     	;# 
  2546  0915                     	;# 
  2547  0916                     	;# 
  2548  0918                     	;# 
  2549  0919                     	;# 
  2550  091A                     	;# 
  2551  091B                     	;# 
  2552  091C                     	;# 
  2553  091D                     	;# 
  2554  091E                     	;# 
  2555  091F                     	;# 
  2556  0E0F                     	;# 
  2557  0E10                     	;# 
  2558  0E11                     	;# 
  2559  0E12                     	;# 
  2560  0E13                     	;# 
  2561  0E14                     	;# 
  2562  0E15                     	;# 
  2563  0E16                     	;# 
  2564  0E17                     	;# 
  2565  0E18                     	;# 
  2566  0E19                     	;# 
  2567  0E1A                     	;# 
  2568  0E1B                     	;# 
  2569  0E1C                     	;# 
  2570  0E1D                     	;# 
  2571  0E1E                     	;# 
  2572  0E1F                     	;# 
  2573  0E20                     	;# 
  2574  0E21                     	;# 
  2575  0E22                     	;# 
  2576  0E24                     	;# 
  2577  0E25                     	;# 
  2578  0E28                     	;# 
  2579  0E29                     	;# 
  2580  0E2A                     	;# 
  2581  0E2B                     	;# 
  2582  0E2C                     	;# 
  2583  0E2D                     	;# 
  2584  0E2E                     	;# 
  2585  0E2F                     	;# 
  2586  0E90                     	;# 
  2587  0E91                     	;# 
  2588  0E92                     	;# 
  2589  0E94                     	;# 
  2590  0E95                     	;# 
  2591  0E9C                     	;# 
  2592  0E9D                     	;# 
  2593  0E9E                     	;# 
  2594  0E9F                     	;# 
  2595  0EA0                     	;# 
  2596  0EA1                     	;# 
  2597  0EA2                     	;# 
  2598  0EA3                     	;# 
  2599  0EA4                     	;# 
  2600  0EA5                     	;# 
  2601  0EA6                     	;# 
  2602  0EA7                     	;# 
  2603  0F0F                     	;# 
  2604  0F10                     	;# 
  2605  0F11                     	;# 
  2606  0F12                     	;# 
  2607  0F13                     	;# 
  2608  0F14                     	;# 
  2609  0F15                     	;# 
  2610  0F16                     	;# 
  2611  0F17                     	;# 
  2612  0F18                     	;# 
  2613  0F19                     	;# 
  2614  0F1A                     	;# 
  2615  0F1B                     	;# 
  2616  0F1C                     	;# 
  2617  0F1D                     	;# 
  2618  0F1E                     	;# 
  2619  0F1F                     	;# 
  2620  0F20                     	;# 
  2621  0F21                     	;# 
  2622  0F22                     	;# 
  2623  0F23                     	;# 
  2624  0F24                     	;# 
  2625  0F25                     	;# 
  2626  0F26                     	;# 
  2627  0F27                     	;# 
  2628  0F28                     	;# 
  2629  0F29                     	;# 
  2630  0F2A                     	;# 
  2631  0F2B                     	;# 
  2632  0F2C                     	;# 
  2633  0F2D                     	;# 
  2634  0F2E                     	;# 
  2635  0F2F                     	;# 
  2636  0F30                     	;# 
  2637  0F31                     	;# 
  2638  0F32                     	;# 
  2639  0F33                     	;# 
  2640  0F34                     	;# 
  2641  0F35                     	;# 
  2642  0F36                     	;# 
  2643  0F37                     	;# 
  2644  0FE4                     	;# 
  2645  0FE5                     	;# 
  2646  0FE6                     	;# 
  2647  0FE7                     	;# 
  2648  0FE8                     	;# 
  2649  0FE9                     	;# 
  2650  0FEA                     	;# 
  2651  0FEB                     	;# 
  2652  0FED                     	;# 
  2653  0FEE                     	;# 
  2654  0FEF                     	;# 
  2655  0000                     	;# 
  2656  0001                     	;# 
  2657  0002                     	;# 
  2658  0003                     	;# 
  2659  0004                     	;# 
  2660  0005                     	;# 
  2661  0006                     	;# 
  2662  0007                     	;# 
  2663  0008                     	;# 
  2664  0009                     	;# 
  2665  000A                     	;# 
  2666  000B                     	;# 
  2667  000C                     	;# 
  2668  000D                     	;# 
  2669  000E                     	;# 
  2670  0010                     	;# 
  2671  0011                     	;# 
  2672  0012                     	;# 
  2673  0013                     	;# 
  2674  0014                     	;# 
  2675  0015                     	;# 
  2676  0015                     	;# 
  2677  0016                     	;# 
  2678  0016                     	;# 
  2679  0017                     	;# 
  2680  0018                     	;# 
  2681  0019                     	;# 
  2682  0019                     	;# 
  2683  001A                     	;# 
  2684  001B                     	;# 
  2685  001C                     	;# 
  2686  001D                     	;# 
  2687  001E                     	;# 
  2688  001F                     	;# 
  2689  008C                     	;# 
  2690  008D                     	;# 
  2691  008E                     	;# 
  2692  0090                     	;# 
  2693  0091                     	;# 
  2694  0092                     	;# 
  2695  0093                     	;# 
  2696  0094                     	;# 
  2697  0097                     	;# 
  2698  009B                     	;# 
  2699  009B                     	;# 
  2700  009C                     	;# 
  2701  009D                     	;# 
  2702  009E                     	;# 
  2703  009F                     	;# 
  2704  010C                     	;# 
  2705  010D                     	;# 
  2706  010E                     	;# 
  2707  0111                     	;# 
  2708  0112                     	;# 
  2709  0113                     	;# 
  2710  0114                     	;# 
  2711  0115                     	;# 
  2712  0116                     	;# 
  2713  0117                     	;# 
  2714  0118                     	;# 
  2715  0119                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  0199                     	;# 
  2720  0199                     	;# 
  2721  0199                     	;# 
  2722  019A                     	;# 
  2723  019A                     	;# 
  2724  019A                     	;# 
  2725  019B                     	;# 
  2726  019B                     	;# 
  2727  019B                     	;# 
  2728  019B                     	;# 
  2729  019B                     	;# 
  2730  019C                     	;# 
  2731  019C                     	;# 
  2732  019C                     	;# 
  2733  019D                     	;# 
  2734  019D                     	;# 
  2735  019D                     	;# 
  2736  019E                     	;# 
  2737  019E                     	;# 
  2738  019E                     	;# 
  2739  019F                     	;# 
  2740  019F                     	;# 
  2741  019F                     	;# 
  2742  019F                     	;# 
  2743  019F                     	;# 
  2744  020C                     	;# 
  2745  020D                     	;# 
  2746  020E                     	;# 
  2747  0211                     	;# 
  2748  0211                     	;# 
  2749  0212                     	;# 
  2750  0212                     	;# 
  2751  0213                     	;# 
  2752  0213                     	;# 
  2753  0214                     	;# 
  2754  0214                     	;# 
  2755  0215                     	;# 
  2756  0215                     	;# 
  2757  0215                     	;# 
  2758  0215                     	;# 
  2759  0216                     	;# 
  2760  0216                     	;# 
  2761  0217                     	;# 
  2762  0217                     	;# 
  2763  0219                     	;# 
  2764  021A                     	;# 
  2765  021B                     	;# 
  2766  021C                     	;# 
  2767  021D                     	;# 
  2768  021D                     	;# 
  2769  021E                     	;# 
  2770  021F                     	;# 
  2771  028C                     	;# 
  2772  028D                     	;# 
  2773  028E                     	;# 
  2774  0291                     	;# 
  2775  0291                     	;# 
  2776  0292                     	;# 
  2777  0293                     	;# 
  2778  0294                     	;# 
  2779  0295                     	;# 
  2780  0295                     	;# 
  2781  0296                     	;# 
  2782  0297                     	;# 
  2783  0298                     	;# 
  2784  029F                     	;# 
  2785  030C                     	;# 
  2786  030D                     	;# 
  2787  030E                     	;# 
  2788  0311                     	;# 
  2789  0311                     	;# 
  2790  0312                     	;# 
  2791  0313                     	;# 
  2792  0314                     	;# 
  2793  0315                     	;# 
  2794  0315                     	;# 
  2795  0316                     	;# 
  2796  0317                     	;# 
  2797  0318                     	;# 
  2798  038C                     	;# 
  2799  038D                     	;# 
  2800  038E                     	;# 
  2801  0391                     	;# 
  2802  0392                     	;# 
  2803  0393                     	;# 
  2804  0394                     	;# 
  2805  0395                     	;# 
  2806  0396                     	;# 
  2807  0397                     	;# 
  2808  0398                     	;# 
  2809  0399                     	;# 
  2810  039A                     	;# 
  2811  039C                     	;# 
  2812  039D                     	;# 
  2813  039E                     	;# 
  2814  039F                     	;# 
  2815  0411                     	;# 
  2816  0411                     	;# 
  2817  0412                     	;# 
  2818  0413                     	;# 
  2819  0414                     	;# 
  2820  0415                     	;# 
  2821  0416                     	;# 
  2822  0417                     	;# 
  2823  0418                     	;# 
  2824  0418                     	;# 
  2825  0419                     	;# 
  2826  041A                     	;# 
  2827  041B                     	;# 
  2828  041C                     	;# 
  2829  041D                     	;# 
  2830  041E                     	;# 
  2831  041F                     	;# 
  2832  0498                     	;# 
  2833  0498                     	;# 
  2834  0499                     	;# 
  2835  049A                     	;# 
  2836  049B                     	;# 
  2837  049B                     	;# 
  2838  049C                     	;# 
  2839  049D                     	;# 
  2840  049E                     	;# 
  2841  049F                     	;# 
  2842  0617                     	;# 
  2843  0618                     	;# 
  2844  0619                     	;# 
  2845  0619                     	;# 
  2846  061A                     	;# 
  2847  061B                     	;# 
  2848  061C                     	;# 
  2849  061C                     	;# 
  2850  061F                     	;# 
  2851  0691                     	;# 
  2852  0692                     	;# 
  2853  0693                     	;# 
  2854  0694                     	;# 
  2855  0695                     	;# 
  2856  0696                     	;# 
  2857  0697                     	;# 
  2858  0698                     	;# 
  2859  0699                     	;# 
  2860  0711                     	;# 
  2861  0712                     	;# 
  2862  0713                     	;# 
  2863  0714                     	;# 
  2864  0715                     	;# 
  2865  0716                     	;# 
  2866  0717                     	;# 
  2867  0718                     	;# 
  2868  0719                     	;# 
  2869  0891                     	;# 
  2870  0891                     	;# 
  2871  0891                     	;# 
  2872  0891                     	;# 
  2873  0891                     	;# 
  2874  0891                     	;# 
  2875  0892                     	;# 
  2876  0892                     	;# 
  2877  0892                     	;# 
  2878  0893                     	;# 
  2879  0893                     	;# 
  2880  0893                     	;# 
  2881  0893                     	;# 
  2882  0893                     	;# 
  2883  0893                     	;# 
  2884  0894                     	;# 
  2885  0894                     	;# 
  2886  0894                     	;# 
  2887  0895                     	;# 
  2888  0895                     	;# 
  2889  0895                     	;# 
  2890  0896                     	;# 
  2891  0896                     	;# 
  2892  0896                     	;# 
  2893  089B                     	;# 
  2894  0911                     	;# 
  2895  0912                     	;# 
  2896  0913                     	;# 
  2897  0914                     	;# 
  2898  0915                     	;# 
  2899  0916                     	;# 
  2900  0918                     	;# 
  2901  0919                     	;# 
  2902  091A                     	;# 
  2903  091B                     	;# 
  2904  091C                     	;# 
  2905  091D                     	;# 
  2906  091E                     	;# 
  2907  091F                     	;# 
  2908  0E0F                     	;# 
  2909  0E10                     	;# 
  2910  0E11                     	;# 
  2911  0E12                     	;# 
  2912  0E13                     	;# 
  2913  0E14                     	;# 
  2914  0E15                     	;# 
  2915  0E16                     	;# 
  2916  0E17                     	;# 
  2917  0E18                     	;# 
  2918  0E19                     	;# 
  2919  0E1A                     	;# 
  2920  0E1B                     	;# 
  2921  0E1C                     	;# 
  2922  0E1D                     	;# 
  2923  0E1E                     	;# 
  2924  0E1F                     	;# 
  2925  0E20                     	;# 
  2926  0E21                     	;# 
  2927  0E22                     	;# 
  2928  0E24                     	;# 
  2929  0E25                     	;# 
  2930  0E28                     	;# 
  2931  0E29                     	;# 
  2932  0E2A                     	;# 
  2933  0E2B                     	;# 
  2934  0E2C                     	;# 
  2935  0E2D                     	;# 
  2936  0E2E                     	;# 
  2937  0E2F                     	;# 
  2938  0E90                     	;# 
  2939  0E91                     	;# 
  2940  0E92                     	;# 
  2941  0E94                     	;# 
  2942  0E95                     	;# 
  2943  0E9C                     	;# 
  2944  0E9D                     	;# 
  2945  0E9E                     	;# 
  2946  0E9F                     	;# 
  2947  0EA0                     	;# 
  2948  0EA1                     	;# 
  2949  0EA2                     	;# 
  2950  0EA3                     	;# 
  2951  0EA4                     	;# 
  2952  0EA5                     	;# 
  2953  0EA6                     	;# 
  2954  0EA7                     	;# 
  2955  0F0F                     	;# 
  2956  0F10                     	;# 
  2957  0F11                     	;# 
  2958  0F12                     	;# 
  2959  0F13                     	;# 
  2960  0F14                     	;# 
  2961  0F15                     	;# 
  2962  0F16                     	;# 
  2963  0F17                     	;# 
  2964  0F18                     	;# 
  2965  0F19                     	;# 
  2966  0F1A                     	;# 
  2967  0F1B                     	;# 
  2968  0F1C                     	;# 
  2969  0F1D                     	;# 
  2970  0F1E                     	;# 
  2971  0F1F                     	;# 
  2972  0F20                     	;# 
  2973  0F21                     	;# 
  2974  0F22                     	;# 
  2975  0F23                     	;# 
  2976  0F24                     	;# 
  2977  0F25                     	;# 
  2978  0F26                     	;# 
  2979  0F27                     	;# 
  2980  0F28                     	;# 
  2981  0F29                     	;# 
  2982  0F2A                     	;# 
  2983  0F2B                     	;# 
  2984  0F2C                     	;# 
  2985  0F2D                     	;# 
  2986  0F2E                     	;# 
  2987  0F2F                     	;# 
  2988  0F30                     	;# 
  2989  0F31                     	;# 
  2990  0F32                     	;# 
  2991  0F33                     	;# 
  2992  0F34                     	;# 
  2993  0F35                     	;# 
  2994  0F36                     	;# 
  2995  0F37                     	;# 
  2996  0FE4                     	;# 
  2997  0FE5                     	;# 
  2998  0FE6                     	;# 
  2999  0FE7                     	;# 
  3000  0FE8                     	;# 
  3001  0FE9                     	;# 
  3002  0FEA                     	;# 
  3003  0FEB                     	;# 
  3004  0FED                     	;# 
  3005  0FEE                     	;# 
  3006  0FEF                     	;# 
  3007  0000                     	;# 
  3008  0001                     	;# 
  3009  0002                     	;# 
  3010  0003                     	;# 
  3011  0004                     	;# 
  3012  0005                     	;# 
  3013  0006                     	;# 
  3014  0007                     	;# 
  3015  0008                     	;# 
  3016  0009                     	;# 
  3017  000A                     	;# 
  3018  000B                     	;# 
  3019  000C                     	;# 
  3020  000D                     	;# 
  3021  000E                     	;# 
  3022  0010                     	;# 
  3023  0011                     	;# 
  3024  0012                     	;# 
  3025  0013                     	;# 
  3026  0014                     	;# 
  3027  0015                     	;# 
  3028  0015                     	;# 
  3029  0016                     	;# 
  3030  0016                     	;# 
  3031  0017                     	;# 
  3032  0018                     	;# 
  3033  0019                     	;# 
  3034  0019                     	;# 
  3035  001A                     	;# 
  3036  001B                     	;# 
  3037  001C                     	;# 
  3038  001D                     	;# 
  3039  001E                     	;# 
  3040  001F                     	;# 
  3041  008C                     	;# 
  3042  008D                     	;# 
  3043  008E                     	;# 
  3044  0090                     	;# 
  3045  0091                     	;# 
  3046  0092                     	;# 
  3047  0093                     	;# 
  3048  0094                     	;# 
  3049  0097                     	;# 
  3050  009B                     	;# 
  3051  009B                     	;# 
  3052  009C                     	;# 
  3053  009D                     	;# 
  3054  009E                     	;# 
  3055  009F                     	;# 
  3056  010C                     	;# 
  3057  010D                     	;# 
  3058  010E                     	;# 
  3059  0111                     	;# 
  3060  0112                     	;# 
  3061  0113                     	;# 
  3062  0114                     	;# 
  3063  0115                     	;# 
  3064  0116                     	;# 
  3065  0117                     	;# 
  3066  0118                     	;# 
  3067  0119                     	;# 
  3068  018C                     	;# 
  3069  018D                     	;# 
  3070  018E                     	;# 
  3071  0199                     	;# 
  3072  0199                     	;# 
  3073  0199                     	;# 
  3074  019A                     	;# 
  3075  019A                     	;# 
  3076  019A                     	;# 
  3077  019B                     	;# 
  3078  019B                     	;# 
  3079  019B                     	;# 
  3080  019B                     	;# 
  3081  019B                     	;# 
  3082  019C                     	;# 
  3083  019C                     	;# 
  3084  019C                     	;# 
  3085  019D                     	;# 
  3086  019D                     	;# 
  3087  019D                     	;# 
  3088  019E                     	;# 
  3089  019E                     	;# 
  3090  019E                     	;# 
  3091  019F                     	;# 
  3092  019F                     	;# 
  3093  019F                     	;# 
  3094  019F                     	;# 
  3095  019F                     	;# 
  3096  020C                     	;# 
  3097  020D                     	;# 
  3098  020E                     	;# 
  3099  0211                     	;# 
  3100  0211                     	;# 
  3101  0212                     	;# 
  3102  0212                     	;# 
  3103  0213                     	;# 
  3104  0213                     	;# 
  3105  0214                     	;# 
  3106  0214                     	;# 
  3107  0215                     	;# 
  3108  0215                     	;# 
  3109  0215                     	;# 
  3110  0215                     	;# 
  3111  0216                     	;# 
  3112  0216                     	;# 
  3113  0217                     	;# 
  3114  0217                     	;# 
  3115  0219                     	;# 
  3116  021A                     	;# 
  3117  021B                     	;# 
  3118  021C                     	;# 
  3119  021D                     	;# 
  3120  021D                     	;# 
  3121  021E                     	;# 
  3122  021F                     	;# 
  3123  028C                     	;# 
  3124  028D                     	;# 
  3125  028E                     	;# 
  3126  0291                     	;# 
  3127  0291                     	;# 
  3128  0292                     	;# 
  3129  0293                     	;# 
  3130  0294                     	;# 
  3131  0295                     	;# 
  3132  0295                     	;# 
  3133  0296                     	;# 
  3134  0297                     	;# 
  3135  0298                     	;# 
  3136  029F                     	;# 
  3137  030C                     	;# 
  3138  030D                     	;# 
  3139  030E                     	;# 
  3140  0311                     	;# 
  3141  0311                     	;# 
  3142  0312                     	;# 
  3143  0313                     	;# 
  3144  0314                     	;# 
  3145  0315                     	;# 
  3146  0315                     	;# 
  3147  0316                     	;# 
  3148  0317                     	;# 
  3149  0318                     	;# 
  3150  038C                     	;# 
  3151  038D                     	;# 
  3152  038E                     	;# 
  3153  0391                     	;# 
  3154  0392                     	;# 
  3155  0393                     	;# 
  3156  0394                     	;# 
  3157  0395                     	;# 
  3158  0396                     	;# 
  3159  0397                     	;# 
  3160  0398                     	;# 
  3161  0399                     	;# 
  3162  039A                     	;# 
  3163  039C                     	;# 
  3164  039D                     	;# 
  3165  039E                     	;# 
  3166  039F                     	;# 
  3167  0411                     	;# 
  3168  0411                     	;# 
  3169  0412                     	;# 
  3170  0413                     	;# 
  3171  0414                     	;# 
  3172  0415                     	;# 
  3173  0416                     	;# 
  3174  0417                     	;# 
  3175  0418                     	;# 
  3176  0418                     	;# 
  3177  0419                     	;# 
  3178  041A                     	;# 
  3179  041B                     	;# 
  3180  041C                     	;# 
  3181  041D                     	;# 
  3182  041E                     	;# 
  3183  041F                     	;# 
  3184  0498                     	;# 
  3185  0498                     	;# 
  3186  0499                     	;# 
  3187  049A                     	;# 
  3188  049B                     	;# 
  3189  049B                     	;# 
  3190  049C                     	;# 
  3191  049D                     	;# 
  3192  049E                     	;# 
  3193  049F                     	;# 
  3194  0617                     	;# 
  3195  0618                     	;# 
  3196  0619                     	;# 
  3197  0619                     	;# 
  3198  061A                     	;# 
  3199  061B                     	;# 
  3200  061C                     	;# 
  3201  061C                     	;# 
  3202  061F                     	;# 
  3203  0691                     	;# 
  3204  0692                     	;# 
  3205  0693                     	;# 
  3206  0694                     	;# 
  3207  0695                     	;# 
  3208  0696                     	;# 
  3209  0697                     	;# 
  3210  0698                     	;# 
  3211  0699                     	;# 
  3212  0711                     	;# 
  3213  0712                     	;# 
  3214  0713                     	;# 
  3215  0714                     	;# 
  3216  0715                     	;# 
  3217  0716                     	;# 
  3218  0717                     	;# 
  3219  0718                     	;# 
  3220  0719                     	;# 
  3221  0891                     	;# 
  3222  0891                     	;# 
  3223  0891                     	;# 
  3224  0891                     	;# 
  3225  0891                     	;# 
  3226  0891                     	;# 
  3227  0892                     	;# 
  3228  0892                     	;# 
  3229  0892                     	;# 
  3230  0893                     	;# 
  3231  0893                     	;# 
  3232  0893                     	;# 
  3233  0893                     	;# 
  3234  0893                     	;# 
  3235  0893                     	;# 
  3236  0894                     	;# 
  3237  0894                     	;# 
  3238  0894                     	;# 
  3239  0895                     	;# 
  3240  0895                     	;# 
  3241  0895                     	;# 
  3242  0896                     	;# 
  3243  0896                     	;# 
  3244  0896                     	;# 
  3245  089B                     	;# 
  3246  0911                     	;# 
  3247  0912                     	;# 
  3248  0913                     	;# 
  3249  0914                     	;# 
  3250  0915                     	;# 
  3251  0916                     	;# 
  3252  0918                     	;# 
  3253  0919                     	;# 
  3254  091A                     	;# 
  3255  091B                     	;# 
  3256  091C                     	;# 
  3257  091D                     	;# 
  3258  091E                     	;# 
  3259  091F                     	;# 
  3260  0E0F                     	;# 
  3261  0E10                     	;# 
  3262  0E11                     	;# 
  3263  0E12                     	;# 
  3264  0E13                     	;# 
  3265  0E14                     	;# 
  3266  0E15                     	;# 
  3267  0E16                     	;# 
  3268  0E17                     	;# 
  3269  0E18                     	;# 
  3270  0E19                     	;# 
  3271  0E1A                     	;# 
  3272  0E1B                     	;# 
  3273  0E1C                     	;# 
  3274  0E1D                     	;# 
  3275  0E1E                     	;# 
  3276  0E1F                     	;# 
  3277  0E20                     	;# 
  3278  0E21                     	;# 
  3279  0E22                     	;# 
  3280  0E24                     	;# 
  3281  0E25                     	;# 
  3282  0E28                     	;# 
  3283  0E29                     	;# 
  3284  0E2A                     	;# 
  3285  0E2B                     	;# 
  3286  0E2C                     	;# 
  3287  0E2D                     	;# 
  3288  0E2E                     	;# 
  3289  0E2F                     	;# 
  3290  0E90                     	;# 
  3291  0E91                     	;# 
  3292  0E92                     	;# 
  3293  0E94                     	;# 
  3294  0E95                     	;# 
  3295  0E9C                     	;# 
  3296  0E9D                     	;# 
  3297  0E9E                     	;# 
  3298  0E9F                     	;# 
  3299  0EA0                     	;# 
  3300  0EA1                     	;# 
  3301  0EA2                     	;# 
  3302  0EA3                     	;# 
  3303  0EA4                     	;# 
  3304  0EA5                     	;# 
  3305  0EA6                     	;# 
  3306  0EA7                     	;# 
  3307  0F0F                     	;# 
  3308  0F10                     	;# 
  3309  0F11                     	;# 
  3310  0F12                     	;# 
  3311  0F13                     	;# 
  3312  0F14                     	;# 
  3313  0F15                     	;# 
  3314  0F16                     	;# 
  3315  0F17                     	;# 
  3316  0F18                     	;# 
  3317  0F19                     	;# 
  3318  0F1A                     	;# 
  3319  0F1B                     	;# 
  3320  0F1C                     	;# 
  3321  0F1D                     	;# 
  3322  0F1E                     	;# 
  3323  0F1F                     	;# 
  3324  0F20                     	;# 
  3325  0F21                     	;# 
  3326  0F22                     	;# 
  3327  0F23                     	;# 
  3328  0F24                     	;# 
  3329  0F25                     	;# 
  3330  0F26                     	;# 
  3331  0F27                     	;# 
  3332  0F28                     	;# 
  3333  0F29                     	;# 
  3334  0F2A                     	;# 
  3335  0F2B                     	;# 
  3336  0F2C                     	;# 
  3337  0F2D                     	;# 
  3338  0F2E                     	;# 
  3339  0F2F                     	;# 
  3340  0F30                     	;# 
  3341  0F31                     	;# 
  3342  0F32                     	;# 
  3343  0F33                     	;# 
  3344  0F34                     	;# 
  3345  0F35                     	;# 
  3346  0F36                     	;# 
  3347  0F37                     	;# 
  3348  0FE4                     	;# 
  3349  0FE5                     	;# 
  3350  0FE6                     	;# 
  3351  0FE7                     	;# 
  3352  0FE8                     	;# 
  3353  0FE9                     	;# 
  3354  0FEA                     	;# 
  3355  0FEB                     	;# 
  3356  0FED                     	;# 
  3357  0FEE                     	;# 
  3358  0FEF                     	;# 
  3359  0000                     	;# 
  3360  0001                     	;# 
  3361  0002                     	;# 
  3362  0003                     	;# 
  3363  0004                     	;# 
  3364  0005                     	;# 
  3365  0006                     	;# 
  3366  0007                     	;# 
  3367  0008                     	;# 
  3368  0009                     	;# 
  3369  000A                     	;# 
  3370  000B                     	;# 
  3371  000C                     	;# 
  3372  000D                     	;# 
  3373  000E                     	;# 
  3374  0010                     	;# 
  3375  0011                     	;# 
  3376  0012                     	;# 
  3377  0013                     	;# 
  3378  0014                     	;# 
  3379  0015                     	;# 
  3380  0015                     	;# 
  3381  0016                     	;# 
  3382  0016                     	;# 
  3383  0017                     	;# 
  3384  0018                     	;# 
  3385  0019                     	;# 
  3386  0019                     	;# 
  3387  001A                     	;# 
  3388  001B                     	;# 
  3389  001C                     	;# 
  3390  001D                     	;# 
  3391  001E                     	;# 
  3392  001F                     	;# 
  3393  008C                     	;# 
  3394  008D                     	;# 
  3395  008E                     	;# 
  3396  0090                     	;# 
  3397  0091                     	;# 
  3398  0092                     	;# 
  3399  0093                     	;# 
  3400  0094                     	;# 
  3401  0097                     	;# 
  3402  009B                     	;# 
  3403  009B                     	;# 
  3404  009C                     	;# 
  3405  009D                     	;# 
  3406  009E                     	;# 
  3407  009F                     	;# 
  3408  010C                     	;# 
  3409  010D                     	;# 
  3410  010E                     	;# 
  3411  0111                     	;# 
  3412  0112                     	;# 
  3413  0113                     	;# 
  3414  0114                     	;# 
  3415  0115                     	;# 
  3416  0116                     	;# 
  3417  0117                     	;# 
  3418  0118                     	;# 
  3419  0119                     	;# 
  3420  018C                     	;# 
  3421  018D                     	;# 
  3422  018E                     	;# 
  3423  0199                     	;# 
  3424  0199                     	;# 
  3425  0199                     	;# 
  3426  019A                     	;# 
  3427  019A                     	;# 
  3428  019A                     	;# 
  3429  019B                     	;# 
  3430  019B                     	;# 
  3431  019B                     	;# 
  3432  019B                     	;# 
  3433  019B                     	;# 
  3434  019C                     	;# 
  3435  019C                     	;# 
  3436  019C                     	;# 
  3437  019D                     	;# 
  3438  019D                     	;# 
  3439  019D                     	;# 
  3440  019E                     	;# 
  3441  019E                     	;# 
  3442  019E                     	;# 
  3443  019F                     	;# 
  3444  019F                     	;# 
  3445  019F                     	;# 
  3446  019F                     	;# 
  3447  019F                     	;# 
  3448  020C                     	;# 
  3449  020D                     	;# 
  3450  020E                     	;# 
  3451  0211                     	;# 
  3452  0211                     	;# 
  3453  0212                     	;# 
  3454  0212                     	;# 
  3455  0213                     	;# 
  3456  0213                     	;# 
  3457  0214                     	;# 
  3458  0214                     	;# 
  3459  0215                     	;# 
  3460  0215                     	;# 
  3461  0215                     	;# 
  3462  0215                     	;# 
  3463  0216                     	;# 
  3464  0216                     	;# 
  3465  0217                     	;# 
  3466  0217                     	;# 
  3467  0219                     	;# 
  3468  021A                     	;# 
  3469  021B                     	;# 
  3470  021C                     	;# 
  3471  021D                     	;# 
  3472  021D                     	;# 
  3473  021E                     	;# 
  3474  021F                     	;# 
  3475  028C                     	;# 
  3476  028D                     	;# 
  3477  028E                     	;# 
  3478  0291                     	;# 
  3479  0291                     	;# 
  3480  0292                     	;# 
  3481  0293                     	;# 
  3482  0294                     	;# 
  3483  0295                     	;# 
  3484  0295                     	;# 
  3485  0296                     	;# 
  3486  0297                     	;# 
  3487  0298                     	;# 
  3488  029F                     	;# 
  3489  030C                     	;# 
  3490  030D                     	;# 
  3491  030E                     	;# 
  3492  0311                     	;# 
  3493  0311                     	;# 
  3494  0312                     	;# 
  3495  0313                     	;# 
  3496  0314                     	;# 
  3497  0315                     	;# 
  3498  0315                     	;# 
  3499  0316                     	;# 
  3500  0317                     	;# 
  3501  0318                     	;# 
  3502  038C                     	;# 
  3503  038D                     	;# 
  3504  038E                     	;# 
  3505  0391                     	;# 
  3506  0392                     	;# 
  3507  0393                     	;# 
  3508  0394                     	;# 
  3509  0395                     	;# 
  3510  0396                     	;# 
  3511  0397                     	;# 
  3512  0398                     	;# 
  3513  0399                     	;# 
  3514  039A                     	;# 
  3515  039C                     	;# 
  3516  039D                     	;# 
  3517  039E                     	;# 
  3518  039F                     	;# 
  3519  0411                     	;# 
  3520  0411                     	;# 
  3521  0412                     	;# 
  3522  0413                     	;# 
  3523  0414                     	;# 
  3524  0415                     	;# 
  3525  0416                     	;# 
  3526  0417                     	;# 
  3527  0418                     	;# 
  3528  0418                     	;# 
  3529  0419                     	;# 
  3530  041A                     	;# 
  3531  041B                     	;# 
  3532  041C                     	;# 
  3533  041D                     	;# 
  3534  041E                     	;# 
  3535  041F                     	;# 
  3536  0498                     	;# 
  3537  0498                     	;# 
  3538  0499                     	;# 
  3539  049A                     	;# 
  3540  049B                     	;# 
  3541  049B                     	;# 
  3542  049C                     	;# 
  3543  049D                     	;# 
  3544  049E                     	;# 
  3545  049F                     	;# 
  3546  0617                     	;# 
  3547  0618                     	;# 
  3548  0619                     	;# 
  3549  0619                     	;# 
  3550  061A                     	;# 
  3551  061B                     	;# 
  3552  061C                     	;# 
  3553  061C                     	;# 
  3554  061F                     	;# 
  3555  0691                     	;# 
  3556  0692                     	;# 
  3557  0693                     	;# 
  3558  0694                     	;# 
  3559  0695                     	;# 
  3560  0696                     	;# 
  3561  0697                     	;# 
  3562  0698                     	;# 
  3563  0699                     	;# 
  3564  0711                     	;# 
  3565  0712                     	;# 
  3566  0713                     	;# 
  3567  0714                     	;# 
  3568  0715                     	;# 
  3569  0716                     	;# 
  3570  0717                     	;# 
  3571  0718                     	;# 
  3572  0719                     	;# 
  3573  0891                     	;# 
  3574  0891                     	;# 
  3575  0891                     	;# 
  3576  0891                     	;# 
  3577  0891                     	;# 
  3578  0891                     	;# 
  3579  0892                     	;# 
  3580  0892                     	;# 
  3581  0892                     	;# 
  3582  0893                     	;# 
  3583  0893                     	;# 
  3584  0893                     	;# 
  3585  0893                     	;# 
  3586  0893                     	;# 
  3587  0893                     	;# 
  3588  0894                     	;# 
  3589  0894                     	;# 
  3590  0894                     	;# 
  3591  0895                     	;# 
  3592  0895                     	;# 
  3593  0895                     	;# 
  3594  0896                     	;# 
  3595  0896                     	;# 
  3596  0896                     	;# 
  3597  089B                     	;# 
  3598  0911                     	;# 
  3599  0912                     	;# 
  3600  0913                     	;# 
  3601  0914                     	;# 
  3602  0915                     	;# 
  3603  0916                     	;# 
  3604  0918                     	;# 
  3605  0919                     	;# 
  3606  091A                     	;# 
  3607  091B                     	;# 
  3608  091C                     	;# 
  3609  091D                     	;# 
  3610  091E                     	;# 
  3611  091F                     	;# 
  3612  0E0F                     	;# 
  3613  0E10                     	;# 
  3614  0E11                     	;# 
  3615  0E12                     	;# 
  3616  0E13                     	;# 
  3617  0E14                     	;# 
  3618  0E15                     	;# 
  3619  0E16                     	;# 
  3620  0E17                     	;# 
  3621  0E18                     	;# 
  3622  0E19                     	;# 
  3623  0E1A                     	;# 
  3624  0E1B                     	;# 
  3625  0E1C                     	;# 
  3626  0E1D                     	;# 
  3627  0E1E                     	;# 
  3628  0E1F                     	;# 
  3629  0E20                     	;# 
  3630  0E21                     	;# 
  3631  0E22                     	;# 
  3632  0E24                     	;# 
  3633  0E25                     	;# 
  3634  0E28                     	;# 
  3635  0E29                     	;# 
  3636  0E2A                     	;# 
  3637  0E2B                     	;# 
  3638  0E2C                     	;# 
  3639  0E2D                     	;# 
  3640  0E2E                     	;# 
  3641  0E2F                     	;# 
  3642  0E90                     	;# 
  3643  0E91                     	;# 
  3644  0E92                     	;# 
  3645  0E94                     	;# 
  3646  0E95                     	;# 
  3647  0E9C                     	;# 
  3648  0E9D                     	;# 
  3649  0E9E                     	;# 
  3650  0E9F                     	;# 
  3651  0EA0                     	;# 
  3652  0EA1                     	;# 
  3653  0EA2                     	;# 
  3654  0EA3                     	;# 
  3655  0EA4                     	;# 
  3656  0EA5                     	;# 
  3657  0EA6                     	;# 
  3658  0EA7                     	;# 
  3659  0F0F                     	;# 
  3660  0F10                     	;# 
  3661  0F11                     	;# 
  3662  0F12                     	;# 
  3663  0F13                     	;# 
  3664  0F14                     	;# 
  3665  0F15                     	;# 
  3666  0F16                     	;# 
  3667  0F17                     	;# 
  3668  0F18                     	;# 
  3669  0F19                     	;# 
  3670  0F1A                     	;# 
  3671  0F1B                     	;# 
  3672  0F1C                     	;# 
  3673  0F1D                     	;# 
  3674  0F1E                     	;# 
  3675  0F1F                     	;# 
  3676  0F20                     	;# 
  3677  0F21                     	;# 
  3678  0F22                     	;# 
  3679  0F23                     	;# 
  3680  0F24                     	;# 
  3681  0F25                     	;# 
  3682  0F26                     	;# 
  3683  0F27                     	;# 
  3684  0F28                     	;# 
  3685  0F29                     	;# 
  3686  0F2A                     	;# 
  3687  0F2B                     	;# 
  3688  0F2C                     	;# 
  3689  0F2D                     	;# 
  3690  0F2E                     	;# 
  3691  0F2F                     	;# 
  3692  0F30                     	;# 
  3693  0F31                     	;# 
  3694  0F32                     	;# 
  3695  0F33                     	;# 
  3696  0F34                     	;# 
  3697  0F35                     	;# 
  3698  0F36                     	;# 
  3699  0F37                     	;# 
  3700  0FE4                     	;# 
  3701  0FE5                     	;# 
  3702  0FE6                     	;# 
  3703  0FE7                     	;# 
  3704  0FE8                     	;# 
  3705  0FE9                     	;# 
  3706  0FEA                     	;# 
  3707  0FEB                     	;# 
  3708  0FED                     	;# 
  3709  0FEE                     	;# 
  3710  0FEF                     	;# 
  3711  0000                     	;# 
  3712  0001                     	;# 
  3713  0002                     	;# 
  3714  0003                     	;# 
  3715  0004                     	;# 
  3716  0005                     	;# 
  3717  0006                     	;# 
  3718  0007                     	;# 
  3719  0008                     	;# 
  3720  0009                     	;# 
  3721  000A                     	;# 
  3722  000B                     	;# 
  3723  000C                     	;# 
  3724  000D                     	;# 
  3725  000E                     	;# 
  3726  0010                     	;# 
  3727  0011                     	;# 
  3728  0012                     	;# 
  3729  0013                     	;# 
  3730  0014                     	;# 
  3731  0015                     	;# 
  3732  0015                     	;# 
  3733  0016                     	;# 
  3734  0016                     	;# 
  3735  0017                     	;# 
  3736  0018                     	;# 
  3737  0019                     	;# 
  3738  0019                     	;# 
  3739  001A                     	;# 
  3740  001B                     	;# 
  3741  001C                     	;# 
  3742  001D                     	;# 
  3743  001E                     	;# 
  3744  001F                     	;# 
  3745  008C                     	;# 
  3746  008D                     	;# 
  3747  008E                     	;# 
  3748  0090                     	;# 
  3749  0091                     	;# 
  3750  0092                     	;# 
  3751  0093                     	;# 
  3752  0094                     	;# 
  3753  0097                     	;# 
  3754  009B                     	;# 
  3755  009B                     	;# 
  3756  009C                     	;# 
  3757  009D                     	;# 
  3758  009E                     	;# 
  3759  009F                     	;# 
  3760  010C                     	;# 
  3761  010D                     	;# 
  3762  010E                     	;# 
  3763  0111                     	;# 
  3764  0112                     	;# 
  3765  0113                     	;# 
  3766  0114                     	;# 
  3767  0115                     	;# 
  3768  0116                     	;# 
  3769  0117                     	;# 
  3770  0118                     	;# 
  3771  0119                     	;# 
  3772  018C                     	;# 
  3773  018D                     	;# 
  3774  018E                     	;# 
  3775  0199                     	;# 
  3776  0199                     	;# 
  3777  0199                     	;# 
  3778  019A                     	;# 
  3779  019A                     	;# 
  3780  019A                     	;# 
  3781  019B                     	;# 
  3782  019B                     	;# 
  3783  019B                     	;# 
  3784  019B                     	;# 
  3785  019B                     	;# 
  3786  019C                     	;# 
  3787  019C                     	;# 
  3788  019C                     	;# 
  3789  019D                     	;# 
  3790  019D                     	;# 
  3791  019D                     	;# 
  3792  019E                     	;# 
  3793  019E                     	;# 
  3794  019E                     	;# 
  3795  019F                     	;# 
  3796  019F                     	;# 
  3797  019F                     	;# 
  3798  019F                     	;# 
  3799  019F                     	;# 
  3800  020C                     	;# 
  3801  020D                     	;# 
  3802  020E                     	;# 
  3803  0211                     	;# 
  3804  0211                     	;# 
  3805  0212                     	;# 
  3806  0212                     	;# 
  3807  0213                     	;# 
  3808  0213                     	;# 
  3809  0214                     	;# 
  3810  0214                     	;# 
  3811  0215                     	;# 
  3812  0215                     	;# 
  3813  0215                     	;# 
  3814  0215                     	;# 
  3815  0216                     	;# 
  3816  0216                     	;# 
  3817  0217                     	;# 
  3818  0217                     	;# 
  3819  0219                     	;# 
  3820  021A                     	;# 
  3821  021B                     	;# 
  3822  021C                     	;# 
  3823  021D                     	;# 
  3824  021D                     	;# 
  3825  021E                     	;# 
  3826  021F                     	;# 
  3827  028C                     	;# 
  3828  028D                     	;# 
  3829  028E                     	;# 
  3830  0291                     	;# 
  3831  0291                     	;# 
  3832  0292                     	;# 
  3833  0293                     	;# 
  3834  0294                     	;# 
  3835  0295                     	;# 
  3836  0295                     	;# 
  3837  0296                     	;# 
  3838  0297                     	;# 
  3839  0298                     	;# 
  3840  029F                     	;# 
  3841  030C                     	;# 
  3842  030D                     	;# 
  3843  030E                     	;# 
  3844  0311                     	;# 
  3845  0311                     	;# 
  3846  0312                     	;# 
  3847  0313                     	;# 
  3848  0314                     	;# 
  3849  0315                     	;# 
  3850  0315                     	;# 
  3851  0316                     	;# 
  3852  0317                     	;# 
  3853  0318                     	;# 
  3854  038C                     	;# 
  3855  038D                     	;# 
  3856  038E                     	;# 
  3857  0391                     	;# 
  3858  0392                     	;# 
  3859  0393                     	;# 
  3860  0394                     	;# 
  3861  0395                     	;# 
  3862  0396                     	;# 
  3863  0397                     	;# 
  3864  0398                     	;# 
  3865  0399                     	;# 
  3866  039A                     	;# 
  3867  039C                     	;# 
  3868  039D                     	;# 
  3869  039E                     	;# 
  3870  039F                     	;# 
  3871  0411                     	;# 
  3872  0411                     	;# 
  3873  0412                     	;# 
  3874  0413                     	;# 
  3875  0414                     	;# 
  3876  0415                     	;# 
  3877  0416                     	;# 
  3878  0417                     	;# 
  3879  0418                     	;# 
  3880  0418                     	;# 
  3881  0419                     	;# 
  3882  041A                     	;# 
  3883  041B                     	;# 
  3884  041C                     	;# 
  3885  041D                     	;# 
  3886  041E                     	;# 
  3887  041F                     	;# 
  3888  0498                     	;# 
  3889  0498                     	;# 
  3890  0499                     	;# 
  3891  049A                     	;# 
  3892  049B                     	;# 
  3893  049B                     	;# 
  3894  049C                     	;# 
  3895  049D                     	;# 
  3896  049E                     	;# 
  3897  049F                     	;# 
  3898  0617                     	;# 
  3899  0618                     	;# 
  3900  0619                     	;# 
  3901  0619                     	;# 
  3902  061A                     	;# 
  3903  061B                     	;# 
  3904  061C                     	;# 
  3905  061C                     	;# 
  3906  061F                     	;# 
  3907  0691                     	;# 
  3908  0692                     	;# 
  3909  0693                     	;# 
  3910  0694                     	;# 
  3911  0695                     	;# 
  3912  0696                     	;# 
  3913  0697                     	;# 
  3914  0698                     	;# 
  3915  0699                     	;# 
  3916  0711                     	;# 
  3917  0712                     	;# 
  3918  0713                     	;# 
  3919  0714                     	;# 
  3920  0715                     	;# 
  3921  0716                     	;# 
  3922  0717                     	;# 
  3923  0718                     	;# 
  3924  0719                     	;# 
  3925  0891                     	;# 
  3926  0891                     	;# 
  3927  0891                     	;# 
  3928  0891                     	;# 
  3929  0891                     	;# 
  3930  0891                     	;# 
  3931  0892                     	;# 
  3932  0892                     	;# 
  3933  0892                     	;# 
  3934  0893                     	;# 
  3935  0893                     	;# 
  3936  0893                     	;# 
  3937  0893                     	;# 
  3938  0893                     	;# 
  3939  0893                     	;# 
  3940  0894                     	;# 
  3941  0894                     	;# 
  3942  0894                     	;# 
  3943  0895                     	;# 
  3944  0895                     	;# 
  3945  0895                     	;# 
  3946  0896                     	;# 
  3947  0896                     	;# 
  3948  0896                     	;# 
  3949  089B                     	;# 
  3950  0911                     	;# 
  3951  0912                     	;# 
  3952  0913                     	;# 
  3953  0914                     	;# 
  3954  0915                     	;# 
  3955  0916                     	;# 
  3956  0918                     	;# 
  3957  0919                     	;# 
  3958  091A                     	;# 
  3959  091B                     	;# 
  3960  091C                     	;# 
  3961  091D                     	;# 
  3962  091E                     	;# 
  3963  091F                     	;# 
  3964  0E0F                     	;# 
  3965  0E10                     	;# 
  3966  0E11                     	;# 
  3967  0E12                     	;# 
  3968  0E13                     	;# 
  3969  0E14                     	;# 
  3970  0E15                     	;# 
  3971  0E16                     	;# 
  3972  0E17                     	;# 
  3973  0E18                     	;# 
  3974  0E19                     	;# 
  3975  0E1A                     	;# 
  3976  0E1B                     	;# 
  3977  0E1C                     	;# 
  3978  0E1D                     	;# 
  3979  0E1E                     	;# 
  3980  0E1F                     	;# 
  3981  0E20                     	;# 
  3982  0E21                     	;# 
  3983  0E22                     	;# 
  3984  0E24                     	;# 
  3985  0E25                     	;# 
  3986  0E28                     	;# 
  3987  0E29                     	;# 
  3988  0E2A                     	;# 
  3989  0E2B                     	;# 
  3990  0E2C                     	;# 
  3991  0E2D                     	;# 
  3992  0E2E                     	;# 
  3993  0E2F                     	;# 
  3994  0E90                     	;# 
  3995  0E91                     	;# 
  3996  0E92                     	;# 
  3997  0E94                     	;# 
  3998  0E95                     	;# 
  3999  0E9C                     	;# 
  4000  0E9D                     	;# 
  4001  0E9E                     	;# 
  4002  0E9F                     	;# 
  4003  0EA0                     	;# 
  4004  0EA1                     	;# 
  4005  0EA2                     	;# 
  4006  0EA3                     	;# 
  4007  0EA4                     	;# 
  4008  0EA5                     	;# 
  4009  0EA6                     	;# 
  4010  0EA7                     	;# 
  4011  0F0F                     	;# 
  4012  0F10                     	;# 
  4013  0F11                     	;# 
  4014  0F12                     	;# 
  4015  0F13                     	;# 
  4016  0F14                     	;# 
  4017  0F15                     	;# 
  4018  0F16                     	;# 
  4019  0F17                     	;# 
  4020  0F18                     	;# 
  4021  0F19                     	;# 
  4022  0F1A                     	;# 
  4023  0F1B                     	;# 
  4024  0F1C                     	;# 
  4025  0F1D                     	;# 
  4026  0F1E                     	;# 
  4027  0F1F                     	;# 
  4028  0F20                     	;# 
  4029  0F21                     	;# 
  4030  0F22                     	;# 
  4031  0F23                     	;# 
  4032  0F24                     	;# 
  4033  0F25                     	;# 
  4034  0F26                     	;# 
  4035  0F27                     	;# 
  4036  0F28                     	;# 
  4037  0F29                     	;# 
  4038  0F2A                     	;# 
  4039  0F2B                     	;# 
  4040  0F2C                     	;# 
  4041  0F2D                     	;# 
  4042  0F2E                     	;# 
  4043  0F2F                     	;# 
  4044  0F30                     	;# 
  4045  0F31                     	;# 
  4046  0F32                     	;# 
  4047  0F33                     	;# 
  4048  0F34                     	;# 
  4049  0F35                     	;# 
  4050  0F36                     	;# 
  4051  0F37                     	;# 
  4052  0FE4                     	;# 
  4053  0FE5                     	;# 
  4054  0FE6                     	;# 
  4055  0FE7                     	;# 
  4056  0FE8                     	;# 
  4057  0FE9                     	;# 
  4058  0FEA                     	;# 
  4059  0FEB                     	;# 
  4060  0FED                     	;# 
  4061  0FEE                     	;# 
  4062  0FEF                     	;# 
  4063  0000                     	;# 
  4064  0001                     	;# 
  4065  0002                     	;# 
  4066  0003                     	;# 
  4067  0004                     	;# 
  4068  0005                     	;# 
  4069  0006                     	;# 
  4070  0007                     	;# 
  4071  0008                     	;# 
  4072  0009                     	;# 
  4073  000A                     	;# 
  4074  000B                     	;# 
  4075  000C                     	;# 
  4076  000D                     	;# 
  4077  000E                     	;# 
  4078  0010                     	;# 
  4079  0011                     	;# 
  4080  0012                     	;# 
  4081  0013                     	;# 
  4082  0014                     	;# 
  4083  0015                     	;# 
  4084  0015                     	;# 
  4085  0016                     	;# 
  4086  0016                     	;# 
  4087  0017                     	;# 
  4088  0018                     	;# 
  4089  0019                     	;# 
  4090  0019                     	;# 
  4091  001A                     	;# 
  4092  001B                     	;# 
  4093  001C                     	;# 
  4094  001D                     	;# 
  4095  001E                     	;# 
  4096  001F                     	;# 
  4097  008C                     	;# 
  4098  008D                     	;# 
  4099  008E                     	;# 
  4100  0090                     	;# 
  4101  0091                     	;# 
  4102  0092                     	;# 
  4103  0093                     	;# 
  4104  0094                     	;# 
  4105  0097                     	;# 
  4106  009B                     	;# 
  4107  009B                     	;# 
  4108  009C                     	;# 
  4109  009D                     	;# 
  4110  009E                     	;# 
  4111  009F                     	;# 
  4112  010C                     	;# 
  4113  010D                     	;# 
  4114  010E                     	;# 
  4115  0111                     	;# 
  4116  0112                     	;# 
  4117  0113                     	;# 
  4118  0114                     	;# 
  4119  0115                     	;# 
  4120  0116                     	;# 
  4121  0117                     	;# 
  4122  0118                     	;# 
  4123  0119                     	;# 
  4124  018C                     	;# 
  4125  018D                     	;# 
  4126  018E                     	;# 
  4127  0199                     	;# 
  4128  0199                     	;# 
  4129  0199                     	;# 
  4130  019A                     	;# 
  4131  019A                     	;# 
  4132  019A                     	;# 
  4133  019B                     	;# 
  4134  019B                     	;# 
  4135  019B                     	;# 
  4136  019B                     	;# 
  4137  019B                     	;# 
  4138  019C                     	;# 
  4139  019C                     	;# 
  4140  019C                     	;# 
  4141  019D                     	;# 
  4142  019D                     	;# 
  4143  019D                     	;# 
  4144  019E                     	;# 
  4145  019E                     	;# 
  4146  019E                     	;# 
  4147  019F                     	;# 
  4148  019F                     	;# 
  4149  019F                     	;# 
  4150  019F                     	;# 
  4151  019F                     	;# 
  4152  020C                     	;# 
  4153  020D                     	;# 
  4154  020E                     	;# 
  4155  0211                     	;# 
  4156  0211                     	;# 
  4157  0212                     	;# 
  4158  0212                     	;# 
  4159  0213                     	;# 
  4160  0213                     	;# 
  4161  0214                     	;# 
  4162  0214                     	;# 
  4163  0215                     	;# 
  4164  0215                     	;# 
  4165  0215                     	;# 
  4166  0215                     	;# 
  4167  0216                     	;# 
  4168  0216                     	;# 
  4169  0217                     	;# 
  4170  0217                     	;# 
  4171  0219                     	;# 
  4172  021A                     	;# 
  4173  021B                     	;# 
  4174  021C                     	;# 
  4175  021D                     	;# 
  4176  021D                     	;# 
  4177  021E                     	;# 
  4178  021F                     	;# 
  4179  028C                     	;# 
  4180  028D                     	;# 
  4181  028E                     	;# 
  4182  0291                     	;# 
  4183  0291                     	;# 
  4184  0292                     	;# 
  4185  0293                     	;# 
  4186  0294                     	;# 
  4187  0295                     	;# 
  4188  0295                     	;# 
  4189  0296                     	;# 
  4190  0297                     	;# 
  4191  0298                     	;# 
  4192  029F                     	;# 
  4193  030C                     	;# 
  4194  030D                     	;# 
  4195  030E                     	;# 
  4196  0311                     	;# 
  4197  0311                     	;# 
  4198  0312                     	;# 
  4199  0313                     	;# 
  4200  0314                     	;# 
  4201  0315                     	;# 
  4202  0315                     	;# 
  4203  0316                     	;# 
  4204  0317                     	;# 
  4205  0318                     	;# 
  4206  038C                     	;# 
  4207  038D                     	;# 
  4208  038E                     	;# 
  4209  0391                     	;# 
  4210  0392                     	;# 
  4211  0393                     	;# 
  4212  0394                     	;# 
  4213  0395                     	;# 
  4214  0396                     	;# 
  4215  0397                     	;# 
  4216  0398                     	;# 
  4217  0399                     	;# 
  4218  039A                     	;# 
  4219  039C                     	;# 
  4220  039D                     	;# 
  4221  039E                     	;# 
  4222  039F                     	;# 
  4223  0411                     	;# 
  4224  0411                     	;# 
  4225  0412                     	;# 
  4226  0413                     	;# 
  4227  0414                     	;# 
  4228  0415                     	;# 
  4229  0416                     	;# 
  4230  0417                     	;# 
  4231  0418                     	;# 
  4232  0418                     	;# 
  4233  0419                     	;# 
  4234  041A                     	;# 
  4235  041B                     	;# 
  4236  041C                     	;# 
  4237  041D                     	;# 
  4238  041E                     	;# 
  4239  041F                     	;# 
  4240  0498                     	;# 
  4241  0498                     	;# 
  4242  0499                     	;# 
  4243  049A                     	;# 
  4244  049B                     	;# 
  4245  049B                     	;# 
  4246  049C                     	;# 
  4247  049D                     	;# 
  4248  049E                     	;# 
  4249  049F                     	;# 
  4250  0617                     	;# 
  4251  0618                     	;# 
  4252  0619                     	;# 
  4253  0619                     	;# 
  4254  061A                     	;# 
  4255  061B                     	;# 
  4256  061C                     	;# 
  4257  061C                     	;# 
  4258  061F                     	;# 
  4259  0691                     	;# 
  4260  0692                     	;# 
  4261  0693                     	;# 
  4262  0694                     	;# 
  4263  0695                     	;# 
  4264  0696                     	;# 
  4265  0697                     	;# 
  4266  0698                     	;# 
  4267  0699                     	;# 
  4268  0711                     	;# 
  4269  0712                     	;# 
  4270  0713                     	;# 
  4271  0714                     	;# 
  4272  0715                     	;# 
  4273  0716                     	;# 
  4274  0717                     	;# 
  4275  0718                     	;# 
  4276  0719                     	;# 
  4277  0891                     	;# 
  4278  0891                     	;# 
  4279  0891                     	;# 
  4280  0891                     	;# 
  4281  0891                     	;# 
  4282  0891                     	;# 
  4283  0892                     	;# 
  4284  0892                     	;# 
  4285  0892                     	;# 
  4286  0893                     	;# 
  4287  0893                     	;# 
  4288  0893                     	;# 
  4289  0893                     	;# 
  4290  0893                     	;# 
  4291  0893                     	;# 
  4292  0894                     	;# 
  4293  0894                     	;# 
  4294  0894                     	;# 
  4295  0895                     	;# 
  4296  0895                     	;# 
  4297  0895                     	;# 
  4298  0896                     	;# 
  4299  0896                     	;# 
  4300  0896                     	;# 
  4301  089B                     	;# 
  4302  0911                     	;# 
  4303  0912                     	;# 
  4304  0913                     	;# 
  4305  0914                     	;# 
  4306  0915                     	;# 
  4307  0916                     	;# 
  4308  0918                     	;# 
  4309  0919                     	;# 
  4310  091A                     	;# 
  4311  091B                     	;# 
  4312  091C                     	;# 
  4313  091D                     	;# 
  4314  091E                     	;# 
  4315  091F                     	;# 
  4316  0E0F                     	;# 
  4317  0E10                     	;# 
  4318  0E11                     	;# 
  4319  0E12                     	;# 
  4320  0E13                     	;# 
  4321  0E14                     	;# 
  4322  0E15                     	;# 
  4323  0E16                     	;# 
  4324  0E17                     	;# 
  4325  0E18                     	;# 
  4326  0E19                     	;# 
  4327  0E1A                     	;# 
  4328  0E1B                     	;# 
  4329  0E1C                     	;# 
  4330  0E1D                     	;# 
  4331  0E1E                     	;# 
  4332  0E1F                     	;# 
  4333  0E20                     	;# 
  4334  0E21                     	;# 
  4335  0E22                     	;# 
  4336  0E24                     	;# 
  4337  0E25                     	;# 
  4338  0E28                     	;# 
  4339  0E29                     	;# 
  4340  0E2A                     	;# 
  4341  0E2B                     	;# 
  4342  0E2C                     	;# 
  4343  0E2D                     	;# 
  4344  0E2E                     	;# 
  4345  0E2F                     	;# 
  4346  0E90                     	;# 
  4347  0E91                     	;# 
  4348  0E92                     	;# 
  4349  0E94                     	;# 
  4350  0E95                     	;# 
  4351  0E9C                     	;# 
  4352  0E9D                     	;# 
  4353  0E9E                     	;# 
  4354  0E9F                     	;# 
  4355  0EA0                     	;# 
  4356  0EA1                     	;# 
  4357  0EA2                     	;# 
  4358  0EA3                     	;# 
  4359  0EA4                     	;# 
  4360  0EA5                     	;# 
  4361  0EA6                     	;# 
  4362  0EA7                     	;# 
  4363  0F0F                     	;# 
  4364  0F10                     	;# 
  4365  0F11                     	;# 
  4366  0F12                     	;# 
  4367  0F13                     	;# 
  4368  0F14                     	;# 
  4369  0F15                     	;# 
  4370  0F16                     	;# 
  4371  0F17                     	;# 
  4372  0F18                     	;# 
  4373  0F19                     	;# 
  4374  0F1A                     	;# 
  4375  0F1B                     	;# 
  4376  0F1C                     	;# 
  4377  0F1D                     	;# 
  4378  0F1E                     	;# 
  4379  0F1F                     	;# 
  4380  0F20                     	;# 
  4381  0F21                     	;# 
  4382  0F22                     	;# 
  4383  0F23                     	;# 
  4384  0F24                     	;# 
  4385  0F25                     	;# 
  4386  0F26                     	;# 
  4387  0F27                     	;# 
  4388  0F28                     	;# 
  4389  0F29                     	;# 
  4390  0F2A                     	;# 
  4391  0F2B                     	;# 
  4392  0F2C                     	;# 
  4393  0F2D                     	;# 
  4394  0F2E                     	;# 
  4395  0F2F                     	;# 
  4396  0F30                     	;# 
  4397  0F31                     	;# 
  4398  0F32                     	;# 
  4399  0F33                     	;# 
  4400  0F34                     	;# 
  4401  0F35                     	;# 
  4402  0F36                     	;# 
  4403  0F37                     	;# 
  4404  0FE4                     	;# 
  4405  0FE5                     	;# 
  4406  0FE6                     	;# 
  4407  0FE7                     	;# 
  4408  0FE8                     	;# 
  4409  0FE9                     	;# 
  4410  0FEA                     	;# 
  4411  0FEB                     	;# 
  4412  0FED                     	;# 
  4413  0FEE                     	;# 
  4414  0FEF                     	;# 
  4415  0000                     	;# 
  4416  0001                     	;# 
  4417  0002                     	;# 
  4418  0003                     	;# 
  4419  0004                     	;# 
  4420  0005                     	;# 
  4421  0006                     	;# 
  4422  0007                     	;# 
  4423  0008                     	;# 
  4424  0009                     	;# 
  4425  000A                     	;# 
  4426  000B                     	;# 
  4427  000C                     	;# 
  4428  000D                     	;# 
  4429  000E                     	;# 
  4430  0010                     	;# 
  4431  0011                     	;# 
  4432  0012                     	;# 
  4433  0013                     	;# 
  4434  0014                     	;# 
  4435  0015                     	;# 
  4436  0015                     	;# 
  4437  0016                     	;# 
  4438  0016                     	;# 
  4439  0017                     	;# 
  4440  0018                     	;# 
  4441  0019                     	;# 
  4442  0019                     	;# 
  4443  001A                     	;# 
  4444  001B                     	;# 
  4445  001C                     	;# 
  4446  001D                     	;# 
  4447  001E                     	;# 
  4448  001F                     	;# 
  4449  008C                     	;# 
  4450  008D                     	;# 
  4451  008E                     	;# 
  4452  0090                     	;# 
  4453  0091                     	;# 
  4454  0092                     	;# 
  4455  0093                     	;# 
  4456  0094                     	;# 
  4457  0097                     	;# 
  4458  009B                     	;# 
  4459  009B                     	;# 
  4460  009C                     	;# 
  4461  009D                     	;# 
  4462  009E                     	;# 
  4463  009F                     	;# 
  4464  010C                     	;# 
  4465  010D                     	;# 
  4466  010E                     	;# 
  4467  0111                     	;# 
  4468  0112                     	;# 
  4469  0113                     	;# 
  4470  0114                     	;# 
  4471  0115                     	;# 
  4472  0116                     	;# 
  4473  0117                     	;# 
  4474  0118                     	;# 
  4475  0119                     	;# 
  4476  018C                     	;# 
  4477  018D                     	;# 
  4478  018E                     	;# 
  4479  0199                     	;# 
  4480  0199                     	;# 
  4481  0199                     	;# 
  4482  019A                     	;# 
  4483  019A                     	;# 
  4484  019A                     	;# 
  4485  019B                     	;# 
  4486  019B                     	;# 
  4487  019B                     	;# 
  4488  019B                     	;# 
  4489  019B                     	;# 
  4490  019C                     	;# 
  4491  019C                     	;# 
  4492  019C                     	;# 
  4493  019D                     	;# 
  4494  019D                     	;# 
  4495  019D                     	;# 
  4496  019E                     	;# 
  4497  019E                     	;# 
  4498  019E                     	;# 
  4499  019F                     	;# 
  4500  019F                     	;# 
  4501  019F                     	;# 
  4502  019F                     	;# 
  4503  019F                     	;# 
  4504  020C                     	;# 
  4505  020D                     	;# 
  4506  020E                     	;# 
  4507  0211                     	;# 
  4508  0211                     	;# 
  4509  0212                     	;# 
  4510  0212                     	;# 
  4511  0213                     	;# 
  4512  0213                     	;# 
  4513  0214                     	;# 
  4514  0214                     	;# 
  4515  0215                     	;# 
  4516  0215                     	;# 
  4517  0215                     	;# 
  4518  0215                     	;# 
  4519  0216                     	;# 
  4520  0216                     	;# 
  4521  0217                     	;# 
  4522  0217                     	;# 
  4523  0219                     	;# 
  4524  021A                     	;# 
  4525  021B                     	;# 
  4526  021C                     	;# 
  4527  021D                     	;# 
  4528  021D                     	;# 
  4529  021E                     	;# 
  4530  021F                     	;# 
  4531  028C                     	;# 
  4532  028D                     	;# 
  4533  028E                     	;# 
  4534  0291                     	;# 
  4535  0291                     	;# 
  4536  0292                     	;# 
  4537  0293                     	;# 
  4538  0294                     	;# 
  4539  0295                     	;# 
  4540  0295                     	;# 
  4541  0296                     	;# 
  4542  0297                     	;# 
  4543  0298                     	;# 
  4544  029F                     	;# 
  4545  030C                     	;# 
  4546  030D                     	;# 
  4547  030E                     	;# 
  4548  0311                     	;# 
  4549  0311                     	;# 
  4550  0312                     	;# 
  4551  0313                     	;# 
  4552  0314                     	;# 
  4553  0315                     	;# 
  4554  0315                     	;# 
  4555  0316                     	;# 
  4556  0317                     	;# 
  4557  0318                     	;# 
  4558  038C                     	;# 
  4559  038D                     	;# 
  4560  038E                     	;# 
  4561  0391                     	;# 
  4562  0392                     	;# 
  4563  0393                     	;# 
  4564  0394                     	;# 
  4565  0395                     	;# 
  4566  0396                     	;# 
  4567  0397                     	;# 
  4568  0398                     	;# 
  4569  0399                     	;# 
  4570  039A                     	;# 
  4571  039C                     	;# 
  4572  039D                     	;# 
  4573  039E                     	;# 
  4574  039F                     	;# 
  4575  0411                     	;# 
  4576  0411                     	;# 
  4577  0412                     	;# 
  4578  0413                     	;# 
  4579  0414                     	;# 
  4580  0415                     	;# 
  4581  0416                     	;# 
  4582  0417                     	;# 
  4583  0418                     	;# 
  4584  0418                     	;# 
  4585  0419                     	;# 
  4586  041A                     	;# 
  4587  041B                     	;# 
  4588  041C                     	;# 
  4589  041D                     	;# 
  4590  041E                     	;# 
  4591  041F                     	;# 
  4592  0498                     	;# 
  4593  0498                     	;# 
  4594  0499                     	;# 
  4595  049A                     	;# 
  4596  049B                     	;# 
  4597  049B                     	;# 
  4598  049C                     	;# 
  4599  049D                     	;# 
  4600  049E                     	;# 
  4601  049F                     	;# 
  4602  0617                     	;# 
  4603  0618                     	;# 
  4604  0619                     	;# 
  4605  0619                     	;# 
  4606  061A                     	;# 
  4607  061B                     	;# 
  4608  061C                     	;# 
  4609  061C                     	;# 
  4610  061F                     	;# 
  4611  0691                     	;# 
  4612  0692                     	;# 
  4613  0693                     	;# 
  4614  0694                     	;# 
  4615  0695                     	;# 
  4616  0696                     	;# 
  4617  0697                     	;# 
  4618  0698                     	;# 
  4619  0699                     	;# 
  4620  0711                     	;# 
  4621  0712                     	;# 
  4622  0713                     	;# 
  4623  0714                     	;# 
  4624  0715                     	;# 
  4625  0716                     	;# 
  4626  0717                     	;# 
  4627  0718                     	;# 
  4628  0719                     	;# 
  4629  0891                     	;# 
  4630  0891                     	;# 
  4631  0891                     	;# 
  4632  0891                     	;# 
  4633  0891                     	;# 
  4634  0891                     	;# 
  4635  0892                     	;# 
  4636  0892                     	;# 
  4637  0892                     	;# 
  4638  0893                     	;# 
  4639  0893                     	;# 
  4640  0893                     	;# 
  4641  0893                     	;# 
  4642  0893                     	;# 
  4643  0893                     	;# 
  4644  0894                     	;# 
  4645  0894                     	;# 
  4646  0894                     	;# 
  4647  0895                     	;# 
  4648  0895                     	;# 
  4649  0895                     	;# 
  4650  0896                     	;# 
  4651  0896                     	;# 
  4652  0896                     	;# 
  4653  089B                     	;# 
  4654  0911                     	;# 
  4655  0912                     	;# 
  4656  0913                     	;# 
  4657  0914                     	;# 
  4658  0915                     	;# 
  4659  0916                     	;# 
  4660  0918                     	;# 
  4661  0919                     	;# 
  4662  091A                     	;# 
  4663  091B                     	;# 
  4664  091C                     	;# 
  4665  091D                     	;# 
  4666  091E                     	;# 
  4667  091F                     	;# 
  4668  0E0F                     	;# 
  4669  0E10                     	;# 
  4670  0E11                     	;# 
  4671  0E12                     	;# 
  4672  0E13                     	;# 
  4673  0E14                     	;# 
  4674  0E15                     	;# 
  4675  0E16                     	;# 
  4676  0E17                     	;# 
  4677  0E18                     	;# 
  4678  0E19                     	;# 
  4679  0E1A                     	;# 
  4680  0E1B                     	;# 
  4681  0E1C                     	;# 
  4682  0E1D                     	;# 
  4683  0E1E                     	;# 
  4684  0E1F                     	;# 
  4685  0E20                     	;# 
  4686  0E21                     	;# 
  4687  0E22                     	;# 
  4688  0E24                     	;# 
  4689  0E25                     	;# 
  4690  0E28                     	;# 
  4691  0E29                     	;# 
  4692  0E2A                     	;# 
  4693  0E2B                     	;# 
  4694  0E2C                     	;# 
  4695  0E2D                     	;# 
  4696  0E2E                     	;# 
  4697  0E2F                     	;# 
  4698  0E90                     	;# 
  4699  0E91                     	;# 
  4700  0E92                     	;# 
  4701  0E94                     	;# 
  4702  0E95                     	;# 
  4703  0E9C                     	;# 
  4704  0E9D                     	;# 
  4705  0E9E                     	;# 
  4706  0E9F                     	;# 
  4707  0EA0                     	;# 
  4708  0EA1                     	;# 
  4709  0EA2                     	;# 
  4710  0EA3                     	;# 
  4711  0EA4                     	;# 
  4712  0EA5                     	;# 
  4713  0EA6                     	;# 
  4714  0EA7                     	;# 
  4715  0F0F                     	;# 
  4716  0F10                     	;# 
  4717  0F11                     	;# 
  4718  0F12                     	;# 
  4719  0F13                     	;# 
  4720  0F14                     	;# 
  4721  0F15                     	;# 
  4722  0F16                     	;# 
  4723  0F17                     	;# 
  4724  0F18                     	;# 
  4725  0F19                     	;# 
  4726  0F1A                     	;# 
  4727  0F1B                     	;# 
  4728  0F1C                     	;# 
  4729  0F1D                     	;# 
  4730  0F1E                     	;# 
  4731  0F1F                     	;# 
  4732  0F20                     	;# 
  4733  0F21                     	;# 
  4734  0F22                     	;# 
  4735  0F23                     	;# 
  4736  0F24                     	;# 
  4737  0F25                     	;# 
  4738  0F26                     	;# 
  4739  0F27                     	;# 
  4740  0F28                     	;# 
  4741  0F29                     	;# 
  4742  0F2A                     	;# 
  4743  0F2B                     	;# 
  4744  0F2C                     	;# 
  4745  0F2D                     	;# 
  4746  0F2E                     	;# 
  4747  0F2F                     	;# 
  4748  0F30                     	;# 
  4749  0F31                     	;# 
  4750  0F32                     	;# 
  4751  0F33                     	;# 
  4752  0F34                     	;# 
  4753  0F35                     	;# 
  4754  0F36                     	;# 
  4755  0F37                     	;# 
  4756  0FE4                     	;# 
  4757  0FE5                     	;# 
  4758  0FE6                     	;# 
  4759  0FE7                     	;# 
  4760  0FE8                     	;# 
  4761  0FE9                     	;# 
  4762  0FEA                     	;# 
  4763  0FEB                     	;# 
  4764  0FED                     	;# 
  4765  0FEE                     	;# 
  4766  0FEF                     	;# 
  4767  0000                     	;# 
  4768  0001                     	;# 
  4769  0002                     	;# 
  4770  0003                     	;# 
  4771  0004                     	;# 
  4772  0005                     	;# 
  4773  0006                     	;# 
  4774  0007                     	;# 
  4775  0008                     	;# 
  4776  0009                     	;# 
  4777  000A                     	;# 
  4778  000B                     	;# 
  4779  000C                     	;# 
  4780  000D                     	;# 
  4781  000E                     	;# 
  4782  0010                     	;# 
  4783  0011                     	;# 
  4784  0012                     	;# 
  4785  0013                     	;# 
  4786  0014                     	;# 
  4787  0015                     	;# 
  4788  0015                     	;# 
  4789  0016                     	;# 
  4790  0016                     	;# 
  4791  0017                     	;# 
  4792  0018                     	;# 
  4793  0019                     	;# 
  4794  0019                     	;# 
  4795  001A                     	;# 
  4796  001B                     	;# 
  4797  001C                     	;# 
  4798  001D                     	;# 
  4799  001E                     	;# 
  4800  001F                     	;# 
  4801  008C                     	;# 
  4802  008D                     	;# 
  4803  008E                     	;# 
  4804  0090                     	;# 
  4805  0091                     	;# 
  4806  0092                     	;# 
  4807  0093                     	;# 
  4808  0094                     	;# 
  4809  0097                     	;# 
  4810  009B                     	;# 
  4811  009B                     	;# 
  4812  009C                     	;# 
  4813  009D                     	;# 
  4814  009E                     	;# 
  4815  009F                     	;# 
  4816  010C                     	;# 
  4817  010D                     	;# 
  4818  010E                     	;# 
  4819  0111                     	;# 
  4820  0112                     	;# 
  4821  0113                     	;# 
  4822  0114                     	;# 
  4823  0115                     	;# 
  4824  0116                     	;# 
  4825  0117                     	;# 
  4826  0118                     	;# 
  4827  0119                     	;# 
  4828  018C                     	;# 
  4829  018D                     	;# 
  4830  018E                     	;# 
  4831  0199                     	;# 
  4832  0199                     	;# 
  4833  0199                     	;# 
  4834  019A                     	;# 
  4835  019A                     	;# 
  4836  019A                     	;# 
  4837  019B                     	;# 
  4838  019B                     	;# 
  4839  019B                     	;# 
  4840  019B                     	;# 
  4841  019B                     	;# 
  4842  019C                     	;# 
  4843  019C                     	;# 
  4844  019C                     	;# 
  4845  019D                     	;# 
  4846  019D                     	;# 
  4847  019D                     	;# 
  4848  019E                     	;# 
  4849  019E                     	;# 
  4850  019E                     	;# 
  4851  019F                     	;# 
  4852  019F                     	;# 
  4853  019F                     	;# 
  4854  019F                     	;# 
  4855  019F                     	;# 
  4856  020C                     	;# 
  4857  020D                     	;# 
  4858  020E                     	;# 
  4859  0211                     	;# 
  4860  0211                     	;# 
  4861  0212                     	;# 
  4862  0212                     	;# 
  4863  0213                     	;# 
  4864  0213                     	;# 
  4865  0214                     	;# 
  4866  0214                     	;# 
  4867  0215                     	;# 
  4868  0215                     	;# 
  4869  0215                     	;# 
  4870  0215                     	;# 
  4871  0216                     	;# 
  4872  0216                     	;# 
  4873  0217                     	;# 
  4874  0217                     	;# 
  4875  0219                     	;# 
  4876  021A                     	;# 
  4877  021B                     	;# 
  4878  021C                     	;# 
  4879  021D                     	;# 
  4880  021D                     	;# 
  4881  021E                     	;# 
  4882  021F                     	;# 
  4883  028C                     	;# 
  4884  028D                     	;# 
  4885  028E                     	;# 
  4886  0291                     	;# 
  4887  0291                     	;# 
  4888  0292                     	;# 
  4889  0293                     	;# 
  4890  0294                     	;# 
  4891  0295                     	;# 
  4892  0295                     	;# 
  4893  0296                     	;# 
  4894  0297                     	;# 
  4895  0298                     	;# 
  4896  029F                     	;# 
  4897  030C                     	;# 
  4898  030D                     	;# 
  4899  030E                     	;# 
  4900  0311                     	;# 
  4901  0311                     	;# 
  4902  0312                     	;# 
  4903  0313                     	;# 
  4904  0314                     	;# 
  4905  0315                     	;# 
  4906  0315                     	;# 
  4907  0316                     	;# 
  4908  0317                     	;# 
  4909  0318                     	;# 
  4910  038C                     	;# 
  4911  038D                     	;# 
  4912  038E                     	;# 
  4913  0391                     	;# 
  4914  0392                     	;# 
  4915  0393                     	;# 
  4916  0394                     	;# 
  4917  0395                     	;# 
  4918  0396                     	;# 
  4919  0397                     	;# 
  4920  0398                     	;# 
  4921  0399                     	;# 
  4922  039A                     	;# 
  4923  039C                     	;# 
  4924  039D                     	;# 
  4925  039E                     	;# 
  4926  039F                     	;# 
  4927  0411                     	;# 
  4928  0411                     	;# 
  4929  0412                     	;# 
  4930  0413                     	;# 
  4931  0414                     	;# 
  4932  0415                     	;# 
  4933  0416                     	;# 
  4934  0417                     	;# 
  4935  0418                     	;# 
  4936  0418                     	;# 
  4937  0419                     	;# 
  4938  041A                     	;# 
  4939  041B                     	;# 
  4940  041C                     	;# 
  4941  041D                     	;# 
  4942  041E                     	;# 
  4943  041F                     	;# 
  4944  0498                     	;# 
  4945  0498                     	;# 
  4946  0499                     	;# 
  4947  049A                     	;# 
  4948  049B                     	;# 
  4949  049B                     	;# 
  4950  049C                     	;# 
  4951  049D                     	;# 
  4952  049E                     	;# 
  4953  049F                     	;# 
  4954  0617                     	;# 
  4955  0618                     	;# 
  4956  0619                     	;# 
  4957  0619                     	;# 
  4958  061A                     	;# 
  4959  061B                     	;# 
  4960  061C                     	;# 
  4961  061C                     	;# 
  4962  061F                     	;# 
  4963  0691                     	;# 
  4964  0692                     	;# 
  4965  0693                     	;# 
  4966  0694                     	;# 
  4967  0695                     	;# 
  4968  0696                     	;# 
  4969  0697                     	;# 
  4970  0698                     	;# 
  4971  0699                     	;# 
  4972  0711                     	;# 
  4973  0712                     	;# 
  4974  0713                     	;# 
  4975  0714                     	;# 
  4976  0715                     	;# 
  4977  0716                     	;# 
  4978  0717                     	;# 
  4979  0718                     	;# 
  4980  0719                     	;# 
  4981  0891                     	;# 
  4982  0891                     	;# 
  4983  0891                     	;# 
  4984  0891                     	;# 
  4985  0891                     	;# 
  4986  0891                     	;# 
  4987  0892                     	;# 
  4988  0892                     	;# 
  4989  0892                     	;# 
  4990  0893                     	;# 
  4991  0893                     	;# 
  4992  0893                     	;# 
  4993  0893                     	;# 
  4994  0893                     	;# 
  4995  0893                     	;# 
  4996  0894                     	;# 
  4997  0894                     	;# 
  4998  0894                     	;# 
  4999  0895                     	;# 
  5000  0895                     	;# 
  5001  0895                     	;# 
  5002  0896                     	;# 
  5003  0896                     	;# 
  5004  0896                     	;# 
  5005  089B                     	;# 
  5006  0911                     	;# 
  5007  0912                     	;# 
  5008  0913                     	;# 
  5009  0914                     	;# 
  5010  0915                     	;# 
  5011  0916                     	;# 
  5012  0918                     	;# 
  5013  0919                     	;# 
  5014  091A                     	;# 
  5015  091B                     	;# 
  5016  091C                     	;# 
  5017  091D                     	;# 
  5018  091E                     	;# 
  5019  091F                     	;# 
  5020  0E0F                     	;# 
  5021  0E10                     	;# 
  5022  0E11                     	;# 
  5023  0E12                     	;# 
  5024  0E13                     	;# 
  5025  0E14                     	;# 
  5026  0E15                     	;# 
  5027  0E16                     	;# 
  5028  0E17                     	;# 
  5029  0E18                     	;# 
  5030  0E19                     	;# 
  5031  0E1A                     	;# 
  5032  0E1B                     	;# 
  5033  0E1C                     	;# 
  5034  0E1D                     	;# 
  5035  0E1E                     	;# 
  5036  0E1F                     	;# 
  5037  0E20                     	;# 
  5038  0E21                     	;# 
  5039  0E22                     	;# 
  5040  0E24                     	;# 
  5041  0E25                     	;# 
  5042  0E28                     	;# 
  5043  0E29                     	;# 
  5044  0E2A                     	;# 
  5045  0E2B                     	;# 
  5046  0E2C                     	;# 
  5047  0E2D                     	;# 
  5048  0E2E                     	;# 
  5049  0E2F                     	;# 
  5050  0E90                     	;# 
  5051  0E91                     	;# 
  5052  0E92                     	;# 
  5053  0E94                     	;# 
  5054  0E95                     	;# 
  5055  0E9C                     	;# 
  5056  0E9D                     	;# 
  5057  0E9E                     	;# 
  5058  0E9F                     	;# 
  5059  0EA0                     	;# 
  5060  0EA1                     	;# 
  5061  0EA2                     	;# 
  5062  0EA3                     	;# 
  5063  0EA4                     	;# 
  5064  0EA5                     	;# 
  5065  0EA6                     	;# 
  5066  0EA7                     	;# 
  5067  0F0F                     	;# 
  5068  0F10                     	;# 
  5069  0F11                     	;# 
  5070  0F12                     	;# 
  5071  0F13                     	;# 
  5072  0F14                     	;# 
  5073  0F15                     	;# 
  5074  0F16                     	;# 
  5075  0F17                     	;# 
  5076  0F18                     	;# 
  5077  0F19                     	;# 
  5078  0F1A                     	;# 
  5079  0F1B                     	;# 
  5080  0F1C                     	;# 
  5081  0F1D                     	;# 
  5082  0F1E                     	;# 
  5083  0F1F                     	;# 
  5084  0F20                     	;# 
  5085  0F21                     	;# 
  5086  0F22                     	;# 
  5087  0F23                     	;# 
  5088  0F24                     	;# 
  5089  0F25                     	;# 
  5090  0F26                     	;# 
  5091  0F27                     	;# 
  5092  0F28                     	;# 
  5093  0F29                     	;# 
  5094  0F2A                     	;# 
  5095  0F2B                     	;# 
  5096  0F2C                     	;# 
  5097  0F2D                     	;# 
  5098  0F2E                     	;# 
  5099  0F2F                     	;# 
  5100  0F30                     	;# 
  5101  0F31                     	;# 
  5102  0F32                     	;# 
  5103  0F33                     	;# 
  5104  0F34                     	;# 
  5105  0F35                     	;# 
  5106  0F36                     	;# 
  5107  0F37                     	;# 
  5108  0FE4                     	;# 
  5109  0FE5                     	;# 
  5110  0FE6                     	;# 
  5111  0FE7                     	;# 
  5112  0FE8                     	;# 
  5113  0FE9                     	;# 
  5114  0FEA                     	;# 
  5115  0FEB                     	;# 
  5116  0FED                     	;# 
  5117  0FEE                     	;# 
  5118  0FEF                     	;# 
  5119  0000                     	;# 
  5120  0001                     	;# 
  5121  0002                     	;# 
  5122  0003                     	;# 
  5123  0004                     	;# 
  5124  0005                     	;# 
  5125  0006                     	;# 
  5126  0007                     	;# 
  5127  0008                     	;# 
  5128  0009                     	;# 
  5129  000A                     	;# 
  5130  000B                     	;# 
  5131  000C                     	;# 
  5132  000D                     	;# 
  5133  000E                     	;# 
  5134  0010                     	;# 
  5135  0011                     	;# 
  5136  0012                     	;# 
  5137  0013                     	;# 
  5138  0014                     	;# 
  5139  0015                     	;# 
  5140  0015                     	;# 
  5141  0016                     	;# 
  5142  0016                     	;# 
  5143  0017                     	;# 
  5144  0018                     	;# 
  5145  0019                     	;# 
  5146  0019                     	;# 
  5147  001A                     	;# 
  5148  001B                     	;# 
  5149  001C                     	;# 
  5150  001D                     	;# 
  5151  001E                     	;# 
  5152  001F                     	;# 
  5153  008C                     	;# 
  5154  008D                     	;# 
  5155  008E                     	;# 
  5156  0090                     	;# 
  5157  0091                     	;# 
  5158  0092                     	;# 
  5159  0093                     	;# 
  5160  0094                     	;# 
  5161  0097                     	;# 
  5162  009B                     	;# 
  5163  009B                     	;# 
  5164  009C                     	;# 
  5165  009D                     	;# 
  5166  009E                     	;# 
  5167  009F                     	;# 
  5168  010C                     	;# 
  5169  010D                     	;# 
  5170  010E                     	;# 
  5171  0111                     	;# 
  5172  0112                     	;# 
  5173  0113                     	;# 
  5174  0114                     	;# 
  5175  0115                     	;# 
  5176  0116                     	;# 
  5177  0117                     	;# 
  5178  0118                     	;# 
  5179  0119                     	;# 
  5180  018C                     	;# 
  5181  018D                     	;# 
  5182  018E                     	;# 
  5183  0197                     	;# 
  5184  0199                     	;# 
  5185  0199                     	;# 
  5186  0199                     	;# 
  5187  019A                     	;# 
  5188  019A                     	;# 
  5189  019A                     	;# 
  5190  019B                     	;# 
  5191  019B                     	;# 
  5192  019B                     	;# 
  5193  019B                     	;# 
  5194  019B                     	;# 
  5195  019C                     	;# 
  5196  019C                     	;# 
  5197  019C                     	;# 
  5198  019D                     	;# 
  5199  019D                     	;# 
  5200  019D                     	;# 
  5201  019E                     	;# 
  5202  019E                     	;# 
  5203  019E                     	;# 
  5204  019F                     	;# 
  5205  019F                     	;# 
  5206  019F                     	;# 
  5207  019F                     	;# 
  5208  019F                     	;# 
  5209  020C                     	;# 
  5210  020D                     	;# 
  5211  020E                     	;# 
  5212  0211                     	;# 
  5213  0211                     	;# 
  5214  0212                     	;# 
  5215  0212                     	;# 
  5216  0213                     	;# 
  5217  0213                     	;# 
  5218  0214                     	;# 
  5219  0214                     	;# 
  5220  0215                     	;# 
  5221  0215                     	;# 
  5222  0215                     	;# 
  5223  0215                     	;# 
  5224  0216                     	;# 
  5225  0216                     	;# 
  5226  0217                     	;# 
  5227  0217                     	;# 
  5228  0219                     	;# 
  5229  021A                     	;# 
  5230  021B                     	;# 
  5231  021C                     	;# 
  5232  021D                     	;# 
  5233  021D                     	;# 
  5234  021E                     	;# 
  5235  021F                     	;# 
  5236  028C                     	;# 
  5237  028D                     	;# 
  5238  028E                     	;# 
  5239  0291                     	;# 
  5240  0291                     	;# 
  5241  0292                     	;# 
  5242  0293                     	;# 
  5243  0294                     	;# 
  5244  0295                     	;# 
  5245  0295                     	;# 
  5246  0296                     	;# 
  5247  0297                     	;# 
  5248  0298                     	;# 
  5249  029F                     	;# 
  5250  030C                     	;# 
  5251  030D                     	;# 
  5252  030E                     	;# 
  5253  0311                     	;# 
  5254  0311                     	;# 
  5255  0312                     	;# 
  5256  0313                     	;# 
  5257  0314                     	;# 
  5258  0315                     	;# 
  5259  0315                     	;# 
  5260  0316                     	;# 
  5261  0317                     	;# 
  5262  0318                     	;# 
  5263  038C                     	;# 
  5264  038D                     	;# 
  5265  038E                     	;# 
  5266  0391                     	;# 
  5267  0392                     	;# 
  5268  0393                     	;# 
  5269  0394                     	;# 
  5270  0395                     	;# 
  5271  0396                     	;# 
  5272  0397                     	;# 
  5273  0398                     	;# 
  5274  0399                     	;# 
  5275  039A                     	;# 
  5276  039C                     	;# 
  5277  039D                     	;# 
  5278  039E                     	;# 
  5279  039F                     	;# 
  5280  0411                     	;# 
  5281  0411                     	;# 
  5282  0412                     	;# 
  5283  0413                     	;# 
  5284  0414                     	;# 
  5285  0415                     	;# 
  5286  0416                     	;# 
  5287  0417                     	;# 
  5288  0418                     	;# 
  5289  0418                     	;# 
  5290  0419                     	;# 
  5291  041A                     	;# 
  5292  041B                     	;# 
  5293  041C                     	;# 
  5294  041D                     	;# 
  5295  041E                     	;# 
  5296  041F                     	;# 
  5297  0498                     	;# 
  5298  0498                     	;# 
  5299  0499                     	;# 
  5300  049A                     	;# 
  5301  049B                     	;# 
  5302  049B                     	;# 
  5303  049C                     	;# 
  5304  049D                     	;# 
  5305  049E                     	;# 
  5306  049F                     	;# 
  5307  0617                     	;# 
  5308  0618                     	;# 
  5309  0619                     	;# 
  5310  0619                     	;# 
  5311  061A                     	;# 
  5312  061B                     	;# 
  5313  061C                     	;# 
  5314  061C                     	;# 
  5315  061F                     	;# 
  5316  0691                     	;# 
  5317  0692                     	;# 
  5318  0693                     	;# 
  5319  0694                     	;# 
  5320  0695                     	;# 
  5321  0696                     	;# 
  5322  0697                     	;# 
  5323  0698                     	;# 
  5324  0699                     	;# 
  5325  0711                     	;# 
  5326  0712                     	;# 
  5327  0713                     	;# 
  5328  0714                     	;# 
  5329  0715                     	;# 
  5330  0716                     	;# 
  5331  0717                     	;# 
  5332  0718                     	;# 
  5333  0719                     	;# 
  5334  0891                     	;# 
  5335  0891                     	;# 
  5336  0891                     	;# 
  5337  0891                     	;# 
  5338  0891                     	;# 
  5339  0891                     	;# 
  5340  0892                     	;# 
  5341  0892                     	;# 
  5342  0892                     	;# 
  5343  0893                     	;# 
  5344  0893                     	;# 
  5345  0893                     	;# 
  5346  0893                     	;# 
  5347  0893                     	;# 
  5348  0893                     	;# 
  5349  0894                     	;# 
  5350  0894                     	;# 
  5351  0894                     	;# 
  5352  0895                     	;# 
  5353  0895                     	;# 
  5354  0895                     	;# 
  5355  0896                     	;# 
  5356  0896                     	;# 
  5357  0896                     	;# 
  5358  089B                     	;# 
  5359  0911                     	;# 
  5360  0912                     	;# 
  5361  0913                     	;# 
  5362  0914                     	;# 
  5363  0915                     	;# 
  5364  0916                     	;# 
  5365  0918                     	;# 
  5366  0919                     	;# 
  5367  091A                     	;# 
  5368  091B                     	;# 
  5369  091C                     	;# 
  5370  091D                     	;# 
  5371  091E                     	;# 
  5372  091F                     	;# 
  5373  0E0F                     	;# 
  5374  0E10                     	;# 
  5375  0E11                     	;# 
  5376  0E12                     	;# 
  5377  0E13                     	;# 
  5378  0E14                     	;# 
  5379  0E15                     	;# 
  5380  0E16                     	;# 
  5381  0E17                     	;# 
  5382  0E18                     	;# 
  5383  0E19                     	;# 
  5384  0E1A                     	;# 
  5385  0E1B                     	;# 
  5386  0E1C                     	;# 
  5387  0E1D                     	;# 
  5388  0E1E                     	;# 
  5389  0E1F                     	;# 
  5390  0E20                     	;# 
  5391  0E21                     	;# 
  5392  0E22                     	;# 
  5393  0E24                     	;# 
  5394  0E25                     	;# 
  5395  0E28                     	;# 
  5396  0E29                     	;# 
  5397  0E2A                     	;# 
  5398  0E2B                     	;# 
  5399  0E2C                     	;# 
  5400  0E2D                     	;# 
  5401  0E2E                     	;# 
  5402  0E2F                     	;# 
  5403  0E90                     	;# 
  5404  0E91                     	;# 
  5405  0E92                     	;# 
  5406  0E94                     	;# 
  5407  0E95                     	;# 
  5408  0E9C                     	;# 
  5409  0E9D                     	;# 
  5410  0E9E                     	;# 
  5411  0E9F                     	;# 
  5412  0EA0                     	;# 
  5413  0EA1                     	;# 
  5414  0EA2                     	;# 
  5415  0EA3                     	;# 
  5416  0EA4                     	;# 
  5417  0EA5                     	;# 
  5418  0EA6                     	;# 
  5419  0EA7                     	;# 
  5420  0F0F                     	;# 
  5421  0F10                     	;# 
  5422  0F11                     	;# 
  5423  0F12                     	;# 
  5424  0F13                     	;# 
  5425  0F14                     	;# 
  5426  0F15                     	;# 
  5427  0F16                     	;# 
  5428  0F17                     	;# 
  5429  0F18                     	;# 
  5430  0F19                     	;# 
  5431  0F1A                     	;# 
  5432  0F1B                     	;# 
  5433  0F1C                     	;# 
  5434  0F1D                     	;# 
  5435  0F1E                     	;# 
  5436  0F1F                     	;# 
  5437  0F20                     	;# 
  5438  0F21                     	;# 
  5439  0F22                     	;# 
  5440  0F23                     	;# 
  5441  0F24                     	;# 
  5442  0F25                     	;# 
  5443  0F26                     	;# 
  5444  0F27                     	;# 
  5445  0F28                     	;# 
  5446  0F29                     	;# 
  5447  0F2A                     	;# 
  5448  0F2B                     	;# 
  5449  0F2C                     	;# 
  5450  0F2D                     	;# 
  5451  0F2E                     	;# 
  5452  0F2F                     	;# 
  5453  0F30                     	;# 
  5454  0F31                     	;# 
  5455  0F32                     	;# 
  5456  0F33                     	;# 
  5457  0F34                     	;# 
  5458  0F35                     	;# 
  5459  0F36                     	;# 
  5460  0F37                     	;# 
  5461  0FE4                     	;# 
  5462  0FE5                     	;# 
  5463  0FE6                     	;# 
  5464  0FE7                     	;# 
  5465  0FE8                     	;# 
  5466  0FE9                     	;# 
  5467  0FEA                     	;# 
  5468  0FEB                     	;# 
  5469  0FED                     	;# 
  5470  0FEE                     	;# 
  5471  0FEF                     	;# 
  5472  0000                     	;# 
  5473  0001                     	;# 
  5474  0002                     	;# 
  5475  0003                     	;# 
  5476  0004                     	;# 
  5477  0005                     	;# 
  5478  0006                     	;# 
  5479  0007                     	;# 
  5480  0008                     	;# 
  5481  0009                     	;# 
  5482  000A                     	;# 
  5483  000B                     	;# 
  5484  000C                     	;# 
  5485  000D                     	;# 
  5486  000E                     	;# 
  5487  0010                     	;# 
  5488  0011                     	;# 
  5489  0012                     	;# 
  5490  0013                     	;# 
  5491  0014                     	;# 
  5492  0015                     	;# 
  5493  0015                     	;# 
  5494  0016                     	;# 
  5495  0016                     	;# 
  5496  0017                     	;# 
  5497  0018                     	;# 
  5498  0019                     	;# 
  5499  0019                     	;# 
  5500  001A                     	;# 
  5501  001B                     	;# 
  5502  001C                     	;# 
  5503  001D                     	;# 
  5504  001E                     	;# 
  5505  001F                     	;# 
  5506  008C                     	;# 
  5507  008D                     	;# 
  5508  008E                     	;# 
  5509  0090                     	;# 
  5510  0091                     	;# 
  5511  0092                     	;# 
  5512  0093                     	;# 
  5513  0094                     	;# 
  5514  0097                     	;# 
  5515  009B                     	;# 
  5516  009B                     	;# 
  5517  009C                     	;# 
  5518  009D                     	;# 
  5519  009E                     	;# 
  5520  009F                     	;# 
  5521  010C                     	;# 
  5522  010D                     	;# 
  5523  010E                     	;# 
  5524  0111                     	;# 
  5525  0112                     	;# 
  5526  0113                     	;# 
  5527  0114                     	;# 
  5528  0115                     	;# 
  5529  0116                     	;# 
  5530  0117                     	;# 
  5531  0118                     	;# 
  5532  0119                     	;# 
  5533  018C                     	;# 
  5534  018D                     	;# 
  5535  018E                     	;# 
  5536  0199                     	;# 
  5537  0199                     	;# 
  5538  0199                     	;# 
  5539  019A                     	;# 
  5540  019A                     	;# 
  5541  019A                     	;# 
  5542  019B                     	;# 
  5543  019B                     	;# 
  5544  019B                     	;# 
  5545  019B                     	;# 
  5546  019B                     	;# 
  5547  019C                     	;# 
  5548  019C                     	;# 
  5549  019C                     	;# 
  5550  019D                     	;# 
  5551  019D                     	;# 
  5552  019D                     	;# 
  5553  019E                     	;# 
  5554  019E                     	;# 
  5555  019E                     	;# 
  5556  019F                     	;# 
  5557  019F                     	;# 
  5558  019F                     	;# 
  5559  019F                     	;# 
  5560  019F                     	;# 
  5561  020C                     	;# 
  5562  020D                     	;# 
  5563  020E                     	;# 
  5564  0211                     	;# 
  5565  0211                     	;# 
  5566  0212                     	;# 
  5567  0212                     	;# 
  5568  0213                     	;# 
  5569  0213                     	;# 
  5570  0214                     	;# 
  5571  0214                     	;# 
  5572  0215                     	;# 
  5573  0215                     	;# 
  5574  0215                     	;# 
  5575  0215                     	;# 
  5576  0216                     	;# 
  5577  0216                     	;# 
  5578  0217                     	;# 
  5579  0217                     	;# 
  5580  0219                     	;# 
  5581  021A                     	;# 
  5582  021B                     	;# 
  5583  021C                     	;# 
  5584  021D                     	;# 
  5585  021D                     	;# 
  5586  021E                     	;# 
  5587  021F                     	;# 
  5588  028C                     	;# 
  5589  028D                     	;# 
  5590  028E                     	;# 
  5591  0291                     	;# 
  5592  0291                     	;# 
  5593  0292                     	;# 
  5594  0293                     	;# 
  5595  0294                     	;# 
  5596  0295                     	;# 
  5597  0295                     	;# 
  5598  0296                     	;# 
  5599  0297                     	;# 
  5600  0298                     	;# 
  5601  029F                     	;# 
  5602  030C                     	;# 
  5603  030D                     	;# 
  5604  030E                     	;# 
  5605  0311                     	;# 
  5606  0311                     	;# 
  5607  0312                     	;# 
  5608  0313                     	;# 
  5609  0314                     	;# 
  5610  0315                     	;# 
  5611  0315                     	;# 
  5612  0316                     	;# 
  5613  0317                     	;# 
  5614  0318                     	;# 
  5615  038C                     	;# 
  5616  038D                     	;# 
  5617  038E                     	;# 
  5618  0391                     	;# 
  5619  0392                     	;# 
  5620  0393                     	;# 
  5621  0394                     	;# 
  5622  0395                     	;# 
  5623  0396                     	;# 
  5624  0397                     	;# 
  5625  0398                     	;# 
  5626  0399                     	;# 
  5627  039A                     	;# 
  5628  039C                     	;# 
  5629  039D                     	;# 
  5630  039E                     	;# 
  5631  039F                     	;# 
  5632  0411                     	;# 
  5633  0411                     	;# 
  5634  0412                     	;# 
  5635  0413                     	;# 
  5636  0414                     	;# 
  5637  0415                     	;# 
  5638  0416                     	;# 
  5639  0417                     	;# 
  5640  0418                     	;# 
  5641  0418                     	;# 
  5642  0419                     	;# 
  5643  041A                     	;# 
  5644  041B                     	;# 
  5645  041C                     	;# 
  5646  041D                     	;# 
  5647  041E                     	;# 
  5648  041F                     	;# 
  5649  0498                     	;# 
  5650  0498                     	;# 
  5651  0499                     	;# 
  5652  049A                     	;# 
  5653  049B                     	;# 
  5654  049B                     	;# 
  5655  049C                     	;# 
  5656  049D                     	;# 
  5657  049E                     	;# 
  5658  049F                     	;# 
  5659  0617                     	;# 
  5660  0618                     	;# 
  5661  0619                     	;# 
  5662  0619                     	;# 
  5663  061A                     	;# 
  5664  061B                     	;# 
  5665  061C                     	;# 
  5666  061C                     	;# 
  5667  061F                     	;# 
  5668  0691                     	;# 
  5669  0692                     	;# 
  5670  0693                     	;# 
  5671  0694                     	;# 
  5672  0695                     	;# 
  5673  0696                     	;# 
  5674  0697                     	;# 
  5675  0698                     	;# 
  5676  0699                     	;# 
  5677  0711                     	;# 
  5678  0712                     	;# 
  5679  0713                     	;# 
  5680  0714                     	;# 
  5681  0715                     	;# 
  5682  0716                     	;# 
  5683  0717                     	;# 
  5684  0718                     	;# 
  5685  0719                     	;# 
  5686  0891                     	;# 
  5687  0891                     	;# 
  5688  0891                     	;# 
  5689  0891                     	;# 
  5690  0891                     	;# 
  5691  0891                     	;# 
  5692  0892                     	;# 
  5693  0892                     	;# 
  5694  0892                     	;# 
  5695  0893                     	;# 
  5696  0893                     	;# 
  5697  0893                     	;# 
  5698  0893                     	;# 
  5699  0893                     	;# 
  5700  0893                     	;# 
  5701  0894                     	;# 
  5702  0894                     	;# 
  5703  0894                     	;# 
  5704  0895                     	;# 
  5705  0895                     	;# 
  5706  0895                     	;# 
  5707  0896                     	;# 
  5708  0896                     	;# 
  5709  0896                     	;# 
  5710  089B                     	;# 
  5711  0911                     	;# 
  5712  0912                     	;# 
  5713  0913                     	;# 
  5714  0914                     	;# 
  5715  0915                     	;# 
  5716  0916                     	;# 
  5717  0918                     	;# 
  5718  0919                     	;# 
  5719  091A                     	;# 
  5720  091B                     	;# 
  5721  091C                     	;# 
  5722  091D                     	;# 
  5723  091E                     	;# 
  5724  091F                     	;# 
  5725  0E0F                     	;# 
  5726  0E10                     	;# 
  5727  0E11                     	;# 
  5728  0E12                     	;# 
  5729  0E13                     	;# 
  5730  0E14                     	;# 
  5731  0E15                     	;# 
  5732  0E16                     	;# 
  5733  0E17                     	;# 
  5734  0E18                     	;# 
  5735  0E19                     	;# 
  5736  0E1A                     	;# 
  5737  0E1B                     	;# 
  5738  0E1C                     	;# 
  5739  0E1D                     	;# 
  5740  0E1E                     	;# 
  5741  0E1F                     	;# 
  5742  0E20                     	;# 
  5743  0E21                     	;# 
  5744  0E22                     	;# 
  5745  0E24                     	;# 
  5746  0E25                     	;# 
  5747  0E28                     	;# 
  5748  0E29                     	;# 
  5749  0E2A                     	;# 
  5750  0E2B                     	;# 
  5751  0E2C                     	;# 
  5752  0E2D                     	;# 
  5753  0E2E                     	;# 
  5754  0E2F                     	;# 
  5755  0E90                     	;# 
  5756  0E91                     	;# 
  5757  0E92                     	;# 
  5758  0E94                     	;# 
  5759  0E95                     	;# 
  5760  0E9C                     	;# 
  5761  0E9D                     	;# 
  5762  0E9E                     	;# 
  5763  0E9F                     	;# 
  5764  0EA0                     	;# 
  5765  0EA1                     	;# 
  5766  0EA2                     	;# 
  5767  0EA3                     	;# 
  5768  0EA4                     	;# 
  5769  0EA5                     	;# 
  5770  0EA6                     	;# 
  5771  0EA7                     	;# 
  5772  0F0F                     	;# 
  5773  0F10                     	;# 
  5774  0F11                     	;# 
  5775  0F12                     	;# 
  5776  0F13                     	;# 
  5777  0F14                     	;# 
  5778  0F15                     	;# 
  5779  0F16                     	;# 
  5780  0F17                     	;# 
  5781  0F18                     	;# 
  5782  0F19                     	;# 
  5783  0F1A                     	;# 
  5784  0F1B                     	;# 
  5785  0F1C                     	;# 
  5786  0F1D                     	;# 
  5787  0F1E                     	;# 
  5788  0F1F                     	;# 
  5789  0F20                     	;# 
  5790  0F21                     	;# 
  5791  0F22                     	;# 
  5792  0F23                     	;# 
  5793  0F24                     	;# 
  5794  0F25                     	;# 
  5795  0F26                     	;# 
  5796  0F27                     	;# 
  5797  0F28                     	;# 
  5798  0F29                     	;# 
  5799  0F2A                     	;# 
  5800  0F2B                     	;# 
  5801  0F2C                     	;# 
  5802  0F2D                     	;# 
  5803  0F2E                     	;# 
  5804  0F2F                     	;# 
  5805  0F30                     	;# 
  5806  0F31                     	;# 
  5807  0F32                     	;# 
  5808  0F33                     	;# 
  5809  0F34                     	;# 
  5810  0F35                     	;# 
  5811  0F36                     	;# 
  5812  0F37                     	;# 
  5813  0FE4                     	;# 
  5814  0FE5                     	;# 
  5815  0FE6                     	;# 
  5816  0FE7                     	;# 
  5817  0FE8                     	;# 
  5818  0FE9                     	;# 
  5819  0FEA                     	;# 
  5820  0FEB                     	;# 
  5821  0FED                     	;# 
  5822  0FEE                     	;# 
  5823  0FEF                     	;# 
  5824  0000                     	;# 
  5825  0001                     	;# 
  5826  0002                     	;# 
  5827  0003                     	;# 
  5828  0004                     	;# 
  5829  0005                     	;# 
  5830  0006                     	;# 
  5831  0007                     	;# 
  5832  0008                     	;# 
  5833  0009                     	;# 
  5834  000A                     	;# 
  5835  000B                     	;# 
  5836  000C                     	;# 
  5837  000D                     	;# 
  5838  000E                     	;# 
  5839  0010                     	;# 
  5840  0011                     	;# 
  5841  0012                     	;# 
  5842  0013                     	;# 
  5843  0014                     	;# 
  5844  0015                     	;# 
  5845  0015                     	;# 
  5846  0016                     	;# 
  5847  0016                     	;# 
  5848  0017                     	;# 
  5849  0018                     	;# 
  5850  0019                     	;# 
  5851  0019                     	;# 
  5852  001A                     	;# 
  5853  001B                     	;# 
  5854  001C                     	;# 
  5855  001D                     	;# 
  5856  001E                     	;# 
  5857  001F                     	;# 
  5858  008C                     	;# 
  5859  008D                     	;# 
  5860  008E                     	;# 
  5861  0090                     	;# 
  5862  0091                     	;# 
  5863  0092                     	;# 
  5864  0093                     	;# 
  5865  0094                     	;# 
  5866  0097                     	;# 
  5867  009B                     	;# 
  5868  009B                     	;# 
  5869  009C                     	;# 
  5870  009D                     	;# 
  5871  009E                     	;# 
  5872  009F                     	;# 
  5873  010C                     	;# 
  5874  010D                     	;# 
  5875  010E                     	;# 
  5876  0111                     	;# 
  5877  0112                     	;# 
  5878  0113                     	;# 
  5879  0114                     	;# 
  5880  0115                     	;# 
  5881  0116                     	;# 
  5882  0117                     	;# 
  5883  0118                     	;# 
  5884  0119                     	;# 
  5885  018C                     	;# 
  5886  018D                     	;# 
  5887  018E                     	;# 
  5888  0199                     	;# 
  5889  0199                     	;# 
  5890  0199                     	;# 
  5891  019A                     	;# 
  5892  019A                     	;# 
  5893  019A                     	;# 
  5894  019B                     	;# 
  5895  019B                     	;# 
  5896  019B                     	;# 
  5897  019B                     	;# 
  5898  019B                     	;# 
  5899  019C                     	;# 
  5900  019C                     	;# 
  5901  019C                     	;# 
  5902  019D                     	;# 
  5903  019D                     	;# 
  5904  019D                     	;# 
  5905  019E                     	;# 
  5906  019E                     	;# 
  5907  019E                     	;# 
  5908  019F                     	;# 
  5909  019F                     	;# 
  5910  019F                     	;# 
  5911  019F                     	;# 
  5912  019F                     	;# 
  5913  020C                     	;# 
  5914  020D                     	;# 
  5915  020E                     	;# 
  5916  0211                     	;# 
  5917  0211                     	;# 
  5918  0212                     	;# 
  5919  0212                     	;# 
  5920  0213                     	;# 
  5921  0213                     	;# 
  5922  0214                     	;# 
  5923  0214                     	;# 
  5924  0215                     	;# 
  5925  0215                     	;# 
  5926  0215                     	;# 
  5927  0215                     	;# 
  5928  0216                     	;# 
  5929  0216                     	;# 
  5930  0217                     	;# 
  5931  0217                     	;# 
  5932  0219                     	;# 
  5933  021A                     	;# 
  5934  021B                     	;# 
  5935  021C                     	;# 
  5936  021D                     	;# 
  5937  021D                     	;# 
  5938  021E                     	;# 
  5939  021F                     	;# 
  5940  028C                     	;# 
  5941  028D                     	;# 
  5942  028E                     	;# 
  5943  0291                     	;# 
  5944  0291                     	;# 
  5945  0292                     	;# 
  5946  0293                     	;# 
  5947  0294                     	;# 
  5948  0295                     	;# 
  5949  0295                     	;# 
  5950  0296                     	;# 
  5951  0297                     	;# 
  5952  0298                     	;# 
  5953  029F                     	;# 
  5954  030C                     	;# 
  5955  030D                     	;# 
  5956  030E                     	;# 
  5957  0311                     	;# 
  5958  0311                     	;# 
  5959  0312                     	;# 
  5960  0313                     	;# 
  5961  0314                     	;# 
  5962  0315                     	;# 
  5963  0315                     	;# 
  5964  0316                     	;# 
  5965  0317                     	;# 
  5966  0318                     	;# 
  5967  038C                     	;# 
  5968  038D                     	;# 
  5969  038E                     	;# 
  5970  0391                     	;# 
  5971  0392                     	;# 
  5972  0393                     	;# 
  5973  0394                     	;# 
  5974  0395                     	;# 
  5975  0396                     	;# 
  5976  0397                     	;# 
  5977  0398                     	;# 
  5978  0399                     	;# 
  5979  039A                     	;# 
  5980  039C                     	;# 
  5981  039D                     	;# 
  5982  039E                     	;# 
  5983  039F                     	;# 
  5984  0411                     	;# 
  5985  0411                     	;# 
  5986  0412                     	;# 
  5987  0413                     	;# 
  5988  0414                     	;# 
  5989  0415                     	;# 
  5990  0416                     	;# 
  5991  0417                     	;# 
  5992  0418                     	;# 
  5993  0418                     	;# 
  5994  0419                     	;# 
  5995  041A                     	;# 
  5996  041B                     	;# 
  5997  041C                     	;# 
  5998  041D                     	;# 
  5999  041E                     	;# 
  6000  041F                     	;# 
  6001  0498                     	;# 
  6002  0498                     	;# 
  6003  0499                     	;# 
  6004  049A                     	;# 
  6005  049B                     	;# 
  6006  049B                     	;# 
  6007  049C                     	;# 
  6008  049D                     	;# 
  6009  049E                     	;# 
  6010  049F                     	;# 
  6011  0617                     	;# 
  6012  0618                     	;# 
  6013  0619                     	;# 
  6014  0619                     	;# 
  6015  061A                     	;# 
  6016  061B                     	;# 
  6017  061C                     	;# 
  6018  061C                     	;# 
  6019  061F                     	;# 
  6020  0691                     	;# 
  6021  0692                     	;# 
  6022  0693                     	;# 
  6023  0694                     	;# 
  6024  0695                     	;# 
  6025  0696                     	;# 
  6026  0697                     	;# 
  6027  0698                     	;# 
  6028  0699                     	;# 
  6029  0711                     	;# 
  6030  0712                     	;# 
  6031  0713                     	;# 
  6032  0714                     	;# 
  6033  0715                     	;# 
  6034  0716                     	;# 
  6035  0717                     	;# 
  6036  0718                     	;# 
  6037  0719                     	;# 
  6038  0891                     	;# 
  6039  0891                     	;# 
  6040  0891                     	;# 
  6041  0891                     	;# 
  6042  0891                     	;# 
  6043  0891                     	;# 
  6044  0892                     	;# 
  6045  0892                     	;# 
  6046  0892                     	;# 
  6047  0893                     	;# 
  6048  0893                     	;# 
  6049  0893                     	;# 
  6050  0893                     	;# 
  6051  0893                     	;# 
  6052  0893                     	;# 
  6053  0894                     	;# 
  6054  0894                     	;# 
  6055  0894                     	;# 
  6056  0895                     	;# 
  6057  0895                     	;# 
  6058  0895                     	;# 
  6059  0896                     	;# 
  6060  0896                     	;# 
  6061  0896                     	;# 
  6062  089B                     	;# 
  6063  0911                     	;# 
  6064  0912                     	;# 
  6065  0913                     	;# 
  6066  0914                     	;# 
  6067  0915                     	;# 
  6068  0916                     	;# 
  6069  0918                     	;# 
  6070  0919                     	;# 
  6071  091A                     	;# 
  6072  091B                     	;# 
  6073  091C                     	;# 
  6074  091D                     	;# 
  6075  091E                     	;# 
  6076  091F                     	;# 
  6077  0E0F                     	;# 
  6078  0E10                     	;# 
  6079  0E11                     	;# 
  6080  0E12                     	;# 
  6081  0E13                     	;# 
  6082  0E14                     	;# 
  6083  0E15                     	;# 
  6084  0E16                     	;# 
  6085  0E17                     	;# 
  6086  0E18                     	;# 
  6087  0E19                     	;# 
  6088  0E1A                     	;# 
  6089  0E1B                     	;# 
  6090  0E1C                     	;# 
  6091  0E1D                     	;# 
  6092  0E1E                     	;# 
  6093  0E1F                     	;# 
  6094  0E20                     	;# 
  6095  0E21                     	;# 
  6096  0E22                     	;# 
  6097  0E24                     	;# 
  6098  0E25                     	;# 
  6099  0E28                     	;# 
  6100  0E29                     	;# 
  6101  0E2A                     	;# 
  6102  0E2B                     	;# 
  6103  0E2C                     	;# 
  6104  0E2D                     	;# 
  6105  0E2E                     	;# 
  6106  0E2F                     	;# 
  6107  0E90                     	;# 
  6108  0E91                     	;# 
  6109  0E92                     	;# 
  6110  0E94                     	;# 
  6111  0E95                     	;# 
  6112  0E9C                     	;# 
  6113  0E9D                     	;# 
  6114  0E9E                     	;# 
  6115  0E9F                     	;# 
  6116  0EA0                     	;# 
  6117  0EA1                     	;# 
  6118  0EA2                     	;# 
  6119  0EA3                     	;# 
  6120  0EA4                     	;# 
  6121  0EA5                     	;# 
  6122  0EA6                     	;# 
  6123  0EA7                     	;# 
  6124  0F0F                     	;# 
  6125  0F10                     	;# 
  6126  0F11                     	;# 
  6127  0F12                     	;# 
  6128  0F13                     	;# 
  6129  0F14                     	;# 
  6130  0F15                     	;# 
  6131  0F16                     	;# 
  6132  0F17                     	;# 
  6133  0F18                     	;# 
  6134  0F19                     	;# 
  6135  0F1A                     	;# 
  6136  0F1B                     	;# 
  6137  0F1C                     	;# 
  6138  0F1D                     	;# 
  6139  0F1E                     	;# 
  6140  0F1F                     	;# 
  6141  0F20                     	;# 
  6142  0F21                     	;# 
  6143  0F22                     	;# 
  6144  0F23                     	;# 
  6145  0F24                     	;# 
  6146  0F25                     	;# 
  6147  0F26                     	;# 
  6148  0F27                     	;# 
  6149  0F28                     	;# 
  6150  0F29                     	;# 
  6151  0F2A                     	;# 
  6152  0F2B                     	;# 
  6153  0F2C                     	;# 
  6154  0F2D                     	;# 
  6155  0F2E                     	;# 
  6156  0F2F                     	;# 
  6157  0F30                     	;# 
  6158  0F31                     	;# 
  6159  0F32                     	;# 
  6160  0F33                     	;# 
  6161  0F34                     	;# 
  6162  0F35                     	;# 
  6163  0F36                     	;# 
  6164  0F37                     	;# 
  6165  0FE4                     	;# 
  6166  0FE5                     	;# 
  6167  0FE6                     	;# 
  6168  0FE7                     	;# 
  6169  0FE8                     	;# 
  6170  0FE9                     	;# 
  6171  0FEA                     	;# 
  6172  0FEB                     	;# 
  6173  0FED                     	;# 
  6174  0FEE                     	;# 
  6175  0FEF                     	;# 
  6176  0000                     	;# 
  6177  0001                     	;# 
  6178  0002                     	;# 
  6179  0003                     	;# 
  6180  0004                     	;# 
  6181  0005                     	;# 
  6182  0006                     	;# 
  6183  0007                     	;# 
  6184  0008                     	;# 
  6185  0009                     	;# 
  6186  000A                     	;# 
  6187  000B                     	;# 
  6188  000C                     	;# 
  6189  000D                     	;# 
  6190  000E                     	;# 
  6191  0010                     	;# 
  6192  0011                     	;# 
  6193  0012                     	;# 
  6194  0013                     	;# 
  6195  0014                     	;# 
  6196  0015                     	;# 
  6197  0015                     	;# 
  6198  0016                     	;# 
  6199  0016                     	;# 
  6200  0017                     	;# 
  6201  0018                     	;# 
  6202  0019                     	;# 
  6203  0019                     	;# 
  6204  001A                     	;# 
  6205  001B                     	;# 
  6206  001C                     	;# 
  6207  001D                     	;# 
  6208  001E                     	;# 
  6209  001F                     	;# 
  6210  008C                     	;# 
  6211  008D                     	;# 
  6212  008E                     	;# 
  6213  0090                     	;# 
  6214  0091                     	;# 
  6215  0092                     	;# 
  6216  0093                     	;# 
  6217  0094                     	;# 
  6218  0097                     	;# 
  6219  009B                     	;# 
  6220  009B                     	;# 
  6221  009C                     	;# 
  6222  009D                     	;# 
  6223  009E                     	;# 
  6224  009F                     	;# 
  6225  010C                     	;# 
  6226  010D                     	;# 
  6227  010E                     	;# 
  6228  0111                     	;# 
  6229  0112                     	;# 
  6230  0113                     	;# 
  6231  0114                     	;# 
  6232  0115                     	;# 
  6233  0116                     	;# 
  6234  0117                     	;# 
  6235  0118                     	;# 
  6236  0119                     	;# 
  6237  018C                     	;# 
  6238  018D                     	;# 
  6239  018E                     	;# 
  6240  0199                     	;# 
  6241  0199                     	;# 
  6242  0199                     	;# 
  6243  019A                     	;# 
  6244  019A                     	;# 
  6245  019A                     	;# 
  6246  019B                     	;# 
  6247  019B                     	;# 
  6248  019B                     	;# 
  6249  019B                     	;# 
  6250  019B                     	;# 
  6251  019C                     	;# 
  6252  019C                     	;# 
  6253  019C                     	;# 
  6254  019D                     	;# 
  6255  019D                     	;# 
  6256  019D                     	;# 
  6257  019E                     	;# 
  6258  019E                     	;# 
  6259  019E                     	;# 
  6260  019F                     	;# 
  6261  019F                     	;# 
  6262  019F                     	;# 
  6263  019F                     	;# 
  6264  019F                     	;# 
  6265  020C                     	;# 
  6266  020D                     	;# 
  6267  020E                     	;# 
  6268  0211                     	;# 
  6269  0211                     	;# 
  6270  0212                     	;# 
  6271  0212                     	;# 
  6272  0213                     	;# 
  6273  0213                     	;# 
  6274  0214                     	;# 
  6275  0214                     	;# 
  6276  0215                     	;# 
  6277  0215                     	;# 
  6278  0215                     	;# 
  6279  0215                     	;# 
  6280  0216                     	;# 
  6281  0216                     	;# 
  6282  0217                     	;# 
  6283  0217                     	;# 
  6284  0219                     	;# 
  6285  021A                     	;# 
  6286  021B                     	;# 
  6287  021C                     	;# 
  6288  021D                     	;# 
  6289  021D                     	;# 
  6290  021E                     	;# 
  6291  021F                     	;# 
  6292  028C                     	;# 
  6293  028D                     	;# 
  6294  028E                     	;# 
  6295  0291                     	;# 
  6296  0291                     	;# 
  6297  0292                     	;# 
  6298  0293                     	;# 
  6299  0294                     	;# 
  6300  0295                     	;# 
  6301  0295                     	;# 
  6302  0296                     	;# 
  6303  0297                     	;# 
  6304  0298                     	;# 
  6305  029F                     	;# 
  6306  030C                     	;# 
  6307  030D                     	;# 
  6308  030E                     	;# 
  6309  0311                     	;# 
  6310  0311                     	;# 
  6311  0312                     	;# 
  6312  0313                     	;# 
  6313  0314                     	;# 
  6314  0315                     	;# 
  6315  0315                     	;# 
  6316  0316                     	;# 
  6317  0317                     	;# 
  6318  0318                     	;# 
  6319  038C                     	;# 
  6320  038D                     	;# 
  6321  038E                     	;# 
  6322  0391                     	;# 
  6323  0392                     	;# 
  6324  0393                     	;# 
  6325  0394                     	;# 
  6326  0395                     	;# 
  6327  0396                     	;# 
  6328  0397                     	;# 
  6329  0398                     	;# 
  6330  0399                     	;# 
  6331  039A                     	;# 
  6332  039C                     	;# 
  6333  039D                     	;# 
  6334  039E                     	;# 
  6335  039F                     	;# 
  6336  0411                     	;# 
  6337  0411                     	;# 
  6338  0412                     	;# 
  6339  0413                     	;# 
  6340  0414                     	;# 
  6341  0415                     	;# 
  6342  0416                     	;# 
  6343  0417                     	;# 
  6344  0418                     	;# 
  6345  0418                     	;# 
  6346  0419                     	;# 
  6347  041A                     	;# 
  6348  041B                     	;# 
  6349  041C                     	;# 
  6350  041D                     	;# 
  6351  041E                     	;# 
  6352  041F                     	;# 
  6353  0498                     	;# 
  6354  0498                     	;# 
  6355  0499                     	;# 
  6356  049A                     	;# 
  6357  049B                     	;# 
  6358  049B                     	;# 
  6359  049C                     	;# 
  6360  049D                     	;# 
  6361  049E                     	;# 
  6362  049F                     	;# 
  6363  0617                     	;# 
  6364  0618                     	;# 
  6365  0619                     	;# 
  6366  0619                     	;# 
  6367  061A                     	;# 
  6368  061B                     	;# 
  6369  061C                     	;# 
  6370  061C                     	;# 
  6371  061F                     	;# 
  6372  0691                     	;# 
  6373  0692                     	;# 
  6374  0693                     	;# 
  6375  0694                     	;# 
  6376  0695                     	;# 
  6377  0696                     	;# 
  6378  0697                     	;# 
  6379  0698                     	;# 
  6380  0699                     	;# 
  6381  0711                     	;# 
  6382  0712                     	;# 
  6383  0713                     	;# 
  6384  0714                     	;# 
  6385  0715                     	;# 
  6386  0716                     	;# 
  6387  0717                     	;# 
  6388  0718                     	;# 
  6389  0719                     	;# 
  6390  0891                     	;# 
  6391  0891                     	;# 
  6392  0891                     	;# 
  6393  0891                     	;# 
  6394  0891                     	;# 
  6395  0891                     	;# 
  6396  0892                     	;# 
  6397  0892                     	;# 
  6398  0892                     	;# 
  6399  0893                     	;# 
  6400  0893                     	;# 
  6401  0893                     	;# 
  6402  0893                     	;# 
  6403  0893                     	;# 
  6404  0893                     	;# 
  6405  0894                     	;# 
  6406  0894                     	;# 
  6407  0894                     	;# 
  6408  0895                     	;# 
  6409  0895                     	;# 
  6410  0895                     	;# 
  6411  0896                     	;# 
  6412  0896                     	;# 
  6413  0896                     	;# 
  6414  089B                     	;# 
  6415  0911                     	;# 
  6416  0912                     	;# 
  6417  0913                     	;# 
  6418  0914                     	;# 
  6419  0915                     	;# 
  6420  0916                     	;# 
  6421  0918                     	;# 
  6422  0919                     	;# 
  6423  091A                     	;# 
  6424  091B                     	;# 
  6425  091C                     	;# 
  6426  091D                     	;# 
  6427  091E                     	;# 
  6428  091F                     	;# 
  6429  0E0F                     	;# 
  6430  0E10                     	;# 
  6431  0E11                     	;# 
  6432  0E12                     	;# 
  6433  0E13                     	;# 
  6434  0E14                     	;# 
  6435  0E15                     	;# 
  6436  0E16                     	;# 
  6437  0E17                     	;# 
  6438  0E18                     	;# 
  6439  0E19                     	;# 
  6440  0E1A                     	;# 
  6441  0E1B                     	;# 
  6442  0E1C                     	;# 
  6443  0E1D                     	;# 
  6444  0E1E                     	;# 
  6445  0E1F                     	;# 
  6446  0E20                     	;# 
  6447  0E21                     	;# 
  6448  0E22                     	;# 
  6449  0E24                     	;# 
  6450  0E25                     	;# 
  6451  0E28                     	;# 
  6452  0E29                     	;# 
  6453  0E2A                     	;# 
  6454  0E2B                     	;# 
  6455  0E2C                     	;# 
  6456  0E2D                     	;# 
  6457  0E2E                     	;# 
  6458  0E2F                     	;# 
  6459  0E90                     	;# 
  6460  0E91                     	;# 
  6461  0E92                     	;# 
  6462  0E94                     	;# 
  6463  0E95                     	;# 
  6464  0E9C                     	;# 
  6465  0E9D                     	;# 
  6466  0E9E                     	;# 
  6467  0E9F                     	;# 
  6468  0EA0                     	;# 
  6469  0EA1                     	;# 
  6470  0EA2                     	;# 
  6471  0EA3                     	;# 
  6472  0EA4                     	;# 
  6473  0EA5                     	;# 
  6474  0EA6                     	;# 
  6475  0EA7                     	;# 
  6476  0F0F                     	;# 
  6477  0F10                     	;# 
  6478  0F11                     	;# 
  6479  0F12                     	;# 
  6480  0F13                     	;# 
  6481  0F14                     	;# 
  6482  0F15                     	;# 
  6483  0F16                     	;# 
  6484  0F17                     	;# 
  6485  0F18                     	;# 
  6486  0F19                     	;# 
  6487  0F1A                     	;# 
  6488  0F1B                     	;# 
  6489  0F1C                     	;# 
  6490  0F1D                     	;# 
  6491  0F1E                     	;# 
  6492  0F1F                     	;# 
  6493  0F20                     	;# 
  6494  0F21                     	;# 
  6495  0F22                     	;# 
  6496  0F23                     	;# 
  6497  0F24                     	;# 
  6498  0F25                     	;# 
  6499  0F26                     	;# 
  6500  0F27                     	;# 
  6501  0F28                     	;# 
  6502  0F29                     	;# 
  6503  0F2A                     	;# 
  6504  0F2B                     	;# 
  6505  0F2C                     	;# 
  6506  0F2D                     	;# 
  6507  0F2E                     	;# 
  6508  0F2F                     	;# 
  6509  0F30                     	;# 
  6510  0F31                     	;# 
  6511  0F32                     	;# 
  6512  0F33                     	;# 
  6513  0F34                     	;# 
  6514  0F35                     	;# 
  6515  0F36                     	;# 
  6516  0F37                     	;# 
  6517  0FE4                     	;# 
  6518  0FE5                     	;# 
  6519  0FE6                     	;# 
  6520  0FE7                     	;# 
  6521  0FE8                     	;# 
  6522  0FE9                     	;# 
  6523  0FEA                     	;# 
  6524  0FEB                     	;# 
  6525  0FED                     	;# 
  6526  0FEE                     	;# 
  6527  0FEF                     	;# 
  6528  0000                     	;# 
  6529  0001                     	;# 
  6530  0002                     	;# 
  6531  0003                     	;# 
  6532  0004                     	;# 
  6533  0005                     	;# 
  6534  0006                     	;# 
  6535  0007                     	;# 
  6536  0008                     	;# 
  6537  0009                     	;# 
  6538  000A                     	;# 
  6539  000B                     	;# 
  6540  000C                     	;# 
  6541  000D                     	;# 
  6542  000E                     	;# 
  6543  0010                     	;# 
  6544  0011                     	;# 
  6545  0012                     	;# 
  6546  0013                     	;# 
  6547  0014                     	;# 
  6548  0015                     	;# 
  6549  0015                     	;# 
  6550  0016                     	;# 
  6551  0016                     	;# 
  6552  0017                     	;# 
  6553  0018                     	;# 
  6554  0019                     	;# 
  6555  0019                     	;# 
  6556  001A                     	;# 
  6557  001B                     	;# 
  6558  001C                     	;# 
  6559  001D                     	;# 
  6560  001E                     	;# 
  6561  001F                     	;# 
  6562  008C                     	;# 
  6563  008D                     	;# 
  6564  008E                     	;# 
  6565  0090                     	;# 
  6566  0091                     	;# 
  6567  0092                     	;# 
  6568  0093                     	;# 
  6569  0094                     	;# 
  6570  0097                     	;# 
  6571  009B                     	;# 
  6572  009B                     	;# 
  6573  009C                     	;# 
  6574  009D                     	;# 
  6575  009E                     	;# 
  6576  009F                     	;# 
  6577  010C                     	;# 
  6578  010D                     	;# 
  6579  010E                     	;# 
  6580  0111                     	;# 
  6581  0112                     	;# 
  6582  0113                     	;# 
  6583  0114                     	;# 
  6584  0115                     	;# 
  6585  0116                     	;# 
  6586  0117                     	;# 
  6587  0118                     	;# 
  6588  0119                     	;# 
  6589  018C                     	;# 
  6590  018D                     	;# 
  6591  018E                     	;# 
  6592  0199                     	;# 
  6593  0199                     	;# 
  6594  0199                     	;# 
  6595  019A                     	;# 
  6596  019A                     	;# 
  6597  019A                     	;# 
  6598  019B                     	;# 
  6599  019B                     	;# 
  6600  019B                     	;# 
  6601  019B                     	;# 
  6602  019B                     	;# 
  6603  019C                     	;# 
  6604  019C                     	;# 
  6605  019C                     	;# 
  6606  019D                     	;# 
  6607  019D                     	;# 
  6608  019D                     	;# 
  6609  019E                     	;# 
  6610  019E                     	;# 
  6611  019E                     	;# 
  6612  019F                     	;# 
  6613  019F                     	;# 
  6614  019F                     	;# 
  6615  019F                     	;# 
  6616  019F                     	;# 
  6617  020C                     	;# 
  6618  020D                     	;# 
  6619  020E                     	;# 
  6620  0211                     	;# 
  6621  0211                     	;# 
  6622  0212                     	;# 
  6623  0212                     	;# 
  6624  0213                     	;# 
  6625  0213                     	;# 
  6626  0214                     	;# 
  6627  0214                     	;# 
  6628  0215                     	;# 
  6629  0215                     	;# 
  6630  0215                     	;# 
  6631  0215                     	;# 
  6632  0216                     	;# 
  6633  0216                     	;# 
  6634  0217                     	;# 
  6635  0217                     	;# 
  6636  0219                     	;# 
  6637  021A                     	;# 
  6638  021B                     	;# 
  6639  021C                     	;# 
  6640  021D                     	;# 
  6641  021D                     	;# 
  6642  021E                     	;# 
  6643  021F                     	;# 
  6644  028C                     	;# 
  6645  028D                     	;# 
  6646  028E                     	;# 
  6647  0291                     	;# 
  6648  0291                     	;# 
  6649  0292                     	;# 
  6650  0293                     	;# 
  6651  0294                     	;# 
  6652  0295                     	;# 
  6653  0295                     	;# 
  6654  0296                     	;# 
  6655  0297                     	;# 
  6656  0298                     	;# 
  6657  029F                     	;# 
  6658  030C                     	;# 
  6659  030D                     	;# 
  6660  030E                     	;# 
  6661  0311                     	;# 
  6662  0311                     	;# 
  6663  0312                     	;# 
  6664  0313                     	;# 
  6665  0314                     	;# 
  6666  0315                     	;# 
  6667  0315                     	;# 
  6668  0316                     	;# 
  6669  0317                     	;# 
  6670  0318                     	;# 
  6671  038C                     	;# 
  6672  038D                     	;# 
  6673  038E                     	;# 
  6674  0391                     	;# 
  6675  0392                     	;# 
  6676  0393                     	;# 
  6677  0394                     	;# 
  6678  0395                     	;# 
  6679  0396                     	;# 
  6680  0397                     	;# 
  6681  0398                     	;# 
  6682  0399                     	;# 
  6683  039A                     	;# 
  6684  039C                     	;# 
  6685  039D                     	;# 
  6686  039E                     	;# 
  6687  039F                     	;# 
  6688  0411                     	;# 
  6689  0411                     	;# 
  6690  0412                     	;# 
  6691  0413                     	;# 
  6692  0414                     	;# 
  6693  0415                     	;# 
  6694  0416                     	;# 
  6695  0417                     	;# 
  6696  0418                     	;# 
  6697  0418                     	;# 
  6698  0419                     	;# 
  6699  041A                     	;# 
  6700  041B                     	;# 
  6701  041C                     	;# 
  6702  041D                     	;# 
  6703  041E                     	;# 
  6704  041F                     	;# 
  6705  0498                     	;# 
  6706  0498                     	;# 
  6707  0499                     	;# 
  6708  049A                     	;# 
  6709  049B                     	;# 
  6710  049B                     	;# 
  6711  049C                     	;# 
  6712  049D                     	;# 
  6713  049E                     	;# 
  6714  049F                     	;# 
  6715  0617                     	;# 
  6716  0618                     	;# 
  6717  0619                     	;# 
  6718  0619                     	;# 
  6719  061A                     	;# 
  6720  061B                     	;# 
  6721  061C                     	;# 
  6722  061C                     	;# 
  6723  061F                     	;# 
  6724  0691                     	;# 
  6725  0692                     	;# 
  6726  0693                     	;# 
  6727  0694                     	;# 
  6728  0695                     	;# 
  6729  0696                     	;# 
  6730  0697                     	;# 
  6731  0698                     	;# 
  6732  0699                     	;# 
  6733  0711                     	;# 
  6734  0712                     	;# 
  6735  0713                     	;# 
  6736  0714                     	;# 
  6737  0715                     	;# 
  6738  0716                     	;# 
  6739  0717                     	;# 
  6740  0718                     	;# 
  6741  0719                     	;# 
  6742  0891                     	;# 
  6743  0891                     	;# 
  6744  0891                     	;# 
  6745  0891                     	;# 
  6746  0891                     	;# 
  6747  0891                     	;# 
  6748  0892                     	;# 
  6749  0892                     	;# 
  6750  0892                     	;# 
  6751  0893                     	;# 
  6752  0893                     	;# 
  6753  0893                     	;# 
  6754  0893                     	;# 
  6755  0893                     	;# 
  6756  0893                     	;# 
  6757  0894                     	;# 
  6758  0894                     	;# 
  6759  0894                     	;# 
  6760  0895                     	;# 
  6761  0895                     	;# 
  6762  0895                     	;# 
  6763  0896                     	;# 
  6764  0896                     	;# 
  6765  0896                     	;# 
  6766  089B                     	;# 
  6767  0911                     	;# 
  6768  0912                     	;# 
  6769  0913                     	;# 
  6770  0914                     	;# 
  6771  0915                     	;# 
  6772  0916                     	;# 
  6773  0918                     	;# 
  6774  0919                     	;# 
  6775  091A                     	;# 
  6776  091B                     	;# 
  6777  091C                     	;# 
  6778  091D                     	;# 
  6779  091E                     	;# 
  6780  091F                     	;# 
  6781  0E0F                     	;# 
  6782  0E10                     	;# 
  6783  0E11                     	;# 
  6784  0E12                     	;# 
  6785  0E13                     	;# 
  6786  0E14                     	;# 
  6787  0E15                     	;# 
  6788  0E16                     	;# 
  6789  0E17                     	;# 
  6790  0E18                     	;# 
  6791  0E19                     	;# 
  6792  0E1A                     	;# 
  6793  0E1B                     	;# 
  6794  0E1C                     	;# 
  6795  0E1D                     	;# 
  6796  0E1E                     	;# 
  6797  0E1F                     	;# 
  6798  0E20                     	;# 
  6799  0E21                     	;# 
  6800  0E22                     	;# 
  6801  0E24                     	;# 
  6802  0E25                     	;# 
  6803  0E28                     	;# 
  6804  0E29                     	;# 
  6805  0E2A                     	;# 
  6806  0E2B                     	;# 
  6807  0E2C                     	;# 
  6808  0E2D                     	;# 
  6809  0E2E                     	;# 
  6810  0E2F                     	;# 
  6811  0E90                     	;# 
  6812  0E91                     	;# 
  6813  0E92                     	;# 
  6814  0E94                     	;# 
  6815  0E95                     	;# 
  6816  0E9C                     	;# 
  6817  0E9D                     	;# 
  6818  0E9E                     	;# 
  6819  0E9F                     	;# 
  6820  0EA0                     	;# 
  6821  0EA1                     	;# 
  6822  0EA2                     	;# 
  6823  0EA3                     	;# 
  6824  0EA4                     	;# 
  6825  0EA5                     	;# 
  6826  0EA6                     	;# 
  6827  0EA7                     	;# 
  6828  0F0F                     	;# 
  6829  0F10                     	;# 
  6830  0F11                     	;# 
  6831  0F12                     	;# 
  6832  0F13                     	;# 
  6833  0F14                     	;# 
  6834  0F15                     	;# 
  6835  0F16                     	;# 
  6836  0F17                     	;# 
  6837  0F18                     	;# 
  6838  0F19                     	;# 
  6839  0F1A                     	;# 
  6840  0F1B                     	;# 
  6841  0F1C                     	;# 
  6842  0F1D                     	;# 
  6843  0F1E                     	;# 
  6844  0F1F                     	;# 
  6845  0F20                     	;# 
  6846  0F21                     	;# 
  6847  0F22                     	;# 
  6848  0F23                     	;# 
  6849  0F24                     	;# 
  6850  0F25                     	;# 
  6851  0F26                     	;# 
  6852  0F27                     	;# 
  6853  0F28                     	;# 
  6854  0F29                     	;# 
  6855  0F2A                     	;# 
  6856  0F2B                     	;# 
  6857  0F2C                     	;# 
  6858  0F2D                     	;# 
  6859  0F2E                     	;# 
  6860  0F2F                     	;# 
  6861  0F30                     	;# 
  6862  0F31                     	;# 
  6863  0F32                     	;# 
  6864  0F33                     	;# 
  6865  0F34                     	;# 
  6866  0F35                     	;# 
  6867  0F36                     	;# 
  6868  0F37                     	;# 
  6869  0FE4                     	;# 
  6870  0FE5                     	;# 
  6871  0FE6                     	;# 
  6872  0FE7                     	;# 
  6873  0FE8                     	;# 
  6874  0FE9                     	;# 
  6875  0FEA                     	;# 
  6876  0FEB                     	;# 
  6877  0FED                     	;# 
  6878  0FEE                     	;# 
  6879  0FEF                     	;# 
  6880  0000                     	;# 
  6881  0001                     	;# 
  6882  0002                     	;# 
  6883  0003                     	;# 
  6884  0004                     	;# 
  6885  0005                     	;# 
  6886  0006                     	;# 
  6887  0007                     	;# 
  6888  0008                     	;# 
  6889  0009                     	;# 
  6890  000A                     	;# 
  6891  000B                     	;# 
  6892  000C                     	;# 
  6893  000D                     	;# 
  6894  000E                     	;# 
  6895  0010                     	;# 
  6896  0011                     	;# 
  6897  0012                     	;# 
  6898  0013                     	;# 
  6899  0014                     	;# 
  6900  0015                     	;# 
  6901  0015                     	;# 
  6902  0016                     	;# 
  6903  0016                     	;# 
  6904  0017                     	;# 
  6905  0018                     	;# 
  6906  0019                     	;# 
  6907  0019                     	;# 
  6908  001A                     	;# 
  6909  001B                     	;# 
  6910  001C                     	;# 
  6911  001D                     	;# 
  6912  001E                     	;# 
  6913  001F                     	;# 
  6914  008C                     	;# 
  6915  008D                     	;# 
  6916  008E                     	;# 
  6917  0090                     	;# 
  6918  0091                     	;# 
  6919  0092                     	;# 
  6920  0093                     	;# 
  6921  0094                     	;# 
  6922  0097                     	;# 
  6923  009B                     	;# 
  6924  009B                     	;# 
  6925  009C                     	;# 
  6926  009D                     	;# 
  6927  009E                     	;# 
  6928  009F                     	;# 
  6929  010C                     	;# 
  6930  010D                     	;# 
  6931  010E                     	;# 
  6932  0111                     	;# 
  6933  0112                     	;# 
  6934  0113                     	;# 
  6935  0114                     	;# 
  6936  0115                     	;# 
  6937  0116                     	;# 
  6938  0117                     	;# 
  6939  0118                     	;# 
  6940  0119                     	;# 
  6941  018C                     	;# 
  6942  018D                     	;# 
  6943  018E                     	;# 
  6944  0199                     	;# 
  6945  0199                     	;# 
  6946  0199                     	;# 
  6947  019A                     	;# 
  6948  019A                     	;# 
  6949  019A                     	;# 
  6950  019B                     	;# 
  6951  019B                     	;# 
  6952  019B                     	;# 
  6953  019B                     	;# 
  6954  019B                     	;# 
  6955  019C                     	;# 
  6956  019C                     	;# 
  6957  019C                     	;# 
  6958  019D                     	;# 
  6959  019D                     	;# 
  6960  019D                     	;# 
  6961  019E                     	;# 
  6962  019E                     	;# 
  6963  019E                     	;# 
  6964  019F                     	;# 
  6965  019F                     	;# 
  6966  019F                     	;# 
  6967  019F                     	;# 
  6968  019F                     	;# 
  6969  020C                     	;# 
  6970  020D                     	;# 
  6971  020E                     	;# 
  6972  0211                     	;# 
  6973  0211                     	;# 
  6974  0212                     	;# 
  6975  0212                     	;# 
  6976  0213                     	;# 
  6977  0213                     	;# 
  6978  0214                     	;# 
  6979  0214                     	;# 
  6980  0215                     	;# 
  6981  0215                     	;# 
  6982  0215                     	;# 
  6983  0215                     	;# 
  6984  0216                     	;# 
  6985  0216                     	;# 
  6986  0217                     	;# 
  6987  0217                     	;# 
  6988  0219                     	;# 
  6989  021A                     	;# 
  6990  021B                     	;# 
  6991  021C                     	;# 
  6992  021D                     	;# 
  6993  021D                     	;# 
  6994  021E                     	;# 
  6995  021F                     	;# 
  6996  028C                     	;# 
  6997  028D                     	;# 
  6998  028E                     	;# 
  6999  0291                     	;# 
  7000  0291                     	;# 
  7001  0292                     	;# 
  7002  0293                     	;# 
  7003  0294                     	;# 
  7004  0295                     	;# 
  7005  0295                     	;# 
  7006  0296                     	;# 
  7007  0297                     	;# 
  7008  0298                     	;# 
  7009  029F                     	;# 
  7010  030C                     	;# 
  7011  030D                     	;# 
  7012  030E                     	;# 
  7013  0311                     	;# 
  7014  0311                     	;# 
  7015  0312                     	;# 
  7016  0313                     	;# 
  7017  0314                     	;# 
  7018  0315                     	;# 
  7019  0315                     	;# 
  7020  0316                     	;# 
  7021  0317                     	;# 
  7022  0318                     	;# 
  7023  038C                     	;# 
  7024  038D                     	;# 
  7025  038E                     	;# 
  7026  0391                     	;# 
  7027  0392                     	;# 
  7028  0393                     	;# 
  7029  0394                     	;# 
  7030  0395                     	;# 
  7031  0396                     	;# 
  7032  0397                     	;# 
  7033  0398                     	;# 
  7034  0399                     	;# 
  7035  039A                     	;# 
  7036  039C                     	;# 
  7037  039D                     	;# 
  7038  039E                     	;# 
  7039  039F                     	;# 
  7040  0411                     	;# 
  7041  0411                     	;# 
  7042  0412                     	;# 
  7043  0413                     	;# 
  7044  0414                     	;# 
  7045  0415                     	;# 
  7046  0416                     	;# 
  7047  0417                     	;# 
  7048  0418                     	;# 
  7049  0418                     	;# 
  7050  0419                     	;# 
  7051  041A                     	;# 
  7052  041B                     	;# 
  7053  041C                     	;# 
  7054  041D                     	;# 
  7055  041E                     	;# 
  7056  041F                     	;# 
  7057  0498                     	;# 
  7058  0498                     	;# 
  7059  0499                     	;# 
  7060  049A                     	;# 
  7061  049B                     	;# 
  7062  049B                     	;# 
  7063  049C                     	;# 
  7064  049D                     	;# 
  7065  049E                     	;# 
  7066  049F                     	;# 
  7067  0617                     	;# 
  7068  0618                     	;# 
  7069  0619                     	;# 
  7070  0619                     	;# 
  7071  061A                     	;# 
  7072  061B                     	;# 
  7073  061C                     	;# 
  7074  061C                     	;# 
  7075  061F                     	;# 
  7076  0691                     	;# 
  7077  0692                     	;# 
  7078  0693                     	;# 
  7079  0694                     	;# 
  7080  0695                     	;# 
  7081  0696                     	;# 
  7082  0697                     	;# 
  7083  0698                     	;# 
  7084  0699                     	;# 
  7085  0711                     	;# 
  7086  0712                     	;# 
  7087  0713                     	;# 
  7088  0714                     	;# 
  7089  0715                     	;# 
  7090  0716                     	;# 
  7091  0717                     	;# 
  7092  0718                     	;# 
  7093  0719                     	;# 
  7094  0891                     	;# 
  7095  0891                     	;# 
  7096  0891                     	;# 
  7097  0891                     	;# 
  7098  0891                     	;# 
  7099  0891                     	;# 
  7100  0892                     	;# 
  7101  0892                     	;# 
  7102  0892                     	;# 
  7103  0893                     	;# 
  7104  0893                     	;# 
  7105  0893                     	;# 
  7106  0893                     	;# 
  7107  0893                     	;# 
  7108  0893                     	;# 
  7109  0894                     	;# 
  7110  0894                     	;# 
  7111  0894                     	;# 
  7112  0895                     	;# 
  7113  0895                     	;# 
  7114  0895                     	;# 
  7115  0896                     	;# 
  7116  0896                     	;# 
  7117  0896                     	;# 
  7118  089B                     	;# 
  7119  0911                     	;# 
  7120  0912                     	;# 
  7121  0913                     	;# 
  7122  0914                     	;# 
  7123  0915                     	;# 
  7124  0916                     	;# 
  7125  0918                     	;# 
  7126  0919                     	;# 
  7127  091A                     	;# 
  7128  091B                     	;# 
  7129  091C                     	;# 
  7130  091D                     	;# 
  7131  091E                     	;# 
  7132  091F                     	;# 
  7133  0E0F                     	;# 
  7134  0E10                     	;# 
  7135  0E11                     	;# 
  7136  0E12                     	;# 
  7137  0E13                     	;# 
  7138  0E14                     	;# 
  7139  0E15                     	;# 
  7140  0E16                     	;# 
  7141  0E17                     	;# 
  7142  0E18                     	;# 
  7143  0E19                     	;# 
  7144  0E1A                     	;# 
  7145  0E1B                     	;# 
  7146  0E1C                     	;# 
  7147  0E1D                     	;# 
  7148  0E1E                     	;# 
  7149  0E1F                     	;# 
  7150  0E20                     	;# 
  7151  0E21                     	;# 
  7152  0E22                     	;# 
  7153  0E24                     	;# 
  7154  0E25                     	;# 
  7155  0E28                     	;# 
  7156  0E29                     	;# 
  7157  0E2A                     	;# 
  7158  0E2B                     	;# 
  7159  0E2C                     	;# 
  7160  0E2D                     	;# 
  7161  0E2E                     	;# 
  7162  0E2F                     	;# 
  7163  0E90                     	;# 
  7164  0E91                     	;# 
  7165  0E92                     	;# 
  7166  0E94                     	;# 
  7167  0E95                     	;# 
  7168  0E9C                     	;# 
  7169  0E9D                     	;# 
  7170  0E9E                     	;# 
  7171  0E9F                     	;# 
  7172  0EA0                     	;# 
  7173  0EA1                     	;# 
  7174  0EA2                     	;# 
  7175  0EA3                     	;# 
  7176  0EA4                     	;# 
  7177  0EA5                     	;# 
  7178  0EA6                     	;# 
  7179  0EA7                     	;# 
  7180  0F0F                     	;# 
  7181  0F10                     	;# 
  7182  0F11                     	;# 
  7183  0F12                     	;# 
  7184  0F13                     	;# 
  7185  0F14                     	;# 
  7186  0F15                     	;# 
  7187  0F16                     	;# 
  7188  0F17                     	;# 
  7189  0F18                     	;# 
  7190  0F19                     	;# 
  7191  0F1A                     	;# 
  7192  0F1B                     	;# 
  7193  0F1C                     	;# 
  7194  0F1D                     	;# 
  7195  0F1E                     	;# 
  7196  0F1F                     	;# 
  7197  0F20                     	;# 
  7198  0F21                     	;# 
  7199  0F22                     	;# 
  7200  0F23                     	;# 
  7201  0F24                     	;# 
  7202  0F25                     	;# 
  7203  0F26                     	;# 
  7204  0F27                     	;# 
  7205  0F28                     	;# 
  7206  0F29                     	;# 
  7207  0F2A                     	;# 
  7208  0F2B                     	;# 
  7209  0F2C                     	;# 
  7210  0F2D                     	;# 
  7211  0F2E                     	;# 
  7212  0F2F                     	;# 
  7213  0F30                     	;# 
  7214  0F31                     	;# 
  7215  0F32                     	;# 
  7216  0F33                     	;# 
  7217  0F34                     	;# 
  7218  0F35                     	;# 
  7219  0F36                     	;# 
  7220  0F37                     	;# 
  7221  0FE4                     	;# 
  7222  0FE5                     	;# 
  7223  0FE6                     	;# 
  7224  0FE7                     	;# 
  7225  0FE8                     	;# 
  7226  0FE9                     	;# 
  7227  0FEA                     	;# 
  7228  0FEB                     	;# 
  7229  0FED                     	;# 
  7230  0FEE                     	;# 
  7231  0FEF                     	;# 
  7232  0000                     	;# 
  7233  0001                     	;# 
  7234  0002                     	;# 
  7235  0003                     	;# 
  7236  0004                     	;# 
  7237  0005                     	;# 
  7238  0006                     	;# 
  7239  0007                     	;# 
  7240  0008                     	;# 
  7241  0009                     	;# 
  7242  000A                     	;# 
  7243  000B                     	;# 
  7244  000C                     	;# 
  7245  000D                     	;# 
  7246  000E                     	;# 
  7247  0010                     	;# 
  7248  0011                     	;# 
  7249  0012                     	;# 
  7250  0013                     	;# 
  7251  0014                     	;# 
  7252  0015                     	;# 
  7253  0015                     	;# 
  7254  0016                     	;# 
  7255  0016                     	;# 
  7256  0017                     	;# 
  7257  0018                     	;# 
  7258  0019                     	;# 
  7259  0019                     	;# 
  7260  001A                     	;# 
  7261  001B                     	;# 
  7262  001C                     	;# 
  7263  001D                     	;# 
  7264  001E                     	;# 
  7265  001F                     	;# 
  7266  008C                     	;# 
  7267  008D                     	;# 
  7268  008E                     	;# 
  7269  0090                     	;# 
  7270  0091                     	;# 
  7271  0092                     	;# 
  7272  0093                     	;# 
  7273  0094                     	;# 
  7274  0097                     	;# 
  7275  009B                     	;# 
  7276  009B                     	;# 
  7277  009C                     	;# 
  7278  009D                     	;# 
  7279  009E                     	;# 
  7280  009F                     	;# 
  7281  010C                     	;# 
  7282  010D                     	;# 
  7283  010E                     	;# 
  7284  0111                     	;# 
  7285  0112                     	;# 
  7286  0113                     	;# 
  7287  0114                     	;# 
  7288  0115                     	;# 
  7289  0116                     	;# 
  7290  0117                     	;# 
  7291  0118                     	;# 
  7292  0119                     	;# 
  7293  018C                     	;# 
  7294  018D                     	;# 
  7295  018E                     	;# 
  7296  0199                     	;# 
  7297  0199                     	;# 
  7298  0199                     	;# 
  7299  019A                     	;# 
  7300  019A                     	;# 
  7301  019A                     	;# 
  7302  019B                     	;# 
  7303  019B                     	;# 
  7304  019B                     	;# 
  7305  019B                     	;# 
  7306  019B                     	;# 
  7307  019C                     	;# 
  7308  019C                     	;# 
  7309  019C                     	;# 
  7310  019D                     	;# 
  7311  019D                     	;# 
  7312  019D                     	;# 
  7313  019E                     	;# 
  7314  019E                     	;# 
  7315  019E                     	;# 
  7316  019F                     	;# 
  7317  019F                     	;# 
  7318  019F                     	;# 
  7319  019F                     	;# 
  7320  019F                     	;# 
  7321  020C                     	;# 
  7322  020D                     	;# 
  7323  020E                     	;# 
  7324  0211                     	;# 
  7325  0211                     	;# 
  7326  0212                     	;# 
  7327  0212                     	;# 
  7328  0213                     	;# 
  7329  0213                     	;# 
  7330  0214                     	;# 
  7331  0214                     	;# 
  7332  0215                     	;# 
  7333  0215                     	;# 
  7334  0215                     	;# 
  7335  0215                     	;# 
  7336  0216                     	;# 
  7337  0216                     	;# 
  7338  0217                     	;# 
  7339  0217                     	;# 
  7340  0219                     	;# 
  7341  021A                     	;# 
  7342  021B                     	;# 
  7343  021C                     	;# 
  7344  021D                     	;# 
  7345  021D                     	;# 
  7346  021E                     	;# 
  7347  021F                     	;# 
  7348  028C                     	;# 
  7349  028D                     	;# 
  7350  028E                     	;# 
  7351  0291                     	;# 
  7352  0291                     	;# 
  7353  0292                     	;# 
  7354  0293                     	;# 
  7355  0294                     	;# 
  7356  0295                     	;# 
  7357  0295                     	;# 
  7358  0296                     	;# 
  7359  0297                     	;# 
  7360  0298                     	;# 
  7361  029F                     	;# 
  7362  030C                     	;# 
  7363  030D                     	;# 
  7364  030E                     	;# 
  7365  0311                     	;# 
  7366  0311                     	;# 
  7367  0312                     	;# 
  7368  0313                     	;# 
  7369  0314                     	;# 
  7370  0315                     	;# 
  7371  0315                     	;# 
  7372  0316                     	;# 
  7373  0317                     	;# 
  7374  0318                     	;# 
  7375  038C                     	;# 
  7376  038D                     	;# 
  7377  038E                     	;# 
  7378  0391                     	;# 
  7379  0392                     	;# 
  7380  0393                     	;# 
  7381  0394                     	;# 
  7382  0395                     	;# 
  7383  0396                     	;# 
  7384  0397                     	;# 
  7385  0398                     	;# 
  7386  0399                     	;# 
  7387  039A                     	;# 
  7388  039C                     	;# 
  7389  039D                     	;# 
  7390  039E                     	;# 
  7391  039F                     	;# 
  7392  0411                     	;# 
  7393  0411                     	;# 
  7394  0412                     	;# 
  7395  0413                     	;# 
  7396  0414                     	;# 
  7397  0415                     	;# 
  7398  0416                     	;# 
  7399  0417                     	;# 
  7400  0418                     	;# 
  7401  0418                     	;# 
  7402  0419                     	;# 
  7403  041A                     	;# 
  7404  041B                     	;# 
  7405  041C                     	;# 
  7406  041D                     	;# 
  7407  041E                     	;# 
  7408  041F                     	;# 
  7409  0498                     	;# 
  7410  0498                     	;# 
  7411  0499                     	;# 
  7412  049A                     	;# 
  7413  049B                     	;# 
  7414  049B                     	;# 
  7415  049C                     	;# 
  7416  049D                     	;# 
  7417  049E                     	;# 
  7418  049F                     	;# 
  7419  0617                     	;# 
  7420  0618                     	;# 
  7421  0619                     	;# 
  7422  0619                     	;# 
  7423  061A                     	;# 
  7424  061B                     	;# 
  7425  061C                     	;# 
  7426  061C                     	;# 
  7427  061F                     	;# 
  7428  0691                     	;# 
  7429  0692                     	;# 
  7430  0693                     	;# 
  7431  0694                     	;# 
  7432  0695                     	;# 
  7433  0696                     	;# 
  7434  0697                     	;# 
  7435  0698                     	;# 
  7436  0699                     	;# 
  7437  0711                     	;# 
  7438  0712                     	;# 
  7439  0713                     	;# 
  7440  0714                     	;# 
  7441  0715                     	;# 
  7442  0716                     	;# 
  7443  0717                     	;# 
  7444  0718                     	;# 
  7445  0719                     	;# 
  7446  0891                     	;# 
  7447  0891                     	;# 
  7448  0891                     	;# 
  7449  0891                     	;# 
  7450  0891                     	;# 
  7451  0891                     	;# 
  7452  0892                     	;# 
  7453  0892                     	;# 
  7454  0892                     	;# 
  7455  0893                     	;# 
  7456  0893                     	;# 
  7457  0893                     	;# 
  7458  0893                     	;# 
  7459  0893                     	;# 
  7460  0893                     	;# 
  7461  0894                     	;# 
  7462  0894                     	;# 
  7463  0894                     	;# 
  7464  0895                     	;# 
  7465  0895                     	;# 
  7466  0895                     	;# 
  7467  0896                     	;# 
  7468  0896                     	;# 
  7469  0896                     	;# 
  7470  089B                     	;# 
  7471  0911                     	;# 
  7472  0912                     	;# 
  7473  0913                     	;# 
  7474  0914                     	;# 
  7475  0915                     	;# 
  7476  0916                     	;# 
  7477  0918                     	;# 
  7478  0919                     	;# 
  7479  091A                     	;# 
  7480  091B                     	;# 
  7481  091C                     	;# 
  7482  091D                     	;# 
  7483  091E                     	;# 
  7484  091F                     	;# 
  7485  0E0F                     	;# 
  7486  0E10                     	;# 
  7487  0E11                     	;# 
  7488  0E12                     	;# 
  7489  0E13                     	;# 
  7490  0E14                     	;# 
  7491  0E15                     	;# 
  7492  0E16                     	;# 
  7493  0E17                     	;# 
  7494  0E18                     	;# 
  7495  0E19                     	;# 
  7496  0E1A                     	;# 
  7497  0E1B                     	;# 
  7498  0E1C                     	;# 
  7499  0E1D                     	;# 
  7500  0E1E                     	;# 
  7501  0E1F                     	;# 
  7502  0E20                     	;# 
  7503  0E21                     	;# 
  7504  0E22                     	;# 
  7505  0E24                     	;# 
  7506  0E25                     	;# 
  7507  0E28                     	;# 
  7508  0E29                     	;# 
  7509  0E2A                     	;# 
  7510  0E2B                     	;# 
  7511  0E2C                     	;# 
  7512  0E2D                     	;# 
  7513  0E2E                     	;# 
  7514  0E2F                     	;# 
  7515  0E90                     	;# 
  7516  0E91                     	;# 
  7517  0E92                     	;# 
  7518  0E94                     	;# 
  7519  0E95                     	;# 
  7520  0E9C                     	;# 
  7521  0E9D                     	;# 
  7522  0E9E                     	;# 
  7523  0E9F                     	;# 
  7524  0EA0                     	;# 
  7525  0EA1                     	;# 
  7526  0EA2                     	;# 
  7527  0EA3                     	;# 
  7528  0EA4                     	;# 
  7529  0EA5                     	;# 
  7530  0EA6                     	;# 
  7531  0EA7                     	;# 
  7532  0F0F                     	;# 
  7533  0F10                     	;# 
  7534  0F11                     	;# 
  7535  0F12                     	;# 
  7536  0F13                     	;# 
  7537  0F14                     	;# 
  7538  0F15                     	;# 
  7539  0F16                     	;# 
  7540  0F17                     	;# 
  7541  0F18                     	;# 
  7542  0F19                     	;# 
  7543  0F1A                     	;# 
  7544  0F1B                     	;# 
  7545  0F1C                     	;# 
  7546  0F1D                     	;# 
  7547  0F1E                     	;# 
  7548  0F1F                     	;# 
  7549  0F20                     	;# 
  7550  0F21                     	;# 
  7551  0F22                     	;# 
  7552  0F23                     	;# 
  7553  0F24                     	;# 
  7554  0F25                     	;# 
  7555  0F26                     	;# 
  7556  0F27                     	;# 
  7557  0F28                     	;# 
  7558  0F29                     	;# 
  7559  0F2A                     	;# 
  7560  0F2B                     	;# 
  7561  0F2C                     	;# 
  7562  0F2D                     	;# 
  7563  0F2E                     	;# 
  7564  0F2F                     	;# 
  7565  0F30                     	;# 
  7566  0F31                     	;# 
  7567  0F32                     	;# 
  7568  0F33                     	;# 
  7569  0F34                     	;# 
  7570  0F35                     	;# 
  7571  0F36                     	;# 
  7572  0F37                     	;# 
  7573  0FE4                     	;# 
  7574  0FE5                     	;# 
  7575  0FE6                     	;# 
  7576  0FE7                     	;# 
  7577  0FE8                     	;# 
  7578  0FE9                     	;# 
  7579  0FEA                     	;# 
  7580  0FEB                     	;# 
  7581  0FED                     	;# 
  7582  0FEE                     	;# 
  7583  0FEF                     	;# 
  7584  0000                     	;# 
  7585  0001                     	;# 
  7586  0002                     	;# 
  7587  0003                     	;# 
  7588  0004                     	;# 
  7589  0005                     	;# 
  7590  0006                     	;# 
  7591  0007                     	;# 
  7592  0008                     	;# 
  7593  0009                     	;# 
  7594  000A                     	;# 
  7595  000B                     	;# 
  7596  000C                     	;# 
  7597  000D                     	;# 
  7598  000E                     	;# 
  7599  0010                     	;# 
  7600  0011                     	;# 
  7601  0012                     	;# 
  7602  0013                     	;# 
  7603  0014                     	;# 
  7604  0015                     	;# 
  7605  0015                     	;# 
  7606  0016                     	;# 
  7607  0016                     	;# 
  7608  0017                     	;# 
  7609  0018                     	;# 
  7610  0019                     	;# 
  7611  0019                     	;# 
  7612  001A                     	;# 
  7613  001B                     	;# 
  7614  001C                     	;# 
  7615  001D                     	;# 
  7616  001E                     	;# 
  7617  001F                     	;# 
  7618  008C                     	;# 
  7619  008D                     	;# 
  7620  008E                     	;# 
  7621  0090                     	;# 
  7622  0091                     	;# 
  7623  0092                     	;# 
  7624  0093                     	;# 
  7625  0094                     	;# 
  7626  0097                     	;# 
  7627  009B                     	;# 
  7628  009B                     	;# 
  7629  009C                     	;# 
  7630  009D                     	;# 
  7631  009E                     	;# 
  7632  009F                     	;# 
  7633  010C                     	;# 
  7634  010D                     	;# 
  7635  010E                     	;# 
  7636  0111                     	;# 
  7637  0112                     	;# 
  7638  0113                     	;# 
  7639  0114                     	;# 
  7640  0115                     	;# 
  7641  0116                     	;# 
  7642  0117                     	;# 
  7643  0118                     	;# 
  7644  0119                     	;# 
  7645  018C                     	;# 
  7646  018D                     	;# 
  7647  018E                     	;# 
  7648  0199                     	;# 
  7649  0199                     	;# 
  7650  0199                     	;# 
  7651  019A                     	;# 
  7652  019A                     	;# 
  7653  019A                     	;# 
  7654  019B                     	;# 
  7655  019B                     	;# 
  7656  019B                     	;# 
  7657  019B                     	;# 
  7658  019B                     	;# 
  7659  019C                     	;# 
  7660  019C                     	;# 
  7661  019C                     	;# 
  7662  019D                     	;# 
  7663  019D                     	;# 
  7664  019D                     	;# 
  7665  019E                     	;# 
  7666  019E                     	;# 
  7667  019E                     	;# 
  7668  019F                     	;# 
  7669  019F                     	;# 
  7670  019F                     	;# 
  7671  019F                     	;# 
  7672  019F                     	;# 
  7673  020C                     	;# 
  7674  020D                     	;# 
  7675  020E                     	;# 
  7676  0211                     	;# 
  7677  0211                     	;# 
  7678  0212                     	;# 
  7679  0212                     	;# 
  7680  0213                     	;# 
  7681  0213                     	;# 
  7682  0214                     	;# 
  7683  0214                     	;# 
  7684  0215                     	;# 
  7685  0215                     	;# 
  7686  0215                     	;# 
  7687  0215                     	;# 
  7688  0216                     	;# 
  7689  0216                     	;# 
  7690  0217                     	;# 
  7691  0217                     	;# 
  7692  0219                     	;# 
  7693  021A                     	;# 
  7694  021B                     	;# 
  7695  021C                     	;# 
  7696  021D                     	;# 
  7697  021D                     	;# 
  7698  021E                     	;# 
  7699  021F                     	;# 
  7700  028C                     	;# 
  7701  028D                     	;# 
  7702  028E                     	;# 
  7703  0291                     	;# 
  7704  0291                     	;# 
  7705  0292                     	;# 
  7706  0293                     	;# 
  7707  0294                     	;# 
  7708  0295                     	;# 
  7709  0295                     	;# 
  7710  0296                     	;# 
  7711  0297                     	;# 
  7712  0298                     	;# 
  7713  029F                     	;# 
  7714  030C                     	;# 
  7715  030D                     	;# 
  7716  030E                     	;# 
  7717  0311                     	;# 
  7718  0311                     	;# 
  7719  0312                     	;# 
  7720  0313                     	;# 
  7721  0314                     	;# 
  7722  0315                     	;# 
  7723  0315                     	;# 
  7724  0316                     	;# 
  7725  0317                     	;# 
  7726  0318                     	;# 
  7727  038C                     	;# 
  7728  038D                     	;# 
  7729  038E                     	;# 
  7730  0391                     	;# 
  7731  0392                     	;# 
  7732  0393                     	;# 
  7733  0394                     	;# 
  7734  0395                     	;# 
  7735  0396                     	;# 
  7736  0397                     	;# 
  7737  0398                     	;# 
  7738  0399                     	;# 
  7739  039A                     	;# 
  7740  039C                     	;# 
  7741  039D                     	;# 
  7742  039E                     	;# 
  7743  039F                     	;# 
  7744  0411                     	;# 
  7745  0411                     	;# 
  7746  0412                     	;# 
  7747  0413                     	;# 
  7748  0414                     	;# 
  7749  0415                     	;# 
  7750  0416                     	;# 
  7751  0417                     	;# 
  7752  0418                     	;# 
  7753  0418                     	;# 
  7754  0419                     	;# 
  7755  041A                     	;# 
  7756  041B                     	;# 
  7757  041C                     	;# 
  7758  041D                     	;# 
  7759  041E                     	;# 
  7760  041F                     	;# 
  7761  0498                     	;# 
  7762  0498                     	;# 
  7763  0499                     	;# 
  7764  049A                     	;# 
  7765  049B                     	;# 
  7766  049B                     	;# 
  7767  049C                     	;# 
  7768  049D                     	;# 
  7769  049E                     	;# 
  7770  049F                     	;# 
  7771  0617                     	;# 
  7772  0618                     	;# 
  7773  0619                     	;# 
  7774  0619                     	;# 
  7775  061A                     	;# 
  7776  061B                     	;# 
  7777  061C                     	;# 
  7778  061C                     	;# 
  7779  061F                     	;# 
  7780  0691                     	;# 
  7781  0692                     	;# 
  7782  0693                     	;# 
  7783  0694                     	;# 
  7784  0695                     	;# 
  7785  0696                     	;# 
  7786  0697                     	;# 
  7787  0698                     	;# 
  7788  0699                     	;# 
  7789  0711                     	;# 
  7790  0712                     	;# 
  7791  0713                     	;# 
  7792  0714                     	;# 
  7793  0715                     	;# 
  7794  0716                     	;# 
  7795  0717                     	;# 
  7796  0718                     	;# 
  7797  0719                     	;# 
  7798  0891                     	;# 
  7799  0891                     	;# 
  7800  0891                     	;# 
  7801  0891                     	;# 
  7802  0891                     	;# 
  7803  0891                     	;# 
  7804  0892                     	;# 
  7805  0892                     	;# 
  7806  0892                     	;# 
  7807  0893                     	;# 
  7808  0893                     	;# 
  7809  0893                     	;# 
  7810  0893                     	;# 
  7811  0893                     	;# 
  7812  0893                     	;# 
  7813  0894                     	;# 
  7814  0894                     	;# 
  7815  0894                     	;# 
  7816  0895                     	;# 
  7817  0895                     	;# 
  7818  0895                     	;# 
  7819  0896                     	;# 
  7820  0896                     	;# 
  7821  0896                     	;# 
  7822  089B                     	;# 
  7823  0911                     	;# 
  7824  0912                     	;# 
  7825  0913                     	;# 
  7826  0914                     	;# 
  7827  0915                     	;# 
  7828  0916                     	;# 
  7829  0918                     	;# 
  7830  0919                     	;# 
  7831  091A                     	;# 
  7832  091B                     	;# 
  7833  091C                     	;# 
  7834  091D                     	;# 
  7835  091E                     	;# 
  7836  091F                     	;# 
  7837  0E0F                     	;# 
  7838  0E10                     	;# 
  7839  0E11                     	;# 
  7840  0E12                     	;# 
  7841  0E13                     	;# 
  7842  0E14                     	;# 
  7843  0E15                     	;# 
  7844  0E16                     	;# 
  7845  0E17                     	;# 
  7846  0E18                     	;# 
  7847  0E19                     	;# 
  7848  0E1A                     	;# 
  7849  0E1B                     	;# 
  7850  0E1C                     	;# 
  7851  0E1D                     	;# 
  7852  0E1E                     	;# 
  7853  0E1F                     	;# 
  7854  0E20                     	;# 
  7855  0E21                     	;# 
  7856  0E22                     	;# 
  7857  0E24                     	;# 
  7858  0E25                     	;# 
  7859  0E28                     	;# 
  7860  0E29                     	;# 
  7861  0E2A                     	;# 
  7862  0E2B                     	;# 
  7863  0E2C                     	;# 
  7864  0E2D                     	;# 
  7865  0E2E                     	;# 
  7866  0E2F                     	;# 
  7867  0E90                     	;# 
  7868  0E91                     	;# 
  7869  0E92                     	;# 
  7870  0E94                     	;# 
  7871  0E95                     	;# 
  7872  0E9C                     	;# 
  7873  0E9D                     	;# 
  7874  0E9E                     	;# 
  7875  0E9F                     	;# 
  7876  0EA0                     	;# 
  7877  0EA1                     	;# 
  7878  0EA2                     	;# 
  7879  0EA3                     	;# 
  7880  0EA4                     	;# 
  7881  0EA5                     	;# 
  7882  0EA6                     	;# 
  7883  0EA7                     	;# 
  7884  0F0F                     	;# 
  7885  0F10                     	;# 
  7886  0F11                     	;# 
  7887  0F12                     	;# 
  7888  0F13                     	;# 
  7889  0F14                     	;# 
  7890  0F15                     	;# 
  7891  0F16                     	;# 
  7892  0F17                     	;# 
  7893  0F18                     	;# 
  7894  0F19                     	;# 
  7895  0F1A                     	;# 
  7896  0F1B                     	;# 
  7897  0F1C                     	;# 
  7898  0F1D                     	;# 
  7899  0F1E                     	;# 
  7900  0F1F                     	;# 
  7901  0F20                     	;# 
  7902  0F21                     	;# 
  7903  0F22                     	;# 
  7904  0F23                     	;# 
  7905  0F24                     	;# 
  7906  0F25                     	;# 
  7907  0F26                     	;# 
  7908  0F27                     	;# 
  7909  0F28                     	;# 
  7910  0F29                     	;# 
  7911  0F2A                     	;# 
  7912  0F2B                     	;# 
  7913  0F2C                     	;# 
  7914  0F2D                     	;# 
  7915  0F2E                     	;# 
  7916  0F2F                     	;# 
  7917  0F30                     	;# 
  7918  0F31                     	;# 
  7919  0F32                     	;# 
  7920  0F33                     	;# 
  7921  0F34                     	;# 
  7922  0F35                     	;# 
  7923  0F36                     	;# 
  7924  0F37                     	;# 
  7925  0FE4                     	;# 
  7926  0FE5                     	;# 
  7927  0FE6                     	;# 
  7928  0FE7                     	;# 
  7929  0FE8                     	;# 
  7930  0FE9                     	;# 
  7931  0FEA                     	;# 
  7932  0FEB                     	;# 
  7933  0FED                     	;# 
  7934  0FEE                     	;# 
  7935  0FEF                     	;# 
  7936  0000                     	;# 
  7937  0001                     	;# 
  7938  0002                     	;# 
  7939  0003                     	;# 
  7940  0004                     	;# 
  7941  0005                     	;# 
  7942  0006                     	;# 
  7943  0007                     	;# 
  7944  0008                     	;# 
  7945  0009                     	;# 
  7946  000A                     	;# 
  7947  000B                     	;# 
  7948  000C                     	;# 
  7949  000D                     	;# 
  7950  000E                     	;# 
  7951  0010                     	;# 
  7952  0011                     	;# 
  7953  0012                     	;# 
  7954  0013                     	;# 
  7955  0014                     	;# 
  7956  0015                     	;# 
  7957  0015                     	;# 
  7958  0016                     	;# 
  7959  0016                     	;# 
  7960  0017                     	;# 
  7961  0018                     	;# 
  7962  0019                     	;# 
  7963  0019                     	;# 
  7964  001A                     	;# 
  7965  001B                     	;# 
  7966  001C                     	;# 
  7967  001D                     	;# 
  7968  001E                     	;# 
  7969  001F                     	;# 
  7970  008C                     	;# 
  7971  008D                     	;# 
  7972  008E                     	;# 
  7973  0090                     	;# 
  7974  0091                     	;# 
  7975  0092                     	;# 
  7976  0093                     	;# 
  7977  0094                     	;# 
  7978  0097                     	;# 
  7979  009B                     	;# 
  7980  009B                     	;# 
  7981  009C                     	;# 
  7982  009D                     	;# 
  7983  009E                     	;# 
  7984  009F                     	;# 
  7985  010C                     	;# 
  7986  010D                     	;# 
  7987  010E                     	;# 
  7988  0111                     	;# 
  7989  0112                     	;# 
  7990  0113                     	;# 
  7991  0114                     	;# 
  7992  0115                     	;# 
  7993  0116                     	;# 
  7994  0117                     	;# 
  7995  0118                     	;# 
  7996  0119                     	;# 
  7997  018C                     	;# 
  7998  018D                     	;# 
  7999  018E                     	;# 
  8000  0199                     	;# 
  8001  0199                     	;# 
  8002  0199                     	;# 
  8003  019A                     	;# 
  8004  019A                     	;# 
  8005  019A                     	;# 
  8006  019B                     	;# 
  8007  019B                     	;# 
  8008  019B                     	;# 
  8009  019B                     	;# 
  8010  019B                     	;# 
  8011  019C                     	;# 
  8012  019C                     	;# 
  8013  019C                     	;# 
  8014  019D                     	;# 
  8015  019D                     	;# 
  8016  019D                     	;# 
  8017  019E                     	;# 
  8018  019E                     	;# 
  8019  019E                     	;# 
  8020  019F                     	;# 
  8021  019F                     	;# 
  8022  019F                     	;# 
  8023  019F                     	;# 
  8024  019F                     	;# 
  8025  020C                     	;# 
  8026  020D                     	;# 
  8027  020E                     	;# 
  8028  0211                     	;# 
  8029  0211                     	;# 
  8030  0212                     	;# 
  8031  0212                     	;# 
  8032  0213                     	;# 
  8033  0213                     	;# 
  8034  0214                     	;# 
  8035  0214                     	;# 
  8036  0215                     	;# 
  8037  0215                     	;# 
  8038  0215                     	;# 
  8039  0215                     	;# 
  8040  0216                     	;# 
  8041  0216                     	;# 
  8042  0217                     	;# 
  8043  0217                     	;# 
  8044  0219                     	;# 
  8045  021A                     	;# 
  8046  021B                     	;# 
  8047  021C                     	;# 
  8048  021D                     	;# 
  8049  021D                     	;# 
  8050  021E                     	;# 
  8051  021F                     	;# 
  8052  028C                     	;# 
  8053  028D                     	;# 
  8054  028E                     	;# 
  8055  0291                     	;# 
  8056  0291                     	;# 
  8057  0292                     	;# 
  8058  0293                     	;# 
  8059  0294                     	;# 
  8060  0295                     	;# 
  8061  0295                     	;# 
  8062  0296                     	;# 
  8063  0297                     	;# 
  8064  0298                     	;# 
  8065  029F                     	;# 
  8066  030C                     	;# 
  8067  030D                     	;# 
  8068  030E                     	;# 
  8069  0311                     	;# 
  8070  0311                     	;# 
  8071  0312                     	;# 
  8072  0313                     	;# 
  8073  0314                     	;# 
  8074  0315                     	;# 
  8075  0315                     	;# 
  8076  0316                     	;# 
  8077  0317                     	;# 
  8078  0318                     	;# 
  8079  038C                     	;# 
  8080  038D                     	;# 
  8081  038E                     	;# 
  8082  0391                     	;# 
  8083  0392                     	;# 
  8084  0393                     	;# 
  8085  0394                     	;# 
  8086  0395                     	;# 
  8087  0396                     	;# 
  8088  0397                     	;# 
  8089  0398                     	;# 
  8090  0399                     	;# 
  8091  039A                     	;# 
  8092  039C                     	;# 
  8093  039D                     	;# 
  8094  039E                     	;# 
  8095  039F                     	;# 
  8096  0411                     	;# 
  8097  0411                     	;# 
  8098  0412                     	;# 
  8099  0413                     	;# 
  8100  0414                     	;# 
  8101  0415                     	;# 
  8102  0416                     	;# 
  8103  0417                     	;# 
  8104  0418                     	;# 
  8105  0418                     	;# 
  8106  0419                     	;# 
  8107  041A                     	;# 
  8108  041B                     	;# 
  8109  041C                     	;# 
  8110  041D                     	;# 
  8111  041E                     	;# 
  8112  041F                     	;# 
  8113  0498                     	;# 
  8114  0498                     	;# 
  8115  0499                     	;# 
  8116  049A                     	;# 
  8117  049B                     	;# 
  8118  049B                     	;# 
  8119  049C                     	;# 
  8120  049D                     	;# 
  8121  049E                     	;# 
  8122  049F                     	;# 
  8123  0617                     	;# 
  8124  0618                     	;# 
  8125  0619                     	;# 
  8126  0619                     	;# 
  8127  061A                     	;# 
  8128  061B                     	;# 
  8129  061C                     	;# 
  8130  061C                     	;# 
  8131  061F                     	;# 
  8132  0691                     	;# 
  8133  0692                     	;# 
  8134  0693                     	;# 
  8135  0694                     	;# 
  8136  0695                     	;# 
  8137  0696                     	;# 
  8138  0697                     	;# 
  8139  0698                     	;# 
  8140  0699                     	;# 
  8141  0711                     	;# 
  8142  0712                     	;# 
  8143  0713                     	;# 
  8144  0714                     	;# 
  8145  0715                     	;# 
  8146  0716                     	;# 
  8147  0717                     	;# 
  8148  0718                     	;# 
  8149  0719                     	;# 
  8150  0891                     	;# 
  8151  0891                     	;# 
  8152  0891                     	;# 
  8153  0891                     	;# 
  8154  0891                     	;# 
  8155  0891                     	;# 
  8156  0892                     	;# 
  8157  0892                     	;# 
  8158  0892                     	;# 
  8159  0893                     	;# 
  8160  0893                     	;# 
  8161  0893                     	;# 
  8162  0893                     	;# 
  8163  0893                     	;# 
  8164  0893                     	;# 
  8165  0894                     	;# 
  8166  0894                     	;# 
  8167  0894                     	;# 
  8168  0895                     	;# 
  8169  0895                     	;# 
  8170  0895                     	;# 
  8171  0896                     	;# 
  8172  0896                     	;# 
  8173  0896                     	;# 
  8174  089B                     	;# 
  8175  0911                     	;# 
  8176  0912                     	;# 
  8177  0913                     	;# 
  8178  0914                     	;# 
  8179  0915                     	;# 
  8180  0916                     	;# 
  8181  0918                     	;# 
  8182  0919                     	;# 
  8183  091A                     	;# 
  8184  091B                     	;# 
  8185  091C                     	;# 
  8186  091D                     	;# 
  8187  091E                     	;# 
  8188  091F                     	;# 
  8189  0E0F                     	;# 
  8190  0E10                     	;# 
  8191  0E11                     	;# 
  8192  0E12                     	;# 
  8193  0E13                     	;# 
  8194  0E14                     	;# 
  8195  0E15                     	;# 
  8196  0E16                     	;# 
  8197  0E17                     	;# 
  8198  0E18                     	;# 
  8199  0E19                     	;# 
  8200  0E1A                     	;# 
  8201  0E1B                     	;# 
  8202  0E1C                     	;# 
  8203  0E1D                     	;# 
  8204  0E1E                     	;# 
  8205  0E1F                     	;# 
  8206  0E20                     	;# 
  8207  0E21                     	;# 
  8208  0E22                     	;# 
  8209  0E24                     	;# 
  8210  0E25                     	;# 
  8211  0E28                     	;# 
  8212  0E29                     	;# 
  8213  0E2A                     	;# 
  8214  0E2B                     	;# 
  8215  0E2C                     	;# 
  8216  0E2D                     	;# 
  8217  0E2E                     	;# 
  8218  0E2F                     	;# 
  8219  0E90                     	;# 
  8220  0E91                     	;# 
  8221  0E92                     	;# 
  8222  0E94                     	;# 
  8223  0E95                     	;# 
  8224  0E9C                     	;# 
  8225  0E9D                     	;# 
  8226  0E9E                     	;# 
  8227  0E9F                     	;# 
  8228  0EA0                     	;# 
  8229  0EA1                     	;# 
  8230  0EA2                     	;# 
  8231  0EA3                     	;# 
  8232  0EA4                     	;# 
  8233  0EA5                     	;# 
  8234  0EA6                     	;# 
  8235  0EA7                     	;# 
  8236  0F0F                     	;# 
  8237  0F10                     	;# 
  8238  0F11                     	;# 
  8239  0F12                     	;# 
  8240  0F13                     	;# 
  8241  0F14                     	;# 
  8242  0F15                     	;# 
  8243  0F16                     	;# 
  8244  0F17                     	;# 
  8245  0F18                     	;# 
  8246  0F19                     	;# 
  8247  0F1A                     	;# 
  8248  0F1B                     	;# 
  8249  0F1C                     	;# 
  8250  0F1D                     	;# 
  8251  0F1E                     	;# 
  8252  0F1F                     	;# 
  8253  0F20                     	;# 
  8254  0F21                     	;# 
  8255  0F22                     	;# 
  8256  0F23                     	;# 
  8257  0F24                     	;# 
  8258  0F25                     	;# 
  8259  0F26                     	;# 
  8260  0F27                     	;# 
  8261  0F28                     	;# 
  8262  0F29                     	;# 
  8263  0F2A                     	;# 
  8264  0F2B                     	;# 
  8265  0F2C                     	;# 
  8266  0F2D                     	;# 
  8267  0F2E                     	;# 
  8268  0F2F                     	;# 
  8269  0F30                     	;# 
  8270  0F31                     	;# 
  8271  0F32                     	;# 
  8272  0F33                     	;# 
  8273  0F34                     	;# 
  8274  0F35                     	;# 
  8275  0F36                     	;# 
  8276  0F37                     	;# 
  8277  0FE4                     	;# 
  8278  0FE5                     	;# 
  8279  0FE6                     	;# 
  8280  0FE7                     	;# 
  8281  0FE8                     	;# 
  8282  0FE9                     	;# 
  8283  0FEA                     	;# 
  8284  0FEB                     	;# 
  8285  0FED                     	;# 
  8286  0FEE                     	;# 
  8287  0FEF                     	;# 
  8288  0000                     	;# 
  8289  0001                     	;# 
  8290  0002                     	;# 
  8291  0003                     	;# 
  8292  0004                     	;# 
  8293  0005                     	;# 
  8294  0006                     	;# 
  8295  0007                     	;# 
  8296  0008                     	;# 
  8297  0009                     	;# 
  8298  000A                     	;# 
  8299  000B                     	;# 
  8300  000C                     	;# 
  8301  000D                     	;# 
  8302  000E                     	;# 
  8303  0010                     	;# 
  8304  0011                     	;# 
  8305  0012                     	;# 
  8306  0013                     	;# 
  8307  0014                     	;# 
  8308  0015                     	;# 
  8309  0015                     	;# 
  8310  0016                     	;# 
  8311  0016                     	;# 
  8312  0017                     	;# 
  8313  0018                     	;# 
  8314  0019                     	;# 
  8315  0019                     	;# 
  8316  001A                     	;# 
  8317  001B                     	;# 
  8318  001C                     	;# 
  8319  001D                     	;# 
  8320  001E                     	;# 
  8321  001F                     	;# 
  8322  008C                     	;# 
  8323  008D                     	;# 
  8324  008E                     	;# 
  8325  0090                     	;# 
  8326  0091                     	;# 
  8327  0092                     	;# 
  8328  0093                     	;# 
  8329  0094                     	;# 
  8330  0097                     	;# 
  8331  009B                     	;# 
  8332  009B                     	;# 
  8333  009C                     	;# 
  8334  009D                     	;# 
  8335  009E                     	;# 
  8336  009F                     	;# 
  8337  010C                     	;# 
  8338  010D                     	;# 
  8339  010E                     	;# 
  8340  0111                     	;# 
  8341  0112                     	;# 
  8342  0113                     	;# 
  8343  0114                     	;# 
  8344  0115                     	;# 
  8345  0116                     	;# 
  8346  0117                     	;# 
  8347  0118                     	;# 
  8348  0119                     	;# 
  8349  018C                     	;# 
  8350  018D                     	;# 
  8351  018E                     	;# 
  8352  0199                     	;# 
  8353  0199                     	;# 
  8354  0199                     	;# 
  8355  019A                     	;# 
  8356  019A                     	;# 
  8357  019A                     	;# 
  8358  019B                     	;# 
  8359  019B                     	;# 
  8360  019B                     	;# 
  8361  019B                     	;# 
  8362  019B                     	;# 
  8363  019C                     	;# 
  8364  019C                     	;# 
  8365  019C                     	;# 
  8366  019D                     	;# 
  8367  019D                     	;# 
  8368  019D                     	;# 
  8369  019E                     	;# 
  8370  019E                     	;# 
  8371  019E                     	;# 
  8372  019F                     	;# 
  8373  019F                     	;# 
  8374  019F                     	;# 
  8375  019F                     	;# 
  8376  019F                     	;# 
  8377  020C                     	;# 
  8378  020D                     	;# 
  8379  020E                     	;# 
  8380  0211                     	;# 
  8381  0211                     	;# 
  8382  0212                     	;# 
  8383  0212                     	;# 
  8384  0213                     	;# 
  8385  0213                     	;# 
  8386  0214                     	;# 
  8387  0214                     	;# 
  8388  0215                     	;# 
  8389  0215                     	;# 
  8390  0215                     	;# 
  8391  0215                     	;# 
  8392  0216                     	;# 
  8393  0216                     	;# 
  8394  0217                     	;# 
  8395  0217                     	;# 
  8396  0219                     	;# 
  8397  021A                     	;# 
  8398  021B                     	;# 
  8399  021C                     	;# 
  8400  021D                     	;# 
  8401  021D                     	;# 
  8402  021E                     	;# 
  8403  021F                     	;# 
  8404  028C                     	;# 
  8405  028D                     	;# 
  8406  028E                     	;# 
  8407  0291                     	;# 
  8408  0291                     	;# 
  8409  0292                     	;# 
  8410  0293                     	;# 
  8411  0294                     	;# 
  8412  0295                     	;# 
  8413  0295                     	;# 
  8414  0296                     	;# 
  8415  0297                     	;# 
  8416  0298                     	;# 
  8417  029F                     	;# 
  8418  030C                     	;# 
  8419  030D                     	;# 
  8420  030E                     	;# 
  8421  0311                     	;# 
  8422  0311                     	;# 
  8423  0312                     	;# 
  8424  0313                     	;# 
  8425  0314                     	;# 
  8426  0315                     	;# 
  8427  0315                     	;# 
  8428  0316                     	;# 
  8429  0317                     	;# 
  8430  0318                     	;# 
  8431  038C                     	;# 
  8432  038D                     	;# 
  8433  038E                     	;# 
  8434  0391                     	;# 
  8435  0392                     	;# 
  8436  0393                     	;# 
  8437  0394                     	;# 
  8438  0395                     	;# 
  8439  0396                     	;# 
  8440  0397                     	;# 
  8441  0398                     	;# 
  8442  0399                     	;# 
  8443  039A                     	;# 
  8444  039C                     	;# 
  8445  039D                     	;# 
  8446  039E                     	;# 
  8447  039F                     	;# 
  8448  0411                     	;# 
  8449  0411                     	;# 
  8450  0412                     	;# 
  8451  0413                     	;# 
  8452  0414                     	;# 
  8453  0415                     	;# 
  8454  0416                     	;# 
  8455  0417                     	;# 
  8456  0418                     	;# 
  8457  0418                     	;# 
  8458  0419                     	;# 
  8459  041A                     	;# 
  8460  041B                     	;# 
  8461  041C                     	;# 
  8462  041D                     	;# 
  8463  041E                     	;# 
  8464  041F                     	;# 
  8465  0498                     	;# 
  8466  0498                     	;# 
  8467  0499                     	;# 
  8468  049A                     	;# 
  8469  049B                     	;# 
  8470  049B                     	;# 
  8471  049C                     	;# 
  8472  049D                     	;# 
  8473  049E                     	;# 
  8474  049F                     	;# 
  8475  0617                     	;# 
  8476  0618                     	;# 
  8477  0619                     	;# 
  8478  0619                     	;# 
  8479  061A                     	;# 
  8480  061B                     	;# 
  8481  061C                     	;# 
  8482  061C                     	;# 
  8483  061F                     	;# 
  8484  0691                     	;# 
  8485  0692                     	;# 
  8486  0693                     	;# 
  8487  0694                     	;# 
  8488  0695                     	;# 
  8489  0696                     	;# 
  8490  0697                     	;# 
  8491  0698                     	;# 
  8492  0699                     	;# 
  8493  0711                     	;# 
  8494  0712                     	;# 
  8495  0713                     	;# 
  8496  0714                     	;# 
  8497  0715                     	;# 
  8498  0716                     	;# 
  8499  0717                     	;# 
  8500  0718                     	;# 
  8501  0719                     	;# 
  8502  0891                     	;# 
  8503  0891                     	;# 
  8504  0891                     	;# 
  8505  0891                     	;# 
  8506  0891                     	;# 
  8507  0891                     	;# 
  8508  0892                     	;# 
  8509  0892                     	;# 
  8510  0892                     	;# 
  8511  0893                     	;# 
  8512  0893                     	;# 
  8513  0893                     	;# 
  8514  0893                     	;# 
  8515  0893                     	;# 
  8516  0893                     	;# 
  8517  0894                     	;# 
  8518  0894                     	;# 
  8519  0894                     	;# 
  8520  0895                     	;# 
  8521  0895                     	;# 
  8522  0895                     	;# 
  8523  0896                     	;# 
  8524  0896                     	;# 
  8525  0896                     	;# 
  8526  089B                     	;# 
  8527  0911                     	;# 
  8528  0912                     	;# 
  8529  0913                     	;# 
  8530  0914                     	;# 
  8531  0915                     	;# 
  8532  0916                     	;# 
  8533  0918                     	;# 
  8534  0919                     	;# 
  8535  091A                     	;# 
  8536  091B                     	;# 
  8537  091C                     	;# 
  8538  091D                     	;# 
  8539  091E                     	;# 
  8540  091F                     	;# 
  8541  0E0F                     	;# 
  8542  0E10                     	;# 
  8543  0E11                     	;# 
  8544  0E12                     	;# 
  8545  0E13                     	;# 
  8546  0E14                     	;# 
  8547  0E15                     	;# 
  8548  0E16                     	;# 
  8549  0E17                     	;# 
  8550  0E18                     	;# 
  8551  0E19                     	;# 
  8552  0E1A                     	;# 
  8553  0E1B                     	;# 
  8554  0E1C                     	;# 
  8555  0E1D                     	;# 
  8556  0E1E                     	;# 
  8557  0E1F                     	;# 
  8558  0E20                     	;# 
  8559  0E21                     	;# 
  8560  0E22                     	;# 
  8561  0E24                     	;# 
  8562  0E25                     	;# 
  8563  0E28                     	;# 
  8564  0E29                     	;# 
  8565  0E2A                     	;# 
  8566  0E2B                     	;# 
  8567  0E2C                     	;# 
  8568  0E2D                     	;# 
  8569  0E2E                     	;# 
  8570  0E2F                     	;# 
  8571  0E90                     	;# 
  8572  0E91                     	;# 
  8573  0E92                     	;# 
  8574  0E94                     	;# 
  8575  0E95                     	;# 
  8576  0E9C                     	;# 
  8577  0E9D                     	;# 
  8578  0E9E                     	;# 
  8579  0E9F                     	;# 
  8580  0EA0                     	;# 
  8581  0EA1                     	;# 
  8582  0EA2                     	;# 
  8583  0EA3                     	;# 
  8584  0EA4                     	;# 
  8585  0EA5                     	;# 
  8586  0EA6                     	;# 
  8587  0EA7                     	;# 
  8588  0F0F                     	;# 
  8589  0F10                     	;# 
  8590  0F11                     	;# 
  8591  0F12                     	;# 
  8592  0F13                     	;# 
  8593  0F14                     	;# 
  8594  0F15                     	;# 
  8595  0F16                     	;# 
  8596  0F17                     	;# 
  8597  0F18                     	;# 
  8598  0F19                     	;# 
  8599  0F1A                     	;# 
  8600  0F1B                     	;# 
  8601  0F1C                     	;# 
  8602  0F1D                     	;# 
  8603  0F1E                     	;# 
  8604  0F1F                     	;# 
  8605  0F20                     	;# 
  8606  0F21                     	;# 
  8607  0F22                     	;# 
  8608  0F23                     	;# 
  8609  0F24                     	;# 
  8610  0F25                     	;# 
  8611  0F26                     	;# 
  8612  0F27                     	;# 
  8613  0F28                     	;# 
  8614  0F29                     	;# 
  8615  0F2A                     	;# 
  8616  0F2B                     	;# 
  8617  0F2C                     	;# 
  8618  0F2D                     	;# 
  8619  0F2E                     	;# 
  8620  0F2F                     	;# 
  8621  0F30                     	;# 
  8622  0F31                     	;# 
  8623  0F32                     	;# 
  8624  0F33                     	;# 
  8625  0F34                     	;# 
  8626  0F35                     	;# 
  8627  0F36                     	;# 
  8628  0F37                     	;# 
  8629  0FE4                     	;# 
  8630  0FE5                     	;# 
  8631  0FE6                     	;# 
  8632  0FE7                     	;# 
  8633  0FE8                     	;# 
  8634  0FE9                     	;# 
  8635  0FEA                     	;# 
  8636  0FEB                     	;# 
  8637  0FED                     	;# 
  8638  0FEE                     	;# 
  8639  0FEF                     	;_asciiCharTableLookup
  8640                           
  8641 ;; Function _menu_Exit is unused but had its address taken
  8642  0000                     
  8643 ;; Function _flashy_Exit is unused but had its address taken
  8644  0000                     
  8645 ;; Function _locked_Exit is unused but had its address taken
  8646  0000                     
  8647 ;; Function _secret_Exit is unused but had its address taken
  8648  0000                     
  8649 ;; Function _slot_Exit is unused but had its address taken
  8650  0000                     
  8651                           	psect	idataBANK1
  8652  2667                     __pidataBANK1:	
  8653                           
  8654                           ;initializer for _randx
  8655  2667  3401               	retlw	1
  8656  2668  3400               	retlw	0
  8657  2669  3400               	retlw	0
  8658  266A  3400               	retlw	0
  8659                           
  8660                           ;initializer for _locked_lock_base_leds
  8661  266B  341F               	retlw	31
  8662  266C  34F8               	retlw	248
  8663                           
  8664                           ;initializer for _FLASHY_TEXT_SECRET_TEST
  8665  266D  3428               	retlw	low (STR_9| (0+32768))
  8666  266E  34A8               	retlw	high (STR_9| (0+32768))
  8667                           
  8668                           ;initializer for _FLASHY_TEXT
  8669  266F  3488               	retlw	low (STR_8| (0+32768))
  8670  2670  34A8               	retlw	high (STR_8| (0+32768))
  8671                           
  8672                           	psect	idataBANK2
  8673  277F                     __pidataBANK2:	
  8674                           
  8675                           ;initializer for _menu_option
  8676  277F  348D               	retlw	low (STR_4| (0+32768))
  8677  2780  34A8               	retlw	high (STR_4| (0+32768))
  8678  2781  346E               	retlw	low (STR_5| (0+32768))
  8679  2782  34A8               	retlw	high (STR_5| (0+32768))
  8680  2783  3447               	retlw	low (STR_6| (0+32768))
  8681  2784  34A8               	retlw	high (STR_6| (0+32768))
  8682  2785  3468               	retlw	low (STR_7| (0+32768))
  8683  2786  34A8               	retlw	high (STR_7| (0+32768))
  8684                           
  8685                           ;initializer for marquee@F14038
  8686  2787  3420               	retlw	32
  8687  2788  3420               	retlw	32
  8688  2789  3420               	retlw	32
  8689  278A  3420               	retlw	32
  8690  278B  3400               	retlw	0
  8691                           
  8692                           ;initializer for marquee_speedy@F14029
  8693  278C  3420               	retlw	32
  8694  278D  3420               	retlw	32
  8695  278E  3420               	retlw	32
  8696  278F  3420               	retlw	32
  8697  2790  3400               	retlw	0
  8698                           
  8699                           	psect	idataBANK3
  8700  1CFD                     __pidataBANK3:	
  8701                           
  8702                           ;initializer for _flashy_option
  8703  1CFD  3488               	retlw	low (STR_8| (0+32768))
  8704  1CFE  34A8               	retlw	high (STR_8| (0+32768))
  8705  1CFF  3451               	retlw	low (STR_11| (0+32768))
  8706  1D00  34A8               	retlw	high (STR_11| (0+32768))
  8707  1D01  345A               	retlw	low (STR_12| (0+32768))
  8708  1D02  34A8               	retlw	high (STR_12| (0+32768))
  8709  1D03  3462               	retlw	low (STR_13| (0+32768))
  8710  1D04  34A8               	retlw	high (STR_13| (0+32768))
  8711  1D05  3415               	retlw	low (STR_14| (0+32768))
  8712  1D06  34A8               	retlw	high (STR_14| (0+32768))
  8713  1D07  3400               	retlw	low (STR_15| (0+32768))
  8714  1D08  34A8               	retlw	high (STR_15| (0+32768))
  8715  1D09  3477               	retlw	low (STR_16| (0+32768))
  8716  1D0A  34A0               	retlw	high (STR_16| (0+32768))
  8717  1D0B  3455               	retlw	low (STR_17| (0+32768))
  8718  1D0C  34A0               	retlw	high (STR_17| (0+32768))
  8719  1D0D  3431               	retlw	low (STR_18| (0+32768))
  8720  1D0E  34A0               	retlw	high (STR_18| (0+32768))
  8721  1D0F  340A               	retlw	low (STR_19| (0+32768))
  8722  1D10  34A0               	retlw	high (STR_19| (0+32768))
  8723                           
  8724                           ;initializer for _locked_locking_leds
  8725  1D11  3400               	retlw	0
  8726  1D12  3400               	retlw	0
  8727  1D13  3420               	retlw	32
  8728  1D14  3400               	retlw	0
  8729  1D15  3460               	retlw	96
  8730  1D16  3400               	retlw	0
  8731  1D17  34E0               	retlw	224
  8732  1D18  3400               	retlw	0
  8733  1D19  34E0               	retlw	224
  8734  1D1A  3401               	retlw	1
  8735  1D1B  34E0               	retlw	224
  8736  1D1C  3403               	retlw	3
  8737                           
  8738                           ;initializer for _menu_options_leds
  8739  1D1D  3400               	retlw	0
  8740  1D1E  3402               	retlw	2
  8741  1D1F  3400               	retlw	0
  8742  1D20  3401               	retlw	1
  8743  1D21  3480               	retlw	128
  8744  1D22  3400               	retlw	0
  8745  1D23  3440               	retlw	64
  8746  1D24  3400               	retlw	0
  8747  1D25  3420               	retlw	32
  8748  1D26  3400               	retlw	0
  8749                           
  8750                           ;initializer for _secret_inputs
  8751  1D27  3401               	retlw	1
  8752  1D28  3401               	retlw	1
  8753  1D29  3402               	retlw	2
  8754  1D2A  3402               	retlw	2
  8755  1D2B  3401               	retlw	1
  8756  1D2C  3402               	retlw	2
  8757  1D2D  3401               	retlw	1
  8758  1D2E  3402               	retlw	2
  8759  1D2F  3404               	retlw	4
  8760  1D30  3408               	retlw	8
  8761  1D31  3400               	retlw	0
  8762  1D32  3400               	retlw	0
  8763  1D33  3400               	retlw	0
  8764  1D34  3400               	retlw	0
  8765  1D35  3400               	retlw	0
  8766  1D36  3400               	retlw	0
  8767  1D37  3400               	retlw	0
  8768  1D38  3400               	retlw	0
  8769  1D39  3400               	retlw	0
  8770  1D3A  3400               	retlw	0
  8771  1D3B  3400               	retlw	0
  8772  1D3C  3400               	retlw	0
  8773  1D3D  34DA               	retlw	low (_secret_value| 0)
  8774  1D3E  3401               	retlw	1
  8775  1D3F  3400               	retlw	0
  8776                           
  8777                           	psect	idataBANK5
  8778  1B06                     __pidataBANK5:	
  8779                           
  8780                           ;initializer for _roundabout_leds_inverse
  8781  1B06  3480               	retlw	128
  8782  1B07  3400               	retlw	0
  8783  1B08  3440               	retlw	64
  8784  1B09  3400               	retlw	0
  8785  1B0A  3420               	retlw	32
  8786  1B0B  3400               	retlw	0
  8787  1B0C  3410               	retlw	16
  8788  1B0D  3400               	retlw	0
  8789  1B0E  3408               	retlw	8
  8790  1B0F  3400               	retlw	0
  8791  1B10  3404               	retlw	4
  8792  1B11  3400               	retlw	0
  8793  1B12  3402               	retlw	2
  8794  1B13  3400               	retlw	0
  8795  1B14  3401               	retlw	1
  8796  1B15  3400               	retlw	0
  8797  1B16  3402               	retlw	2
  8798  1B17  3400               	retlw	0
  8799  1B18  3404               	retlw	4
  8800  1B19  3400               	retlw	0
  8801  1B1A  3408               	retlw	8
  8802  1B1B  3400               	retlw	0
  8803  1B1C  3410               	retlw	16
  8804  1B1D  3400               	retlw	0
  8805  1B1E  3420               	retlw	32
  8806  1B1F  3400               	retlw	0
  8807  1B20  3440               	retlw	64
  8808  1B21  3400               	retlw	0
  8809                           
  8810                           ;initializer for _roundabout_leds
  8811  1B22  3480               	retlw	128
  8812  1B23  3400               	retlw	0
  8813  1B24  3400               	retlw	0
  8814  1B25  3401               	retlw	1
  8815  1B26  3400               	retlw	0
  8816  1B27  3402               	retlw	2
  8817  1B28  3400               	retlw	0
  8818  1B29  3408               	retlw	8
  8819  1B2A  3400               	retlw	0
  8820  1B2B  3410               	retlw	16
  8821  1B2C  3400               	retlw	0
  8822  1B2D  3420               	retlw	32
  8823  1B2E  3400               	retlw	0
  8824  1B2F  3440               	retlw	64
  8825  1B30  3400               	retlw	0
  8826  1B31  3480               	retlw	128
  8827  1B32  3400               	retlw	0
  8828  1B33  3440               	retlw	64
  8829  1B34  3400               	retlw	0
  8830  1B35  3420               	retlw	32
  8831  1B36  3400               	retlw	0
  8832  1B37  3410               	retlw	16
  8833  1B38  3400               	retlw	0
  8834  1B39  3408               	retlw	8
  8835  1B3A  3400               	retlw	0
  8836  1B3B  3402               	retlw	2
  8837  1B3C  3400               	retlw	0
  8838  1B3D  3401               	retlw	1
  8839                           
  8840                           	psect	idataBANK6
  8841  1ACE                     __pidataBANK6:	
  8842                           
  8843                           ;initializer for _curtain_leds_inverse
  8844  1ACE  3480               	retlw	128
  8845  1ACF  3400               	retlw	0
  8846  1AD0  34C0               	retlw	192
  8847  1AD1  3400               	retlw	0
  8848  1AD2  34E0               	retlw	224
  8849  1AD3  3400               	retlw	0
  8850  1AD4  34F0               	retlw	240
  8851  1AD5  3400               	retlw	0
  8852  1AD6  34F8               	retlw	248
  8853  1AD7  3400               	retlw	0
  8854  1AD8  34FC               	retlw	252
  8855  1AD9  3400               	retlw	0
  8856  1ADA  34FE               	retlw	254
  8857  1ADB  3400               	retlw	0
  8858  1ADC  34FF               	retlw	255
  8859  1ADD  3400               	retlw	0
  8860  1ADE  34FE               	retlw	254
  8861  1ADF  3400               	retlw	0
  8862  1AE0  34FC               	retlw	252
  8863  1AE1  3400               	retlw	0
  8864  1AE2  34F8               	retlw	248
  8865  1AE3  3400               	retlw	0
  8866  1AE4  34F0               	retlw	240
  8867  1AE5  3400               	retlw	0
  8868  1AE6  34E0               	retlw	224
  8869  1AE7  3400               	retlw	0
  8870  1AE8  34C0               	retlw	192
  8871  1AE9  3400               	retlw	0
  8872                           
  8873                           ;initializer for _curtain_leds
  8874  1AEA  3480               	retlw	128
  8875  1AEB  3400               	retlw	0
  8876  1AEC  3480               	retlw	128
  8877  1AED  3401               	retlw	1
  8878  1AEE  3480               	retlw	128
  8879  1AEF  3403               	retlw	3
  8880  1AF0  3480               	retlw	128
  8881  1AF1  340B               	retlw	11
  8882  1AF2  3480               	retlw	128
  8883  1AF3  341B               	retlw	27
  8884  1AF4  3480               	retlw	128
  8885  1AF5  343B               	retlw	59
  8886  1AF6  3480               	retlw	128
  8887  1AF7  347B               	retlw	123
  8888  1AF8  3480               	retlw	128
  8889  1AF9  34FB               	retlw	251
  8890  1AFA  3480               	retlw	128
  8891  1AFB  347B               	retlw	123
  8892  1AFC  3480               	retlw	128
  8893  1AFD  343B               	retlw	59
  8894  1AFE  3480               	retlw	128
  8895  1AFF  341B               	retlw	27
  8896  1B00  3480               	retlw	128
  8897  1B01  340B               	retlw	11
  8898  1B02  3480               	retlw	128
  8899  1B03  3403               	retlw	3
  8900  1B04  3480               	retlw	128
  8901  1B05  3401               	retlw	1
  8902                           
  8903                           	psect	idataBIGRAM
  8904  1700                     __pidataBIGRAM:	
  8905                           
  8906                           ;initializer for _asciiCharTableLookup
  8907  1700  3400               	retlw	0
  8908  1701  3400               	retlw	0
  8909  1702  3400               	retlw	0
  8910  1703  3420               	retlw	32
  8911  1704  3410               	retlw	16
  8912  1705  3410               	retlw	16
  8913  1706  3420               	retlw	32
  8914  1707  3400               	retlw	0
  8915  1708  3410               	retlw	16
  8916  1709  3410               	retlw	16
  8917  170A  34A5               	retlw	165
  8918  170B  3421               	retlw	33
  8919  170C  34A5               	retlw	165
  8920  170D  3460               	retlw	96
  8921  170E  3410               	retlw	16
  8922  170F  3430               	retlw	48
  8923  1710  3400               	retlw	0
  8924  1711  3412               	retlw	18
  8925  1712  3410               	retlw	16
  8926  1713  3408               	retlw	8
  8927  1714  3420               	retlw	32
  8928  1715  3420               	retlw	32
  8929  1716  3485               	retlw	133
  8930  1717  3445               	retlw	69
  8931  1718  34B1               	retlw	177
  8932  1719  3430               	retlw	48
  8933  171A  3410               	retlw	16
  8934  171B  3410               	retlw	16
  8935  171C  3410               	retlw	16
  8936  171D  3410               	retlw	16
  8937  171E  3410               	retlw	16
  8938  171F  3410               	retlw	16
  8939  1720  3410               	retlw	16
  8940  1721  3410               	retlw	16
  8941  1722  3410               	retlw	16
  8942  1723  3410               	retlw	16
  8943  1724  3410               	retlw	16
  8944  1725  3410               	retlw	16
  8945  1726  3410               	retlw	16
  8946  1727  3410               	retlw	16
  8947  1728  3410               	retlw	16
  8948  1729  3410               	retlw	16
  8949  172A  3410               	retlw	16
  8950  172B  3410               	retlw	16
  8951  172C  3410               	retlw	16
  8952  172D  3410               	retlw	16
  8953  172E  3410               	retlw	16
  8954  172F  3410               	retlw	16
  8955  1730  3410               	retlw	16
  8956  1731  3410               	retlw	16
  8957  1732  3410               	retlw	16
  8958  1733  3410               	retlw	16
  8959  1734  3410               	retlw	16
  8960  1735  3410               	retlw	16
  8961  1736  3410               	retlw	16
  8962  1737  3410               	retlw	16
  8963  1738  3410               	retlw	16
  8964  1739  3410               	retlw	16
  8965  173A  3410               	retlw	16
  8966  173B  3410               	retlw	16
  8967  173C  3410               	retlw	16
  8968  173D  3410               	retlw	16
  8969  173E  3410               	retlw	16
  8970  173F  3410               	retlw	16
  8971  1740  3400               	retlw	0
  8972  1741  3400               	retlw	0
  8973  1742  34C0               	retlw	192
  8974  1743  3440               	retlw	64
  8975  1744  3400               	retlw	0
  8976  1745  3444               	retlw	68
  8977  1746  3410               	retlw	16
  8978  1747  3410               	retlw	16
  8979  1748  34B4               	retlw	180
  8980  1749  3435               	retlw	53
  8981  174A  3410               	retlw	16
  8982  174B  3410               	retlw	16
  8983  174C  3410               	retlw	16
  8984  174D  3410               	retlw	16
  8985  174E  3400               	retlw	0
  8986  174F  3404               	retlw	4
  8987  1750  3408               	retlw	8
  8988  1751  3408               	retlw	8
  8989  1752  3402               	retlw	2
  8990  1753  3402               	retlw	2
  8991  1754  341E               	retlw	30
  8992  1755  341E               	retlw	30
  8993  1756  3414               	retlw	20
  8994  1757  3414               	retlw	20
  8995  1758  3440               	retlw	64
  8996  1759  3400               	retlw	0
  8997  175A  3410               	retlw	16
  8998  175B  3410               	retlw	16
  8999  175C  3440               	retlw	64
  9000  175D  3400               	retlw	0
  9001  175E  3402               	retlw	2
  9002  175F  3408               	retlw	8
  9003  1760  34A9               	retlw	169
  9004  1761  3463               	retlw	99
  9005  1762  3480               	retlw	128
  9006  1763  3440               	retlw	64
  9007  1764  3431               	retlw	49
  9008  1765  3470               	retlw	112
  9009  1766  34B0               	retlw	176
  9010  1767  3460               	retlw	96
  9011  1768  3490               	retlw	144
  9012  1769  3451               	retlw	81
  9013  176A  34B0               	retlw	176
  9014  176B  3431               	retlw	49
  9015  176C  34B1               	retlw	177
  9016  176D  3431               	retlw	49
  9017  176E  3480               	retlw	128
  9018  176F  3460               	retlw	96
  9019  1770  34B1               	retlw	177
  9020  1771  3471               	retlw	113
  9021  1772  3490               	retlw	144
  9022  1773  3471               	retlw	113
  9023  1774  3410               	retlw	16
  9024  1775  3410               	retlw	16
  9025  1776  3410               	retlw	16
  9026  1777  3410               	retlw	16
  9027  1778  3408               	retlw	8
  9028  1779  3408               	retlw	8
  9029  177A  3430               	retlw	48
  9030  177B  3410               	retlw	16
  9031  177C  3402               	retlw	2
  9032  177D  3402               	retlw	2
  9033  177E  3414               	retlw	20
  9034  177F  34E1               	retlw	225
  9035  1780  34A5               	retlw	165
  9036  1781  3470               	retlw	112
  9037  1782  3491               	retlw	145
  9038  1783  3471               	retlw	113
  9039  1784  34B1               	retlw	177
  9040  1785  3411               	retlw	17
  9041  1786  3421               	retlw	33
  9042  1787  3421               	retlw	33
  9043  1788  34B1               	retlw	177
  9044  1789  3450               	retlw	80
  9045  178A  3421               	retlw	33
  9046  178B  3431               	retlw	49
  9047  178C  3401               	retlw	1
  9048  178D  3431               	retlw	49
  9049  178E  34B1               	retlw	177
  9050  178F  3421               	retlw	33
  9051  1790  3491               	retlw	145
  9052  1791  3451               	retlw	81
  9053  1792  3424               	retlw	36
  9054  1793  3424               	retlw	36
  9055  1794  34A1               	retlw	161
  9056  1795  3440               	retlw	64
  9057  1796  3409               	retlw	9
  9058  1797  3419               	retlw	25
  9059  1798  3421               	retlw	33
  9060  1799  3401               	retlw	1
  9061  179A  3481               	retlw	129
  9062  179B  344B               	retlw	75
  9063  179C  3489               	retlw	137
  9064  179D  3443               	retlw	67
  9065  179E  34A1               	retlw	161
  9066  179F  3461               	retlw	97
  9067  17A0  3411               	retlw	17
  9068  17A1  3471               	retlw	113
  9069  17A2  34A9               	retlw	169
  9070  17A3  3461               	retlw	97
  9071  17A4  3419               	retlw	25
  9072  17A5  3471               	retlw	113
  9073  17A6  34B0               	retlw	176
  9074  17A7  3431               	retlw	49
  9075  17A8  3404               	retlw	4
  9076  17A9  3424               	retlw	36
  9077  17AA  34A1               	retlw	161
  9078  17AB  3441               	retlw	65
  9079  17AC  3403               	retlw	3
  9080  17AD  3409               	retlw	9
  9081  17AE  348B               	retlw	139
  9082  17AF  3441               	retlw	65
  9083  17B0  340A               	retlw	10
  9084  17B1  340A               	retlw	10
  9085  17B2  3404               	retlw	4
  9086  17B3  340A               	retlw	10
  9087  17B4  3422               	retlw	34
  9088  17B5  3428               	retlw	40
  9089  17B6  3421               	retlw	33
  9090  17B7  3421               	retlw	33
  9091  17B8  3408               	retlw	8
  9092  17B9  3402               	retlw	2
  9093  17BA  34A0               	retlw	160
  9094  17BB  3460               	retlw	96
  9095  17BC  340A               	retlw	10
  9096  17BD  3400               	retlw	0
  9097  17BE  3420               	retlw	32
  9098  17BF  3400               	retlw	0
  9099  17C0  3410               	retlw	16
  9100  17C1  3410               	retlw	16
  9101  17C2  3491               	retlw	145
  9102  17C3  3471               	retlw	113
  9103  17C4  34B1               	retlw	177
  9104  17C5  3411               	retlw	17
  9105  17C6  3431               	retlw	49
  9106  17C7  3410               	retlw	16
  9107  17C8  34B1               	retlw	177
  9108  17C9  3450               	retlw	80
  9109  17CA  3421               	retlw	33
  9110  17CB  3431               	retlw	49
  9111  17CC  3401               	retlw	1
  9112  17CD  3431               	retlw	49
  9113  17CE  34B1               	retlw	177
  9114  17CF  3421               	retlw	33
  9115  17D0  3491               	retlw	145
  9116  17D1  3451               	retlw	81
  9117  17D2  3424               	retlw	36
  9118  17D3  3424               	retlw	36
  9119  17D4  34A1               	retlw	161
  9120  17D5  3440               	retlw	64
  9121  17D6  3409               	retlw	9
  9122  17D7  3419               	retlw	25
  9123  17D8  3421               	retlw	33
  9124  17D9  3401               	retlw	1
  9125  17DA  3481               	retlw	129
  9126  17DB  344B               	retlw	75
  9127  17DC  3489               	retlw	137
  9128  17DD  3443               	retlw	67
  9129  17DE  34A1               	retlw	161
  9130  17DF  3461               	retlw	97
  9131  17E0  3411               	retlw	17
  9132  17E1  3471               	retlw	113
  9133  17E2  34A9               	retlw	169
  9134  17E3  3461               	retlw	97
  9135  17E4  3419               	retlw	25
  9136  17E5  3471               	retlw	113
  9137  17E6  34B0               	retlw	176
  9138  17E7  3431               	retlw	49
  9139  17E8  3404               	retlw	4
  9140  17E9  3424               	retlw	36
  9141  17EA  34A1               	retlw	161
  9142  17EB  3441               	retlw	65
  9143  17EC  3403               	retlw	3
  9144  17ED  3409               	retlw	9
  9145  17EE  348B               	retlw	139
  9146  17EF  3441               	retlw	65
  9147  17F0  340A               	retlw	10
  9148  17F1  340A               	retlw	10
  9149  17F2  3404               	retlw	4
  9150  17F3  340A               	retlw	10
  9151  17F4  3422               	retlw	34
  9152  17F5  3428               	retlw	40
  9153  17F6  3410               	retlw	16
  9154  17F7  3410               	retlw	16
  9155  17F8  3404               	retlw	4
  9156  17F9  3404               	retlw	4
  9157  17FA  3410               	retlw	16
  9158  17FB  3410               	retlw	16
  9159  17FC  3410               	retlw	16
  9160  17FD  3410               	retlw	16
  9161  17FE  34FF               	retlw	255
  9162  17FF  34FF               	retlw	255
  9163                           
  9164                           	psect	stringtext1
  9165  1000                     __pstringtext1:	
  9166  1000                     _gamma_table_256x1k:	
  9167  1000  3400               	retlw	0
  9168  1001  3400               	retlw	0
  9169  1002  3400               	retlw	0
  9170  1003  3400               	retlw	0
  9171  1004  3400               	retlw	0
  9172  1005  3400               	retlw	0
  9173  1006  3400               	retlw	0
  9174  1007  3400               	retlw	0
  9175  1008  3400               	retlw	0
  9176  1009  3400               	retlw	0
  9177  100A  3400               	retlw	0
  9178  100B  3400               	retlw	0
  9179  100C  3400               	retlw	0
  9180  100D  3400               	retlw	0
  9181  100E  3400               	retlw	0
  9182  100F  3400               	retlw	0
  9183  1010  3400               	retlw	0
  9184  1011  3400               	retlw	0
  9185  1012  3400               	retlw	0
  9186  1013  3400               	retlw	0
  9187  1014  3400               	retlw	0
  9188  1015  3400               	retlw	0
  9189  1016  3400               	retlw	0
  9190  1017  3400               	retlw	0
  9191  1018  3400               	retlw	0
  9192  1019  3400               	retlw	0
  9193  101A  3400               	retlw	0
  9194  101B  3400               	retlw	0
  9195  101C  3400               	retlw	0
  9196  101D  3400               	retlw	0
  9197  101E  3401               	retlw	1
  9198  101F  3400               	retlw	0
  9199  1020  3401               	retlw	1
  9200  1021  3400               	retlw	0
  9201  1022  3401               	retlw	1
  9202  1023  3400               	retlw	0
  9203  1024  3401               	retlw	1
  9204  1025  3400               	retlw	0
  9205  1026  3401               	retlw	1
  9206  1027  3400               	retlw	0
  9207  1028  3401               	retlw	1
  9208  1029  3400               	retlw	0
  9209  102A  3402               	retlw	2
  9210  102B  3400               	retlw	0
  9211  102C  3402               	retlw	2
  9212  102D  3400               	retlw	0
  9213  102E  3402               	retlw	2
  9214  102F  3400               	retlw	0
  9215  1030  3403               	retlw	3
  9216  1031  3400               	retlw	0
  9217  1032  3403               	retlw	3
  9218  1033  3400               	retlw	0
  9219  1034  3403               	retlw	3
  9220  1035  3400               	retlw	0
  9221  1036  3404               	retlw	4
  9222  1037  3400               	retlw	0
  9223  1038  3404               	retlw	4
  9224  1039  3400               	retlw	0
  9225  103A  3404               	retlw	4
  9226  103B  3400               	retlw	0
  9227  103C  3405               	retlw	5
  9228  103D  3400               	retlw	0
  9229  103E  3405               	retlw	5
  9230  103F  3400               	retlw	0
  9231  1040  3406               	retlw	6
  9232  1041  3400               	retlw	0
  9233  1042  3406               	retlw	6
  9234  1043  3400               	retlw	0
  9235  1044  3407               	retlw	7
  9236  1045  3400               	retlw	0
  9237  1046  3407               	retlw	7
  9238  1047  3400               	retlw	0
  9239  1048  3408               	retlw	8
  9240  1049  3400               	retlw	0
  9241  104A  3408               	retlw	8
  9242  104B  3400               	retlw	0
  9243  104C  3409               	retlw	9
  9244  104D  3400               	retlw	0
  9245  104E  3409               	retlw	9
  9246  104F  3400               	retlw	0
  9247  1050  340A               	retlw	10
  9248  1051  3400               	retlw	0
  9249  1052  340B               	retlw	11
  9250  1053  3400               	retlw	0
  9251  1054  340B               	retlw	11
  9252  1055  3400               	retlw	0
  9253  1056  340C               	retlw	12
  9254  1057  3400               	retlw	0
  9255  1058  340D               	retlw	13
  9256  1059  3400               	retlw	0
  9257  105A  340E               	retlw	14
  9258  105B  3400               	retlw	0
  9259  105C  340E               	retlw	14
  9260  105D  3400               	retlw	0
  9261  105E  340F               	retlw	15
  9262  105F  3400               	retlw	0
  9263  1060  3410               	retlw	16
  9264  1061  3400               	retlw	0
  9265  1062  3411               	retlw	17
  9266  1063  3400               	retlw	0
  9267  1064  3412               	retlw	18
  9268  1065  3400               	retlw	0
  9269  1066  3413               	retlw	19
  9270  1067  3400               	retlw	0
  9271  1068  3413               	retlw	19
  9272  1069  3400               	retlw	0
  9273  106A  3414               	retlw	20
  9274  106B  3400               	retlw	0
  9275  106C  3415               	retlw	21
  9276  106D  3400               	retlw	0
  9277  106E  3416               	retlw	22
  9278  106F  3400               	retlw	0
  9279  1070  3417               	retlw	23
  9280  1071  3400               	retlw	0
  9281  1072  3419               	retlw	25
  9282  1073  3400               	retlw	0
  9283  1074  341A               	retlw	26
  9284  1075  3400               	retlw	0
  9285  1076  341B               	retlw	27
  9286  1077  3400               	retlw	0
  9287  1078  341C               	retlw	28
  9288  1079  3400               	retlw	0
  9289  107A  341D               	retlw	29
  9290  107B  3400               	retlw	0
  9291  107C  341E               	retlw	30
  9292  107D  3400               	retlw	0
  9293  107E  3420               	retlw	32
  9294  107F  3400               	retlw	0
  9295  1080  3421               	retlw	33
  9296  1081  3400               	retlw	0
  9297  1082  3422               	retlw	34
  9298  1083  3400               	retlw	0
  9299  1084  3423               	retlw	35
  9300  1085  3400               	retlw	0
  9301  1086  3425               	retlw	37
  9302  1087  3400               	retlw	0
  9303  1088  3426               	retlw	38
  9304  1089  3400               	retlw	0
  9305  108A  3428               	retlw	40
  9306  108B  3400               	retlw	0
  9307  108C  3429               	retlw	41
  9308  108D  3400               	retlw	0
  9309  108E  342A               	retlw	42
  9310  108F  3400               	retlw	0
  9311  1090  342C               	retlw	44
  9312  1091  3400               	retlw	0
  9313  1092  342E               	retlw	46
  9314  1093  3400               	retlw	0
  9315  1094  342F               	retlw	47
  9316  1095  3400               	retlw	0
  9317  1096  3431               	retlw	49
  9318  1097  3400               	retlw	0
  9319  1098  3432               	retlw	50
  9320  1099  3400               	retlw	0
  9321  109A  3434               	retlw	52
  9322  109B  3400               	retlw	0
  9323  109C  3436               	retlw	54
  9324  109D  3400               	retlw	0
  9325  109E  3437               	retlw	55
  9326  109F  3400               	retlw	0
  9327  10A0  3439               	retlw	57
  9328  10A1  3400               	retlw	0
  9329  10A2  343B               	retlw	59
  9330  10A3  3400               	retlw	0
  9331  10A4  343D               	retlw	61
  9332  10A5  3400               	retlw	0
  9333  10A6  343F               	retlw	63
  9334  10A7  3400               	retlw	0
  9335  10A8  3441               	retlw	65
  9336  10A9  3400               	retlw	0
  9337  10AA  3442               	retlw	66
  9338  10AB  3400               	retlw	0
  9339  10AC  3444               	retlw	68
  9340  10AD  3400               	retlw	0
  9341  10AE  3446               	retlw	70
  9342  10AF  3400               	retlw	0
  9343  10B0  3448               	retlw	72
  9344  10B1  3400               	retlw	0
  9345  10B2  344B               	retlw	75
  9346  10B3  3400               	retlw	0
  9347  10B4  344D               	retlw	77
  9348  10B5  3400               	retlw	0
  9349  10B6  344F               	retlw	79
  9350  10B7  3400               	retlw	0
  9351  10B8  3451               	retlw	81
  9352  10B9  3400               	retlw	0
  9353  10BA  3453               	retlw	83
  9354  10BB  3400               	retlw	0
  9355  10BC  3455               	retlw	85
  9356  10BD  3400               	retlw	0
  9357  10BE  3458               	retlw	88
  9358  10BF  3400               	retlw	0
  9359  10C0  345A               	retlw	90
  9360  10C1  3400               	retlw	0
  9361  10C2  345C               	retlw	92
  9362  10C3  3400               	retlw	0
  9363  10C4  345F               	retlw	95
  9364  10C5  3400               	retlw	0
  9365  10C6  3461               	retlw	97
  9366  10C7  3400               	retlw	0
  9367  10C8  3464               	retlw	100
  9368  10C9  3400               	retlw	0
  9369  10CA  3466               	retlw	102
  9370  10CB  3400               	retlw	0
  9371  10CC  3469               	retlw	105
  9372  10CD  3400               	retlw	0
  9373  10CE  346B               	retlw	107
  9374  10CF  3400               	retlw	0
  9375  10D0  346E               	retlw	110
  9376  10D1  3400               	retlw	0
  9377  10D2  3470               	retlw	112
  9378  10D3  3400               	retlw	0
  9379  10D4  3473               	retlw	115
  9380  10D5  3400               	retlw	0
  9381  10D6  3476               	retlw	118
  9382  10D7  3400               	retlw	0
  9383  10D8  3479               	retlw	121
  9384  10D9  3400               	retlw	0
  9385  10DA  347B               	retlw	123
  9386  10DB  3400               	retlw	0
  9387  10DC  347E               	retlw	126
  9388  10DD  3400               	retlw	0
  9389  10DE  3481               	retlw	129
  9390  10DF  3400               	retlw	0
  9391  10E0  3484               	retlw	132
  9392  10E1  3400               	retlw	0
  9393  10E2  3487               	retlw	135
  9394  10E3  3400               	retlw	0
  9395  10E4  348A               	retlw	138
  9396  10E5  3400               	retlw	0
  9397  10E6  348D               	retlw	141
  9398  10E7  3400               	retlw	0
  9399  10E8  3490               	retlw	144
  9400  10E9  3400               	retlw	0
  9401  10EA  3493               	retlw	147
  9402  10EB  3400               	retlw	0
  9403  10EC  3496               	retlw	150
  9404  10ED  3400               	retlw	0
  9405  10EE  349A               	retlw	154
  9406  10EF  3400               	retlw	0
  9407  10F0  349D               	retlw	157
  9408  10F1  3400               	retlw	0
  9409  10F2  34A0               	retlw	160
  9410  10F3  3400               	retlw	0
  9411  10F4  34A3               	retlw	163
  9412  10F5  3400               	retlw	0
  9413  10F6  34A7               	retlw	167
  9414  10F7  3400               	retlw	0
  9415  10F8  34AA               	retlw	170
  9416  10F9  3400               	retlw	0
  9417  10FA  34AE               	retlw	174
  9418  10FB  3400               	retlw	0
  9419  10FC  34B1               	retlw	177
  9420  10FD  3400               	retlw	0
  9421  10FE  34B5               	retlw	181
  9422  10FF  3400               	retlw	0
  9423  1100  34B8               	retlw	184
  9424  1101  3400               	retlw	0
  9425  1102  34BC               	retlw	188
  9426  1103  3400               	retlw	0
  9427  1104  34BF               	retlw	191
  9428  1105  3400               	retlw	0
  9429  1106  34C3               	retlw	195
  9430  1107  3400               	retlw	0
  9431  1108  34C7               	retlw	199
  9432  1109  3400               	retlw	0
  9433  110A  34CA               	retlw	202
  9434  110B  3400               	retlw	0
  9435  110C  34CE               	retlw	206
  9436  110D  3400               	retlw	0
  9437  110E  34D2               	retlw	210
  9438  110F  3400               	retlw	0
  9439  1110  34D6               	retlw	214
  9440  1111  3400               	retlw	0
  9441  1112  34DA               	retlw	218
  9442  1113  3400               	retlw	0
  9443  1114  34DE               	retlw	222
  9444  1115  3400               	retlw	0
  9445  1116  34E2               	retlw	226
  9446  1117  3400               	retlw	0
  9447  1118  34E6               	retlw	230
  9448  1119  3400               	retlw	0
  9449  111A  34EA               	retlw	234
  9450  111B  3400               	retlw	0
  9451  111C  34EE               	retlw	238
  9452  111D  3400               	retlw	0
  9453  111E  34F3               	retlw	243
  9454  111F  3400               	retlw	0
  9455  1120  34F7               	retlw	247
  9456  1121  3400               	retlw	0
  9457  1122  34FB               	retlw	251
  9458  1123  3400               	retlw	0
  9459  1124  34FF               	retlw	255
  9460  1125  3400               	retlw	0
  9461  1126  3404               	retlw	4
  9462  1127  3401               	retlw	1
  9463  1128  3408               	retlw	8
  9464  1129  3401               	retlw	1
  9465  112A  340D               	retlw	13
  9466  112B  3401               	retlw	1
  9467  112C  3411               	retlw	17
  9468  112D  3401               	retlw	1
  9469  112E  3416               	retlw	22
  9470  112F  3401               	retlw	1
  9471  1130  341A               	retlw	26
  9472  1131  3401               	retlw	1
  9473  1132  341F               	retlw	31
  9474  1133  3401               	retlw	1
  9475  1134  3424               	retlw	36
  9476  1135  3401               	retlw	1
  9477  1136  3428               	retlw	40
  9478  1137  3401               	retlw	1
  9479  1138  342D               	retlw	45
  9480  1139  3401               	retlw	1
  9481  113A  3432               	retlw	50
  9482  113B  3401               	retlw	1
  9483  113C  3437               	retlw	55
  9484  113D  3401               	retlw	1
  9485  113E  343C               	retlw	60
  9486  113F  3401               	retlw	1
  9487  1140  3441               	retlw	65
  9488  1141  3401               	retlw	1
  9489  1142  3446               	retlw	70
  9490  1143  3401               	retlw	1
  9491  1144  344B               	retlw	75
  9492  1145  3401               	retlw	1
  9493  1146  3450               	retlw	80
  9494  1147  3401               	retlw	1
  9495  1148  3455               	retlw	85
  9496  1149  3401               	retlw	1
  9497  114A  345A               	retlw	90
  9498  114B  3401               	retlw	1
  9499  114C  345F               	retlw	95
  9500  114D  3401               	retlw	1
  9501  114E  3465               	retlw	101
  9502  114F  3401               	retlw	1
  9503  1150  346A               	retlw	106
  9504  1151  3401               	retlw	1
  9505  1152  346F               	retlw	111
  9506  1153  3401               	retlw	1
  9507  1154  3475               	retlw	117
  9508  1155  3401               	retlw	1
  9509  1156  347A               	retlw	122
  9510  1157  3401               	retlw	1
  9511  1158  3480               	retlw	128
  9512  1159  3401               	retlw	1
  9513  115A  3486               	retlw	134
  9514  115B  3401               	retlw	1
  9515  115C  348B               	retlw	139
  9516  115D  3401               	retlw	1
  9517  115E  3491               	retlw	145
  9518  115F  3401               	retlw	1
  9519  1160  3497               	retlw	151
  9520  1161  3401               	retlw	1
  9521  1162  349C               	retlw	156
  9522  1163  3401               	retlw	1
  9523  1164  34A2               	retlw	162
  9524  1165  3401               	retlw	1
  9525  1166  34A8               	retlw	168
  9526  1167  3401               	retlw	1
  9527  1168  34AE               	retlw	174
  9528  1169  3401               	retlw	1
  9529  116A  34B4               	retlw	180
  9530  116B  3401               	retlw	1
  9531  116C  34BA               	retlw	186
  9532  116D  3401               	retlw	1
  9533  116E  34C0               	retlw	192
  9534  116F  3401               	retlw	1
  9535  1170  34C6               	retlw	198
  9536  1171  3401               	retlw	1
  9537  1172  34CC               	retlw	204
  9538  1173  3401               	retlw	1
  9539  1174  34D2               	retlw	210
  9540  1175  3401               	retlw	1
  9541  1176  34D9               	retlw	217
  9542  1177  3401               	retlw	1
  9543  1178  34DF               	retlw	223
  9544  1179  3401               	retlw	1
  9545  117A  34E5               	retlw	229
  9546  117B  3401               	retlw	1
  9547  117C  34EC               	retlw	236
  9548  117D  3401               	retlw	1
  9549  117E  34F2               	retlw	242
  9550  117F  3401               	retlw	1
  9551  1180  34F9               	retlw	249
  9552  1181  3401               	retlw	1
  9553  1182  34FF               	retlw	255
  9554  1183  3401               	retlw	1
  9555  1184  3406               	retlw	6
  9556  1185  3402               	retlw	2
  9557  1186  340D               	retlw	13
  9558  1187  3402               	retlw	2
  9559  1188  3413               	retlw	19
  9560  1189  3402               	retlw	2
  9561  118A  341A               	retlw	26
  9562  118B  3402               	retlw	2
  9563  118C  3421               	retlw	33
  9564  118D  3402               	retlw	2
  9565  118E  3428               	retlw	40
  9566  118F  3402               	retlw	2
  9567  1190  342F               	retlw	47
  9568  1191  3402               	retlw	2
  9569  1192  3436               	retlw	54
  9570  1193  3402               	retlw	2
  9571  1194  343D               	retlw	61
  9572  1195  3402               	retlw	2
  9573  1196  3444               	retlw	68
  9574  1197  3402               	retlw	2
  9575  1198  344B               	retlw	75
  9576  1199  3402               	retlw	2
  9577  119A  3452               	retlw	82
  9578  119B  3402               	retlw	2
  9579  119C  345A               	retlw	90
  9580  119D  3402               	retlw	2
  9581  119E  3461               	retlw	97
  9582  119F  3402               	retlw	2
  9583  11A0  3468               	retlw	104
  9584  11A1  3402               	retlw	2
  9585  11A2  3470               	retlw	112
  9586  11A3  3402               	retlw	2
  9587  11A4  3477               	retlw	119
  9588  11A5  3402               	retlw	2
  9589  11A6  347F               	retlw	127
  9590  11A7  3402               	retlw	2
  9591  11A8  3486               	retlw	134
  9592  11A9  3402               	retlw	2
  9593  11AA  348E               	retlw	142
  9594  11AB  3402               	retlw	2
  9595  11AC  3495               	retlw	149
  9596  11AD  3402               	retlw	2
  9597  11AE  349D               	retlw	157
  9598  11AF  3402               	retlw	2
  9599  11B0  34A5               	retlw	165
  9600  11B1  3402               	retlw	2
  9601  11B2  34AD               	retlw	173
  9602  11B3  3402               	retlw	2
  9603  11B4  34B5               	retlw	181
  9604  11B5  3402               	retlw	2
  9605  11B6  34BD               	retlw	189
  9606  11B7  3402               	retlw	2
  9607  11B8  34C5               	retlw	197
  9608  11B9  3402               	retlw	2
  9609  11BA  34CD               	retlw	205
  9610  11BB  3402               	retlw	2
  9611  11BC  34D5               	retlw	213
  9612  11BD  3402               	retlw	2
  9613  11BE  34DD               	retlw	221
  9614  11BF  3402               	retlw	2
  9615  11C0  34E5               	retlw	229
  9616  11C1  3402               	retlw	2
  9617  11C2  34ED               	retlw	237
  9618  11C3  3402               	retlw	2
  9619  11C4  34F6               	retlw	246
  9620  11C5  3402               	retlw	2
  9621  11C6  34FE               	retlw	254
  9622  11C7  3402               	retlw	2
  9623  11C8  3406               	retlw	6
  9624  11C9  3403               	retlw	3
  9625  11CA  340F               	retlw	15
  9626  11CB  3403               	retlw	3
  9627  11CC  3418               	retlw	24
  9628  11CD  3403               	retlw	3
  9629  11CE  3420               	retlw	32
  9630  11CF  3403               	retlw	3
  9631  11D0  3429               	retlw	41
  9632  11D1  3403               	retlw	3
  9633  11D2  3431               	retlw	49
  9634  11D3  3403               	retlw	3
  9635  11D4  343A               	retlw	58
  9636  11D5  3403               	retlw	3
  9637  11D6  3443               	retlw	67
  9638  11D7  3403               	retlw	3
  9639  11D8  344C               	retlw	76
  9640  11D9  3403               	retlw	3
  9641  11DA  3455               	retlw	85
  9642  11DB  3403               	retlw	3
  9643  11DC  345E               	retlw	94
  9644  11DD  3403               	retlw	3
  9645  11DE  3467               	retlw	103
  9646  11DF  3403               	retlw	3
  9647  11E0  3470               	retlw	112
  9648  11E1  3403               	retlw	3
  9649  11E2  3479               	retlw	121
  9650  11E3  3403               	retlw	3
  9651  11E4  3482               	retlw	130
  9652  11E5  3403               	retlw	3
  9653  11E6  348C               	retlw	140
  9654  11E7  3403               	retlw	3
  9655  11E8  3495               	retlw	149
  9656  11E9  3403               	retlw	3
  9657  11EA  349E               	retlw	158
  9658  11EB  3403               	retlw	3
  9659  11EC  34A8               	retlw	168
  9660  11ED  3403               	retlw	3
  9661  11EE  34B1               	retlw	177
  9662  11EF  3403               	retlw	3
  9663  11F0  34BB               	retlw	187
  9664  11F1  3403               	retlw	3
  9665  11F2  34C5               	retlw	197
  9666  11F3  3403               	retlw	3
  9667  11F4  34CE               	retlw	206
  9668  11F5  3403               	retlw	3
  9669  11F6  34D8               	retlw	216
  9670  11F7  3403               	retlw	3
  9671  11F8  34E2               	retlw	226
  9672  11F9  3403               	retlw	3
  9673  11FA  34EC               	retlw	236
  9674  11FB  3403               	retlw	3
  9675  11FC  34F6               	retlw	246
  9676  11FD  3403               	retlw	3
  9677  11FE  34FF               	retlw	255
  9678  11FF  3403               	retlw	3
  9679  1200                     __end_of_gamma_table_256x1k:	
  9680                           
  9681                           	psect	stringtext2
  9682  2000                     __pstringtext2:	
  9683  2000                     _dpowers:	
  9684  2000  3401               	retlw	1
  9685  2001  3400               	retlw	0
  9686  2002  340A               	retlw	10
  9687  2003  3400               	retlw	0
  9688  2004  3464               	retlw	100
  9689  2005  3400               	retlw	0
  9690  2006  34E8               	retlw	232
  9691  2007  3403               	retlw	3
  9692  2008  3410               	retlw	16
  9693  2009  3427               	retlw	39
  9694  200A                     __end_of_dpowers:	
  9695  000D                     _PORTBbits	set	13
  9696  000C                     _PORTAbits	set	12
  9697  000E                     _PORTCbits	set	14
  9698  000B                     _INTCONbits	set	11
  9699  0017                     _T0CON0bits	set	23
  9700  0010                     _PIR0bits	set	16
  9701  0015                     _TMR0L	set	21
  9702  0016                     _TMR0H	set	22
  9703  0018                     _T0CON1	set	24
  9704  0017                     _T0CON0	set	23
  9705  0012                     _PIR2bits	set	18
  9706  001F                     _T2CONbits	set	31
  9707  0011                     _PIR1bits	set	17
  9708  001D                     _TMR2	set	29
  9709  001E                     _PR2	set	30
  9710  001F                     _T2CON	set	31
  9711  005F                     _GIE	set	95
  9712  0090                     _PIE0bits	set	144
  9713  008E                     _TRISC	set	142
  9714  008D                     _TRISB	set	141
  9715  008C                     _TRISA	set	140
  9716  0097                     _WDTCON	set	151
  9717  010E                     _LATCbits	set	270
  9718  010D                     _LATBbits	set	269
  9719  010E                     _LATC	set	270
  9720  010D                     _LATB	set	269
  9721  010C                     _LATA	set	268
  9722  018C                     _ANSELA	set	396
  9723  018D                     _ANSELB	set	397
  9724  018E                     _ANSELC	set	398
  9725  020E                     _WPUC	set	526
  9726  020C                     _WPUA	set	524
  9727  020D                     _WPUB	set	525
  9728  0214                     _SSP1STATbits	set	532
  9729  0211                     _SSP1BUF	set	529
  9730  0215                     _SSP1CON1bits	set	533
  9731  0212                     _SSP1ADD	set	530
  9732  0215                     _SSP1CON1	set	533
  9733  0214                     _SSP1STAT	set	532
  9734  0297                     _CCP2CONbits	set	663
  9735  0295                     _CCPR2L	set	661
  9736  0296                     _CCPR2H	set	662
  9737  0297                     _CCP2CON	set	663
  9738  028E                     _ODCONC	set	654
  9739  028D                     _ODCONB	set	653
  9740  028C                     _ODCONA	set	652
  9741  0293                     _CCP1CONbits	set	659
  9742  029F                     _CCPTMRSbits	set	671
  9743  0291                     _CCPR1L	set	657
  9744  0292                     _CCPR1H	set	658
  9745  0293                     _CCP1CON	set	659
  9746  0417                     _T4CONbits	set	1047
  9747  0415                     _TMR4	set	1045
  9748  0416                     _PR4	set	1046
  9749  0417                     _T4CON	set	1047
  9750  061A                     _PWM6DCL	set	1562
  9751  061B                     _PWM6DCH	set	1563
  9752  061C                     _PWM6CON	set	1564
  9753  061F                     _PWMTMRSbits	set	1567
  9754  0617                     _PWM5DCL	set	1559
  9755  0618                     _PWM5DCH	set	1560
  9756  0619                     _PWM5CON	set	1561
  9757  0896                     _NVMCON2	set	2198
  9758  0893                     _NVMDATL	set	2195
  9759  0894                     _NVMDATH	set	2196
  9760  0895                     _NVMCON1bits	set	2197
  9761  0892                     _NVMADRH	set	2194
  9762  0891                     _NVMADRL	set	2193
  9763  091E                     _OSCTUNE	set	2334
  9764  091F                     _OSCFRQ	set	2335
  9765  091D                     _OSCEN	set	2333
  9766  091B                     _OSCCON3	set	2331
  9767  0919                     _OSCCON1	set	2329
  9768  48E0                     _PLLR	set	18656
  9769  0E20                     _SSP1CLKPPSbits	set	3616
  9770  0E21                     _SSP1DATPPSbits	set	3617
  9771  0E0F                     _PPSLOCKbits	set	3599
  9772  0E0F                     _PPSLOCK	set	3599
  9773  0EA2                     _RC2PPSbits	set	3746
  9774  0E9E                     _RB6PPSbits	set	3742
  9775  0EA3                     _RC3PPSbits	set	3747
  9776  0EA0                     _RC0PPSbits	set	3744
  9777  0EA4                     _RC4PPSbits	set	3748
  9778  0EA1                     _RC1PPSbits	set	3745
  9779  200A                     STR_19:	
  9780  200A  344E               	retlw	78	;'N'
  9781  200B  346F               	retlw	111	;'o'
  9782  200C  3474               	retlw	116	;'t'
  9783  200D  3468               	retlw	104	;'h'
  9784  200E  3469               	retlw	105	;'i'
  9785  200F  346E               	retlw	110	;'n'
  9786  2010  3467               	retlw	103	;'g'
  9787  2011  3420               	retlw	32	;' '
  9788  2012  3474               	retlw	116	;'t'
  9789  2013  346F               	retlw	111	;'o'
  9790  2014  3420               	retlw	32	;' '
  9791  2015  3473               	retlw	115	;'s'
  9792  2016  3465               	retlw	101	;'e'
  9793  2017  3465               	retlw	101	;'e'
  9794  2018  3420               	retlw	32	;' '
  9795  2019  3468               	retlw	104	;'h'
  9796  201A  3465               	retlw	101	;'e'
  9797  201B  3472               	retlw	114	;'r'
  9798  201C  3465               	retlw	101	;'e'
  9799  201D  3420               	retlw	32	;' '
  9800  201E  3420               	retlw	32	;' '
  9801  201F  346D               	retlw	109	;'m'
  9802  2020  346F               	retlw	111	;'o'
  9803  2021  3476               	retlw	118	;'v'
  9804  2022  3465               	retlw	101	;'e'
  9805  2023  3420               	retlw	32	;' '
  9806  2024  3461               	retlw	97	;'a'
  9807  2025  346C               	retlw	108	;'l'
  9808  2026  346F               	retlw	111	;'o'
  9809  2027  346E               	retlw	110	;'n'
  9810  2028  3467               	retlw	103	;'g'
  9811  2029  342E               	retlw	46	;'.'
  9812  202A  342E               	retlw	46	;'.'
  9813  202B  342E               	retlw	46	;'.'
  9814  202C  3420               	retlw	32	;' '
  9815  202D  3420               	retlw	32	;' '
  9816  202E  3420               	retlw	32	;' '
  9817  202F  3420               	retlw	32	;' '
  9818  2030  3400               	retlw	0
  9819                           
  9820                           	psect	stringtext3
  9821  2031                     __pstringtext3:	
  9822  2031                     STR_18:	
  9823  2031  3461               	retlw	97	;'a'
  9824  2032  346C               	retlw	108	;'l'
  9825  2033  346C               	retlw	108	;'l'
  9826  2034  3420               	retlw	32	;' '
  9827  2035  3479               	retlw	121	;'y'
  9828  2036  346F               	retlw	111	;'o'
  9829  2037  3475               	retlw	117	;'u'
  9830  2038  3472               	retlw	114	;'r'
  9831  2039  3420               	retlw	32	;' '
  9832  203A  3462               	retlw	98	;'b'
  9833  203B  3461               	retlw	97	;'a'
  9834  203C  3473               	retlw	115	;'s'
  9835  203D  3465               	retlw	101	;'e'
  9836  203E  3420               	retlw	32	;' '
  9837  203F  3461               	retlw	97	;'a'
  9838  2040  3472               	retlw	114	;'r'
  9839  2041  3465               	retlw	101	;'e'
  9840  2042  3420               	retlw	32	;' '
  9841  2043  3462               	retlw	98	;'b'
  9842  2044  3465               	retlw	101	;'e'
  9843  2045  346C               	retlw	108	;'l'
  9844  2046  346F               	retlw	111	;'o'
  9845  2047  346E               	retlw	110	;'n'
  9846  2048  3467               	retlw	103	;'g'
  9847  2049  3420               	retlw	32	;' '
  9848  204A  3474               	retlw	116	;'t'
  9849  204B  346F               	retlw	111	;'o'
  9850  204C  3420               	retlw	32	;' '
  9851  204D  3475               	retlw	117	;'u'
  9852  204E  3473               	retlw	115	;'s'
  9853  204F  3420               	retlw	32	;' '
  9854  2050  3420               	retlw	32	;' '
  9855  2051  3420               	retlw	32	;' '
  9856  2052  3420               	retlw	32	;' '
  9857  2053  3420               	retlw	32	;' '
  9858  2054  3400               	retlw	0
  9859                           
  9860                           	psect	stringtext4
  9861  2055                     __pstringtext4:	
  9862  2055                     STR_17:	
  9863  2055  3449               	retlw	73	;'I'
  9864  2056  3420               	retlw	32	;' '
  9865  2057  3461               	retlw	97	;'a'
  9866  2058  346D               	retlw	109	;'m'
  9867  2059  3420               	retlw	32	;' '
  9868  205A  3461               	retlw	97	;'a'
  9869  205B  3420               	retlw	32	;' '
  9870  205C  3462               	retlw	98	;'b'
  9871  205D  3461               	retlw	97	;'a'
  9872  205E  3464               	retlw	100	;'d'
  9873  205F  3467               	retlw	103	;'g'
  9874  2060  3465               	retlw	101	;'e'
  9875  2061  342C               	retlw	44	;','
  9876  2062  3420               	retlw	32	;' '
  9877  2063  3461               	retlw	97	;'a'
  9878  2064  346E               	retlw	110	;'n'
  9879  2065  3464               	retlw	100	;'d'
  9880  2066  3420               	retlw	32	;' '
  9881  2067  3474               	retlw	116	;'t'
  9882  2068  3468               	retlw	104	;'h'
  9883  2069  3461               	retlw	97	;'a'
  9884  206A  3474               	retlw	116	;'t'
  9885  206B  3427               	retlw	39	;'''
  9886  206C  3473               	retlw	115	;'s'
  9887  206D  3420               	retlw	32	;' '
  9888  206E  3469               	retlw	105	;'i'
  9889  206F  3474               	retlw	116	;'t'
  9890  2070  3420               	retlw	32	;' '
  9891  2071  3420               	retlw	32	;' '
  9892  2072  3420               	retlw	32	;' '
  9893  2073  3420               	retlw	32	;' '
  9894  2074  3420               	retlw	32	;' '
  9895  2075  3420               	retlw	32	;' '
  9896  2076  3400               	retlw	0
  9897                           
  9898                           	psect	stringtext5
  9899  2077                     __pstringtext5:	
  9900  2077                     STR_16:	
  9901  2077  3448               	retlw	72	;'H'
  9902  2078  3454               	retlw	84	;'T'
  9903  2079  3454               	retlw	84	;'T'
  9904  207A  3450               	retlw	80	;'P'
  9905  207B  3420               	retlw	32	;' '
  9906  207C  3434               	retlw	52	;'4'
  9907  207D  3431               	retlw	49	;'1'
  9908  207E  3438               	retlw	56	;'8'
  9909  207F  3420               	retlw	32	;' '
  9910  2080  3449               	retlw	73	;'I'
  9911  2081  3427               	retlw	39	;'''
  9912  2082  346D               	retlw	109	;'m'
  9913  2083  3420               	retlw	32	;' '
  9914  2084  3461               	retlw	97	;'a'
  9915  2085  3420               	retlw	32	;' '
  9916  2086  3474               	retlw	116	;'t'
  9917  2087  3465               	retlw	101	;'e'
  9918  2088  3461               	retlw	97	;'a'
  9919  2089  3470               	retlw	112	;'p'
  9920  208A  346F               	retlw	111	;'o'
  9921  208B  3474               	retlw	116	;'t'
  9922  208C  3420               	retlw	32	;' '
  9923  208D  3420               	retlw	32	;' '
  9924  208E  3420               	retlw	32	;' '
  9925  208F  3420               	retlw	32	;' '
  9926  2090  3420               	retlw	32	;' '
  9927  2091  3420               	retlw	32	;' '
  9928  2092  3400               	retlw	0
  9929                           
  9930                           	psect	stringtext6
  9931  2800                     __pstringtext6:	
  9932  2800                     STR_15:	
  9933  2800  3477               	retlw	119	;'w'
  9934  2801  3469               	retlw	105	;'i'
  9935  2802  346C               	retlw	108	;'l'
  9936  2803  346C               	retlw	108	;'l'
  9937  2804  3420               	retlw	32	;' '
  9938  2805  3448               	retlw	72	;'H'
  9939  2806  3441               	retlw	65	;'A'
  9940  2807  3443               	retlw	67	;'C'
  9941  2808  344B               	retlw	75	;'K'
  9942  2809  3420               	retlw	32	;' '
  9943  280A  3466               	retlw	102	;'f'
  9944  280B  346F               	retlw	111	;'o'
  9945  280C  3472               	retlw	114	;'r'
  9946  280D  3420               	retlw	32	;' '
  9947  280E  3441               	retlw	65	;'A'
  9948  280F  342F               	retlw	47	;'/'
  9949  2810  3443               	retlw	67	;'C'
  9950  2811  3420               	retlw	32	;' '
  9951  2812  3420               	retlw	32	;' '
  9952  2813  3420               	retlw	32	;' '
  9953  2814  3400               	retlw	0
  9954                           
  9955                           	psect	stringtext7
  9956  2815                     __pstringtext7:	
  9957  2815                     STR_14:	
  9958  2815  3468               	retlw	104	;'h'
  9959  2816  3461               	retlw	97	;'a'
  9960  2817  3463               	retlw	99	;'c'
  9961  2818  346B               	retlw	107	;'k'
  9962  2819  3420               	retlw	32	;' '
  9963  281A  3474               	retlw	116	;'t'
  9964  281B  3468               	retlw	104	;'h'
  9965  281C  3465               	retlw	101	;'e'
  9966  281D  3420               	retlw	32	;' '
  9967  281E  3450               	retlw	80	;'P'
  9968  281F  344C               	retlw	76	;'L'
  9969  2820  3441               	retlw	65	;'A'
  9970  2821  344E               	retlw	78	;'N'
  9971  2822  3445               	retlw	69	;'E'
  9972  2823  3454               	retlw	84	;'T'
  9973  2824  3420               	retlw	32	;' '
  9974  2825  3420               	retlw	32	;' '
  9975  2826  3420               	retlw	32	;' '
  9976  2827  3400               	retlw	0
  9977                           
  9978                           	psect	stringtext8
  9979  2828                     __pstringtext8:	
  9980  2828                     STR_9:	
  9981  2828  3405               	retlw	5
  9982  2829  3407               	retlw	7
  9983  282A  3407               	retlw	7
  9984  282B  3408               	retlw	8
  9985  282C  342D               	retlw	45	;'-'
  9986  282D  342D               	retlw	45	;'-'
  9987  282E  3420               	retlw	32	;' '
  9988  282F  3420               	retlw	32	;' '
  9989  2830  342D               	retlw	45	;'-'
  9990  2831  342D               	retlw	45	;'-'
  9991  2832  3409               	retlw	9
  9992  2833  3407               	retlw	7
  9993  2834  3407               	retlw	7
  9994  2835  3406               	retlw	6
  9995  2836  3420               	retlw	32	;' '
  9996  2837  340B               	retlw	11
  9997  2838  3420               	retlw	32	;' '
  9998  2839  3400               	retlw	0
  9999                           
 10000                           	psect	stringtext9
 10001  283A                     __pstringtext9:	
 10002  283A                     STR_22:	
 10003  283A  3455               	retlw	85	;'U'
 10004  283B  344E               	retlw	78	;'N'
 10005  283C  344C               	retlw	76	;'L'
 10006  283D  344F               	retlw	79	;'O'
 10007  283E  3443               	retlw	67	;'C'
 10008  283F  344B               	retlw	75	;'K'
 10009  2840  3449               	retlw	73	;'I'
 10010  2841  344E               	retlw	78	;'N'
 10011  2842  3447               	retlw	71	;'G'
 10012  2843  342E               	retlw	46	;'.'
 10013  2844  342E               	retlw	46	;'.'
 10014  2845  342E               	retlw	46	;'.'
 10015  2846  3400               	retlw	0
 10016                           
 10017                           	psect	stringtext10
 10018  2847                     __pstringtext10:	
 10019  2847                     STR_6:	
 10020  2847  3450               	retlw	80	;'P'
 10021  2848  3441               	retlw	65	;'A'
 10022  2849  3453               	retlw	83	;'S'
 10023  284A  3453               	retlw	83	;'S'
 10024  284B  3457               	retlw	87	;'W'
 10025  284C  344F               	retlw	79	;'O'
 10026  284D  3452               	retlw	82	;'R'
 10027  284E  3444               	retlw	68	;'D'
 10028  284F  3420               	retlw	32	;' '
 10029  2850  3400               	retlw	0
 10030                           
 10031                           	psect	stringtext11
 10032  2851                     __pstringtext11:	
 10033  2851                     STR_11:	
 10034  2851  344E               	retlw	78	;'N'
 10035  2852  3455               	retlw	85	;'U'
 10036  2853  344C               	retlw	76	;'L'
 10037  2854  344C               	retlw	76	;'L'
 10038  2855  3449               	retlw	73	;'I'
 10039  2856  3446               	retlw	70	;'F'
 10040  2857  3459               	retlw	89	;'Y'
 10041  2858  3420               	retlw	32	;' '
 10042  2859  3400               	retlw	0
 10043                           
 10044                           	psect	stringtext12
 10045  285A                     __pstringtext12:	
 10046  285A                     STR_12:	
 10047  285A  3444               	retlw	68	;'D'
 10048  285B  3445               	retlw	69	;'E'
 10049  285C  3446               	retlw	70	;'F'
 10050  285D  3443               	retlw	67	;'C'
 10051  285E  344F               	retlw	79	;'O'
 10052  285F  344E               	retlw	78	;'N'
 10053  2860  3420               	retlw	32	;' '
 10054  2861  3400               	retlw	0
 10055                           
 10056                           	psect	stringtext13
 10057  2862                     __pstringtext13:	
 10058  2862                     STR_13:	
 10059  2862  3448               	retlw	72	;'H'
 10060  2863  3441               	retlw	65	;'A'
 10061  2864  3458               	retlw	88	;'X'
 10062  2865  3420               	retlw	32	;' '
 10063  2866  3420               	retlw	32	;' '
 10064  2867  3400               	retlw	0
 10065                           
 10066                           	psect	stringtext14
 10067  2868                     __pstringtext14:	
 10068  2868                     STR_7:	
 10069  2868  3445               	retlw	69	;'E'
 10070  2869  3458               	retlw	88	;'X'
 10071  286A  3449               	retlw	73	;'I'
 10072  286B  3454               	retlw	84	;'T'
 10073  286C  3420               	retlw	32	;' '
 10074  286D  3400               	retlw	0
 10075                           
 10076                           	psect	stringtext15
 10077  286E                     __pstringtext15:	
 10078  286E                     STR_5:	
 10079  286E  3453               	retlw	83	;'S'
 10080  286F  344C               	retlw	76	;'L'
 10081  2870  344F               	retlw	79	;'O'
 10082  2871  3454               	retlw	84	;'T'
 10083  2872  3420               	retlw	32	;' '
 10084  2873  3400               	retlw	0
 10085                           
 10086                           	psect	stringtext16
 10087  2874                     __pstringtext16:	
 10088  2874                     STR_26:	
 10089  2874  3424               	retlw	36	;'$'
 10090  2875  3424               	retlw	36	;'$'
 10091  2876  3424               	retlw	36	;'$'
 10092  2877  3420               	retlw	32	;' '
 10093  2878  3400               	retlw	0
 10094                           
 10095                           	psect	stringtext17
 10096  2879                     __pstringtext17:	
 10097  2879                     STR_25:	
 10098  2879  344C               	retlw	76	;'L'
 10099  287A  344F               	retlw	79	;'O'
 10100  287B  3443               	retlw	67	;'C'
 10101  287C  344B               	retlw	75	;'K'
 10102  287D  3400               	retlw	0
 10103                           
 10104                           	psect	stringtext18
 10105  287E                     __pstringtext18:	
 10106  287E                     STR_24:	
 10107  287E  344F               	retlw	79	;'O'
 10108  287F  3450               	retlw	80	;'P'
 10109  2880  3445               	retlw	69	;'E'
 10110  2881  344E               	retlw	78	;'N'
 10111  2882  3400               	retlw	0
 10112                           
 10113                           	psect	stringtext19
 10114  2883                     __pstringtext19:	
 10115  2883                     STR_20:	
 10116  2883  3450               	retlw	80	;'P'
 10117  2884  3445               	retlw	69	;'E'
 10118  2885  3457               	retlw	87	;'W'
 10119  2886  3420               	retlw	32	;' '
 10120  2887  3400               	retlw	0
 10121                           
 10122                           	psect	stringtext20
 10123  2888                     __pstringtext20:	
 10124  2888                     STR_8:	
 10125  2888  344E               	retlw	78	;'N'
 10126  2889  3455               	retlw	85	;'U'
 10127  288A  344C               	retlw	76	;'L'
 10128  288B  344C               	retlw	76	;'L'
 10129  288C  3400               	retlw	0
 10130                           
 10131                           	psect	stringtext21
 10132  288D                     __pstringtext21:	
 10133  288D                     STR_4:	
 10134  288D  344D               	retlw	77	;'M'
 10135  288E  3445               	retlw	69	;'E'
 10136  288F  344E               	retlw	78	;'N'
 10137  2890  3455               	retlw	85	;'U'
 10138  2891  3400               	retlw	0
 10139                           
 10140                           	psect	stringtext22
 10141  2892                     __pstringtext22:	
 10142  2892                     STR_2:	
 10143  2892  3444               	retlw	68	;'D'
 10144  2893  344F               	retlw	79	;'O'
 10145  2894  3457               	retlw	87	;'W'
 10146  2895  344E               	retlw	78	;'N'
 10147  2896  3400               	retlw	0
 10148                           
 10149                           	psect	stringtext23
 10150  2897                     __pstringtext23:	
 10151  2897                     STR_1:	
 10152  2897  3420               	retlw	32	;' '
 10153  2898  3420               	retlw	32	;' '
 10154  2899  3455               	retlw	85	;'U'
 10155  289A  3450               	retlw	80	;'P'
 10156  289B  3400               	retlw	0
 10157                           
 10158                           	psect	stringtext24
 10159  289C                     __pstringtext24:	
 10160  289C                     STR_21:	
 10161  289C  3425               	retlw	37	;'%'
 10162  289D  3434               	retlw	52	;'4'
 10163  289E  3464               	retlw	100	;'d'
 10164  289F  3400               	retlw	0
 10165                           
 10166                           	psect	stringtext25
 10167  0000                     __pstringtext25:	
 10168  2072                     
 10169                           ; #config settings
 10170  0000                     
 10171                           	psect	cinit
 10172  0018                     start_initialization:	
 10173  0018                     __initialization:		;BIGRAM
 10174                           
 10175                           ; Initialize objects allocated to BIGRAM
 10176  0018  3000               	movlw	low __pidataBIGRAM
 10177  0019  0084               	movwf	4
 10178  001A  3097               	movlw	(high __pidataBIGRAM)| (0+128)
 10179  001B  0085               	movwf	5
 10180  001C  30F0               	movlw	low (0+9968)
 10181  001D  0086               	movwf	6
 10182  001E  3026               	movlw	high (0+9968)
 10183  001F  0087               	movwf	7
 10184  0020  3001               	movlw	1
 10185  0021  00FF               	movwf	btemp+1
 10186  0022  3000               	movlw	0
 10187  0023  31A6  26CC  3180   	fcall	init_ram
 10188                           
 10189                           ; Initialize objects allocated to BANK1
 10190  0026  3067               	movlw	low __pidataBANK1
 10191  0027  0084               	movwf	4
 10192  0028  30A6               	movlw	(high __pidataBANK1)| (0+128)
 10193  0029  0085               	movwf	5
 10194  002A  30DC               	movlw	low __pdataBANK1
 10195  002B  0086               	movwf	6
 10196  002C  3000               	movlw	high __pdataBANK1
 10197  002D  0087               	movwf	7
 10198  002E  3000               	movlw	0
 10199  002F  00FF               	movwf	btemp+1
 10200  0030  300A               	movlw	10
 10201  0031  31A6  26CC  3180   	fcall	init_ram
 10202                           
 10203                           ; Initialize objects allocated to BANK2
 10204  0034  307F               	movlw	low __pidataBANK2
 10205  0035  0084               	movwf	4
 10206  0036  30A7               	movlw	(high __pidataBANK2)| (0+128)
 10207  0037  0085               	movwf	5
 10208  0038  3059               	movlw	low __pdataBANK2
 10209  0039  0086               	movwf	6
 10210  003A  3001               	movlw	high __pdataBANK2
 10211  003B  0087               	movwf	7
 10212  003C  3000               	movlw	0
 10213  003D  00FF               	movwf	btemp+1
 10214  003E  3012               	movlw	18
 10215  003F  31A6  26CC  3180   	fcall	init_ram
 10216                           
 10217                           ; Initialize objects allocated to BANK3
 10218  0042  30FD               	movlw	low __pidataBANK3
 10219  0043  0084               	movwf	4
 10220  0044  309C               	movlw	(high __pidataBANK3)| (0+128)
 10221  0045  0085               	movwf	5
 10222  0046  30A0               	movlw	low __pdataBANK3
 10223  0047  0086               	movwf	6
 10224  0048  3001               	movlw	high __pdataBANK3
 10225  0049  0087               	movwf	7
 10226  004A  3000               	movlw	0
 10227  004B  00FF               	movwf	btemp+1
 10228  004C  3043               	movlw	67
 10229  004D  31A6  26CC  3180   	fcall	init_ram
 10230                           
 10231                           ; Initialize objects allocated to BANK5
 10232  0050  3006               	movlw	low __pidataBANK5
 10233  0051  0084               	movwf	4
 10234  0052  309B               	movlw	(high __pidataBANK5)| (0+128)
 10235  0053  0085               	movwf	5
 10236  0054  30A0               	movlw	low __pdataBANK5
 10237  0055  0086               	movwf	6
 10238  0056  3002               	movlw	high __pdataBANK5
 10239  0057  0087               	movwf	7
 10240  0058  3000               	movlw	0
 10241  0059  00FF               	movwf	btemp+1
 10242  005A  3038               	movlw	56
 10243  005B  31A6  26CC  3180   	fcall	init_ram
 10244                           
 10245                           ; Initialize objects allocated to BANK6
 10246  005E  30CE               	movlw	low __pidataBANK6
 10247  005F  0084               	movwf	4
 10248  0060  309A               	movlw	(high __pidataBANK6)| (0+128)
 10249  0061  0085               	movwf	5
 10250  0062  3020               	movlw	low __pdataBANK6
 10251  0063  0086               	movwf	6
 10252  0064  3003               	movlw	high __pdataBANK6
 10253  0065  0087               	movwf	7
 10254  0066  3000               	movlw	0
 10255  0067  00FF               	movwf	btemp+1
 10256  0068  3038               	movlw	56
 10257  0069  31A6  26CC  3180   	fcall	init_ram
 10258                           
 10259                           ; Clear objects allocated to COMMON
 10260  006C  01FC               	clrf	__pbssCOMMON& (0+127)
 10261                           
 10262                           ; Clear objects allocated to BANK1
 10263  006D  30A0               	movlw	low __pbssBANK1
 10264  006E  0084               	movwf	4
 10265  006F  3000               	movlw	high __pbssBANK1
 10266  0070  0085               	movwf	5
 10267  0071  303C               	movlw	60
 10268  0072  00FE               	movwf	btemp
 10269  0073  3000               	movlw	0
 10270  0074  00FF               	movwf	btemp+1
 10271  0075  31A6  26C0  3180   	fcall	clear_ram0
 10272                           
 10273                           ; Clear objects allocated to BANK2
 10274  0078  3020               	movlw	low __pbssBANK2
 10275  0079  0084               	movwf	4
 10276  007A  3001               	movlw	high __pbssBANK2
 10277  007B  0085               	movwf	5
 10278  007C  3039               	movlw	57
 10279  007D  00FE               	movwf	btemp
 10280  007E  3000               	movlw	0
 10281  007F  00FF               	movwf	btemp+1
 10282  0080  31A6  26C0  3180   	fcall	clear_ram0
 10283                           
 10284                           ; Clear objects allocated to BANK4
 10285  0083  3020               	movlw	low __pbssBANK4
 10286  0084  0084               	movwf	4
 10287  0085  3002               	movlw	high __pbssBANK4
 10288  0086  0085               	movwf	5
 10289  0087  304C               	movlw	76
 10290  0088  00FE               	movwf	btemp
 10291  0089  3000               	movlw	0
 10292  008A  00FF               	movwf	btemp+1
 10293  008B  31A6  26C0  3180   	fcall	clear_ram0
 10294                           
 10295                           ; Clear objects allocated to BANK5
 10296  008E  30D8               	movlw	low __pbssBANK5
 10297  008F  0084               	movwf	4
 10298  0090  3002               	movlw	high __pbssBANK5
 10299  0091  0085               	movwf	5
 10300  0092  300E               	movlw	14
 10301  0093  00FE               	movwf	btemp
 10302  0094  3000               	movlw	0
 10303  0095  00FF               	movwf	btemp+1
 10304  0096  31A6  26C0  3180   	fcall	clear_ram0
 10305                           
 10306                           ; Clear objects allocated to BANK7
 10307  0099  30A0               	movlw	low __pbssBANK7
 10308  009A  0084               	movwf	4
 10309  009B  3003               	movlw	high __pbssBANK7
 10310  009C  0085               	movwf	5
 10311  009D  301E               	movlw	30
 10312  009E  00FE               	movwf	btemp
 10313  009F  3000               	movlw	0
 10314  00A0  00FF               	movwf	btemp+1
 10315  00A1  31A6  26C0         	fcall	clear_ram0
 10316  00A3                     end_of_initialization:	
 10317                           ;End of C runtime variable initialization code
 10318                           
 10319  00A3                     __end_of__initialization:	
 10320  00A3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10321  00A4  0020               	movlb	0
 10322  00A5  3196  2E16         	ljmp	_main	;jump to C main() function
 10323                           
 10324                           	psect	bssCOMMON
 10325  007C                     __pbssCOMMON:	
 10326  007C                     _badge_locked:	
 10327  007C                     	ds	1
 10328                           
 10329                           	psect	bssBANK1
 10330  00A0                     __pbssBANK1:	
 10331  00A0                     _locked_leds:	
 10332  00A0                     	ds	2
 10333  00A2                     _locked_locking_leds_idx:	
 10334  00A2                     	ds	2
 10335  00A4                     _flashy_option_size:	
 10336  00A4                     	ds	2
 10337  00A6                     _flashy_option_idx:	
 10338  00A6                     	ds	2
 10339  00A8                     _deaths:	
 10340  00A8                     	ds	2
 10341  00AA                     _flashy_scroll_rate:	
 10342  00AA                     	ds	2
 10343  00AC                     _flashy_sparkle_rate:	
 10344  00AC                     	ds	2
 10345  00AE                     _flashy_leds_state_track:	
 10346  00AE                     	ds	2
 10347  00B0                     _flashy_leds_idx:	
 10348  00B0                     	ds	2
 10349  00B2                     _menu_option_size:	
 10350  00B2                     	ds	2
 10351  00B4                     _menu_option_idx:	
 10352  00B4                     	ds	2
 10353  00B6                     _currentTask:	
 10354  00B6                     	ds	2
 10355  00B8                     _TMR0_InterruptHandler:	
 10356  00B8                     	ds	2
 10357  00BA                     _timer0ReloadVal16bit:	
 10358  00BA                     	ds	2
 10359  00BC                     _TMR4_InterruptHandler:	
 10360  00BC                     	ds	2
 10361  00BE                     _TMR2_InterruptHandler:	
 10362  00BE                     	ds	2
 10363  00C0                     _menu_task:	
 10364  00C0                     	ds	13
 10365  00CD                     _flashy_task:	
 10366  00CD                     	ds	13
 10367  00DA                     _secret_value:	
 10368  00DA                     	ds	2
 10369                           
 10370                           	psect	dataBANK1
 10371  00DC                     __pdataBANK1:	
 10372  00DC                     _randx:	
 10373  00DC                     	ds	4
 10374  00E0                     _locked_lock_base_leds:	
 10375  00E0                     	ds	2
 10376  00E2                     _FLASHY_TEXT_SECRET_TEST:	
 10377  00E2                     	ds	2
 10378  00E4                     _FLASHY_TEXT:	
 10379  00E4                     	ds	2
 10380                           
 10381                           	psect	bssBANK2
 10382  0120                     __pbssBANK2:	
 10383  0120                     _badge_inst:	
 10384  0120                     	ds	18
 10385  0132                     _secret_task:	
 10386  0132                     	ds	13
 10387  013F                     _locked_task:	
 10388  013F                     	ds	13
 10389  014C                     _slot_task:	
 10390  014C                     	ds	13
 10391                           
 10392                           	psect	dataBANK2
 10393  0159                     __pdataBANK2:	
 10394  0159                     _menu_option:	
 10395  0159                     	ds	8
 10396  0161                     marquee@F14038:	
 10397  0161                     	ds	5
 10398  0166                     marquee_speedy@F14029:	
 10399  0166                     	ds	5
 10400                           
 10401                           	psect	dataBANK3
 10402  01A0                     __pdataBANK3:	
 10403  01A0                     _flashy_option:	
 10404  01A0                     	ds	20
 10405  01B4                     _locked_locking_leds:	
 10406  01B4                     	ds	12
 10407  01C0                     _menu_options_leds:	
 10408  01C0                     	ds	10
 10409  01CA                     _secret_inputs:	
 10410  01CA                     	ds	25
 10411                           
 10412                           	psect	bssBANK4
 10413  0220                     __pbssBANK4:	
 10414  0220                     _schedulerInst:	
 10415  0220                     	ds	34
 10416  0242                     _locked_TaskData:	
 10417  0242                     	ds	14
 10418  0250                     _slot_TaskData:	
 10419  0250                     	ds	14
 10420  025E                     _menu_TaskData:	
 10421  025E                     	ds	14
 10422                           
 10423                           	psect	bssBANK5
 10424  02D8                     __pbssBANK5:	
 10425  02D8                     _secret_TaskData:	
 10426  02D8                     	ds	14
 10427                           
 10428                           	psect	dataBANK5
 10429  02A0                     __pdataBANK5:	
 10430  02A0                     _roundabout_leds_inverse:	
 10431  02A0                     	ds	28
 10432  02BC                     _roundabout_leds:	
 10433  02BC                     	ds	28
 10434                           
 10435                           	psect	dataBANK6
 10436  0320                     __pdataBANK6:	
 10437  0320                     _curtain_leds_inverse:	
 10438  0320                     	ds	28
 10439  033C                     _curtain_leds:	
 10440  033C                     	ds	28
 10441                           
 10442                           	psect	bssBANK7
 10443  03A0                     __pbssBANK7:	
 10444  03A0                     _flashy_TaskData:	
 10445  03A0                     	ds	30
 10446                           
 10447                           	psect	inittext
 10448  26CC                     init_ram:	
 10449  26CC  00FE               	movwf	126
 10450  26CD                     initloop:	
 10451  26CD  0012               	moviw fsr0++
 10452  26CE  001E               	movwi fsr1++
 10453  26CF  3001               	movlw	1
 10454  26D0  02FE               	subwf	126,f
 10455  26D1  3000               	movlw	0
 10456  26D2  3BFF               	subwfb	127,f
 10457  26D3  087F               	movf	127,w
 10458  26D4  047E               	iorwf	126,w
 10459  26D5  1903               	btfsc	3,2
 10460  26D6  3400               	retlw	0
 10461  26D7  2ECD               	goto	initloop
 10462                           
 10463                           	psect	clrtext
 10464  26C0                     clear_ram0:	
 10465                           ;	Called with FSR0 containing the base address, and
 10466                           ;	btemp/btemp+1 has the size to clear
 10467                           
 10468  26C0  0064               	clrwdt	;clear the watchdog before getting into this loop
 10469  26C1                     clrloop0:	
 10470  26C1  0180               	clrf	0	;clear RAM location pointed to by FSR
 10471  26C2  3101               	addfsr 0,1
 10472  26C3  3001               	movlw	1
 10473  26C4  02FE               	subwf	126,f
 10474  26C5  3000               	movlw	0
 10475  26C6  3BFF               	subwfb	127,f
 10476  26C7  087F               	movf	127,w
 10477  26C8  047E               	iorwf	126,w
 10478  26C9  1903               	btfsc	3,2
 10479  26CA  3400               	retlw	0	;all done for this memory range, return
 10480  26CB  2EC1               	goto	clrloop0	;have we reached the end yet?
 10481                           
 10482                           	psect	cstackBANK1
 10483  00E6                     __pcstackBANK1:	
 10484  00E6                     ??_main:	
 10485                           
 10486                           ; 1 bytes @ 0x0
 10487  00E6                     	ds	1
 10488                           
 10489                           	psect	cstackCOMMON
 10490  0070                     __pcstackCOMMON:	
 10491  0070                     ?_isdigit:	
 10492  0070                     ?_TMR2_StartTimer:	
 10493                           ; 1 bit 
 10494                           
 10495  0070                     ?_TMR4_StartTimer:	
 10496                           ; 1 bytes @ 0x0
 10497                           
 10498  0070                     ?_PIN_MANAGER_Initialize:	
 10499                           ; 1 bytes @ 0x0
 10500                           
 10501  0070                     ?_OSCILLATOR_Initialize:	
 10502                           ; 1 bytes @ 0x0
 10503                           
 10504  0070                     ?_WDT_Initialize:	
 10505                           ; 1 bytes @ 0x0
 10506                           
 10507  0070                     ?_PWM2_Initialize:	
 10508                           ; 1 bytes @ 0x0
 10509                           
 10510  0070                     ?_TMR0_Initialize:	
 10511                           ; 1 bytes @ 0x0
 10512                           
 10513  0070                     ?_TMR0_DefaultInterruptHandler:	
 10514                           ; 1 bytes @ 0x0
 10515                           
 10516  0070                     ??_TMR0_DefaultInterruptHandler:	
 10517                           ; 1 bytes @ 0x0
 10518                           
 10519  0070                     ?_TMR0_StartTimer:	
 10520                           ; 1 bytes @ 0x0
 10521                           
 10522  0070                     ?_TMR0_CallBack:	
 10523                           ; 1 bytes @ 0x0
 10524                           
 10525  0070                     ??_TMR0_CallBack:	
 10526                           ; 1 bytes @ 0x0
 10527                           
 10528  0070                     ?_nullifyBadge_segDisplayRegister:	
 10529                           ; 1 bytes @ 0x0
 10530                           
 10531  0070                     ?_nullifyBadge_segDisplayErase:	
 10532                           ; 1 bytes @ 0x0
 10533                           
 10534  0070                     ?_nullifyBadge_segDisplayForceUpdate:	
 10535                           ; 1 bytes @ 0x0
 10536                           
 10537  0070                     ?_nullifyBadge_platformInit:	
 10538                           ; 1 bytes @ 0x0
 10539                           
 10540  0070                     ?_displayL2_Initialize:	
 10541                           ; 1 bytes @ 0x0
 10542                           
 10543  0070                     ?_displayL2_ForceUpdate:	
 10544                           ; 1 bytes @ 0x0
 10545                           
 10546  0070                     ?_displayL2_EraseSegDisplay:	
 10547                           ; 1 bytes @ 0x0
 10548                           
 10549  0070                     ?_displayL2_ClrUserLeds:	
 10550                           ; 1 bytes @ 0x0
 10551                           
 10552  0070                     ?_displayL1_Update:	
 10553                           ; 1 bytes @ 0x0
 10554                           
 10555  0070                     ?_SPI1_Initialize:	
 10556                           ; 1 bytes @ 0x0
 10557                           
 10558  0070                     ?_SPI1_Exchange8bit:	
 10559                           ; 1 bytes @ 0x0
 10560                           
 10561  0070                     ?_PWM5_Initialize:	
 10562                           ; 1 bytes @ 0x0
 10563                           
 10564  0070                     ?_PWM6_Initialize:	
 10565                           ; 1 bytes @ 0x0
 10566                           
 10567  0070                     ?_PWM1_Initialize:	
 10568                           ; 1 bytes @ 0x0
 10569                           
 10570  0070                     ?_TMR2_Initialize:	
 10571                           ; 1 bytes @ 0x0
 10572                           
 10573  0070                     ?_TMR4_Initialize:	
 10574                           ; 1 bytes @ 0x0
 10575                           
 10576  0070                     ?_SYSTEM_Initialize:	
 10577                           ; 1 bytes @ 0x0
 10578                           
 10579  0070                     ?_TMR0_ISR:	
 10580                           ; 1 bytes @ 0x0
 10581                           
 10582  0070                     ??_TMR0_ISR:	
 10583                           ; 1 bytes @ 0x0
 10584                           
 10585  0070                     ?_INTERRUPT_InterruptManager:	
 10586                           ; 1 bytes @ 0x0
 10587                           
 10588  0070                     ??_INTERRUPT_InterruptManager:	
 10589                           ; 1 bytes @ 0x0
 10590                           
 10591  0070                     ?_scheduler_Init:	
 10592                           ; 1 bytes @ 0x0
 10593                           
 10594  0070                     ?_schedulerExecute:	
 10595                           ; 1 bytes @ 0x0
 10596                           
 10597  0070                     ?_led_rand:	
 10598                           ; 1 bytes @ 0x0
 10599                           
 10600  0070                     ?_main:	
 10601                           ; 1 bytes @ 0x0
 10602                           
 10603  0070                     ?_nullifyBadge_userLedsRegister:	
 10604                           ; 1 bytes @ 0x0
 10605                           
 10606  0070                     ?_nullifyBadge_userLedsClr:	
 10607                           ; 1 bytes @ 0x0
 10608                           
 10609  0070                     ?_nullifyBadge_buttonsGet:	
 10610                           ; 1 bytes @ 0x0
 10611                           
 10612  0070                     ?_nullifyBadge_irGet:	
 10613                           ; 1 bytes @ 0x0
 10614                           
 10615  0070                     ?_nullifyBadge_irTxRegister:	
 10616                           ; 1 bytes @ 0x0
 10617                           
 10618  0070                     ?_nullifyBadge_irTxRelease:	
 10619                           ; 1 bytes @ 0x0
 10620                           
 10621  0070                     ?_nullifyBadge_irTxSet:	
 10622                           ; 1 bytes @ 0x0
 10623                           
 10624  0070                     ?_nullifyBadge_irTxClr:	
 10625                           ; 1 bytes @ 0x0
 10626                           
 10627  0070                     ?_displayL1_Initialize:	
 10628                           ; 1 bytes @ 0x0
 10629                           
 10630  0070                     ?_locked_lock_leds:	
 10631                           ; 1 bytes @ 0x0
 10632                           
 10633  0070                     ?_locked_unlock_leds:	
 10634                           ; 2 bytes @ 0x0
 10635                           
 10636                           
 10637                           ; 2 bytes @ 0x0
 10638  0070                     	ds	1
 10639  0071                     ??_TMR2_StartTimer:	
 10640  0071                     ??_TMR4_StartTimer:	
 10641                           ; 1 bytes @ 0x1
 10642                           
 10643  0071                     ??_PIN_MANAGER_Initialize:	
 10644                           ; 1 bytes @ 0x1
 10645                           
 10646  0071                     ??_OSCILLATOR_Initialize:	
 10647                           ; 1 bytes @ 0x1
 10648                           
 10649  0071                     ??_WDT_Initialize:	
 10650                           ; 1 bytes @ 0x1
 10651                           
 10652  0071                     ??_PWM2_Initialize:	
 10653                           ; 1 bytes @ 0x1
 10654                           
 10655  0071                     ?_TMR0_SetInterruptHandler:	
 10656                           ; 1 bytes @ 0x1
 10657                           
 10658  0071                     ??_TMR0_StartTimer:	
 10659                           ; 1 bytes @ 0x1
 10660                           
 10661  0071                     ??_nullifyBadge_segDisplayRegister:	
 10662                           ; 1 bytes @ 0x1
 10663                           
 10664  0071                     ?_memset:	
 10665                           ; 1 bytes @ 0x1
 10666                           
 10667  0071                     ?_secret_clear:	
 10668                           ; 1 bytes @ 0x1
 10669                           
 10670  0071                     ??_isdigit:	
 10671                           ; 1 bytes @ 0x1
 10672                           
 10673  0071                     ??_SPI1_Initialize:	
 10674                           ; 1 bytes @ 0x1
 10675                           
 10676  0071                     ??_SPI1_Exchange8bit:	
 10677                           ; 1 bytes @ 0x1
 10678                           
 10679  0071                     ??_PWM5_Initialize:	
 10680                           ; 1 bytes @ 0x1
 10681                           
 10682  0071                     ?_PWM5_LoadDutyValue:	
 10683                           ; 1 bytes @ 0x1
 10684                           
 10685  0071                     ??_PWM6_Initialize:	
 10686                           ; 1 bytes @ 0x1
 10687                           
 10688  0071                     ?_PWM6_LoadDutyValue:	
 10689                           ; 1 bytes @ 0x1
 10690                           
 10691  0071                     ??_PWM1_Initialize:	
 10692                           ; 1 bytes @ 0x1
 10693                           
 10694  0071                     ?_PWM1_LoadDutyValue:	
 10695                           ; 1 bytes @ 0x1
 10696                           
 10697  0071                     ??_TMR2_Initialize:	
 10698                           ; 1 bytes @ 0x1
 10699                           
 10700  0071                     ??_TMR4_Initialize:	
 10701                           ; 1 bytes @ 0x1
 10702                           
 10703  0071                     ?_PWM2_LoadDutyValue:	
 10704                           ; 1 bytes @ 0x1
 10705                           
 10706  0071                     ??_scheduler_Init:	
 10707                           ; 1 bytes @ 0x1
 10708                           
 10709  0071                     ?_scheduler_TaskInit:	
 10710                           ; 1 bytes @ 0x1
 10711                           
 10712  0071                     ??_nullifyBadge_userLedsRegister:	
 10713                           ; 1 bytes @ 0x1
 10714                           
 10715  0071                     ??_nullifyBadge_buttonsGet:	
 10716                           ; 1 bytes @ 0x1
 10717                           
 10718  0071                     ??_nullifyBadge_irGet:	
 10719                           ; 1 bytes @ 0x1
 10720                           
 10721  0071                     ??_nullifyBadge_irTxRegister:	
 10722                           ; 1 bytes @ 0x1
 10723                           
 10724  0071                     ??_nullifyBadge_irTxRelease:	
 10725                           ; 1 bytes @ 0x1
 10726                           
 10727  0071                     ??_nullifyBadge_irTxSet:	
 10728                           ; 1 bytes @ 0x1
 10729                           
 10730  0071                     ??_nullifyBadge_irTxClr:	
 10731                           ; 1 bytes @ 0x1
 10732                           
 10733  0071                     ?_displayL1_SetUserLed:	
 10734                           ; 1 bytes @ 0x1
 10735                           
 10736  0071                     ??_locked_lock_leds:	
 10737                           ; 1 bytes @ 0x1
 10738                           
 10739  0071                     ??_locked_unlock_leds:	
 10740                           ; 1 bytes @ 0x1
 10741                           
 10742  0071                     ?___bmul:	
 10743                           ; 1 bytes @ 0x1
 10744                           
 10745  0071                     ?_strlen:	
 10746                           ; 1 bytes @ 0x1
 10747                           
 10748  0071                     ?_displayCharReverse:	
 10749                           ; 2 bytes @ 0x1
 10750                           
 10751  0071                     ?_TMR0_Read16bitTimer:	
 10752                           ; 2 bytes @ 0x1
 10753                           
 10754  0071                     ?_locked_get_lock_leds:	
 10755                           ; 2 bytes @ 0x1
 10756                           
 10757  0071                     ?_locked_get_unlock_leds:	
 10758                           ; 2 bytes @ 0x1
 10759                           
 10760  0071                     ?___wmul:	
 10761                           ; 2 bytes @ 0x1
 10762                           
 10763  0071                     ?___lwdiv:	
 10764                           ; 2 bytes @ 0x1
 10765                           
 10766  0071                     ?___lmul:	
 10767                           ; 2 bytes @ 0x1
 10768                           
 10769  0071                     SPI1_Exchange8bit@data:	
 10770                           ; 4 bytes @ 0x1
 10771                           
 10772  0071                     PIN_MANAGER_Initialize@state:	
 10773                           ; 1 bytes @ 0x1
 10774                           
 10775  0071                     nullifyBadge_segDisplayRegister@badge:	
 10776                           ; 1 bytes @ 0x1
 10777                           
 10778  0071                     nullifyBadge_userLedsRegister@badge:	
 10779                           ; 1 bytes @ 0x1
 10780                           
 10781  0071                     nullifyBadge_irTxRegister@badge:	
 10782                           ; 1 bytes @ 0x1
 10783                           
 10784  0071                     ___bmul@multiplicand:	
 10785                           ; 1 bytes @ 0x1
 10786                           
 10787  0071                     _isdigit$3105:	
 10788                           ; 1 bytes @ 0x1
 10789                           
 10790  0071                     PWM5_LoadDutyValue@dutyValue:	
 10791                           ; 1 bytes @ 0x1
 10792                           
 10793  0071                     PWM6_LoadDutyValue@dutyValue:	
 10794                           ; 2 bytes @ 0x1
 10795                           
 10796  0071                     PWM1_LoadDutyValue@dutyValue:	
 10797                           ; 2 bytes @ 0x1
 10798                           
 10799  0071                     PWM2_LoadDutyValue@dutyValue:	
 10800                           ; 2 bytes @ 0x1
 10801                           
 10802  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
 10803                           ; 2 bytes @ 0x1
 10804                           
 10805  0071                     scheduler_TaskInit@task:	
 10806                           ; 2 bytes @ 0x1
 10807                           
 10808  0071                     displayL1_SetUserLed@userLedVect:	
 10809                           ; 2 bytes @ 0x1
 10810                           
 10811  0071                     displayCharReverse@cVal:	
 10812                           ; 2 bytes @ 0x1
 10813                           
 10814  0071                     secret_clear@data:	
 10815                           ; 2 bytes @ 0x1
 10816                           
 10817  0071                     ___wmul@multiplier:	
 10818                           ; 2 bytes @ 0x1
 10819                           
 10820  0071                     ___lwdiv@divisor:	
 10821                           ; 2 bytes @ 0x1
 10822                           
 10823  0071                     memset@c:	
 10824                           ; 2 bytes @ 0x1
 10825                           
 10826  0071                     strlen@s:	
 10827                           ; 2 bytes @ 0x1
 10828                           
 10829  0071                     ___lmul@multiplier:	
 10830                           ; 2 bytes @ 0x1
 10831                           
 10832                           
 10833                           ; 4 bytes @ 0x1
 10834  0071                     	ds	1
 10835  0072                     ?_SPI1_Exchange8bitBuffer:	
 10836  0072                     ??___bmul:	
 10837                           ; 1 bytes @ 0x2
 10838                           
 10839  0072                     SPI1_Exchange8bitBuffer@bufLen:	
 10840                           ; 1 bytes @ 0x2
 10841                           
 10842  0072                     scheduler_Init@scheduler:	
 10843                           ; 1 bytes @ 0x2
 10844                           
 10845  0072                     nullifyBadge_irTxRelease@badge:	
 10846                           ; 1 bytes @ 0x2
 10847                           
 10848  0072                     isdigit@c:	
 10849                           ; 1 bytes @ 0x2
 10850                           
 10851                           
 10852                           ; 1 bytes @ 0x2
 10853  0072                     	ds	1
 10854  0073                     ??_TMR0_Initialize:	
 10855  0073                     ??_TMR0_SetInterruptHandler:	
 10856                           ; 1 bytes @ 0x3
 10857                           
 10858  0073                     ??_strlen:	
 10859                           ; 1 bytes @ 0x3
 10860                           
 10861  0073                     ??_displayCharReverse:	
 10862                           ; 1 bytes @ 0x3
 10863                           
 10864  0073                     ??_secret_clear:	
 10865                           ; 1 bytes @ 0x3
 10866                           
 10867  0073                     ??_PWM5_LoadDutyValue:	
 10868                           ; 1 bytes @ 0x3
 10869                           
 10870  0073                     ??_PWM6_LoadDutyValue:	
 10871                           ; 1 bytes @ 0x3
 10872                           
 10873  0073                     ??_PWM1_LoadDutyValue:	
 10874                           ; 1 bytes @ 0x3
 10875                           
 10876  0073                     ??_SYSTEM_Initialize:	
 10877                           ; 1 bytes @ 0x3
 10878                           
 10879  0073                     ??_PWM2_LoadDutyValue:	
 10880                           ; 1 bytes @ 0x3
 10881                           
 10882  0073                     ??_TMR0_Read16bitTimer:	
 10883                           ; 1 bytes @ 0x3
 10884                           
 10885  0073                     ??_scheduler_TaskInit:	
 10886                           ; 1 bytes @ 0x3
 10887                           
 10888  0073                     ??_displayL1_SetUserLed:	
 10889                           ; 1 bytes @ 0x3
 10890                           
 10891  0073                     ??_locked_get_lock_leds:	
 10892                           ; 1 bytes @ 0x3
 10893                           
 10894  0073                     ??_locked_get_unlock_leds:	
 10895                           ; 1 bytes @ 0x3
 10896                           
 10897  0073                     SPI1_Exchange8bitBuffer@dataOut:	
 10898                           ; 1 bytes @ 0x3
 10899                           
 10900  0073                     scheduler_Init@k:	
 10901                           ; 1 bytes @ 0x3
 10902                           
 10903  0073                     nullifyBadge_buttonsGet@retVal:	
 10904                           ; 1 bytes @ 0x3
 10905                           
 10906  0073                     ___bmul@product:	
 10907                           ; 1 bytes @ 0x3
 10908                           
 10909  0073                     locked_lock_leds@size:	
 10910                           ; 1 bytes @ 0x3
 10911                           
 10912  0073                     locked_get_unlock_leds@leds:	
 10913                           ; 2 bytes @ 0x3
 10914                           
 10915  0073                     ___wmul@multiplicand:	
 10916                           ; 2 bytes @ 0x3
 10917                           
 10918  0073                     ___lwdiv@dividend:	
 10919                           ; 2 bytes @ 0x3
 10920                           
 10921  0073                     memset@n:	
 10922                           ; 2 bytes @ 0x3
 10923                           
 10924                           
 10925                           ; 2 bytes @ 0x3
 10926  0073                     	ds	1
 10927  0074                     ??_SPI1_Exchange8bitBuffer:	
 10928  0074                     displayL1_SetUserLed@display:	
 10929                           ; 1 bytes @ 0x4
 10930                           
 10931  0074                     ___bmul@multiplier:	
 10932                           ; 1 bytes @ 0x4
 10933                           
 10934                           
 10935                           ; 1 bytes @ 0x4
 10936  0074                     	ds	1
 10937  0075                     ??_memset:	
 10938  0075                     ??___wmul:	
 10939                           ; 1 bytes @ 0x5
 10940                           
 10941  0075                     ??___lwdiv:	
 10942                           ; 1 bytes @ 0x5
 10943                           
 10944  0075                     locked_get_lock_leds@size:	
 10945                           ; 1 bytes @ 0x5
 10946                           
 10947  0075                     ___wmul@product:	
 10948                           ; 2 bytes @ 0x5
 10949                           
 10950  0075                     strlen@cp:	
 10951                           ; 2 bytes @ 0x5
 10952                           
 10953  0075                     ___lmul@multiplicand:	
 10954                           ; 2 bytes @ 0x5
 10955                           
 10956                           
 10957                           ; 4 bytes @ 0x5
 10958  0075                     	ds	1
 10959  0076                     ___lwdiv@counter:	
 10960  0076                     memset@p:	
 10961                           ; 1 bytes @ 0x6
 10962                           
 10963                           
 10964                           ; 1 bytes @ 0x6
 10965  0076                     	ds	1
 10966  0077                     ?_secret_check:	
 10967  0077                     SPI1_Exchange8bitBuffer@dataIn:	
 10968                           ; 1 bytes @ 0x7
 10969                           
 10970  0077                     memset@p1:	
 10971                           ; 1 bytes @ 0x7
 10972                           
 10973  0077                     locked_get_lock_leds@leds:	
 10974                           ; 1 bytes @ 0x7
 10975                           
 10976  0077                     secret_check@data:	
 10977                           ; 2 bytes @ 0x7
 10978                           
 10979  0077                     ___lwdiv@quotient:	
 10980                           ; 2 bytes @ 0x7
 10981                           
 10982                           
 10983                           ; 2 bytes @ 0x7
 10984  0077                     	ds	1
 10985  0078                     SPI1_Exchange8bitBuffer@bytesWritten:	
 10986  0078                     displayCharReverse@retValLower:	
 10987                           ; 1 bytes @ 0x8
 10988                           
 10989  0078                     TMR0_Read16bitTimer@readVal:	
 10990                           ; 1 bytes @ 0x8
 10991                           
 10992                           
 10993                           ; 2 bytes @ 0x8
 10994  0078                     	ds	1
 10995  0079                     ??_displayL1_Update:	
 10996  0079                     ??___lmul:	
 10997                           ; 1 bytes @ 0x9
 10998                           
 10999  0079                     ??___lwmod:	
 11000                           ; 1 bytes @ 0x9
 11001                           
 11002  0079                     displayCharReverse@retValUpper:	
 11003                           ; 1 bytes @ 0x9
 11004                           
 11005  0079                     secret_check@buttonPressed:	
 11006                           ; 1 bytes @ 0x9
 11007                           
 11008                           
 11009                           ; 1 bytes @ 0x9
 11010  0079                     	ds	1
 11011  007A                     TMR0_Read16bitTimer@readValLow:	
 11012  007A                     displayCharReverse@retValUpperRev:	
 11013                           ; 1 bytes @ 0xA
 11014                           
 11015  007A                     ___lwmod@counter:	
 11016                           ; 1 bytes @ 0xA
 11017                           
 11018                           
 11019                           ; 1 bytes @ 0xA
 11020  007A                     	ds	1
 11021  007B                     ??_displayL2_ForceUpdate:	
 11022  007B                     ??_displayL2_SetUserLeds:	
 11023                           ; 1 bytes @ 0xB
 11024                           
 11025  007B                     ??_displayL2_ClrUserLeds:	
 11026                           ; 1 bytes @ 0xB
 11027                           
 11028  007B                     ??_displayL1_Initialize:	
 11029                           ; 1 bytes @ 0xB
 11030                           
 11031  007B                     TMR0_Read16bitTimer@readValHigh:	
 11032                           ; 1 bytes @ 0xB
 11033                           
 11034  007B                     displayL1_Initialize@display:	
 11035                           ; 1 bytes @ 0xB
 11036                           
 11037  007B                     displayCharReverse@k:	
 11038                           ; 1 bytes @ 0xB
 11039                           
 11040  007B                     displayL2_ForceUpdate@display:	
 11041                           ; 1 bytes @ 0xB
 11042                           
 11043  007B                     displayL2_SetUserLeds@display:	
 11044                           ; 1 bytes @ 0xB
 11045                           
 11046  007B                     displayL2_ClrUserLeds@display:	
 11047                           ; 1 bytes @ 0xB
 11048                           
 11049                           
 11050                           ; 1 bytes @ 0xB
 11051  007B                     	ds	1
 11052  007C                     ??_nullifyBadge_segDisplayErase:	
 11053  007C                     ??_nullifyBadge_segDisplayPutStr:	
 11054                           ; 1 bytes @ 0xC
 11055                           
 11056  007C                     ??_nullifyBadge_segDisplayForceUpdate:	
 11057                           ; 1 bytes @ 0xC
 11058                           
 11059  007C                     ??_nullifyBadge_userLedsSet:	
 11060                           ; 1 bytes @ 0xC
 11061                           
 11062  007C                     ??_nullifyBadge_platformInit:	
 11063                           ; 1 bytes @ 0xC
 11064                           
 11065  007C                     ??_flashy_Init:	
 11066                           ; 1 bytes @ 0xC
 11067                           
 11068  007C                     ??_menu_Init:	
 11069                           ; 1 bytes @ 0xC
 11070                           
 11071  007C                     ??_slot_Init:	
 11072                           ; 1 bytes @ 0xC
 11073                           
 11074  007C                     ??_locked_Init:	
 11075                           ; 1 bytes @ 0xC
 11076                           
 11077  007C                     ??_secret_Init:	
 11078                           ; 1 bytes @ 0xC
 11079                           
 11080  007C                     ??_displayL2_Initialize:	
 11081                           ; 1 bytes @ 0xC
 11082                           
 11083  007C                     ??_displayL2_EraseSegDisplay:	
 11084                           ; 1 bytes @ 0xC
 11085                           
 11086  007C                     ??_menu_clear:	
 11087                           ; 1 bytes @ 0xC
 11088                           
 11089  007C                     ??_menu_display_option:	
 11090                           ; 1 bytes @ 0xC
 11091                           
 11092  007C                     ??_menu_run_option:	
 11093                           ; 1 bytes @ 0xC
 11094                           
 11095  007C                     ??_locked_clear:	
 11096                           ; 1 bytes @ 0xC
 11097                           
 11098  007C                     ??_scheduler_TaskRun:	
 11099                           ; 1 bytes @ 0xC
 11100                           
 11101  007C                     ??_led_rand:	
 11102                           ; 1 bytes @ 0xC
 11103                           
 11104  007C                     ??_led_circle:	
 11105                           ; 1 bytes @ 0xC
 11106                           
 11107  007C                     ??_let_alternate:	
 11108                           ; 1 bytes @ 0xC
 11109                           
 11110  007C                     ??_nullifyBadge_userLedsClr:	
 11111                           ; 1 bytes @ 0xC
 11112                           
 11113  007C                     ??_flashy_display_option:	
 11114                           ; 1 bytes @ 0xC
 11115                           
 11116                           
 11117                           	psect	cstackBANK0
 11118  0020                     __pcstackBANK0:	
 11119                           ; 1 bytes @ 0xC
 11120                           
 11121  0020                     ?_displayL1_SetSegChar:	
 11122  0020                     ??_secret_check:	
 11123                           ; 1 bytes @ 0x0
 11124                           
 11125  0020                     ?___lwmod:	
 11126                           ; 1 bytes @ 0x0
 11127                           
 11128  0020                     displayL1_SetSegChar@c:	
 11129                           ; 2 bytes @ 0x0
 11130                           
 11131  0020                     ___lwmod@divisor:	
 11132                           ; 1 bytes @ 0x0
 11133                           
 11134  0020                     ___lmul@product:	
 11135                           ; 2 bytes @ 0x0
 11136                           
 11137  0020                     displayL1_Update@tmpRxBuf:	
 11138                           ; 4 bytes @ 0x0
 11139                           
 11140                           
 11141                           ; 10 bytes @ 0x0
 11142  0020                     	ds	1
 11143  0021                     displayL1_SetSegChar@charPos:	
 11144                           
 11145                           ; 1 bytes @ 0x1
 11146  0021                     	ds	1
 11147  0022                     ??_displayL1_SetSegChar:	
 11148  0022                     ___lwmod@dividend:	
 11149                           ; 1 bytes @ 0x2
 11150                           
 11151                           
 11152                           ; 2 bytes @ 0x2
 11153  0022                     	ds	1
 11154  0023                     secret_check@size:	
 11155                           
 11156                           ; 2 bytes @ 0x3
 11157  0023                     	ds	1
 11158  0024                     ?_rand:	
 11159  0024                     ?_sprintf:	
 11160                           ; 2 bytes @ 0x4
 11161                           
 11162  0024                     sprintf@f:	
 11163                           ; 2 bytes @ 0x4
 11164                           
 11165                           
 11166                           ; 2 bytes @ 0x4
 11167  0024                     	ds	1
 11168  0025                     secret_check@currents_size:	
 11169                           
 11170                           ; 2 bytes @ 0x5
 11171  0025                     	ds	1
 11172  0026                     ??_rand:	
 11173  0026                     displayL1_SetSegChar@dispDataVectBaseIdx:	
 11174                           ; 1 bytes @ 0x6
 11175                           
 11176                           
 11177                           ; 1 bytes @ 0x6
 11178  0026                     	ds	1
 11179  0027                     displayL1_SetSegChar@display:	
 11180  0027                     secret_check@inputs:	
 11181                           ; 1 bytes @ 0x7
 11182                           
 11183                           
 11184                           ; 1 bytes @ 0x7
 11185  0027                     	ds	1
 11186  0028                     ??_sprintf:	
 11187  0028                     displayL1_SetSegChar@charData:	
 11188                           ; 1 bytes @ 0x8
 11189                           
 11190  0028                     secret_check@i:	
 11191                           ; 2 bytes @ 0x8
 11192                           
 11193                           
 11194                           ; 2 bytes @ 0x8
 11195  0028                     	ds	2
 11196  002A                     ?_displayL2_PutChar:	
 11197  002A                     displayL1_Update@display:	
 11198                           ; 1 bytes @ 0xA
 11199                           
 11200  002A                     displayL2_PutChar@c:	
 11201                           ; 1 bytes @ 0xA
 11202                           
 11203                           
 11204                           ; 1 bytes @ 0xA
 11205  002A                     	ds	1
 11206  002B                     ??_displayL2_PutChar:	
 11207  002B                     ?_displayL2_SetUserLeds:	
 11208                           ; 1 bytes @ 0xB
 11209                           
 11210  002B                     nullifyBadge_segDisplayForceUpdate@badge:	
 11211                           ; 1 bytes @ 0xB
 11212                           
 11213  002B                     nullifyBadge_userLedsClr@badge:	
 11214                           ; 1 bytes @ 0xB
 11215                           
 11216  002B                     displayL2_Initialize@display:	
 11217                           ; 1 bytes @ 0xB
 11218                           
 11219  002B                     displayL2_SetUserLeds@userLedData:	
 11220                           ; 1 bytes @ 0xB
 11221                           
 11222                           
 11223                           ; 2 bytes @ 0xB
 11224  002B                     	ds	1
 11225  002C                     nullifyBadge_platformInit@badge:	
 11226  002C                     sprintf@ap:	
 11227                           ; 1 bytes @ 0xC
 11228                           
 11229                           
 11230                           ; 1 bytes @ 0xC
 11231  002C                     	ds	1
 11232  002D                     ?_nullifyBadge_userLedsSet:	
 11233  002D                     sprintf@prec:	
 11234                           ; 1 bytes @ 0xD
 11235                           
 11236  002D                     nullifyBadge_userLedsSet@userLedData:	
 11237                           ; 1 bytes @ 0xD
 11238                           
 11239                           
 11240                           ; 2 bytes @ 0xD
 11241  002D                     	ds	1
 11242  002E                     displayL2_PutChar@k:	
 11243  002E                     sprintf@flag:	
 11244                           ; 1 bytes @ 0xE
 11245                           
 11246                           
 11247                           ; 1 bytes @ 0xE
 11248  002E                     	ds	1
 11249  002F                     nullifyBadge_userLedsSet@badge:	
 11250  002F                     displayL2_PutChar@display:	
 11251                           ; 1 bytes @ 0xF
 11252                           
 11253  002F                     sprintf@val:	
 11254                           ; 1 bytes @ 0xF
 11255                           
 11256                           
 11257                           ; 2 bytes @ 0xF
 11258  002F                     	ds	1
 11259  0030                     ?_displayL2_PutStr:	
 11260  0030                     ?_led_roundabout:	
 11261                           ; 1 bytes @ 0x10
 11262                           
 11263  0030                     ?_led_curtain:	
 11264                           ; 1 bytes @ 0x10
 11265                           
 11266  0030                     ?_led_circle:	
 11267                           ; 1 bytes @ 0x10
 11268                           
 11269  0030                     ?_let_alternate:	
 11270                           ; 1 bytes @ 0x10
 11271                           
 11272  0030                     led_roundabout@counter:	
 11273                           ; 1 bytes @ 0x10
 11274                           
 11275  0030                     led_curtain@counter:	
 11276                           ; 2 bytes @ 0x10
 11277                           
 11278  0030                     led_rand@spark:	
 11279                           ; 2 bytes @ 0x10
 11280                           
 11281  0030                     led_circle@count:	
 11282                           ; 2 bytes @ 0x10
 11283                           
 11284  0030                     let_alternate@count:	
 11285                           ; 2 bytes @ 0x10
 11286                           
 11287  0030                     displayL2_PutStr@str:	
 11288                           ; 2 bytes @ 0x10
 11289                           
 11290                           
 11291                           ; 2 bytes @ 0x10
 11292  0030                     	ds	1
 11293  0031                     sprintf@sp:	
 11294                           
 11295                           ; 1 bytes @ 0x11
 11296  0031                     	ds	1
 11297  0032                     ??_displayL2_PutStr:	
 11298  0032                     ??_led_roundabout:	
 11299                           ; 1 bytes @ 0x12
 11300                           
 11301  0032                     ??_led_curtain:	
 11302                           ; 1 bytes @ 0x12
 11303                           
 11304  0032                     sprintf@width:	
 11305                           ; 1 bytes @ 0x12
 11306                           
 11307                           
 11308                           ; 2 bytes @ 0x12
 11309  0032                     	ds	2
 11310  0034                     sprintf@c:	
 11311  0034                     led_roundabout@leds:	
 11312                           ; 1 bytes @ 0x14
 11313                           
 11314  0034                     led_curtain@leds:	
 11315                           ; 2 bytes @ 0x14
 11316                           
 11317                           
 11318                           ; 2 bytes @ 0x14
 11319  0034                     	ds	1
 11320  0035                     displayL2_PutStr@display:	
 11321                           
 11322                           ; 1 bytes @ 0x15
 11323  0035                     	ds	1
 11324  0036                     displayL2_PutStr@k:	
 11325  0036                     led_roundabout@size:	
 11326                           ; 1 bytes @ 0x16
 11327                           
 11328  0036                     led_curtain@size:	
 11329                           ; 2 bytes @ 0x16
 11330                           
 11331                           
 11332                           ; 2 bytes @ 0x16
 11333  0036                     	ds	1
 11334  0037                     ?_nullifyBadge_segDisplayPutStr:	
 11335  0037                     displayL2_EraseSegDisplay@display:	
 11336                           ; 1 bytes @ 0x17
 11337                           
 11338  0037                     nullifyBadge_segDisplayPutStr@str:	
 11339                           ; 1 bytes @ 0x17
 11340                           
 11341                           
 11342                           ; 2 bytes @ 0x17
 11343  0037                     	ds	1
 11344  0038                     nullifyBadge_segDisplayErase@badge:	
 11345                           
 11346                           ; 1 bytes @ 0x18
 11347  0038                     	ds	1
 11348  0039                     ?_flashy_Init:	
 11349  0039                     ?_menu_Init:	
 11350                           ; 1 bytes @ 0x19
 11351                           
 11352  0039                     ?_slot_Init:	
 11353                           ; 1 bytes @ 0x19
 11354                           
 11355  0039                     ?_locked_Init:	
 11356                           ; 1 bytes @ 0x19
 11357                           
 11358  0039                     ?_secret_Init:	
 11359                           ; 1 bytes @ 0x19
 11360                           
 11361  0039                     ?_menu_clear:	
 11362                           ; 1 bytes @ 0x19
 11363                           
 11364  0039                     ?_locked_clear:	
 11365                           ; 1 bytes @ 0x19
 11366                           
 11367  0039                     nullifyBadge_segDisplayPutStr@badge:	
 11368                           ; 1 bytes @ 0x19
 11369                           
 11370  0039                     menu_Init@taskData:	
 11371                           ; 1 bytes @ 0x19
 11372                           
 11373  0039                     menu_clear@data:	
 11374                           ; 2 bytes @ 0x19
 11375                           
 11376  0039                     flashy_Init@taskData:	
 11377                           ; 2 bytes @ 0x19
 11378                           
 11379  0039                     locked_Init@taskData:	
 11380                           ; 2 bytes @ 0x19
 11381                           
 11382  0039                     locked_clear@data:	
 11383                           ; 2 bytes @ 0x19
 11384                           
 11385  0039                     secret_Init@taskData:	
 11386                           ; 2 bytes @ 0x19
 11387                           
 11388  0039                     slot_Init@taskData:	
 11389                           ; 2 bytes @ 0x19
 11390                           
 11391                           
 11392                           ; 2 bytes @ 0x19
 11393  0039                     	ds	1
 11394  003A                     ?_marquee_speedy:	
 11395  003A                     ?_marquee:	
 11396                           ; 1 bytes @ 0x1A
 11397                           
 11398  003A                     marquee_speedy@string:	
 11399                           ; 1 bytes @ 0x1A
 11400                           
 11401  003A                     marquee@string:	
 11402                           ; 2 bytes @ 0x1A
 11403                           
 11404                           
 11405                           ; 2 bytes @ 0x1A
 11406  003A                     	ds	1
 11407  003B                     ?_menu_run_option:	
 11408  003B                     menu_Init@data:	
 11409                           ; 1 bytes @ 0x1B
 11410                           
 11411  003B                     menu_run_option@data:	
 11412                           ; 2 bytes @ 0x1B
 11413                           
 11414  003B                     flashy_Init@data:	
 11415                           ; 2 bytes @ 0x1B
 11416                           
 11417  003B                     locked_Init@data:	
 11418                           ; 2 bytes @ 0x1B
 11419                           
 11420  003B                     secret_Init@data:	
 11421                           ; 2 bytes @ 0x1B
 11422                           
 11423  003B                     slot_Init@data:	
 11424                           ; 2 bytes @ 0x1B
 11425                           
 11426                           
 11427                           ; 2 bytes @ 0x1B
 11428  003B                     	ds	1
 11429  003C                     marquee_speedy@count:	
 11430  003C                     marquee@count:	
 11431                           ; 2 bytes @ 0x1C
 11432                           
 11433                           
 11434                           ; 2 bytes @ 0x1C
 11435  003C                     	ds	1
 11436  003D                     ?_scheduler_TaskAdd:	
 11437  003D                     scheduler_TaskAdd@task:	
 11438                           ; 1 bytes @ 0x1D
 11439                           
 11440                           
 11441                           ; 2 bytes @ 0x1D
 11442  003D                     	ds	1
 11443  003E                     ??_marquee:	
 11444  003E                     marquee_speedy@multiplier:	
 11445                           ; 1 bytes @ 0x1E
 11446                           
 11447                           
 11448                           ; 2 bytes @ 0x1E
 11449  003E                     	ds	1
 11450  003F                     ??_scheduler_TaskAdd:	
 11451  003F                     marquee@display_string:	
 11452                           ; 1 bytes @ 0x1F
 11453                           
 11454                           
 11455                           ; 5 bytes @ 0x1F
 11456  003F                     	ds	1
 11457  0040                     ??_marquee_speedy:	
 11458                           
 11459                           ; 1 bytes @ 0x20
 11460  0040                     	ds	1
 11461  0041                     marquee_speedy@display_string:	
 11462                           
 11463                           ; 5 bytes @ 0x21
 11464  0041                     	ds	3
 11465  0044                     marquee@multiplier:	
 11466                           
 11467                           ; 2 bytes @ 0x24
 11468  0044                     	ds	1
 11469  0045                     scheduler_TaskAdd@scheduler:	
 11470                           
 11471                           ; 1 bytes @ 0x25
 11472  0045                     	ds	1
 11473  0046                     scheduler_TaskAdd@k:	
 11474  0046                     marquee_speedy@i:	
 11475                           ; 1 bytes @ 0x26
 11476                           
 11477  0046                     marquee@i:	
 11478                           ; 2 bytes @ 0x26
 11479                           
 11480                           
 11481                           ; 2 bytes @ 0x26
 11482  0046                     	ds	2
 11483  0048                     marquee_speedy@string_length:	
 11484  0048                     marquee@string_length:	
 11485                           ; 2 bytes @ 0x28
 11486                           
 11487                           
 11488                           ; 2 bytes @ 0x28
 11489  0048                     	ds	2
 11490  004A                     marquee_speedy@j:	
 11491  004A                     marquee@j:	
 11492                           ; 2 bytes @ 0x2A
 11493                           
 11494                           
 11495                           ; 2 bytes @ 0x2A
 11496  004A                     	ds	2
 11497  004C                     ?_menu_display_option:	
 11498  004C                     ?_flashy_display_option:	
 11499                           ; 1 bytes @ 0x2C
 11500                           
 11501  004C                     menu_display_option@data:	
 11502                           ; 1 bytes @ 0x2C
 11503                           
 11504  004C                     flashy_display_option@data:	
 11505                           ; 2 bytes @ 0x2C
 11506                           
 11507                           
 11508                           ; 2 bytes @ 0x2C
 11509  004C                     	ds	2
 11510  004E                     menu_display_option@size:	
 11511                           
 11512                           ; 2 bytes @ 0x2E
 11513  004E                     	ds	2
 11514  0050                     menu_display_option@led:	
 11515                           
 11516                           ; 2 bytes @ 0x30
 11517  0050                     	ds	2
 11518  0052                     ?_flashy_Main:	
 11519  0052                     ?_menu_Main:	
 11520                           ; 1 bytes @ 0x32
 11521                           
 11522  0052                     ?_slot_Main:	
 11523                           ; 1 bytes @ 0x32
 11524                           
 11525  0052                     ?_locked_Main:	
 11526                           ; 1 bytes @ 0x32
 11527                           
 11528  0052                     ?_secret_Main:	
 11529                           ; 1 bytes @ 0x32
 11530                           
 11531  0052                     menu_Main@taskData:	
 11532                           ; 1 bytes @ 0x32
 11533                           
 11534  0052                     flashy_Main@taskData:	
 11535                           ; 2 bytes @ 0x32
 11536                           
 11537  0052                     locked_Main@taskData:	
 11538                           ; 2 bytes @ 0x32
 11539                           
 11540  0052                     secret_Main@taskData:	
 11541                           ; 2 bytes @ 0x32
 11542                           
 11543  0052                     slot_Main@taskData:	
 11544                           ; 2 bytes @ 0x32
 11545                           
 11546                           
 11547                           ; 2 bytes @ 0x32
 11548  0052                     	ds	2
 11549  0054                     ??_flashy_Main:	
 11550  0054                     ??_menu_Main:	
 11551                           ; 1 bytes @ 0x34
 11552                           
 11553  0054                     ??_slot_Main:	
 11554                           ; 1 bytes @ 0x34
 11555                           
 11556  0054                     ??_locked_Main:	
 11557                           ; 1 bytes @ 0x34
 11558                           
 11559  0054                     ??_secret_Main:	
 11560                           ; 1 bytes @ 0x34
 11561                           
 11562                           
 11563                           ; 1 bytes @ 0x34
 11564  0054                     	ds	1
 11565  0055                     slot_Main@buttonPressed:	
 11566                           
 11567                           ; 1 bytes @ 0x35
 11568  0055                     	ds	1
 11569  0056                     menu_Main@buttonPressed:	
 11570  0056                     locked_Main@buttonPressed:	
 11571                           ; 1 bytes @ 0x36
 11572                           
 11573  0056                     secret_Main@secret_found:	
 11574                           ; 1 bytes @ 0x36
 11575                           
 11576  0056                     slot_Main@data:	
 11577                           ; 1 bytes @ 0x36
 11578                           
 11579  0056                     flashy_Main@hit_counter:	
 11580                           ; 2 bytes @ 0x36
 11581                           
 11582                           
 11583                           ; 6 bytes @ 0x36
 11584  0056                     	ds	1
 11585  0057                     secret_Main@buttonPressed:	
 11586  0057                     menu_Main@data:	
 11587                           ; 1 bytes @ 0x37
 11588                           
 11589  0057                     locked_Main@data:	
 11590                           ; 2 bytes @ 0x37
 11591                           
 11592                           
 11593                           ; 2 bytes @ 0x37
 11594  0057                     	ds	1
 11595  0058                     secret_Main@data:	
 11596                           
 11597                           ; 2 bytes @ 0x38
 11598  0058                     	ds	4
 11599  005C                     flashy_Main@buttonPressed:	
 11600                           
 11601                           ; 2 bytes @ 0x3C
 11602  005C                     	ds	2
 11603  005E                     flashy_Main@data:	
 11604                           
 11605                           ; 2 bytes @ 0x3E
 11606  005E                     	ds	2
 11607  0060                     ?_scheduler_TaskRun:	
 11608  0060                     scheduler_TaskRun@task:	
 11609                           ; 1 bytes @ 0x40
 11610                           
 11611                           
 11612                           ; 2 bytes @ 0x40
 11613  0060                     	ds	2
 11614  0062                     ??_schedulerExecute:	
 11615                           
 11616                           ; 1 bytes @ 0x42
 11617  0062                     	ds	6
 11618  0068                     schedulerExecute@currentSystemTick:	
 11619                           
 11620                           ; 2 bytes @ 0x48
 11621  0068                     	ds	2
 11622  006A                     schedulerExecute@taskLastSystemTick:	
 11623                           
 11624                           ; 2 bytes @ 0x4A
 11625  006A                     	ds	2
 11626  006C                     schedulerExecute@tickDelta:	
 11627                           
 11628                           ; 2 bytes @ 0x4C
 11629  006C                     	ds	2
 11630  006E                     schedulerExecute@scheduler:	
 11631                           
 11632                           ; 1 bytes @ 0x4E
 11633  006E                     	ds	1
 11634  006F                     schedulerExecute@k:	
 11635                           
 11636                           ; 1 bytes @ 0x4F
 11637  006F                     	ds	1
 11638                           
 11639                           	psect	maintext
 11640  1616                     __pmaintext:	
 11641 ;;
 11642 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 11643 ;;
 11644 ;; *************** function _main *****************
 11645 ;; Defined at:
 11646 ;;		line 195 in file "main.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;		None
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;		None
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  1    wreg      void 
 11653 ;; Registers used:
 11654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11655 ;; Tracked objects:
 11656 ;;		On entry : B1F/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11662 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11663 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11664 ;;Total ram usage:        1 bytes
 11665 ;; Hardware stack levels required when called:   15
 11666 ;; This function calls:
 11667 ;;		_nullifyBadge_platformInit
 11668 ;;		_schedulerExecute
 11669 ;;		_scheduler_Init
 11670 ;;		_scheduler_TaskAdd
 11671 ;;		_scheduler_TaskInit
 11672 ;; This function is called by:
 11673 ;;		Startup code after reset
 11674 ;; This function uses a non-reentrant model
 11675 ;;
 11676                           
 11677                           
 11678                           ;psect for function _main
 11679  1616                     _main:	
 11680                           
 11681                           ;main.c: 198: nullifyBadge_platformInit(&badge_inst);
 11682                           
 11683                           ;incstack = 0
 11684                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11685  1616  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11686  1617  319E  2635  3196   	fcall	_nullifyBadge_platformInit
 11687                           
 11688                           ;main.c: 201: scheduler_Init(&schedulerInst);
 11689  161A  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11690  161B  3198  207F  3196   	fcall	_scheduler_Init
 11691                           
 11692                           ;main.c: 204: scheduler_TaskInit(&flashy_task);
 11693  161E  30CD               	movlw	low _flashy_task
 11694  161F  00F1               	movwf	scheduler_TaskInit@task
 11695  1620  3000               	movlw	high _flashy_task
 11696  1621  00F2               	movwf	scheduler_TaskInit@task+1
 11697  1622  319B  2378  3196   	fcall	_scheduler_TaskInit
 11698                           
 11699                           ;main.c: 205: scheduler_TaskInit(&menu_task);
 11700  1625  30C0               	movlw	low _menu_task
 11701  1626  00F1               	movwf	scheduler_TaskInit@task
 11702  1627  3000               	movlw	high _menu_task
 11703  1628  00F2               	movwf	scheduler_TaskInit@task+1
 11704  1629  319B  2378  3196   	fcall	_scheduler_TaskInit
 11705                           
 11706                           ;main.c: 206: scheduler_TaskInit(&slot_task);
 11707  162C  304C               	movlw	low _slot_task
 11708  162D  00F1               	movwf	scheduler_TaskInit@task
 11709  162E  3001               	movlw	high _slot_task
 11710  162F  00F2               	movwf	scheduler_TaskInit@task+1
 11711  1630  319B  2378  3196   	fcall	_scheduler_TaskInit
 11712                           
 11713                           ;main.c: 207: scheduler_TaskInit(&locked_task);
 11714  1633  303F               	movlw	low _locked_task
 11715  1634  00F1               	movwf	scheduler_TaskInit@task
 11716  1635  3001               	movlw	high _locked_task
 11717  1636  00F2               	movwf	scheduler_TaskInit@task+1
 11718  1637  319B  2378  3196   	fcall	_scheduler_TaskInit
 11719                           
 11720                           ;main.c: 208: scheduler_TaskInit(&secret_task);
 11721  163A  3032               	movlw	low _secret_task
 11722  163B  00F1               	movwf	scheduler_TaskInit@task
 11723  163C  3001               	movlw	high _secret_task
 11724  163D  00F2               	movwf	scheduler_TaskInit@task+1
 11725  163E  319B  2378  3196   	fcall	_scheduler_TaskInit
 11726                           
 11727                           ;main.c: 211: flashy_TaskData.badge = &badge_inst;
 11728  1641  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11729  1642  0021               	movlb	1	; select bank1
 11730  1643  00E6               	movwf	??_main^(0+128)
 11731  1644  0866               	movf	??_main^(0+128),w
 11732  1645  0027               	movlb	7	; select bank7
 11733  1646  00A0               	movwf	_flashy_TaskData^(0+896)
 11734                           
 11735                           ;main.c: 212: menu_TaskData.badge = &badge_inst;
 11736  1647  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11737  1648  0021               	movlb	1	; select bank1
 11738  1649  00E6               	movwf	??_main^(0+128)
 11739  164A  0866               	movf	??_main^(0+128),w
 11740  164B  0024               	movlb	4	; select bank4
 11741  164C  00DE               	movwf	_menu_TaskData^(0+512)
 11742                           
 11743                           ;main.c: 213: slot_TaskData.badge = &badge_inst;
 11744  164D  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11745  164E  0021               	movlb	1	; select bank1
 11746  164F  00E6               	movwf	??_main^(0+128)
 11747  1650  0866               	movf	??_main^(0+128),w
 11748  1651  0024               	movlb	4	; select bank4
 11749  1652  00D0               	movwf	_slot_TaskData^(0+512)
 11750                           
 11751                           ;main.c: 214: locked_TaskData.badge = &badge_inst;
 11752  1653  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11753  1654  0021               	movlb	1	; select bank1
 11754  1655  00E6               	movwf	??_main^(0+128)
 11755  1656  0866               	movf	??_main^(0+128),w
 11756  1657  0024               	movlb	4	; select bank4
 11757  1658  00C2               	movwf	_locked_TaskData^(0+512)
 11758                           
 11759                           ;main.c: 215: secret_TaskData.badge = &badge_inst;
 11760  1659  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11761  165A  0021               	movlb	1	; select bank1
 11762  165B  00E6               	movwf	??_main^(0+128)
 11763  165C  0866               	movf	??_main^(0+128),w
 11764  165D  0025               	movlb	5	; select bank5
 11765  165E  00D8               	movwf	_secret_TaskData^(0+640)
 11766                           
 11767                           ;main.c: 218: badge_locked = 1;
 11768  165F  01FC               	clrf	_badge_locked
 11769  1660  0AFC               	incf	_badge_locked,f
 11770                           
 11771                           ;main.c: 221: flashy_task.taskData = (void *) &flashy_TaskData;
 11772  1661  30A0               	movlw	low _flashy_TaskData
 11773  1662  0021               	movlb	1	; select bank1
 11774  1663  00CF               	movwf	(low ((_flashy_task| 0+2)))^(0+128)
 11775  1664  3003               	movlw	high _flashy_TaskData
 11776  1665  00D0               	movwf	((low ((_flashy_task| 0+2))+1))^(0+128)
 11777                           
 11778                           ;main.c: 222: flashy_task.taskInitCallback = flashy_Init;
 11779  1666  30C5               	movlw	low _flashy_Init
 11780  1667  00D1               	movwf	(low ((_flashy_task| 0+4)))^(0+128)
 11781  1668  3014               	movlw	high _flashy_Init
 11782  1669  00D2               	movwf	((low ((_flashy_task| 0+4)))^(0+128)+1)
 11783                           
 11784                           ;main.c: 223: flashy_task.taskExecuteCallback = flashy_Main;
 11785  166A  304B               	movlw	low _flashy_Main
 11786  166B  00D5               	movwf	(low ((_flashy_task| 0+8)))^(0+128)
 11787  166C  3008               	movlw	high _flashy_Main
 11788  166D  00D6               	movwf	((low ((_flashy_task| 0+8)))^(0+128)+1)
 11789                           
 11790                           ;main.c: 224: flashy_task.taskExitCallback = flashy_Exit;
 11791  166E  3000               	movlw	0
 11792  166F  00D3               	movwf	(low ((_flashy_task| 0+6)))^(0+128)
 11793  1670  3000               	movlw	0
 11794  1671  00D4               	movwf	((low ((_flashy_task| 0+6)))^(0+128)+1)
 11795                           
 11796                           ;main.c: 225: flashy_task.taskInterval = 10;
 11797  1672  300A               	movlw	10
 11798  1673  00D7               	movwf	(_flashy_task^(0+128)+10)
 11799  1674  3000               	movlw	0
 11800  1675  00D8               	movwf	(_flashy_task^(0+128)+11)
 11801                           
 11802                           ;main.c: 227: menu_task.taskData = (void *) &menu_TaskData;
 11803  1676  305E               	movlw	low _menu_TaskData
 11804  1677  00C2               	movwf	(low ((_menu_task| 0+2)))^(0+128)
 11805  1678  3002               	movlw	high _menu_TaskData
 11806  1679  00C3               	movwf	((low ((_menu_task| 0+2))+1))^(0+128)
 11807                           
 11808                           ;main.c: 228: menu_task.taskInitCallback = menu_Init;
 11809  167A  3018               	movlw	low _menu_Init
 11810  167B  00C4               	movwf	(low ((_menu_task| 0+4)))^(0+128)
 11811  167C  3012               	movlw	high _menu_Init
 11812  167D  00C5               	movwf	((low ((_menu_task| 0+4)))^(0+128)+1)
 11813                           
 11814                           ;main.c: 229: menu_task.taskExecuteCallback = menu_Main;
 11815  167E  30A7               	movlw	low _menu_Main
 11816  167F  00C8               	movwf	(low ((_menu_task| 0+8)))^(0+128)
 11817  1680  3000               	movlw	high _menu_Main
 11818  1681  00C9               	movwf	((low ((_menu_task| 0+8)))^(0+128)+1)
 11819                           
 11820                           ;main.c: 230: menu_task.taskExitCallback = menu_Exit;
 11821  1682  3000               	movlw	0
 11822  1683  00C6               	movwf	(low ((_menu_task| 0+6)))^(0+128)
 11823  1684  3000               	movlw	0
 11824  1685  00C7               	movwf	((low ((_menu_task| 0+6)))^(0+128)+1)
 11825                           
 11826                           ;main.c: 231: menu_task.taskInterval = 10;
 11827  1686  300A               	movlw	10
 11828  1687  00CA               	movwf	(_menu_task^(0+128)+10)
 11829  1688  3000               	movlw	0
 11830  1689  00CB               	movwf	(_menu_task^(0+128)+11)
 11831                           
 11832                           ;main.c: 233: slot_task.taskData = (void *) &slot_TaskData;
 11833  168A  3050               	movlw	low _slot_TaskData
 11834  168B  0022               	movlb	2	; select bank2
 11835  168C  00CE               	movwf	(low ((_slot_task| (0+256)+2)))^0
 11836  168D  3002               	movlw	high _slot_TaskData
 11837  168E  00CF               	movwf	((low ((_slot_task| (0+256)+2))+1))^0
 11838                           
 11839                           ;main.c: 234: slot_task.taskInitCallback = slot_Init;
 11840  168F  308A               	movlw	low _slot_Init
 11841  1690  00D0               	movwf	(low ((_slot_task| (0+256)+4)))^0
 11842  1691  301E               	movlw	high _slot_Init
 11843  1692  00D1               	movwf	((low ((_slot_task| (0+256)+4)))^0+1)
 11844                           
 11845                           ;main.c: 235: slot_task.taskExecuteCallback = slot_Main;
 11846  1693  3043               	movlw	low _slot_Main
 11847  1694  00D4               	movwf	(low ((_slot_task| (0+256)+8)))^0
 11848  1695  3014               	movlw	high _slot_Main
 11849  1696  00D5               	movwf	((low ((_slot_task| (0+256)+8)))^0+1)
 11850                           
 11851                           ;main.c: 236: slot_task.taskExitCallback = slot_Exit;
 11852  1697  3000               	movlw	0
 11853  1698  00D2               	movwf	(low ((_slot_task| (0+256)+6)))^0
 11854  1699  3000               	movlw	0
 11855  169A  00D3               	movwf	((low ((_slot_task| (0+256)+6)))^0+1)
 11856                           
 11857                           ;main.c: 237: slot_task.taskInterval = 10;
 11858  169B  300A               	movlw	10
 11859  169C  00D6               	movwf	(_slot_task^(0+256)+10)
 11860  169D  3000               	movlw	0
 11861  169E  00D7               	movwf	(_slot_task^(0+256)+11)
 11862                           
 11863                           ;main.c: 239: locked_task.taskData = (void *) &locked_TaskData;
 11864  169F  3042               	movlw	low _locked_TaskData
 11865  16A0  00C1               	movwf	(low ((_locked_task| (0+256)+2)))^0
 11866  16A1  3002               	movlw	high _locked_TaskData
 11867  16A2  00C2               	movwf	((low ((_locked_task| (0+256)+2))+1))^0
 11868                           
 11869                           ;main.c: 240: locked_task.taskInitCallback = locked_Init;
 11870  16A3  307A               	movlw	low _locked_Init
 11871  16A4  00C3               	movwf	(low ((_locked_task| (0+256)+4)))^0
 11872  16A5  3012               	movlw	high _locked_Init
 11873  16A6  00C4               	movwf	((low ((_locked_task| (0+256)+4)))^0+1)
 11874                           
 11875                           ;main.c: 241: locked_task.taskExecuteCallback = locked_Main;
 11876  16A7  3093               	movlw	low _locked_Main
 11877  16A8  00C7               	movwf	(low ((_locked_task| (0+256)+8)))^0
 11878  16A9  3002               	movlw	high _locked_Main
 11879  16AA  00C8               	movwf	((low ((_locked_task| (0+256)+8)))^0+1)
 11880                           
 11881                           ;main.c: 242: locked_task.taskExitCallback = locked_Exit;
 11882  16AB  3000               	movlw	0
 11883  16AC  00C5               	movwf	(low ((_locked_task| (0+256)+6)))^0
 11884  16AD  3000               	movlw	0
 11885  16AE  00C6               	movwf	((low ((_locked_task| (0+256)+6)))^0+1)
 11886                           
 11887                           ;main.c: 243: locked_task.taskInterval = 10;
 11888  16AF  300A               	movlw	10
 11889  16B0  00C9               	movwf	(_locked_task^(0+256)+10)
 11890  16B1  3000               	movlw	0
 11891  16B2  00CA               	movwf	(_locked_task^(0+256)+11)
 11892                           
 11893                           ;main.c: 245: secret_task.taskData = (void *) &secret_TaskData;
 11894  16B3  30D8               	movlw	low _secret_TaskData
 11895  16B4  00B4               	movwf	(low ((_secret_task| (0+256)+2)))^0
 11896  16B5  3002               	movlw	high _secret_TaskData
 11897  16B6  00B5               	movwf	((low ((_secret_task| (0+256)+2))+1))^0
 11898                           
 11899                           ;main.c: 246: secret_task.taskInitCallback = secret_Init;
 11900  16B7  30E4               	movlw	low _secret_Init
 11901  16B8  00B6               	movwf	(low ((_secret_task| (0+256)+4)))^0
 11902  16B9  301E               	movlw	high _secret_Init
 11903  16BA  00B7               	movwf	((low ((_secret_task| (0+256)+4)))^0+1)
 11904                           
 11905                           ;main.c: 247: secret_task.taskExecuteCallback = secret_Main;
 11906  16BB  305D               	movlw	low _secret_Main
 11907  16BC  00BA               	movwf	(low ((_secret_task| (0+256)+8)))^0
 11908  16BD  3004               	movlw	high _secret_Main
 11909  16BE  00BB               	movwf	((low ((_secret_task| (0+256)+8)))^0+1)
 11910                           
 11911                           ;main.c: 248: secret_task.taskExitCallback = secret_Exit;
 11912  16BF  3000               	movlw	0
 11913  16C0  00B8               	movwf	(low ((_secret_task| (0+256)+6)))^0
 11914  16C1  3000               	movlw	0
 11915  16C2  00B9               	movwf	((low ((_secret_task| (0+256)+6)))^0+1)
 11916                           
 11917                           ;main.c: 249: secret_task.taskInterval = 10;
 11918  16C3  300A               	movlw	10
 11919  16C4  00BC               	movwf	(_secret_task^(0+256)+10)
 11920  16C5  3000               	movlw	0
 11921  16C6  00BD               	movwf	(_secret_task^(0+256)+11)
 11922                           
 11923                           ;main.c: 252: secret_value = SECRET_VALUE_INIT;
 11924  16C7  0021               	movlb	1	; select bank1
 11925  16C8  01DA               	clrf	_secret_value^(0+128)
 11926  16C9  01DB               	clrf	(_secret_value+1)^(0+128)
 11927                           
 11928                           ;main.c: 255: currentTask = FLASHY_TASK;
 11929  16CA  3002               	movlw	2
 11930  16CB  00B6               	movwf	_currentTask^(0+128)
 11931  16CC  3000               	movlw	0
 11932  16CD  00B7               	movwf	(_currentTask^(0+128)+1)
 11933                           
 11934                           ;main.c: 256: scheduler_TaskAdd(&schedulerInst, &flashy_task);
 11935  16CE  30CD               	movlw	low _flashy_task
 11936  16CF  0020               	movlb	0	; select bank0
 11937  16D0  00BD               	movwf	scheduler_TaskAdd@task
 11938  16D1  3000               	movlw	high _flashy_task
 11939  16D2  00BE               	movwf	scheduler_TaskAdd@task+1
 11940  16D3  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11941  16D4  3187  276B  3196   	fcall	_scheduler_TaskAdd
 11942                           
 11943                           ;main.c: 257: scheduler_TaskAdd(&schedulerInst, &menu_task);
 11944  16D7  30C0               	movlw	low _menu_task
 11945  16D8  0020               	movlb	0	; select bank0
 11946  16D9  00BD               	movwf	scheduler_TaskAdd@task
 11947  16DA  3000               	movlw	high _menu_task
 11948  16DB  00BE               	movwf	scheduler_TaskAdd@task+1
 11949  16DC  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11950  16DD  3187  276B  3196   	fcall	_scheduler_TaskAdd
 11951                           
 11952                           ;main.c: 258: scheduler_TaskAdd(&schedulerInst, &slot_task);
 11953  16E0  304C               	movlw	low _slot_task
 11954  16E1  0020               	movlb	0	; select bank0
 11955  16E2  00BD               	movwf	scheduler_TaskAdd@task
 11956  16E3  3001               	movlw	high _slot_task
 11957  16E4  00BE               	movwf	scheduler_TaskAdd@task+1
 11958  16E5  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11959  16E6  3187  276B  3196   	fcall	_scheduler_TaskAdd
 11960                           
 11961                           ;main.c: 259: scheduler_TaskAdd(&schedulerInst, &locked_task);
 11962  16E9  303F               	movlw	low _locked_task
 11963  16EA  0020               	movlb	0	; select bank0
 11964  16EB  00BD               	movwf	scheduler_TaskAdd@task
 11965  16EC  3001               	movlw	high _locked_task
 11966  16ED  00BE               	movwf	scheduler_TaskAdd@task+1
 11967  16EE  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11968  16EF  3187  276B  3196   	fcall	_scheduler_TaskAdd
 11969                           
 11970                           ;main.c: 260: scheduler_TaskAdd(&schedulerInst, &secret_task);
 11971  16F2  3032               	movlw	low _secret_task
 11972  16F3  0020               	movlb	0	; select bank0
 11973  16F4  00BD               	movwf	scheduler_TaskAdd@task
 11974  16F5  3001               	movlw	high _secret_task
 11975  16F6  00BE               	movwf	scheduler_TaskAdd@task+1
 11976  16F7  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11977  16F8  3187  276B  3196   	fcall	_scheduler_TaskAdd
 11978  16FB                     l8483:	
 11979                           ;main.c: 262: while(1){
 11980                           
 11981                           
 11982                           ;main.c: 263: schedulerExecute(&schedulerInst);
 11983  16FB  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11984  16FC  3193  23C7  3196   	fcall	_schedulerExecute
 11985  16FF  2EFB               	goto	l8483
 11986  1700                     __end_of_main:	
 11987                           
 11988                           	psect	text1
 11989  1B78                     __ptext1:	
 11990 ;; *************** function _scheduler_TaskInit *****************
 11991 ;; Defined at:
 11992 ;;		line 36 in file "cooperative_scheduler.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;  task            2    1[COMMON] PTR struct t_schedulerTa
 11995 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 11996 ;;		 -> flashy_task(13), 
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      void 
 12001 ;; Registers used:
 12002 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12012 ;;Total ram usage:        4 bytes
 12013 ;; Hardware stack levels used:    1
 12014 ;; Hardware stack levels required when called:    4
 12015 ;; This function calls:
 12016 ;;		Nothing
 12017 ;; This function is called by:
 12018 ;;		_main
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           
 12023                           ;psect for function _scheduler_TaskInit
 12024  1B78                     _scheduler_TaskInit:	
 12025                           
 12026                           ;cooperative_scheduler.c: 37: task->systemTickLastExecuted = 0;
 12027                           
 12028                           ;incstack = 0
 12029                           ; Regs used in _scheduler_TaskInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 12030  1B78  0871               	movf	scheduler_TaskInit@task,w
 12031  1B79  0086               	movwf	6
 12032  1B7A  0872               	movf	scheduler_TaskInit@task+1,w
 12033  1B7B  0087               	movwf	7
 12034  1B7C  3000               	movlw	0
 12035  1B7D  3FC0               	movwi [0]fsr1
 12036  1B7E  3FC1               	movwi [1]fsr1
 12037                           
 12038                           ;cooperative_scheduler.c: 38: task->taskData = (0);
 12039  1B7F  0871               	movf	scheduler_TaskInit@task,w
 12040  1B80  0086               	movwf	6
 12041  1B81  0872               	movf	scheduler_TaskInit@task+1,w
 12042  1B82  0087               	movwf	7
 12043  1B83  3142               	addfsr 1,2
 12044  1B84  3000               	movlw	0
 12045  1B85  3FC0               	movwi [0]fsr1
 12046  1B86  3FC1               	movwi [1]fsr1
 12047                           
 12048                           ;cooperative_scheduler.c: 39: task->taskInitCallback = (0);
 12049  1B87  0871               	movf	scheduler_TaskInit@task,w
 12050  1B88  0086               	movwf	6
 12051  1B89  0872               	movf	scheduler_TaskInit@task+1,w
 12052  1B8A  0087               	movwf	7
 12053  1B8B  3144               	addfsr 1,4
 12054  1B8C  3000               	movlw	0
 12055  1B8D  3FC0               	movwi [0]fsr1
 12056  1B8E  3FC1               	movwi [1]fsr1
 12057                           
 12058                           ;cooperative_scheduler.c: 40: task->taskExitCallback = (0);
 12059  1B8F  0871               	movf	scheduler_TaskInit@task,w
 12060  1B90  0086               	movwf	6
 12061  1B91  0872               	movf	scheduler_TaskInit@task+1,w
 12062  1B92  0087               	movwf	7
 12063  1B93  3146               	addfsr 1,6
 12064  1B94  3000               	movlw	0
 12065  1B95  3FC0               	movwi [0]fsr1
 12066  1B96  3FC1               	movwi [1]fsr1
 12067                           
 12068                           ;cooperative_scheduler.c: 41: task->taskExecuteCallback = (0);
 12069  1B97  0871               	movf	scheduler_TaskInit@task,w
 12070  1B98  0086               	movwf	6
 12071  1B99  0872               	movf	scheduler_TaskInit@task+1,w
 12072  1B9A  0087               	movwf	7
 12073  1B9B  3148               	addfsr 1,8
 12074  1B9C  3000               	movlw	0
 12075  1B9D  3FC0               	movwi [0]fsr1
 12076  1B9E  3FC1               	movwi [1]fsr1
 12077                           
 12078                           ;cooperative_scheduler.c: 42: task->taskInterval = 65535;
 12079  1B9F  0871               	movf	scheduler_TaskInit@task,w
 12080  1BA0  0086               	movwf	6
 12081  1BA1  0872               	movf	scheduler_TaskInit@task+1,w
 12082  1BA2  0087               	movwf	7
 12083  1BA3  314A               	addfsr 1,10
 12084  1BA4  30FF               	movlw	255
 12085  1BA5  3FC0               	movwi [0]fsr1
 12086  1BA6  30FF               	movlw	255
 12087  1BA7  3FC1               	movwi [1]fsr1
 12088                           
 12089                           ;cooperative_scheduler.c: 43: task->taskId = -1;
 12090  1BA8  0871               	movf	scheduler_TaskInit@task,w
 12091  1BA9  3E0C               	addlw	12
 12092  1BAA  00F3               	movwf	??_scheduler_TaskInit
 12093  1BAB  3000               	movlw	0
 12094  1BAC  3D72               	addwfc	scheduler_TaskInit@task+1,w
 12095  1BAD  00F4               	movwf	??_scheduler_TaskInit+1
 12096  1BAE  0873               	movf	??_scheduler_TaskInit,w
 12097  1BAF  0086               	movwf	6
 12098  1BB0  0874               	movf	??_scheduler_TaskInit+1,w
 12099  1BB1  0087               	movwf	7
 12100  1BB2  30FF               	movlw	-1
 12101  1BB3  0081               	movwf	1
 12102  1BB4  0008               	return
 12103  1BB5                     __end_of_scheduler_TaskInit:	
 12104                           
 12105                           	psect	text2
 12106  076B                     __ptext2:	
 12107 ;; *************** function _scheduler_TaskAdd *****************
 12108 ;; Defined at:
 12109 ;;		line 46 in file "cooperative_scheduler.c"
 12110 ;; Parameters:    Size  Location     Type
 12111 ;;  scheduler       1    wreg     PTR struct t_scheduler
 12112 ;;		 -> schedulerInst(34), 
 12113 ;;  task            2   29[BANK0 ] PTR struct t_schedulerTa
 12114 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 12115 ;;		 -> flashy_task(13), 
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;  scheduler       1   37[BANK0 ] PTR struct t_scheduler
 12118 ;;		 -> schedulerInst(34), 
 12119 ;;  k               1   38[BANK0 ] unsigned char 
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  1    wreg      char 
 12122 ;; Registers used:
 12123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12131 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12132 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12133 ;;Total ram usage:       10 bytes
 12134 ;; Hardware stack levels used:    1
 12135 ;; Hardware stack levels required when called:   11
 12136 ;; This function calls:
 12137 ;;		Absolute function
 12138 ;;		_flashy_Init
 12139 ;;		_locked_Init
 12140 ;;		_menu_Init
 12141 ;;		_secret_Init
 12142 ;;		_slot_Init
 12143 ;; This function is called by:
 12144 ;;		_main
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           
 12149                           ;psect for function _scheduler_TaskAdd
 12150  076B                     _scheduler_TaskAdd:	
 12151                           
 12152                           ;incstack = 0
 12153                           ; Regs used in _scheduler_TaskAdd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12154                           ;scheduler_TaskAdd@scheduler stored from wreg
 12155  076B  0020               	movlb	0	; select bank0
 12156  076C  00C5               	movwf	scheduler_TaskAdd@scheduler
 12157                           
 12158                           ;cooperative_scheduler.c: 47: u8 k;
 12159                           ;cooperative_scheduler.c: 48: for (k = 0; k < 16; k++) {
 12160  076D  01C6               	clrf	scheduler_TaskAdd@k
 12161  076E  3010               	movlw	16
 12162  076F  0246               	subwf	scheduler_TaskAdd@k,w
 12163  0770  1803               	btfsc	3,0
 12164  0771  2FE0               	goto	l8049
 12165  0772                     l8035:	
 12166                           
 12167                           ;cooperative_scheduler.c: 49: if (!(scheduler->taskEntryVector & (1 << k)) ) {
 12168  0772  0845               	movf	scheduler_TaskAdd@scheduler,w
 12169  0773  3E20               	addlw	32
 12170  0774  0086               	movwf	6
 12171  0775  3002               	movlw	2	; select bank4/5
 12172  0776  0087               	movwf	7
 12173  0777  3F40               	moviw [0]fsr1
 12174  0778  00BF               	movwf	??_scheduler_TaskAdd
 12175  0779  3F41               	moviw [1]fsr1
 12176  077A  00C0               	movwf	??_scheduler_TaskAdd+1
 12177  077B  3001               	movlw	1
 12178  077C  00C1               	movwf	??_scheduler_TaskAdd+2
 12179  077D  3000               	movlw	0
 12180  077E  00C2               	movwf	??_scheduler_TaskAdd+3
 12181  077F  0A46               	incf	scheduler_TaskAdd@k,w
 12182  0780  2F83               	goto	u4744
 12183  0781                     u4745:	
 12184  0781  35C1               	lslf	??_scheduler_TaskAdd+2,f
 12185  0782  0DC2               	rlf	??_scheduler_TaskAdd+3,f
 12186  0783                     u4744:	
 12187  0783  0B89               	decfsz	9,f
 12188  0784  2F81               	goto	u4745
 12189  0785  083F               	movf	??_scheduler_TaskAdd,w
 12190  0786  0541               	andwf	??_scheduler_TaskAdd+2,w
 12191  0787  00C3               	movwf	??_scheduler_TaskAdd+4
 12192  0788  0840               	movf	??_scheduler_TaskAdd+1,w
 12193  0789  0542               	andwf	??_scheduler_TaskAdd+3,w
 12194  078A  00C4               	movwf	??_scheduler_TaskAdd+5
 12195  078B  0843               	movf	??_scheduler_TaskAdd+4,w
 12196  078C  0444               	iorwf	??_scheduler_TaskAdd+5,w
 12197  078D  1D03               	btfss	3,2
 12198  078E  2FD8               	goto	l8045
 12199                           
 12200                           ;cooperative_scheduler.c: 50: scheduler->tasks[k] = task;
 12201  078F  3546               	lslf	scheduler_TaskAdd@k,w
 12202  0790  0745               	addwf	scheduler_TaskAdd@scheduler,w
 12203  0791  00BF               	movwf	??_scheduler_TaskAdd
 12204  0792  083F               	movf	??_scheduler_TaskAdd,w
 12205  0793  0086               	movwf	6
 12206  0794  3002               	movlw	2	; select bank4/5
 12207  0795  0087               	movwf	7
 12208  0796  083D               	movf	scheduler_TaskAdd@task,w
 12209  0797  3FC0               	movwi [0]fsr1
 12210  0798  083E               	movf	scheduler_TaskAdd@task+1,w
 12211  0799  3FC1               	movwi [1]fsr1
 12212                           
 12213                           ;cooperative_scheduler.c: 51: scheduler->taskEntryVector |= (1 << k);
 12214  079A  3001               	movlw	1
 12215  079B  00BF               	movwf	??_scheduler_TaskAdd
 12216  079C  3000               	movlw	0
 12217  079D  00C0               	movwf	??_scheduler_TaskAdd+1
 12218  079E  0A46               	incf	scheduler_TaskAdd@k,w
 12219  079F  2FA2               	goto	u4764
 12220  07A0                     u4765:	
 12221  07A0  35BF               	lslf	??_scheduler_TaskAdd,f
 12222  07A1  0DC0               	rlf	??_scheduler_TaskAdd+1,f
 12223  07A2                     u4764:	
 12224  07A2  0B89               	decfsz	9,f
 12225  07A3  2FA0               	goto	u4765
 12226  07A4  0845               	movf	scheduler_TaskAdd@scheduler,w
 12227  07A5  3E20               	addlw	32
 12228  07A6  0086               	movwf	6
 12229  07A7  3002               	movlw	2	; select bank4/5
 12230  07A8  0087               	movwf	7
 12231  07A9  083F               	movf	??_scheduler_TaskAdd,w
 12232  07AA  0481               	iorwf	1,f
 12233  07AB  3141               	addfsr 1,1
 12234  07AC  0840               	movf	??_scheduler_TaskAdd+1,w
 12235  07AD  0481               	iorwf	1,f
 12236                           
 12237                           ;cooperative_scheduler.c: 53: if (task->taskInitCallback != (0)) {
 12238  07AE  083D               	movf	scheduler_TaskAdd@task,w
 12239  07AF  0086               	movwf	6
 12240  07B0  083E               	movf	scheduler_TaskAdd@task+1,w
 12241  07B1  0087               	movwf	7
 12242  07B2  3144               	addfsr 1,4
 12243  07B3  0016               	moviw fsr1++
 12244  07B4  0401               	iorwf	1,w
 12245  07B5  1903               	btfsc	3,2
 12246  07B6  2FCA               	goto	l8041
 12247                           
 12248                           ;cooperative_scheduler.c: 54: task->taskInitCallback (task->taskData);
 12249  07B7  083D               	movf	scheduler_TaskAdd@task,w
 12250  07B8  0086               	movwf	6
 12251  07B9  083E               	movf	scheduler_TaskAdd@task+1,w
 12252  07BA  0087               	movwf	7
 12253  07BB  3142               	addfsr 1,2
 12254  07BC  3F40               	moviw [0]fsr1
 12255  07BD  00B9               	movwf	secret_Init@taskData
 12256  07BE  3F41               	moviw [1]fsr1
 12257  07BF  00BA               	movwf	secret_Init@taskData+1
 12258  07C0  083D               	movf	scheduler_TaskAdd@task,w
 12259  07C1  0086               	movwf	6
 12260  07C2  083E               	movf	scheduler_TaskAdd@task+1,w
 12261  07C3  0087               	movwf	7
 12262  07C4  3144               	addfsr 1,4
 12263  07C5  3F41               	moviw [1]fsr1
 12264  07C6  008A               	movwf	10
 12265  07C7  3F40               	moviw [0]fsr1
 12266  07C8  000A               	callw
 12267  07C9  3187               	pagesel	$
 12268  07CA                     l8041:	
 12269                           
 12270                           ;cooperative_scheduler.c: 55: }
 12271                           ;cooperative_scheduler.c: 57: task->taskId = (s8) k;
 12272  07CA  0020               	movlb	0	; select bank0
 12273  07CB  083D               	movf	scheduler_TaskAdd@task,w
 12274  07CC  3E0C               	addlw	12
 12275  07CD  00BF               	movwf	??_scheduler_TaskAdd
 12276  07CE  3000               	movlw	0
 12277  07CF  3D3E               	addwfc	scheduler_TaskAdd@task+1,w
 12278  07D0  00C0               	movwf	??_scheduler_TaskAdd+1
 12279  07D1  083F               	movf	??_scheduler_TaskAdd,w
 12280  07D2  0086               	movwf	6
 12281  07D3  0840               	movf	??_scheduler_TaskAdd+1,w
 12282  07D4  0087               	movwf	7
 12283  07D5  0846               	movf	scheduler_TaskAdd@k,w
 12284  07D6  0081               	movwf	1
 12285                           
 12286                           ;cooperative_scheduler.c: 58: return k;
 12287                           ;	Return value of _scheduler_TaskAdd is never used
 12288  07D7  0008               	return
 12289  07D8                     l8045:	
 12290  07D8  3001               	movlw	1
 12291  07D9  00BF               	movwf	??_scheduler_TaskAdd
 12292  07DA  083F               	movf	??_scheduler_TaskAdd,w
 12293  07DB  07C6               	addwf	scheduler_TaskAdd@k,f
 12294  07DC  3010               	movlw	16
 12295  07DD  0246               	subwf	scheduler_TaskAdd@k,w
 12296  07DE  1C03               	skipc
 12297  07DF  2F72               	goto	l8035
 12298  07E0                     l8049:	
 12299                           
 12300                           ;cooperative_scheduler.c: 59: }
 12301                           ;cooperative_scheduler.c: 60: }
 12302                           ;cooperative_scheduler.c: 62: task->taskId = -1;
 12303  07E0  083D               	movf	scheduler_TaskAdd@task,w
 12304  07E1  3E0C               	addlw	12
 12305  07E2  00BF               	movwf	??_scheduler_TaskAdd
 12306  07E3  3000               	movlw	0
 12307  07E4  3D3E               	addwfc	scheduler_TaskAdd@task+1,w
 12308  07E5  00C0               	movwf	??_scheduler_TaskAdd+1
 12309  07E6  083F               	movf	??_scheduler_TaskAdd,w
 12310  07E7  0086               	movwf	6
 12311  07E8  0840               	movf	??_scheduler_TaskAdd+1,w
 12312  07E9  0087               	movwf	7
 12313  07EA  30FF               	movlw	-1
 12314  07EB  0081               	movwf	1
 12315  07EC  0008               	return
 12316  07ED                     __end_of_scheduler_TaskAdd:	
 12317                           ;cooperative_scheduler.c: 63: return -1;
 12318                           ;	Return value of _scheduler_TaskAdd is never used
 12319                           
 12320                           
 12321                           	psect	text3
 12322  1EE4                     __ptext3:	
 12323 ;; *************** function _secret_Init *****************
 12324 ;; Defined at:
 12325 ;;		line 51 in file "secret_task.c"
 12326 ;; Parameters:    Size  Location     Type
 12327 ;;  taskData        2   25[BANK0 ] PTR void 
 12328 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12329 ;;		 -> flashy_TaskData(30), NULL(0), 
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;  data            2   27[BANK0 ] PTR struct t_secret_task
 12332 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12333 ;;		 -> flashy_TaskData(30), NULL(0), 
 12334 ;; Return value:  Size  Location     Type
 12335 ;;                  1    wreg      void 
 12336 ;; Registers used:
 12337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12338 ;; Tracked objects:
 12339 ;;		On entry : 0/0
 12340 ;;		On exit  : 0/0
 12341 ;;		Unchanged: 0/0
 12342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12346 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12347 ;;Total ram usage:        4 bytes
 12348 ;; Hardware stack levels used:    1
 12349 ;; Hardware stack levels required when called:   10
 12350 ;; This function calls:
 12351 ;;		_nullifyBadge_segDisplayErase
 12352 ;;		_nullifyBadge_segDisplayRegister
 12353 ;;		_nullifyBadge_userLedsClr
 12354 ;;		_nullifyBadge_userLedsRegister
 12355 ;; This function is called by:
 12356 ;;		_main
 12357 ;;		_scheduler_TaskAdd
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           
 12362                           ;psect for function _secret_Init
 12363  1EE4                     _secret_Init:	
 12364                           
 12365                           ;secret_task.c: 52: struct t_secret_taskData *data = (struct t_secret_taskData *) taskDa
      +                          ta;
 12366                           
 12367                           ;incstack = 0
 12368                           ; Regs used in _secret_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12369  1EE4  0020               	movlb	0	; select bank0
 12370  1EE5  083A               	movf	secret_Init@taskData+1,w
 12371  1EE6  00BC               	movwf	secret_Init@data+1
 12372  1EE7  0839               	movf	secret_Init@taskData,w
 12373  1EE8  00BB               	movwf	secret_Init@data
 12374                           
 12375                           ;secret_task.c: 55: nullifyBadge_userLedsRegister(data->badge);
 12376  1EE9  083B               	movf	secret_Init@data,w
 12377  1EEA  0086               	movwf	6
 12378  1EEB  083C               	movf	secret_Init@data+1,w
 12379  1EEC  0087               	movwf	7
 12380  1EED  0801               	movf	1,w
 12381  1EEE  31A7  271D  319E   	fcall	_nullifyBadge_userLedsRegister
 12382                           
 12383                           ;secret_task.c: 56: nullifyBadge_userLedsClr(data->badge);
 12384  1EF1  0020               	movlb	0	; select bank0
 12385  1EF2  083B               	movf	secret_Init@data,w
 12386  1EF3  0086               	movwf	6
 12387  1EF4  083C               	movf	secret_Init@data+1,w
 12388  1EF5  0087               	movwf	7
 12389  1EF6  0801               	movf	1,w
 12390  1EF7  31A6  2621  319E   	fcall	_nullifyBadge_userLedsClr
 12391                           
 12392                           ;secret_task.c: 57: nullifyBadge_segDisplayRegister(data->badge);
 12393  1EFA  0020               	movlb	0	; select bank0
 12394  1EFB  083B               	movf	secret_Init@data,w
 12395  1EFC  0086               	movwf	6
 12396  1EFD  083C               	movf	secret_Init@data+1,w
 12397  1EFE  0087               	movwf	7
 12398  1EFF  0801               	movf	1,w
 12399  1F00  31A6  262F  319E   	fcall	_nullifyBadge_segDisplayRegister
 12400                           
 12401                           ;secret_task.c: 58: nullifyBadge_segDisplayErase(data->badge);
 12402  1F03  0020               	movlb	0	; select bank0
 12403  1F04  083B               	movf	secret_Init@data,w
 12404  1F05  0086               	movwf	6
 12405  1F06  083C               	movf	secret_Init@data+1,w
 12406  1F07  0087               	movwf	7
 12407  1F08  0801               	movf	1,w
 12408  1F09  31A6  261B  319E   	fcall	_nullifyBadge_segDisplayErase
 12409                           
 12410                           ;secret_task.c: 61: data->delayTickCount = 300;
 12411  1F0C  0020               	movlb	0	; select bank0
 12412  1F0D  083B               	movf	secret_Init@data,w
 12413  1F0E  0086               	movwf	6
 12414  1F0F  083C               	movf	secret_Init@data+1,w
 12415  1F10  0087               	movwf	7
 12416  1F11  3142               	addfsr 1,2
 12417  1F12  302C               	movlw	44
 12418  1F13  3FC0               	movwi [0]fsr1
 12419  1F14  3001               	movlw	1
 12420  1F15  3FC1               	movwi [1]fsr1
 12421                           
 12422                           ;secret_task.c: 62: data->holdCountA = 0;
 12423  1F16  083B               	movf	secret_Init@data,w
 12424  1F17  0086               	movwf	6
 12425  1F18  083C               	movf	secret_Init@data+1,w
 12426  1F19  0087               	movwf	7
 12427  1F1A  3144               	addfsr 1,4
 12428  1F1B  3000               	movlw	0
 12429  1F1C  3FC0               	movwi [0]fsr1
 12430  1F1D  3FC1               	movwi [1]fsr1
 12431                           
 12432                           ;secret_task.c: 63: data->holdCountB = 0;
 12433  1F1E  083B               	movf	secret_Init@data,w
 12434  1F1F  0086               	movwf	6
 12435  1F20  083C               	movf	secret_Init@data+1,w
 12436  1F21  0087               	movwf	7
 12437  1F22  3146               	addfsr 1,6
 12438  1F23  3000               	movlw	0
 12439  1F24  3FC0               	movwi [0]fsr1
 12440  1F25  3FC1               	movwi [1]fsr1
 12441                           
 12442                           ;secret_task.c: 64: data->holdCountX = 0;
 12443  1F26  083B               	movf	secret_Init@data,w
 12444  1F27  0086               	movwf	6
 12445  1F28  083C               	movf	secret_Init@data+1,w
 12446  1F29  0087               	movwf	7
 12447  1F2A  3148               	addfsr 1,8
 12448  1F2B  3000               	movlw	0
 12449  1F2C  3FC0               	movwi [0]fsr1
 12450  1F2D  3FC1               	movwi [1]fsr1
 12451                           
 12452                           ;secret_task.c: 65: data->holdCountY = 0;
 12453  1F2E  083B               	movf	secret_Init@data,w
 12454  1F2F  0086               	movwf	6
 12455  1F30  083C               	movf	secret_Init@data+1,w
 12456  1F31  0087               	movwf	7
 12457  1F32  314A               	addfsr 1,10
 12458  1F33  3000               	movlw	0
 12459  1F34  3FC0               	movwi [0]fsr1
 12460  1F35  3FC1               	movwi [1]fsr1
 12461                           
 12462                           ;secret_task.c: 66: data->noholdCount = 0;
 12463  1F36  083B               	movf	secret_Init@data,w
 12464  1F37  0086               	movwf	6
 12465  1F38  083C               	movf	secret_Init@data+1,w
 12466  1F39  0087               	movwf	7
 12467  1F3A  314C               	addfsr 1,12
 12468  1F3B  3000               	movlw	0
 12469  1F3C  3FC0               	movwi [0]fsr1
 12470  1F3D  3FC1               	movwi [1]fsr1
 12471  1F3E  0008               	return
 12472  1F3F                     __end_of_secret_Init:	
 12473                           
 12474                           	psect	text4
 12475  127A                     __ptext4:	
 12476 ;; *************** function _locked_Init *****************
 12477 ;; Defined at:
 12478 ;;		line 64 in file "locked_task.c"
 12479 ;; Parameters:    Size  Location     Type
 12480 ;;  taskData        2   25[BANK0 ] PTR void 
 12481 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12482 ;;		 -> flashy_TaskData(30), NULL(0), 
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;  data            2   27[BANK0 ] PTR struct t_locked_task
 12485 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12486 ;;		 -> flashy_TaskData(30), NULL(0), 
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  1    wreg      void 
 12489 ;; Registers used:
 12490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12491 ;; Tracked objects:
 12492 ;;		On entry : 0/0
 12493 ;;		On exit  : 0/0
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12497 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12499 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12500 ;;Total ram usage:        4 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:   10
 12503 ;; This function calls:
 12504 ;;		_locked_lock_leds
 12505 ;;		_nullifyBadge_segDisplayErase
 12506 ;;		_nullifyBadge_segDisplayRegister
 12507 ;;		_nullifyBadge_userLedsClr
 12508 ;;		_nullifyBadge_userLedsRegister
 12509 ;; This function is called by:
 12510 ;;		_main
 12511 ;;		_scheduler_TaskAdd
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           
 12516                           ;psect for function _locked_Init
 12517  127A                     _locked_Init:	
 12518                           
 12519                           ;locked_task.c: 65: struct t_locked_taskData *data = (struct t_locked_taskData *) taskDa
      +                          ta;
 12520                           
 12521                           ;incstack = 0
 12522                           ; Regs used in _locked_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12523  127A  0020               	movlb	0	; select bank0
 12524  127B  083A               	movf	locked_Init@taskData+1,w
 12525  127C  00BC               	movwf	locked_Init@data+1
 12526  127D  0839               	movf	locked_Init@taskData,w
 12527  127E  00BB               	movwf	locked_Init@data
 12528                           
 12529                           ;locked_task.c: 68: nullifyBadge_userLedsRegister(data->badge);
 12530  127F  083B               	movf	locked_Init@data,w
 12531  1280  0086               	movwf	6
 12532  1281  083C               	movf	locked_Init@data+1,w
 12533  1282  0087               	movwf	7
 12534  1283  0801               	movf	1,w
 12535  1284  31A7  271D  3192   	fcall	_nullifyBadge_userLedsRegister
 12536                           
 12537                           ;locked_task.c: 69: nullifyBadge_userLedsClr(data->badge);
 12538  1287  0020               	movlb	0	; select bank0
 12539  1288  083B               	movf	locked_Init@data,w
 12540  1289  0086               	movwf	6
 12541  128A  083C               	movf	locked_Init@data+1,w
 12542  128B  0087               	movwf	7
 12543  128C  0801               	movf	1,w
 12544  128D  31A6  2621  3192   	fcall	_nullifyBadge_userLedsClr
 12545                           
 12546                           ;locked_task.c: 70: nullifyBadge_segDisplayRegister(data->badge);
 12547  1290  0020               	movlb	0	; select bank0
 12548  1291  083B               	movf	locked_Init@data,w
 12549  1292  0086               	movwf	6
 12550  1293  083C               	movf	locked_Init@data+1,w
 12551  1294  0087               	movwf	7
 12552  1295  0801               	movf	1,w
 12553  1296  31A6  262F  3192   	fcall	_nullifyBadge_segDisplayRegister
 12554                           
 12555                           ;locked_task.c: 71: nullifyBadge_segDisplayErase(data->badge);
 12556  1299  0020               	movlb	0	; select bank0
 12557  129A  083B               	movf	locked_Init@data,w
 12558  129B  0086               	movwf	6
 12559  129C  083C               	movf	locked_Init@data+1,w
 12560  129D  0087               	movwf	7
 12561  129E  0801               	movf	1,w
 12562  129F  31A6  261B  3192   	fcall	_nullifyBadge_segDisplayErase
 12563                           
 12564                           ;locked_task.c: 74: locked_lock_leds();
 12565  12A2  3198  2047  3192   	fcall	_locked_lock_leds
 12566                           
 12567                           ;locked_task.c: 75: data->state = LOCKED_LOCKED_STATE;
 12568  12A5  0020               	movlb	0	; select bank0
 12569  12A6  083B               	movf	locked_Init@data,w
 12570  12A7  0086               	movwf	6
 12571  12A8  083C               	movf	locked_Init@data+1,w
 12572  12A9  0087               	movwf	7
 12573  12AA  314D               	addfsr 1,13
 12574  12AB  0181               	clrf	1
 12575                           
 12576                           ;locked_task.c: 76: data->delayTickCount = 0;
 12577  12AC  083B               	movf	locked_Init@data,w
 12578  12AD  0086               	movwf	6
 12579  12AE  083C               	movf	locked_Init@data+1,w
 12580  12AF  0087               	movwf	7
 12581  12B0  3141               	addfsr 1,1
 12582  12B1  3000               	movlw	0
 12583  12B2  3FC0               	movwi [0]fsr1
 12584  12B3  3FC1               	movwi [1]fsr1
 12585                           
 12586                           ;locked_task.c: 77: data->holdCountA = 0;
 12587  12B4  083B               	movf	locked_Init@data,w
 12588  12B5  0086               	movwf	6
 12589  12B6  083C               	movf	locked_Init@data+1,w
 12590  12B7  0087               	movwf	7
 12591  12B8  3143               	addfsr 1,3
 12592  12B9  3000               	movlw	0
 12593  12BA  3FC0               	movwi [0]fsr1
 12594  12BB  3FC1               	movwi [1]fsr1
 12595                           
 12596                           ;locked_task.c: 78: data->holdCountB = 0;
 12597  12BC  083B               	movf	locked_Init@data,w
 12598  12BD  0086               	movwf	6
 12599  12BE  083C               	movf	locked_Init@data+1,w
 12600  12BF  0087               	movwf	7
 12601  12C0  3145               	addfsr 1,5
 12602  12C1  3000               	movlw	0
 12603  12C2  3FC0               	movwi [0]fsr1
 12604  12C3  3FC1               	movwi [1]fsr1
 12605                           
 12606                           ;locked_task.c: 79: data->holdCountX = 0;
 12607  12C4  083B               	movf	locked_Init@data,w
 12608  12C5  0086               	movwf	6
 12609  12C6  083C               	movf	locked_Init@data+1,w
 12610  12C7  0087               	movwf	7
 12611  12C8  3147               	addfsr 1,7
 12612  12C9  3000               	movlw	0
 12613  12CA  3FC0               	movwi [0]fsr1
 12614  12CB  3FC1               	movwi [1]fsr1
 12615                           
 12616                           ;locked_task.c: 80: data->holdCountY = 0;
 12617  12CC  083B               	movf	locked_Init@data,w
 12618  12CD  0086               	movwf	6
 12619  12CE  083C               	movf	locked_Init@data+1,w
 12620  12CF  0087               	movwf	7
 12621  12D0  3149               	addfsr 1,9
 12622  12D1  3000               	movlw	0
 12623  12D2  3FC0               	movwi [0]fsr1
 12624  12D3  3FC1               	movwi [1]fsr1
 12625                           
 12626                           ;locked_task.c: 81: data->noholdCount = 0;
 12627  12D4  083B               	movf	locked_Init@data,w
 12628  12D5  0086               	movwf	6
 12629  12D6  083C               	movf	locked_Init@data+1,w
 12630  12D7  0087               	movwf	7
 12631  12D8  314B               	addfsr 1,11
 12632  12D9  3000               	movlw	0
 12633  12DA  3FC0               	movwi [0]fsr1
 12634  12DB  3FC1               	movwi [1]fsr1
 12635  12DC  0008               	return
 12636  12DD                     __end_of_locked_Init:	
 12637                           
 12638                           	psect	text5
 12639  1218                     __ptext5:	
 12640 ;; *************** function _menu_Init *****************
 12641 ;; Defined at:
 12642 ;;		line 32 in file "menu_task.c"
 12643 ;; Parameters:    Size  Location     Type
 12644 ;;  taskData        2   25[BANK0 ] PTR void 
 12645 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12646 ;;		 -> flashy_TaskData(30), NULL(0), 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  data            2   27[BANK0 ] PTR struct t_menu_taskDa
 12649 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12650 ;;		 -> flashy_TaskData(30), NULL(0), 
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  1    wreg      void 
 12653 ;; Registers used:
 12654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12655 ;; Tracked objects:
 12656 ;;		On entry : 0/0
 12657 ;;		On exit  : 0/0
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12661 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12663 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12664 ;;Total ram usage:        4 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:   10
 12667 ;; This function calls:
 12668 ;;		_nullifyBadge_segDisplayErase
 12669 ;;		_nullifyBadge_segDisplayRegister
 12670 ;;		_nullifyBadge_userLedsClr
 12671 ;;		_nullifyBadge_userLedsRegister
 12672 ;; This function is called by:
 12673 ;;		_main
 12674 ;;		_scheduler_TaskAdd
 12675 ;; This function uses a non-reentrant model
 12676 ;;
 12677                           
 12678                           
 12679                           ;psect for function _menu_Init
 12680  1218                     _menu_Init:	
 12681                           
 12682                           ;menu_task.c: 33: struct t_menu_taskData *data = (struct t_menu_taskData *) taskData;
 12683                           
 12684                           ;incstack = 0
 12685                           ; Regs used in _menu_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12686  1218  0020               	movlb	0	; select bank0
 12687  1219  083A               	movf	menu_Init@taskData+1,w
 12688  121A  00BC               	movwf	menu_Init@data+1
 12689  121B  0839               	movf	menu_Init@taskData,w
 12690  121C  00BB               	movwf	menu_Init@data
 12691                           
 12692                           ;menu_task.c: 36: nullifyBadge_userLedsRegister(data->badge);
 12693  121D  083B               	movf	menu_Init@data,w
 12694  121E  0086               	movwf	6
 12695  121F  083C               	movf	menu_Init@data+1,w
 12696  1220  0087               	movwf	7
 12697  1221  0801               	movf	1,w
 12698  1222  31A7  271D  3192   	fcall	_nullifyBadge_userLedsRegister
 12699                           
 12700                           ;menu_task.c: 37: nullifyBadge_userLedsClr(data->badge);
 12701  1225  0020               	movlb	0	; select bank0
 12702  1226  083B               	movf	menu_Init@data,w
 12703  1227  0086               	movwf	6
 12704  1228  083C               	movf	menu_Init@data+1,w
 12705  1229  0087               	movwf	7
 12706  122A  0801               	movf	1,w
 12707  122B  31A6  2621  3192   	fcall	_nullifyBadge_userLedsClr
 12708                           
 12709                           ;menu_task.c: 38: nullifyBadge_segDisplayRegister(data->badge);
 12710  122E  0020               	movlb	0	; select bank0
 12711  122F  083B               	movf	menu_Init@data,w
 12712  1230  0086               	movwf	6
 12713  1231  083C               	movf	menu_Init@data+1,w
 12714  1232  0087               	movwf	7
 12715  1233  0801               	movf	1,w
 12716  1234  31A6  262F  3192   	fcall	_nullifyBadge_segDisplayRegister
 12717                           
 12718                           ;menu_task.c: 39: nullifyBadge_segDisplayErase(data->badge);
 12719  1237  0020               	movlb	0	; select bank0
 12720  1238  083B               	movf	menu_Init@data,w
 12721  1239  0086               	movwf	6
 12722  123A  083C               	movf	menu_Init@data+1,w
 12723  123B  0087               	movwf	7
 12724  123C  0801               	movf	1,w
 12725  123D  31A6  261B  3192   	fcall	_nullifyBadge_segDisplayErase
 12726                           
 12727                           ;menu_task.c: 42: data->delayTickCount = 50;
 12728  1240  0020               	movlb	0	; select bank0
 12729  1241  083B               	movf	menu_Init@data,w
 12730  1242  0086               	movwf	6
 12731  1243  083C               	movf	menu_Init@data+1,w
 12732  1244  0087               	movwf	7
 12733  1245  3142               	addfsr 1,2
 12734  1246  3032               	movlw	50
 12735  1247  3FC0               	movwi [0]fsr1
 12736  1248  3000               	movlw	0
 12737  1249  3FC1               	movwi [1]fsr1
 12738                           
 12739                           ;menu_task.c: 43: data->holdCountA = 0;
 12740  124A  083B               	movf	menu_Init@data,w
 12741  124B  0086               	movwf	6
 12742  124C  083C               	movf	menu_Init@data+1,w
 12743  124D  0087               	movwf	7
 12744  124E  3144               	addfsr 1,4
 12745  124F  3000               	movlw	0
 12746  1250  3FC0               	movwi [0]fsr1
 12747  1251  3FC1               	movwi [1]fsr1
 12748                           
 12749                           ;menu_task.c: 44: data->holdCountB = 0;
 12750  1252  083B               	movf	menu_Init@data,w
 12751  1253  0086               	movwf	6
 12752  1254  083C               	movf	menu_Init@data+1,w
 12753  1255  0087               	movwf	7
 12754  1256  3146               	addfsr 1,6
 12755  1257  3000               	movlw	0
 12756  1258  3FC0               	movwi [0]fsr1
 12757  1259  3FC1               	movwi [1]fsr1
 12758                           
 12759                           ;menu_task.c: 45: data->holdCountX = 0;
 12760  125A  083B               	movf	menu_Init@data,w
 12761  125B  0086               	movwf	6
 12762  125C  083C               	movf	menu_Init@data+1,w
 12763  125D  0087               	movwf	7
 12764  125E  3148               	addfsr 1,8
 12765  125F  3000               	movlw	0
 12766  1260  3FC0               	movwi [0]fsr1
 12767  1261  3FC1               	movwi [1]fsr1
 12768                           
 12769                           ;menu_task.c: 46: data->holdCountY = 0;
 12770  1262  083B               	movf	menu_Init@data,w
 12771  1263  0086               	movwf	6
 12772  1264  083C               	movf	menu_Init@data+1,w
 12773  1265  0087               	movwf	7
 12774  1266  314A               	addfsr 1,10
 12775  1267  3000               	movlw	0
 12776  1268  3FC0               	movwi [0]fsr1
 12777  1269  3FC1               	movwi [1]fsr1
 12778                           
 12779                           ;menu_task.c: 47: data->noholdCount = 0;
 12780  126A  083B               	movf	menu_Init@data,w
 12781  126B  0086               	movwf	6
 12782  126C  083C               	movf	menu_Init@data+1,w
 12783  126D  0087               	movwf	7
 12784  126E  314C               	addfsr 1,12
 12785  126F  3000               	movlw	0
 12786  1270  3FC0               	movwi [0]fsr1
 12787  1271  3FC1               	movwi [1]fsr1
 12788                           
 12789                           ;menu_task.c: 49: menu_option_idx = 0;
 12790  1272  0021               	movlb	1	; select bank1
 12791  1273  01B4               	clrf	_menu_option_idx^(0+128)
 12792  1274  01B5               	clrf	(_menu_option_idx+1)^(0+128)
 12793                           
 12794                           ;menu_task.c: 51: menu_option_size = sizeof(menu_option)/sizeof(menu_option[0]);
 12795  1275  3004               	movlw	4
 12796  1276  00B2               	movwf	_menu_option_size^(0+128)
 12797  1277  3000               	movlw	0
 12798  1278  00B3               	movwf	(_menu_option_size^(0+128)+1)
 12799  1279  0008               	return
 12800  127A                     __end_of_menu_Init:	
 12801                           
 12802                           	psect	text6
 12803  14C5                     __ptext6:	
 12804 ;; *************** function _flashy_Init *****************
 12805 ;; Defined at:
 12806 ;;		line 46 in file "flashy_task.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;  taskData        2   25[BANK0 ] PTR void 
 12809 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12810 ;;		 -> flashy_TaskData(30), NULL(0), 
 12811 ;; Auto vars:     Size  Location     Type
 12812 ;;  data            2   27[BANK0 ] PTR struct t_flashy_task
 12813 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12814 ;;		 -> flashy_TaskData(30), NULL(0), 
 12815 ;; Return value:  Size  Location     Type
 12816 ;;                  1    wreg      void 
 12817 ;; Registers used:
 12818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12819 ;; Tracked objects:
 12820 ;;		On entry : 0/0
 12821 ;;		On exit  : 0/0
 12822 ;;		Unchanged: 0/0
 12823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12825 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12827 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12828 ;;Total ram usage:        4 bytes
 12829 ;; Hardware stack levels used:    1
 12830 ;; Hardware stack levels required when called:   10
 12831 ;; This function calls:
 12832 ;;		_nullifyBadge_segDisplayErase
 12833 ;;		_nullifyBadge_segDisplayRegister
 12834 ;;		_nullifyBadge_userLedsClr
 12835 ;;		_nullifyBadge_userLedsRegister
 12836 ;; This function is called by:
 12837 ;;		_main
 12838 ;;		_scheduler_TaskAdd
 12839 ;; This function uses a non-reentrant model
 12840 ;;
 12841                           
 12842                           
 12843                           ;psect for function _flashy_Init
 12844  14C5                     _flashy_Init:	
 12845                           
 12846                           ;flashy_task.c: 47: struct t_flashy_taskData *data = (struct t_flashy_taskData *) taskDa
      +                          ta;
 12847                           
 12848                           ;incstack = 0
 12849                           ; Regs used in _flashy_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12850  14C5  0020               	movlb	0	; select bank0
 12851  14C6  083A               	movf	flashy_Init@taskData+1,w
 12852  14C7  00BC               	movwf	flashy_Init@data+1
 12853  14C8  0839               	movf	flashy_Init@taskData,w
 12854  14C9  00BB               	movwf	flashy_Init@data
 12855                           
 12856                           ;flashy_task.c: 50: nullifyBadge_userLedsRegister(data->badge);
 12857  14CA  083B               	movf	flashy_Init@data,w
 12858  14CB  0086               	movwf	6
 12859  14CC  083C               	movf	flashy_Init@data+1,w
 12860  14CD  0087               	movwf	7
 12861  14CE  0801               	movf	1,w
 12862  14CF  31A7  271D  3194   	fcall	_nullifyBadge_userLedsRegister
 12863                           
 12864                           ;flashy_task.c: 51: nullifyBadge_userLedsClr(data->badge);
 12865  14D2  0020               	movlb	0	; select bank0
 12866  14D3  083B               	movf	flashy_Init@data,w
 12867  14D4  0086               	movwf	6
 12868  14D5  083C               	movf	flashy_Init@data+1,w
 12869  14D6  0087               	movwf	7
 12870  14D7  0801               	movf	1,w
 12871  14D8  31A6  2621  3194   	fcall	_nullifyBadge_userLedsClr
 12872                           
 12873                           ;flashy_task.c: 52: nullifyBadge_segDisplayRegister(data->badge);
 12874  14DB  0020               	movlb	0	; select bank0
 12875  14DC  083B               	movf	flashy_Init@data,w
 12876  14DD  0086               	movwf	6
 12877  14DE  083C               	movf	flashy_Init@data+1,w
 12878  14DF  0087               	movwf	7
 12879  14E0  0801               	movf	1,w
 12880  14E1  31A6  262F  3194   	fcall	_nullifyBadge_segDisplayRegister
 12881                           
 12882                           ;flashy_task.c: 53: nullifyBadge_segDisplayErase(data->badge);
 12883  14E4  0020               	movlb	0	; select bank0
 12884  14E5  083B               	movf	flashy_Init@data,w
 12885  14E6  0086               	movwf	6
 12886  14E7  083C               	movf	flashy_Init@data+1,w
 12887  14E8  0087               	movwf	7
 12888  14E9  0801               	movf	1,w
 12889  14EA  31A6  261B  3194   	fcall	_nullifyBadge_segDisplayErase
 12890                           
 12891                           ;flashy_task.c: 59: data->delayTickCount = 35;
 12892  14ED  0020               	movlb	0	; select bank0
 12893  14EE  083B               	movf	flashy_Init@data,w
 12894  14EF  0086               	movwf	6
 12895  14F0  083C               	movf	flashy_Init@data+1,w
 12896  14F1  0087               	movwf	7
 12897  14F2  3141               	addfsr 1,1
 12898  14F3  3023               	movlw	35
 12899  14F4  3FC0               	movwi [0]fsr1
 12900  14F5  3000               	movlw	0
 12901  14F6  3FC1               	movwi [1]fsr1
 12902                           
 12903                           ;flashy_task.c: 60: data->displayTickCount = 0;
 12904  14F7  083B               	movf	flashy_Init@data,w
 12905  14F8  0086               	movwf	6
 12906  14F9  083C               	movf	flashy_Init@data+1,w
 12907  14FA  0087               	movwf	7
 12908  14FB  3144               	addfsr 1,4
 12909  14FC  3000               	movlw	0
 12910  14FD  3FC0               	movwi [0]fsr1
 12911  14FE  3FC1               	movwi [1]fsr1
 12912                           
 12913                           ;flashy_task.c: 63: data->holdCountA = 0;
 12914  14FF  083B               	movf	flashy_Init@data,w
 12915  1500  0086               	movwf	6
 12916  1501  083C               	movf	flashy_Init@data+1,w
 12917  1502  0087               	movwf	7
 12918  1503  314A               	addfsr 1,10
 12919  1504  3000               	movlw	0
 12920  1505  3FC0               	movwi [0]fsr1
 12921  1506  3FC1               	movwi [1]fsr1
 12922                           
 12923                           ;flashy_task.c: 64: data->holdCountB = 0;
 12924  1507  083B               	movf	flashy_Init@data,w
 12925  1508  0086               	movwf	6
 12926  1509  083C               	movf	flashy_Init@data+1,w
 12927  150A  0087               	movwf	7
 12928  150B  314C               	addfsr 1,12
 12929  150C  3000               	movlw	0
 12930  150D  3FC0               	movwi [0]fsr1
 12931  150E  3FC1               	movwi [1]fsr1
 12932                           
 12933                           ;flashy_task.c: 65: data->holdCountX = 0;
 12934  150F  083B               	movf	flashy_Init@data,w
 12935  1510  0086               	movwf	6
 12936  1511  083C               	movf	flashy_Init@data+1,w
 12937  1512  0087               	movwf	7
 12938  1513  314E               	addfsr 1,14
 12939  1514  3000               	movlw	0
 12940  1515  3FC0               	movwi [0]fsr1
 12941  1516  3FC1               	movwi [1]fsr1
 12942                           
 12943                           ;flashy_task.c: 66: data->holdCountY = 0;
 12944  1517  083B               	movf	flashy_Init@data,w
 12945  1518  0086               	movwf	6
 12946  1519  083C               	movf	flashy_Init@data+1,w
 12947  151A  0087               	movwf	7
 12948  151B  3150               	addfsr 1,16
 12949  151C  3000               	movlw	0
 12950  151D  3FC0               	movwi [0]fsr1
 12951  151E  3FC1               	movwi [1]fsr1
 12952                           
 12953                           ;flashy_task.c: 67: data->holdCountXY = 0;
 12954  151F  083B               	movf	flashy_Init@data,w
 12955  1520  0086               	movwf	6
 12956  1521  083C               	movf	flashy_Init@data+1,w
 12957  1522  0087               	movwf	7
 12958  1523  3152               	addfsr 1,18
 12959  1524  3000               	movlw	0
 12960  1525  3FC0               	movwi [0]fsr1
 12961  1526  3FC1               	movwi [1]fsr1
 12962                           
 12963                           ;flashy_task.c: 68: data->holdCountAY = 0;
 12964  1527  083B               	movf	flashy_Init@data,w
 12965  1528  0086               	movwf	6
 12966  1529  083C               	movf	flashy_Init@data+1,w
 12967  152A  0087               	movwf	7
 12968  152B  3154               	addfsr 1,20
 12969  152C  3000               	movlw	0
 12970  152D  3FC0               	movwi [0]fsr1
 12971  152E  3FC1               	movwi [1]fsr1
 12972                           
 12973                           ;flashy_task.c: 69: data->holdCountAX = 0;
 12974  152F  083B               	movf	flashy_Init@data,w
 12975  1530  0086               	movwf	6
 12976  1531  083C               	movf	flashy_Init@data+1,w
 12977  1532  0087               	movwf	7
 12978  1533  3156               	addfsr 1,22
 12979  1534  3000               	movlw	0
 12980  1535  3FC0               	movwi [0]fsr1
 12981  1536  3FC1               	movwi [1]fsr1
 12982                           
 12983                           ;flashy_task.c: 70: data->noholdCount = 0;
 12984  1537  083B               	movf	flashy_Init@data,w
 12985  1538  0086               	movwf	6
 12986  1539  083C               	movf	flashy_Init@data+1,w
 12987  153A  0087               	movwf	7
 12988  153B  315C               	addfsr 1,28
 12989  153C  3000               	movlw	0
 12990  153D  3FC0               	movwi [0]fsr1
 12991  153E  3FC1               	movwi [1]fsr1
 12992                           
 12993                           ;flashy_task.c: 72: flashy_leds_idx = 0;
 12994  153F  0021               	movlb	1	; select bank1
 12995  1540  01B0               	clrf	_flashy_leds_idx^(0+128)
 12996  1541  01B1               	clrf	(_flashy_leds_idx+1)^(0+128)
 12997                           
 12998                           ;flashy_task.c: 73: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 12999  1542  0020               	movlb	0	; select bank0
 13000  1543  083B               	movf	flashy_Init@data,w
 13001  1544  0086               	movwf	6
 13002  1545  083C               	movf	flashy_Init@data+1,w
 13003  1546  0087               	movwf	7
 13004  1547  3143               	addfsr 1,3
 13005  1548  0181               	clrf	1
 13006                           
 13007                           ;flashy_task.c: 74: flashy_option_idx = 0;
 13008  1549  0021               	movlb	1	; select bank1
 13009  154A  01A6               	clrf	_flashy_option_idx^(0+128)
 13010  154B  01A7               	clrf	(_flashy_option_idx+1)^(0+128)
 13011                           
 13012                           ;flashy_task.c: 76: flashy_option_size = sizeof(flashy_option)/sizeof(flashy_option[0]);
 13013  154C  300A               	movlw	10
 13014  154D  00A4               	movwf	_flashy_option_size^(0+128)
 13015  154E  3000               	movlw	0
 13016  154F  00A5               	movwf	(_flashy_option_size^(0+128)+1)
 13017                           
 13018                           ;flashy_task.c: 78: flashy_sparkle_rate =50;
 13019  1550  3032               	movlw	50
 13020  1551  00AC               	movwf	_flashy_sparkle_rate^(0+128)
 13021  1552  3000               	movlw	0
 13022  1553  00AD               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 13023                           
 13024                           ;flashy_task.c: 79: flashy_scroll_rate=50;
 13025  1554  3032               	movlw	50
 13026  1555  00AA               	movwf	_flashy_scroll_rate^(0+128)
 13027  1556  3000               	movlw	0
 13028  1557  00AB               	movwf	(_flashy_scroll_rate^(0+128)+1)
 13029                           
 13030                           ;flashy_task.c: 80: flashy_leds_state_track =0;
 13031  1558  01AE               	clrf	_flashy_leds_state_track^(0+128)
 13032  1559  01AF               	clrf	(_flashy_leds_state_track+1)^(0+128)
 13033  155A  0008               	return
 13034  155B                     __end_of_flashy_Init:	
 13035                           
 13036                           	psect	text7
 13037  1E8A                     __ptext7:	
 13038 ;; *************** function _slot_Init *****************
 13039 ;; Defined at:
 13040 ;;		line 16 in file "slot_task.c"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  taskData        2   25[BANK0 ] PTR void 
 13043 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13044 ;;		 -> flashy_TaskData(30), NULL(0), 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  data            2   27[BANK0 ] PTR struct t_slot_taskDa
 13047 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13048 ;;		 -> flashy_TaskData(30), NULL(0), 
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      void 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13061 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13062 ;;Total ram usage:        4 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:   10
 13065 ;; This function calls:
 13066 ;;		_nullifyBadge_segDisplayErase
 13067 ;;		_nullifyBadge_segDisplayRegister
 13068 ;;		_nullifyBadge_userLedsClr
 13069 ;;		_nullifyBadge_userLedsRegister
 13070 ;; This function is called by:
 13071 ;;		_main
 13072 ;;		_scheduler_TaskAdd
 13073 ;; This function uses a non-reentrant model
 13074 ;;
 13075                           
 13076                           
 13077                           ;psect for function _slot_Init
 13078  1E8A                     _slot_Init:	
 13079                           
 13080                           ;slot_task.c: 17: struct t_slot_taskData *data = (struct t_slot_taskData *) taskData;
 13081                           
 13082                           ;incstack = 0
 13083                           ; Regs used in _slot_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13084  1E8A  0020               	movlb	0	; select bank0
 13085  1E8B  083A               	movf	slot_Init@taskData+1,w
 13086  1E8C  00BC               	movwf	slot_Init@data+1
 13087  1E8D  0839               	movf	slot_Init@taskData,w
 13088  1E8E  00BB               	movwf	slot_Init@data
 13089                           
 13090                           ;slot_task.c: 20: nullifyBadge_userLedsRegister(data->badge);
 13091  1E8F  083B               	movf	slot_Init@data,w
 13092  1E90  0086               	movwf	6
 13093  1E91  083C               	movf	slot_Init@data+1,w
 13094  1E92  0087               	movwf	7
 13095  1E93  0801               	movf	1,w
 13096  1E94  31A7  271D  319E   	fcall	_nullifyBadge_userLedsRegister
 13097                           
 13098                           ;slot_task.c: 21: nullifyBadge_userLedsClr(data->badge);
 13099  1E97  0020               	movlb	0	; select bank0
 13100  1E98  083B               	movf	slot_Init@data,w
 13101  1E99  0086               	movwf	6
 13102  1E9A  083C               	movf	slot_Init@data+1,w
 13103  1E9B  0087               	movwf	7
 13104  1E9C  0801               	movf	1,w
 13105  1E9D  31A6  2621  319E   	fcall	_nullifyBadge_userLedsClr
 13106                           
 13107                           ;slot_task.c: 22: nullifyBadge_segDisplayRegister(data->badge);
 13108  1EA0  0020               	movlb	0	; select bank0
 13109  1EA1  083B               	movf	slot_Init@data,w
 13110  1EA2  0086               	movwf	6
 13111  1EA3  083C               	movf	slot_Init@data+1,w
 13112  1EA4  0087               	movwf	7
 13113  1EA5  0801               	movf	1,w
 13114  1EA6  31A6  262F  319E   	fcall	_nullifyBadge_segDisplayRegister
 13115                           
 13116                           ;slot_task.c: 23: nullifyBadge_segDisplayErase(data->badge);
 13117  1EA9  0020               	movlb	0	; select bank0
 13118  1EAA  083B               	movf	slot_Init@data,w
 13119  1EAB  0086               	movwf	6
 13120  1EAC  083C               	movf	slot_Init@data+1,w
 13121  1EAD  0087               	movwf	7
 13122  1EAE  0801               	movf	1,w
 13123  1EAF  31A6  261B  319E   	fcall	_nullifyBadge_segDisplayErase
 13124                           
 13125                           ;slot_task.c: 26: data->displayTickCount = 0;
 13126  1EB2  0020               	movlb	0	; select bank0
 13127  1EB3  083B               	movf	slot_Init@data,w
 13128  1EB4  0086               	movwf	6
 13129  1EB5  083C               	movf	slot_Init@data+1,w
 13130  1EB6  0087               	movwf	7
 13131  1EB7  3142               	addfsr 1,2
 13132  1EB8  3000               	movlw	0
 13133  1EB9  3FC0               	movwi [0]fsr1
 13134  1EBA  3FC1               	movwi [1]fsr1
 13135                           
 13136                           ;slot_task.c: 27: data->holdCountA = 0;
 13137  1EBB  083B               	movf	slot_Init@data,w
 13138  1EBC  0086               	movwf	6
 13139  1EBD  083C               	movf	slot_Init@data+1,w
 13140  1EBE  0087               	movwf	7
 13141  1EBF  3144               	addfsr 1,4
 13142  1EC0  3000               	movlw	0
 13143  1EC1  3FC0               	movwi [0]fsr1
 13144  1EC2  3FC1               	movwi [1]fsr1
 13145                           
 13146                           ;slot_task.c: 28: data->holdCountB = 0;
 13147  1EC3  083B               	movf	slot_Init@data,w
 13148  1EC4  0086               	movwf	6
 13149  1EC5  083C               	movf	slot_Init@data+1,w
 13150  1EC6  0087               	movwf	7
 13151  1EC7  3146               	addfsr 1,6
 13152  1EC8  3000               	movlw	0
 13153  1EC9  3FC0               	movwi [0]fsr1
 13154  1ECA  3FC1               	movwi [1]fsr1
 13155                           
 13156                           ;slot_task.c: 29: data->holdCountX = 0;
 13157  1ECB  083B               	movf	slot_Init@data,w
 13158  1ECC  0086               	movwf	6
 13159  1ECD  083C               	movf	slot_Init@data+1,w
 13160  1ECE  0087               	movwf	7
 13161  1ECF  3148               	addfsr 1,8
 13162  1ED0  3000               	movlw	0
 13163  1ED1  3FC0               	movwi [0]fsr1
 13164  1ED2  3FC1               	movwi [1]fsr1
 13165                           
 13166                           ;slot_task.c: 30: data->holdCountY = 0;
 13167  1ED3  083B               	movf	slot_Init@data,w
 13168  1ED4  0086               	movwf	6
 13169  1ED5  083C               	movf	slot_Init@data+1,w
 13170  1ED6  0087               	movwf	7
 13171  1ED7  314A               	addfsr 1,10
 13172  1ED8  3000               	movlw	0
 13173  1ED9  3FC0               	movwi [0]fsr1
 13174  1EDA  3FC1               	movwi [1]fsr1
 13175                           
 13176                           ;slot_task.c: 31: data->noholdCount = 0;
 13177  1EDB  083B               	movf	slot_Init@data,w
 13178  1EDC  0086               	movwf	6
 13179  1EDD  083C               	movf	slot_Init@data+1,w
 13180  1EDE  0087               	movwf	7
 13181  1EDF  314C               	addfsr 1,12
 13182  1EE0  3000               	movlw	0
 13183  1EE1  3FC0               	movwi [0]fsr1
 13184  1EE2  3FC1               	movwi [1]fsr1
 13185  1EE3  0008               	return
 13186  1EE4                     __end_of_slot_Init:	
 13187                           
 13188                           	psect	text8
 13189  271D                     __ptext8:	
 13190 ;; *************** function _nullifyBadge_userLedsRegister *****************
 13191 ;; Defined at:
 13192 ;;		line 133 in file "nullifyBadge.c"
 13193 ;; Parameters:    Size  Location     Type
 13194 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 13195 ;;		 -> badge_inst(18), 
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 13198 ;;		 -> badge_inst(18), 
 13199 ;; Return value:  Size  Location     Type
 13200 ;;                  1    wreg      char 
 13201 ;; Registers used:
 13202 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13203 ;; Tracked objects:
 13204 ;;		On entry : 0/0
 13205 ;;		On exit  : 0/0
 13206 ;;		Unchanged: 0/0
 13207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13212 ;;Total ram usage:        1 bytes
 13213 ;; Hardware stack levels used:    1
 13214 ;; Hardware stack levels required when called:    4
 13215 ;; This function calls:
 13216 ;;		Nothing
 13217 ;; This function is called by:
 13218 ;;		_menu_Init
 13219 ;;		_flashy_Init
 13220 ;;		_locked_Init
 13221 ;;		_secret_Init
 13222 ;;		_slot_Init
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           
 13227                           ;psect for function _nullifyBadge_userLedsRegister
 13228  271D                     _nullifyBadge_userLedsRegister:	
 13229                           
 13230                           ;incstack = 0
 13231                           ; Regs used in _nullifyBadge_userLedsRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 13232                           ;nullifyBadge_userLedsRegister@badge stored from wreg
 13233  271D  00F1               	movwf	nullifyBadge_userLedsRegister@badge
 13234                           
 13235                           ;nullifyBadge.c: 134: if (badge->registeredHw & HW_USER_LEDS) {
 13236  271E  0871               	movf	nullifyBadge_userLedsRegister@badge,w
 13237  271F  3E11               	addlw	17
 13238  2720  0086               	movwf	6
 13239  2721  3001               	movlw	1	; select bank2/3
 13240  2722  0087               	movwf	7
 13241  2723  1801               	btfsc	1,0
 13242  2724  0008               	return
 13243                           
 13244                           ;nullifyBadge.c: 137: else {
 13245                           ;nullifyBadge.c: 138: badge->registeredHw |= (1 << HW_USER_LEDS);
 13246                           
 13247                           ;nullifyBadge.c: 136: }
 13248                           
 13249                           ;nullifyBadge.c: 135: return -1;
 13250                           ;	Return value of _nullifyBadge_userLedsRegister is never used
 13251  2725  0871               	movf	nullifyBadge_userLedsRegister@badge,w
 13252  2726  3E11               	addlw	17
 13253  2727  0086               	movwf	6
 13254  2728  3001               	movlw	1	; select bank2/3
 13255  2729  0087               	movwf	7
 13256  272A  1481               	bsf	1,1
 13257                           
 13258                           ;nullifyBadge.c: 139: return 0;
 13259                           ;	Return value of _nullifyBadge_userLedsRegister is never used
 13260  272B  0008               	return
 13261  272C                     __end_of_nullifyBadge_userLedsRegister:	
 13262                           
 13263                           	psect	text9
 13264  262F                     __ptext9:	
 13265 ;; *************** function _nullifyBadge_segDisplayRegister *****************
 13266 ;; Defined at:
 13267 ;;		line 68 in file "nullifyBadge.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 13270 ;;		 -> badge_inst(18), 
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 13273 ;;		 -> badge_inst(18), 
 13274 ;; Return value:  Size  Location     Type
 13275 ;;                  1    wreg      char 
 13276 ;; Registers used:
 13277 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/0
 13280 ;;		On exit  : 0/0
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13287 ;;Total ram usage:        1 bytes
 13288 ;; Hardware stack levels used:    1
 13289 ;; Hardware stack levels required when called:    4
 13290 ;; This function calls:
 13291 ;;		Nothing
 13292 ;; This function is called by:
 13293 ;;		_menu_Init
 13294 ;;		_flashy_Init
 13295 ;;		_locked_Init
 13296 ;;		_secret_Init
 13297 ;;		_slot_Init
 13298 ;;		_fadeDisplay_Init
 13299 ;; This function uses a non-reentrant model
 13300 ;;
 13301                           
 13302                           
 13303                           ;psect for function _nullifyBadge_segDisplayRegister
 13304  262F                     _nullifyBadge_segDisplayRegister:	
 13305                           
 13306                           ;incstack = 0
 13307                           ; Regs used in _nullifyBadge_segDisplayRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 13308                           ;nullifyBadge_segDisplayRegister@badge stored from wreg
 13309  262F  00F1               	movwf	nullifyBadge_segDisplayRegister@badge
 13310                           
 13311                           ;nullifyBadge.c: 72: else {
 13312                           ;nullifyBadge.c: 73: badge->registeredHw |= (1 << HW_SEG_DISPLAY);
 13313                           
 13314                           ;nullifyBadge.c: 71: }
 13315                           
 13316                           ;nullifyBadge.c: 70: return -1;
 13317                           ;	Return value of _nullifyBadge_segDisplayRegister is never used
 13318                           
 13319                           ;nullifyBadge.c: 69: if (badge->registeredHw & HW_SEG_DISPLAY) {
 13320  2630  0871               	movf	nullifyBadge_segDisplayRegister@badge,w
 13321  2631  3E11               	addlw	17
 13322  2632  0086               	movwf	6
 13323  2633  3001               	movlw	1	; select bank2/3
 13324  2634  0087               	movwf	7
 13325  2635  1401               	bsf	1,0
 13326                           
 13327                           ;nullifyBadge.c: 74: return 0;
 13328                           ;	Return value of _nullifyBadge_segDisplayRegister is never used
 13329  2636  0008               	return
 13330  2637                     __end_of_nullifyBadge_segDisplayRegister:	
 13331                           
 13332                           	psect	text10
 13333  187F                     __ptext10:	
 13334 ;; *************** function _scheduler_Init *****************
 13335 ;; Defined at:
 13336 ;;		line 27 in file "cooperative_scheduler.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;  scheduler       1    wreg     PTR struct t_scheduler
 13339 ;;		 -> schedulerInst(34), 
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  scheduler       1    2[COMMON] PTR struct t_scheduler
 13342 ;;		 -> schedulerInst(34), 
 13343 ;;  k               1    3[COMMON] unsigned char 
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      void 
 13346 ;; Registers used:
 13347 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13356 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13357 ;;Total ram usage:        3 bytes
 13358 ;; Hardware stack levels used:    1
 13359 ;; Hardware stack levels required when called:    4
 13360 ;; This function calls:
 13361 ;;		Nothing
 13362 ;; This function is called by:
 13363 ;;		_main
 13364 ;; This function uses a non-reentrant model
 13365 ;;
 13366                           
 13367                           
 13368                           ;psect for function _scheduler_Init
 13369  187F                     _scheduler_Init:	
 13370                           
 13371                           ;incstack = 0
 13372                           ; Regs used in _scheduler_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
 13373                           ;scheduler_Init@scheduler stored from wreg
 13374  187F  00F2               	movwf	scheduler_Init@scheduler
 13375                           
 13376                           ;cooperative_scheduler.c: 28: scheduler->taskEntryVector = 0x0;
 13377  1880  0872               	movf	scheduler_Init@scheduler,w
 13378  1881  3E20               	addlw	32
 13379  1882  0086               	movwf	6
 13380  1883  3002               	movlw	2	; select bank4/5
 13381  1884  0087               	movwf	7
 13382  1885  3000               	movlw	0
 13383  1886  3FC0               	movwi [0]fsr1
 13384  1887  3FC1               	movwi [1]fsr1
 13385                           
 13386                           ;cooperative_scheduler.c: 29: u8 k;
 13387                           ;cooperative_scheduler.c: 31: for (k = 0; k < 16; k++) {
 13388  1888  01F3               	clrf	scheduler_Init@k
 13389  1889                     L1:	
 13390  1889  3010               	movlw	16
 13391  188A  0273               	subwf	scheduler_Init@k,w
 13392  188B  1803               	btfsc	3,0
 13393  188C  0008               	return
 13394                           
 13395                           ;cooperative_scheduler.c: 32: scheduler->tasks[k] = (0);
 13396  188D  3573               	lslf	scheduler_Init@k,w
 13397  188E  0772               	addwf	scheduler_Init@scheduler,w
 13398  188F  00F1               	movwf	??_scheduler_Init
 13399  1890  0871               	movf	??_scheduler_Init,w
 13400  1891  0086               	movwf	6
 13401  1892  3002               	movlw	2	; select bank4/5
 13402  1893  0087               	movwf	7
 13403  1894  3000               	movlw	0
 13404  1895  3FC0               	movwi [0]fsr1
 13405  1896  3FC1               	movwi [1]fsr1
 13406  1897  3001               	movlw	1
 13407  1898  00F1               	movwf	??_scheduler_Init
 13408  1899  0871               	movf	??_scheduler_Init,w
 13409  189A  07F3               	addwf	scheduler_Init@k,f
 13410  189B  2889               	goto	L1
 13411  189C                     __end_of_scheduler_Init:	
 13412                           
 13413                           	psect	text11
 13414  13C7                     __ptext11:	
 13415 ;; *************** function _schedulerExecute *****************
 13416 ;; Defined at:
 13417 ;;		line 77 in file "cooperative_scheduler.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;  scheduler       1    wreg     PTR struct t_scheduler
 13420 ;;		 -> schedulerInst(34), 
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  scheduler       1   78[BANK0 ] PTR struct t_scheduler
 13423 ;;		 -> schedulerInst(34), 
 13424 ;;  tickDelta       2   76[BANK0 ] unsigned int 
 13425 ;;  taskLastSyst    2   74[BANK0 ] unsigned int 
 13426 ;;  currentSyste    2   72[BANK0 ] unsigned int 
 13427 ;;  k               1   79[BANK0 ] unsigned char 
 13428 ;; Return value:  Size  Location     Type
 13429 ;;                  1    wreg      void 
 13430 ;; Registers used:
 13431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13432 ;; Tracked objects:
 13433 ;;		On entry : 0/0
 13434 ;;		On exit  : 0/0
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13438 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13439 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13440 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13441 ;;Total ram usage:       14 bytes
 13442 ;; Hardware stack levels used:    1
 13443 ;; Hardware stack levels required when called:   14
 13444 ;; This function calls:
 13445 ;;		_TMR0_Read16bitTimer
 13446 ;;		_scheduler_TaskRun
 13447 ;; This function is called by:
 13448 ;;		_main
 13449 ;; This function uses a non-reentrant model
 13450 ;;
 13451                           
 13452                           
 13453                           ;psect for function _schedulerExecute
 13454  13C7                     _schedulerExecute:	
 13455                           
 13456                           ;incstack = 0
 13457                           ; Regs used in _schedulerExecute: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13458                           ;schedulerExecute@scheduler stored from wreg
 13459  13C7  0020               	movlb	0	; select bank0
 13460  13C8  00EE               	movwf	schedulerExecute@scheduler
 13461                           
 13462                           ;cooperative_scheduler.c: 78: u16 currentSystemTick;
 13463                           ;cooperative_scheduler.c: 79: u16 taskLastSystemTick;
 13464                           ;cooperative_scheduler.c: 80: u16 tickDelta;
 13465                           ;cooperative_scheduler.c: 81: u8 k;
 13466                           ;cooperative_scheduler.c: 83: for (k = 0; k < 16; k++) {
 13467  13C9  01EF               	clrf	schedulerExecute@k
 13468  13CA                     L2:	
 13469  13CA  3010               	movlw	16
 13470  13CB  026F               	subwf	schedulerExecute@k,w
 13471  13CC  1803               	btfsc	3,0
 13472  13CD  0008               	return
 13473                           
 13474                           ;cooperative_scheduler.c: 86: if (!(scheduler->taskEntryVector & (1 << k)) ) {
 13475  13CE  086E               	movf	schedulerExecute@scheduler,w
 13476  13CF  3E20               	addlw	32
 13477  13D0  0086               	movwf	6
 13478  13D1  3002               	movlw	2	; select bank4/5
 13479  13D2  0087               	movwf	7
 13480  13D3  3F40               	moviw [0]fsr1
 13481  13D4  00E2               	movwf	??_schedulerExecute
 13482  13D5  3F41               	moviw [1]fsr1
 13483  13D6  00E3               	movwf	??_schedulerExecute+1
 13484  13D7  3001               	movlw	1
 13485  13D8  00E4               	movwf	??_schedulerExecute+2
 13486  13D9  3000               	movlw	0
 13487  13DA  00E5               	movwf	??_schedulerExecute+3
 13488  13DB  0A6F               	incf	schedulerExecute@k,w
 13489  13DC  2BDF               	goto	u4804
 13490  13DD                     u4805:	
 13491  13DD  35E4               	lslf	??_schedulerExecute+2,f
 13492  13DE  0DE5               	rlf	??_schedulerExecute+3,f
 13493  13DF                     u4804:	
 13494  13DF  0B89               	decfsz	9,f
 13495  13E0  2BDD               	goto	u4805
 13496  13E1  0862               	movf	??_schedulerExecute,w
 13497  13E2  0564               	andwf	??_schedulerExecute+2,w
 13498  13E3  00E6               	movwf	??_schedulerExecute+4
 13499  13E4  0863               	movf	??_schedulerExecute+1,w
 13500  13E5  0565               	andwf	??_schedulerExecute+3,w
 13501  13E6  00E7               	movwf	??_schedulerExecute+5
 13502  13E7  0866               	movf	??_schedulerExecute+4,w
 13503  13E8  0467               	iorwf	??_schedulerExecute+5,w
 13504  13E9  1903               	btfsc	3,2
 13505  13EA  2C3D               	goto	l8073
 13506                           
 13507                           ;cooperative_scheduler.c: 88: }
 13508                           ;cooperative_scheduler.c: 90: currentSystemTick = TMR0_Read16bitTimer();
 13509                           
 13510                           ;cooperative_scheduler.c: 87: continue;
 13511  13EB  3198  2062  3193   	fcall	_TMR0_Read16bitTimer
 13512  13EE  0872               	movf	?_TMR0_Read16bitTimer+1,w
 13513  13EF  0020               	movlb	0	; select bank0
 13514  13F0  00E9               	movwf	schedulerExecute@currentSystemTick+1
 13515  13F1  0871               	movf	?_TMR0_Read16bitTimer,w
 13516  13F2  00E8               	movwf	schedulerExecute@currentSystemTick
 13517                           
 13518                           ;cooperative_scheduler.c: 91: taskLastSystemTick = scheduler->tasks[k]->systemTickLastEx
      +                          ecuted;
 13519  13F3  356F               	lslf	schedulerExecute@k,w
 13520  13F4  076E               	addwf	schedulerExecute@scheduler,w
 13521  13F5  00E2               	movwf	??_schedulerExecute
 13522  13F6  0862               	movf	??_schedulerExecute,w
 13523  13F7  0086               	movwf	6
 13524  13F8  3002               	movlw	2	; select bank4/5
 13525  13F9  0087               	movwf	7
 13526  13FA  3F40               	moviw [0]fsr1
 13527  13FB  00E3               	movwf	??_schedulerExecute+1
 13528  13FC  3F41               	moviw [1]fsr1
 13529  13FD  00E4               	movwf	??_schedulerExecute+2
 13530  13FE  0863               	movf	??_schedulerExecute+1,w
 13531  13FF  0086               	movwf	6
 13532  1400  0864               	movf	??_schedulerExecute+2,w
 13533  1401  0087               	movwf	7
 13534  1402  3F40               	moviw [0]fsr1
 13535  1403  00EA               	movwf	schedulerExecute@taskLastSystemTick
 13536  1404  3F41               	moviw [1]fsr1
 13537  1405  00EB               	movwf	schedulerExecute@taskLastSystemTick+1
 13538                           
 13539                           ;cooperative_scheduler.c: 99: tickDelta = currentSystemTick - taskLastSystemTick;
 13540  1406  096A               	comf	schedulerExecute@taskLastSystemTick,w
 13541  1407  00E2               	movwf	??_schedulerExecute
 13542  1408  096B               	comf	schedulerExecute@taskLastSystemTick+1,w
 13543  1409  00E3               	movwf	??_schedulerExecute+1
 13544  140A  0AE2               	incf	??_schedulerExecute,f
 13545  140B  1903               	skipnz
 13546  140C  0AE3               	incf	??_schedulerExecute+1,f
 13547  140D  0868               	movf	schedulerExecute@currentSystemTick,w
 13548  140E  0762               	addwf	??_schedulerExecute,w
 13549  140F  00EC               	movwf	schedulerExecute@tickDelta
 13550  1410  0869               	movf	schedulerExecute@currentSystemTick+1,w
 13551  1411  3D63               	addwfc	??_schedulerExecute+1,w
 13552  1412  00ED               	movwf	schedulerExecute@tickDelta+1
 13553                           
 13554                           ;cooperative_scheduler.c: 103: if (tickDelta >= scheduler->tasks[k]->taskInterval) {
 13555  1413  356F               	lslf	schedulerExecute@k,w
 13556  1414  076E               	addwf	schedulerExecute@scheduler,w
 13557  1415  00E2               	movwf	??_schedulerExecute
 13558  1416  0862               	movf	??_schedulerExecute,w
 13559  1417  0086               	movwf	6
 13560  1418  3002               	movlw	2	; select bank4/5
 13561  1419  0087               	movwf	7
 13562  141A  3F40               	moviw [0]fsr1
 13563  141B  00E3               	movwf	??_schedulerExecute+1
 13564  141C  3F41               	moviw [1]fsr1
 13565  141D  00E4               	movwf	??_schedulerExecute+2
 13566  141E  0863               	movf	??_schedulerExecute+1,w
 13567  141F  0086               	movwf	6
 13568  1420  0864               	movf	??_schedulerExecute+2,w
 13569  1421  0087               	movwf	7
 13570  1422  314A               	addfsr 1,10
 13571  1423  3F40               	moviw [0]fsr1
 13572  1424  00E5               	movwf	??_schedulerExecute+3
 13573  1425  3F41               	moviw [1]fsr1
 13574  1426  00E6               	movwf	??_schedulerExecute+4
 13575  1427  0866               	movf	??_schedulerExecute+4,w
 13576  1428  026D               	subwf	schedulerExecute@tickDelta+1,w
 13577  1429  1D03               	skipz
 13578  142A  2C2D               	goto	u4825
 13579  142B  0865               	movf	??_schedulerExecute+3,w
 13580  142C  026C               	subwf	schedulerExecute@tickDelta,w
 13581  142D                     u4825:	
 13582  142D  1C03               	skipc
 13583  142E  2C3D               	goto	l8073
 13584                           
 13585                           ;cooperative_scheduler.c: 104: scheduler_TaskRun(scheduler->tasks[k]);
 13586  142F  356F               	lslf	schedulerExecute@k,w
 13587  1430  076E               	addwf	schedulerExecute@scheduler,w
 13588  1431  00E2               	movwf	??_schedulerExecute
 13589  1432  0862               	movf	??_schedulerExecute,w
 13590  1433  0086               	movwf	6
 13591  1434  3002               	movlw	2	; select bank4/5
 13592  1435  0087               	movwf	7
 13593  1436  3F40               	moviw [0]fsr1
 13594  1437  00E0               	movwf	scheduler_TaskRun@task
 13595  1438  3F41               	moviw [1]fsr1
 13596  1439  00E1               	movwf	scheduler_TaskRun@task+1
 13597  143A  3198  20F6  3193   	fcall	_scheduler_TaskRun
 13598  143D                     l8073:	
 13599  143D  3001               	movlw	1
 13600  143E  0020               	movlb	0	; select bank0
 13601  143F  00E2               	movwf	??_schedulerExecute
 13602  1440  0862               	movf	??_schedulerExecute,w
 13603  1441  07EF               	addwf	schedulerExecute@k,f
 13604  1442  2BCA               	goto	L2
 13605  1443                     __end_of_schedulerExecute:	
 13606                           
 13607                           	psect	text12
 13608  18F6                     __ptext12:	
 13609 ;; *************** function _scheduler_TaskRun *****************
 13610 ;; Defined at:
 13611 ;;		line 20 in file "cooperative_scheduler.c"
 13612 ;; Parameters:    Size  Location     Type
 13613 ;;  task            2   64[BANK0 ] PTR struct t_schedulerTa
 13614 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 13615 ;;		 -> flashy_task(13), NULL(0), 
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;		None
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  1    wreg      void 
 13620 ;; Registers used:
 13621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/0
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13630 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13631 ;;Total ram usage:        2 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; Hardware stack levels required when called:   13
 13634 ;; This function calls:
 13635 ;;		Absolute function
 13636 ;;		_TMR0_Read16bitTimer
 13637 ;;		_flashy_Main
 13638 ;;		_locked_Main
 13639 ;;		_menu_Main
 13640 ;;		_secret_Main
 13641 ;;		_slot_Main
 13642 ;; This function is called by:
 13643 ;;		_schedulerExecute
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           
 13648                           ;psect for function _scheduler_TaskRun
 13649  18F6                     _scheduler_TaskRun:	
 13650                           
 13651                           ;cooperative_scheduler.c: 21: task->taskExecuteCallback (task->taskData);
 13652                           
 13653                           ;incstack = 0
 13654                           ; Regs used in _scheduler_TaskRun: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13655  18F6  0020               	movlb	0	; select bank0
 13656  18F7  0860               	movf	scheduler_TaskRun@task,w
 13657  18F8  0086               	movwf	6
 13658  18F9  0861               	movf	scheduler_TaskRun@task+1,w
 13659  18FA  0087               	movwf	7
 13660  18FB  3142               	addfsr 1,2
 13661  18FC  3F40               	moviw [0]fsr1
 13662  18FD  00D2               	movwf	secret_Main@taskData
 13663  18FE  3F41               	moviw [1]fsr1
 13664  18FF  00D3               	movwf	secret_Main@taskData+1
 13665  1900  0860               	movf	scheduler_TaskRun@task,w
 13666  1901  0086               	movwf	6
 13667  1902  0861               	movf	scheduler_TaskRun@task+1,w
 13668  1903  0087               	movwf	7
 13669  1904  3148               	addfsr 1,8
 13670  1905  3F41               	moviw [1]fsr1
 13671  1906  008A               	movwf	10
 13672  1907  3F40               	moviw [0]fsr1
 13673  1908  000A               	callw
 13674  1909  3198               	pagesel	$
 13675                           
 13676                           ;cooperative_scheduler.c: 22: task->systemTickLastExecuted = TMR0_Read16bitTimer();
 13677  190A  3198  2062         	fcall	_TMR0_Read16bitTimer
 13678  190C  0020               	movlb	0	; select bank0
 13679  190D  0860               	movf	scheduler_TaskRun@task,w
 13680  190E  0086               	movwf	6
 13681  190F  0861               	movf	scheduler_TaskRun@task+1,w
 13682  1910  0087               	movwf	7
 13683  1911  0871               	movf	?_TMR0_Read16bitTimer,w
 13684  1912  3FC0               	movwi [0]fsr1
 13685  1913  0872               	movf	?_TMR0_Read16bitTimer+1,w
 13686  1914  3FC1               	movwi [1]fsr1
 13687  1915  0008               	return
 13688  1916                     __end_of_scheduler_TaskRun:	
 13689                           
 13690                           	psect	text13
 13691  045D                     __ptext13:	
 13692 ;; *************** function _secret_Main *****************
 13693 ;; Defined at:
 13694 ;;		line 99 in file "secret_task.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;  taskData        2   50[BANK0 ] PTR void 
 13697 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13698 ;;		 -> flashy_TaskData(30), NULL(0), 
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;  data            2   56[BANK0 ] PTR struct t_secret_task
 13701 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13702 ;;		 -> flashy_TaskData(30), NULL(0), 
 13703 ;;  buttonPresse    1   55[BANK0 ] unsigned char 
 13704 ;;  secret_found    1   54[BANK0 ] unsigned char 
 13705 ;; Return value:  Size  Location     Type
 13706 ;;                  1    wreg      void 
 13707 ;; Registers used:
 13708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13709 ;; Tracked objects:
 13710 ;;		On entry : 0/0
 13711 ;;		On exit  : 0/0
 13712 ;;		Unchanged: 0/0
 13713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13714 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13715 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13716 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13717 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13718 ;;Total ram usage:        8 bytes
 13719 ;; Hardware stack levels used:    1
 13720 ;; Hardware stack levels required when called:    6
 13721 ;; This function calls:
 13722 ;;		_nullifyBadge_buttonsGet
 13723 ;;		_secret_check
 13724 ;;		_secret_clear
 13725 ;; This function is called by:
 13726 ;;		_main
 13727 ;;		_scheduler_TaskRun
 13728 ;; This function uses a non-reentrant model
 13729 ;;
 13730                           
 13731                           
 13732                           ;psect for function _secret_Main
 13733  045D                     _secret_Main:	
 13734                           
 13735                           ;secret_task.c: 100: struct t_secret_taskData *data = (struct t_secret_taskData *) taskD
      +                          ata;
 13736                           
 13737                           ;incstack = 0
 13738                           ; Regs used in _secret_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13739  045D  0020               	movlb	0	; select bank0
 13740  045E  0853               	movf	secret_Main@taskData+1,w
 13741  045F  00D9               	movwf	secret_Main@data+1
 13742  0460  0852               	movf	secret_Main@taskData,w
 13743  0461  00D8               	movwf	secret_Main@data
 13744                           
 13745                           ;secret_task.c: 101: u8 buttonPressed, secret_found = 0;
 13746  0462  01D6               	clrf	secret_Main@secret_found
 13747                           
 13748                           ;secret_task.c: 103: buttonPressed = nullifyBadge_buttonsGet();
 13749  0463  319A  2205  3184   	fcall	_nullifyBadge_buttonsGet
 13750  0466  0020               	movlb	0	; select bank0
 13751  0467  00D4               	movwf	??_secret_Main
 13752  0468  0854               	movf	??_secret_Main,w
 13753  0469  00D7               	movwf	secret_Main@buttonPressed
 13754                           
 13755                           ;secret_task.c: 104: switch (buttonPressed) {
 13756  046A  2DFD               	goto	l7793
 13757  046B                     l7707:	
 13758                           ;secret_task.c: 105: case 0:
 13759                           
 13760                           
 13761                           ;secret_task.c: 107: if (data->delayTickCount == 0){
 13762  046B  0858               	movf	secret_Main@data,w
 13763  046C  0086               	movwf	6
 13764  046D  0859               	movf	secret_Main@data+1,w
 13765  046E  0087               	movwf	7
 13766  046F  3142               	addfsr 1,2
 13767  0470  0016               	moviw fsr1++
 13768  0471  0401               	iorwf	1,w
 13769  0472  1D03               	btfss	3,2
 13770  0473  2C85               	goto	l7713
 13771                           
 13772                           ;secret_task.c: 108: data->delayTickCount = 300;
 13773  0474  0858               	movf	secret_Main@data,w
 13774  0475  0086               	movwf	6
 13775  0476  0859               	movf	secret_Main@data+1,w
 13776  0477  0087               	movwf	7
 13777  0478  3142               	addfsr 1,2
 13778  0479  302C               	movlw	44
 13779  047A  3FC0               	movwi [0]fsr1
 13780  047B  3001               	movlw	1
 13781  047C  3FC1               	movwi [1]fsr1
 13782                           
 13783                           ;secret_task.c: 109: secret_check(data, 0);
 13784  047D  0859               	movf	secret_Main@data+1,w
 13785  047E  00F8               	movwf	secret_check@data+1
 13786  047F  0858               	movf	secret_Main@data,w
 13787  0480  00F7               	movwf	secret_check@data
 13788  0481  01F9               	clrf	secret_check@buttonPressed
 13789  0482  3195  255B  3184   	fcall	_secret_check
 13790  0485                     l7713:	
 13791                           
 13792                           ;secret_task.c: 110: }
 13793                           ;secret_task.c: 111: data->holdCountA = 0;
 13794  0485  0020               	movlb	0	; select bank0
 13795  0486  0858               	movf	secret_Main@data,w
 13796  0487  0086               	movwf	6
 13797  0488  0859               	movf	secret_Main@data+1,w
 13798  0489  0087               	movwf	7
 13799  048A  3144               	addfsr 1,4
 13800  048B  3000               	movlw	0
 13801  048C  3FC0               	movwi [0]fsr1
 13802  048D  3FC1               	movwi [1]fsr1
 13803                           
 13804                           ;secret_task.c: 112: data->holdCountB = 0;
 13805  048E  0858               	movf	secret_Main@data,w
 13806  048F  0086               	movwf	6
 13807  0490  0859               	movf	secret_Main@data+1,w
 13808  0491  0087               	movwf	7
 13809  0492  3146               	addfsr 1,6
 13810  0493  3000               	movlw	0
 13811  0494  3FC0               	movwi [0]fsr1
 13812  0495  3FC1               	movwi [1]fsr1
 13813                           
 13814                           ;secret_task.c: 113: data->holdCountX = 0;
 13815  0496  0858               	movf	secret_Main@data,w
 13816  0497  0086               	movwf	6
 13817  0498  0859               	movf	secret_Main@data+1,w
 13818  0499  0087               	movwf	7
 13819  049A  3148               	addfsr 1,8
 13820  049B  3000               	movlw	0
 13821  049C  3FC0               	movwi [0]fsr1
 13822  049D  3FC1               	movwi [1]fsr1
 13823                           
 13824                           ;secret_task.c: 114: data->holdCountY = 0;
 13825  049E  0858               	movf	secret_Main@data,w
 13826  049F  0086               	movwf	6
 13827  04A0  0859               	movf	secret_Main@data+1,w
 13828  04A1  0087               	movwf	7
 13829  04A2  314A               	addfsr 1,10
 13830  04A3  3000               	movlw	0
 13831  04A4  3FC0               	movwi [0]fsr1
 13832  04A5  3FC1               	movwi [1]fsr1
 13833                           
 13834                           ;secret_task.c: 115: data->noholdCount += 1;
 13835  04A6  0858               	movf	secret_Main@data,w
 13836  04A7  0086               	movwf	6
 13837  04A8  0859               	movf	secret_Main@data+1,w
 13838  04A9  0087               	movwf	7
 13839  04AA  314C               	addfsr 1,12
 13840  04AB  3001               	movlw	1
 13841  04AC  0781               	addwf	1,f
 13842  04AD  3141               	addfsr 1,1
 13843  04AE  1803               	skipnc
 13844  04AF  0A81               	incf	1,f
 13845                           
 13846                           ;secret_task.c: 116: data->delayTickCount -= 1;
 13847  04B0  0858               	movf	secret_Main@data,w
 13848  04B1  0086               	movwf	6
 13849  04B2  0859               	movf	secret_Main@data+1,w
 13850  04B3  0087               	movwf	7
 13851  04B4  3142               	addfsr 1,2
 13852  04B5  3001               	movlw	1
 13853  04B6  0281               	subwf	1,f
 13854  04B7  3141               	addfsr 1,1
 13855  04B8  3000               	movlw	0
 13856  04B9  3B81               	subwfb	1,f
 13857  04BA  317F               	addfsr 1,-1
 13858                           
 13859                           ;secret_task.c: 117: break;
 13860  04BB  2E0F               	goto	l7795
 13861  04BC                     l7725:	
 13862                           ;secret_task.c: 118: case 1:
 13863                           
 13864                           
 13865                           ;secret_task.c: 120: if (data->holdCountA == 0){
 13866  04BC  0858               	movf	secret_Main@data,w
 13867  04BD  0086               	movwf	6
 13868  04BE  0859               	movf	secret_Main@data+1,w
 13869  04BF  0087               	movwf	7
 13870  04C0  3144               	addfsr 1,4
 13871  04C1  0016               	moviw fsr1++
 13872  04C2  0401               	iorwf	1,w
 13873  04C3  1D03               	btfss	3,2
 13874  04C4  2CD4               	goto	l7729
 13875                           
 13876                           ;secret_task.c: 121: secret_found = secret_check(data, buttonPressed);
 13877  04C5  0859               	movf	secret_Main@data+1,w
 13878  04C6  00F8               	movwf	secret_check@data+1
 13879  04C7  0858               	movf	secret_Main@data,w
 13880  04C8  00F7               	movwf	secret_check@data
 13881  04C9  0857               	movf	secret_Main@buttonPressed,w
 13882  04CA  00D4               	movwf	??_secret_Main
 13883  04CB  0854               	movf	??_secret_Main,w
 13884  04CC  00F9               	movwf	secret_check@buttonPressed
 13885  04CD  3195  255B  3184   	fcall	_secret_check
 13886  04D0  0020               	movlb	0	; select bank0
 13887  04D1  00D5               	movwf	??_secret_Main+1
 13888  04D2  0855               	movf	??_secret_Main+1,w
 13889  04D3  00D6               	movwf	secret_Main@secret_found
 13890  04D4                     l7729:	
 13891                           
 13892                           ;secret_task.c: 122: }
 13893                           ;secret_task.c: 123: data->holdCountA += 1;
 13894  04D4  0858               	movf	secret_Main@data,w
 13895  04D5  0086               	movwf	6
 13896  04D6  0859               	movf	secret_Main@data+1,w
 13897  04D7  0087               	movwf	7
 13898  04D8  3144               	addfsr 1,4
 13899  04D9  3001               	movlw	1
 13900  04DA  0781               	addwf	1,f
 13901  04DB  3141               	addfsr 1,1
 13902  04DC  1803               	skipnc
 13903  04DD  0A81               	incf	1,f
 13904                           
 13905                           ;secret_task.c: 124: data->holdCountB = 0;
 13906  04DE  0858               	movf	secret_Main@data,w
 13907  04DF  0086               	movwf	6
 13908  04E0  0859               	movf	secret_Main@data+1,w
 13909  04E1  0087               	movwf	7
 13910  04E2  3146               	addfsr 1,6
 13911  04E3  3000               	movlw	0
 13912  04E4  3FC0               	movwi [0]fsr1
 13913  04E5  3FC1               	movwi [1]fsr1
 13914                           
 13915                           ;secret_task.c: 125: data->holdCountX = 0;
 13916  04E6  0858               	movf	secret_Main@data,w
 13917  04E7  0086               	movwf	6
 13918  04E8  0859               	movf	secret_Main@data+1,w
 13919  04E9  0087               	movwf	7
 13920  04EA  3148               	addfsr 1,8
 13921  04EB  3000               	movlw	0
 13922  04EC  3FC0               	movwi [0]fsr1
 13923  04ED  3FC1               	movwi [1]fsr1
 13924                           
 13925                           ;secret_task.c: 126: data->holdCountY = 0;
 13926  04EE  0858               	movf	secret_Main@data,w
 13927  04EF  0086               	movwf	6
 13928  04F0  0859               	movf	secret_Main@data+1,w
 13929  04F1  0087               	movwf	7
 13930  04F2  314A               	addfsr 1,10
 13931  04F3  3000               	movlw	0
 13932  04F4  3FC0               	movwi [0]fsr1
 13933  04F5  3FC1               	movwi [1]fsr1
 13934                           
 13935                           ;secret_task.c: 127: data->noholdCount = 0;
 13936  04F6  0858               	movf	secret_Main@data,w
 13937  04F7  0086               	movwf	6
 13938  04F8  0859               	movf	secret_Main@data+1,w
 13939  04F9  0087               	movwf	7
 13940  04FA  314C               	addfsr 1,12
 13941  04FB  3000               	movlw	0
 13942  04FC  3FC0               	movwi [0]fsr1
 13943  04FD  3FC1               	movwi [1]fsr1
 13944                           
 13945                           ;secret_task.c: 128: data->delayTickCount = 300;
 13946  04FE  0858               	movf	secret_Main@data,w
 13947  04FF  0086               	movwf	6
 13948  0500  0859               	movf	secret_Main@data+1,w
 13949  0501  0087               	movwf	7
 13950  0502  3142               	addfsr 1,2
 13951  0503  302C               	movlw	44
 13952  0504  3FC0               	movwi [0]fsr1
 13953  0505  3001               	movlw	1
 13954  0506  3FC1               	movwi [1]fsr1
 13955                           
 13956                           ;secret_task.c: 129: break;
 13957  0507  2E0F               	goto	l7795
 13958  0508                     l7741:	
 13959                           ;secret_task.c: 130: case 2:
 13960                           
 13961                           
 13962                           ;secret_task.c: 132: if (data->holdCountB == 0){
 13963  0508  0858               	movf	secret_Main@data,w
 13964  0509  0086               	movwf	6
 13965  050A  0859               	movf	secret_Main@data+1,w
 13966  050B  0087               	movwf	7
 13967  050C  3146               	addfsr 1,6
 13968  050D  0016               	moviw fsr1++
 13969  050E  0401               	iorwf	1,w
 13970  050F  1D03               	btfss	3,2
 13971  0510  2D20               	goto	l7745
 13972                           
 13973                           ;secret_task.c: 133: secret_found = secret_check(data, buttonPressed);
 13974  0511  0859               	movf	secret_Main@data+1,w
 13975  0512  00F8               	movwf	secret_check@data+1
 13976  0513  0858               	movf	secret_Main@data,w
 13977  0514  00F7               	movwf	secret_check@data
 13978  0515  0857               	movf	secret_Main@buttonPressed,w
 13979  0516  00D4               	movwf	??_secret_Main
 13980  0517  0854               	movf	??_secret_Main,w
 13981  0518  00F9               	movwf	secret_check@buttonPressed
 13982  0519  3195  255B  3184   	fcall	_secret_check
 13983  051C  0020               	movlb	0	; select bank0
 13984  051D  00D5               	movwf	??_secret_Main+1
 13985  051E  0855               	movf	??_secret_Main+1,w
 13986  051F  00D6               	movwf	secret_Main@secret_found
 13987  0520                     l7745:	
 13988                           
 13989                           ;secret_task.c: 134: }
 13990                           ;secret_task.c: 135: data->holdCountA = 0;
 13991  0520  0858               	movf	secret_Main@data,w
 13992  0521  0086               	movwf	6
 13993  0522  0859               	movf	secret_Main@data+1,w
 13994  0523  0087               	movwf	7
 13995  0524  3144               	addfsr 1,4
 13996  0525  3000               	movlw	0
 13997  0526  3FC0               	movwi [0]fsr1
 13998  0527  3FC1               	movwi [1]fsr1
 13999                           
 14000                           ;secret_task.c: 136: data->holdCountB += 1;
 14001  0528  0858               	movf	secret_Main@data,w
 14002  0529  0086               	movwf	6
 14003  052A  0859               	movf	secret_Main@data+1,w
 14004  052B  0087               	movwf	7
 14005  052C  3146               	addfsr 1,6
 14006  052D  3001               	movlw	1
 14007  052E  0781               	addwf	1,f
 14008  052F  3141               	addfsr 1,1
 14009  0530  1803               	skipnc
 14010  0531  0A81               	incf	1,f
 14011                           
 14012                           ;secret_task.c: 137: data->holdCountX = 0;
 14013  0532  0858               	movf	secret_Main@data,w
 14014  0533  0086               	movwf	6
 14015  0534  0859               	movf	secret_Main@data+1,w
 14016  0535  0087               	movwf	7
 14017  0536  3148               	addfsr 1,8
 14018  0537  3000               	movlw	0
 14019  0538  3FC0               	movwi [0]fsr1
 14020  0539  3FC1               	movwi [1]fsr1
 14021                           
 14022                           ;secret_task.c: 138: data->holdCountY = 0;
 14023  053A  0858               	movf	secret_Main@data,w
 14024  053B  0086               	movwf	6
 14025  053C  0859               	movf	secret_Main@data+1,w
 14026  053D  0087               	movwf	7
 14027  053E  314A               	addfsr 1,10
 14028  053F  3000               	movlw	0
 14029  0540  3FC0               	movwi [0]fsr1
 14030  0541  3FC1               	movwi [1]fsr1
 14031                           
 14032                           ;secret_task.c: 139: data->noholdCount = 0;
 14033  0542  0858               	movf	secret_Main@data,w
 14034  0543  0086               	movwf	6
 14035  0544  0859               	movf	secret_Main@data+1,w
 14036  0545  0087               	movwf	7
 14037  0546  314C               	addfsr 1,12
 14038  0547  3000               	movlw	0
 14039  0548  3FC0               	movwi [0]fsr1
 14040  0549  3FC1               	movwi [1]fsr1
 14041                           
 14042                           ;secret_task.c: 140: data->delayTickCount = 300;
 14043  054A  0858               	movf	secret_Main@data,w
 14044  054B  0086               	movwf	6
 14045  054C  0859               	movf	secret_Main@data+1,w
 14046  054D  0087               	movwf	7
 14047  054E  3142               	addfsr 1,2
 14048  054F  302C               	movlw	44
 14049  0550  3FC0               	movwi [0]fsr1
 14050  0551  3001               	movlw	1
 14051  0552  3FC1               	movwi [1]fsr1
 14052                           
 14053                           ;secret_task.c: 141: break;
 14054  0553  2E0F               	goto	l7795
 14055  0554                     l7757:	
 14056                           ;secret_task.c: 142: case 4:
 14057                           
 14058                           
 14059                           ;secret_task.c: 144: if (data->holdCountX == 0){
 14060  0554  0858               	movf	secret_Main@data,w
 14061  0555  0086               	movwf	6
 14062  0556  0859               	movf	secret_Main@data+1,w
 14063  0557  0087               	movwf	7
 14064  0558  3148               	addfsr 1,8
 14065  0559  0016               	moviw fsr1++
 14066  055A  0401               	iorwf	1,w
 14067  055B  1D03               	btfss	3,2
 14068  055C  2D6C               	goto	l7761
 14069                           
 14070                           ;secret_task.c: 145: secret_found = secret_check(data, buttonPressed);
 14071  055D  0859               	movf	secret_Main@data+1,w
 14072  055E  00F8               	movwf	secret_check@data+1
 14073  055F  0858               	movf	secret_Main@data,w
 14074  0560  00F7               	movwf	secret_check@data
 14075  0561  0857               	movf	secret_Main@buttonPressed,w
 14076  0562  00D4               	movwf	??_secret_Main
 14077  0563  0854               	movf	??_secret_Main,w
 14078  0564  00F9               	movwf	secret_check@buttonPressed
 14079  0565  3195  255B  3184   	fcall	_secret_check
 14080  0568  0020               	movlb	0	; select bank0
 14081  0569  00D5               	movwf	??_secret_Main+1
 14082  056A  0855               	movf	??_secret_Main+1,w
 14083  056B  00D6               	movwf	secret_Main@secret_found
 14084  056C                     l7761:	
 14085                           
 14086                           ;secret_task.c: 146: }
 14087                           ;secret_task.c: 147: data->holdCountA = 0;
 14088  056C  0858               	movf	secret_Main@data,w
 14089  056D  0086               	movwf	6
 14090  056E  0859               	movf	secret_Main@data+1,w
 14091  056F  0087               	movwf	7
 14092  0570  3144               	addfsr 1,4
 14093  0571  3000               	movlw	0
 14094  0572  3FC0               	movwi [0]fsr1
 14095  0573  3FC1               	movwi [1]fsr1
 14096                           
 14097                           ;secret_task.c: 148: data->holdCountB = 0;
 14098  0574  0858               	movf	secret_Main@data,w
 14099  0575  0086               	movwf	6
 14100  0576  0859               	movf	secret_Main@data+1,w
 14101  0577  0087               	movwf	7
 14102  0578  3146               	addfsr 1,6
 14103  0579  3000               	movlw	0
 14104  057A  3FC0               	movwi [0]fsr1
 14105  057B  3FC1               	movwi [1]fsr1
 14106                           
 14107                           ;secret_task.c: 149: data->holdCountX += 1;
 14108  057C  0858               	movf	secret_Main@data,w
 14109  057D  0086               	movwf	6
 14110  057E  0859               	movf	secret_Main@data+1,w
 14111  057F  0087               	movwf	7
 14112  0580  3148               	addfsr 1,8
 14113  0581  3001               	movlw	1
 14114  0582  0781               	addwf	1,f
 14115  0583  3141               	addfsr 1,1
 14116  0584  1803               	skipnc
 14117  0585  0A81               	incf	1,f
 14118                           
 14119                           ;secret_task.c: 150: data->holdCountY = 0;
 14120  0586  0858               	movf	secret_Main@data,w
 14121  0587  0086               	movwf	6
 14122  0588  0859               	movf	secret_Main@data+1,w
 14123  0589  0087               	movwf	7
 14124  058A  314A               	addfsr 1,10
 14125  058B  3000               	movlw	0
 14126  058C  3FC0               	movwi [0]fsr1
 14127  058D  3FC1               	movwi [1]fsr1
 14128                           
 14129                           ;secret_task.c: 151: data->noholdCount = 0;
 14130  058E  0858               	movf	secret_Main@data,w
 14131  058F  0086               	movwf	6
 14132  0590  0859               	movf	secret_Main@data+1,w
 14133  0591  0087               	movwf	7
 14134  0592  314C               	addfsr 1,12
 14135  0593  3000               	movlw	0
 14136  0594  3FC0               	movwi [0]fsr1
 14137  0595  3FC1               	movwi [1]fsr1
 14138                           
 14139                           ;secret_task.c: 152: data->delayTickCount = 300;
 14140  0596  0858               	movf	secret_Main@data,w
 14141  0597  0086               	movwf	6
 14142  0598  0859               	movf	secret_Main@data+1,w
 14143  0599  0087               	movwf	7
 14144  059A  3142               	addfsr 1,2
 14145  059B  302C               	movlw	44
 14146  059C  3FC0               	movwi [0]fsr1
 14147  059D  3001               	movlw	1
 14148  059E  3FC1               	movwi [1]fsr1
 14149                           
 14150                           ;secret_task.c: 153: break;
 14151  059F  2E0F               	goto	l7795
 14152  05A0                     l7773:	
 14153                           ;secret_task.c: 154: case 8:
 14154                           
 14155                           
 14156                           ;secret_task.c: 156: if (data->holdCountY == 0){
 14157  05A0  0858               	movf	secret_Main@data,w
 14158  05A1  0086               	movwf	6
 14159  05A2  0859               	movf	secret_Main@data+1,w
 14160  05A3  0087               	movwf	7
 14161  05A4  314A               	addfsr 1,10
 14162  05A5  0016               	moviw fsr1++
 14163  05A6  0401               	iorwf	1,w
 14164  05A7  1D03               	btfss	3,2
 14165  05A8  2DB8               	goto	l7777
 14166                           
 14167                           ;secret_task.c: 157: secret_found = secret_check(data, buttonPressed);
 14168  05A9  0859               	movf	secret_Main@data+1,w
 14169  05AA  00F8               	movwf	secret_check@data+1
 14170  05AB  0858               	movf	secret_Main@data,w
 14171  05AC  00F7               	movwf	secret_check@data
 14172  05AD  0857               	movf	secret_Main@buttonPressed,w
 14173  05AE  00D4               	movwf	??_secret_Main
 14174  05AF  0854               	movf	??_secret_Main,w
 14175  05B0  00F9               	movwf	secret_check@buttonPressed
 14176  05B1  3195  255B  3184   	fcall	_secret_check
 14177  05B4  0020               	movlb	0	; select bank0
 14178  05B5  00D5               	movwf	??_secret_Main+1
 14179  05B6  0855               	movf	??_secret_Main+1,w
 14180  05B7  00D6               	movwf	secret_Main@secret_found
 14181  05B8                     l7777:	
 14182                           
 14183                           ;secret_task.c: 158: }
 14184                           ;secret_task.c: 159: data->holdCountA = 0;
 14185  05B8  0858               	movf	secret_Main@data,w
 14186  05B9  0086               	movwf	6
 14187  05BA  0859               	movf	secret_Main@data+1,w
 14188  05BB  0087               	movwf	7
 14189  05BC  3144               	addfsr 1,4
 14190  05BD  3000               	movlw	0
 14191  05BE  3FC0               	movwi [0]fsr1
 14192  05BF  3FC1               	movwi [1]fsr1
 14193                           
 14194                           ;secret_task.c: 160: data->holdCountB = 0;
 14195  05C0  0858               	movf	secret_Main@data,w
 14196  05C1  0086               	movwf	6
 14197  05C2  0859               	movf	secret_Main@data+1,w
 14198  05C3  0087               	movwf	7
 14199  05C4  3146               	addfsr 1,6
 14200  05C5  3000               	movlw	0
 14201  05C6  3FC0               	movwi [0]fsr1
 14202  05C7  3FC1               	movwi [1]fsr1
 14203                           
 14204                           ;secret_task.c: 161: data->holdCountX = 0;
 14205  05C8  0858               	movf	secret_Main@data,w
 14206  05C9  0086               	movwf	6
 14207  05CA  0859               	movf	secret_Main@data+1,w
 14208  05CB  0087               	movwf	7
 14209  05CC  3148               	addfsr 1,8
 14210  05CD  3000               	movlw	0
 14211  05CE  3FC0               	movwi [0]fsr1
 14212  05CF  3FC1               	movwi [1]fsr1
 14213                           
 14214                           ;secret_task.c: 162: data->holdCountY += 1;
 14215  05D0  0858               	movf	secret_Main@data,w
 14216  05D1  0086               	movwf	6
 14217  05D2  0859               	movf	secret_Main@data+1,w
 14218  05D3  0087               	movwf	7
 14219  05D4  314A               	addfsr 1,10
 14220  05D5  3001               	movlw	1
 14221  05D6  0781               	addwf	1,f
 14222  05D7  3141               	addfsr 1,1
 14223  05D8  1803               	skipnc
 14224  05D9  0A81               	incf	1,f
 14225                           
 14226                           ;secret_task.c: 163: data->noholdCount = 0;
 14227  05DA  0858               	movf	secret_Main@data,w
 14228  05DB  0086               	movwf	6
 14229  05DC  0859               	movf	secret_Main@data+1,w
 14230  05DD  0087               	movwf	7
 14231  05DE  314C               	addfsr 1,12
 14232  05DF  3000               	movlw	0
 14233  05E0  3FC0               	movwi [0]fsr1
 14234  05E1  3FC1               	movwi [1]fsr1
 14235                           
 14236                           ;secret_task.c: 164: data->delayTickCount = 300;
 14237  05E2  0858               	movf	secret_Main@data,w
 14238  05E3  0086               	movwf	6
 14239  05E4  0859               	movf	secret_Main@data+1,w
 14240  05E5  0087               	movwf	7
 14241  05E6  3142               	addfsr 1,2
 14242  05E7  302C               	movlw	44
 14243  05E8  3FC0               	movwi [0]fsr1
 14244  05E9  3001               	movlw	1
 14245  05EA  3FC1               	movwi [1]fsr1
 14246                           
 14247                           ;secret_task.c: 165: break;
 14248  05EB  2E0F               	goto	l7795
 14249  05EC                     l7789:	
 14250                           ;secret_task.c: 166: default:
 14251                           
 14252                           
 14253                           ;secret_task.c: 168: secret_check(data, 0);
 14254  05EC  0859               	movf	secret_Main@data+1,w
 14255  05ED  00F8               	movwf	secret_check@data+1
 14256  05EE  0858               	movf	secret_Main@data,w
 14257  05EF  00F7               	movwf	secret_check@data
 14258  05F0  01F9               	clrf	secret_check@buttonPressed
 14259  05F1  3195  255B  3184   	fcall	_secret_check
 14260                           
 14261                           ;secret_task.c: 169: secret_clear(data);
 14262  05F4  0020               	movlb	0	; select bank0
 14263  05F5  0859               	movf	secret_Main@data+1,w
 14264  05F6  00F2               	movwf	secret_clear@data+1
 14265  05F7  0858               	movf	secret_Main@data,w
 14266  05F8  00F1               	movwf	secret_clear@data
 14267  05F9  319A  2268  3184   	fcall	_secret_clear
 14268                           
 14269                           ;secret_task.c: 170: }
 14270  05FC  2E0F               	goto	l7795
 14271  05FD                     l7793:	
 14272  05FD  0020               	movlb	0	; select bank0
 14273  05FE  0857               	movf	secret_Main@buttonPressed,w
 14274                           
 14275                           ; Switch size 1, requested type "space"
 14276                           ; Number of cases is 5, Range of values is 0 to 8
 14277                           ; switch strategies available:
 14278                           ; Name         Instructions Cycles
 14279                           ; simple_byte           16     9 (average)
 14280                           ; direct_byte           24     6 (fixed)
 14281                           ; jumptable            260     6 (fixed)
 14282                           ;	Chosen strategy is simple_byte
 14283  05FF  3A00               	xorlw	0	; case 0
 14284  0600  1903               	skipnz
 14285  0601  2C6B               	goto	l7707
 14286  0602  3A01               	xorlw	1	; case 1
 14287  0603  1903               	skipnz
 14288  0604  2CBC               	goto	l7725
 14289  0605  3A03               	xorlw	3	; case 2
 14290  0606  1903               	skipnz
 14291  0607  2D08               	goto	l7741
 14292  0608  3A06               	xorlw	6	; case 4
 14293  0609  1903               	skipnz
 14294  060A  2D54               	goto	l7757
 14295  060B  3A0C               	xorlw	12	; case 8
 14296  060C  1903               	skipnz
 14297  060D  2DA0               	goto	l7773
 14298  060E  2DEC               	goto	l7789
 14299  060F                     l7795:	
 14300                           
 14301                           ;secret_task.c: 173: if (secret_found){
 14302  060F  0020               	movlb	0	; select bank0
 14303  0610  0856               	movf	secret_Main@secret_found,w
 14304  0611  1903               	btfsc	3,2
 14305  0612  0008               	return
 14306                           
 14307                           ;secret_task.c: 174: secret_clear(data);
 14308  0613  0859               	movf	secret_Main@data+1,w
 14309  0614  00F2               	movwf	secret_clear@data+1
 14310  0615  0858               	movf	secret_Main@data,w
 14311  0616  00F1               	movwf	secret_clear@data
 14312  0617  319A  2268         	fcall	_secret_clear
 14313  0619  0008               	return
 14314  061A                     __end_of_secret_Main:	
 14315                           
 14316                           	psect	text14
 14317  0293                     __ptext14:	
 14318 ;; *************** function _locked_Main *****************
 14319 ;; Defined at:
 14320 ;;		line 84 in file "locked_task.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;  taskData        2   50[BANK0 ] PTR void 
 14323 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14324 ;;		 -> flashy_TaskData(30), NULL(0), 
 14325 ;; Auto vars:     Size  Location     Type
 14326 ;;  data            2   55[BANK0 ] PTR struct t_locked_task
 14327 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14328 ;;		 -> flashy_TaskData(30), NULL(0), 
 14329 ;;  buttonPresse    1   54[BANK0 ] unsigned char 
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  1    wreg      void 
 14332 ;; Registers used:
 14333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14334 ;; Tracked objects:
 14335 ;;		On entry : 0/0
 14336 ;;		On exit  : 0/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14340 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14342 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14343 ;;Total ram usage:        7 bytes
 14344 ;; Hardware stack levels used:    1
 14345 ;; Hardware stack levels required when called:   11
 14346 ;; This function calls:
 14347 ;;		___lwmod
 14348 ;;		_locked_clear
 14349 ;;		_locked_get_lock_leds
 14350 ;;		_locked_get_unlock_leds
 14351 ;;		_locked_lock_leds
 14352 ;;		_locked_unlock_leds
 14353 ;;		_marquee
 14354 ;;		_nullifyBadge_buttonsGet
 14355 ;;		_nullifyBadge_userLedsSet
 14356 ;; This function is called by:
 14357 ;;		_main
 14358 ;;		_scheduler_TaskRun
 14359 ;; This function uses a non-reentrant model
 14360 ;;
 14361                           
 14362                           
 14363                           ;psect for function _locked_Main
 14364  0293                     _locked_Main:	
 14365                           
 14366                           ;locked_task.c: 85: struct t_locked_taskData *data = (struct t_locked_taskData *) taskDa
      +                          ta;
 14367                           
 14368                           ;incstack = 0
 14369                           ; Regs used in _locked_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14370  0293  0020               	movlb	0	; select bank0
 14371  0294  0853               	movf	locked_Main@taskData+1,w
 14372  0295  00D8               	movwf	locked_Main@data+1
 14373  0296  0852               	movf	locked_Main@taskData,w
 14374  0297  00D7               	movwf	locked_Main@data
 14375                           
 14376                           ;locked_task.c: 86: u8 buttonPressed;
 14377                           ;locked_task.c: 88: if ( currentTask != LOCKED_TASK ){
 14378  0298  3003               	movlw	3
 14379  0299  0021               	movlb	1	; select bank1
 14380  029A  0636               	xorwf	_currentTask^(0+128),w
 14381  029B  0437               	iorwf	(_currentTask+1)^(0+128),w
 14382  029C  1903               	btfsc	3,2
 14383  029D  2B9B               	goto	l7667
 14384                           
 14385                           ;locked_task.c: 89: data->holdCountA = 1;
 14386  029E  0020               	movlb	0	; select bank0
 14387  029F  0857               	movf	locked_Main@data,w
 14388  02A0  0086               	movwf	6
 14389  02A1  0858               	movf	locked_Main@data+1,w
 14390  02A2  0087               	movwf	7
 14391  02A3  3143               	addfsr 1,3
 14392  02A4  3001               	movlw	1
 14393  02A5  3FC0               	movwi [0]fsr1
 14394  02A6  3000               	movlw	0
 14395  02A7  3FC1               	movwi [1]fsr1
 14396                           
 14397                           ;locked_task.c: 90: data->holdCountB = 1;
 14398  02A8  0857               	movf	locked_Main@data,w
 14399  02A9  0086               	movwf	6
 14400  02AA  0858               	movf	locked_Main@data+1,w
 14401  02AB  0087               	movwf	7
 14402  02AC  3145               	addfsr 1,5
 14403  02AD  3001               	movlw	1
 14404  02AE  3FC0               	movwi [0]fsr1
 14405  02AF  3000               	movlw	0
 14406  02B0  3FC1               	movwi [1]fsr1
 14407                           
 14408                           ;locked_task.c: 91: data->holdCountX = 1;
 14409  02B1  0857               	movf	locked_Main@data,w
 14410  02B2  0086               	movwf	6
 14411  02B3  0858               	movf	locked_Main@data+1,w
 14412  02B4  0087               	movwf	7
 14413  02B5  3147               	addfsr 1,7
 14414  02B6  3001               	movlw	1
 14415  02B7  3FC0               	movwi [0]fsr1
 14416  02B8  3000               	movlw	0
 14417  02B9  3FC1               	movwi [1]fsr1
 14418                           
 14419                           ;locked_task.c: 92: data->holdCountY = 1;
 14420  02BA  0857               	movf	locked_Main@data,w
 14421  02BB  0086               	movwf	6
 14422  02BC  0858               	movf	locked_Main@data+1,w
 14423  02BD  0087               	movwf	7
 14424  02BE  3149               	addfsr 1,9
 14425  02BF  3001               	movlw	1
 14426  02C0  3FC0               	movwi [0]fsr1
 14427  02C1  3000               	movlw	0
 14428  02C2  3FC1               	movwi [1]fsr1
 14429                           
 14430                           ;locked_task.c: 93: return;
 14431  02C3  0008               	return
 14432  02C4                     l7625:	
 14433                           ;locked_task.c: 100: case LOCKED_UNLOCKING_STATE:
 14434                           
 14435                           ;locked_task.c: 94: }
 14436                           ;locked_task.c: 99: switch (data->state){
 14437                           
 14438                           
 14439                           ;locked_task.c: 101: badge_locked = 0;
 14440  02C4  01FC               	clrf	_badge_locked
 14441                           
 14442                           ;locked_task.c: 102: marquee("UNLOCKING...", data->delayTickCount);
 14443  02C5  303A               	movlw	low (STR_22| (0+32768))
 14444  02C6  00BA               	movwf	marquee@string
 14445  02C7  30A8               	movlw	high (STR_22| (0+32768))
 14446  02C8  00BB               	movwf	marquee@string+1
 14447  02C9  0857               	movf	locked_Main@data,w
 14448  02CA  0086               	movwf	6
 14449  02CB  0858               	movf	locked_Main@data+1,w
 14450  02CC  0087               	movwf	7
 14451  02CD  3141               	addfsr 1,1
 14452  02CE  3F40               	moviw [0]fsr1
 14453  02CF  00BC               	movwf	marquee@count
 14454  02D0  3F41               	moviw [1]fsr1
 14455  02D1  00BD               	movwf	marquee@count+1
 14456  02D2  3193  2350  3182   	fcall	_marquee
 14457                           
 14458                           ;locked_task.c: 104: if (data->delayTickCount % 75 == 0){
 14459  02D5  304B               	movlw	75
 14460  02D6  0020               	movlb	0	; select bank0
 14461  02D7  00A0               	movwf	___lwmod@divisor
 14462  02D8  3000               	movlw	0
 14463  02D9  00A1               	movwf	___lwmod@divisor+1
 14464  02DA  0857               	movf	locked_Main@data,w
 14465  02DB  0086               	movwf	6
 14466  02DC  0858               	movf	locked_Main@data+1,w
 14467  02DD  0087               	movwf	7
 14468  02DE  3141               	addfsr 1,1
 14469  02DF  3F40               	moviw [0]fsr1
 14470  02E0  00A2               	movwf	___lwmod@dividend
 14471  02E1  3F41               	moviw [1]fsr1
 14472  02E2  00A3               	movwf	___lwmod@dividend+1
 14473  02E3  3199  21A9  3182   	fcall	___lwmod
 14474  02E6  0020               	movlb	0	; select bank0
 14475  02E7  0820               	movf	?___lwmod,w
 14476  02E8  0421               	iorwf	?___lwmod+1,w
 14477  02E9  1D03               	btfss	3,2
 14478  02EA  2AF5               	goto	l7633
 14479                           
 14480                           ;locked_task.c: 105: locked_leds = locked_lock_base_leds | locked_get_unlock_leds();
 14481  02EB  31A7  27E7  3182   	fcall	_locked_get_unlock_leds
 14482  02EE  0021               	movlb	1	; select bank1
 14483  02EF  0860               	movf	_locked_lock_base_leds^(0+128),w
 14484  02F0  0471               	iorwf	?_locked_get_unlock_leds,w
 14485  02F1  00A0               	movwf	_locked_leds^(0+128)
 14486  02F2  0861               	movf	(_locked_lock_base_leds+1)^(0+128),w
 14487  02F3  0472               	iorwf	?_locked_get_unlock_leds+1,w
 14488  02F4  00A1               	movwf	(_locked_leds+1)^(0+128)
 14489  02F5                     l7633:	
 14490                           
 14491                           ;locked_task.c: 106: }
 14492                           ;locked_task.c: 109: if (data->delayTickCount == 375){
 14493  02F5  0020               	movlb	0	; select bank0
 14494  02F6  0857               	movf	locked_Main@data,w
 14495  02F7  0086               	movwf	6
 14496  02F8  0858               	movf	locked_Main@data+1,w
 14497  02F9  0087               	movwf	7
 14498  02FA  3141               	addfsr 1,1
 14499  02FB  0016               	moviw fsr1++
 14500  02FC  3A77               	xorlw	119
 14501  02FD  00D4               	movwf	??_locked_Main
 14502  02FE  0016               	moviw fsr1++
 14503  02FF  3A01               	xorlw	1
 14504  0300  04D4               	iorwf	??_locked_Main,f
 14505  0301  1D03               	btfss	3,2
 14506  0302  2B65               	goto	l7653
 14507                           
 14508                           ;locked_task.c: 110: data->state = LOCKED_UNLOCKED_STATE;
 14509  0303  0857               	movf	locked_Main@data,w
 14510  0304  3E0D               	addlw	13
 14511  0305  00D4               	movwf	??_locked_Main
 14512  0306  3000               	movlw	0
 14513  0307  3D58               	addwfc	locked_Main@data+1,w
 14514  0308  00D5               	movwf	??_locked_Main+1
 14515  0309  0854               	movf	??_locked_Main,w
 14516  030A  0086               	movwf	6
 14517  030B  0855               	movf	??_locked_Main+1,w
 14518  030C  0087               	movwf	7
 14519  030D  3002               	movlw	2
 14520  030E  0081               	movwf	1
 14521                           
 14522                           ;locked_task.c: 111: data->delayTickCount = 0;
 14523  030F  0857               	movf	locked_Main@data,w
 14524  0310  0086               	movwf	6
 14525  0311  0858               	movf	locked_Main@data+1,w
 14526  0312  0087               	movwf	7
 14527  0313  3141               	addfsr 1,1
 14528  0314  3000               	movlw	0
 14529  0315  3FC0               	movwi [0]fsr1
 14530  0316  3FC1               	movwi [1]fsr1
 14531  0317  2BAF               	goto	l7669
 14532  0318                     l7641:	
 14533                           ;locked_task.c: 117: case LOCKED_LOCKING_STATE:
 14534                           
 14535                           ;locked_task.c: 115: }
 14536                           ;locked_task.c: 116: break;
 14537                           
 14538                           ;locked_task.c: 113: else {
 14539                           ;locked_task.c: 114: data->delayTickCount += 1;
 14540                           
 14541                           ;locked_task.c: 112: }
 14542                           
 14543                           
 14544                           ;locked_task.c: 118: marquee("LOCKING...", data->delayTickCount);
 14545  0318  303C               	movlw	low ((STR_22+2)| (0+32768))
 14546  0319  00BA               	movwf	marquee@string
 14547  031A  30A8               	movlw	high ((STR_22+2)| (0+32768))
 14548  031B  00BB               	movwf	marquee@string+1
 14549  031C  0857               	movf	locked_Main@data,w
 14550  031D  0086               	movwf	6
 14551  031E  0858               	movf	locked_Main@data+1,w
 14552  031F  0087               	movwf	7
 14553  0320  3141               	addfsr 1,1
 14554  0321  3F40               	moviw [0]fsr1
 14555  0322  00BC               	movwf	marquee@count
 14556  0323  3F41               	moviw [1]fsr1
 14557  0324  00BD               	movwf	marquee@count+1
 14558  0325  3193  2350  3182   	fcall	_marquee
 14559                           
 14560                           ;locked_task.c: 120: if (data->delayTickCount % 75 == 0){
 14561  0328  304B               	movlw	75
 14562  0329  0020               	movlb	0	; select bank0
 14563  032A  00A0               	movwf	___lwmod@divisor
 14564  032B  3000               	movlw	0
 14565  032C  00A1               	movwf	___lwmod@divisor+1
 14566  032D  0857               	movf	locked_Main@data,w
 14567  032E  0086               	movwf	6
 14568  032F  0858               	movf	locked_Main@data+1,w
 14569  0330  0087               	movwf	7
 14570  0331  3141               	addfsr 1,1
 14571  0332  3F40               	moviw [0]fsr1
 14572  0333  00A2               	movwf	___lwmod@dividend
 14573  0334  3F41               	moviw [1]fsr1
 14574  0335  00A3               	movwf	___lwmod@dividend+1
 14575  0336  3199  21A9  3182   	fcall	___lwmod
 14576  0339  0020               	movlb	0	; select bank0
 14577  033A  0820               	movf	?___lwmod,w
 14578  033B  0421               	iorwf	?___lwmod+1,w
 14579  033C  1D03               	btfss	3,2
 14580  033D  2B48               	goto	l7647
 14581                           
 14582                           ;locked_task.c: 121: locked_leds = locked_lock_base_leds | locked_get_lock_leds();
 14583  033E  3199  215A  3182   	fcall	_locked_get_lock_leds
 14584  0341  0021               	movlb	1	; select bank1
 14585  0342  0860               	movf	_locked_lock_base_leds^(0+128),w
 14586  0343  0471               	iorwf	?_locked_get_lock_leds,w
 14587  0344  00A0               	movwf	_locked_leds^(0+128)
 14588  0345  0861               	movf	(_locked_lock_base_leds+1)^(0+128),w
 14589  0346  0472               	iorwf	?_locked_get_lock_leds+1,w
 14590  0347  00A1               	movwf	(_locked_leds+1)^(0+128)
 14591  0348                     l7647:	
 14592                           
 14593                           ;locked_task.c: 122: }
 14594                           ;locked_task.c: 125: if (data->delayTickCount == 375){
 14595  0348  0020               	movlb	0	; select bank0
 14596  0349  0857               	movf	locked_Main@data,w
 14597  034A  0086               	movwf	6
 14598  034B  0858               	movf	locked_Main@data+1,w
 14599  034C  0087               	movwf	7
 14600  034D  3141               	addfsr 1,1
 14601  034E  0016               	moviw fsr1++
 14602  034F  3A77               	xorlw	119
 14603  0350  00D4               	movwf	??_locked_Main
 14604  0351  0016               	moviw fsr1++
 14605  0352  3A01               	xorlw	1
 14606  0353  04D4               	iorwf	??_locked_Main,f
 14607  0354  1D03               	btfss	3,2
 14608  0355  2B65               	goto	l7653
 14609                           
 14610                           ;locked_task.c: 126: data->state = LOCKED_LOCKED_STATE;
 14611  0356  0857               	movf	locked_Main@data,w
 14612  0357  0086               	movwf	6
 14613  0358  0858               	movf	locked_Main@data+1,w
 14614  0359  0087               	movwf	7
 14615  035A  314D               	addfsr 1,13
 14616  035B  0181               	clrf	1
 14617                           
 14618                           ;locked_task.c: 127: data->delayTickCount = 0;
 14619  035C  0857               	movf	locked_Main@data,w
 14620  035D  0086               	movwf	6
 14621  035E  0858               	movf	locked_Main@data+1,w
 14622  035F  0087               	movwf	7
 14623  0360  3141               	addfsr 1,1
 14624  0361  3000               	movlw	0
 14625  0362  3FC0               	movwi [0]fsr1
 14626  0363  3FC1               	movwi [1]fsr1
 14627                           
 14628                           ;locked_task.c: 128: }
 14629  0364  2BAF               	goto	l7669
 14630  0365                     l7653:	
 14631                           
 14632                           ;locked_task.c: 129: else {
 14633                           ;locked_task.c: 130: data->delayTickCount += 1;
 14634  0365  0857               	movf	locked_Main@data,w
 14635  0366  0086               	movwf	6
 14636  0367  0858               	movf	locked_Main@data+1,w
 14637  0368  0087               	movwf	7
 14638  0369  3141               	addfsr 1,1
 14639  036A  3001               	movlw	1
 14640  036B  0781               	addwf	1,f
 14641  036C  3141               	addfsr 1,1
 14642  036D  1803               	skipnc
 14643  036E  0A81               	incf	1,f
 14644                           
 14645                           ;locked_task.c: 131: }
 14646                           ;locked_task.c: 132: break;
 14647  036F  2BAF               	goto	l7669
 14648  0370                     l7655:	
 14649                           ;locked_task.c: 133: case LOCKED_UNLOCKED_STATE:
 14650                           
 14651                           
 14652                           ;locked_task.c: 134: badge_locked = 0;
 14653  0370  01FC               	clrf	_badge_locked
 14654                           
 14655                           ;locked_task.c: 136: marquee("OPEN", data->delayTickCount);
 14656  0371  307E               	movlw	low (STR_24| (0+32768))
 14657  0372  00BA               	movwf	marquee@string
 14658  0373  30A8               	movlw	high (STR_24| (0+32768))
 14659  0374  00BB               	movwf	marquee@string+1
 14660  0375  0857               	movf	locked_Main@data,w
 14661  0376  0086               	movwf	6
 14662  0377  0858               	movf	locked_Main@data+1,w
 14663  0378  0087               	movwf	7
 14664  0379  3141               	addfsr 1,1
 14665  037A  3F40               	moviw [0]fsr1
 14666  037B  00BC               	movwf	marquee@count
 14667  037C  3F41               	moviw [1]fsr1
 14668  037D  00BD               	movwf	marquee@count+1
 14669  037E  3193  2350  3182   	fcall	_marquee
 14670                           
 14671                           ;locked_task.c: 137: locked_unlock_leds();
 14672  0381  3187  27ED  3182   	fcall	_locked_unlock_leds
 14673                           
 14674                           ;locked_task.c: 138: break;
 14675  0384  2BAF               	goto	l7669
 14676  0385                     l1218:	
 14677                           ;locked_task.c: 139: case LOCKED_LOCKED_STATE:
 14678                           
 14679                           
 14680                           ;locked_task.c: 140: badge_locked = 1;
 14681  0385  01FC               	clrf	_badge_locked
 14682  0386  0AFC               	incf	_badge_locked,f
 14683                           
 14684                           ;locked_task.c: 141: marquee("LOCK", data->delayTickCount);
 14685  0387  3079               	movlw	low (STR_25| (0+32768))
 14686  0388  00BA               	movwf	marquee@string
 14687  0389  30A8               	movlw	high (STR_25| (0+32768))
 14688  038A  00BB               	movwf	marquee@string+1
 14689  038B  0857               	movf	locked_Main@data,w
 14690  038C  0086               	movwf	6
 14691  038D  0858               	movf	locked_Main@data+1,w
 14692  038E  0087               	movwf	7
 14693  038F  3141               	addfsr 1,1
 14694  0390  3F40               	moviw [0]fsr1
 14695  0391  00BC               	movwf	marquee@count
 14696  0392  3F41               	moviw [1]fsr1
 14697  0393  00BD               	movwf	marquee@count+1
 14698  0394  3193  2350  3182   	fcall	_marquee
 14699                           
 14700                           ;locked_task.c: 143: locked_lock_leds();
 14701  0397  3198  2047  3182   	fcall	_locked_lock_leds
 14702                           
 14703                           ;locked_task.c: 145: }
 14704                           
 14705                           ;locked_task.c: 144: break;
 14706  039A  2BAF               	goto	l7669
 14707  039B                     l7667:	
 14708  039B  0020               	movlb	0	; select bank0
 14709  039C  0857               	movf	locked_Main@data,w
 14710  039D  0086               	movwf	6
 14711  039E  0858               	movf	locked_Main@data+1,w
 14712  039F  0087               	movwf	7
 14713  03A0  314D               	addfsr 1,13
 14714  03A1  0801               	movf	1,w
 14715                           
 14716                           ; Switch size 1, requested type "space"
 14717                           ; Number of cases is 4, Range of values is 0 to 3
 14718                           ; switch strategies available:
 14719                           ; Name         Instructions Cycles
 14720                           ; simple_byte           13     7 (average)
 14721                           ; direct_byte           14     6 (fixed)
 14722                           ; jumptable            260     6 (fixed)
 14723                           ;	Chosen strategy is simple_byte
 14724  03A2  3A00               	xorlw	0	; case 0
 14725  03A3  1903               	skipnz
 14726  03A4  2B85               	goto	l1218
 14727  03A5  3A01               	xorlw	1	; case 1
 14728  03A6  1903               	skipnz
 14729  03A7  2B18               	goto	l7641
 14730  03A8  3A03               	xorlw	3	; case 2
 14731  03A9  1903               	skipnz
 14732  03AA  2B70               	goto	l7655
 14733  03AB  3A01               	xorlw	1	; case 3
 14734  03AC  1903               	skipnz
 14735  03AD  2AC4               	goto	l7625
 14736  03AE  2BAF               	goto	l7669
 14737  03AF                     l7669:	
 14738                           
 14739                           ;locked_task.c: 146: nullifyBadge_userLedsSet(data->badge, locked_leds);
 14740  03AF  0021               	movlb	1	; select bank1
 14741  03B0  0821               	movf	(_locked_leds+1)^(0+128),w
 14742  03B1  0020               	movlb	0	; select bank0
 14743  03B2  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 14744  03B3  0021               	movlb	1	; select bank1
 14745  03B4  0820               	movf	_locked_leds^(0+128),w
 14746  03B5  0020               	movlb	0	; select bank0
 14747  03B6  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 14748  03B7  0857               	movf	locked_Main@data,w
 14749  03B8  0086               	movwf	6
 14750  03B9  0858               	movf	locked_Main@data+1,w
 14751  03BA  0087               	movwf	7
 14752  03BB  0801               	movf	1,w
 14753  03BC  31A6  26E5  3182   	fcall	_nullifyBadge_userLedsSet
 14754                           
 14755                           ;locked_task.c: 149: buttonPressed = nullifyBadge_buttonsGet();
 14756  03BF  319A  2205  3182   	fcall	_nullifyBadge_buttonsGet
 14757  03C2  0020               	movlb	0	; select bank0
 14758  03C3  00D4               	movwf	??_locked_Main
 14759  03C4  0854               	movf	??_locked_Main,w
 14760  03C5  00D6               	movwf	locked_Main@buttonPressed
 14761                           
 14762                           ;locked_task.c: 150: switch (buttonPressed) {
 14763  03C6  2C54               	goto	l7699
 14764  03C7                     l7673:	
 14765                           ;locked_task.c: 151: case 4:
 14766                           
 14767                           
 14768                           ;locked_task.c: 152: locked_clear(data);
 14769  03C7  0858               	movf	locked_Main@data+1,w
 14770  03C8  00BA               	movwf	locked_clear@data+1
 14771  03C9  0857               	movf	locked_Main@data,w
 14772  03CA  00B9               	movwf	locked_clear@data
 14773  03CB  319C  2478         	fcall	_locked_clear
 14774                           
 14775                           ;locked_task.c: 153: currentTask = MENU_TASK;
 14776  03CD  0021               	movlb	1	; select bank1
 14777  03CE  01B6               	clrf	_currentTask^(0+128)
 14778  03CF  01B7               	clrf	(_currentTask+1)^(0+128)
 14779                           
 14780                           ;locked_task.c: 154: break;
 14781  03D0  0008               	return
 14782  03D1                     l7677:	
 14783                           ;locked_task.c: 155: case 8:
 14784                           
 14785                           
 14786                           ;locked_task.c: 156: if (data->holdCountY == 0){
 14787  03D1  0020               	movlb	0	; select bank0
 14788  03D2  0857               	movf	locked_Main@data,w
 14789  03D3  0086               	movwf	6
 14790  03D4  0858               	movf	locked_Main@data+1,w
 14791  03D5  0087               	movwf	7
 14792  03D6  3149               	addfsr 1,9
 14793  03D7  0016               	moviw fsr1++
 14794  03D8  0401               	iorwf	1,w
 14795  03D9  1D03               	btfss	3,2
 14796  03DA  2BFE               	goto	l7687
 14797                           
 14798                           ;locked_task.c: 159: data->delayTickCount = 0;
 14799  03DB  0857               	movf	locked_Main@data,w
 14800  03DC  0086               	movwf	6
 14801  03DD  0858               	movf	locked_Main@data+1,w
 14802  03DE  0087               	movwf	7
 14803  03DF  3141               	addfsr 1,1
 14804  03E0  3000               	movlw	0
 14805  03E1  3FC0               	movwi [0]fsr1
 14806  03E2  3FC1               	movwi [1]fsr1
 14807                           
 14808                           ;locked_task.c: 160: if (badge_locked){
 14809  03E3  087C               	movf	_badge_locked,w
 14810  03E4  1903               	btfsc	3,2
 14811  03E5  2BF2               	goto	l7685
 14812                           
 14813                           ;locked_task.c: 162: data->state = LOCKED_UNLOCKING_STATE;
 14814  03E6  0857               	movf	locked_Main@data,w
 14815  03E7  3E0D               	addlw	13
 14816  03E8  00D4               	movwf	??_locked_Main
 14817  03E9  3000               	movlw	0
 14818  03EA  3D58               	addwfc	locked_Main@data+1,w
 14819  03EB  00D5               	movwf	??_locked_Main+1
 14820  03EC  0854               	movf	??_locked_Main,w
 14821  03ED  0086               	movwf	6
 14822  03EE  0855               	movf	??_locked_Main+1,w
 14823  03EF  0087               	movwf	7
 14824  03F0  3003               	movlw	3
 14825  03F1  2BFD               	goto	L3
 14826  03F2                     l7685:	
 14827                           ;locked_task.c: 163: }
 14828                           
 14829                           
 14830                           ;locked_task.c: 164: else {
 14831                           ;locked_task.c: 166: data->state = LOCKED_LOCKING_STATE;
 14832  03F2  0857               	movf	locked_Main@data,w
 14833  03F3  3E0D               	addlw	13
 14834  03F4  00D4               	movwf	??_locked_Main
 14835  03F5  3000               	movlw	0
 14836  03F6  3D58               	addwfc	locked_Main@data+1,w
 14837  03F7  00D5               	movwf	??_locked_Main+1
 14838  03F8  0854               	movf	??_locked_Main,w
 14839  03F9  0086               	movwf	6
 14840  03FA  0855               	movf	??_locked_Main+1,w
 14841  03FB  0087               	movwf	7
 14842  03FC  3001               	movlw	1
 14843  03FD                     L3:	
 14844  03FD  0081               	movwf	1
 14845  03FE                     l7687:	
 14846                           
 14847                           ;locked_task.c: 167: }
 14848                           ;locked_task.c: 168: }
 14849                           ;locked_task.c: 169: data->holdCountA = 0;
 14850  03FE  0857               	movf	locked_Main@data,w
 14851  03FF  0086               	movwf	6
 14852  0400  0858               	movf	locked_Main@data+1,w
 14853  0401  0087               	movwf	7
 14854  0402  3143               	addfsr 1,3
 14855  0403  3000               	movlw	0
 14856  0404  3FC0               	movwi [0]fsr1
 14857  0405  3FC1               	movwi [1]fsr1
 14858                           
 14859                           ;locked_task.c: 170: data->holdCountB = 0;
 14860  0406  0857               	movf	locked_Main@data,w
 14861  0407  0086               	movwf	6
 14862  0408  0858               	movf	locked_Main@data+1,w
 14863  0409  0087               	movwf	7
 14864  040A  3145               	addfsr 1,5
 14865  040B  3000               	movlw	0
 14866  040C  3FC0               	movwi [0]fsr1
 14867  040D  3FC1               	movwi [1]fsr1
 14868                           
 14869                           ;locked_task.c: 171: data->holdCountX = 0;
 14870  040E  0857               	movf	locked_Main@data,w
 14871  040F  0086               	movwf	6
 14872  0410  0858               	movf	locked_Main@data+1,w
 14873  0411  0087               	movwf	7
 14874  0412  3147               	addfsr 1,7
 14875  0413  3000               	movlw	0
 14876  0414  3FC0               	movwi [0]fsr1
 14877  0415  3FC1               	movwi [1]fsr1
 14878                           
 14879                           ;locked_task.c: 172: data->holdCountY += 1;
 14880  0416  0857               	movf	locked_Main@data,w
 14881  0417  0086               	movwf	6
 14882  0418  0858               	movf	locked_Main@data+1,w
 14883  0419  0087               	movwf	7
 14884  041A  3149               	addfsr 1,9
 14885  041B  3001               	movlw	1
 14886  041C  0781               	addwf	1,f
 14887  041D  3141               	addfsr 1,1
 14888  041E  1803               	skipnc
 14889  041F  0A81               	incf	1,f
 14890                           
 14891                           ;locked_task.c: 173: data->noholdCount = 0;
 14892  0420  0857               	movf	locked_Main@data,w
 14893  0421  0086               	movwf	6
 14894  0422  0858               	movf	locked_Main@data+1,w
 14895  0423  0087               	movwf	7
 14896  0424  314B               	addfsr 1,11
 14897  0425  3000               	movlw	0
 14898  0426  3FC0               	movwi [0]fsr1
 14899  0427  3FC1               	movwi [1]fsr1
 14900                           
 14901                           ;locked_task.c: 174: break;
 14902  0428  0008               	return
 14903  0429                     l7695:	
 14904                           ;locked_task.c: 175: default:
 14905                           
 14906                           
 14907                           ;locked_task.c: 176: data->holdCountA = 0;
 14908  0429  0857               	movf	locked_Main@data,w
 14909  042A  0086               	movwf	6
 14910  042B  0858               	movf	locked_Main@data+1,w
 14911  042C  0087               	movwf	7
 14912  042D  3143               	addfsr 1,3
 14913  042E  3000               	movlw	0
 14914  042F  3FC0               	movwi [0]fsr1
 14915  0430  3FC1               	movwi [1]fsr1
 14916                           
 14917                           ;locked_task.c: 177: data->holdCountB = 0;
 14918  0431  0857               	movf	locked_Main@data,w
 14919  0432  0086               	movwf	6
 14920  0433  0858               	movf	locked_Main@data+1,w
 14921  0434  0087               	movwf	7
 14922  0435  3145               	addfsr 1,5
 14923  0436  3000               	movlw	0
 14924  0437  3FC0               	movwi [0]fsr1
 14925  0438  3FC1               	movwi [1]fsr1
 14926                           
 14927                           ;locked_task.c: 178: data->holdCountX = 0;
 14928  0439  0857               	movf	locked_Main@data,w
 14929  043A  0086               	movwf	6
 14930  043B  0858               	movf	locked_Main@data+1,w
 14931  043C  0087               	movwf	7
 14932  043D  3147               	addfsr 1,7
 14933  043E  3000               	movlw	0
 14934  043F  3FC0               	movwi [0]fsr1
 14935  0440  3FC1               	movwi [1]fsr1
 14936                           
 14937                           ;locked_task.c: 179: data->holdCountY = 0;
 14938  0441  0857               	movf	locked_Main@data,w
 14939  0442  0086               	movwf	6
 14940  0443  0858               	movf	locked_Main@data+1,w
 14941  0444  0087               	movwf	7
 14942  0445  3149               	addfsr 1,9
 14943  0446  3000               	movlw	0
 14944  0447  3FC0               	movwi [0]fsr1
 14945  0448  3FC1               	movwi [1]fsr1
 14946                           
 14947                           ;locked_task.c: 180: data->noholdCount += 1;
 14948  0449  0857               	movf	locked_Main@data,w
 14949  044A  0086               	movwf	6
 14950  044B  0858               	movf	locked_Main@data+1,w
 14951  044C  0087               	movwf	7
 14952  044D  314B               	addfsr 1,11
 14953  044E  3001               	movlw	1
 14954  044F  0781               	addwf	1,f
 14955  0450  3141               	addfsr 1,1
 14956  0451  1803               	skipnc
 14957  0452  0A81               	incf	1,f
 14958                           
 14959                           ;locked_task.c: 181: }
 14960  0453  0008               	return
 14961  0454                     l7699:	
 14962  0454  0856               	movf	locked_Main@buttonPressed,w
 14963                           
 14964                           ; Switch size 1, requested type "space"
 14965                           ; Number of cases is 2, Range of values is 4 to 8
 14966                           ; switch strategies available:
 14967                           ; Name         Instructions Cycles
 14968                           ; simple_byte            7     4 (average)
 14969                           ; direct_byte           19     9 (fixed)
 14970                           ; jumptable            263     9 (fixed)
 14971                           ;	Chosen strategy is simple_byte
 14972  0455  3A04               	xorlw	4	; case 4
 14973  0456  1903               	skipnz
 14974  0457  2BC7               	goto	l7673
 14975  0458  3A0C               	xorlw	12	; case 8
 14976  0459  1903               	skipnz
 14977  045A  2BD1               	goto	l7677
 14978  045B  2C29               	goto	l7695
 14979  045C  0008               	return
 14980  045D                     __end_of_locked_Main:	
 14981                           
 14982                           	psect	text15
 14983  00A7                     __ptext15:	
 14984 ;; *************** function _menu_Main *****************
 14985 ;; Defined at:
 14986 ;;		line 54 in file "menu_task.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  taskData        2   50[BANK0 ] PTR void 
 14989 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14990 ;;		 -> flashy_TaskData(30), NULL(0), 
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;  data            2   55[BANK0 ] PTR struct t_menu_taskDa
 14993 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14994 ;;		 -> flashy_TaskData(30), NULL(0), 
 14995 ;;  buttonPresse    1   54[BANK0 ] unsigned char 
 14996 ;; Return value:  Size  Location     Type
 14997 ;;                  1    wreg      void 
 14998 ;; Registers used:
 14999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15000 ;; Tracked objects:
 15001 ;;		On entry : 0/0
 15002 ;;		On exit  : 0/0
 15003 ;;		Unchanged: 0/0
 15004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15005 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15006 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15007 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15008 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15009 ;;Total ram usage:        7 bytes
 15010 ;; Hardware stack levels used:    1
 15011 ;; Hardware stack levels required when called:   12
 15012 ;; This function calls:
 15013 ;;		_menu_clear
 15014 ;;		_menu_display_option
 15015 ;;		_menu_run_option
 15016 ;;		_nullifyBadge_buttonsGet
 15017 ;; This function is called by:
 15018 ;;		_main
 15019 ;;		_scheduler_TaskRun
 15020 ;; This function uses a non-reentrant model
 15021 ;;
 15022                           
 15023                           
 15024                           ;psect for function _menu_Main
 15025  00A7                     _menu_Main:	
 15026                           
 15027                           ;menu_task.c: 55: struct t_menu_taskData *data = (struct t_menu_taskData *) taskData;
 15028                           
 15029                           ;incstack = 0
 15030                           ; Regs used in _menu_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15031  00A7  0020               	movlb	0	; select bank0
 15032  00A8  0853               	movf	menu_Main@taskData+1,w
 15033  00A9  00D8               	movwf	menu_Main@data+1
 15034  00AA  0852               	movf	menu_Main@taskData,w
 15035  00AB  00D7               	movwf	menu_Main@data
 15036                           
 15037                           ;menu_task.c: 56: u8 buttonPressed;
 15038                           ;menu_task.c: 58: if ( currentTask != MENU_TASK ){
 15039  00AC  0021               	movlb	1	; select bank1
 15040  00AD  0836               	movf	_currentTask^(0+128),w
 15041  00AE  0437               	iorwf	(_currentTask+1)^(0+128),w
 15042  00AF  1903               	btfsc	3,2
 15043  00B0  2920               	goto	l7089
 15044                           
 15045                           ;menu_task.c: 60: buttonPressed = nullifyBadge_buttonsGet();
 15046  00B1  319A  2205  3180   	fcall	_nullifyBadge_buttonsGet
 15047  00B4  0020               	movlb	0	; select bank0
 15048  00B5  00D4               	movwf	??_menu_Main
 15049  00B6  0854               	movf	??_menu_Main,w
 15050  00B7  00D6               	movwf	menu_Main@buttonPressed
 15051                           
 15052                           ;menu_task.c: 61: switch (buttonPressed) {
 15053  00B8  291A               	goto	l7087
 15054  00B9                     l7069:	
 15055                           ;menu_task.c: 62: case 1 | 2 | 8:
 15056                           
 15057                           
 15058                           ;menu_task.c: 63: currentTask = MENU_TASK;
 15059  00B9  0021               	movlb	1	; select bank1
 15060  00BA  01B6               	clrf	_currentTask^(0+128)
 15061  00BB  01B7               	clrf	(_currentTask+1)^(0+128)
 15062                           
 15063                           ;menu_task.c: 64: menu_clear(data);
 15064  00BC  0020               	movlb	0	; select bank0
 15065  00BD  0858               	movf	menu_Main@data+1,w
 15066  00BE  00BA               	movwf	menu_clear@data+1
 15067  00BF  0857               	movf	menu_Main@data,w
 15068  00C0  00B9               	movwf	menu_clear@data
 15069  00C1  3188  2004  3180   	fcall	_menu_clear
 15070                           
 15071                           ;menu_task.c: 67: data->holdCountA = 1;
 15072  00C4  0020               	movlb	0	; select bank0
 15073  00C5  0857               	movf	menu_Main@data,w
 15074  00C6  0086               	movwf	6
 15075  00C7  0858               	movf	menu_Main@data+1,w
 15076  00C8  0087               	movwf	7
 15077  00C9  3144               	addfsr 1,4
 15078  00CA  3001               	movlw	1
 15079  00CB  3FC0               	movwi [0]fsr1
 15080  00CC  3000               	movlw	0
 15081  00CD  3FC1               	movwi [1]fsr1
 15082                           
 15083                           ;menu_task.c: 68: data->holdCountB = 1;
 15084  00CE  0857               	movf	menu_Main@data,w
 15085  00CF  0086               	movwf	6
 15086  00D0  0858               	movf	menu_Main@data+1,w
 15087  00D1  0087               	movwf	7
 15088  00D2  3146               	addfsr 1,6
 15089  00D3  3001               	movlw	1
 15090  00D4  3FC0               	movwi [0]fsr1
 15091  00D5  3000               	movlw	0
 15092  00D6  3FC1               	movwi [1]fsr1
 15093                           
 15094                           ;menu_task.c: 69: data->holdCountX = 1;
 15095  00D7  0857               	movf	menu_Main@data,w
 15096  00D8  0086               	movwf	6
 15097  00D9  0858               	movf	menu_Main@data+1,w
 15098  00DA  0087               	movwf	7
 15099  00DB  3148               	addfsr 1,8
 15100  00DC  3001               	movlw	1
 15101  00DD  3FC0               	movwi [0]fsr1
 15102  00DE  3000               	movlw	0
 15103  00DF  3FC1               	movwi [1]fsr1
 15104                           
 15105                           ;menu_task.c: 70: data->holdCountY = 1;
 15106  00E0  0857               	movf	menu_Main@data,w
 15107  00E1  0086               	movwf	6
 15108  00E2  0858               	movf	menu_Main@data+1,w
 15109  00E3  0087               	movwf	7
 15110  00E4  314A               	addfsr 1,10
 15111  00E5  3001               	movlw	1
 15112  00E6  3FC0               	movwi [0]fsr1
 15113  00E7  3000               	movlw	0
 15114  00E8  3FC1               	movwi [1]fsr1
 15115                           
 15116                           ;menu_task.c: 72: menu_option_idx = 0;
 15117  00E9  0021               	movlb	1	; select bank1
 15118  00EA  01B4               	clrf	_menu_option_idx^(0+128)
 15119  00EB  01B5               	clrf	(_menu_option_idx+1)^(0+128)
 15120                           
 15121                           ;menu_task.c: 73: menu_display_option(data);
 15122  00EC  0020               	movlb	0	; select bank0
 15123  00ED  0858               	movf	menu_Main@data+1,w
 15124  00EE  00CD               	movwf	menu_display_option@data+1
 15125  00EF  0857               	movf	menu_Main@data,w
 15126  00F0  00CC               	movwf	menu_display_option@data
 15127  00F1  319F  279E         	fcall	_menu_display_option
 15128                           
 15129                           ;menu_task.c: 74: break;
 15130  00F3  0008               	return
 15131  00F4                     l7083:	
 15132                           ;menu_task.c: 75: default:
 15133                           
 15134                           
 15135                           ;menu_task.c: 77: data->holdCountA = 1;
 15136  00F4  0020               	movlb	0	; select bank0
 15137  00F5  0857               	movf	menu_Main@data,w
 15138  00F6  0086               	movwf	6
 15139  00F7  0858               	movf	menu_Main@data+1,w
 15140  00F8  0087               	movwf	7
 15141  00F9  3144               	addfsr 1,4
 15142  00FA  3001               	movlw	1
 15143  00FB  3FC0               	movwi [0]fsr1
 15144  00FC  3000               	movlw	0
 15145  00FD  3FC1               	movwi [1]fsr1
 15146                           
 15147                           ;menu_task.c: 78: data->holdCountB = 1;
 15148  00FE  0857               	movf	menu_Main@data,w
 15149  00FF  0086               	movwf	6
 15150  0100  0858               	movf	menu_Main@data+1,w
 15151  0101  0087               	movwf	7
 15152  0102  3146               	addfsr 1,6
 15153  0103  3001               	movlw	1
 15154  0104  3FC0               	movwi [0]fsr1
 15155  0105  3000               	movlw	0
 15156  0106  3FC1               	movwi [1]fsr1
 15157                           
 15158                           ;menu_task.c: 79: data->holdCountX = 1;
 15159  0107  0857               	movf	menu_Main@data,w
 15160  0108  0086               	movwf	6
 15161  0109  0858               	movf	menu_Main@data+1,w
 15162  010A  0087               	movwf	7
 15163  010B  3148               	addfsr 1,8
 15164  010C  3001               	movlw	1
 15165  010D  3FC0               	movwi [0]fsr1
 15166  010E  3000               	movlw	0
 15167  010F  3FC1               	movwi [1]fsr1
 15168                           
 15169                           ;menu_task.c: 80: data->holdCountY = 1;
 15170  0110  0857               	movf	menu_Main@data,w
 15171  0111  0086               	movwf	6
 15172  0112  0858               	movf	menu_Main@data+1,w
 15173  0113  0087               	movwf	7
 15174  0114  314A               	addfsr 1,10
 15175  0115  3001               	movlw	1
 15176  0116  3FC0               	movwi [0]fsr1
 15177  0117  3000               	movlw	0
 15178  0118  3FC1               	movwi [1]fsr1
 15179                           
 15180                           ;menu_task.c: 82: }
 15181                           
 15182                           ;menu_task.c: 81: break;
 15183  0119  0008               	return
 15184  011A                     l7087:	
 15185  011A  0856               	movf	menu_Main@buttonPressed,w
 15186                           
 15187                           ; Switch size 1, requested type "space"
 15188                           ; Number of cases is 1, Range of values is 11 to 11
 15189                           ; switch strategies available:
 15190                           ; Name         Instructions Cycles
 15191                           ; simple_byte            4     3 (average)
 15192                           ; direct_byte           11     9 (fixed)
 15193                           ; jumptable            263     9 (fixed)
 15194                           ;	Chosen strategy is simple_byte
 15195  011B  3A0B               	xorlw	11	; case 11
 15196  011C  1903               	skipnz
 15197  011D  28B9               	goto	l7069
 15198  011E  28F4               	goto	l7083
 15199                           
 15200                           ;menu_task.c: 83: return;
 15201  011F  0008               	return
 15202  0120                     l7089:	
 15203                           
 15204                           ;menu_task.c: 84: }
 15205                           ;menu_task.c: 86: buttonPressed = nullifyBadge_buttonsGet();
 15206  0120  319A  2205  3180   	fcall	_nullifyBadge_buttonsGet
 15207  0123  0020               	movlb	0	; select bank0
 15208  0124  00D4               	movwf	??_menu_Main
 15209  0125  0854               	movf	??_menu_Main,w
 15210  0126  00D6               	movwf	menu_Main@buttonPressed
 15211                           
 15212                           ;menu_task.c: 87: switch (buttonPressed) {
 15213  0127  2A81               	goto	l7173
 15214  0128                     l7091:	
 15215                           ;menu_task.c: 88: case 1:
 15216                           
 15217                           
 15218                           ;menu_task.c: 90: if (data->holdCountA == 0){
 15219  0128  0857               	movf	menu_Main@data,w
 15220  0129  0086               	movwf	6
 15221  012A  0858               	movf	menu_Main@data+1,w
 15222  012B  0087               	movwf	7
 15223  012C  3144               	addfsr 1,4
 15224  012D  0016               	moviw fsr1++
 15225  012E  0401               	iorwf	1,w
 15226  012F  1D03               	btfss	3,2
 15227  0130  2941               	goto	l7099
 15228                           
 15229                           ;menu_task.c: 92: if (menu_option_idx == 0){
 15230  0131  0021               	movlb	1	; select bank1
 15231  0132  0834               	movf	_menu_option_idx^(0+128),w
 15232  0133  0435               	iorwf	(_menu_option_idx+1)^(0+128),w
 15233  0134  1D03               	btfss	3,2
 15234  0135  293D               	goto	l7097
 15235                           
 15236                           ;menu_task.c: 93: menu_option_idx = menu_option_size - 1;
 15237  0136  0832               	movf	_menu_option_size^(0+128),w
 15238  0137  3EFF               	addlw	255
 15239  0138  00B4               	movwf	_menu_option_idx^(0+128)
 15240  0139  30FF               	movlw	255
 15241  013A  3D33               	addwfc	(_menu_option_size+1)^(0+128),w
 15242  013B  00B5               	movwf	(_menu_option_idx+1)^(0+128)
 15243                           
 15244                           ;menu_task.c: 94: }
 15245  013C  2941               	goto	l7099
 15246  013D                     l7097:	
 15247                           
 15248                           ;menu_task.c: 95: else {
 15249                           ;menu_task.c: 96: menu_option_idx -= 1;
 15250  013D  3001               	movlw	1
 15251  013E  02B4               	subwf	_menu_option_idx^(0+128),f
 15252  013F  3000               	movlw	0
 15253  0140  3BB5               	subwfb	(_menu_option_idx+1)^(0+128),f
 15254  0141                     l7099:	
 15255                           
 15256                           ;menu_task.c: 97: }
 15257                           ;menu_task.c: 98: }
 15258                           ;menu_task.c: 99: menu_display_option(data);
 15259  0141  0020               	movlb	0	; select bank0
 15260  0142  0858               	movf	menu_Main@data+1,w
 15261  0143  00CD               	movwf	menu_display_option@data+1
 15262  0144  0857               	movf	menu_Main@data,w
 15263  0145  00CC               	movwf	menu_display_option@data
 15264  0146  319F  279E  3180   	fcall	_menu_display_option
 15265                           
 15266                           ;menu_task.c: 100: data->holdCountA += 1;
 15267  0149  0020               	movlb	0	; select bank0
 15268  014A  0857               	movf	menu_Main@data,w
 15269  014B  0086               	movwf	6
 15270  014C  0858               	movf	menu_Main@data+1,w
 15271  014D  0087               	movwf	7
 15272  014E  3144               	addfsr 1,4
 15273  014F  3001               	movlw	1
 15274  0150  0781               	addwf	1,f
 15275  0151  3141               	addfsr 1,1
 15276  0152  1803               	skipnc
 15277  0153  0A81               	incf	1,f
 15278                           
 15279                           ;menu_task.c: 101: data->holdCountB = 0;
 15280  0154  0857               	movf	menu_Main@data,w
 15281  0155  0086               	movwf	6
 15282  0156  0858               	movf	menu_Main@data+1,w
 15283  0157  0087               	movwf	7
 15284  0158  3146               	addfsr 1,6
 15285  0159  3000               	movlw	0
 15286  015A  3FC0               	movwi [0]fsr1
 15287  015B  3FC1               	movwi [1]fsr1
 15288                           
 15289                           ;menu_task.c: 102: data->holdCountX = 0;
 15290  015C  0857               	movf	menu_Main@data,w
 15291  015D  0086               	movwf	6
 15292  015E  0858               	movf	menu_Main@data+1,w
 15293  015F  0087               	movwf	7
 15294  0160  3148               	addfsr 1,8
 15295  0161  3000               	movlw	0
 15296  0162  3FC0               	movwi [0]fsr1
 15297  0163  3FC1               	movwi [1]fsr1
 15298                           
 15299                           ;menu_task.c: 103: data->holdCountY = 0;
 15300  0164  0857               	movf	menu_Main@data,w
 15301  0165  0086               	movwf	6
 15302  0166  0858               	movf	menu_Main@data+1,w
 15303  0167  0087               	movwf	7
 15304  0168  314A               	addfsr 1,10
 15305  0169  3000               	movlw	0
 15306  016A  3FC0               	movwi [0]fsr1
 15307  016B  3FC1               	movwi [1]fsr1
 15308                           
 15309                           ;menu_task.c: 104: data->noholdCount = 0;
 15310  016C  0857               	movf	menu_Main@data,w
 15311  016D  0086               	movwf	6
 15312  016E  0858               	movf	menu_Main@data+1,w
 15313  016F  0087               	movwf	7
 15314  0170  314C               	addfsr 1,12
 15315  0171  3000               	movlw	0
 15316  0172  3FC0               	movwi [0]fsr1
 15317  0173  3FC1               	movwi [1]fsr1
 15318                           
 15319                           ;menu_task.c: 105: break;
 15320  0174  0008               	return
 15321  0175                     l7111:	
 15322                           ;menu_task.c: 106: case 2:
 15323                           
 15324                           
 15325                           ;menu_task.c: 108: if (data->holdCountB == 0){
 15326  0175  0857               	movf	menu_Main@data,w
 15327  0176  0086               	movwf	6
 15328  0177  0858               	movf	menu_Main@data+1,w
 15329  0178  0087               	movwf	7
 15330  0179  3146               	addfsr 1,6
 15331  017A  0016               	moviw fsr1++
 15332  017B  0401               	iorwf	1,w
 15333  017C  1D03               	btfss	3,2
 15334  017D  299D               	goto	l7119
 15335                           
 15336                           ;menu_task.c: 110: if (menu_option_idx == menu_option_size - 1){
 15337  017E  0021               	movlb	1	; select bank1
 15338  017F  0832               	movf	_menu_option_size^(0+128),w
 15339  0180  3EFF               	addlw	255
 15340  0181  0020               	movlb	0	; select bank0
 15341  0182  00D4               	movwf	??_menu_Main
 15342  0183  30FF               	movlw	255
 15343  0184  0021               	movlb	1	; select bank1
 15344  0185  3D33               	addwfc	(_menu_option_size+1)^(0+128),w
 15345  0186  0020               	movlb	0	; select bank0
 15346  0187  00D5               	movwf	??_menu_Main+1
 15347  0188  0021               	movlb	1	; select bank1
 15348  0189  0835               	movf	(_menu_option_idx+1)^(0+128),w
 15349  018A  0020               	movlb	0	; select bank0
 15350  018B  0655               	xorwf	??_menu_Main+1,w
 15351  018C  1D03               	skipz
 15352  018D  2992               	goto	u4125
 15353  018E  0021               	movlb	1	; select bank1
 15354  018F  0834               	movf	_menu_option_idx^(0+128),w
 15355  0190  0020               	movlb	0	; select bank0
 15356  0191  0654               	xorwf	??_menu_Main,w
 15357  0192                     u4125:	
 15358  0192  1D03               	skipz
 15359  0193  2998               	goto	l7117
 15360                           
 15361                           ;menu_task.c: 111: menu_option_idx = 0;
 15362  0194  0021               	movlb	1	; select bank1
 15363  0195  01B4               	clrf	_menu_option_idx^(0+128)
 15364  0196  01B5               	clrf	(_menu_option_idx+1)^(0+128)
 15365                           
 15366                           ;menu_task.c: 112: }
 15367  0197  299D               	goto	l7119
 15368  0198                     l7117:	
 15369                           
 15370                           ;menu_task.c: 113: else {
 15371                           ;menu_task.c: 114: menu_option_idx += 1;
 15372  0198  3001               	movlw	1
 15373  0199  0021               	movlb	1	; select bank1
 15374  019A  07B4               	addwf	_menu_option_idx^(0+128),f
 15375  019B  3000               	movlw	0
 15376  019C  3DB5               	addwfc	(_menu_option_idx+1)^(0+128),f
 15377  019D                     l7119:	
 15378                           
 15379                           ;menu_task.c: 115: }
 15380                           ;menu_task.c: 116: }
 15381                           ;menu_task.c: 117: menu_display_option(data);
 15382  019D  0020               	movlb	0	; select bank0
 15383  019E  0858               	movf	menu_Main@data+1,w
 15384  019F  00CD               	movwf	menu_display_option@data+1
 15385  01A0  0857               	movf	menu_Main@data,w
 15386  01A1  00CC               	movwf	menu_display_option@data
 15387  01A2  319F  279E  3180   	fcall	_menu_display_option
 15388                           
 15389                           ;menu_task.c: 118: data->holdCountA = 0;
 15390  01A5  0020               	movlb	0	; select bank0
 15391  01A6  0857               	movf	menu_Main@data,w
 15392  01A7  0086               	movwf	6
 15393  01A8  0858               	movf	menu_Main@data+1,w
 15394  01A9  0087               	movwf	7
 15395  01AA  3144               	addfsr 1,4
 15396  01AB  3000               	movlw	0
 15397  01AC  3FC0               	movwi [0]fsr1
 15398  01AD  3FC1               	movwi [1]fsr1
 15399                           
 15400                           ;menu_task.c: 119: data->holdCountB += 1;
 15401  01AE  0857               	movf	menu_Main@data,w
 15402  01AF  0086               	movwf	6
 15403  01B0  0858               	movf	menu_Main@data+1,w
 15404  01B1  0087               	movwf	7
 15405  01B2  3146               	addfsr 1,6
 15406  01B3  3001               	movlw	1
 15407  01B4  0781               	addwf	1,f
 15408  01B5  3141               	addfsr 1,1
 15409  01B6  1803               	skipnc
 15410  01B7  0A81               	incf	1,f
 15411                           
 15412                           ;menu_task.c: 120: data->holdCountX = 0;
 15413  01B8  0857               	movf	menu_Main@data,w
 15414  01B9  0086               	movwf	6
 15415  01BA  0858               	movf	menu_Main@data+1,w
 15416  01BB  0087               	movwf	7
 15417  01BC  3148               	addfsr 1,8
 15418  01BD  3000               	movlw	0
 15419  01BE  3FC0               	movwi [0]fsr1
 15420  01BF  3FC1               	movwi [1]fsr1
 15421                           
 15422                           ;menu_task.c: 121: data->holdCountY = 0;
 15423  01C0  0857               	movf	menu_Main@data,w
 15424  01C1  0086               	movwf	6
 15425  01C2  0858               	movf	menu_Main@data+1,w
 15426  01C3  0087               	movwf	7
 15427  01C4  314A               	addfsr 1,10
 15428  01C5  3000               	movlw	0
 15429  01C6  3FC0               	movwi [0]fsr1
 15430  01C7  3FC1               	movwi [1]fsr1
 15431                           
 15432                           ;menu_task.c: 122: data->noholdCount = 0;
 15433  01C8  0857               	movf	menu_Main@data,w
 15434  01C9  0086               	movwf	6
 15435  01CA  0858               	movf	menu_Main@data+1,w
 15436  01CB  0087               	movwf	7
 15437  01CC  314C               	addfsr 1,12
 15438  01CD  3000               	movlw	0
 15439  01CE  3FC0               	movwi [0]fsr1
 15440  01CF  3FC1               	movwi [1]fsr1
 15441                           
 15442                           ;menu_task.c: 123: break;
 15443  01D0  0008               	return
 15444  01D1                     l7131:	
 15445                           ;menu_task.c: 124: case 4:
 15446                           
 15447                           
 15448                           ;menu_task.c: 125: if (data->holdCountX == 0){
 15449  01D1  0857               	movf	menu_Main@data,w
 15450  01D2  0086               	movwf	6
 15451  01D3  0858               	movf	menu_Main@data+1,w
 15452  01D4  0087               	movwf	7
 15453  01D5  3148               	addfsr 1,8
 15454  01D6  0016               	moviw fsr1++
 15455  01D7  0401               	iorwf	1,w
 15456  01D8  1D03               	btfss	3,2
 15457  01D9  29E6               	goto	l7137
 15458                           
 15459                           ;menu_task.c: 127: menu_clear(data);
 15460  01DA  0858               	movf	menu_Main@data+1,w
 15461  01DB  00BA               	movwf	menu_clear@data+1
 15462  01DC  0857               	movf	menu_Main@data,w
 15463  01DD  00B9               	movwf	menu_clear@data
 15464  01DE  3188  2004  3180   	fcall	_menu_clear
 15465                           
 15466                           ;menu_task.c: 128: currentTask = FLASHY_TASK;
 15467  01E1  3002               	movlw	2
 15468  01E2  0021               	movlb	1	; select bank1
 15469  01E3  00B6               	movwf	_currentTask^(0+128)
 15470  01E4  3000               	movlw	0
 15471  01E5  00B7               	movwf	(_currentTask^(0+128)+1)
 15472  01E6                     l7137:	
 15473                           
 15474                           ;menu_task.c: 129: }
 15475                           ;menu_task.c: 130: data->holdCountA = 0;
 15476  01E6  0020               	movlb	0	; select bank0
 15477  01E7  0857               	movf	menu_Main@data,w
 15478  01E8  0086               	movwf	6
 15479  01E9  0858               	movf	menu_Main@data+1,w
 15480  01EA  0087               	movwf	7
 15481  01EB  3144               	addfsr 1,4
 15482  01EC  3000               	movlw	0
 15483  01ED  3FC0               	movwi [0]fsr1
 15484  01EE  3FC1               	movwi [1]fsr1
 15485                           
 15486                           ;menu_task.c: 131: data->holdCountB = 0;
 15487  01EF  0857               	movf	menu_Main@data,w
 15488  01F0  0086               	movwf	6
 15489  01F1  0858               	movf	menu_Main@data+1,w
 15490  01F2  0087               	movwf	7
 15491  01F3  3146               	addfsr 1,6
 15492  01F4  3000               	movlw	0
 15493  01F5  3FC0               	movwi [0]fsr1
 15494  01F6  3FC1               	movwi [1]fsr1
 15495                           
 15496                           ;menu_task.c: 132: data->holdCountX += 1;
 15497  01F7  0857               	movf	menu_Main@data,w
 15498  01F8  0086               	movwf	6
 15499  01F9  0858               	movf	menu_Main@data+1,w
 15500  01FA  0087               	movwf	7
 15501  01FB  3148               	addfsr 1,8
 15502  01FC  3001               	movlw	1
 15503  01FD  0781               	addwf	1,f
 15504  01FE  3141               	addfsr 1,1
 15505  01FF  1803               	skipnc
 15506  0200  0A81               	incf	1,f
 15507                           
 15508                           ;menu_task.c: 133: data->holdCountY = 0;
 15509  0201  0857               	movf	menu_Main@data,w
 15510  0202  0086               	movwf	6
 15511  0203  0858               	movf	menu_Main@data+1,w
 15512  0204  0087               	movwf	7
 15513  0205  314A               	addfsr 1,10
 15514  0206  3000               	movlw	0
 15515  0207  3FC0               	movwi [0]fsr1
 15516  0208  3FC1               	movwi [1]fsr1
 15517                           
 15518                           ;menu_task.c: 134: data->noholdCount = 0;
 15519  0209  0857               	movf	menu_Main@data,w
 15520  020A  0086               	movwf	6
 15521  020B  0858               	movf	menu_Main@data+1,w
 15522  020C  0087               	movwf	7
 15523  020D  314C               	addfsr 1,12
 15524  020E  3000               	movlw	0
 15525  020F  3FC0               	movwi [0]fsr1
 15526  0210  3FC1               	movwi [1]fsr1
 15527                           
 15528                           ;menu_task.c: 135: break;
 15529  0211  0008               	return
 15530  0212                     l7147:	
 15531                           ;menu_task.c: 136: case 8:
 15532                           
 15533                           
 15534                           ;menu_task.c: 137: if (data->holdCountY == 0){
 15535  0212  0857               	movf	menu_Main@data,w
 15536  0213  0086               	movwf	6
 15537  0214  0858               	movf	menu_Main@data+1,w
 15538  0215  0087               	movwf	7
 15539  0216  314A               	addfsr 1,10
 15540  0217  0016               	moviw fsr1++
 15541  0218  0401               	iorwf	1,w
 15542  0219  1D03               	btfss	3,2
 15543  021A  2A22               	goto	l7151
 15544                           
 15545                           ;menu_task.c: 138: menu_run_option(data);
 15546  021B  0858               	movf	menu_Main@data+1,w
 15547  021C  00BC               	movwf	menu_run_option@data+1
 15548  021D  0857               	movf	menu_Main@data,w
 15549  021E  00BB               	movwf	menu_run_option@data
 15550  021F  319B  233E  3180   	fcall	_menu_run_option
 15551  0222                     l7151:	
 15552                           
 15553                           ;menu_task.c: 139: }
 15554                           ;menu_task.c: 140: data->holdCountA = 0;
 15555  0222  0020               	movlb	0	; select bank0
 15556  0223  0857               	movf	menu_Main@data,w
 15557  0224  0086               	movwf	6
 15558  0225  0858               	movf	menu_Main@data+1,w
 15559  0226  0087               	movwf	7
 15560  0227  3144               	addfsr 1,4
 15561  0228  3000               	movlw	0
 15562  0229  3FC0               	movwi [0]fsr1
 15563  022A  3FC1               	movwi [1]fsr1
 15564                           
 15565                           ;menu_task.c: 141: data->holdCountB = 0;
 15566  022B  0857               	movf	menu_Main@data,w
 15567  022C  0086               	movwf	6
 15568  022D  0858               	movf	menu_Main@data+1,w
 15569  022E  0087               	movwf	7
 15570  022F  3146               	addfsr 1,6
 15571  0230  3000               	movlw	0
 15572  0231  3FC0               	movwi [0]fsr1
 15573  0232  3FC1               	movwi [1]fsr1
 15574                           
 15575                           ;menu_task.c: 142: data->holdCountX = 0;
 15576  0233  0857               	movf	menu_Main@data,w
 15577  0234  0086               	movwf	6
 15578  0235  0858               	movf	menu_Main@data+1,w
 15579  0236  0087               	movwf	7
 15580  0237  3148               	addfsr 1,8
 15581  0238  3000               	movlw	0
 15582  0239  3FC0               	movwi [0]fsr1
 15583  023A  3FC1               	movwi [1]fsr1
 15584                           
 15585                           ;menu_task.c: 143: data->holdCountY += 1;
 15586  023B  0857               	movf	menu_Main@data,w
 15587  023C  0086               	movwf	6
 15588  023D  0858               	movf	menu_Main@data+1,w
 15589  023E  0087               	movwf	7
 15590  023F  314A               	addfsr 1,10
 15591  0240  3001               	movlw	1
 15592  0241  0781               	addwf	1,f
 15593  0242  3141               	addfsr 1,1
 15594  0243  1803               	skipnc
 15595  0244  0A81               	incf	1,f
 15596                           
 15597                           ;menu_task.c: 144: data->noholdCount = 0;
 15598  0245  0857               	movf	menu_Main@data,w
 15599  0246  0086               	movwf	6
 15600  0247  0858               	movf	menu_Main@data+1,w
 15601  0248  0087               	movwf	7
 15602  0249  314C               	addfsr 1,12
 15603  024A  3000               	movlw	0
 15604  024B  3FC0               	movwi [0]fsr1
 15605  024C  3FC1               	movwi [1]fsr1
 15606                           
 15607                           ;menu_task.c: 145: break;
 15608  024D  0008               	return
 15609  024E                     l7161:	
 15610                           ;menu_task.c: 147: default:
 15611                           
 15612                           ;menu_task.c: 146: case 1 | 2 | 8:
 15613                           
 15614                           
 15615                           ;menu_task.c: 148: menu_display_option(data);
 15616  024E  0858               	movf	menu_Main@data+1,w
 15617  024F  00CD               	movwf	menu_display_option@data+1
 15618  0250  0857               	movf	menu_Main@data,w
 15619  0251  00CC               	movwf	menu_display_option@data
 15620  0252  319F  279E  3180   	fcall	_menu_display_option
 15621                           
 15622                           ;menu_task.c: 149: data->holdCountA = 0;
 15623  0255  0020               	movlb	0	; select bank0
 15624  0256  0857               	movf	menu_Main@data,w
 15625  0257  0086               	movwf	6
 15626  0258  0858               	movf	menu_Main@data+1,w
 15627  0259  0087               	movwf	7
 15628  025A  3144               	addfsr 1,4
 15629  025B  3000               	movlw	0
 15630  025C  3FC0               	movwi [0]fsr1
 15631  025D  3FC1               	movwi [1]fsr1
 15632                           
 15633                           ;menu_task.c: 150: data->holdCountB = 0;
 15634  025E  0857               	movf	menu_Main@data,w
 15635  025F  0086               	movwf	6
 15636  0260  0858               	movf	menu_Main@data+1,w
 15637  0261  0087               	movwf	7
 15638  0262  3146               	addfsr 1,6
 15639  0263  3000               	movlw	0
 15640  0264  3FC0               	movwi [0]fsr1
 15641  0265  3FC1               	movwi [1]fsr1
 15642                           
 15643                           ;menu_task.c: 151: data->holdCountX = 0;
 15644  0266  0857               	movf	menu_Main@data,w
 15645  0267  0086               	movwf	6
 15646  0268  0858               	movf	menu_Main@data+1,w
 15647  0269  0087               	movwf	7
 15648  026A  3148               	addfsr 1,8
 15649  026B  3000               	movlw	0
 15650  026C  3FC0               	movwi [0]fsr1
 15651  026D  3FC1               	movwi [1]fsr1
 15652                           
 15653                           ;menu_task.c: 152: data->holdCountY = 0;
 15654  026E  0857               	movf	menu_Main@data,w
 15655  026F  0086               	movwf	6
 15656  0270  0858               	movf	menu_Main@data+1,w
 15657  0271  0087               	movwf	7
 15658  0272  314A               	addfsr 1,10
 15659  0273  3000               	movlw	0
 15660  0274  3FC0               	movwi [0]fsr1
 15661  0275  3FC1               	movwi [1]fsr1
 15662                           
 15663                           ;menu_task.c: 153: data->noholdCount += 1;
 15664  0276  0857               	movf	menu_Main@data,w
 15665  0277  0086               	movwf	6
 15666  0278  0858               	movf	menu_Main@data+1,w
 15667  0279  0087               	movwf	7
 15668  027A  314C               	addfsr 1,12
 15669  027B  3001               	movlw	1
 15670  027C  0781               	addwf	1,f
 15671  027D  3141               	addfsr 1,1
 15672  027E  1803               	skipnc
 15673  027F  0A81               	incf	1,f
 15674                           
 15675                           ;menu_task.c: 154: }
 15676  0280  0008               	return
 15677  0281                     l7173:	
 15678  0281  0856               	movf	menu_Main@buttonPressed,w
 15679                           
 15680                           ; Switch size 1, requested type "space"
 15681                           ; Number of cases is 5, Range of values is 1 to 11
 15682                           ; switch strategies available:
 15683                           ; Name         Instructions Cycles
 15684                           ; simple_byte           16     9 (average)
 15685                           ; direct_byte           31     9 (fixed)
 15686                           ; jumptable            263     9 (fixed)
 15687                           ;	Chosen strategy is simple_byte
 15688  0282  3A01               	xorlw	1	; case 1
 15689  0283  1903               	skipnz
 15690  0284  2928               	goto	l7091
 15691  0285  3A03               	xorlw	3	; case 2
 15692  0286  1903               	skipnz
 15693  0287  2975               	goto	l7111
 15694  0288  3A06               	xorlw	6	; case 4
 15695  0289  1903               	skipnz
 15696  028A  29D1               	goto	l7131
 15697  028B  3A0C               	xorlw	12	; case 8
 15698  028C  1903               	skipnz
 15699  028D  2A12               	goto	l7147
 15700  028E  3A03               	xorlw	3	; case 11
 15701  028F  1903               	skipnz
 15702  0290  2A4E               	goto	l7161
 15703  0291  2A4E               	goto	l7161
 15704  0292  0008               	return
 15705  0293                     __end_of_menu_Main:	
 15706                           
 15707                           	psect	text16
 15708  084B                     __ptext16:	
 15709 ;; *************** function _flashy_Main *****************
 15710 ;; Defined at:
 15711 ;;		line 102 in file "flashy_task.c"
 15712 ;; Parameters:    Size  Location     Type
 15713 ;;  taskData        2   50[BANK0 ] PTR void 
 15714 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15715 ;;		 -> flashy_TaskData(30), NULL(0), 
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;  hit_counter     6   54[BANK0 ] unsigned char [6]
 15718 ;;  data            2   62[BANK0 ] PTR struct t_flashy_task
 15719 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15720 ;;		 -> flashy_TaskData(30), NULL(0), 
 15721 ;;  buttonPresse    2   60[BANK0 ] unsigned int 
 15722 ;; Return value:  Size  Location     Type
 15723 ;;                  1    wreg      void 
 15724 ;; Registers used:
 15725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15726 ;; Tracked objects:
 15727 ;;		On entry : 0/0
 15728 ;;		On exit  : 0/0
 15729 ;;		Unchanged: 0/0
 15730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15732 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15733 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15734 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15735 ;;Total ram usage:       14 bytes
 15736 ;; Hardware stack levels used:    1
 15737 ;; Hardware stack levels required when called:   11
 15738 ;; This function calls:
 15739 ;;		_flashy_display_option
 15740 ;;		_led_circle
 15741 ;;		_led_curtain
 15742 ;;		_led_rand
 15743 ;;		_led_roundabout
 15744 ;;		_let_alternate
 15745 ;;		_marquee
 15746 ;;		_nullifyBadge_buttonsGet
 15747 ;;		_nullifyBadge_irGet
 15748 ;;		_nullifyBadge_irTxClr
 15749 ;;		_nullifyBadge_irTxRegister
 15750 ;;		_nullifyBadge_irTxRelease
 15751 ;;		_nullifyBadge_irTxSet
 15752 ;;		_nullifyBadge_segDisplayForceUpdate
 15753 ;;		_nullifyBadge_segDisplayPutStr
 15754 ;;		_nullifyBadge_userLedsSet
 15755 ;;		_sprintf
 15756 ;; This function is called by:
 15757 ;;		_main
 15758 ;;		_scheduler_TaskRun
 15759 ;; This function uses a non-reentrant model
 15760 ;;
 15761                           
 15762                           
 15763                           ;psect for function _flashy_Main
 15764  084B                     _flashy_Main:	
 15765                           
 15766                           ;flashy_task.c: 103: struct t_flashy_taskData *data = (struct t_flashy_taskData *) taskD
      +                          ata;
 15767                           
 15768                           ;incstack = 0
 15769                           ; Regs used in _flashy_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15770  084B  0020               	movlb	0	; select bank0
 15771  084C  0853               	movf	flashy_Main@taskData+1,w
 15772  084D  00DF               	movwf	flashy_Main@data+1
 15773  084E  0852               	movf	flashy_Main@taskData,w
 15774  084F  00DE               	movwf	flashy_Main@data
 15775                           
 15776                           ;flashy_task.c: 104: u16 buttonPressed;
 15777                           ;flashy_task.c: 105: char hit_counter[6];
 15778                           ;flashy_task.c: 107: if ( currentTask != FLASHY_TASK ){
 15779  0850  3002               	movlw	2
 15780  0851  0021               	movlb	1	; select bank1
 15781  0852  0636               	xorwf	_currentTask^(0+128),w
 15782  0853  0437               	iorwf	(_currentTask+1)^(0+128),w
 15783  0854  1903               	btfsc	3,2
 15784  0855  28F8               	goto	l7211
 15785                           
 15786                           ;flashy_task.c: 108: data->holdCountA = 1;
 15787  0856  0020               	movlb	0	; select bank0
 15788  0857  085E               	movf	flashy_Main@data,w
 15789  0858  0086               	movwf	6
 15790  0859  085F               	movf	flashy_Main@data+1,w
 15791  085A  0087               	movwf	7
 15792  085B  314A               	addfsr 1,10
 15793  085C  3001               	movlw	1
 15794  085D  3FC0               	movwi [0]fsr1
 15795  085E  3000               	movlw	0
 15796  085F  3FC1               	movwi [1]fsr1
 15797                           
 15798                           ;flashy_task.c: 109: data->holdCountB = 1;
 15799  0860  085E               	movf	flashy_Main@data,w
 15800  0861  0086               	movwf	6
 15801  0862  085F               	movf	flashy_Main@data+1,w
 15802  0863  0087               	movwf	7
 15803  0864  314C               	addfsr 1,12
 15804  0865  3001               	movlw	1
 15805  0866  3FC0               	movwi [0]fsr1
 15806  0867  3000               	movlw	0
 15807  0868  3FC1               	movwi [1]fsr1
 15808                           
 15809                           ;flashy_task.c: 110: data->holdCountX = 1;
 15810  0869  085E               	movf	flashy_Main@data,w
 15811  086A  0086               	movwf	6
 15812  086B  085F               	movf	flashy_Main@data+1,w
 15813  086C  0087               	movwf	7
 15814  086D  314E               	addfsr 1,14
 15815  086E  3001               	movlw	1
 15816  086F  3FC0               	movwi [0]fsr1
 15817  0870  3000               	movlw	0
 15818  0871  3FC1               	movwi [1]fsr1
 15819                           
 15820                           ;flashy_task.c: 111: data->holdCountY = 1;
 15821  0872  085E               	movf	flashy_Main@data,w
 15822  0873  0086               	movwf	6
 15823  0874  085F               	movf	flashy_Main@data+1,w
 15824  0875  0087               	movwf	7
 15825  0876  3150               	addfsr 1,16
 15826  0877  3001               	movlw	1
 15827  0878  3FC0               	movwi [0]fsr1
 15828  0879  3000               	movlw	0
 15829  087A  3FC1               	movwi [1]fsr1
 15830                           
 15831                           ;flashy_task.c: 112: data->holdCountXY = 1;
 15832  087B  085E               	movf	flashy_Main@data,w
 15833  087C  0086               	movwf	6
 15834  087D  085F               	movf	flashy_Main@data+1,w
 15835  087E  0087               	movwf	7
 15836  087F  3152               	addfsr 1,18
 15837  0880  3001               	movlw	1
 15838  0881  3FC0               	movwi [0]fsr1
 15839  0882  3000               	movlw	0
 15840  0883  3FC1               	movwi [1]fsr1
 15841                           
 15842                           ;flashy_task.c: 113: data->holdCountAY = 1;
 15843  0884  085E               	movf	flashy_Main@data,w
 15844  0885  0086               	movwf	6
 15845  0886  085F               	movf	flashy_Main@data+1,w
 15846  0887  0087               	movwf	7
 15847  0888  3154               	addfsr 1,20
 15848  0889  3001               	movlw	1
 15849  088A  3FC0               	movwi [0]fsr1
 15850  088B  3000               	movlw	0
 15851  088C  3FC1               	movwi [1]fsr1
 15852                           
 15853                           ;flashy_task.c: 114: data->holdCountAX = 1;
 15854  088D  085E               	movf	flashy_Main@data,w
 15855  088E  0086               	movwf	6
 15856  088F  085F               	movf	flashy_Main@data+1,w
 15857  0890  0087               	movwf	7
 15858  0891  3156               	addfsr 1,22
 15859  0892  3001               	movlw	1
 15860  0893  3FC0               	movwi [0]fsr1
 15861  0894  3000               	movlw	0
 15862  0895  3FC1               	movwi [1]fsr1
 15863                           
 15864                           ;flashy_task.c: 115: return;
 15865  0896  0008               	return
 15866  0897                     l7183:	
 15867                           ;flashy_task.c: 122: case SECRET_VALUE_TEST:
 15868                           
 15869                           ;flashy_task.c: 121: break;
 15870                           
 15871                           ;flashy_task.c: 120: case SECRET_VALUE_INIT:
 15872                           
 15873                           ;flashy_task.c: 116: }
 15874                           ;flashy_task.c: 119: switch (secret_value){
 15875                           
 15876                           
 15877                           ;flashy_task.c: 123: secret_value = SECRET_VALUE_INIT;
 15878  0897  0021               	movlb	1	; select bank1
 15879  0898  01DA               	clrf	_secret_value^(0+128)
 15880  0899  01DB               	clrf	(_secret_value+1)^(0+128)
 15881                           
 15882                           ;flashy_task.c: 124: data->displayTickCount = 0;
 15883  089A  0020               	movlb	0	; select bank0
 15884  089B  085E               	movf	flashy_Main@data,w
 15885  089C  0086               	movwf	6
 15886  089D  085F               	movf	flashy_Main@data+1,w
 15887  089E  0087               	movwf	7
 15888  089F  3144               	addfsr 1,4
 15889  08A0  3000               	movlw	0
 15890  08A1  3FC0               	movwi [0]fsr1
 15891  08A2  3FC1               	movwi [1]fsr1
 15892                           
 15893                           ;flashy_task.c: 125: data->display_state = FLASHY_STATE_DISPLAY_SECRET_TEST;
 15894  08A3  085E               	movf	flashy_Main@data,w
 15895  08A4  3E06               	addlw	6
 15896  08A5  00D4               	movwf	??_flashy_Main
 15897  08A6  3000               	movlw	0
 15898  08A7  3D5F               	addwfc	flashy_Main@data+1,w
 15899  08A8  00D5               	movwf	??_flashy_Main+1
 15900  08A9  0854               	movf	??_flashy_Main,w
 15901  08AA  0086               	movwf	6
 15902  08AB  0855               	movf	??_flashy_Main+1,w
 15903  08AC  0087               	movwf	7
 15904  08AD  3005               	movlw	5
 15905  08AE  0081               	movwf	1
 15906                           
 15907                           ;flashy_task.c: 127: data->holdCountA = 1;
 15908  08AF  085E               	movf	flashy_Main@data,w
 15909  08B0  0086               	movwf	6
 15910  08B1  085F               	movf	flashy_Main@data+1,w
 15911  08B2  0087               	movwf	7
 15912  08B3  314A               	addfsr 1,10
 15913  08B4  3001               	movlw	1
 15914  08B5  3FC0               	movwi [0]fsr1
 15915  08B6  3000               	movlw	0
 15916  08B7  3FC1               	movwi [1]fsr1
 15917                           
 15918                           ;flashy_task.c: 128: data->holdCountB = 1;
 15919  08B8  085E               	movf	flashy_Main@data,w
 15920  08B9  0086               	movwf	6
 15921  08BA  085F               	movf	flashy_Main@data+1,w
 15922  08BB  0087               	movwf	7
 15923  08BC  314C               	addfsr 1,12
 15924  08BD  3001               	movlw	1
 15925  08BE  3FC0               	movwi [0]fsr1
 15926  08BF  3000               	movlw	0
 15927  08C0  3FC1               	movwi [1]fsr1
 15928                           
 15929                           ;flashy_task.c: 129: data->holdCountX = 1;
 15930  08C1  085E               	movf	flashy_Main@data,w
 15931  08C2  0086               	movwf	6
 15932  08C3  085F               	movf	flashy_Main@data+1,w
 15933  08C4  0087               	movwf	7
 15934  08C5  314E               	addfsr 1,14
 15935  08C6  3001               	movlw	1
 15936  08C7  3FC0               	movwi [0]fsr1
 15937  08C8  3000               	movlw	0
 15938  08C9  3FC1               	movwi [1]fsr1
 15939                           
 15940                           ;flashy_task.c: 130: data->holdCountY = 1;
 15941  08CA  085E               	movf	flashy_Main@data,w
 15942  08CB  0086               	movwf	6
 15943  08CC  085F               	movf	flashy_Main@data+1,w
 15944  08CD  0087               	movwf	7
 15945  08CE  3150               	addfsr 1,16
 15946  08CF  3001               	movlw	1
 15947  08D0  3FC0               	movwi [0]fsr1
 15948  08D1  3000               	movlw	0
 15949  08D2  3FC1               	movwi [1]fsr1
 15950                           
 15951                           ;flashy_task.c: 131: data->holdCountXY = 1;
 15952  08D3  085E               	movf	flashy_Main@data,w
 15953  08D4  0086               	movwf	6
 15954  08D5  085F               	movf	flashy_Main@data+1,w
 15955  08D6  0087               	movwf	7
 15956  08D7  3152               	addfsr 1,18
 15957  08D8  3001               	movlw	1
 15958  08D9  3FC0               	movwi [0]fsr1
 15959  08DA  3000               	movlw	0
 15960  08DB  3FC1               	movwi [1]fsr1
 15961                           
 15962                           ;flashy_task.c: 132: data->holdCountAY = 1;
 15963  08DC  085E               	movf	flashy_Main@data,w
 15964  08DD  0086               	movwf	6
 15965  08DE  085F               	movf	flashy_Main@data+1,w
 15966  08DF  0087               	movwf	7
 15967  08E0  3154               	addfsr 1,20
 15968  08E1  3001               	movlw	1
 15969  08E2  3FC0               	movwi [0]fsr1
 15970  08E3  3000               	movlw	0
 15971  08E4  3FC1               	movwi [1]fsr1
 15972                           
 15973                           ;flashy_task.c: 133: data->holdCountAX = 1;
 15974  08E5  085E               	movf	flashy_Main@data,w
 15975  08E6  0086               	movwf	6
 15976  08E7  085F               	movf	flashy_Main@data+1,w
 15977  08E8  0087               	movwf	7
 15978  08E9  3156               	addfsr 1,22
 15979  08EA  3001               	movlw	1
 15980  08EB  3FC0               	movwi [0]fsr1
 15981  08EC  3000               	movlw	0
 15982  08ED  3FC1               	movwi [1]fsr1
 15983                           
 15984                           ;flashy_task.c: 134: data->noholdCount = 1;
 15985  08EE  085E               	movf	flashy_Main@data,w
 15986  08EF  0086               	movwf	6
 15987  08F0  085F               	movf	flashy_Main@data+1,w
 15988  08F1  0087               	movwf	7
 15989  08F2  315C               	addfsr 1,28
 15990  08F3  3001               	movlw	1
 15991  08F4  3FC0               	movwi [0]fsr1
 15992  08F5  3000               	movlw	0
 15993  08F6  3FC1               	movwi [1]fsr1
 15994                           
 15995                           ;flashy_task.c: 135: return;
 15996  08F7  0008               	return
 15997  08F8                     l7211:	
 15998                           ;flashy_task.c: 137: }
 15999                           
 16000                           ;flashy_task.c: 136: break;
 16001                           
 16002                           
 16003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16004                           ; Switch size 1, requested type "space"
 16005                           ; Number of cases is 1, Range of values is 0 to 0
 16006                           ; switch strategies available:
 16007                           ; Name         Instructions Cycles
 16008                           ; simple_byte            4     3 (average)
 16009                           ; direct_byte            8     6 (fixed)
 16010                           ; jumptable            260     6 (fixed)
 16011                           ;	Chosen strategy is simple_byte
 16012  08F8  0021               	movlb	1	; select bank1
 16013  08F9  085B               	movf	(_secret_value+1)^(0+128),w
 16014  08FA  3A00               	xorlw	0	; case 0
 16015  08FB  1903               	skipnz
 16016  08FC  28FE               	goto	l8565
 16017  08FD  29DA               	goto	l7275
 16018  08FE                     l8565:	
 16019                           
 16020                           ; Switch size 1, requested type "space"
 16021                           ; Number of cases is 2, Range of values is 0 to 1
 16022                           ; switch strategies available:
 16023                           ; Name         Instructions Cycles
 16024                           ; simple_byte            7     4 (average)
 16025                           ; direct_byte           10     6 (fixed)
 16026                           ; jumptable            260     6 (fixed)
 16027                           ;	Chosen strategy is simple_byte
 16028  08FE  085A               	movf	_secret_value^(0+128),w
 16029  08FF  3A00               	xorlw	0	; case 0
 16030  0900  1903               	skipnz
 16031  0901  29DA               	goto	l7275
 16032  0902  3A01               	xorlw	1	; case 1
 16033  0903  1903               	skipnz
 16034  0904  2897               	goto	l7183
 16035  0905  29DA               	goto	l7275
 16036                           
 16037                           ;flashy_task.c: 140: switch (data->led_state){
 16038  0906  29DA               	goto	l7275
 16039  0907                     l7213:	
 16040                           ;flashy_task.c: 141: case FLASHY_STATE_LED_ROUNDABOUT:
 16041                           
 16042                           
 16043                           ;flashy_task.c: 142: if (data->delayTickCount == 0){
 16044  0907  0020               	movlb	0	; select bank0
 16045  0908  085E               	movf	flashy_Main@data,w
 16046  0909  0086               	movwf	6
 16047  090A  085F               	movf	flashy_Main@data+1,w
 16048  090B  0087               	movwf	7
 16049  090C  3141               	addfsr 1,1
 16050  090D  0016               	moviw fsr1++
 16051  090E  0401               	iorwf	1,w
 16052  090F  1D03               	btfss	3,2
 16053  0910  29CE               	goto	L7
 16054                           
 16055                           ;flashy_task.c: 143: led_roundabout(flashy_leds_idx);
 16056  0911  0021               	movlb	1	; select bank1
 16057  0912  0831               	movf	(_flashy_leds_idx+1)^(0+128),w
 16058  0913  0020               	movlb	0	; select bank0
 16059  0914  00B1               	movwf	led_roundabout@counter+1
 16060  0915  0021               	movlb	1	; select bank1
 16061  0916  0830               	movf	_flashy_leds_idx^(0+128),w
 16062  0917  0020               	movlb	0	; select bank0
 16063  0918  00B0               	movwf	led_roundabout@counter
 16064  0919  319C  2437  3188   	fcall	_led_roundabout
 16065                           
 16066                           ;flashy_task.c: 144: flashy_leds_idx += 1;
 16067  091C  3001               	movlw	1
 16068  091D  0021               	movlb	1	; select bank1
 16069  091E  07B0               	addwf	_flashy_leds_idx^(0+128),f
 16070  091F  3000               	movlw	0
 16071  0920  3DB1               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 16072                           
 16073                           ;flashy_task.c: 145: data->delayTickCount = 35;
 16074  0921  0020               	movlb	0	; select bank0
 16075  0922  085E               	movf	flashy_Main@data,w
 16076  0923  0086               	movwf	6
 16077  0924  085F               	movf	flashy_Main@data+1,w
 16078  0925  0087               	movwf	7
 16079  0926  3141               	addfsr 1,1
 16080  0927  3023               	movlw	35
 16081  0928  3FC0               	movwi [0]fsr1
 16082  0929  3000               	movlw	0
 16083  092A  3FC1               	movwi [1]fsr1
 16084                           
 16085                           ;flashy_task.c: 146: }
 16086  092B  2A71               	goto	l7305
 16087  092C                     l7223:	
 16088                           ;flashy_task.c: 151: case FLASHY_STATE_LED_SHOT:
 16089                           
 16090                           ;flashy_task.c: 149: }
 16091                           ;flashy_task.c: 150: break;
 16092                           
 16093                           ;flashy_task.c: 147: else {
 16094                           ;flashy_task.c: 148: data->delayTickCount -= 1;
 16095                           
 16096                           
 16097                           ;flashy_task.c: 152: if (data->delayTickCount == 0){
 16098  092C  085E               	movf	flashy_Main@data,w
 16099  092D  0086               	movwf	6
 16100  092E  085F               	movf	flashy_Main@data+1,w
 16101  092F  0087               	movwf	7
 16102  0930  3141               	addfsr 1,1
 16103  0931  0016               	moviw fsr1++
 16104  0932  0401               	iorwf	1,w
 16105  0933  1D03               	btfss	3,2
 16106  0934  29CE               	goto	L7
 16107                           
 16108                           ;flashy_task.c: 153: led_curtain(flashy_leds_idx);
 16109  0935  0021               	movlb	1	; select bank1
 16110  0936  0831               	movf	(_flashy_leds_idx+1)^(0+128),w
 16111  0937  0020               	movlb	0	; select bank0
 16112  0938  00B1               	movwf	led_curtain@counter+1
 16113  0939  0021               	movlb	1	; select bank1
 16114  093A  0830               	movf	_flashy_leds_idx^(0+128),w
 16115  093B  0020               	movlb	0	; select bank0
 16116  093C  00B0               	movwf	led_curtain@counter
 16117  093D  319B  23F6  3188   	fcall	_led_curtain
 16118                           
 16119                           ;flashy_task.c: 154: flashy_leds_idx += 1;
 16120  0940  3001               	movlw	1
 16121  0941  0021               	movlb	1	; select bank1
 16122  0942  07B0               	addwf	_flashy_leds_idx^(0+128),f
 16123  0943  3000               	movlw	0
 16124  0944  3DB1               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 16125                           
 16126                           ;flashy_task.c: 155: data->delayTickCount = 5;
 16127  0945  0020               	movlb	0	; select bank0
 16128  0946  085E               	movf	flashy_Main@data,w
 16129  0947  0086               	movwf	6
 16130  0948  085F               	movf	flashy_Main@data+1,w
 16131  0949  0087               	movwf	7
 16132  094A  3141               	addfsr 1,1
 16133  094B  3005               	movlw	5
 16134  094C  3FC0               	movwi [0]fsr1
 16135  094D  3000               	movlw	0
 16136  094E  3FC1               	movwi [1]fsr1
 16137                           
 16138                           ;flashy_task.c: 156: }
 16139  094F  2A71               	goto	l7305
 16140  0950                     l7233:	
 16141                           ;flashy_task.c: 161: case FLASHY_STATE_SPARKLE:
 16142                           
 16143                           ;flashy_task.c: 159: }
 16144                           ;flashy_task.c: 160: break;
 16145                           
 16146                           ;flashy_task.c: 157: else {
 16147                           ;flashy_task.c: 158: data->delayTickCount -= 1;
 16148                           
 16149                           
 16150                           ;flashy_task.c: 162: if (data->delayTickCount < 1){
 16151  0950  085E               	movf	flashy_Main@data,w
 16152  0951  0086               	movwf	6
 16153  0952  085F               	movf	flashy_Main@data+1,w
 16154  0953  0087               	movwf	7
 16155  0954  3141               	addfsr 1,1
 16156  0955  0016               	moviw fsr1++
 16157  0956  0401               	iorwf	1,w
 16158  0957  1D03               	btfss	3,2
 16159  0958  29CD               	goto	l7271
 16160                           
 16161                           ;flashy_task.c: 163: led_rand();
 16162  0959  31A7  273C  3188   	fcall	_led_rand
 16163                           
 16164                           ;flashy_task.c: 164: data->delayTickCount = flashy_sparkle_rate;
 16165  095C  0020               	movlb	0	; select bank0
 16166  095D  085E               	movf	flashy_Main@data,w
 16167  095E  0086               	movwf	6
 16168  095F  085F               	movf	flashy_Main@data+1,w
 16169  0960  0087               	movwf	7
 16170  0961  3141               	addfsr 1,1
 16171  0962  0021               	movlb	1	; select bank1
 16172  0963  082C               	movf	_flashy_sparkle_rate^(0+128),w
 16173  0964  3FC0               	movwi [0]fsr1
 16174  0965  082D               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 16175  0966  3FC1               	movwi [1]fsr1
 16176  0967  2A71               	goto	l7305
 16177  0968                     l7241:	
 16178                           ;flashy_task.c: 170: case FLASHY_STATE_CIRCLE:
 16179                           
 16180                           ;flashy_task.c: 168: }
 16181                           ;flashy_task.c: 169: break;
 16182                           
 16183                           ;flashy_task.c: 166: else {
 16184                           ;flashy_task.c: 167: data->delayTickCount -= 1;
 16185                           
 16186                           ;flashy_task.c: 165: }
 16187                           
 16188                           
 16189                           ;flashy_task.c: 171: if (data->delayTickCount ==0 ){
 16190  0968  085E               	movf	flashy_Main@data,w
 16191  0969  0086               	movwf	6
 16192  096A  085F               	movf	flashy_Main@data+1,w
 16193  096B  0087               	movwf	7
 16194  096C  3141               	addfsr 1,1
 16195  096D  0016               	moviw fsr1++
 16196  096E  0401               	iorwf	1,w
 16197  096F  1D03               	btfss	3,2
 16198  0970  29CD               	goto	l7271
 16199                           
 16200                           ;flashy_task.c: 172: if (flashy_leds_idx == 1024 ){
 16201  0971  3004               	movlw	4
 16202  0972  0021               	movlb	1	; select bank1
 16203  0973  0631               	xorwf	(_flashy_leds_idx+1)^(0+128),w
 16204  0974  0430               	iorwf	_flashy_leds_idx^(0+128),w
 16205  0975  1D03               	btfss	3,2
 16206  0976  297B               	goto	l7247
 16207                           
 16208                           ;flashy_task.c: 173: flashy_leds_idx = flashy_leds_idx << 1;
 16209  0977  3530               	lslf	_flashy_leds_idx^(0+128),w
 16210  0978  00B0               	movwf	_flashy_leds_idx^(0+128)
 16211  0979  0D31               	rlf	(_flashy_leds_idx+1)^(0+128),w
 16212  097A  00B1               	movwf	(_flashy_leds_idx+1)^(0+128)
 16213  097B                     l7247:	
 16214                           
 16215                           ;flashy_task.c: 174: }
 16216                           ;flashy_task.c: 175: led_circle(flashy_leds_idx);
 16217  097B  0831               	movf	(_flashy_leds_idx+1)^(0+128),w
 16218  097C  0020               	movlb	0	; select bank0
 16219  097D  00B1               	movwf	led_circle@count+1
 16220  097E  0021               	movlb	1	; select bank1
 16221  097F  0830               	movf	_flashy_leds_idx^(0+128),w
 16222  0980  0020               	movlb	0	; select bank0
 16223  0981  00B0               	movwf	led_circle@count
 16224  0982  31A6  2640  3188   	fcall	_led_circle
 16225                           
 16226                           ;flashy_task.c: 176: if (flashy_leds_idx < 1 ){
 16227  0985  0021               	movlb	1	; select bank1
 16228  0986  0830               	movf	_flashy_leds_idx^(0+128),w
 16229  0987  0431               	iorwf	(_flashy_leds_idx+1)^(0+128),w
 16230  0988  1D03               	btfss	3,2
 16231  0989  298F               	goto	l7253
 16232                           
 16233                           ;flashy_task.c: 177: flashy_leds_idx = 1;
 16234  098A  3001               	movlw	1
 16235  098B  00B0               	movwf	_flashy_leds_idx^(0+128)
 16236  098C  3000               	movlw	0
 16237  098D  00B1               	movwf	(_flashy_leds_idx^(0+128)+1)
 16238                           
 16239                           ;flashy_task.c: 178: break;
 16240  098E  2A71               	goto	l7305
 16241  098F                     l7253:	
 16242                           
 16243                           ;flashy_task.c: 179: }
 16244                           ;flashy_task.c: 180: flashy_leds_idx = flashy_leds_idx << 1;
 16245  098F  3530               	lslf	_flashy_leds_idx^(0+128),w
 16246  0990  00B0               	movwf	_flashy_leds_idx^(0+128)
 16247  0991  0D31               	rlf	(_flashy_leds_idx+1)^(0+128),w
 16248  0992  00B1               	movwf	(_flashy_leds_idx+1)^(0+128)
 16249                           
 16250                           ;flashy_task.c: 182: data->delayTickCount = flashy_sparkle_rate;
 16251  0993  0020               	movlb	0	; select bank0
 16252  0994  085E               	movf	flashy_Main@data,w
 16253  0995  0086               	movwf	6
 16254  0996  085F               	movf	flashy_Main@data+1,w
 16255  0997  0087               	movwf	7
 16256  0998  3141               	addfsr 1,1
 16257  0999  0021               	movlb	1	; select bank1
 16258  099A  082C               	movf	_flashy_sparkle_rate^(0+128),w
 16259  099B  3FC0               	movwi [0]fsr1
 16260  099C  082D               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 16261  099D  3FC1               	movwi [1]fsr1
 16262  099E  2A71               	goto	l7305
 16263  099F                     l7259:	
 16264                           ;flashy_task.c: 188: case FLASHY_STATE_LED_ALT:
 16265                           
 16266                           ;flashy_task.c: 186: }
 16267                           ;flashy_task.c: 187: break;
 16268                           
 16269                           ;flashy_task.c: 184: else {
 16270                           ;flashy_task.c: 185: data->delayTickCount -= 1;
 16271                           
 16272                           ;flashy_task.c: 183: }
 16273                           
 16274                           
 16275                           ;flashy_task.c: 189: if (data->delayTickCount == 0){
 16276  099F  085E               	movf	flashy_Main@data,w
 16277  09A0  0086               	movwf	6
 16278  09A1  085F               	movf	flashy_Main@data+1,w
 16279  09A2  0087               	movwf	7
 16280  09A3  3141               	addfsr 1,1
 16281  09A4  0016               	moviw fsr1++
 16282  09A5  0401               	iorwf	1,w
 16283  09A6  1D03               	btfss	3,2
 16284  09A7  29CD               	goto	l7271
 16285                           
 16286                           ;flashy_task.c: 190: let_alternate(flashy_leds_idx);
 16287  09A8  0021               	movlb	1	; select bank1
 16288  09A9  0831               	movf	(_flashy_leds_idx+1)^(0+128),w
 16289  09AA  0020               	movlb	0	; select bank0
 16290  09AB  00B1               	movwf	let_alternate@count+1
 16291  09AC  0021               	movlb	1	; select bank1
 16292  09AD  0830               	movf	_flashy_leds_idx^(0+128),w
 16293  09AE  0020               	movlb	0	; select bank0
 16294  09AF  00B0               	movwf	let_alternate@count
 16295  09B0  31A7  2791  3188   	fcall	_let_alternate
 16296                           
 16297                           ;flashy_task.c: 191: flashy_leds_idx += 1;
 16298  09B3  3001               	movlw	1
 16299  09B4  0021               	movlb	1	; select bank1
 16300  09B5  07B0               	addwf	_flashy_leds_idx^(0+128),f
 16301  09B6  3000               	movlw	0
 16302  09B7  3DB1               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 16303                           
 16304                           ;flashy_task.c: 192: if (flashy_leds_idx > 65530){
 16305  09B8  30FF               	movlw	255
 16306  09B9  0231               	subwf	(_flashy_leds_idx+1)^(0+128),w
 16307  09BA  30FB               	movlw	251
 16308  09BB  1903               	skipnz
 16309  09BC  0230               	subwf	_flashy_leds_idx^(0+128),w
 16310  09BD  1C03               	skipc
 16311  09BE  29C1               	goto	l7269
 16312                           
 16313                           ;flashy_task.c: 193: flashy_leds_idx=0;
 16314  09BF  01B0               	clrf	_flashy_leds_idx^(0+128)
 16315  09C0  01B1               	clrf	(_flashy_leds_idx+1)^(0+128)
 16316  09C1                     l7269:	
 16317                           
 16318                           ;flashy_task.c: 194: }
 16319                           ;flashy_task.c: 195: data->delayTickCount = flashy_sparkle_rate;
 16320  09C1  0020               	movlb	0	; select bank0
 16321  09C2  085E               	movf	flashy_Main@data,w
 16322  09C3  0086               	movwf	6
 16323  09C4  085F               	movf	flashy_Main@data+1,w
 16324  09C5  0087               	movwf	7
 16325  09C6  3141               	addfsr 1,1
 16326  09C7  0021               	movlb	1	; select bank1
 16327  09C8  082C               	movf	_flashy_sparkle_rate^(0+128),w
 16328  09C9  3FC0               	movwi [0]fsr1
 16329  09CA  082D               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 16330  09CB  3FC1               	movwi [1]fsr1
 16331                           
 16332                           ;flashy_task.c: 196: }
 16333  09CC  2A71               	goto	l7305
 16334  09CD                     l7271:	
 16335                           
 16336                           ;flashy_task.c: 197: else {
 16337                           ;flashy_task.c: 198: data->delayTickCount -= 1;
 16338  09CD  0020               	movlb	0	; select bank0
 16339  09CE                     L7:	
 16340  09CE  085E               	movf	flashy_Main@data,w
 16341  09CF  0086               	movwf	6
 16342  09D0  085F               	movf	flashy_Main@data+1,w
 16343  09D1  0087               	movwf	7
 16344  09D2  3141               	addfsr 1,1
 16345  09D3  3001               	movlw	1
 16346  09D4  0281               	subwf	1,f
 16347  09D5  3141               	addfsr 1,1
 16348  09D6  3000               	movlw	0
 16349  09D7  3B81               	subwfb	1,f
 16350  09D8  317F               	addfsr 1,-1
 16351                           
 16352                           ;flashy_task.c: 201: }
 16353                           
 16354                           ;flashy_task.c: 199: }
 16355                           ;flashy_task.c: 200: break;
 16356  09D9  2A71               	goto	l7305
 16357  09DA                     l7275:	
 16358  09DA  0020               	movlb	0	; select bank0
 16359  09DB  085E               	movf	flashy_Main@data,w
 16360  09DC  0086               	movwf	6
 16361  09DD  085F               	movf	flashy_Main@data+1,w
 16362  09DE  0087               	movwf	7
 16363  09DF  3143               	addfsr 1,3
 16364  09E0  0801               	movf	1,w
 16365                           
 16366                           ; Switch size 1, requested type "space"
 16367                           ; Number of cases is 5, Range of values is 0 to 4
 16368                           ; switch strategies available:
 16369                           ; Name         Instructions Cycles
 16370                           ; direct_byte           16     6 (fixed)
 16371                           ; simple_byte           16     9 (average)
 16372                           ; jumptable            260     6 (fixed)
 16373                           ;	Chosen strategy is direct_byte
 16374  09E1  0084               	movwf	4
 16375  09E2  3005               	movlw	5
 16376  09E3  0204               	subwf	4,w
 16377  09E4  1803               	skipnc
 16378  09E5  2A71               	goto	l7305
 16379  09E6  31A0               	movlp	high S8567
 16380  09E7  3504               	lslf	4,w
 16381  09E8  3E93               	addlw	low S8567
 16382  09E9  0082               	movwf	2
 16383                           
 16384                           ;flashy_task.c: 204: switch (data->display_state){
 16385  09EA  2A71               	goto	l7305
 16386  09EB                     l7277:	
 16387                           ;flashy_task.c: 205: case FLASHY_STATE_DISPLAY_BLASTER:
 16388                           
 16389                           
 16390                           ;flashy_task.c: 206: nullifyBadge_segDisplayPutStr(data->badge, "PEW ");
 16391  09EB  3083               	movlw	low (STR_20| (0+32768))
 16392  09EC  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 16393  09ED  30A8               	movlw	high (STR_20| (0+32768))
 16394  09EE  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 16395  09EF  085E               	movf	flashy_Main@data,w
 16396  09F0  0086               	movwf	6
 16397  09F1  085F               	movf	flashy_Main@data+1,w
 16398  09F2  0087               	movwf	7
 16399  09F3  0801               	movf	1,w
 16400  09F4  31A6  265D  3188   	fcall	_nullifyBadge_segDisplayPutStr
 16401                           
 16402                           ;flashy_task.c: 207: nullifyBadge_segDisplayForceUpdate(data->badge);
 16403  09F7  0020               	movlb	0	; select bank0
 16404  09F8  085E               	movf	flashy_Main@data,w
 16405  09F9  0086               	movwf	6
 16406  09FA  085F               	movf	flashy_Main@data+1,w
 16407  09FB  0087               	movwf	7
 16408  09FC  0801               	movf	1,w
 16409  09FD  31A6  2615  3188   	fcall	_nullifyBadge_segDisplayForceUpdate
 16410  0A00  2A65               	goto	L10
 16411  0A01                     l7283:	
 16412                           ;flashy_task.c: 210: case FLASHY_STATE_DISPLAY_SHOT:
 16413                           
 16414                           ;flashy_task.c: 209: break;
 16415                           
 16416                           ;flashy_task.c: 208: data->displayTickCount += 1;
 16417                           
 16418                           
 16419                           ;flashy_task.c: 211: sprintf((char *)hit_counter, "%4d", deaths);
 16420  0A01  309C               	movlw	low (STR_21| (0+32768))
 16421  0A02  00A4               	movwf	sprintf@f
 16422  0A03  30A8               	movlw	high (STR_21| (0+32768))
 16423  0A04  00A5               	movwf	sprintf@f+1
 16424  0A05  0021               	movlb	1	; select bank1
 16425  0A06  0829               	movf	(_deaths+1)^(0+128),w
 16426  0A07  0020               	movlb	0	; select bank0
 16427  0A08  00A7               	movwf	?_sprintf+3
 16428  0A09  0021               	movlb	1	; select bank1
 16429  0A0A  0828               	movf	_deaths^(0+128),w
 16430  0A0B  0020               	movlb	0	; select bank0
 16431  0A0C  00A6               	movwf	?_sprintf+2
 16432  0A0D  3056               	movlw	(low (flashy_Main@hit_counter| 0))& (0+255)
 16433  0A0E  3186  261A  3188   	fcall	_sprintf
 16434                           
 16435                           ;flashy_task.c: 213: nullifyBadge_segDisplayPutStr(data->badge, hit_counter);
 16436  0A11  3056               	movlw	low flashy_Main@hit_counter
 16437  0A12  0020               	movlb	0	; select bank0
 16438  0A13  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 16439  0A14  3000               	movlw	high flashy_Main@hit_counter
 16440  0A15  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 16441  0A16  085E               	movf	flashy_Main@data,w
 16442  0A17  0086               	movwf	6
 16443  0A18  085F               	movf	flashy_Main@data+1,w
 16444  0A19  0087               	movwf	7
 16445  0A1A  0801               	movf	1,w
 16446  0A1B  31A6  265D  3188   	fcall	_nullifyBadge_segDisplayPutStr
 16447                           
 16448                           ;flashy_task.c: 214: nullifyBadge_segDisplayForceUpdate(data->badge);
 16449  0A1E  0020               	movlb	0	; select bank0
 16450  0A1F  085E               	movf	flashy_Main@data,w
 16451  0A20  0086               	movwf	6
 16452  0A21  085F               	movf	flashy_Main@data+1,w
 16453  0A22  0087               	movwf	7
 16454  0A23  0801               	movf	1,w
 16455  0A24  31A6  2615  3188   	fcall	_nullifyBadge_segDisplayForceUpdate
 16456                           
 16457                           ;flashy_task.c: 215: if (data->displayTickCount == 150){
 16458  0A27  0020               	movlb	0	; select bank0
 16459  0A28  085E               	movf	flashy_Main@data,w
 16460  0A29  0086               	movwf	6
 16461  0A2A  085F               	movf	flashy_Main@data+1,w
 16462  0A2B  0087               	movwf	7
 16463  0A2C  3144               	addfsr 1,4
 16464  0A2D  0016               	moviw fsr1++
 16465  0A2E  3A96               	xorlw	150
 16466  0A2F  00D4               	movwf	??_flashy_Main
 16467  0A30  0016               	moviw fsr1++
 16468  0A31  04D4               	iorwf	??_flashy_Main,f
 16469  0A32  1D03               	btfss	3,2
 16470  0A33  2A66               	goto	L9
 16471                           
 16472                           ;flashy_task.c: 216: data->displayTickCount = 0;
 16473  0A34  085E               	movf	flashy_Main@data,w
 16474  0A35  0086               	movwf	6
 16475  0A36  085F               	movf	flashy_Main@data+1,w
 16476  0A37  0087               	movwf	7
 16477  0A38  3144               	addfsr 1,4
 16478  0A39  3000               	movlw	0
 16479  0A3A  3FC0               	movwi [0]fsr1
 16480  0A3B  3FC1               	movwi [1]fsr1
 16481                           
 16482                           ;flashy_task.c: 217: data->display_state = 35;
 16483  0A3C  085E               	movf	flashy_Main@data,w
 16484  0A3D  3E06               	addlw	6
 16485  0A3E  00D4               	movwf	??_flashy_Main
 16486  0A3F  3000               	movlw	0
 16487  0A40  3D5F               	addwfc	flashy_Main@data+1,w
 16488  0A41  00D5               	movwf	??_flashy_Main+1
 16489  0A42  0854               	movf	??_flashy_Main,w
 16490  0A43  0086               	movwf	6
 16491  0A44  0855               	movf	??_flashy_Main+1,w
 16492  0A45  0087               	movwf	7
 16493  0A46  3023               	movlw	35
 16494  0A47  0081               	movwf	1
 16495  0A48  2A66               	goto	L9
 16496  0A49                     l7295:	
 16497                           ;flashy_task.c: 221: case FLASHY_STATE_DISPLAY_SECRET_TEST:
 16498                           
 16499                           ;flashy_task.c: 220: break;
 16500                           
 16501                           ;flashy_task.c: 218: }
 16502                           ;flashy_task.c: 219: data->displayTickCount += 1;
 16503                           
 16504                           
 16505                           ;flashy_task.c: 222: marquee(FLASHY_TEXT_SECRET_TEST, data->displayTickCount);
 16506  0A49  0021               	movlb	1	; select bank1
 16507  0A4A  0863               	movf	(_FLASHY_TEXT_SECRET_TEST+1)^(0+128),w
 16508  0A4B  0020               	movlb	0	; select bank0
 16509  0A4C  00BB               	movwf	marquee@string+1
 16510  0A4D  0021               	movlb	1	; select bank1
 16511  0A4E  0862               	movf	_FLASHY_TEXT_SECRET_TEST^(0+128),w
 16512  0A4F  0020               	movlb	0	; select bank0
 16513  0A50  00BA               	movwf	marquee@string
 16514  0A51  085E               	movf	flashy_Main@data,w
 16515  0A52  0086               	movwf	6
 16516  0A53  085F               	movf	flashy_Main@data+1,w
 16517  0A54  0087               	movwf	7
 16518  0A55  3144               	addfsr 1,4
 16519  0A56  3F40               	moviw [0]fsr1
 16520  0A57  00BC               	movwf	marquee@count
 16521  0A58  3F41               	moviw [1]fsr1
 16522  0A59  00BD               	movwf	marquee@count+1
 16523  0A5A  3193  2350  3188   	fcall	_marquee
 16524  0A5D  2A65               	goto	L10
 16525  0A5E                     l7299:	
 16526                           ;flashy_task.c: 227: default:
 16527                           
 16528                           ;flashy_task.c: 225: case FLASHY_STATE_DISPLAY:
 16529                           
 16530                           ;flashy_task.c: 224: break;
 16531                           
 16532                           ;flashy_task.c: 223: data->displayTickCount += 1;
 16533                           
 16534                           
 16535                           ;flashy_task.c: 228: flashy_display_option(data);
 16536  0A5E  085F               	movf	flashy_Main@data+1,w
 16537  0A5F  00CD               	movwf	flashy_display_option@data+1
 16538  0A60  085E               	movf	flashy_Main@data,w
 16539  0A61  00CC               	movwf	flashy_display_option@data
 16540  0A62  319F  273F  3188   	fcall	_flashy_display_option
 16541  0A65                     L10:	
 16542                           
 16543                           ;flashy_task.c: 229: data->displayTickCount += 1;
 16544  0A65  0020               	movlb	0	; select bank0
 16545  0A66                     L9:	
 16546  0A66  085E               	movf	flashy_Main@data,w
 16547  0A67  0086               	movwf	6
 16548  0A68  085F               	movf	flashy_Main@data+1,w
 16549  0A69  0087               	movwf	7
 16550  0A6A  3144               	addfsr 1,4
 16551  0A6B  3001               	movlw	1
 16552  0A6C  0781               	addwf	1,f
 16553  0A6D  3141               	addfsr 1,1
 16554  0A6E  1803               	skipnc
 16555  0A6F  0A81               	incf	1,f
 16556                           
 16557                           ;flashy_task.c: 231: }
 16558                           
 16559                           ;flashy_task.c: 230: break;
 16560  0A70  2A85               	goto	l7307
 16561  0A71                     l7305:	
 16562  0A71  0020               	movlb	0	; select bank0
 16563  0A72  085E               	movf	flashy_Main@data,w
 16564  0A73  0086               	movwf	6
 16565  0A74  085F               	movf	flashy_Main@data+1,w
 16566  0A75  0087               	movwf	7
 16567  0A76  3146               	addfsr 1,6
 16568  0A77  0801               	movf	1,w
 16569                           
 16570                           ; Switch size 1, requested type "space"
 16571                           ; Number of cases is 4, Range of values is 0 to 5
 16572                           ; switch strategies available:
 16573                           ; Name         Instructions Cycles
 16574                           ; simple_byte           13     7 (average)
 16575                           ; direct_byte           18     6 (fixed)
 16576                           ; jumptable            260     6 (fixed)
 16577                           ;	Chosen strategy is simple_byte
 16578  0A78  3A00               	xorlw	0	; case 0
 16579  0A79  1903               	skipnz
 16580  0A7A  2A5E               	goto	l7299
 16581  0A7B  3A02               	xorlw	2	; case 2
 16582  0A7C  1903               	skipnz
 16583  0A7D  29EB               	goto	l7277
 16584  0A7E  3A01               	xorlw	1	; case 3
 16585  0A7F  1903               	skipnz
 16586  0A80  2A01               	goto	l7283
 16587  0A81  3A06               	xorlw	6	; case 5
 16588  0A82  1903               	skipnz
 16589  0A83  2A49               	goto	l7295
 16590  0A84  2A5E               	goto	l7299
 16591  0A85                     l7307:	
 16592                           
 16593                           ;flashy_task.c: 234: buttonPressed = nullifyBadge_buttonsGet();
 16594  0A85  319A  2205  3188   	fcall	_nullifyBadge_buttonsGet
 16595  0A88  0020               	movlb	0	; select bank0
 16596  0A89  00D4               	movwf	??_flashy_Main
 16597  0A8A  01D5               	clrf	??_flashy_Main+1
 16598  0A8B  0854               	movf	??_flashy_Main,w
 16599  0A8C  00DC               	movwf	flashy_Main@buttonPressed
 16600  0A8D  0855               	movf	??_flashy_Main+1,w
 16601  0A8E  00DD               	movwf	flashy_Main@buttonPressed+1
 16602                           
 16603                           ;flashy_task.c: 235: switch (buttonPressed) {
 16604  0A8F  2F36               	goto	l7563
 16605  0A90                     l7309:	
 16606                           ;flashy_task.c: 236: case 4 | 8:
 16607                           
 16608                           
 16609                           ;flashy_task.c: 237: if (data->holdCountXY == 0 ){
 16610  0A90  085E               	movf	flashy_Main@data,w
 16611  0A91  0086               	movwf	6
 16612  0A92  085F               	movf	flashy_Main@data+1,w
 16613  0A93  0087               	movwf	7
 16614  0A94  3152               	addfsr 1,18
 16615  0A95  0016               	moviw fsr1++
 16616  0A96  0401               	iorwf	1,w
 16617  0A97  1D03               	btfss	3,2
 16618  0A98  2A9F               	goto	l7313
 16619                           
 16620                           ;flashy_task.c: 239: data->display_state = FLASHY_STATE_DISPLAY;
 16621  0A99  085E               	movf	flashy_Main@data,w
 16622  0A9A  0086               	movwf	6
 16623  0A9B  085F               	movf	flashy_Main@data+1,w
 16624  0A9C  0087               	movwf	7
 16625  0A9D  3146               	addfsr 1,6
 16626  0A9E  0181               	clrf	1
 16627  0A9F                     l7313:	
 16628                           
 16629                           ;flashy_task.c: 240: }
 16630                           ;flashy_task.c: 242: data->holdCountA = 0;
 16631  0A9F  085E               	movf	flashy_Main@data,w
 16632  0AA0  0086               	movwf	6
 16633  0AA1  085F               	movf	flashy_Main@data+1,w
 16634  0AA2  0087               	movwf	7
 16635  0AA3  314A               	addfsr 1,10
 16636  0AA4  3000               	movlw	0
 16637  0AA5  3FC0               	movwi [0]fsr1
 16638  0AA6  3FC1               	movwi [1]fsr1
 16639                           
 16640                           ;flashy_task.c: 243: data->holdCountB = 0;
 16641  0AA7  085E               	movf	flashy_Main@data,w
 16642  0AA8  0086               	movwf	6
 16643  0AA9  085F               	movf	flashy_Main@data+1,w
 16644  0AAA  0087               	movwf	7
 16645  0AAB  314C               	addfsr 1,12
 16646  0AAC  3000               	movlw	0
 16647  0AAD  3FC0               	movwi [0]fsr1
 16648  0AAE  3FC1               	movwi [1]fsr1
 16649                           
 16650                           ;flashy_task.c: 244: data->holdCountX = 0;
 16651  0AAF  085E               	movf	flashy_Main@data,w
 16652  0AB0  0086               	movwf	6
 16653  0AB1  085F               	movf	flashy_Main@data+1,w
 16654  0AB2  0087               	movwf	7
 16655  0AB3  314E               	addfsr 1,14
 16656  0AB4  3000               	movlw	0
 16657  0AB5  3FC0               	movwi [0]fsr1
 16658  0AB6  3FC1               	movwi [1]fsr1
 16659                           
 16660                           ;flashy_task.c: 245: data->holdCountY = 0;
 16661  0AB7  085E               	movf	flashy_Main@data,w
 16662  0AB8  0086               	movwf	6
 16663  0AB9  085F               	movf	flashy_Main@data+1,w
 16664  0ABA  0087               	movwf	7
 16665  0ABB  3150               	addfsr 1,16
 16666  0ABC  3000               	movlw	0
 16667  0ABD  3FC0               	movwi [0]fsr1
 16668  0ABE  3FC1               	movwi [1]fsr1
 16669                           
 16670                           ;flashy_task.c: 246: data->holdCountXY += 1;
 16671  0ABF  085E               	movf	flashy_Main@data,w
 16672  0AC0  0086               	movwf	6
 16673  0AC1  085F               	movf	flashy_Main@data+1,w
 16674  0AC2  0087               	movwf	7
 16675  0AC3  3152               	addfsr 1,18
 16676  0AC4  3001               	movlw	1
 16677  0AC5  0781               	addwf	1,f
 16678  0AC6  3141               	addfsr 1,1
 16679  0AC7  1803               	skipnc
 16680  0AC8  0A81               	incf	1,f
 16681                           
 16682                           ;flashy_task.c: 247: data->holdCountAY = 0;
 16683  0AC9  085E               	movf	flashy_Main@data,w
 16684  0ACA  0086               	movwf	6
 16685  0ACB  085F               	movf	flashy_Main@data+1,w
 16686  0ACC  0087               	movwf	7
 16687  0ACD  3154               	addfsr 1,20
 16688  0ACE  3000               	movlw	0
 16689  0ACF  3FC0               	movwi [0]fsr1
 16690  0AD0  3FC1               	movwi [1]fsr1
 16691                           
 16692                           ;flashy_task.c: 248: data->holdCountAX = 0;
 16693  0AD1  085E               	movf	flashy_Main@data,w
 16694  0AD2  0086               	movwf	6
 16695  0AD3  085F               	movf	flashy_Main@data+1,w
 16696  0AD4  0087               	movwf	7
 16697  0AD5  3156               	addfsr 1,22
 16698  0AD6  3000               	movlw	0
 16699  0AD7  3FC0               	movwi [0]fsr1
 16700  0AD8  3FC1               	movwi [1]fsr1
 16701                           
 16702                           ;flashy_task.c: 249: data->holdCountBX = 0;
 16703  0AD9  085E               	movf	flashy_Main@data,w
 16704  0ADA  0086               	movwf	6
 16705  0ADB  085F               	movf	flashy_Main@data+1,w
 16706  0ADC  0087               	movwf	7
 16707  0ADD  3158               	addfsr 1,24
 16708  0ADE  3000               	movlw	0
 16709  0ADF  3FC0               	movwi [0]fsr1
 16710  0AE0  3FC1               	movwi [1]fsr1
 16711                           
 16712                           ;flashy_task.c: 250: data->holdCountBY = 0;
 16713  0AE1  085E               	movf	flashy_Main@data,w
 16714  0AE2  0086               	movwf	6
 16715  0AE3  085F               	movf	flashy_Main@data+1,w
 16716  0AE4  0087               	movwf	7
 16717  0AE5  315A               	addfsr 1,26
 16718  0AE6  3000               	movlw	0
 16719  0AE7  3FC0               	movwi [0]fsr1
 16720  0AE8  3FC1               	movwi [1]fsr1
 16721                           
 16722                           ;flashy_task.c: 251: data->noholdCount = 0;
 16723  0AE9  085E               	movf	flashy_Main@data,w
 16724  0AEA  0086               	movwf	6
 16725  0AEB  085F               	movf	flashy_Main@data+1,w
 16726  0AEC  0087               	movwf	7
 16727  0AED  315C               	addfsr 1,28
 16728  0AEE  3000               	movlw	0
 16729  0AEF  3FC0               	movwi [0]fsr1
 16730  0AF0  3FC1               	movwi [1]fsr1
 16731                           
 16732                           ;flashy_task.c: 252: break;
 16733  0AF1  2FC9               	goto	l7593
 16734  0AF2                     l7333:	
 16735                           ;flashy_task.c: 253: case 1 | 8:
 16736                           
 16737                           
 16738                           ;flashy_task.c: 254: if ( data->holdCountAY == 0 ){
 16739  0AF2  085E               	movf	flashy_Main@data,w
 16740  0AF3  0086               	movwf	6
 16741  0AF4  085F               	movf	flashy_Main@data+1,w
 16742  0AF5  0087               	movwf	7
 16743  0AF6  3154               	addfsr 1,20
 16744  0AF7  0016               	moviw fsr1++
 16745  0AF8  0401               	iorwf	1,w
 16746  0AF9  1D03               	btfss	3,2
 16747  0AFA  2B0B               	goto	l7339
 16748                           
 16749                           ;flashy_task.c: 255: if (flashy_sparkle_rate > 1000){
 16750  0AFB  3003               	movlw	3
 16751  0AFC  0021               	movlb	1	; select bank1
 16752  0AFD  022D               	subwf	(_flashy_sparkle_rate+1)^(0+128),w
 16753  0AFE  30E9               	movlw	233
 16754  0AFF  1903               	skipnz
 16755  0B00  022C               	subwf	_flashy_sparkle_rate^(0+128),w
 16756  0B01  1C03               	skipc
 16757  0B02  2B07               	goto	l1109
 16758                           
 16759                           ;flashy_task.c: 256: flashy_sparkle_rate = 1000;
 16760  0B03  30E8               	movlw	232
 16761  0B04  00AC               	movwf	_flashy_sparkle_rate^(0+128)
 16762  0B05  3003               	movlw	3
 16763  0B06  00AD               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 16764  0B07                     l1109:	
 16765                           
 16766                           ;flashy_task.c: 257: }
 16767                           ;flashy_task.c: 258: flashy_sparkle_rate += 5;
 16768  0B07  3005               	movlw	5
 16769  0B08  07AC               	addwf	_flashy_sparkle_rate^(0+128),f
 16770  0B09  3000               	movlw	0
 16771  0B0A  3DAD               	addwfc	(_flashy_sparkle_rate+1)^(0+128),f
 16772  0B0B                     l7339:	
 16773                           
 16774                           ;flashy_task.c: 259: }
 16775                           ;flashy_task.c: 261: data->holdCountA = 0;
 16776  0B0B  0020               	movlb	0	; select bank0
 16777  0B0C  085E               	movf	flashy_Main@data,w
 16778  0B0D  0086               	movwf	6
 16779  0B0E  085F               	movf	flashy_Main@data+1,w
 16780  0B0F  0087               	movwf	7
 16781  0B10  314A               	addfsr 1,10
 16782  0B11  3000               	movlw	0
 16783  0B12  3FC0               	movwi [0]fsr1
 16784  0B13  3FC1               	movwi [1]fsr1
 16785                           
 16786                           ;flashy_task.c: 262: data->holdCountB = 0;
 16787  0B14  085E               	movf	flashy_Main@data,w
 16788  0B15  0086               	movwf	6
 16789  0B16  085F               	movf	flashy_Main@data+1,w
 16790  0B17  0087               	movwf	7
 16791  0B18  314C               	addfsr 1,12
 16792  0B19  3000               	movlw	0
 16793  0B1A  3FC0               	movwi [0]fsr1
 16794  0B1B  3FC1               	movwi [1]fsr1
 16795                           
 16796                           ;flashy_task.c: 263: data->holdCountX = 0;
 16797  0B1C  085E               	movf	flashy_Main@data,w
 16798  0B1D  0086               	movwf	6
 16799  0B1E  085F               	movf	flashy_Main@data+1,w
 16800  0B1F  0087               	movwf	7
 16801  0B20  314E               	addfsr 1,14
 16802  0B21  3000               	movlw	0
 16803  0B22  3FC0               	movwi [0]fsr1
 16804  0B23  3FC1               	movwi [1]fsr1
 16805                           
 16806                           ;flashy_task.c: 264: data->holdCountY = 0;
 16807  0B24  085E               	movf	flashy_Main@data,w
 16808  0B25  0086               	movwf	6
 16809  0B26  085F               	movf	flashy_Main@data+1,w
 16810  0B27  0087               	movwf	7
 16811  0B28  3150               	addfsr 1,16
 16812  0B29  3000               	movlw	0
 16813  0B2A  3FC0               	movwi [0]fsr1
 16814  0B2B  3FC1               	movwi [1]fsr1
 16815                           
 16816                           ;flashy_task.c: 265: data->holdCountXY = 0;
 16817  0B2C  085E               	movf	flashy_Main@data,w
 16818  0B2D  0086               	movwf	6
 16819  0B2E  085F               	movf	flashy_Main@data+1,w
 16820  0B2F  0087               	movwf	7
 16821  0B30  3152               	addfsr 1,18
 16822  0B31  3000               	movlw	0
 16823  0B32  3FC0               	movwi [0]fsr1
 16824  0B33  3FC1               	movwi [1]fsr1
 16825                           
 16826                           ;flashy_task.c: 266: data->holdCountAY += 1;
 16827  0B34  085E               	movf	flashy_Main@data,w
 16828  0B35  0086               	movwf	6
 16829  0B36  085F               	movf	flashy_Main@data+1,w
 16830  0B37  0087               	movwf	7
 16831  0B38  3154               	addfsr 1,20
 16832  0B39  3001               	movlw	1
 16833  0B3A  0781               	addwf	1,f
 16834  0B3B  3141               	addfsr 1,1
 16835  0B3C  1803               	skipnc
 16836  0B3D  0A81               	incf	1,f
 16837                           
 16838                           ;flashy_task.c: 267: data->holdCountAX = 0;
 16839  0B3E  085E               	movf	flashy_Main@data,w
 16840  0B3F  0086               	movwf	6
 16841  0B40  085F               	movf	flashy_Main@data+1,w
 16842  0B41  0087               	movwf	7
 16843  0B42  3156               	addfsr 1,22
 16844  0B43  3000               	movlw	0
 16845  0B44  3FC0               	movwi [0]fsr1
 16846  0B45  3FC1               	movwi [1]fsr1
 16847                           
 16848                           ;flashy_task.c: 268: data->holdCountBX = 0;
 16849  0B46  085E               	movf	flashy_Main@data,w
 16850  0B47  0086               	movwf	6
 16851  0B48  085F               	movf	flashy_Main@data+1,w
 16852  0B49  0087               	movwf	7
 16853  0B4A  3158               	addfsr 1,24
 16854  0B4B  3000               	movlw	0
 16855  0B4C  3FC0               	movwi [0]fsr1
 16856  0B4D  3FC1               	movwi [1]fsr1
 16857                           
 16858                           ;flashy_task.c: 269: data->holdCountBY = 0;
 16859  0B4E  085E               	movf	flashy_Main@data,w
 16860  0B4F  0086               	movwf	6
 16861  0B50  085F               	movf	flashy_Main@data+1,w
 16862  0B51  0087               	movwf	7
 16863  0B52  315A               	addfsr 1,26
 16864  0B53  3000               	movlw	0
 16865  0B54  3FC0               	movwi [0]fsr1
 16866  0B55  3FC1               	movwi [1]fsr1
 16867                           
 16868                           ;flashy_task.c: 270: data->noholdCount = 0;
 16869  0B56  085E               	movf	flashy_Main@data,w
 16870  0B57  0086               	movwf	6
 16871  0B58  085F               	movf	flashy_Main@data+1,w
 16872  0B59  0087               	movwf	7
 16873  0B5A  315C               	addfsr 1,28
 16874  0B5B  3000               	movlw	0
 16875  0B5C  3FC0               	movwi [0]fsr1
 16876  0B5D  3FC1               	movwi [1]fsr1
 16877                           
 16878                           ;flashy_task.c: 271: break;
 16879  0B5E  2FC9               	goto	l7593
 16880  0B5F                     l7359:	
 16881                           ;flashy_task.c: 272: case 1 | 4:
 16882                           
 16883                           
 16884                           ;flashy_task.c: 273: if ( data->holdCountAX == 0 ){
 16885  0B5F  085E               	movf	flashy_Main@data,w
 16886  0B60  0086               	movwf	6
 16887  0B61  085F               	movf	flashy_Main@data+1,w
 16888  0B62  0087               	movwf	7
 16889  0B63  3156               	addfsr 1,22
 16890  0B64  0016               	moviw fsr1++
 16891  0B65  0401               	iorwf	1,w
 16892  0B66  1D03               	btfss	3,2
 16893  0B67  2B78               	goto	l7365
 16894                           
 16895                           ;flashy_task.c: 274: if (flashy_sparkle_rate < 5)
 16896  0B68  3000               	movlw	0
 16897  0B69  0021               	movlb	1	; select bank1
 16898  0B6A  022D               	subwf	(_flashy_sparkle_rate+1)^(0+128),w
 16899  0B6B  3005               	movlw	5
 16900  0B6C  1903               	skipnz
 16901  0B6D  022C               	subwf	_flashy_sparkle_rate^(0+128),w
 16902  0B6E  1803               	skipnc
 16903  0B6F  2B74               	goto	l1112
 16904                           
 16905                           ;flashy_task.c: 275: flashy_sparkle_rate=5;
 16906  0B70  3005               	movlw	5
 16907  0B71  00AC               	movwf	_flashy_sparkle_rate^(0+128)
 16908  0B72  3000               	movlw	0
 16909  0B73  00AD               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 16910  0B74                     l1112:	
 16911                           
 16912                           ;flashy_task.c: 276: flashy_sparkle_rate -= 5;
 16913  0B74  3005               	movlw	5
 16914  0B75  02AC               	subwf	_flashy_sparkle_rate^(0+128),f
 16915  0B76  3000               	movlw	0
 16916  0B77  3BAD               	subwfb	(_flashy_sparkle_rate+1)^(0+128),f
 16917  0B78                     l7365:	
 16918                           
 16919                           ;flashy_task.c: 277: }
 16920                           ;flashy_task.c: 279: data->holdCountA = 0;
 16921  0B78  0020               	movlb	0	; select bank0
 16922  0B79  085E               	movf	flashy_Main@data,w
 16923  0B7A  0086               	movwf	6
 16924  0B7B  085F               	movf	flashy_Main@data+1,w
 16925  0B7C  0087               	movwf	7
 16926  0B7D  314A               	addfsr 1,10
 16927  0B7E  3000               	movlw	0
 16928  0B7F  3FC0               	movwi [0]fsr1
 16929  0B80  3FC1               	movwi [1]fsr1
 16930                           
 16931                           ;flashy_task.c: 280: data->holdCountB = 0;
 16932  0B81  085E               	movf	flashy_Main@data,w
 16933  0B82  0086               	movwf	6
 16934  0B83  085F               	movf	flashy_Main@data+1,w
 16935  0B84  0087               	movwf	7
 16936  0B85  314C               	addfsr 1,12
 16937  0B86  3000               	movlw	0
 16938  0B87  3FC0               	movwi [0]fsr1
 16939  0B88  3FC1               	movwi [1]fsr1
 16940                           
 16941                           ;flashy_task.c: 281: data->holdCountX += 1;
 16942  0B89  085E               	movf	flashy_Main@data,w
 16943  0B8A  0086               	movwf	6
 16944  0B8B  085F               	movf	flashy_Main@data+1,w
 16945  0B8C  0087               	movwf	7
 16946  0B8D  314E               	addfsr 1,14
 16947  0B8E  3001               	movlw	1
 16948  0B8F  0781               	addwf	1,f
 16949  0B90  3141               	addfsr 1,1
 16950  0B91  1803               	skipnc
 16951  0B92  0A81               	incf	1,f
 16952                           
 16953                           ;flashy_task.c: 282: data->holdCountY = 0;
 16954  0B93  085E               	movf	flashy_Main@data,w
 16955  0B94  0086               	movwf	6
 16956  0B95  085F               	movf	flashy_Main@data+1,w
 16957  0B96  0087               	movwf	7
 16958  0B97  3150               	addfsr 1,16
 16959  0B98  3000               	movlw	0
 16960  0B99  3FC0               	movwi [0]fsr1
 16961  0B9A  3FC1               	movwi [1]fsr1
 16962                           
 16963                           ;flashy_task.c: 283: data->holdCountXY = 0;
 16964  0B9B  085E               	movf	flashy_Main@data,w
 16965  0B9C  0086               	movwf	6
 16966  0B9D  085F               	movf	flashy_Main@data+1,w
 16967  0B9E  0087               	movwf	7
 16968  0B9F  3152               	addfsr 1,18
 16969  0BA0  3000               	movlw	0
 16970  0BA1  3FC0               	movwi [0]fsr1
 16971  0BA2  3FC1               	movwi [1]fsr1
 16972                           
 16973                           ;flashy_task.c: 284: data->holdCountAY = 0;
 16974  0BA3  085E               	movf	flashy_Main@data,w
 16975  0BA4  0086               	movwf	6
 16976  0BA5  085F               	movf	flashy_Main@data+1,w
 16977  0BA6  0087               	movwf	7
 16978  0BA7  3154               	addfsr 1,20
 16979  0BA8  3000               	movlw	0
 16980  0BA9  3FC0               	movwi [0]fsr1
 16981  0BAA  3FC1               	movwi [1]fsr1
 16982                           
 16983                           ;flashy_task.c: 285: data->holdCountAX += 1;
 16984  0BAB  085E               	movf	flashy_Main@data,w
 16985  0BAC  0086               	movwf	6
 16986  0BAD  085F               	movf	flashy_Main@data+1,w
 16987  0BAE  0087               	movwf	7
 16988  0BAF  3156               	addfsr 1,22
 16989  0BB0  3001               	movlw	1
 16990  0BB1  0781               	addwf	1,f
 16991  0BB2  3141               	addfsr 1,1
 16992  0BB3  1803               	skipnc
 16993  0BB4  0A81               	incf	1,f
 16994                           
 16995                           ;flashy_task.c: 286: data->holdCountBX = 0;
 16996  0BB5  085E               	movf	flashy_Main@data,w
 16997  0BB6  0086               	movwf	6
 16998  0BB7  085F               	movf	flashy_Main@data+1,w
 16999  0BB8  0087               	movwf	7
 17000  0BB9  3158               	addfsr 1,24
 17001  0BBA  3000               	movlw	0
 17002  0BBB  3FC0               	movwi [0]fsr1
 17003  0BBC  3FC1               	movwi [1]fsr1
 17004                           
 17005                           ;flashy_task.c: 287: data->holdCountBY = 0;
 17006  0BBD  085E               	movf	flashy_Main@data,w
 17007  0BBE  0086               	movwf	6
 17008  0BBF  085F               	movf	flashy_Main@data+1,w
 17009  0BC0  0087               	movwf	7
 17010  0BC1  315A               	addfsr 1,26
 17011  0BC2  3000               	movlw	0
 17012  0BC3  3FC0               	movwi [0]fsr1
 17013  0BC4  3FC1               	movwi [1]fsr1
 17014                           
 17015                           ;flashy_task.c: 288: data->noholdCount = 0;
 17016  0BC5  085E               	movf	flashy_Main@data,w
 17017  0BC6  0086               	movwf	6
 17018  0BC7  085F               	movf	flashy_Main@data+1,w
 17019  0BC8  0087               	movwf	7
 17020  0BC9  315C               	addfsr 1,28
 17021  0BCA  3000               	movlw	0
 17022  0BCB  3FC0               	movwi [0]fsr1
 17023  0BCC  3FC1               	movwi [1]fsr1
 17024                           
 17025                           ;flashy_task.c: 289: break;
 17026  0BCD  2FC9               	goto	l7593
 17027  0BCE                     l7385:	
 17028                           ;flashy_task.c: 290: case 2 | 8:
 17029                           
 17030                           
 17031                           ;flashy_task.c: 291: if (data->holdCountBY == 0){
 17032  0BCE  085E               	movf	flashy_Main@data,w
 17033  0BCF  0086               	movwf	6
 17034  0BD0  085F               	movf	flashy_Main@data+1,w
 17035  0BD1  0087               	movwf	7
 17036  0BD2  315A               	addfsr 1,26
 17037  0BD3  0016               	moviw fsr1++
 17038  0BD4  0401               	iorwf	1,w
 17039  0BD5  1D03               	btfss	3,2
 17040  0BD6  2BEB               	goto	l7395
 17041                           
 17042                           ;flashy_task.c: 292: if (flashy_option_idx == 0){
 17043  0BD7  0021               	movlb	1	; select bank1
 17044  0BD8  0826               	movf	_flashy_option_idx^(0+128),w
 17045  0BD9  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 17046  0BDA  1903               	btfsc	3,2
 17047  0BDB  2BEB               	goto	l7395
 17048                           
 17049                           ;flashy_task.c: 295: else {
 17050                           ;flashy_task.c: 296: if (flashy_scroll_rate > 150){
 17051                           
 17052                           ;flashy_task.c: 294: }
 17053  0BDC  3000               	movlw	0
 17054  0BDD  022B               	subwf	(_flashy_scroll_rate+1)^(0+128),w
 17055  0BDE  3097               	movlw	151
 17056  0BDF  1903               	skipnz
 17057  0BE0  022A               	subwf	_flashy_scroll_rate^(0+128),w
 17058  0BE1  1C03               	skipc
 17059  0BE2  2BE7               	goto	l1117
 17060                           
 17061                           ;flashy_task.c: 297: flashy_scroll_rate =150;
 17062  0BE3  3096               	movlw	150
 17063  0BE4  00AA               	movwf	_flashy_scroll_rate^(0+128)
 17064  0BE5  3000               	movlw	0
 17065  0BE6  00AB               	movwf	(_flashy_scroll_rate^(0+128)+1)
 17066  0BE7                     l1117:	
 17067                           
 17068                           ;flashy_task.c: 298: }
 17069                           ;flashy_task.c: 299: flashy_scroll_rate +=2;
 17070  0BE7  3002               	movlw	2
 17071  0BE8  07AA               	addwf	_flashy_scroll_rate^(0+128),f
 17072  0BE9  3000               	movlw	0
 17073  0BEA  3DAB               	addwfc	(_flashy_scroll_rate+1)^(0+128),f
 17074  0BEB                     l7395:	
 17075                           
 17076                           ;flashy_task.c: 300: }
 17077                           ;flashy_task.c: 302: }
 17078                           ;flashy_task.c: 303: data->holdCountA = 0;
 17079  0BEB  0020               	movlb	0	; select bank0
 17080  0BEC  085E               	movf	flashy_Main@data,w
 17081  0BED  0086               	movwf	6
 17082  0BEE  085F               	movf	flashy_Main@data+1,w
 17083  0BEF  0087               	movwf	7
 17084  0BF0  314A               	addfsr 1,10
 17085  0BF1  3000               	movlw	0
 17086  0BF2  3FC0               	movwi [0]fsr1
 17087  0BF3  3FC1               	movwi [1]fsr1
 17088                           
 17089                           ;flashy_task.c: 304: data->holdCountB += 1;
 17090  0BF4  085E               	movf	flashy_Main@data,w
 17091  0BF5  0086               	movwf	6
 17092  0BF6  085F               	movf	flashy_Main@data+1,w
 17093  0BF7  0087               	movwf	7
 17094  0BF8  314C               	addfsr 1,12
 17095  0BF9  3001               	movlw	1
 17096  0BFA  0781               	addwf	1,f
 17097  0BFB  3141               	addfsr 1,1
 17098  0BFC  1803               	skipnc
 17099  0BFD  0A81               	incf	1,f
 17100                           
 17101                           ;flashy_task.c: 305: data->holdCountX = 0;
 17102  0BFE  085E               	movf	flashy_Main@data,w
 17103  0BFF  0086               	movwf	6
 17104  0C00  085F               	movf	flashy_Main@data+1,w
 17105  0C01  0087               	movwf	7
 17106  0C02  314E               	addfsr 1,14
 17107  0C03  3000               	movlw	0
 17108  0C04  3FC0               	movwi [0]fsr1
 17109  0C05  3FC1               	movwi [1]fsr1
 17110                           
 17111                           ;flashy_task.c: 306: data->holdCountY += 1;
 17112  0C06  085E               	movf	flashy_Main@data,w
 17113  0C07  0086               	movwf	6
 17114  0C08  085F               	movf	flashy_Main@data+1,w
 17115  0C09  0087               	movwf	7
 17116  0C0A  3150               	addfsr 1,16
 17117  0C0B  3001               	movlw	1
 17118  0C0C  0781               	addwf	1,f
 17119  0C0D  3141               	addfsr 1,1
 17120  0C0E  1803               	skipnc
 17121  0C0F  0A81               	incf	1,f
 17122                           
 17123                           ;flashy_task.c: 307: data->holdCountXY = 0;
 17124  0C10  085E               	movf	flashy_Main@data,w
 17125  0C11  0086               	movwf	6
 17126  0C12  085F               	movf	flashy_Main@data+1,w
 17127  0C13  0087               	movwf	7
 17128  0C14  3152               	addfsr 1,18
 17129  0C15  3000               	movlw	0
 17130  0C16  3FC0               	movwi [0]fsr1
 17131  0C17  3FC1               	movwi [1]fsr1
 17132                           
 17133                           ;flashy_task.c: 308: data->holdCountAY = 0;
 17134  0C18  085E               	movf	flashy_Main@data,w
 17135  0C19  0086               	movwf	6
 17136  0C1A  085F               	movf	flashy_Main@data+1,w
 17137  0C1B  0087               	movwf	7
 17138  0C1C  3154               	addfsr 1,20
 17139  0C1D  3000               	movlw	0
 17140  0C1E  3FC0               	movwi [0]fsr1
 17141  0C1F  3FC1               	movwi [1]fsr1
 17142                           
 17143                           ;flashy_task.c: 309: data->holdCountAX = 0;
 17144  0C20  085E               	movf	flashy_Main@data,w
 17145  0C21  0086               	movwf	6
 17146  0C22  085F               	movf	flashy_Main@data+1,w
 17147  0C23  0087               	movwf	7
 17148  0C24  3156               	addfsr 1,22
 17149  0C25  3000               	movlw	0
 17150  0C26  3FC0               	movwi [0]fsr1
 17151  0C27  3FC1               	movwi [1]fsr1
 17152                           
 17153                           ;flashy_task.c: 310: data->holdCountBX = 0;
 17154  0C28  085E               	movf	flashy_Main@data,w
 17155  0C29  0086               	movwf	6
 17156  0C2A  085F               	movf	flashy_Main@data+1,w
 17157  0C2B  0087               	movwf	7
 17158  0C2C  3158               	addfsr 1,24
 17159  0C2D  3000               	movlw	0
 17160  0C2E  3FC0               	movwi [0]fsr1
 17161  0C2F  3FC1               	movwi [1]fsr1
 17162                           
 17163                           ;flashy_task.c: 311: data->holdCountBY += 1;
 17164  0C30  085E               	movf	flashy_Main@data,w
 17165  0C31  0086               	movwf	6
 17166  0C32  085F               	movf	flashy_Main@data+1,w
 17167  0C33  0087               	movwf	7
 17168  0C34  315A               	addfsr 1,26
 17169  0C35  3001               	movlw	1
 17170  0C36  0781               	addwf	1,f
 17171  0C37  3141               	addfsr 1,1
 17172  0C38  1803               	skipnc
 17173  0C39  0A81               	incf	1,f
 17174                           
 17175                           ;flashy_task.c: 312: data->noholdCount = 0;
 17176  0C3A  085E               	movf	flashy_Main@data,w
 17177  0C3B  0086               	movwf	6
 17178  0C3C  085F               	movf	flashy_Main@data+1,w
 17179  0C3D  0087               	movwf	7
 17180  0C3E  315C               	addfsr 1,28
 17181  0C3F  3000               	movlw	0
 17182  0C40  3FC0               	movwi [0]fsr1
 17183  0C41  3FC1               	movwi [1]fsr1
 17184                           
 17185                           ;flashy_task.c: 313: break;
 17186  0C42  2FC9               	goto	l7593
 17187  0C43                     l7415:	
 17188                           ;flashy_task.c: 314: case 2 | 4:
 17189                           
 17190                           
 17191                           ;flashy_task.c: 315: if (data-> holdCountBX == 0){
 17192  0C43  085E               	movf	flashy_Main@data,w
 17193  0C44  0086               	movwf	6
 17194  0C45  085F               	movf	flashy_Main@data+1,w
 17195  0C46  0087               	movwf	7
 17196  0C47  3158               	addfsr 1,24
 17197  0C48  0016               	moviw fsr1++
 17198  0C49  0401               	iorwf	1,w
 17199  0C4A  1D03               	btfss	3,2
 17200  0C4B  2C60               	goto	l7425
 17201                           
 17202                           ;flashy_task.c: 316: if (flashy_option_idx == 0){
 17203  0C4C  0021               	movlb	1	; select bank1
 17204  0C4D  0826               	movf	_flashy_option_idx^(0+128),w
 17205  0C4E  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 17206  0C4F  1903               	btfsc	3,2
 17207  0C50  2C60               	goto	l7425
 17208                           
 17209                           ;flashy_task.c: 319: else {
 17210                           ;flashy_task.c: 320: if (flashy_scroll_rate < 5){
 17211                           
 17212                           ;flashy_task.c: 318: }
 17213  0C51  3000               	movlw	0
 17214  0C52  022B               	subwf	(_flashy_scroll_rate+1)^(0+128),w
 17215  0C53  3005               	movlw	5
 17216  0C54  1903               	skipnz
 17217  0C55  022A               	subwf	_flashy_scroll_rate^(0+128),w
 17218  0C56  1803               	skipnc
 17219  0C57  2C5C               	goto	l1122
 17220                           
 17221                           ;flashy_task.c: 321: flashy_scroll_rate =5;
 17222  0C58  3005               	movlw	5
 17223  0C59  00AA               	movwf	_flashy_scroll_rate^(0+128)
 17224  0C5A  3000               	movlw	0
 17225  0C5B  00AB               	movwf	(_flashy_scroll_rate^(0+128)+1)
 17226  0C5C                     l1122:	
 17227                           
 17228                           ;flashy_task.c: 322: }
 17229                           ;flashy_task.c: 323: flashy_scroll_rate -=3;
 17230  0C5C  3003               	movlw	3
 17231  0C5D  02AA               	subwf	_flashy_scroll_rate^(0+128),f
 17232  0C5E  3000               	movlw	0
 17233  0C5F  3BAB               	subwfb	(_flashy_scroll_rate+1)^(0+128),f
 17234  0C60                     l7425:	
 17235                           
 17236                           ;flashy_task.c: 324: }
 17237                           ;flashy_task.c: 326: }
 17238                           ;flashy_task.c: 327: data->holdCountA = 0;
 17239  0C60  0020               	movlb	0	; select bank0
 17240  0C61  085E               	movf	flashy_Main@data,w
 17241  0C62  0086               	movwf	6
 17242  0C63  085F               	movf	flashy_Main@data+1,w
 17243  0C64  0087               	movwf	7
 17244  0C65  314A               	addfsr 1,10
 17245  0C66  3000               	movlw	0
 17246  0C67  3FC0               	movwi [0]fsr1
 17247  0C68  3FC1               	movwi [1]fsr1
 17248                           
 17249                           ;flashy_task.c: 328: data->holdCountB += 1;
 17250  0C69  085E               	movf	flashy_Main@data,w
 17251  0C6A  0086               	movwf	6
 17252  0C6B  085F               	movf	flashy_Main@data+1,w
 17253  0C6C  0087               	movwf	7
 17254  0C6D  314C               	addfsr 1,12
 17255  0C6E  3001               	movlw	1
 17256  0C6F  0781               	addwf	1,f
 17257  0C70  3141               	addfsr 1,1
 17258  0C71  1803               	skipnc
 17259  0C72  0A81               	incf	1,f
 17260                           
 17261                           ;flashy_task.c: 329: data->holdCountX += 1;
 17262  0C73  085E               	movf	flashy_Main@data,w
 17263  0C74  0086               	movwf	6
 17264  0C75  085F               	movf	flashy_Main@data+1,w
 17265  0C76  0087               	movwf	7
 17266  0C77  314E               	addfsr 1,14
 17267  0C78  3001               	movlw	1
 17268  0C79  0781               	addwf	1,f
 17269  0C7A  3141               	addfsr 1,1
 17270  0C7B  1803               	skipnc
 17271  0C7C  0A81               	incf	1,f
 17272                           
 17273                           ;flashy_task.c: 330: data->holdCountY = 0;
 17274  0C7D  085E               	movf	flashy_Main@data,w
 17275  0C7E  0086               	movwf	6
 17276  0C7F  085F               	movf	flashy_Main@data+1,w
 17277  0C80  0087               	movwf	7
 17278  0C81  3150               	addfsr 1,16
 17279  0C82  3000               	movlw	0
 17280  0C83  3FC0               	movwi [0]fsr1
 17281  0C84  3FC1               	movwi [1]fsr1
 17282                           
 17283                           ;flashy_task.c: 331: data->holdCountXY = 0;
 17284  0C85  085E               	movf	flashy_Main@data,w
 17285  0C86  0086               	movwf	6
 17286  0C87  085F               	movf	flashy_Main@data+1,w
 17287  0C88  0087               	movwf	7
 17288  0C89  3152               	addfsr 1,18
 17289  0C8A  3000               	movlw	0
 17290  0C8B  3FC0               	movwi [0]fsr1
 17291  0C8C  3FC1               	movwi [1]fsr1
 17292                           
 17293                           ;flashy_task.c: 332: data->holdCountAY = 0;
 17294  0C8D  085E               	movf	flashy_Main@data,w
 17295  0C8E  0086               	movwf	6
 17296  0C8F  085F               	movf	flashy_Main@data+1,w
 17297  0C90  0087               	movwf	7
 17298  0C91  3154               	addfsr 1,20
 17299  0C92  3000               	movlw	0
 17300  0C93  3FC0               	movwi [0]fsr1
 17301  0C94  3FC1               	movwi [1]fsr1
 17302                           
 17303                           ;flashy_task.c: 333: data->holdCountAX = 0;
 17304  0C95  085E               	movf	flashy_Main@data,w
 17305  0C96  0086               	movwf	6
 17306  0C97  085F               	movf	flashy_Main@data+1,w
 17307  0C98  0087               	movwf	7
 17308  0C99  3156               	addfsr 1,22
 17309  0C9A  3000               	movlw	0
 17310  0C9B  3FC0               	movwi [0]fsr1
 17311  0C9C  3FC1               	movwi [1]fsr1
 17312                           
 17313                           ;flashy_task.c: 334: data->holdCountBX += 1;
 17314  0C9D  085E               	movf	flashy_Main@data,w
 17315  0C9E  0086               	movwf	6
 17316  0C9F  085F               	movf	flashy_Main@data+1,w
 17317  0CA0  0087               	movwf	7
 17318  0CA1  3158               	addfsr 1,24
 17319  0CA2  3001               	movlw	1
 17320  0CA3  0781               	addwf	1,f
 17321  0CA4  3141               	addfsr 1,1
 17322  0CA5  1803               	skipnc
 17323  0CA6  0A81               	incf	1,f
 17324                           
 17325                           ;flashy_task.c: 335: data->holdCountBY = 0;
 17326  0CA7  085E               	movf	flashy_Main@data,w
 17327  0CA8  0086               	movwf	6
 17328  0CA9  085F               	movf	flashy_Main@data+1,w
 17329  0CAA  0087               	movwf	7
 17330  0CAB  315A               	addfsr 1,26
 17331  0CAC  3000               	movlw	0
 17332  0CAD  3FC0               	movwi [0]fsr1
 17333  0CAE  3FC1               	movwi [1]fsr1
 17334                           
 17335                           ;flashy_task.c: 336: data->noholdCount = 0;
 17336  0CAF  085E               	movf	flashy_Main@data,w
 17337  0CB0  0086               	movwf	6
 17338  0CB1  085F               	movf	flashy_Main@data+1,w
 17339  0CB2  0087               	movwf	7
 17340  0CB3  315C               	addfsr 1,28
 17341  0CB4  3000               	movlw	0
 17342  0CB5  3FC0               	movwi [0]fsr1
 17343  0CB6  3FC1               	movwi [1]fsr1
 17344                           
 17345                           ;flashy_task.c: 337: break;
 17346  0CB7  2FC9               	goto	l7593
 17347  0CB8                     l7445:	
 17348                           ;flashy_task.c: 338: case 8:
 17349                           
 17350                           
 17351                           ;flashy_task.c: 340: if (data->holdCountY == 0 && data->blasterTickCount == 0){
 17352  0CB8  085E               	movf	flashy_Main@data,w
 17353  0CB9  0086               	movwf	6
 17354  0CBA  085F               	movf	flashy_Main@data+1,w
 17355  0CBB  0087               	movwf	7
 17356  0CBC  3150               	addfsr 1,16
 17357  0CBD  0016               	moviw fsr1++
 17358  0CBE  0401               	iorwf	1,w
 17359  0CBF  1D03               	btfss	3,2
 17360  0CC0  2D0E               	goto	l7463
 17361  0CC1  085E               	movf	flashy_Main@data,w
 17362  0CC2  0086               	movwf	6
 17363  0CC3  085F               	movf	flashy_Main@data+1,w
 17364  0CC4  0087               	movwf	7
 17365  0CC5  3147               	addfsr 1,7
 17366  0CC6  0016               	moviw fsr1++
 17367  0CC7  0401               	iorwf	1,w
 17368  0CC8  1D03               	btfss	3,2
 17369  0CC9  2D0E               	goto	l7463
 17370                           
 17371                           ;flashy_task.c: 342: nullifyBadge_userLedsSet(data->badge, 0x0);
 17372  0CCA  3000               	movlw	0
 17373  0CCB  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 17374  0CCC  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 17375  0CCD  085E               	movf	flashy_Main@data,w
 17376  0CCE  0086               	movwf	6
 17377  0CCF  085F               	movf	flashy_Main@data+1,w
 17378  0CD0  0087               	movwf	7
 17379  0CD1  0801               	movf	1,w
 17380  0CD2  31A6  26E5  3188   	fcall	_nullifyBadge_userLedsSet
 17381                           
 17382                           ;flashy_task.c: 344: data->displayTickCount = 0;
 17383  0CD5  0020               	movlb	0	; select bank0
 17384  0CD6  085E               	movf	flashy_Main@data,w
 17385  0CD7  0086               	movwf	6
 17386  0CD8  085F               	movf	flashy_Main@data+1,w
 17387  0CD9  0087               	movwf	7
 17388  0CDA  3144               	addfsr 1,4
 17389  0CDB  3000               	movlw	0
 17390  0CDC  3FC0               	movwi [0]fsr1
 17391  0CDD  3FC1               	movwi [1]fsr1
 17392                           
 17393                           ;flashy_task.c: 345: data->blasterTickCount = 100;
 17394  0CDE  085E               	movf	flashy_Main@data,w
 17395  0CDF  0086               	movwf	6
 17396  0CE0  085F               	movf	flashy_Main@data+1,w
 17397  0CE1  0087               	movwf	7
 17398  0CE2  3147               	addfsr 1,7
 17399  0CE3  3064               	movlw	100
 17400  0CE4  3FC0               	movwi [0]fsr1
 17401  0CE5  3000               	movlw	0
 17402  0CE6  3FC1               	movwi [1]fsr1
 17403                           
 17404                           ;flashy_task.c: 346: data->delayTickCount = 5;
 17405  0CE7  085E               	movf	flashy_Main@data,w
 17406  0CE8  0086               	movwf	6
 17407  0CE9  085F               	movf	flashy_Main@data+1,w
 17408  0CEA  0087               	movwf	7
 17409  0CEB  3141               	addfsr 1,1
 17410  0CEC  3005               	movlw	5
 17411  0CED  3FC0               	movwi [0]fsr1
 17412  0CEE  3000               	movlw	0
 17413  0CEF  3FC1               	movwi [1]fsr1
 17414                           
 17415                           ;flashy_task.c: 348: data->led_state = FLASHY_STATE_LED_SHOT;
 17416  0CF0  085E               	movf	flashy_Main@data,w
 17417  0CF1  3E03               	addlw	3
 17418  0CF2  00D4               	movwf	??_flashy_Main
 17419  0CF3  3000               	movlw	0
 17420  0CF4  3D5F               	addwfc	flashy_Main@data+1,w
 17421  0CF5  00D5               	movwf	??_flashy_Main+1
 17422  0CF6  0854               	movf	??_flashy_Main,w
 17423  0CF7  0086               	movwf	6
 17424  0CF8  0855               	movf	??_flashy_Main+1,w
 17425  0CF9  0087               	movwf	7
 17426  0CFA  3001               	movlw	1
 17427  0CFB  0081               	movwf	1
 17428                           
 17429                           ;flashy_task.c: 349: data->display_state = FLASHY_STATE_DISPLAY_BLASTER;
 17430  0CFC  085E               	movf	flashy_Main@data,w
 17431  0CFD  3E06               	addlw	6
 17432  0CFE  00D4               	movwf	??_flashy_Main
 17433  0CFF  3000               	movlw	0
 17434  0D00  3D5F               	addwfc	flashy_Main@data+1,w
 17435  0D01  00D5               	movwf	??_flashy_Main+1
 17436  0D02  0854               	movf	??_flashy_Main,w
 17437  0D03  0086               	movwf	6
 17438  0D04  0855               	movf	??_flashy_Main+1,w
 17439  0D05  0087               	movwf	7
 17440  0D06  3002               	movlw	2
 17441  0D07  0081               	movwf	1
 17442                           
 17443                           ;flashy_task.c: 350: data->blaster_state = FLASHY_BLASTER_SHOOTING_STATE;
 17444  0D08  085E               	movf	flashy_Main@data,w
 17445  0D09  0086               	movwf	6
 17446  0D0A  085F               	movf	flashy_Main@data+1,w
 17447  0D0B  0087               	movwf	7
 17448  0D0C  3149               	addfsr 1,9
 17449  0D0D  0181               	clrf	1
 17450  0D0E                     l7463:	
 17451                           
 17452                           ;flashy_task.c: 351: }
 17453                           ;flashy_task.c: 353: data->holdCountA = 0;
 17454  0D0E  085E               	movf	flashy_Main@data,w
 17455  0D0F  0086               	movwf	6
 17456  0D10  085F               	movf	flashy_Main@data+1,w
 17457  0D11  0087               	movwf	7
 17458  0D12  314A               	addfsr 1,10
 17459  0D13  3000               	movlw	0
 17460  0D14  3FC0               	movwi [0]fsr1
 17461  0D15  3FC1               	movwi [1]fsr1
 17462                           
 17463                           ;flashy_task.c: 354: data->holdCountB = 0;
 17464  0D16  085E               	movf	flashy_Main@data,w
 17465  0D17  0086               	movwf	6
 17466  0D18  085F               	movf	flashy_Main@data+1,w
 17467  0D19  0087               	movwf	7
 17468  0D1A  314C               	addfsr 1,12
 17469  0D1B  3000               	movlw	0
 17470  0D1C  3FC0               	movwi [0]fsr1
 17471  0D1D  3FC1               	movwi [1]fsr1
 17472                           
 17473                           ;flashy_task.c: 355: data->holdCountX = 0;
 17474  0D1E  085E               	movf	flashy_Main@data,w
 17475  0D1F  0086               	movwf	6
 17476  0D20  085F               	movf	flashy_Main@data+1,w
 17477  0D21  0087               	movwf	7
 17478  0D22  314E               	addfsr 1,14
 17479  0D23  3000               	movlw	0
 17480  0D24  3FC0               	movwi [0]fsr1
 17481  0D25  3FC1               	movwi [1]fsr1
 17482                           
 17483                           ;flashy_task.c: 356: data->holdCountY += 1;
 17484  0D26  085E               	movf	flashy_Main@data,w
 17485  0D27  0086               	movwf	6
 17486  0D28  085F               	movf	flashy_Main@data+1,w
 17487  0D29  0087               	movwf	7
 17488  0D2A  3150               	addfsr 1,16
 17489  0D2B  3001               	movlw	1
 17490  0D2C  0781               	addwf	1,f
 17491  0D2D  3141               	addfsr 1,1
 17492  0D2E  1803               	skipnc
 17493  0D2F  0A81               	incf	1,f
 17494                           
 17495                           ;flashy_task.c: 357: data->holdCountXY = 0;
 17496  0D30  085E               	movf	flashy_Main@data,w
 17497  0D31  0086               	movwf	6
 17498  0D32  085F               	movf	flashy_Main@data+1,w
 17499  0D33  0087               	movwf	7
 17500  0D34  3152               	addfsr 1,18
 17501  0D35  3000               	movlw	0
 17502  0D36  3FC0               	movwi [0]fsr1
 17503  0D37  3FC1               	movwi [1]fsr1
 17504                           
 17505                           ;flashy_task.c: 358: data->holdCountAY = 0;
 17506  0D38  085E               	movf	flashy_Main@data,w
 17507  0D39  0086               	movwf	6
 17508  0D3A  085F               	movf	flashy_Main@data+1,w
 17509  0D3B  0087               	movwf	7
 17510  0D3C  3154               	addfsr 1,20
 17511  0D3D  3000               	movlw	0
 17512  0D3E  3FC0               	movwi [0]fsr1
 17513  0D3F  3FC1               	movwi [1]fsr1
 17514                           
 17515                           ;flashy_task.c: 359: data->holdCountAX = 0;
 17516  0D40  085E               	movf	flashy_Main@data,w
 17517  0D41  0086               	movwf	6
 17518  0D42  085F               	movf	flashy_Main@data+1,w
 17519  0D43  0087               	movwf	7
 17520  0D44  3156               	addfsr 1,22
 17521  0D45  3000               	movlw	0
 17522  0D46  3FC0               	movwi [0]fsr1
 17523  0D47  3FC1               	movwi [1]fsr1
 17524                           
 17525                           ;flashy_task.c: 360: data->holdCountBX = 0;
 17526  0D48  085E               	movf	flashy_Main@data,w
 17527  0D49  0086               	movwf	6
 17528  0D4A  085F               	movf	flashy_Main@data+1,w
 17529  0D4B  0087               	movwf	7
 17530  0D4C  3158               	addfsr 1,24
 17531  0D4D  3000               	movlw	0
 17532  0D4E  3FC0               	movwi [0]fsr1
 17533  0D4F  3FC1               	movwi [1]fsr1
 17534                           
 17535                           ;flashy_task.c: 361: data->holdCountBY = 0;
 17536  0D50  085E               	movf	flashy_Main@data,w
 17537  0D51  0086               	movwf	6
 17538  0D52  085F               	movf	flashy_Main@data+1,w
 17539  0D53  0087               	movwf	7
 17540  0D54  315A               	addfsr 1,26
 17541  0D55  3000               	movlw	0
 17542  0D56  3FC0               	movwi [0]fsr1
 17543  0D57  3FC1               	movwi [1]fsr1
 17544                           
 17545                           ;flashy_task.c: 362: data->noholdCount = 0;
 17546  0D58  085E               	movf	flashy_Main@data,w
 17547  0D59  0086               	movwf	6
 17548  0D5A  085F               	movf	flashy_Main@data+1,w
 17549  0D5B  0087               	movwf	7
 17550  0D5C  315C               	addfsr 1,28
 17551  0D5D  3000               	movlw	0
 17552  0D5E  3FC0               	movwi [0]fsr1
 17553  0D5F  3FC1               	movwi [1]fsr1
 17554                           
 17555                           ;flashy_task.c: 363: break;
 17556  0D60  2FC9               	goto	l7593
 17557  0D61                     l7483:	
 17558                           ;flashy_task.c: 364: case 2:
 17559                           
 17560                           
 17561                           ;flashy_task.c: 366: if (data->holdCountB == 0){
 17562  0D61  085E               	movf	flashy_Main@data,w
 17563  0D62  0086               	movwf	6
 17564  0D63  085F               	movf	flashy_Main@data+1,w
 17565  0D64  0087               	movwf	7
 17566  0D65  314C               	addfsr 1,12
 17567  0D66  0016               	moviw fsr1++
 17568  0D67  0401               	iorwf	1,w
 17569  0D68  1D03               	btfss	3,2
 17570  0D69  2D8F               	goto	l7493
 17571                           
 17572                           ;flashy_task.c: 367: data->display_state = FLASHY_STATE_DISPLAY;
 17573  0D6A  085E               	movf	flashy_Main@data,w
 17574  0D6B  0086               	movwf	6
 17575  0D6C  085F               	movf	flashy_Main@data+1,w
 17576  0D6D  0087               	movwf	7
 17577  0D6E  3146               	addfsr 1,6
 17578  0D6F  0181               	clrf	1
 17579                           
 17580                           ;flashy_task.c: 368: if (flashy_option_idx == flashy_option_size - 1){
 17581  0D70  0021               	movlb	1	; select bank1
 17582  0D71  0824               	movf	_flashy_option_size^(0+128),w
 17583  0D72  3EFF               	addlw	255
 17584  0D73  0020               	movlb	0	; select bank0
 17585  0D74  00D4               	movwf	??_flashy_Main
 17586  0D75  30FF               	movlw	255
 17587  0D76  0021               	movlb	1	; select bank1
 17588  0D77  3D25               	addwfc	(_flashy_option_size+1)^(0+128),w
 17589  0D78  0020               	movlb	0	; select bank0
 17590  0D79  00D5               	movwf	??_flashy_Main+1
 17591  0D7A  0021               	movlb	1	; select bank1
 17592  0D7B  0827               	movf	(_flashy_option_idx+1)^(0+128),w
 17593  0D7C  0020               	movlb	0	; select bank0
 17594  0D7D  0655               	xorwf	??_flashy_Main+1,w
 17595  0D7E  1D03               	skipz
 17596  0D7F  2D84               	goto	u4395
 17597  0D80  0021               	movlb	1	; select bank1
 17598  0D81  0826               	movf	_flashy_option_idx^(0+128),w
 17599  0D82  0020               	movlb	0	; select bank0
 17600  0D83  0654               	xorwf	??_flashy_Main,w
 17601  0D84                     u4395:	
 17602  0D84  1D03               	skipz
 17603  0D85  2D8A               	goto	l7491
 17604                           
 17605                           ;flashy_task.c: 369: flashy_option_idx = 0;
 17606  0D86  0021               	movlb	1	; select bank1
 17607  0D87  01A6               	clrf	_flashy_option_idx^(0+128)
 17608  0D88  01A7               	clrf	(_flashy_option_idx+1)^(0+128)
 17609                           
 17610                           ;flashy_task.c: 370: }
 17611  0D89  2D8F               	goto	l7493
 17612  0D8A                     l7491:	
 17613                           
 17614                           ;flashy_task.c: 371: else {
 17615                           ;flashy_task.c: 372: flashy_option_idx += 1;
 17616  0D8A  3001               	movlw	1
 17617  0D8B  0021               	movlb	1	; select bank1
 17618  0D8C  07A6               	addwf	_flashy_option_idx^(0+128),f
 17619  0D8D  3000               	movlw	0
 17620  0D8E  3DA7               	addwfc	(_flashy_option_idx+1)^(0+128),f
 17621  0D8F                     l7493:	
 17622                           
 17623                           ;flashy_task.c: 373: }
 17624                           ;flashy_task.c: 374: }
 17625                           ;flashy_task.c: 375: data->holdCountA = 0;
 17626  0D8F  0020               	movlb	0	; select bank0
 17627  0D90  085E               	movf	flashy_Main@data,w
 17628  0D91  0086               	movwf	6
 17629  0D92  085F               	movf	flashy_Main@data+1,w
 17630  0D93  0087               	movwf	7
 17631  0D94  314A               	addfsr 1,10
 17632  0D95  3000               	movlw	0
 17633  0D96  3FC0               	movwi [0]fsr1
 17634  0D97  3FC1               	movwi [1]fsr1
 17635                           
 17636                           ;flashy_task.c: 376: data->holdCountB += 1;
 17637  0D98  085E               	movf	flashy_Main@data,w
 17638  0D99  0086               	movwf	6
 17639  0D9A  085F               	movf	flashy_Main@data+1,w
 17640  0D9B  0087               	movwf	7
 17641  0D9C  314C               	addfsr 1,12
 17642  0D9D  3001               	movlw	1
 17643  0D9E  0781               	addwf	1,f
 17644  0D9F  3141               	addfsr 1,1
 17645  0DA0  1803               	skipnc
 17646  0DA1  0A81               	incf	1,f
 17647                           
 17648                           ;flashy_task.c: 377: data->holdCountX = 0;
 17649  0DA2  085E               	movf	flashy_Main@data,w
 17650  0DA3  0086               	movwf	6
 17651  0DA4  085F               	movf	flashy_Main@data+1,w
 17652  0DA5  0087               	movwf	7
 17653  0DA6  314E               	addfsr 1,14
 17654  0DA7  3000               	movlw	0
 17655  0DA8  3FC0               	movwi [0]fsr1
 17656  0DA9  3FC1               	movwi [1]fsr1
 17657                           
 17658                           ;flashy_task.c: 378: data->holdCountY = 0;
 17659  0DAA  085E               	movf	flashy_Main@data,w
 17660  0DAB  0086               	movwf	6
 17661  0DAC  085F               	movf	flashy_Main@data+1,w
 17662  0DAD  0087               	movwf	7
 17663  0DAE  3150               	addfsr 1,16
 17664  0DAF  3000               	movlw	0
 17665  0DB0  3FC0               	movwi [0]fsr1
 17666  0DB1  3FC1               	movwi [1]fsr1
 17667                           
 17668                           ;flashy_task.c: 379: data->holdCountXY = 0;
 17669  0DB2  085E               	movf	flashy_Main@data,w
 17670  0DB3  0086               	movwf	6
 17671  0DB4  085F               	movf	flashy_Main@data+1,w
 17672  0DB5  0087               	movwf	7
 17673  0DB6  3152               	addfsr 1,18
 17674  0DB7  3000               	movlw	0
 17675  0DB8  3FC0               	movwi [0]fsr1
 17676  0DB9  3FC1               	movwi [1]fsr1
 17677                           
 17678                           ;flashy_task.c: 380: data->holdCountAY = 0;
 17679  0DBA  085E               	movf	flashy_Main@data,w
 17680  0DBB  0086               	movwf	6
 17681  0DBC  085F               	movf	flashy_Main@data+1,w
 17682  0DBD  0087               	movwf	7
 17683  0DBE  3154               	addfsr 1,20
 17684  0DBF  3000               	movlw	0
 17685  0DC0  3FC0               	movwi [0]fsr1
 17686  0DC1  3FC1               	movwi [1]fsr1
 17687                           
 17688                           ;flashy_task.c: 381: data->holdCountAX = 0;
 17689  0DC2  085E               	movf	flashy_Main@data,w
 17690  0DC3  0086               	movwf	6
 17691  0DC4  085F               	movf	flashy_Main@data+1,w
 17692  0DC5  0087               	movwf	7
 17693  0DC6  3156               	addfsr 1,22
 17694  0DC7  3000               	movlw	0
 17695  0DC8  3FC0               	movwi [0]fsr1
 17696  0DC9  3FC1               	movwi [1]fsr1
 17697                           
 17698                           ;flashy_task.c: 382: data->holdCountBX = 0;
 17699  0DCA  085E               	movf	flashy_Main@data,w
 17700  0DCB  0086               	movwf	6
 17701  0DCC  085F               	movf	flashy_Main@data+1,w
 17702  0DCD  0087               	movwf	7
 17703  0DCE  3158               	addfsr 1,24
 17704  0DCF  3000               	movlw	0
 17705  0DD0  3FC0               	movwi [0]fsr1
 17706  0DD1  3FC1               	movwi [1]fsr1
 17707                           
 17708                           ;flashy_task.c: 383: data->holdCountBY = 0;
 17709  0DD2  085E               	movf	flashy_Main@data,w
 17710  0DD3  0086               	movwf	6
 17711  0DD4  085F               	movf	flashy_Main@data+1,w
 17712  0DD5  0087               	movwf	7
 17713  0DD6  315A               	addfsr 1,26
 17714  0DD7  3000               	movlw	0
 17715  0DD8  3FC0               	movwi [0]fsr1
 17716  0DD9  3FC1               	movwi [1]fsr1
 17717                           
 17718                           ;flashy_task.c: 384: data->noholdCount = 0;
 17719  0DDA  085E               	movf	flashy_Main@data,w
 17720  0DDB  0086               	movwf	6
 17721  0DDC  085F               	movf	flashy_Main@data+1,w
 17722  0DDD  0087               	movwf	7
 17723  0DDE  315C               	addfsr 1,28
 17724  0DDF  3000               	movlw	0
 17725  0DE0  3FC0               	movwi [0]fsr1
 17726  0DE1  3FC1               	movwi [1]fsr1
 17727                           
 17728                           ;flashy_task.c: 385: break;
 17729  0DE2  2FC9               	goto	l7593
 17730  0DE3                     l7513:	
 17731                           ;flashy_task.c: 386: case 1:
 17732                           
 17733                           
 17734                           ;flashy_task.c: 387: if ( data->holdCountA == 0){
 17735  0DE3  085E               	movf	flashy_Main@data,w
 17736  0DE4  0086               	movwf	6
 17737  0DE5  085F               	movf	flashy_Main@data+1,w
 17738  0DE6  0087               	movwf	7
 17739  0DE7  314A               	addfsr 1,10
 17740  0DE8  0016               	moviw fsr1++
 17741  0DE9  0401               	iorwf	1,w
 17742  0DEA  1D03               	btfss	3,2
 17743  0DEB  2E3E               	goto	l7537
 17744                           
 17745                           ;flashy_task.c: 390: if (flashy_leds_state_track > 3){
 17746  0DEC  3000               	movlw	0
 17747  0DED  0021               	movlb	1	; select bank1
 17748  0DEE  022F               	subwf	(_flashy_leds_state_track+1)^(0+128),w
 17749  0DEF  3004               	movlw	4
 17750  0DF0  1903               	skipnz
 17751  0DF1  022E               	subwf	_flashy_leds_state_track^(0+128),w
 17752  0DF2  1C03               	skipc
 17753  0DF3  2DF6               	goto	l7519
 17754                           
 17755                           ;flashy_task.c: 391: flashy_leds_state_track=0;
 17756  0DF4  01AE               	clrf	_flashy_leds_state_track^(0+128)
 17757  0DF5  01AF               	clrf	(_flashy_leds_state_track+1)^(0+128)
 17758  0DF6                     l7519:	
 17759                           
 17760                           ;flashy_task.c: 392: }
 17761                           ;flashy_task.c: 393: if (flashy_leds_state_track== 0){
 17762  0DF6  082E               	movf	_flashy_leds_state_track^(0+128),w
 17763  0DF7  042F               	iorwf	(_flashy_leds_state_track+1)^(0+128),w
 17764  0DF8  1D03               	btfss	3,2
 17765  0DF9  2E07               	goto	l7523
 17766                           
 17767                           ;flashy_task.c: 394: data->led_state = FLASHY_STATE_LED_ALT;
 17768  0DFA  0020               	movlb	0	; select bank0
 17769  0DFB  085E               	movf	flashy_Main@data,w
 17770  0DFC  3E03               	addlw	3
 17771  0DFD  00D4               	movwf	??_flashy_Main
 17772  0DFE  3000               	movlw	0
 17773  0DFF  3D5F               	addwfc	flashy_Main@data+1,w
 17774  0E00  00D5               	movwf	??_flashy_Main+1
 17775  0E01  0854               	movf	??_flashy_Main,w
 17776  0E02  0086               	movwf	6
 17777  0E03  0855               	movf	??_flashy_Main+1,w
 17778  0E04  0087               	movwf	7
 17779  0E05  3004               	movlw	4
 17780  0E06  0081               	movwf	1
 17781  0E07                     l7523:	
 17782                           
 17783                           ;flashy_task.c: 395: }
 17784                           ;flashy_task.c: 396: if (flashy_leds_state_track ==1){
 17785  0E07  0021               	movlb	1	; select bank1
 17786  0E08  032E               	decf	_flashy_leds_state_track^(0+128),w
 17787  0E09  042F               	iorwf	(_flashy_leds_state_track+1)^(0+128),w
 17788  0E0A  1D03               	btfss	3,2
 17789  0E0B  2E19               	goto	l7527
 17790                           
 17791                           ;flashy_task.c: 397: data->led_state = FLASHY_STATE_SPARKLE;
 17792  0E0C  0020               	movlb	0	; select bank0
 17793  0E0D  085E               	movf	flashy_Main@data,w
 17794  0E0E  3E03               	addlw	3
 17795  0E0F  00D4               	movwf	??_flashy_Main
 17796  0E10  3000               	movlw	0
 17797  0E11  3D5F               	addwfc	flashy_Main@data+1,w
 17798  0E12  00D5               	movwf	??_flashy_Main+1
 17799  0E13  0854               	movf	??_flashy_Main,w
 17800  0E14  0086               	movwf	6
 17801  0E15  0855               	movf	??_flashy_Main+1,w
 17802  0E16  0087               	movwf	7
 17803  0E17  3002               	movlw	2
 17804  0E18  0081               	movwf	1
 17805  0E19                     l7527:	
 17806                           
 17807                           ;flashy_task.c: 398: }
 17808                           ;flashy_task.c: 399: if (flashy_leds_state_track == 2){
 17809  0E19  3002               	movlw	2
 17810  0E1A  0021               	movlb	1	; select bank1
 17811  0E1B  062E               	xorwf	_flashy_leds_state_track^(0+128),w
 17812  0E1C  042F               	iorwf	(_flashy_leds_state_track+1)^(0+128),w
 17813  0E1D  1D03               	btfss	3,2
 17814  0E1E  2E2C               	goto	l7531
 17815                           
 17816                           ;flashy_task.c: 400: data->led_state = FLASHY_STATE_CIRCLE;
 17817  0E1F  0020               	movlb	0	; select bank0
 17818  0E20  085E               	movf	flashy_Main@data,w
 17819  0E21  3E03               	addlw	3
 17820  0E22  00D4               	movwf	??_flashy_Main
 17821  0E23  3000               	movlw	0
 17822  0E24  3D5F               	addwfc	flashy_Main@data+1,w
 17823  0E25  00D5               	movwf	??_flashy_Main+1
 17824  0E26  0854               	movf	??_flashy_Main,w
 17825  0E27  0086               	movwf	6
 17826  0E28  0855               	movf	??_flashy_Main+1,w
 17827  0E29  0087               	movwf	7
 17828  0E2A  3003               	movlw	3
 17829  0E2B  0081               	movwf	1
 17830  0E2C                     l7531:	
 17831                           
 17832                           ;flashy_task.c: 401: }
 17833                           ;flashy_task.c: 402: if (flashy_leds_state_track == 3){
 17834  0E2C  3003               	movlw	3
 17835  0E2D  0021               	movlb	1	; select bank1
 17836  0E2E  062E               	xorwf	_flashy_leds_state_track^(0+128),w
 17837  0E2F  042F               	iorwf	(_flashy_leds_state_track+1)^(0+128),w
 17838  0E30  1D03               	btfss	3,2
 17839  0E31  2E39               	goto	l7535
 17840                           
 17841                           ;flashy_task.c: 403: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 17842  0E32  0020               	movlb	0	; select bank0
 17843  0E33  085E               	movf	flashy_Main@data,w
 17844  0E34  0086               	movwf	6
 17845  0E35  085F               	movf	flashy_Main@data+1,w
 17846  0E36  0087               	movwf	7
 17847  0E37  3143               	addfsr 1,3
 17848  0E38  0181               	clrf	1
 17849  0E39                     l7535:	
 17850                           
 17851                           ;flashy_task.c: 404: }
 17852                           ;flashy_task.c: 405: flashy_leds_state_track +=1;
 17853  0E39  3001               	movlw	1
 17854  0E3A  0021               	movlb	1	; select bank1
 17855  0E3B  07AE               	addwf	_flashy_leds_state_track^(0+128),f
 17856  0E3C  3000               	movlw	0
 17857  0E3D  3DAF               	addwfc	(_flashy_leds_state_track+1)^(0+128),f
 17858  0E3E                     l7537:	
 17859                           
 17860                           ;flashy_task.c: 406: }
 17861                           ;flashy_task.c: 408: data->holdCountA += 1;
 17862  0E3E  0020               	movlb	0	; select bank0
 17863  0E3F  085E               	movf	flashy_Main@data,w
 17864  0E40  0086               	movwf	6
 17865  0E41  085F               	movf	flashy_Main@data+1,w
 17866  0E42  0087               	movwf	7
 17867  0E43  314A               	addfsr 1,10
 17868  0E44  3001               	movlw	1
 17869  0E45  0781               	addwf	1,f
 17870  0E46  3141               	addfsr 1,1
 17871  0E47  1803               	skipnc
 17872  0E48  0A81               	incf	1,f
 17873                           
 17874                           ;flashy_task.c: 409: data->holdCountB = 0;
 17875  0E49  085E               	movf	flashy_Main@data,w
 17876  0E4A  0086               	movwf	6
 17877  0E4B  085F               	movf	flashy_Main@data+1,w
 17878  0E4C  0087               	movwf	7
 17879  0E4D  314C               	addfsr 1,12
 17880  0E4E  3000               	movlw	0
 17881  0E4F  3FC0               	movwi [0]fsr1
 17882  0E50  3FC1               	movwi [1]fsr1
 17883                           
 17884                           ;flashy_task.c: 410: data->holdCountX = 0;
 17885  0E51  085E               	movf	flashy_Main@data,w
 17886  0E52  0086               	movwf	6
 17887  0E53  085F               	movf	flashy_Main@data+1,w
 17888  0E54  0087               	movwf	7
 17889  0E55  314E               	addfsr 1,14
 17890  0E56  3000               	movlw	0
 17891  0E57  3FC0               	movwi [0]fsr1
 17892  0E58  3FC1               	movwi [1]fsr1
 17893                           
 17894                           ;flashy_task.c: 411: data->holdCountY = 0;
 17895  0E59  085E               	movf	flashy_Main@data,w
 17896  0E5A  0086               	movwf	6
 17897  0E5B  085F               	movf	flashy_Main@data+1,w
 17898  0E5C  0087               	movwf	7
 17899  0E5D  3150               	addfsr 1,16
 17900  0E5E  3000               	movlw	0
 17901  0E5F  3FC0               	movwi [0]fsr1
 17902  0E60  3FC1               	movwi [1]fsr1
 17903                           
 17904                           ;flashy_task.c: 412: data->holdCountXY = 0;
 17905  0E61  085E               	movf	flashy_Main@data,w
 17906  0E62  0086               	movwf	6
 17907  0E63  085F               	movf	flashy_Main@data+1,w
 17908  0E64  0087               	movwf	7
 17909  0E65  3152               	addfsr 1,18
 17910  0E66  3000               	movlw	0
 17911  0E67  3FC0               	movwi [0]fsr1
 17912  0E68  3FC1               	movwi [1]fsr1
 17913                           
 17914                           ;flashy_task.c: 413: data->holdCountAY = 0;
 17915  0E69  085E               	movf	flashy_Main@data,w
 17916  0E6A  0086               	movwf	6
 17917  0E6B  085F               	movf	flashy_Main@data+1,w
 17918  0E6C  0087               	movwf	7
 17919  0E6D  3154               	addfsr 1,20
 17920  0E6E  3000               	movlw	0
 17921  0E6F  3FC0               	movwi [0]fsr1
 17922  0E70  3FC1               	movwi [1]fsr1
 17923                           
 17924                           ;flashy_task.c: 414: data->holdCountAX = 0;
 17925  0E71  085E               	movf	flashy_Main@data,w
 17926  0E72  0086               	movwf	6
 17927  0E73  085F               	movf	flashy_Main@data+1,w
 17928  0E74  0087               	movwf	7
 17929  0E75  3156               	addfsr 1,22
 17930  0E76  3000               	movlw	0
 17931  0E77  3FC0               	movwi [0]fsr1
 17932  0E78  3FC1               	movwi [1]fsr1
 17933                           
 17934                           ;flashy_task.c: 415: data->holdCountBX = 0;
 17935  0E79  085E               	movf	flashy_Main@data,w
 17936  0E7A  0086               	movwf	6
 17937  0E7B  085F               	movf	flashy_Main@data+1,w
 17938  0E7C  0087               	movwf	7
 17939  0E7D  3158               	addfsr 1,24
 17940  0E7E  3000               	movlw	0
 17941  0E7F  3FC0               	movwi [0]fsr1
 17942  0E80  3FC1               	movwi [1]fsr1
 17943                           
 17944                           ;flashy_task.c: 416: data->holdCountBY = 0;
 17945  0E81  085E               	movf	flashy_Main@data,w
 17946  0E82  0086               	movwf	6
 17947  0E83  085F               	movf	flashy_Main@data+1,w
 17948  0E84  0087               	movwf	7
 17949  0E85  315A               	addfsr 1,26
 17950  0E86  3000               	movlw	0
 17951  0E87  3FC0               	movwi [0]fsr1
 17952  0E88  3FC1               	movwi [1]fsr1
 17953                           
 17954                           ;flashy_task.c: 417: data->noholdCount = 0;
 17955  0E89  085E               	movf	flashy_Main@data,w
 17956  0E8A  0086               	movwf	6
 17957  0E8B  085F               	movf	flashy_Main@data+1,w
 17958  0E8C  0087               	movwf	7
 17959  0E8D  315C               	addfsr 1,28
 17960  0E8E  3000               	movlw	0
 17961  0E8F  3FC0               	movwi [0]fsr1
 17962  0E90  3FC1               	movwi [1]fsr1
 17963                           
 17964                           ;flashy_task.c: 418: break;
 17965  0E91  2FC9               	goto	l7593
 17966  0E92                     l7557:	
 17967                           ;flashy_task.c: 419: case 0:
 17968                           
 17969                           
 17970                           ;flashy_task.c: 421: data->holdCountA = 0;
 17971  0E92  085E               	movf	flashy_Main@data,w
 17972  0E93  0086               	movwf	6
 17973  0E94  085F               	movf	flashy_Main@data+1,w
 17974  0E95  0087               	movwf	7
 17975  0E96  314A               	addfsr 1,10
 17976  0E97  3000               	movlw	0
 17977  0E98  3FC0               	movwi [0]fsr1
 17978  0E99  3FC1               	movwi [1]fsr1
 17979                           
 17980                           ;flashy_task.c: 422: data->holdCountB = 0;
 17981  0E9A  085E               	movf	flashy_Main@data,w
 17982  0E9B  0086               	movwf	6
 17983  0E9C  085F               	movf	flashy_Main@data+1,w
 17984  0E9D  0087               	movwf	7
 17985  0E9E  314C               	addfsr 1,12
 17986  0E9F  3000               	movlw	0
 17987  0EA0  3FC0               	movwi [0]fsr1
 17988  0EA1  3FC1               	movwi [1]fsr1
 17989                           
 17990                           ;flashy_task.c: 423: data->holdCountX = 0;
 17991  0EA2  085E               	movf	flashy_Main@data,w
 17992  0EA3  0086               	movwf	6
 17993  0EA4  085F               	movf	flashy_Main@data+1,w
 17994  0EA5  0087               	movwf	7
 17995  0EA6  314E               	addfsr 1,14
 17996  0EA7  3000               	movlw	0
 17997  0EA8  3FC0               	movwi [0]fsr1
 17998  0EA9  3FC1               	movwi [1]fsr1
 17999                           
 18000                           ;flashy_task.c: 424: data->holdCountY = 0;
 18001  0EAA  085E               	movf	flashy_Main@data,w
 18002  0EAB  0086               	movwf	6
 18003  0EAC  085F               	movf	flashy_Main@data+1,w
 18004  0EAD  0087               	movwf	7
 18005  0EAE  3150               	addfsr 1,16
 18006  0EAF  3000               	movlw	0
 18007  0EB0  3FC0               	movwi [0]fsr1
 18008  0EB1  3FC1               	movwi [1]fsr1
 18009                           
 18010                           ;flashy_task.c: 425: data->holdCountXY = 0;
 18011  0EB2  085E               	movf	flashy_Main@data,w
 18012  0EB3  0086               	movwf	6
 18013  0EB4  085F               	movf	flashy_Main@data+1,w
 18014  0EB5  0087               	movwf	7
 18015  0EB6  3152               	addfsr 1,18
 18016  0EB7  3000               	movlw	0
 18017  0EB8  3FC0               	movwi [0]fsr1
 18018  0EB9  3FC1               	movwi [1]fsr1
 18019                           
 18020                           ;flashy_task.c: 426: data->holdCountAY = 0;
 18021  0EBA  085E               	movf	flashy_Main@data,w
 18022  0EBB  0086               	movwf	6
 18023  0EBC  085F               	movf	flashy_Main@data+1,w
 18024  0EBD  0087               	movwf	7
 18025  0EBE  3154               	addfsr 1,20
 18026  0EBF  3000               	movlw	0
 18027  0EC0  3FC0               	movwi [0]fsr1
 18028  0EC1  3FC1               	movwi [1]fsr1
 18029                           
 18030                           ;flashy_task.c: 427: data->holdCountAX = 0;
 18031  0EC2  085E               	movf	flashy_Main@data,w
 18032  0EC3  0086               	movwf	6
 18033  0EC4  085F               	movf	flashy_Main@data+1,w
 18034  0EC5  0087               	movwf	7
 18035  0EC6  3156               	addfsr 1,22
 18036  0EC7  3000               	movlw	0
 18037  0EC8  3FC0               	movwi [0]fsr1
 18038  0EC9  3FC1               	movwi [1]fsr1
 18039                           
 18040                           ;flashy_task.c: 428: data->holdCountBX = 0;
 18041  0ECA  085E               	movf	flashy_Main@data,w
 18042  0ECB  0086               	movwf	6
 18043  0ECC  085F               	movf	flashy_Main@data+1,w
 18044  0ECD  0087               	movwf	7
 18045  0ECE  3158               	addfsr 1,24
 18046  0ECF  3000               	movlw	0
 18047  0ED0  3FC0               	movwi [0]fsr1
 18048  0ED1  3FC1               	movwi [1]fsr1
 18049                           
 18050                           ;flashy_task.c: 429: data->holdCountBY = 0;
 18051  0ED2  085E               	movf	flashy_Main@data,w
 18052  0ED3  0086               	movwf	6
 18053  0ED4  085F               	movf	flashy_Main@data+1,w
 18054  0ED5  0087               	movwf	7
 18055  0ED6  315A               	addfsr 1,26
 18056  0ED7  3000               	movlw	0
 18057  0ED8  3FC0               	movwi [0]fsr1
 18058  0ED9  3FC1               	movwi [1]fsr1
 18059                           
 18060                           ;flashy_task.c: 430: data->noholdCount += 1;
 18061  0EDA  085E               	movf	flashy_Main@data,w
 18062  0EDB  0086               	movwf	6
 18063  0EDC  085F               	movf	flashy_Main@data+1,w
 18064  0EDD  0087               	movwf	7
 18065  0EDE  315C               	addfsr 1,28
 18066  0EDF  3001               	movlw	1
 18067  0EE0  0781               	addwf	1,f
 18068  0EE1  3141               	addfsr 1,1
 18069  0EE2  1803               	skipnc
 18070  0EE3  0A81               	incf	1,f
 18071                           
 18072                           ;flashy_task.c: 431: break;
 18073  0EE4  2FC9               	goto	l7593
 18074  0EE5                     l7561:	
 18075                           ;flashy_task.c: 432: default:
 18076                           
 18077                           
 18078                           ;flashy_task.c: 433: data->holdCountA = 0;
 18079  0EE5  085E               	movf	flashy_Main@data,w
 18080  0EE6  0086               	movwf	6
 18081  0EE7  085F               	movf	flashy_Main@data+1,w
 18082  0EE8  0087               	movwf	7
 18083  0EE9  314A               	addfsr 1,10
 18084  0EEA  3000               	movlw	0
 18085  0EEB  3FC0               	movwi [0]fsr1
 18086  0EEC  3FC1               	movwi [1]fsr1
 18087                           
 18088                           ;flashy_task.c: 434: data->holdCountB = 0;
 18089  0EED  085E               	movf	flashy_Main@data,w
 18090  0EEE  0086               	movwf	6
 18091  0EEF  085F               	movf	flashy_Main@data+1,w
 18092  0EF0  0087               	movwf	7
 18093  0EF1  314C               	addfsr 1,12
 18094  0EF2  3000               	movlw	0
 18095  0EF3  3FC0               	movwi [0]fsr1
 18096  0EF4  3FC1               	movwi [1]fsr1
 18097                           
 18098                           ;flashy_task.c: 435: data->holdCountX = 0;
 18099  0EF5  085E               	movf	flashy_Main@data,w
 18100  0EF6  0086               	movwf	6
 18101  0EF7  085F               	movf	flashy_Main@data+1,w
 18102  0EF8  0087               	movwf	7
 18103  0EF9  314E               	addfsr 1,14
 18104  0EFA  3000               	movlw	0
 18105  0EFB  3FC0               	movwi [0]fsr1
 18106  0EFC  3FC1               	movwi [1]fsr1
 18107                           
 18108                           ;flashy_task.c: 436: data->holdCountY = 0;
 18109  0EFD  085E               	movf	flashy_Main@data,w
 18110  0EFE  0086               	movwf	6
 18111  0EFF  085F               	movf	flashy_Main@data+1,w
 18112  0F00  0087               	movwf	7
 18113  0F01  3150               	addfsr 1,16
 18114  0F02  3000               	movlw	0
 18115  0F03  3FC0               	movwi [0]fsr1
 18116  0F04  3FC1               	movwi [1]fsr1
 18117                           
 18118                           ;flashy_task.c: 437: data->holdCountXY = 0;
 18119  0F05  085E               	movf	flashy_Main@data,w
 18120  0F06  0086               	movwf	6
 18121  0F07  085F               	movf	flashy_Main@data+1,w
 18122  0F08  0087               	movwf	7
 18123  0F09  3152               	addfsr 1,18
 18124  0F0A  3000               	movlw	0
 18125  0F0B  3FC0               	movwi [0]fsr1
 18126  0F0C  3FC1               	movwi [1]fsr1
 18127                           
 18128                           ;flashy_task.c: 438: data->holdCountAY = 0;
 18129  0F0D  085E               	movf	flashy_Main@data,w
 18130  0F0E  0086               	movwf	6
 18131  0F0F  085F               	movf	flashy_Main@data+1,w
 18132  0F10  0087               	movwf	7
 18133  0F11  3154               	addfsr 1,20
 18134  0F12  3000               	movlw	0
 18135  0F13  3FC0               	movwi [0]fsr1
 18136  0F14  3FC1               	movwi [1]fsr1
 18137                           
 18138                           ;flashy_task.c: 439: data->holdCountAX = 0;
 18139  0F15  085E               	movf	flashy_Main@data,w
 18140  0F16  0086               	movwf	6
 18141  0F17  085F               	movf	flashy_Main@data+1,w
 18142  0F18  0087               	movwf	7
 18143  0F19  3156               	addfsr 1,22
 18144  0F1A  3000               	movlw	0
 18145  0F1B  3FC0               	movwi [0]fsr1
 18146  0F1C  3FC1               	movwi [1]fsr1
 18147                           
 18148                           ;flashy_task.c: 440: data->holdCountBX = 0;
 18149  0F1D  085E               	movf	flashy_Main@data,w
 18150  0F1E  0086               	movwf	6
 18151  0F1F  085F               	movf	flashy_Main@data+1,w
 18152  0F20  0087               	movwf	7
 18153  0F21  3158               	addfsr 1,24
 18154  0F22  3000               	movlw	0
 18155  0F23  3FC0               	movwi [0]fsr1
 18156  0F24  3FC1               	movwi [1]fsr1
 18157                           
 18158                           ;flashy_task.c: 441: data->holdCountBY = 0;
 18159  0F25  085E               	movf	flashy_Main@data,w
 18160  0F26  0086               	movwf	6
 18161  0F27  085F               	movf	flashy_Main@data+1,w
 18162  0F28  0087               	movwf	7
 18163  0F29  315A               	addfsr 1,26
 18164  0F2A  3000               	movlw	0
 18165  0F2B  3FC0               	movwi [0]fsr1
 18166  0F2C  3FC1               	movwi [1]fsr1
 18167                           
 18168                           ;flashy_task.c: 442: data->noholdCount = 0;
 18169  0F2D  085E               	movf	flashy_Main@data,w
 18170  0F2E  0086               	movwf	6
 18171  0F2F  085F               	movf	flashy_Main@data+1,w
 18172  0F30  0087               	movwf	7
 18173  0F31  315C               	addfsr 1,28
 18174  0F32  3000               	movlw	0
 18175  0F33  3FC0               	movwi [0]fsr1
 18176  0F34  3FC1               	movwi [1]fsr1
 18177                           
 18178                           ;flashy_task.c: 443: }
 18179  0F35  2FC9               	goto	l7593
 18180  0F36                     l7563:	
 18181                           
 18182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18183                           ; Switch size 1, requested type "space"
 18184                           ; Number of cases is 1, Range of values is 0 to 0
 18185                           ; switch strategies available:
 18186                           ; Name         Instructions Cycles
 18187                           ; simple_byte            4     3 (average)
 18188                           ; direct_byte            8     6 (fixed)
 18189                           ; jumptable            260     6 (fixed)
 18190                           ;	Chosen strategy is simple_byte
 18191  0F36  085D               	movf	flashy_Main@buttonPressed+1,w
 18192  0F37  3A00               	xorlw	0	; case 0
 18193  0F38  1903               	skipnz
 18194  0F39  2F3B               	goto	l8569
 18195  0F3A  2EE5               	goto	l7561
 18196  0F3B                     l8569:	
 18197                           
 18198                           ; Switch size 1, requested type "space"
 18199                           ; Number of cases is 9, Range of values is 0 to 12
 18200                           ; switch strategies available:
 18201                           ; Name         Instructions Cycles
 18202                           ; simple_byte           28    15 (average)
 18203                           ; direct_byte           32     6 (fixed)
 18204                           ; jumptable            260     6 (fixed)
 18205                           ;	Chosen strategy is simple_byte
 18206  0F3B  085C               	movf	flashy_Main@buttonPressed,w
 18207  0F3C  3A00               	xorlw	0	; case 0
 18208  0F3D  1903               	skipnz
 18209  0F3E  2E92               	goto	l7557
 18210  0F3F  3A01               	xorlw	1	; case 1
 18211  0F40  1903               	skipnz
 18212  0F41  2DE3               	goto	l7513
 18213  0F42  3A03               	xorlw	3	; case 2
 18214  0F43  1903               	skipnz
 18215  0F44  2D61               	goto	l7483
 18216  0F45  3A07               	xorlw	7	; case 5
 18217  0F46  1903               	skipnz
 18218  0F47  2B5F               	goto	l7359
 18219  0F48  3A03               	xorlw	3	; case 6
 18220  0F49  1903               	skipnz
 18221  0F4A  2C43               	goto	l7415
 18222  0F4B  3A0E               	xorlw	14	; case 8
 18223  0F4C  1903               	skipnz
 18224  0F4D  2CB8               	goto	l7445
 18225  0F4E  3A01               	xorlw	1	; case 9
 18226  0F4F  1903               	skipnz
 18227  0F50  2AF2               	goto	l7333
 18228  0F51  3A03               	xorlw	3	; case 10
 18229  0F52  1903               	skipnz
 18230  0F53  2BCE               	goto	l7385
 18231  0F54  3A06               	xorlw	6	; case 12
 18232  0F55  1903               	skipnz
 18233  0F56  2A90               	goto	l7309
 18234  0F57  2EE5               	goto	l7561
 18235                           
 18236                           ;flashy_task.c: 446: switch (data->blaster_state) {
 18237  0F58  2FC9               	goto	l7593
 18238  0F59                     l7565:	
 18239                           ;flashy_task.c: 447: case FLASHY_BLASTER_SHOOTING_STATE:
 18240                           
 18241                           
 18242                           ;flashy_task.c: 449: if (data->blasterTickCount == 100) {
 18243  0F59  085E               	movf	flashy_Main@data,w
 18244  0F5A  0086               	movwf	6
 18245  0F5B  085F               	movf	flashy_Main@data+1,w
 18246  0F5C  0087               	movwf	7
 18247  0F5D  3147               	addfsr 1,7
 18248  0F5E  0016               	moviw fsr1++
 18249  0F5F  3A64               	xorlw	100
 18250  0F60  00D4               	movwf	??_flashy_Main
 18251  0F61  0016               	moviw fsr1++
 18252  0F62  04D4               	iorwf	??_flashy_Main,f
 18253  0F63  1D03               	btfss	3,2
 18254  0F64  2F70               	goto	l7571
 18255                           
 18256                           ;flashy_task.c: 450: nullifyBadge_irTxRegister(data->badge);
 18257  0F65  085E               	movf	flashy_Main@data,w
 18258  0F66  0086               	movwf	6
 18259  0F67  085F               	movf	flashy_Main@data+1,w
 18260  0F68  0087               	movwf	7
 18261  0F69  0801               	movf	1,w
 18262  0F6A  31A7  270E  3188   	fcall	_nullifyBadge_irTxRegister
 18263                           
 18264                           ;flashy_task.c: 451: nullifyBadge_irTxSet();
 18265  0F6D  31A6  2601  3188   	fcall	_nullifyBadge_irTxSet
 18266  0F70                     l7571:	
 18267                           
 18268                           ;flashy_task.c: 452: }
 18269                           ;flashy_task.c: 453: if (data->blasterTickCount == 100 - 1 ){
 18270  0F70  0020               	movlb	0	; select bank0
 18271  0F71  085E               	movf	flashy_Main@data,w
 18272  0F72  0086               	movwf	6
 18273  0F73  085F               	movf	flashy_Main@data+1,w
 18274  0F74  0087               	movwf	7
 18275  0F75  3147               	addfsr 1,7
 18276  0F76  0016               	moviw fsr1++
 18277  0F77  3A63               	xorlw	99
 18278  0F78  00D4               	movwf	??_flashy_Main
 18279  0F79  0016               	moviw fsr1++
 18280  0F7A  04D4               	iorwf	??_flashy_Main,f
 18281  0F7B  1D03               	btfss	3,2
 18282  0F7C  2F89               	goto	l7577
 18283                           
 18284                           ;flashy_task.c: 454: nullifyBadge_irTxClr();
 18285  0F7D  31A5  25FE  3188   	fcall	_nullifyBadge_irTxClr
 18286                           
 18287                           ;flashy_task.c: 455: nullifyBadge_irTxRelease(data->badge);
 18288  0F80  0020               	movlb	0	; select bank0
 18289  0F81  085E               	movf	flashy_Main@data,w
 18290  0F82  0086               	movwf	6
 18291  0F83  085F               	movf	flashy_Main@data+1,w
 18292  0F84  0087               	movwf	7
 18293  0F85  0801               	movf	1,w
 18294  0F86  31A6  269D  3188   	fcall	_nullifyBadge_irTxRelease
 18295  0F89                     l7577:	
 18296                           
 18297                           ;flashy_task.c: 456: }
 18298                           ;flashy_task.c: 457: if (data->blasterTickCount == 0){
 18299  0F89  0020               	movlb	0	; select bank0
 18300  0F8A  085E               	movf	flashy_Main@data,w
 18301  0F8B  0086               	movwf	6
 18302  0F8C  085F               	movf	flashy_Main@data+1,w
 18303  0F8D  0087               	movwf	7
 18304  0F8E  3147               	addfsr 1,7
 18305  0F8F  0016               	moviw fsr1++
 18306  0F90  0401               	iorwf	1,w
 18307  0F91  1D03               	btfss	3,2
 18308  0F92  2FBD               	goto	l7589
 18309                           
 18310                           ;flashy_task.c: 458: data->displayTickCount = 0;
 18311  0F93  085E               	movf	flashy_Main@data,w
 18312  0F94  0086               	movwf	6
 18313  0F95  085F               	movf	flashy_Main@data+1,w
 18314  0F96  0087               	movwf	7
 18315  0F97  3144               	addfsr 1,4
 18316  0F98  3000               	movlw	0
 18317  0F99  3FC0               	movwi [0]fsr1
 18318  0F9A  3FC1               	movwi [1]fsr1
 18319                           
 18320                           ;flashy_task.c: 459: data->delayTickCount = 5;
 18321  0F9B  085E               	movf	flashy_Main@data,w
 18322  0F9C  0086               	movwf	6
 18323  0F9D  085F               	movf	flashy_Main@data+1,w
 18324  0F9E  0087               	movwf	7
 18325  0F9F  3141               	addfsr 1,1
 18326  0FA0  3005               	movlw	5
 18327  0FA1  3FC0               	movwi [0]fsr1
 18328  0FA2  3000               	movlw	0
 18329  0FA3  3FC1               	movwi [1]fsr1
 18330                           
 18331                           ;flashy_task.c: 461: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 18332  0FA4  085E               	movf	flashy_Main@data,w
 18333  0FA5  0086               	movwf	6
 18334  0FA6  085F               	movf	flashy_Main@data+1,w
 18335  0FA7  0087               	movwf	7
 18336  0FA8  3143               	addfsr 1,3
 18337  0FA9  0181               	clrf	1
 18338                           
 18339                           ;flashy_task.c: 462: data->display_state = FLASHY_STATE_DISPLAY;
 18340  0FAA  085E               	movf	flashy_Main@data,w
 18341  0FAB  0086               	movwf	6
 18342  0FAC  085F               	movf	flashy_Main@data+1,w
 18343  0FAD  0087               	movwf	7
 18344  0FAE  3146               	addfsr 1,6
 18345  0FAF  0181               	clrf	1
 18346                           
 18347                           ;flashy_task.c: 463: data->blaster_state = FLASHY_BLASTER_IDLE_STATE;
 18348  0FB0  085E               	movf	flashy_Main@data,w
 18349  0FB1  3E09               	addlw	9
 18350  0FB2  00D4               	movwf	??_flashy_Main
 18351  0FB3  3000               	movlw	0
 18352  0FB4  3D5F               	addwfc	flashy_Main@data+1,w
 18353  0FB5  00D5               	movwf	??_flashy_Main+1
 18354  0FB6  0854               	movf	??_flashy_Main,w
 18355  0FB7  0086               	movwf	6
 18356  0FB8  0855               	movf	??_flashy_Main+1,w
 18357  0FB9  0087               	movwf	7
 18358  0FBA  3001               	movlw	1
 18359  0FBB  0081               	movwf	1
 18360                           
 18361                           ;flashy_task.c: 464: }
 18362  0FBC  2FD6               	goto	l7595
 18363  0FBD                     l7589:	
 18364                           
 18365                           ;flashy_task.c: 465: else {
 18366                           ;flashy_task.c: 466: data->blasterTickCount -= 1;
 18367  0FBD  085E               	movf	flashy_Main@data,w
 18368  0FBE  0086               	movwf	6
 18369  0FBF  085F               	movf	flashy_Main@data+1,w
 18370  0FC0  0087               	movwf	7
 18371  0FC1  3147               	addfsr 1,7
 18372  0FC2  3001               	movlw	1
 18373  0FC3  0281               	subwf	1,f
 18374  0FC4  3141               	addfsr 1,1
 18375  0FC5  3000               	movlw	0
 18376  0FC6  3B81               	subwfb	1,f
 18377  0FC7  317F               	addfsr 1,-1
 18378                           
 18379                           ;flashy_task.c: 471: }
 18380                           
 18381                           ;flashy_task.c: 470: break;
 18382                           
 18383                           ;flashy_task.c: 469: case FLASHY_BLASTER_IDLE_STATE:
 18384                           
 18385                           ;flashy_task.c: 467: }
 18386                           ;flashy_task.c: 468: break;
 18387  0FC8  2FD6               	goto	l7595
 18388  0FC9                     l7593:	
 18389  0FC9  085E               	movf	flashy_Main@data,w
 18390  0FCA  0086               	movwf	6
 18391  0FCB  085F               	movf	flashy_Main@data+1,w
 18392  0FCC  0087               	movwf	7
 18393  0FCD  3149               	addfsr 1,9
 18394  0FCE  0801               	movf	1,w
 18395                           
 18396                           ; Switch size 1, requested type "space"
 18397                           ; Number of cases is 2, Range of values is 0 to 1
 18398                           ; switch strategies available:
 18399                           ; Name         Instructions Cycles
 18400                           ; simple_byte            7     4 (average)
 18401                           ; direct_byte           10     6 (fixed)
 18402                           ; jumptable            260     6 (fixed)
 18403                           ;	Chosen strategy is simple_byte
 18404  0FCF  3A00               	xorlw	0	; case 0
 18405  0FD0  1903               	skipnz
 18406  0FD1  2F59               	goto	l7565
 18407  0FD2  3A01               	xorlw	1	; case 1
 18408  0FD3  1903               	skipnz
 18409  0FD4  2FD6               	goto	l7595
 18410  0FD5  2FD6               	goto	l7595
 18411  0FD6                     l7595:	
 18412                           
 18413                           ;flashy_task.c: 474: if (nullifyBadge_irGet() && (data->blaster_state != FLASHY_BLASTER_
      +                          SHOOTING_STATE)) {
 18414  0FD6  31A6  2604  3188   	fcall	_nullifyBadge_irGet
 18415  0FD9  3A00               	xorlw	0
 18416  0FDA  1903               	skipnz
 18417  0FDB  0008               	return
 18418  0FDC  0020               	movlb	0	; select bank0
 18419  0FDD  085E               	movf	flashy_Main@data,w
 18420  0FDE  0086               	movwf	6
 18421  0FDF  085F               	movf	flashy_Main@data+1,w
 18422  0FE0  0087               	movwf	7
 18423  0FE1  3149               	addfsr 1,9
 18424  0FE2  0801               	movf	1,w
 18425  0FE3  1903               	btfsc	3,2
 18426  0FE4  0008               	return
 18427                           
 18428                           ;flashy_task.c: 475: data->displayTickCount = 0;
 18429  0FE5  085E               	movf	flashy_Main@data,w
 18430  0FE6  0086               	movwf	6
 18431  0FE7  085F               	movf	flashy_Main@data+1,w
 18432  0FE8  0087               	movwf	7
 18433  0FE9  3144               	addfsr 1,4
 18434  0FEA  3000               	movlw	0
 18435  0FEB  3FC0               	movwi [0]fsr1
 18436  0FEC  3FC1               	movwi [1]fsr1
 18437                           
 18438                           ;flashy_task.c: 476: deaths += 1;
 18439  0FED  3001               	movlw	1
 18440  0FEE  0021               	movlb	1	; select bank1
 18441  0FEF  07A8               	addwf	_deaths^(0+128),f
 18442  0FF0  3000               	movlw	0
 18443  0FF1  3DA9               	addwfc	(_deaths+1)^(0+128),f
 18444                           
 18445                           ;flashy_task.c: 477: data->display_state = FLASHY_STATE_DISPLAY_SHOT;
 18446  0FF2  0020               	movlb	0	; select bank0
 18447  0FF3  085E               	movf	flashy_Main@data,w
 18448  0FF4  3E06               	addlw	6
 18449  0FF5  00D4               	movwf	??_flashy_Main
 18450  0FF6  3000               	movlw	0
 18451  0FF7  3D5F               	addwfc	flashy_Main@data+1,w
 18452  0FF8  00D5               	movwf	??_flashy_Main+1
 18453  0FF9  0854               	movf	??_flashy_Main,w
 18454  0FFA  0086               	movwf	6
 18455  0FFB  0855               	movf	??_flashy_Main+1,w
 18456  0FFC  0087               	movwf	7
 18457  0FFD  3003               	movlw	3
 18458  0FFE  0081               	movwf	1
 18459  0FFF  0008               	return
 18460  1000                     __end_of_flashy_Main:	
 18461                           
 18462                           	psect	swtext1
 18463  2093                     __pswtext1:	
 18464  2093                     S8567:	
 18465  2093  3189  2907         	ljmp	l7213
 18466  2095  3189  292C         	ljmp	l7223
 18467  2097  3189  2950         	ljmp	l7233
 18468  2099  3189  2968         	ljmp	l7241
 18469  209B  3189  299F         	ljmp	l7259
 18470                           
 18471                           	psect	text17
 18472  1443                     __ptext17:	
 18473 ;; *************** function _slot_Main *****************
 18474 ;; Defined at:
 18475 ;;		line 34 in file "slot_task.c"
 18476 ;; Parameters:    Size  Location     Type
 18477 ;;  taskData        2   50[BANK0 ] PTR void 
 18478 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18479 ;;		 -> flashy_TaskData(30), NULL(0), 
 18480 ;; Auto vars:     Size  Location     Type
 18481 ;;  data            2   54[BANK0 ] PTR struct t_slot_taskDa
 18482 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18483 ;;		 -> flashy_TaskData(30), NULL(0), 
 18484 ;;  buttonPresse    1   53[BANK0 ] unsigned char 
 18485 ;; Return value:  Size  Location     Type
 18486 ;;                  1    wreg      void 
 18487 ;; Registers used:
 18488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18489 ;; Tracked objects:
 18490 ;;		On entry : 0/0
 18491 ;;		On exit  : 0/0
 18492 ;;		Unchanged: 0/0
 18493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18494 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18495 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18496 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18497 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18498 ;;Total ram usage:        6 bytes
 18499 ;; Hardware stack levels used:    1
 18500 ;; Hardware stack levels required when called:   10
 18501 ;; This function calls:
 18502 ;;		_marquee
 18503 ;;		_nullifyBadge_buttonsGet
 18504 ;; This function is called by:
 18505 ;;		_main
 18506 ;;		_scheduler_TaskRun
 18507 ;; This function uses a non-reentrant model
 18508 ;;
 18509                           
 18510                           
 18511                           ;psect for function _slot_Main
 18512  1443                     _slot_Main:	
 18513                           
 18514                           ;slot_task.c: 35: struct t_slot_taskData *data = (struct t_slot_taskData *) taskData;
 18515                           
 18516                           ;incstack = 0
 18517                           ; Regs used in _slot_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18518  1443  0020               	movlb	0	; select bank0
 18519  1444  0853               	movf	slot_Main@taskData+1,w
 18520  1445  00D7               	movwf	slot_Main@data+1
 18521  1446  0852               	movf	slot_Main@taskData,w
 18522  1447  00D6               	movwf	slot_Main@data
 18523                           
 18524                           ;slot_task.c: 36: u8 buttonPressed;
 18525                           ;slot_task.c: 39: if ( currentTask != SLOT_TASK ){
 18526  1448  0021               	movlb	1	; select bank1
 18527  1449  0336               	decf	_currentTask^(0+128),w
 18528  144A  0437               	iorwf	(_currentTask+1)^(0+128),w
 18529  144B  1903               	btfsc	3,2
 18530  144C  2C78               	goto	l7809
 18531                           
 18532                           ;slot_task.c: 40: buttonPressed = nullifyBadge_buttonsGet();
 18533  144D  319A  2205         	fcall	_nullifyBadge_buttonsGet
 18534  144F  0020               	movlb	0	; select bank0
 18535  1450  00D4               	movwf	??_slot_Main
 18536  1451  0854               	movf	??_slot_Main,w
 18537  1452  00D5               	movwf	slot_Main@buttonPressed
 18538                           
 18539                           ;slot_task.c: 44: data->holdCountA = 1;
 18540                           
 18541                           ;slot_task.c: 42: default:
 18542                           
 18543                           ;slot_task.c: 41: switch (buttonPressed) {
 18544  1453  0856               	movf	slot_Main@data,w
 18545  1454  0086               	movwf	6
 18546  1455  0857               	movf	slot_Main@data+1,w
 18547  1456  0087               	movwf	7
 18548  1457  3144               	addfsr 1,4
 18549  1458  3001               	movlw	1
 18550  1459  3FC0               	movwi [0]fsr1
 18551  145A  3000               	movlw	0
 18552  145B  3FC1               	movwi [1]fsr1
 18553                           
 18554                           ;slot_task.c: 45: data->holdCountB = 1;
 18555  145C  0856               	movf	slot_Main@data,w
 18556  145D  0086               	movwf	6
 18557  145E  0857               	movf	slot_Main@data+1,w
 18558  145F  0087               	movwf	7
 18559  1460  3146               	addfsr 1,6
 18560  1461  3001               	movlw	1
 18561  1462  3FC0               	movwi [0]fsr1
 18562  1463  3000               	movlw	0
 18563  1464  3FC1               	movwi [1]fsr1
 18564                           
 18565                           ;slot_task.c: 46: data->holdCountX = 1;
 18566  1465  0856               	movf	slot_Main@data,w
 18567  1466  0086               	movwf	6
 18568  1467  0857               	movf	slot_Main@data+1,w
 18569  1468  0087               	movwf	7
 18570  1469  3148               	addfsr 1,8
 18571  146A  3001               	movlw	1
 18572  146B  3FC0               	movwi [0]fsr1
 18573  146C  3000               	movlw	0
 18574  146D  3FC1               	movwi [1]fsr1
 18575                           
 18576                           ;slot_task.c: 47: data->holdCountY = 1;
 18577  146E  0856               	movf	slot_Main@data,w
 18578  146F  0086               	movwf	6
 18579  1470  0857               	movf	slot_Main@data+1,w
 18580  1471  0087               	movwf	7
 18581  1472  314A               	addfsr 1,10
 18582  1473  3001               	movlw	1
 18583  1474  3FC0               	movwi [0]fsr1
 18584  1475  3000               	movlw	0
 18585  1476  3FC1               	movwi [1]fsr1
 18586                           
 18587                           ;slot_task.c: 49: }
 18588                           
 18589                           ;slot_task.c: 48: break;
 18590  1477  0008               	return
 18591  1478                     l7809:	
 18592                           ;slot_task.c: 50: return;
 18593                           
 18594                           
 18595                           ;slot_task.c: 51: }
 18596                           ;slot_task.c: 53: buttonPressed = nullifyBadge_buttonsGet();
 18597  1478  319A  2205  3194   	fcall	_nullifyBadge_buttonsGet
 18598  147B  0020               	movlb	0	; select bank0
 18599  147C  00D4               	movwf	??_slot_Main
 18600  147D  0854               	movf	??_slot_Main,w
 18601  147E  00D5               	movwf	slot_Main@buttonPressed
 18602                           
 18603                           ;slot_task.c: 56: marquee("$$$ ", data->displayTickCount);
 18604                           
 18605                           ;slot_task.c: 55: default:
 18606                           
 18607                           ;slot_task.c: 54: switch (buttonPressed) {
 18608  147F  3074               	movlw	low (STR_26| (0+32768))
 18609  1480  00BA               	movwf	marquee@string
 18610  1481  30A8               	movlw	high (STR_26| (0+32768))
 18611  1482  00BB               	movwf	marquee@string+1
 18612  1483  0856               	movf	slot_Main@data,w
 18613  1484  0086               	movwf	6
 18614  1485  0857               	movf	slot_Main@data+1,w
 18615  1486  0087               	movwf	7
 18616  1487  3142               	addfsr 1,2
 18617  1488  3F40               	moviw [0]fsr1
 18618  1489  00BC               	movwf	marquee@count
 18619  148A  3F41               	moviw [1]fsr1
 18620  148B  00BD               	movwf	marquee@count+1
 18621  148C  3193  2350  3194   	fcall	_marquee
 18622                           
 18623                           ;slot_task.c: 57: data->displayTickCount += 1;
 18624  148F  0020               	movlb	0	; select bank0
 18625  1490  0856               	movf	slot_Main@data,w
 18626  1491  0086               	movwf	6
 18627  1492  0857               	movf	slot_Main@data+1,w
 18628  1493  0087               	movwf	7
 18629  1494  3142               	addfsr 1,2
 18630  1495  3001               	movlw	1
 18631  1496  0781               	addwf	1,f
 18632  1497  3141               	addfsr 1,1
 18633  1498  1803               	skipnc
 18634  1499  0A81               	incf	1,f
 18635                           
 18636                           ;slot_task.c: 59: data->holdCountA = 0;
 18637  149A  0856               	movf	slot_Main@data,w
 18638  149B  0086               	movwf	6
 18639  149C  0857               	movf	slot_Main@data+1,w
 18640  149D  0087               	movwf	7
 18641  149E  3144               	addfsr 1,4
 18642  149F  3000               	movlw	0
 18643  14A0  3FC0               	movwi [0]fsr1
 18644  14A1  3FC1               	movwi [1]fsr1
 18645                           
 18646                           ;slot_task.c: 60: data->holdCountB = 0;
 18647  14A2  0856               	movf	slot_Main@data,w
 18648  14A3  0086               	movwf	6
 18649  14A4  0857               	movf	slot_Main@data+1,w
 18650  14A5  0087               	movwf	7
 18651  14A6  3146               	addfsr 1,6
 18652  14A7  3000               	movlw	0
 18653  14A8  3FC0               	movwi [0]fsr1
 18654  14A9  3FC1               	movwi [1]fsr1
 18655                           
 18656                           ;slot_task.c: 61: data->holdCountX = 0;
 18657  14AA  0856               	movf	slot_Main@data,w
 18658  14AB  0086               	movwf	6
 18659  14AC  0857               	movf	slot_Main@data+1,w
 18660  14AD  0087               	movwf	7
 18661  14AE  3148               	addfsr 1,8
 18662  14AF  3000               	movlw	0
 18663  14B0  3FC0               	movwi [0]fsr1
 18664  14B1  3FC1               	movwi [1]fsr1
 18665                           
 18666                           ;slot_task.c: 62: data->holdCountY = 0;
 18667  14B2  0856               	movf	slot_Main@data,w
 18668  14B3  0086               	movwf	6
 18669  14B4  0857               	movf	slot_Main@data+1,w
 18670  14B5  0087               	movwf	7
 18671  14B6  314A               	addfsr 1,10
 18672  14B7  3000               	movlw	0
 18673  14B8  3FC0               	movwi [0]fsr1
 18674  14B9  3FC1               	movwi [1]fsr1
 18675                           
 18676                           ;slot_task.c: 63: data->noholdCount += 1;
 18677  14BA  0856               	movf	slot_Main@data,w
 18678  14BB  0086               	movwf	6
 18679  14BC  0857               	movf	slot_Main@data+1,w
 18680  14BD  0087               	movwf	7
 18681  14BE  314C               	addfsr 1,12
 18682  14BF  3001               	movlw	1
 18683  14C0  0781               	addwf	1,f
 18684  14C1  3141               	addfsr 1,1
 18685  14C2  1803               	skipnc
 18686  14C3  0A81               	incf	1,f
 18687                           
 18688                           ;slot_task.c: 64: }
 18689  14C4  0008               	return
 18690  14C5                     __end_of_slot_Main:	
 18691                           
 18692                           	psect	text18
 18693  1A68                     __ptext18:	
 18694 ;; *************** function _secret_clear *****************
 18695 ;; Defined at:
 18696 ;;		line 178 in file "secret_task.c"
 18697 ;; Parameters:    Size  Location     Type
 18698 ;;  data            2    1[COMMON] PTR struct t_secret_task
 18699 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18700 ;;		 -> flashy_TaskData(30), NULL(0), 
 18701 ;; Auto vars:     Size  Location     Type
 18702 ;;		None
 18703 ;; Return value:  Size  Location     Type
 18704 ;;                  1    wreg      void 
 18705 ;; Registers used:
 18706 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18707 ;; Tracked objects:
 18708 ;;		On entry : 0/0
 18709 ;;		On exit  : 0/0
 18710 ;;		Unchanged: 0/0
 18711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18716 ;;Total ram usage:        2 bytes
 18717 ;; Hardware stack levels used:    1
 18718 ;; Hardware stack levels required when called:    4
 18719 ;; This function calls:
 18720 ;;		Nothing
 18721 ;; This function is called by:
 18722 ;;		_secret_Main
 18723 ;; This function uses a non-reentrant model
 18724 ;;
 18725                           
 18726                           
 18727                           ;psect for function _secret_clear
 18728  1A68                     _secret_clear:	
 18729                           
 18730                           ;secret_task.c: 180: data->delayTickCount = 300;
 18731                           
 18732                           ;incstack = 0
 18733                           ; Regs used in _secret_clear: [wreg+fsr1l+fsr1h+status,2+status,0]
 18734  1A68  0871               	movf	secret_clear@data,w
 18735  1A69  0086               	movwf	6
 18736  1A6A  0872               	movf	secret_clear@data+1,w
 18737  1A6B  0087               	movwf	7
 18738  1A6C  3142               	addfsr 1,2
 18739  1A6D  302C               	movlw	44
 18740  1A6E  3FC0               	movwi [0]fsr1
 18741  1A6F  3001               	movlw	1
 18742  1A70  3FC1               	movwi [1]fsr1
 18743                           
 18744                           ;secret_task.c: 181: data->holdCountA = 0;
 18745  1A71  0871               	movf	secret_clear@data,w
 18746  1A72  0086               	movwf	6
 18747  1A73  0872               	movf	secret_clear@data+1,w
 18748  1A74  0087               	movwf	7
 18749  1A75  3144               	addfsr 1,4
 18750  1A76  3000               	movlw	0
 18751  1A77  3FC0               	movwi [0]fsr1
 18752  1A78  3FC1               	movwi [1]fsr1
 18753                           
 18754                           ;secret_task.c: 182: data->holdCountB = 0;
 18755  1A79  0871               	movf	secret_clear@data,w
 18756  1A7A  0086               	movwf	6
 18757  1A7B  0872               	movf	secret_clear@data+1,w
 18758  1A7C  0087               	movwf	7
 18759  1A7D  3146               	addfsr 1,6
 18760  1A7E  3000               	movlw	0
 18761  1A7F  3FC0               	movwi [0]fsr1
 18762  1A80  3FC1               	movwi [1]fsr1
 18763                           
 18764                           ;secret_task.c: 183: data->holdCountX = 0;
 18765  1A81  0871               	movf	secret_clear@data,w
 18766  1A82  0086               	movwf	6
 18767  1A83  0872               	movf	secret_clear@data+1,w
 18768  1A84  0087               	movwf	7
 18769  1A85  3148               	addfsr 1,8
 18770  1A86  3000               	movlw	0
 18771  1A87  3FC0               	movwi [0]fsr1
 18772  1A88  3FC1               	movwi [1]fsr1
 18773                           
 18774                           ;secret_task.c: 184: data->holdCountY = 0;
 18775  1A89  0871               	movf	secret_clear@data,w
 18776  1A8A  0086               	movwf	6
 18777  1A8B  0872               	movf	secret_clear@data+1,w
 18778  1A8C  0087               	movwf	7
 18779  1A8D  314A               	addfsr 1,10
 18780  1A8E  3000               	movlw	0
 18781  1A8F  3FC0               	movwi [0]fsr1
 18782  1A90  3FC1               	movwi [1]fsr1
 18783                           
 18784                           ;secret_task.c: 185: data->noholdCount = 0;
 18785  1A91  0871               	movf	secret_clear@data,w
 18786  1A92  0086               	movwf	6
 18787  1A93  0872               	movf	secret_clear@data+1,w
 18788  1A94  0087               	movwf	7
 18789  1A95  314C               	addfsr 1,12
 18790  1A96  3000               	movlw	0
 18791  1A97  3FC0               	movwi [0]fsr1
 18792  1A98  3FC1               	movwi [1]fsr1
 18793  1A99  0008               	return
 18794  1A9A                     __end_of_secret_clear:	
 18795                           
 18796                           	psect	text19
 18797  155B                     __ptext19:	
 18798 ;; *************** function _secret_check *****************
 18799 ;; Defined at:
 18800 ;;		line 69 in file "secret_task.c"
 18801 ;; Parameters:    Size  Location     Type
 18802 ;;  data            2    7[COMMON] PTR struct t_secret_task
 18803 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18804 ;;		 -> flashy_TaskData(30), NULL(0), 
 18805 ;;  buttonPresse    1    9[COMMON] unsigned char 
 18806 ;; Auto vars:     Size  Location     Type
 18807 ;;  i               2    8[BANK0 ] unsigned int 
 18808 ;;  hit_counter     6    0        unsigned char [6]
 18809 ;;  currents_siz    2    5[BANK0 ] unsigned int 
 18810 ;;  size            2    3[BANK0 ] unsigned int 
 18811 ;;  inputs          1    7[BANK0 ] PTR unsigned char 
 18812 ;;		 -> secret_inputs.inputs(20), secret_inputs(25), 
 18813 ;; Return value:  Size  Location     Type
 18814 ;;                  1    wreg      unsigned char 
 18815 ;; Registers used:
 18816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18817 ;; Tracked objects:
 18818 ;;		On entry : 0/0
 18819 ;;		On exit  : 0/0
 18820 ;;		Unchanged: 0/0
 18821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18822 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18823 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18824 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18825 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18826 ;;Total ram usage:       13 bytes
 18827 ;; Hardware stack levels used:    1
 18828 ;; Hardware stack levels required when called:    5
 18829 ;; This function calls:
 18830 ;;		___bmul
 18831 ;;		_strlen
 18832 ;; This function is called by:
 18833 ;;		_secret_Main
 18834 ;; This function uses a non-reentrant model
 18835 ;;
 18836                           
 18837                           
 18838                           ;psect for function _secret_check
 18839  155B                     _secret_check:	
 18840                           
 18841                           ;secret_task.c: 70: u8 *inputs;
 18842                           ;secret_task.c: 71: u16 size = sizeof(secret_inputs) / sizeof(secret_inputs[0]);
 18843                           
 18844                           ;incstack = 0
 18845                           ; Regs used in _secret_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18846  155B  3001               	movlw	1
 18847  155C  0020               	movlb	0	; select bank0
 18848  155D  00A3               	movwf	secret_check@size
 18849  155E  3000               	movlw	0
 18850  155F  00A4               	movwf	secret_check@size+1
 18851                           
 18852                           ;secret_task.c: 72: u16 currents_size;
 18853                           ;secret_task.c: 73: char hit_counter[6];
 18854                           ;secret_task.c: 75: for (u16 i = 0; i < size; i++){
 18855  1560  01A8               	clrf	secret_check@i
 18856  1561  01A9               	clrf	secret_check@i+1
 18857  1562                     l6897:	
 18858  1562  0824               	movf	secret_check@size+1,w
 18859  1563  0229               	subwf	secret_check@i+1,w
 18860  1564  1D03               	skipz
 18861  1565  2D68               	goto	u4035
 18862  1566  0823               	movf	secret_check@size,w
 18863  1567  0228               	subwf	secret_check@i,w
 18864  1568                     u4035:	
 18865  1568  1803               	btfsc	3,0
 18866  1569  2E14               	goto	l6899
 18867                           
 18868                           ;secret_task.c: 76: inputs = secret_inputs[i].inputs;
 18869  156A  3019               	movlw	25
 18870  156B  00A0               	movwf	??_secret_check
 18871  156C  0820               	movf	??_secret_check,w
 18872  156D  00F1               	movwf	___bmul@multiplicand
 18873  156E  0828               	movf	secret_check@i,w
 18874  156F  3198  2000  3195   	fcall	___bmul
 18875  1572  3ECA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18876  1573  0020               	movlb	0	; select bank0
 18877  1574  00A1               	movwf	??_secret_check+1
 18878  1575  0821               	movf	??_secret_check+1,w
 18879  1576  00A7               	movwf	secret_check@inputs
 18880                           
 18881                           ;secret_task.c: 78: if (buttonPressed == inputs[secret_inputs[i].idx]){
 18882  1577  3019               	movlw	25
 18883  1578  00A0               	movwf	??_secret_check
 18884  1579  0820               	movf	??_secret_check,w
 18885  157A  00F1               	movwf	___bmul@multiplicand
 18886  157B  0828               	movf	secret_check@i,w
 18887  157C  3198  2000  3195   	fcall	___bmul
 18888  157F  3E14               	addlw	20
 18889  1580  3ECA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18890  1581  0086               	movwf	6
 18891  1582  3001               	movlw	1	; select bank3/4
 18892  1583  0087               	movwf	7
 18893  1584  0801               	movf	1,w
 18894  1585  0020               	movlb	0	; select bank0
 18895  1586  0727               	addwf	secret_check@inputs,w
 18896  1587  00A1               	movwf	??_secret_check+1
 18897  1588  0821               	movf	??_secret_check+1,w
 18898  1589  0086               	movwf	6
 18899  158A  3001               	movlw	1	; select bank2/3
 18900  158B  0087               	movwf	7
 18901  158C  0801               	movf	1,w
 18902  158D  0679               	xorwf	secret_check@buttonPressed,w
 18903  158E  1D03               	skipz
 18904  158F  2DFD               	goto	l6893
 18905                           
 18906                           ;secret_task.c: 79: currents_size = strlen((const char *)inputs);
 18907  1590  0827               	movf	secret_check@inputs,w
 18908  1591  00F1               	movwf	strlen@s
 18909  1592  3001               	movlw	1
 18910  1593  00F2               	movwf	strlen@s+1
 18911  1594  3198  20BA  3195   	fcall	_strlen
 18912  1597  0872               	movf	?_strlen+1,w
 18913  1598  0020               	movlb	0	; select bank0
 18914  1599  00A6               	movwf	secret_check@currents_size+1
 18915  159A  0871               	movf	?_strlen,w
 18916  159B  00A5               	movwf	secret_check@currents_size
 18917                           
 18918                           ;secret_task.c: 80: secret_inputs[i].idx++;
 18919  159C  3019               	movlw	25
 18920  159D  00A0               	movwf	??_secret_check
 18921  159E  0820               	movf	??_secret_check,w
 18922  159F  00F1               	movwf	___bmul@multiplicand
 18923  15A0  0828               	movf	secret_check@i,w
 18924  15A1  3198  2000  3195   	fcall	___bmul
 18925  15A4  3E14               	addlw	20
 18926  15A5  3ECA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18927  15A6  0086               	movwf	6
 18928  15A7  3001               	movlw	1	; select bank3/4
 18929  15A8  0087               	movwf	7
 18930  15A9  3001               	movlw	1
 18931  15AA  0781               	addwf	1,f
 18932  15AB  3141               	addfsr 1,1
 18933  15AC  1803               	skipnc
 18934  15AD  0A81               	incf	1,f
 18935                           
 18936                           ;secret_task.c: 82: if (secret_inputs[i].idx == currents_size) {
 18937  15AE  3019               	movlw	25
 18938  15AF  0020               	movlb	0	; select bank0
 18939  15B0  00A0               	movwf	??_secret_check
 18940  15B1  0820               	movf	??_secret_check,w
 18941  15B2  00F1               	movwf	___bmul@multiplicand
 18942  15B3  0828               	movf	secret_check@i,w
 18943  15B4  3198  2000  3195   	fcall	___bmul
 18944  15B7  3E14               	addlw	20
 18945  15B8  3ECA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18946  15B9  0086               	movwf	6
 18947  15BA  3001               	movlw	1	; select bank3/4
 18948  15BB  0087               	movwf	7
 18949  15BC  3F40               	moviw [0]fsr1
 18950  15BD  0020               	movlb	0	; select bank0
 18951  15BE  00A1               	movwf	??_secret_check+1
 18952  15BF  3F41               	moviw [1]fsr1
 18953  15C0  00A2               	movwf	??_secret_check+2
 18954  15C1  0826               	movf	secret_check@currents_size+1,w
 18955  15C2  0622               	xorwf	??_secret_check+2,w
 18956  15C3  1D03               	skipz
 18957  15C4  2DC7               	goto	u4025
 18958  15C5  0825               	movf	secret_check@currents_size,w
 18959  15C6  0621               	xorwf	??_secret_check+1,w
 18960  15C7                     u4025:	
 18961  15C7  1D03               	skipz
 18962  15C8  2E0E               	goto	l6895
 18963                           
 18964                           ;secret_task.c: 84: secret_inputs[i].idx = 0;
 18965  15C9  3019               	movlw	25
 18966  15CA  00A0               	movwf	??_secret_check
 18967  15CB  0820               	movf	??_secret_check,w
 18968  15CC  00F1               	movwf	___bmul@multiplicand
 18969  15CD  0828               	movf	secret_check@i,w
 18970  15CE  3198  2000  3195   	fcall	___bmul
 18971  15D1  3E14               	addlw	20
 18972  15D2  3ECA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18973  15D3  0086               	movwf	6
 18974  15D4  3001               	movlw	1	; select bank3/4
 18975  15D5  0087               	movwf	7
 18976  15D6  3000               	movlw	0
 18977  15D7  3FC0               	movwi [0]fsr1
 18978  15D8  3FC1               	movwi [1]fsr1
 18979                           
 18980                           ;secret_task.c: 87: *(secret_inputs[i].variable) = (u16) secret_inputs[i].value;
 18981  15D9  3019               	movlw	25
 18982  15DA  0020               	movlb	0	; select bank0
 18983  15DB  00A0               	movwf	??_secret_check
 18984  15DC  0820               	movf	??_secret_check,w
 18985  15DD  00F1               	movwf	___bmul@multiplicand
 18986  15DE  0828               	movf	secret_check@i,w
 18987  15DF  3198  2000  3195   	fcall	___bmul
 18988  15E2  3E17               	addlw	23
 18989  15E3  3ECA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18990  15E4  0086               	movwf	6
 18991  15E5  3001               	movlw	1	; select bank3/4
 18992  15E6  0087               	movwf	7
 18993  15E7  3019               	movlw	25
 18994  15E8  0020               	movlb	0	; select bank0
 18995  15E9  00A1               	movwf	??_secret_check+1
 18996  15EA  0821               	movf	??_secret_check+1,w
 18997  15EB  00F1               	movwf	___bmul@multiplicand
 18998  15EC  0828               	movf	secret_check@i,w
 18999  15ED  3198  2000         	fcall	___bmul
 19000  15EF  3E16               	addlw	22
 19001  15F0  3ECA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19002  15F1  0084               	movwf	4
 19003  15F2  3001               	movlw	1	; select bank3/4
 19004  15F3  0085               	movwf	5
 19005  15F4  0800               	movf	0,w
 19006  15F5  0084               	movwf	4
 19007  15F6  0185               	clrf	5
 19008  15F7  3F40               	moviw [0]fsr1
 19009  15F8  3F80               	movwi [0]fsr0
 19010  15F9  3F41               	moviw [1]fsr1
 19011  15FA  3F81               	movwi [1]fsr0
 19012                           
 19013                           ;secret_task.c: 89: return 1;
 19014  15FB  3001               	movlw	1
 19015  15FC  0008               	return
 19016  15FD                     l6893:	
 19017                           ;secret_task.c: 90: }
 19018                           ;secret_task.c: 91: } else {
 19019                           
 19020                           
 19021                           ;secret_task.c: 93: secret_inputs[i].idx = 0;
 19022  15FD  3019               	movlw	25
 19023  15FE  0020               	movlb	0	; select bank0
 19024  15FF  00A0               	movwf	??_secret_check
 19025  1600  0820               	movf	??_secret_check,w
 19026  1601  00F1               	movwf	___bmul@multiplicand
 19027  1602  0828               	movf	secret_check@i,w
 19028  1603  3198  2000  3195   	fcall	___bmul
 19029  1606  3E14               	addlw	20
 19030  1607  3ECA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 19031  1608  0086               	movwf	6
 19032  1609  3001               	movlw	1	; select bank3/4
 19033  160A  0087               	movwf	7
 19034  160B  3000               	movlw	0
 19035  160C  3FC0               	movwi [0]fsr1
 19036  160D  3FC1               	movwi [1]fsr1
 19037  160E                     l6895:	
 19038  160E  3001               	movlw	1
 19039  160F  0020               	movlb	0	; select bank0
 19040  1610  07A8               	addwf	secret_check@i,f
 19041  1611  3000               	movlw	0
 19042  1612  3DA9               	addwfc	secret_check@i+1,f
 19043  1613  2D62               	goto	l6897
 19044  1614                     l6899:	
 19045                           
 19046                           ;secret_task.c: 94: }
 19047                           ;secret_task.c: 95: }
 19048                           ;secret_task.c: 96: return 0;
 19049  1614  3000               	movlw	0
 19050  1615  0008               	return
 19051  1616                     __end_of_secret_check:	
 19052                           
 19053                           	psect	text20
 19054  1800                     __ptext20:	
 19055 ;; *************** function ___bmul *****************
 19056 ;; Defined at:
 19057 ;;		line 4 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul8.c"
 19058 ;; Parameters:    Size  Location     Type
 19059 ;;  multiplier      1    wreg     unsigned char 
 19060 ;;  multiplicand    1    1[COMMON] unsigned char 
 19061 ;; Auto vars:     Size  Location     Type
 19062 ;;  multiplier      1    4[COMMON] unsigned char 
 19063 ;;  product         1    3[COMMON] unsigned char 
 19064 ;; Return value:  Size  Location     Type
 19065 ;;                  1    wreg      unsigned char 
 19066 ;; Registers used:
 19067 ;;		wreg, status,2, status,0
 19068 ;; Tracked objects:
 19069 ;;		On entry : 0/0
 19070 ;;		On exit  : 0/0
 19071 ;;		Unchanged: 0/0
 19072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19077 ;;Total ram usage:        4 bytes
 19078 ;; Hardware stack levels used:    1
 19079 ;; Hardware stack levels required when called:    4
 19080 ;; This function calls:
 19081 ;;		Nothing
 19082 ;; This function is called by:
 19083 ;;		_secret_check
 19084 ;; This function uses a non-reentrant model
 19085 ;;
 19086                           
 19087                           
 19088                           ;psect for function ___bmul
 19089  1800                     ___bmul:	
 19090                           
 19091                           ;incstack = 0
 19092                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 19093                           ;___bmul@multiplier stored from wreg
 19094  1800  00F4               	movwf	___bmul@multiplier
 19095  1801  01F3               	clrf	___bmul@product
 19096  1802                     l6617:	
 19097  1802  1C74               	btfss	___bmul@multiplier,0
 19098  1803  2808               	goto	l6621
 19099  1804  0871               	movf	___bmul@multiplicand,w
 19100  1805  00F2               	movwf	??___bmul
 19101  1806  0872               	movf	??___bmul,w
 19102  1807  07F3               	addwf	___bmul@product,f
 19103  1808                     l6621:	
 19104  1808  1003               	clrc
 19105  1809  0DF1               	rlf	___bmul@multiplicand,f
 19106  180A  1003               	clrc
 19107  180B  0CF4               	rrf	___bmul@multiplier,f
 19108  180C  0874               	movf	___bmul@multiplier,w
 19109  180D  1D03               	btfss	3,2
 19110  180E  2802               	goto	l6617
 19111  180F  0873               	movf	___bmul@product,w
 19112  1810  0008               	return
 19113  1811                     __end_of___bmul:	
 19114                           
 19115                           	psect	text21
 19116  1B3E                     __ptext21:	
 19117 ;; *************** function _menu_run_option *****************
 19118 ;; Defined at:
 19119 ;;		line 177 in file "menu_task.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;  data            2   27[BANK0 ] PTR struct t_menu_taskDa
 19122 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19123 ;;		 -> flashy_TaskData(30), NULL(0), 
 19124 ;; Auto vars:     Size  Location     Type
 19125 ;;		None
 19126 ;; Return value:  Size  Location     Type
 19127 ;;                  1    wreg      void 
 19128 ;; Registers used:
 19129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19130 ;; Tracked objects:
 19131 ;;		On entry : 0/0
 19132 ;;		On exit  : 0/0
 19133 ;;		Unchanged: 0/0
 19134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19138 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19139 ;;Total ram usage:        2 bytes
 19140 ;; Hardware stack levels used:    1
 19141 ;; Hardware stack levels required when called:   11
 19142 ;; This function calls:
 19143 ;;		_menu_clear
 19144 ;; This function is called by:
 19145 ;;		_menu_Main
 19146 ;; This function uses a non-reentrant model
 19147 ;;
 19148                           
 19149                           
 19150                           ;psect for function _menu_run_option
 19151  1B3E                     _menu_run_option:	
 19152                           
 19153                           ;menu_task.c: 178: switch (menu_option_idx){
 19154                           
 19155                           ;incstack = 0
 19156                           ; Regs used in _menu_run_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19157  1B3E  2B66               	goto	l6727
 19158  1B3F                     l6713:	
 19159                           ;menu_task.c: 179: case 1:
 19160                           
 19161                           
 19162                           ;menu_task.c: 180: menu_clear(data);
 19163  1B3F  0020               	movlb	0	; select bank0
 19164  1B40  083C               	movf	menu_run_option@data+1,w
 19165  1B41  00BA               	movwf	menu_clear@data+1
 19166  1B42  083B               	movf	menu_run_option@data,w
 19167  1B43  00B9               	movwf	menu_clear@data
 19168  1B44  3188  2004         	fcall	_menu_clear
 19169                           
 19170                           ;menu_task.c: 181: currentTask = SLOT_TASK;
 19171  1B46  3001               	movlw	1
 19172  1B47  0021               	movlb	1	; select bank1
 19173  1B48  00B6               	movwf	_currentTask^(0+128)
 19174  1B49  3000               	movlw	0
 19175  1B4A  00B7               	movwf	(_currentTask^(0+128)+1)
 19176                           
 19177                           ;menu_task.c: 182: break;
 19178  1B4B  0008               	return
 19179  1B4C                     l6717:	
 19180                           ;menu_task.c: 183: case 2:
 19181                           
 19182                           
 19183                           ;menu_task.c: 184: menu_clear(data);
 19184  1B4C  0020               	movlb	0	; select bank0
 19185  1B4D  083C               	movf	menu_run_option@data+1,w
 19186  1B4E  00BA               	movwf	menu_clear@data+1
 19187  1B4F  083B               	movf	menu_run_option@data,w
 19188  1B50  00B9               	movwf	menu_clear@data
 19189  1B51  3188  2004         	fcall	_menu_clear
 19190                           
 19191                           ;menu_task.c: 185: currentTask = LOCKED_TASK;
 19192  1B53  3003               	movlw	3
 19193  1B54  0021               	movlb	1	; select bank1
 19194  1B55  00B6               	movwf	_currentTask^(0+128)
 19195  1B56  3000               	movlw	0
 19196  1B57  00B7               	movwf	(_currentTask^(0+128)+1)
 19197                           
 19198                           ;menu_task.c: 186: break;
 19199  1B58  0008               	return
 19200  1B59                     l6721:	
 19201                           ;menu_task.c: 187: case 3:
 19202                           
 19203                           
 19204                           ;menu_task.c: 188: menu_clear(data);
 19205  1B59  0020               	movlb	0	; select bank0
 19206  1B5A  083C               	movf	menu_run_option@data+1,w
 19207  1B5B  00BA               	movwf	menu_clear@data+1
 19208  1B5C  083B               	movf	menu_run_option@data,w
 19209  1B5D  00B9               	movwf	menu_clear@data
 19210  1B5E  3188  2004         	fcall	_menu_clear
 19211                           
 19212                           ;menu_task.c: 189: currentTask = FLASHY_TASK;
 19213  1B60  3002               	movlw	2
 19214  1B61  0021               	movlb	1	; select bank1
 19215  1B62  00B6               	movwf	_currentTask^(0+128)
 19216  1B63  3000               	movlw	0
 19217  1B64  00B7               	movwf	(_currentTask^(0+128)+1)
 19218                           
 19219                           ;menu_task.c: 191: }
 19220                           
 19221                           ;menu_task.c: 190: break;
 19222  1B65  0008               	return
 19223  1B66                     l6727:	
 19224                           
 19225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19226                           ; Switch size 1, requested type "space"
 19227                           ; Number of cases is 1, Range of values is 0 to 0
 19228                           ; switch strategies available:
 19229                           ; Name         Instructions Cycles
 19230                           ; simple_byte            4     3 (average)
 19231                           ; direct_byte            8     6 (fixed)
 19232                           ; jumptable            260     6 (fixed)
 19233                           ;	Chosen strategy is simple_byte
 19234  1B66  0021               	movlb	1	; select bank1
 19235  1B67  0835               	movf	(_menu_option_idx+1)^(0+128),w
 19236  1B68  3A00               	xorlw	0	; case 0
 19237  1B69  1903               	skipnz
 19238  1B6A  2B6C               	goto	l8571
 19239  1B6B  2B77               	goto	l976
 19240  1B6C                     l8571:	
 19241                           
 19242                           ; Switch size 1, requested type "space"
 19243                           ; Number of cases is 3, Range of values is 1 to 3
 19244                           ; switch strategies available:
 19245                           ; Name         Instructions Cycles
 19246                           ; simple_byte           10     6 (average)
 19247                           ; direct_byte           15     9 (fixed)
 19248                           ; jumptable            263     9 (fixed)
 19249                           ;	Chosen strategy is simple_byte
 19250  1B6C  0834               	movf	_menu_option_idx^(0+128),w
 19251  1B6D  3A01               	xorlw	1	; case 1
 19252  1B6E  1903               	skipnz
 19253  1B6F  2B3F               	goto	l6713
 19254  1B70  3A03               	xorlw	3	; case 2
 19255  1B71  1903               	skipnz
 19256  1B72  2B4C               	goto	l6717
 19257  1B73  3A01               	xorlw	1	; case 3
 19258  1B74  1903               	skipnz
 19259  1B75  2B59               	goto	l6721
 19260  1B76  2B77               	goto	l976
 19261  1B77                     l976:	
 19262  1B77  0008               	return
 19263  1B78                     __end_of_menu_run_option:	
 19264                           
 19265                           	psect	text22
 19266  0804                     __ptext22:	
 19267 ;; *************** function _menu_clear *****************
 19268 ;; Defined at:
 19269 ;;		line 194 in file "menu_task.c"
 19270 ;; Parameters:    Size  Location     Type
 19271 ;;  data            2   25[BANK0 ] PTR struct t_menu_taskDa
 19272 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19273 ;;		 -> flashy_TaskData(30), NULL(0), 
 19274 ;; Auto vars:     Size  Location     Type
 19275 ;;		None
 19276 ;; Return value:  Size  Location     Type
 19277 ;;                  1    wreg      void 
 19278 ;; Registers used:
 19279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19280 ;; Tracked objects:
 19281 ;;		On entry : 0/0
 19282 ;;		On exit  : 0/0
 19283 ;;		Unchanged: 0/0
 19284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19289 ;;Total ram usage:        2 bytes
 19290 ;; Hardware stack levels used:    1
 19291 ;; Hardware stack levels required when called:   10
 19292 ;; This function calls:
 19293 ;;		_nullifyBadge_segDisplayErase
 19294 ;;		_nullifyBadge_userLedsClr
 19295 ;; This function is called by:
 19296 ;;		_menu_Main
 19297 ;;		_menu_run_option
 19298 ;; This function uses a non-reentrant model
 19299 ;;
 19300                           
 19301                           
 19302                           ;psect for function _menu_clear
 19303  0804                     _menu_clear:	
 19304                           
 19305                           ;menu_task.c: 196: data->delayTickCount = 50;
 19306                           
 19307                           ;incstack = 0
 19308                           ; Regs used in _menu_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19309  0804  0020               	movlb	0	; select bank0
 19310  0805  0839               	movf	menu_clear@data,w
 19311  0806  0086               	movwf	6
 19312  0807  083A               	movf	menu_clear@data+1,w
 19313  0808  0087               	movwf	7
 19314  0809  3142               	addfsr 1,2
 19315  080A  3032               	movlw	50
 19316  080B  3FC0               	movwi [0]fsr1
 19317  080C  3000               	movlw	0
 19318  080D  3FC1               	movwi [1]fsr1
 19319                           
 19320                           ;menu_task.c: 197: data->holdCountA = 0;
 19321  080E  0839               	movf	menu_clear@data,w
 19322  080F  0086               	movwf	6
 19323  0810  083A               	movf	menu_clear@data+1,w
 19324  0811  0087               	movwf	7
 19325  0812  3144               	addfsr 1,4
 19326  0813  3000               	movlw	0
 19327  0814  3FC0               	movwi [0]fsr1
 19328  0815  3FC1               	movwi [1]fsr1
 19329                           
 19330                           ;menu_task.c: 198: data->holdCountB = 0;
 19331  0816  0839               	movf	menu_clear@data,w
 19332  0817  0086               	movwf	6
 19333  0818  083A               	movf	menu_clear@data+1,w
 19334  0819  0087               	movwf	7
 19335  081A  3146               	addfsr 1,6
 19336  081B  3000               	movlw	0
 19337  081C  3FC0               	movwi [0]fsr1
 19338  081D  3FC1               	movwi [1]fsr1
 19339                           
 19340                           ;menu_task.c: 199: data->holdCountX = 0;
 19341  081E  0839               	movf	menu_clear@data,w
 19342  081F  0086               	movwf	6
 19343  0820  083A               	movf	menu_clear@data+1,w
 19344  0821  0087               	movwf	7
 19345  0822  3148               	addfsr 1,8
 19346  0823  3000               	movlw	0
 19347  0824  3FC0               	movwi [0]fsr1
 19348  0825  3FC1               	movwi [1]fsr1
 19349                           
 19350                           ;menu_task.c: 200: data->holdCountY = 0;
 19351  0826  0839               	movf	menu_clear@data,w
 19352  0827  0086               	movwf	6
 19353  0828  083A               	movf	menu_clear@data+1,w
 19354  0829  0087               	movwf	7
 19355  082A  314A               	addfsr 1,10
 19356  082B  3000               	movlw	0
 19357  082C  3FC0               	movwi [0]fsr1
 19358  082D  3FC1               	movwi [1]fsr1
 19359                           
 19360                           ;menu_task.c: 201: data->noholdCount = 0;
 19361  082E  0839               	movf	menu_clear@data,w
 19362  082F  0086               	movwf	6
 19363  0830  083A               	movf	menu_clear@data+1,w
 19364  0831  0087               	movwf	7
 19365  0832  314C               	addfsr 1,12
 19366  0833  3000               	movlw	0
 19367  0834  3FC0               	movwi [0]fsr1
 19368  0835  3FC1               	movwi [1]fsr1
 19369                           
 19370                           ;menu_task.c: 203: menu_option_idx = 0;
 19371  0836  0021               	movlb	1	; select bank1
 19372  0837  01B4               	clrf	_menu_option_idx^(0+128)
 19373  0838  01B5               	clrf	(_menu_option_idx+1)^(0+128)
 19374                           
 19375                           ;menu_task.c: 206: nullifyBadge_userLedsClr(data->badge);
 19376  0839  0020               	movlb	0	; select bank0
 19377  083A  0839               	movf	menu_clear@data,w
 19378  083B  0086               	movwf	6
 19379  083C  083A               	movf	menu_clear@data+1,w
 19380  083D  0087               	movwf	7
 19381  083E  0801               	movf	1,w
 19382  083F  31A6  2621  3188   	fcall	_nullifyBadge_userLedsClr
 19383                           
 19384                           ;menu_task.c: 207: nullifyBadge_segDisplayErase(data->badge);
 19385  0842  0020               	movlb	0	; select bank0
 19386  0843  0839               	movf	menu_clear@data,w
 19387  0844  0086               	movwf	6
 19388  0845  083A               	movf	menu_clear@data+1,w
 19389  0846  0087               	movwf	7
 19390  0847  0801               	movf	1,w
 19391  0848  31A6  261B         	fcall	_nullifyBadge_segDisplayErase
 19392  084A  0008               	return
 19393  084B                     __end_of_menu_clear:	
 19394                           
 19395                           	psect	text23
 19396  1F9E                     __ptext23:	
 19397 ;; *************** function _menu_display_option *****************
 19398 ;; Defined at:
 19399 ;;		line 158 in file "menu_task.c"
 19400 ;; Parameters:    Size  Location     Type
 19401 ;;  data            2   44[BANK0 ] PTR struct t_menu_taskDa
 19402 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19403 ;;		 -> flashy_TaskData(30), NULL(0), 
 19404 ;; Auto vars:     Size  Location     Type
 19405 ;;  led             2   48[BANK0 ] unsigned int 
 19406 ;;  size            2   46[BANK0 ] unsigned int 
 19407 ;; Return value:  Size  Location     Type
 19408 ;;                  1    wreg      void 
 19409 ;; Registers used:
 19410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19411 ;; Tracked objects:
 19412 ;;		On entry : 0/0
 19413 ;;		On exit  : 0/0
 19414 ;;		Unchanged: 0/0
 19415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19417 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19419 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19420 ;;Total ram usage:        6 bytes
 19421 ;; Hardware stack levels used:    1
 19422 ;; Hardware stack levels required when called:   10
 19423 ;; This function calls:
 19424 ;;		___lwmod
 19425 ;;		_marquee
 19426 ;;		_nullifyBadge_segDisplayForceUpdate
 19427 ;;		_nullifyBadge_segDisplayPutStr
 19428 ;;		_nullifyBadge_userLedsSet
 19429 ;; This function is called by:
 19430 ;;		_menu_Main
 19431 ;; This function uses a non-reentrant model
 19432 ;;
 19433                           
 19434                           
 19435                           ;psect for function _menu_display_option
 19436  1F9E                     _menu_display_option:	
 19437                           
 19438                           ;menu_task.c: 159: u16 size = sizeof(menu_options_leds)/sizeof(menu_options_leds[0]);
 19439                           
 19440                           ;incstack = 0
 19441                           ; Regs used in _menu_display_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19442  1F9E  3005               	movlw	5
 19443  1F9F  0020               	movlb	0	; select bank0
 19444  1FA0  00CE               	movwf	menu_display_option@size
 19445  1FA1  3000               	movlw	0
 19446  1FA2  00CF               	movwf	menu_display_option@size+1
 19447                           
 19448                           ;menu_task.c: 160: u16 led = menu_options_leds[menu_option_idx % size];
 19449  1FA3  084F               	movf	menu_display_option@size+1,w
 19450  1FA4  00A1               	movwf	___lwmod@divisor+1
 19451  1FA5  084E               	movf	menu_display_option@size,w
 19452  1FA6  00A0               	movwf	___lwmod@divisor
 19453  1FA7  0021               	movlb	1	; select bank1
 19454  1FA8  0835               	movf	(_menu_option_idx+1)^(0+128),w
 19455  1FA9  0020               	movlb	0	; select bank0
 19456  1FAA  00A3               	movwf	___lwmod@dividend+1
 19457  1FAB  0021               	movlb	1	; select bank1
 19458  1FAC  0834               	movf	_menu_option_idx^(0+128),w
 19459  1FAD  0020               	movlb	0	; select bank0
 19460  1FAE  00A2               	movwf	___lwmod@dividend
 19461  1FAF  3199  21A9  319F   	fcall	___lwmod
 19462  1FB2  0020               	movlb	0	; select bank0
 19463  1FB3  0820               	movf	?___lwmod,w
 19464  1FB4  0709               	addwf	9,w
 19465  1FB5  3EC0               	addlw	(low (_menu_options_leds| (0+256)))& (0+255)
 19466  1FB6  0086               	movwf	6
 19467  1FB7  3001               	movlw	1	; select bank3/4
 19468  1FB8  0087               	movwf	7
 19469  1FB9  3F40               	moviw [0]fsr1
 19470  1FBA  00D0               	movwf	menu_display_option@led
 19471  1FBB  3F41               	moviw [1]fsr1
 19472  1FBC  00D1               	movwf	menu_display_option@led+1
 19473                           
 19474                           ;menu_task.c: 166: nullifyBadge_userLedsSet(data->badge, led);
 19475  1FBD  0851               	movf	menu_display_option@led+1,w
 19476  1FBE  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 19477  1FBF  0850               	movf	menu_display_option@led,w
 19478  1FC0  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 19479  1FC1  084C               	movf	menu_display_option@data,w
 19480  1FC2  0086               	movwf	6
 19481  1FC3  084D               	movf	menu_display_option@data+1,w
 19482  1FC4  0087               	movwf	7
 19483  1FC5  0801               	movf	1,w
 19484  1FC6  31A6  26E5  319F   	fcall	_nullifyBadge_userLedsSet
 19485                           
 19486                           ;menu_task.c: 168: if (menu_option_idx == 0){
 19487  1FC9  0021               	movlb	1	; select bank1
 19488  1FCA  0834               	movf	_menu_option_idx^(0+128),w
 19489  1FCB  0435               	iorwf	(_menu_option_idx+1)^(0+128),w
 19490  1FCC  1D03               	btfss	3,2
 19491  1FCD  2FE9               	goto	l6709
 19492                           
 19493                           ;menu_task.c: 169: nullifyBadge_segDisplayPutStr(data->badge, menu_option[menu_option_id
      +                          x]);
 19494  1FCE  3534               	lslf	_menu_option_idx^(0+128),w
 19495  1FCF  3E59               	addlw	(low (_menu_option| (0+256)))& (0+255)
 19496  1FD0  0086               	movwf	6
 19497  1FD1  3001               	movlw	1	; select bank2/3
 19498  1FD2  0087               	movwf	7
 19499  1FD3  3F40               	moviw [0]fsr1
 19500  1FD4  0020               	movlb	0	; select bank0
 19501  1FD5  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 19502  1FD6  3F41               	moviw [1]fsr1
 19503  1FD7  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 19504  1FD8  084C               	movf	menu_display_option@data,w
 19505  1FD9  0086               	movwf	6
 19506  1FDA  084D               	movf	menu_display_option@data+1,w
 19507  1FDB  0087               	movwf	7
 19508  1FDC  0801               	movf	1,w
 19509  1FDD  31A6  265D  319F   	fcall	_nullifyBadge_segDisplayPutStr
 19510                           
 19511                           ;menu_task.c: 170: nullifyBadge_segDisplayForceUpdate(data->badge);
 19512  1FE0  0020               	movlb	0	; select bank0
 19513  1FE1  084C               	movf	menu_display_option@data,w
 19514  1FE2  0086               	movwf	6
 19515  1FE3  084D               	movf	menu_display_option@data+1,w
 19516  1FE4  0087               	movwf	7
 19517  1FE5  0801               	movf	1,w
 19518  1FE6  31A6  2615         	fcall	_nullifyBadge_segDisplayForceUpdate
 19519                           
 19520                           ;menu_task.c: 171: }
 19521  1FE8  0008               	return
 19522  1FE9                     l6709:	
 19523                           
 19524                           ;menu_task.c: 172: else {
 19525                           ;menu_task.c: 173: marquee(menu_option[menu_option_idx], data->noholdCount);
 19526  1FE9  0021               	movlb	1	; select bank1
 19527  1FEA  3534               	lslf	_menu_option_idx^(0+128),w
 19528  1FEB  3E59               	addlw	(low (_menu_option| (0+256)))& (0+255)
 19529  1FEC  0086               	movwf	6
 19530  1FED  3001               	movlw	1	; select bank2/3
 19531  1FEE  0087               	movwf	7
 19532  1FEF  3F40               	moviw [0]fsr1
 19533  1FF0  0020               	movlb	0	; select bank0
 19534  1FF1  00BA               	movwf	marquee@string
 19535  1FF2  3F41               	moviw [1]fsr1
 19536  1FF3  00BB               	movwf	marquee@string+1
 19537  1FF4  084C               	movf	menu_display_option@data,w
 19538  1FF5  0086               	movwf	6
 19539  1FF6  084D               	movf	menu_display_option@data+1,w
 19540  1FF7  0087               	movwf	7
 19541  1FF8  314C               	addfsr 1,12
 19542  1FF9  3F40               	moviw [0]fsr1
 19543  1FFA  00BC               	movwf	marquee@count
 19544  1FFB  3F41               	moviw [1]fsr1
 19545  1FFC  00BD               	movwf	marquee@count+1
 19546  1FFD  3193  2350         	fcall	_marquee
 19547  1FFF  0008               	return
 19548  2000                     __end_of_menu_display_option:	
 19549                           
 19550                           	psect	text24
 19551  07ED                     __ptext24:	
 19552 ;; *************** function _locked_unlock_leds *****************
 19553 ;; Defined at:
 19554 ;;		line 36 in file "locked_task.c"
 19555 ;; Parameters:    Size  Location     Type
 19556 ;;		None
 19557 ;; Auto vars:     Size  Location     Type
 19558 ;;		None
 19559 ;; Return value:  Size  Location     Type
 19560 ;;                  2  1190[None  ] unsigned int 
 19561 ;; Registers used:
 19562 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19563 ;; Tracked objects:
 19564 ;;		On entry : 0/0
 19565 ;;		On exit  : 0/0
 19566 ;;		Unchanged: 0/0
 19567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19572 ;;Total ram usage:        2 bytes
 19573 ;; Hardware stack levels used:    1
 19574 ;; Hardware stack levels required when called:    4
 19575 ;; This function calls:
 19576 ;;		Nothing
 19577 ;; This function is called by:
 19578 ;;		_locked_Main
 19579 ;; This function uses a non-reentrant model
 19580 ;;
 19581                           
 19582                           
 19583                           ;psect for function _locked_unlock_leds
 19584  07ED                     _locked_unlock_leds:	
 19585                           
 19586                           ;locked_task.c: 37: locked_locking_leds_idx = 0;
 19587                           
 19588                           ;incstack = 0
 19589                           ; Regs used in _locked_unlock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19590  07ED  0021               	movlb	1	; select bank1
 19591  07EE  01A2               	clrf	_locked_locking_leds_idx^(0+128)
 19592  07EF  01A3               	clrf	(_locked_locking_leds_idx+1)^(0+128)
 19593                           
 19594                           ;locked_task.c: 38: locked_leds = locked_lock_base_leds | locked_locking_leds[locked_loc
      +                          king_leds_idx];
 19595  07F0  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19596  07F1  3EB4               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19597  07F2  0086               	movwf	6
 19598  07F3  3001               	movlw	1	; select bank3/4
 19599  07F4  0087               	movwf	7
 19600  07F5  3F40               	moviw [0]fsr1
 19601  07F6  00F1               	movwf	??_locked_unlock_leds
 19602  07F7  3F41               	moviw [1]fsr1
 19603  07F8  00F2               	movwf	??_locked_unlock_leds+1
 19604  07F9  0860               	movf	_locked_lock_base_leds^(0+128),w
 19605  07FA  0471               	iorwf	??_locked_unlock_leds,w
 19606  07FB  00A0               	movwf	_locked_leds^(0+128)
 19607  07FC  0861               	movf	(_locked_lock_base_leds+1)^(0+128),w
 19608  07FD  0472               	iorwf	??_locked_unlock_leds+1,w
 19609  07FE  00A1               	movwf	(_locked_leds+1)^(0+128)
 19610  07FF  0008               	return
 19611  0800                     __end_of_locked_unlock_leds:	
 19612                           ;locked_task.c: 39: return locked_leds;
 19613                           ;	Return value of _locked_unlock_leds is never used
 19614                           
 19615                           
 19616                           	psect	text25
 19617  1847                     __ptext25:	
 19618 ;; *************** function _locked_lock_leds *****************
 19619 ;; Defined at:
 19620 ;;		line 28 in file "locked_task.c"
 19621 ;; Parameters:    Size  Location     Type
 19622 ;;		None
 19623 ;; Auto vars:     Size  Location     Type
 19624 ;;  size            2    3[COMMON] unsigned int 
 19625 ;; Return value:  Size  Location     Type
 19626 ;;                  2  1187[None  ] unsigned int 
 19627 ;; Registers used:
 19628 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19629 ;; Tracked objects:
 19630 ;;		On entry : 0/0
 19631 ;;		On exit  : 0/0
 19632 ;;		Unchanged: 0/0
 19633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19638 ;;Total ram usage:        4 bytes
 19639 ;; Hardware stack levels used:    1
 19640 ;; Hardware stack levels required when called:    4
 19641 ;; This function calls:
 19642 ;;		Nothing
 19643 ;; This function is called by:
 19644 ;;		_locked_Init
 19645 ;;		_locked_Main
 19646 ;; This function uses a non-reentrant model
 19647 ;;
 19648                           
 19649                           
 19650                           ;psect for function _locked_lock_leds
 19651  1847                     _locked_lock_leds:	
 19652                           
 19653                           ;locked_task.c: 29: u16 size = sizeof(locked_locking_leds) / sizeof(locked_locking_leds[
      +                          0]);
 19654                           
 19655                           ;incstack = 0
 19656                           ; Regs used in _locked_lock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19657  1847  3006               	movlw	6
 19658  1848  00F3               	movwf	locked_lock_leds@size
 19659  1849  3000               	movlw	0
 19660  184A  00F4               	movwf	locked_lock_leds@size+1
 19661                           
 19662                           ;locked_task.c: 30: locked_locking_leds_idx = size - 1;
 19663  184B  0873               	movf	locked_lock_leds@size,w
 19664  184C  3EFF               	addlw	255
 19665  184D  0021               	movlb	1	; select bank1
 19666  184E  00A2               	movwf	_locked_locking_leds_idx^(0+128)
 19667  184F  30FF               	movlw	255
 19668  1850  3D74               	addwfc	locked_lock_leds@size+1,w
 19669  1851  00A3               	movwf	(_locked_locking_leds_idx+1)^(0+128)
 19670                           
 19671                           ;locked_task.c: 31: locked_leds = locked_lock_base_leds | locked_locking_leds[locked_loc
      +                          king_leds_idx];
 19672  1852  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19673  1853  3EB4               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19674  1854  0086               	movwf	6
 19675  1855  3001               	movlw	1	; select bank3/4
 19676  1856  0087               	movwf	7
 19677  1857  3F40               	moviw [0]fsr1
 19678  1858  00F1               	movwf	??_locked_lock_leds
 19679  1859  3F41               	moviw [1]fsr1
 19680  185A  00F2               	movwf	??_locked_lock_leds+1
 19681  185B  0860               	movf	_locked_lock_base_leds^(0+128),w
 19682  185C  0471               	iorwf	??_locked_lock_leds,w
 19683  185D  00A0               	movwf	_locked_leds^(0+128)
 19684  185E  0861               	movf	(_locked_lock_base_leds+1)^(0+128),w
 19685  185F  0472               	iorwf	??_locked_lock_leds+1,w
 19686  1860  00A1               	movwf	(_locked_leds+1)^(0+128)
 19687  1861  0008               	return
 19688  1862                     __end_of_locked_lock_leds:	
 19689                           ;locked_task.c: 32: return locked_leds;
 19690                           ;	Return value of _locked_lock_leds is never used
 19691                           
 19692                           
 19693                           	psect	text26
 19694  27E7                     __ptext26:	
 19695 ;; *************** function _locked_get_unlock_leds *****************
 19696 ;; Defined at:
 19697 ;;		line 53 in file "locked_task.c"
 19698 ;; Parameters:    Size  Location     Type
 19699 ;;		None
 19700 ;; Auto vars:     Size  Location     Type
 19701 ;;  leds            2    3[COMMON] unsigned int 
 19702 ;; Return value:  Size  Location     Type
 19703 ;;                  2    1[COMMON] unsigned int 
 19704 ;; Registers used:
 19705 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19706 ;; Tracked objects:
 19707 ;;		On entry : 0/0
 19708 ;;		On exit  : 0/0
 19709 ;;		Unchanged: 0/0
 19710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19714 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19715 ;;Total ram usage:        4 bytes
 19716 ;; Hardware stack levels used:    1
 19717 ;; Hardware stack levels required when called:    4
 19718 ;; This function calls:
 19719 ;;		Nothing
 19720 ;; This function is called by:
 19721 ;;		_locked_Main
 19722 ;; This function uses a non-reentrant model
 19723 ;;
 19724                           
 19725                           
 19726                           ;psect for function _locked_get_unlock_leds
 19727  27E7                     _locked_get_unlock_leds:	
 19728                           
 19729                           ;locked_task.c: 54: u16 leds = locked_locking_leds[locked_locking_leds_idx];
 19730                           
 19731                           ;incstack = 0
 19732                           ; Regs used in _locked_get_unlock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19733  27E7  0021               	movlb	1	; select bank1
 19734  27E8  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19735  27E9  3EB4               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19736  27EA  0086               	movwf	6
 19737  27EB  3001               	movlw	1	; select bank3/4
 19738  27EC  0087               	movwf	7
 19739  27ED  3F40               	moviw [0]fsr1
 19740  27EE  00F3               	movwf	locked_get_unlock_leds@leds
 19741  27EF  3F41               	moviw [1]fsr1
 19742  27F0  00F4               	movwf	locked_get_unlock_leds@leds+1
 19743                           
 19744                           ;locked_task.c: 57: if (locked_locking_leds_idx > 0){
 19745  27F1  0822               	movf	_locked_locking_leds_idx^(0+128),w
 19746  27F2  0423               	iorwf	(_locked_locking_leds_idx+1)^(0+128),w
 19747  27F3  1903               	btfsc	3,2
 19748  27F4  2FF9               	goto	l1198
 19749                           
 19750                           ;locked_task.c: 58: locked_locking_leds_idx -= 1;
 19751  27F5  3001               	movlw	1
 19752  27F6  02A2               	subwf	_locked_locking_leds_idx^(0+128),f
 19753  27F7  3000               	movlw	0
 19754  27F8  3BA3               	subwfb	(_locked_locking_leds_idx+1)^(0+128),f
 19755  27F9                     l1198:	
 19756                           
 19757                           ;locked_task.c: 59: }
 19758                           ;locked_task.c: 60: return locked_lock_base_leds | leds;
 19759  27F9  0873               	movf	locked_get_unlock_leds@leds,w
 19760  27FA  0460               	iorwf	_locked_lock_base_leds^(0+128),w
 19761  27FB  00F1               	movwf	?_locked_get_unlock_leds
 19762  27FC  0874               	movf	locked_get_unlock_leds@leds+1,w
 19763  27FD  0461               	iorwf	(_locked_lock_base_leds+1)^(0+128),w
 19764  27FE  00F2               	movwf	?_locked_get_unlock_leds+1
 19765  27FF  0008               	return
 19766  2800                     __end_of_locked_get_unlock_leds:	
 19767                           
 19768                           	psect	text27
 19769  195A                     __ptext27:	
 19770 ;; *************** function _locked_get_lock_leds *****************
 19771 ;; Defined at:
 19772 ;;		line 42 in file "locked_task.c"
 19773 ;; Parameters:    Size  Location     Type
 19774 ;;		None
 19775 ;; Auto vars:     Size  Location     Type
 19776 ;;  leds            2    7[COMMON] unsigned int 
 19777 ;;  size            2    5[COMMON] unsigned int 
 19778 ;; Return value:  Size  Location     Type
 19779 ;;                  2    1[COMMON] unsigned int 
 19780 ;; Registers used:
 19781 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19782 ;; Tracked objects:
 19783 ;;		On entry : 0/0
 19784 ;;		On exit  : 0/0
 19785 ;;		Unchanged: 0/0
 19786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19788 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19790 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19791 ;;Total ram usage:        8 bytes
 19792 ;; Hardware stack levels used:    1
 19793 ;; Hardware stack levels required when called:    4
 19794 ;; This function calls:
 19795 ;;		Nothing
 19796 ;; This function is called by:
 19797 ;;		_locked_Main
 19798 ;; This function uses a non-reentrant model
 19799 ;;
 19800                           
 19801                           
 19802                           ;psect for function _locked_get_lock_leds
 19803  195A                     _locked_get_lock_leds:	
 19804                           
 19805                           ;locked_task.c: 43: u16 size = sizeof(locked_locking_leds) / sizeof(locked_locking_leds[
      +                          0]);
 19806                           
 19807                           ;incstack = 0
 19808                           ; Regs used in _locked_get_lock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 19809  195A  3006               	movlw	6
 19810  195B  00F5               	movwf	locked_get_lock_leds@size
 19811  195C  3000               	movlw	0
 19812  195D  00F6               	movwf	locked_get_lock_leds@size+1
 19813                           
 19814                           ;locked_task.c: 44: u16 leds = locked_locking_leds[locked_locking_leds_idx];
 19815  195E  0021               	movlb	1	; select bank1
 19816  195F  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 19817  1960  3EB4               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 19818  1961  0086               	movwf	6
 19819  1962  3001               	movlw	1	; select bank3/4
 19820  1963  0087               	movwf	7
 19821  1964  3F40               	moviw [0]fsr1
 19822  1965  00F7               	movwf	locked_get_lock_leds@leds
 19823  1966  3F41               	moviw [1]fsr1
 19824  1967  00F8               	movwf	locked_get_lock_leds@leds+1
 19825                           
 19826                           ;locked_task.c: 47: if (locked_locking_leds_idx < size - 1){
 19827  1968  0875               	movf	locked_get_lock_leds@size,w
 19828  1969  3EFF               	addlw	255
 19829  196A  00F3               	movwf	??_locked_get_lock_leds
 19830  196B  30FF               	movlw	255
 19831  196C  3D76               	addwfc	locked_get_lock_leds@size+1,w
 19832  196D  00F4               	movwf	??_locked_get_lock_leds+1
 19833  196E  0874               	movf	??_locked_get_lock_leds+1,w
 19834  196F  0223               	subwf	(_locked_locking_leds_idx+1)^(0+128),w
 19835  1970  1D03               	skipz
 19836  1971  2974               	goto	u3995
 19837  1972  0873               	movf	??_locked_get_lock_leds,w
 19838  1973  0222               	subwf	_locked_locking_leds_idx^(0+128),w
 19839  1974                     u3995:	
 19840  1974  1803               	skipnc
 19841  1975  297A               	goto	l1194
 19842                           
 19843                           ;locked_task.c: 48: locked_locking_leds_idx += 1;
 19844  1976  3001               	movlw	1
 19845  1977  07A2               	addwf	_locked_locking_leds_idx^(0+128),f
 19846  1978  3000               	movlw	0
 19847  1979  3DA3               	addwfc	(_locked_locking_leds_idx+1)^(0+128),f
 19848  197A                     l1194:	
 19849                           
 19850                           ;locked_task.c: 49: }
 19851                           ;locked_task.c: 50: return leds;
 19852  197A  0878               	movf	locked_get_lock_leds@leds+1,w
 19853  197B  00F2               	movwf	?_locked_get_lock_leds+1
 19854  197C  0877               	movf	locked_get_lock_leds@leds,w
 19855  197D  00F1               	movwf	?_locked_get_lock_leds
 19856  197E  0008               	return
 19857  197F                     __end_of_locked_get_lock_leds:	
 19858                           
 19859                           	psect	text28
 19860  1C78                     __ptext28:	
 19861 ;; *************** function _locked_clear *****************
 19862 ;; Defined at:
 19863 ;;		line 184 in file "locked_task.c"
 19864 ;; Parameters:    Size  Location     Type
 19865 ;;  data            2   25[BANK0 ] PTR struct t_locked_task
 19866 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 19867 ;;		 -> flashy_TaskData(30), NULL(0), 
 19868 ;; Auto vars:     Size  Location     Type
 19869 ;;		None
 19870 ;; Return value:  Size  Location     Type
 19871 ;;                  1    wreg      void 
 19872 ;; Registers used:
 19873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19874 ;; Tracked objects:
 19875 ;;		On entry : 0/0
 19876 ;;		On exit  : 0/0
 19877 ;;		Unchanged: 0/0
 19878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19882 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19883 ;;Total ram usage:        2 bytes
 19884 ;; Hardware stack levels used:    1
 19885 ;; Hardware stack levels required when called:   10
 19886 ;; This function calls:
 19887 ;;		_nullifyBadge_segDisplayErase
 19888 ;;		_nullifyBadge_userLedsClr
 19889 ;; This function is called by:
 19890 ;;		_locked_Main
 19891 ;; This function uses a non-reentrant model
 19892 ;;
 19893                           
 19894                           
 19895                           ;psect for function _locked_clear
 19896  1C78                     _locked_clear:	
 19897                           
 19898                           ;locked_task.c: 186: data->delayTickCount = 0;
 19899                           
 19900                           ;incstack = 0
 19901                           ; Regs used in _locked_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19902  1C78  0020               	movlb	0	; select bank0
 19903  1C79  0839               	movf	locked_clear@data,w
 19904  1C7A  0086               	movwf	6
 19905  1C7B  083A               	movf	locked_clear@data+1,w
 19906  1C7C  0087               	movwf	7
 19907  1C7D  3141               	addfsr 1,1
 19908  1C7E  3000               	movlw	0
 19909  1C7F  3FC0               	movwi [0]fsr1
 19910  1C80  3FC1               	movwi [1]fsr1
 19911                           
 19912                           ;locked_task.c: 187: data->holdCountA = 0;
 19913  1C81  0839               	movf	locked_clear@data,w
 19914  1C82  0086               	movwf	6
 19915  1C83  083A               	movf	locked_clear@data+1,w
 19916  1C84  0087               	movwf	7
 19917  1C85  3143               	addfsr 1,3
 19918  1C86  3000               	movlw	0
 19919  1C87  3FC0               	movwi [0]fsr1
 19920  1C88  3FC1               	movwi [1]fsr1
 19921                           
 19922                           ;locked_task.c: 188: data->holdCountB = 0;
 19923  1C89  0839               	movf	locked_clear@data,w
 19924  1C8A  0086               	movwf	6
 19925  1C8B  083A               	movf	locked_clear@data+1,w
 19926  1C8C  0087               	movwf	7
 19927  1C8D  3145               	addfsr 1,5
 19928  1C8E  3000               	movlw	0
 19929  1C8F  3FC0               	movwi [0]fsr1
 19930  1C90  3FC1               	movwi [1]fsr1
 19931                           
 19932                           ;locked_task.c: 189: data->holdCountX = 0;
 19933  1C91  0839               	movf	locked_clear@data,w
 19934  1C92  0086               	movwf	6
 19935  1C93  083A               	movf	locked_clear@data+1,w
 19936  1C94  0087               	movwf	7
 19937  1C95  3147               	addfsr 1,7
 19938  1C96  3000               	movlw	0
 19939  1C97  3FC0               	movwi [0]fsr1
 19940  1C98  3FC1               	movwi [1]fsr1
 19941                           
 19942                           ;locked_task.c: 190: data->holdCountY = 0;
 19943  1C99  0839               	movf	locked_clear@data,w
 19944  1C9A  0086               	movwf	6
 19945  1C9B  083A               	movf	locked_clear@data+1,w
 19946  1C9C  0087               	movwf	7
 19947  1C9D  3149               	addfsr 1,9
 19948  1C9E  3000               	movlw	0
 19949  1C9F  3FC0               	movwi [0]fsr1
 19950  1CA0  3FC1               	movwi [1]fsr1
 19951                           
 19952                           ;locked_task.c: 191: data->noholdCount = 0;
 19953  1CA1  0839               	movf	locked_clear@data,w
 19954  1CA2  0086               	movwf	6
 19955  1CA3  083A               	movf	locked_clear@data+1,w
 19956  1CA4  0087               	movwf	7
 19957  1CA5  314B               	addfsr 1,11
 19958  1CA6  3000               	movlw	0
 19959  1CA7  3FC0               	movwi [0]fsr1
 19960  1CA8  3FC1               	movwi [1]fsr1
 19961                           
 19962                           ;locked_task.c: 194: nullifyBadge_userLedsClr(data->badge);
 19963  1CA9  0839               	movf	locked_clear@data,w
 19964  1CAA  0086               	movwf	6
 19965  1CAB  083A               	movf	locked_clear@data+1,w
 19966  1CAC  0087               	movwf	7
 19967  1CAD  0801               	movf	1,w
 19968  1CAE  31A6  2621  319C   	fcall	_nullifyBadge_userLedsClr
 19969                           
 19970                           ;locked_task.c: 195: nullifyBadge_segDisplayErase(data->badge);
 19971  1CB1  0020               	movlb	0	; select bank0
 19972  1CB2  0839               	movf	locked_clear@data,w
 19973  1CB3  0086               	movwf	6
 19974  1CB4  083A               	movf	locked_clear@data+1,w
 19975  1CB5  0087               	movwf	7
 19976  1CB6  0801               	movf	1,w
 19977  1CB7  31A6  261B         	fcall	_nullifyBadge_segDisplayErase
 19978  1CB9  0008               	return
 19979  1CBA                     __end_of_locked_clear:	
 19980                           
 19981                           	psect	text29
 19982  2621                     __ptext29:	
 19983 ;; *************** function _nullifyBadge_userLedsClr *****************
 19984 ;; Defined at:
 19985 ;;		line 177 in file "nullifyBadge.c"
 19986 ;; Parameters:    Size  Location     Type
 19987 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 19988 ;;		 -> badge_inst(18), 
 19989 ;; Auto vars:     Size  Location     Type
 19990 ;;  badge           1   11[BANK0 ] PTR struct t_nullifyBadg
 19991 ;;		 -> badge_inst(18), 
 19992 ;; Return value:  Size  Location     Type
 19993 ;;                  1    wreg      void 
 19994 ;; Registers used:
 19995 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19996 ;; Tracked objects:
 19997 ;;		On entry : 0/0
 19998 ;;		On exit  : 0/0
 19999 ;;		Unchanged: 0/0
 20000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20004 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20005 ;;Total ram usage:        1 bytes
 20006 ;; Hardware stack levels used:    1
 20007 ;; Hardware stack levels required when called:    8
 20008 ;; This function calls:
 20009 ;;		_displayL2_ClrUserLeds
 20010 ;; This function is called by:
 20011 ;;		_menu_Init
 20012 ;;		_menu_clear
 20013 ;;		_menu_Exit
 20014 ;;		_flashy_Init
 20015 ;;		_flashy_Exit
 20016 ;;		_locked_Init
 20017 ;;		_locked_clear
 20018 ;;		_locked_Exit
 20019 ;;		_secret_Init
 20020 ;;		_secret_Exit
 20021 ;;		_slot_Init
 20022 ;;		_slot_Exit
 20023 ;; This function uses a non-reentrant model
 20024 ;;
 20025                           
 20026                           
 20027                           ;psect for function _nullifyBadge_userLedsClr
 20028  2621                     _nullifyBadge_userLedsClr:	
 20029                           
 20030                           ;incstack = 0
 20031                           ; Regs used in _nullifyBadge_userLedsClr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 20032                           ;nullifyBadge_userLedsClr@badge stored from wreg
 20033  2621  0020               	movlb	0	; select bank0
 20034  2622  00AB               	movwf	nullifyBadge_userLedsClr@badge
 20035                           
 20036                           ;nullifyBadge.c: 178: displayL2_ClrUserLeds(&badge->display);
 20037  2623  082B               	movf	nullifyBadge_userLedsClr@badge,w
 20038  2624  31A7  2700         	fcall	_displayL2_ClrUserLeds
 20039  2626  0008               	return
 20040  2627                     __end_of_nullifyBadge_userLedsClr:	
 20041                           
 20042                           	psect	text30
 20043  2700                     __ptext30:	
 20044 ;; *************** function _displayL2_ClrUserLeds *****************
 20045 ;; Defined at:
 20046 ;;		line 94 in file "nullifyBadge_displayL2.c"
 20047 ;; Parameters:    Size  Location     Type
 20048 ;;  display         1    wreg     PTR struct t_nullifyDisp
 20049 ;;		 -> badge_inst(18), 
 20050 ;; Auto vars:     Size  Location     Type
 20051 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 20052 ;;		 -> badge_inst(18), 
 20053 ;; Return value:  Size  Location     Type
 20054 ;;                  1    wreg      void 
 20055 ;; Registers used:
 20056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20057 ;; Tracked objects:
 20058 ;;		On entry : 0/0
 20059 ;;		On exit  : 0/0
 20060 ;;		Unchanged: 0/0
 20061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20066 ;;Total ram usage:        1 bytes
 20067 ;; Hardware stack levels used:    1
 20068 ;; Hardware stack levels required when called:    7
 20069 ;; This function calls:
 20070 ;;		_displayL1_SetUserLed
 20071 ;;		_displayL1_Update
 20072 ;; This function is called by:
 20073 ;;		_nullifyBadge_userLedsClr
 20074 ;; This function uses a non-reentrant model
 20075 ;;
 20076                           
 20077                           
 20078                           ;psect for function _displayL2_ClrUserLeds
 20079  2700                     _displayL2_ClrUserLeds:	
 20080                           
 20081                           ;incstack = 0
 20082                           ; Regs used in _displayL2_ClrUserLeds: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20083                           ;displayL2_ClrUserLeds@display stored from wreg
 20084  2700  00FB               	movwf	displayL2_ClrUserLeds@display
 20085                           
 20086                           ;nullifyBadge_displayL2.c: 95: displayL1_SetUserLed(&display->display_l1, 0);
 20087  2701  3000               	movlw	0
 20088  2702  00F1               	movwf	displayL1_SetUserLed@userLedVect
 20089  2703  00F2               	movwf	displayL1_SetUserLed@userLedVect+1
 20090  2704  087B               	movf	displayL2_ClrUserLeds@display,w
 20091  2705  3E07               	addlw	7
 20092  2706  31A7  276D  31A7   	fcall	_displayL1_SetUserLed
 20093                           
 20094                           ;nullifyBadge_displayL2.c: 96: displayL1_Update(&display->display_l1);
 20095  2709  087B               	movf	displayL2_ClrUserLeds@display,w
 20096  270A  3E07               	addlw	7
 20097  270B  31A7  275C         	fcall	_displayL1_Update
 20098  270D  0008               	return
 20099  270E                     __end_of_displayL2_ClrUserLeds:	
 20100                           
 20101                           	psect	text31
 20102  261B                     __ptext31:	
 20103 ;; *************** function _nullifyBadge_segDisplayErase *****************
 20104 ;; Defined at:
 20105 ;;		line 123 in file "nullifyBadge.c"
 20106 ;; Parameters:    Size  Location     Type
 20107 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20108 ;;		 -> badge_inst(18), 
 20109 ;; Auto vars:     Size  Location     Type
 20110 ;;  badge           1   24[BANK0 ] PTR struct t_nullifyBadg
 20111 ;;		 -> badge_inst(18), 
 20112 ;; Return value:  Size  Location     Type
 20113 ;;                  1    wreg      void 
 20114 ;; Registers used:
 20115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20116 ;; Tracked objects:
 20117 ;;		On entry : 0/0
 20118 ;;		On exit  : 0/0
 20119 ;;		Unchanged: 0/0
 20120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20124 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20125 ;;Total ram usage:        1 bytes
 20126 ;; Hardware stack levels used:    1
 20127 ;; Hardware stack levels required when called:    9
 20128 ;; This function calls:
 20129 ;;		_displayL2_EraseSegDisplay
 20130 ;; This function is called by:
 20131 ;;		_menu_Init
 20132 ;;		_menu_clear
 20133 ;;		_menu_Exit
 20134 ;;		_flashy_Init
 20135 ;;		_flashy_Exit
 20136 ;;		_locked_Init
 20137 ;;		_locked_clear
 20138 ;;		_locked_Exit
 20139 ;;		_secret_Init
 20140 ;;		_secret_Exit
 20141 ;;		_slot_Init
 20142 ;;		_slot_Exit
 20143 ;;		_fadeDisplay_Init
 20144 ;;		_fadeDisplay_Exit
 20145 ;; This function uses a non-reentrant model
 20146 ;;
 20147                           
 20148                           
 20149                           ;psect for function _nullifyBadge_segDisplayErase
 20150  261B                     _nullifyBadge_segDisplayErase:	
 20151                           
 20152                           ;incstack = 0
 20153                           ; Regs used in _nullifyBadge_segDisplayErase: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20154                           ;nullifyBadge_segDisplayErase@badge stored from wreg
 20155  261B  0020               	movlb	0	; select bank0
 20156  261C  00B8               	movwf	nullifyBadge_segDisplayErase@badge
 20157                           
 20158                           ;nullifyBadge.c: 124: displayL2_EraseSegDisplay(&badge->display);
 20159  261D  0838               	movf	nullifyBadge_segDisplayErase@badge,w
 20160  261E  31A7  274C         	fcall	_displayL2_EraseSegDisplay
 20161  2620  0008               	return
 20162  2621                     __end_of_nullifyBadge_segDisplayErase:	
 20163                           
 20164                           	psect	text32
 20165  274C                     __ptext32:	
 20166 ;; *************** function _displayL2_EraseSegDisplay *****************
 20167 ;; Defined at:
 20168 ;;		line 83 in file "nullifyBadge_displayL2.c"
 20169 ;; Parameters:    Size  Location     Type
 20170 ;;  display         1    wreg     PTR struct t_nullifyDisp
 20171 ;;		 -> badge_inst(18), 
 20172 ;; Auto vars:     Size  Location     Type
 20173 ;;  display         1   23[BANK0 ] PTR struct t_nullifyDisp
 20174 ;;		 -> badge_inst(18), 
 20175 ;; Return value:  Size  Location     Type
 20176 ;;                  1    wreg      void 
 20177 ;; Registers used:
 20178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20179 ;; Tracked objects:
 20180 ;;		On entry : 0/0
 20181 ;;		On exit  : 0/0
 20182 ;;		Unchanged: 0/0
 20183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20187 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20188 ;;Total ram usage:        1 bytes
 20189 ;; Hardware stack levels used:    1
 20190 ;; Hardware stack levels required when called:    8
 20191 ;; This function calls:
 20192 ;;		_displayL1_Update
 20193 ;;		_displayL2_PutStr
 20194 ;; This function is called by:
 20195 ;;		_nullifyBadge_segDisplayErase
 20196 ;; This function uses a non-reentrant model
 20197 ;;
 20198                           
 20199                           
 20200                           ;psect for function _displayL2_EraseSegDisplay
 20201  274C                     _displayL2_EraseSegDisplay:	
 20202                           
 20203                           ;incstack = 0
 20204                           ; Regs used in _displayL2_EraseSegDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20205                           ;displayL2_EraseSegDisplay@display stored from wreg
 20206  274C  0020               	movlb	0	; select bank0
 20207  274D  00B7               	movwf	displayL2_EraseSegDisplay@display
 20208                           
 20209                           ;nullifyBadge_displayL2.c: 84: displayL2_PutStr(display, "    ");
 20210  274E  3072               	movlw	low ((STR_17+29)| (0+32768))
 20211  274F  00B0               	movwf	displayL2_PutStr@str
 20212  2750  30A0               	movlw	high ((STR_17+29)| (0+32768))
 20213  2751  00B1               	movwf	displayL2_PutStr@str+1
 20214  2752  0837               	movf	displayL2_EraseSegDisplay@display,w
 20215  2753  3199  217F  31A7   	fcall	_displayL2_PutStr
 20216                           
 20217                           ;nullifyBadge_displayL2.c: 85: displayL1_Update(&display->display_l1);
 20218  2756  0020               	movlb	0	; select bank0
 20219  2757  0837               	movf	displayL2_EraseSegDisplay@display,w
 20220  2758  3E07               	addlw	7
 20221  2759  31A7  275C         	fcall	_displayL1_Update
 20222  275B  0008               	return
 20223  275C                     __end_of_displayL2_EraseSegDisplay:	
 20224                           
 20225                           	psect	text33
 20226  061A                     __ptext33:	
 20227 ;; *************** function _sprintf *****************
 20228 ;; Defined at:
 20229 ;;		line 492 in file "/Applications/microchip/xc8/v1.42/sources/common/doprnt.c"
 20230 ;; Parameters:    Size  Location     Type
 20231 ;;  sp              1    wreg     PTR unsigned char 
 20232 ;;		 -> flashy_Main@hit_counter(6), 
 20233 ;;  f               2    4[BANK0 ] PTR const unsigned char 
 20234 ;;		 -> STR_21(4), 
 20235 ;; Auto vars:     Size  Location     Type
 20236 ;;  sp              1   17[BANK0 ] PTR unsigned char 
 20237 ;;		 -> flashy_Main@hit_counter(6), 
 20238 ;;  tmpval          4    0        struct .
 20239 ;;  width           2   18[BANK0 ] int 
 20240 ;;  val             2   15[BANK0 ] unsigned int 
 20241 ;;  cp              2    0        PTR const unsigned char 
 20242 ;;  len             2    0        unsigned int 
 20243 ;;  c               1   20[BANK0 ] char 
 20244 ;;  flag            1   14[BANK0 ] unsigned char 
 20245 ;;  prec            1   13[BANK0 ] char 
 20246 ;;  ap              1   12[BANK0 ] PTR void [1]
 20247 ;;		 -> ?_sprintf(2), 
 20248 ;; Return value:  Size  Location     Type
 20249 ;;                  2    4[BANK0 ] int 
 20250 ;; Registers used:
 20251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20252 ;; Tracked objects:
 20253 ;;		On entry : 0/0
 20254 ;;		On exit  : 0/0
 20255 ;;		Unchanged: 0/0
 20256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20258 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20259 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20260 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20261 ;;Total ram usage:       17 bytes
 20262 ;; Hardware stack levels used:    1
 20263 ;; Hardware stack levels required when called:    5
 20264 ;; This function calls:
 20265 ;;		___lwdiv
 20266 ;;		___lwmod
 20267 ;;		___wmul
 20268 ;;		_isdigit
 20269 ;; This function is called by:
 20270 ;;		_flashy_Main
 20271 ;; This function uses a non-reentrant model
 20272 ;;
 20273                           
 20274                           
 20275                           ;psect for function _sprintf
 20276  061A                     _sprintf:	
 20277                           
 20278                           ;incstack = 0
 20279                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20280                           ;sprintf@sp stored from wreg
 20281  061A  0020               	movlb	0	; select bank0
 20282  061B  00B1               	movwf	sprintf@sp
 20283                           
 20284                           ;doprnt.c: 494: va_list ap;
 20285                           ;doprnt.c: 499: signed char c;
 20286                           ;doprnt.c: 501: int width;
 20287                           ;doprnt.c: 506: signed char prec;
 20288                           ;doprnt.c: 508: unsigned char flag;
 20289                           ;doprnt.c: 523: union {
 20290                           ;doprnt.c: 524: unsigned long vd;
 20291                           ;doprnt.c: 525: double integ;
 20292                           ;doprnt.c: 526: } tmpval;
 20293                           ;doprnt.c: 528: unsigned int val;
 20294                           ;doprnt.c: 529: unsigned len;
 20295                           ;doprnt.c: 530: const char * cp;
 20296                           ;doprnt.c: 533: *ap = __va_start();
 20297  061C  3026               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 20298  061D  00A8               	movwf	??_sprintf
 20299  061E  0828               	movf	??_sprintf,w
 20300  061F  00AC               	movwf	sprintf@ap
 20301  0620                     l6827:	
 20302                           ;doprnt.c: 536: while(c = *f++) {
 20303                           
 20304  0620  0020               	movlb	0	; select bank0
 20305  0621  0825               	movf	sprintf@f+1,w
 20306  0622  00A9               	movwf	??_sprintf+1
 20307  0623  0824               	movf	sprintf@f,w
 20308  0624  00A8               	movwf	??_sprintf
 20309  0625  0AA4               	incf	sprintf@f,f
 20310  0626  1903               	skipnz
 20311  0627  0AA5               	incf	sprintf@f+1,f
 20312  0628  0828               	movf	??_sprintf,w
 20313  0629  0084               	movwf	4
 20314  062A  0829               	movf	??_sprintf+1,w
 20315  062B  0085               	movwf	5
 20316  062C  0800               	movf	0,w	;code access
 20317  062D  00AA               	movwf	??_sprintf+2
 20318  062E  082A               	movf	??_sprintf+2,w
 20319  062F  00B4               	movwf	sprintf@c
 20320  0630  0834               	movf	sprintf@c,w
 20321  0631  1903               	btfsc	3,2
 20322  0632  2F65               	goto	l6829
 20323                           
 20324                           ;doprnt.c: 538: if(c != '%')
 20325  0633  3025               	movlw	37
 20326  0634  0634               	xorwf	sprintf@c,w
 20327  0635  1903               	btfsc	3,2
 20328  0636  2E43               	goto	l6753
 20329                           
 20330                           ;doprnt.c: 540: {
 20331                           ;doprnt.c: 541: ((*sp++ = (c)));
 20332  0637  0834               	movf	sprintf@c,w
 20333  0638  00A8               	movwf	??_sprintf
 20334  0639  0831               	movf	sprintf@sp,w
 20335  063A  0086               	movwf	6
 20336  063B  0187               	clrf	7
 20337  063C  0828               	movf	??_sprintf,w
 20338  063D  0081               	movwf	1
 20339  063E  3001               	movlw	1
 20340  063F  00A8               	movwf	??_sprintf
 20341  0640  0828               	movf	??_sprintf,w
 20342  0641  07B1               	addwf	sprintf@sp,f
 20343                           
 20344                           ;doprnt.c: 542: continue;
 20345  0642  2E20               	goto	l6827
 20346  0643                     l6753:	
 20347                           
 20348                           ;doprnt.c: 543: }
 20349                           ;doprnt.c: 546: width = 0;
 20350  0643  01B2               	clrf	sprintf@width
 20351  0644  01B3               	clrf	sprintf@width+1
 20352                           
 20353                           ;doprnt.c: 548: flag = 0;
 20354  0645  01AE               	clrf	sprintf@flag
 20355                           
 20356                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 20357  0646  0824               	movf	sprintf@f,w
 20358  0647  0084               	movwf	4
 20359  0648  0825               	movf	sprintf@f+1,w
 20360  0649  0085               	movwf	5
 20361  064A  0800               	movf	0,w	;code access
 20362  064B  31A6  26F2  3186   	fcall	_isdigit
 20363  064E  1C03               	btfss	3,0
 20364  064F  2E81               	goto	l6769
 20365                           
 20366                           ;doprnt.c: 598: width = 0;
 20367  0650  0020               	movlb	0	; select bank0
 20368  0651  01B2               	clrf	sprintf@width
 20369  0652  01B3               	clrf	sprintf@width+1
 20370  0653                     l6759:	
 20371                           ;doprnt.c: 599: do {
 20372                           
 20373                           
 20374                           ;doprnt.c: 600: width *= 10;
 20375  0653  300A               	movlw	10
 20376  0654  00F1               	movwf	___wmul@multiplier
 20377  0655  3000               	movlw	0
 20378  0656  00F2               	movwf	___wmul@multiplier+1
 20379  0657  0020               	movlb	0	; select bank0
 20380  0658  0833               	movf	sprintf@width+1,w
 20381  0659  00F4               	movwf	___wmul@multiplicand+1
 20382  065A  0832               	movf	sprintf@width,w
 20383  065B  00F3               	movwf	___wmul@multiplicand
 20384  065C  3198  202C  3186   	fcall	___wmul
 20385  065F  0872               	movf	?___wmul+1,w
 20386  0660  0020               	movlb	0	; select bank0
 20387  0661  00B3               	movwf	sprintf@width+1
 20388  0662  0871               	movf	?___wmul,w
 20389  0663  00B2               	movwf	sprintf@width
 20390                           
 20391                           ;doprnt.c: 601: width += *f++ - '0';
 20392  0664  0824               	movf	sprintf@f,w
 20393  0665  0084               	movwf	4
 20394  0666  0825               	movf	sprintf@f+1,w
 20395  0667  0085               	movwf	5
 20396  0668  0800               	movf	0,w	;code access
 20397  0669  3ED0               	addlw	208
 20398  066A  00A8               	movwf	??_sprintf
 20399  066B  30FF               	movlw	255
 20400  066C  1803               	skipnc
 20401  066D  3000               	movlw	0
 20402  066E  00A9               	movwf	??_sprintf+1
 20403  066F  0828               	movf	??_sprintf,w
 20404  0670  07B2               	addwf	sprintf@width,f
 20405  0671  0829               	movf	??_sprintf+1,w
 20406  0672  3DB3               	addwfc	sprintf@width+1,f
 20407  0673  3001               	movlw	1
 20408  0674  07A4               	addwf	sprintf@f,f
 20409  0675  3000               	movlw	0
 20410  0676  3DA5               	addwfc	sprintf@f+1,f
 20411                           
 20412                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20413  0677  0824               	movf	sprintf@f,w
 20414  0678  0084               	movwf	4
 20415  0679  0825               	movf	sprintf@f+1,w
 20416  067A  0085               	movwf	5
 20417  067B  0800               	movf	0,w	;code access
 20418  067C  31A6  26F2  3186   	fcall	_isdigit
 20419  067F  1803               	btfsc	3,0
 20420  0680  2E53               	goto	l6759
 20421  0681                     l6769:	
 20422                           ;doprnt.c: 822: }
 20423                           
 20424                           ;doprnt.c: 813: continue;
 20425                           
 20426                           ;doprnt.c: 802: default:
 20427                           
 20428                           ;doprnt.c: 698: case 'i':
 20429                           ;doprnt.c: 699: break;
 20430                           
 20431                           ;doprnt.c: 697: case 'd':
 20432                           
 20433                           ;doprnt.c: 638: goto alldone;
 20434                           
 20435                           ;doprnt.c: 637: case 0:
 20436                           
 20437                           ;doprnt.c: 608: }
 20438                           ;doprnt.c: 635: switch(c = *f++) {
 20439                           
 20440  0681  0020               	movlb	0	; select bank0
 20441  0682  0825               	movf	sprintf@f+1,w
 20442  0683  00A9               	movwf	??_sprintf+1
 20443  0684  0824               	movf	sprintf@f,w
 20444  0685  00A8               	movwf	??_sprintf
 20445  0686  0AA4               	incf	sprintf@f,f
 20446  0687  1903               	skipnz
 20447  0688  0AA5               	incf	sprintf@f+1,f
 20448  0689  0828               	movf	??_sprintf,w
 20449  068A  0084               	movwf	4
 20450  068B  0829               	movf	??_sprintf+1,w
 20451  068C  0085               	movwf	5
 20452  068D  0800               	movf	0,w	;code access
 20453  068E  00B4               	movwf	sprintf@c
 20454                           
 20455                           ; Switch size 1, requested type "space"
 20456                           ; Number of cases is 3, Range of values is 0 to 105
 20457                           ; switch strategies available:
 20458                           ; Name         Instructions Cycles
 20459                           ; simple_byte           10     6 (average)
 20460                           ; direct_byte          218     6 (fixed)
 20461                           ; jumptable            260     6 (fixed)
 20462                           ;	Chosen strategy is simple_byte
 20463  068F  3A00               	xorlw	0	; case 0
 20464  0690  1903               	skipnz
 20465  0691  2F65               	goto	l6829
 20466  0692  3A64               	xorlw	100	; case 100
 20467  0693  1903               	skipnz
 20468  0694  2E99               	goto	l6771
 20469  0695  3A0D               	xorlw	13	; case 105
 20470  0696  1903               	skipnz
 20471  0697  2E99               	goto	l6771
 20472  0698  2E20               	goto	l6827
 20473  0699                     l6771:	
 20474                           
 20475                           ;doprnt.c: 1253: {
 20476                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 20477  0699  0020               	movlb	0	; select bank0
 20478  069A  082C               	movf	sprintf@ap,w
 20479  069B  0086               	movwf	6
 20480  069C  0187               	clrf	7
 20481  069D  3F40               	moviw [0]fsr1
 20482  069E  00AF               	movwf	sprintf@val
 20483  069F  3F41               	moviw [1]fsr1
 20484  06A0  00B0               	movwf	sprintf@val+1
 20485  06A1  3002               	movlw	2
 20486  06A2  00A8               	movwf	??_sprintf
 20487  06A3  0828               	movf	??_sprintf,w
 20488  06A4  07AC               	addwf	sprintf@ap,f
 20489                           
 20490                           ;doprnt.c: 1261: if((int)val < 0) {
 20491  06A5  1FB0               	btfss	sprintf@val+1,7
 20492  06A6  2EB0               	goto	l6781
 20493                           
 20494                           ;doprnt.c: 1262: flag |= 0x03;
 20495  06A7  3003               	movlw	3
 20496  06A8  00A8               	movwf	??_sprintf
 20497  06A9  0828               	movf	??_sprintf,w
 20498  06AA  04AE               	iorwf	sprintf@flag,f
 20499                           
 20500                           ;doprnt.c: 1263: val = -val;
 20501  06AB  09AF               	comf	sprintf@val,f
 20502  06AC  09B0               	comf	sprintf@val+1,f
 20503  06AD  0AAF               	incf	sprintf@val,f
 20504  06AE  1903               	skipnz
 20505  06AF  0AB0               	incf	sprintf@val+1,f
 20506  06B0                     l6781:	
 20507                           
 20508                           ;doprnt.c: 1264: }
 20509                           ;doprnt.c: 1266: }
 20510                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20511  06B0  01B4               	clrf	sprintf@c
 20512  06B1  0AB4               	incf	sprintf@c,f
 20513  06B2  3005               	movlw	5
 20514  06B3  0634               	xorwf	sprintf@c,w
 20515  06B4  1903               	btfsc	3,2
 20516  06B5  2ED5               	goto	l6793
 20517  06B6                     l6787:	
 20518                           
 20519                           ;doprnt.c: 1306: if(val < dpowers[c])
 20520  06B6  0834               	movf	sprintf@c,w
 20521  06B7  00A8               	movwf	??_sprintf
 20522  06B8  01A9               	clrf	??_sprintf+1
 20523  06B9  35A8               	lslf	??_sprintf,f
 20524  06BA  0DA9               	rlf	??_sprintf+1,f
 20525  06BB  3000               	movlw	low (_dpowers| (0+32768))
 20526  06BC  0728               	addwf	??_sprintf,w
 20527  06BD  0084               	movwf	4
 20528  06BE  30A0               	movlw	high (_dpowers| (0+32768))
 20529  06BF  3D29               	addwfc	??_sprintf+1,w
 20530  06C0  0085               	movwf	5
 20531  06C1  3F00               	moviw [0]fsr0
 20532  06C2  00AA               	movwf	??_sprintf+2
 20533  06C3  3F01               	moviw [1]fsr0
 20534  06C4  00AB               	movwf	??_sprintf+3
 20535  06C5  082B               	movf	??_sprintf+3,w
 20536  06C6  0230               	subwf	sprintf@val+1,w
 20537  06C7  1D03               	skipz
 20538  06C8  2ECB               	goto	u3895
 20539  06C9  082A               	movf	??_sprintf+2,w
 20540  06CA  022F               	subwf	sprintf@val,w
 20541  06CB                     u3895:	
 20542  06CB  1C03               	btfss	3,0
 20543  06CC  2ED5               	goto	l6793
 20544                           
 20545                           ;doprnt.c: 1307: break;
 20546  06CD  3001               	movlw	1
 20547  06CE  00A8               	movwf	??_sprintf
 20548  06CF  0828               	movf	??_sprintf,w
 20549  06D0  07B4               	addwf	sprintf@c,f
 20550  06D1  3005               	movlw	5
 20551  06D2  0634               	xorwf	sprintf@c,w
 20552  06D3  1D03               	btfss	3,2
 20553  06D4  2EB6               	goto	l6787
 20554  06D5                     l6793:	
 20555                           
 20556                           ;doprnt.c: 1345: if(width && flag & 0x03)
 20557  06D5  0832               	movf	sprintf@width,w
 20558  06D6  0433               	iorwf	sprintf@width+1,w
 20559  06D7  1903               	btfsc	3,2
 20560  06D8  2EE1               	goto	l1359
 20561  06D9  082E               	movf	sprintf@flag,w
 20562  06DA  3903               	andlw	3
 20563  06DB  1903               	btfsc	3,2
 20564  06DC  2EE1               	goto	l1359
 20565                           
 20566                           ;doprnt.c: 1346: width--;
 20567  06DD  30FF               	movlw	255
 20568  06DE  07B2               	addwf	sprintf@width,f
 20569  06DF  30FF               	movlw	255
 20570  06E0  3DB3               	addwfc	sprintf@width+1,f
 20571  06E1                     l1359:	
 20572                           
 20573                           ;doprnt.c: 1381: if(width > c)
 20574  06E1  0834               	movf	sprintf@c,w
 20575  06E2  00A8               	movwf	??_sprintf
 20576  06E3  01A9               	clrf	??_sprintf+1
 20577  06E4  1BA8               	btfsc	??_sprintf,7
 20578  06E5  03A9               	decf	??_sprintf+1,f
 20579  06E6  0829               	movf	??_sprintf+1,w
 20580  06E7  3A80               	xorlw	128
 20581  06E8  00AA               	movwf	??_sprintf+2
 20582  06E9  0833               	movf	sprintf@width+1,w
 20583  06EA  3A80               	xorlw	128
 20584  06EB  022A               	subwf	??_sprintf+2,w
 20585  06EC  1D03               	skipz
 20586  06ED  2EF0               	goto	u3935
 20587  06EE  0832               	movf	sprintf@width,w
 20588  06EF  0228               	subwf	??_sprintf,w
 20589  06F0                     u3935:	
 20590  06F0  1803               	skipnc
 20591  06F1  2EFD               	goto	l6801
 20592                           
 20593                           ;doprnt.c: 1382: width -= c;
 20594  06F2  0020               	movlb	0	; select bank0
 20595  06F3  0834               	movf	sprintf@c,w
 20596  06F4  00A8               	movwf	??_sprintf
 20597  06F5  01A9               	clrf	??_sprintf+1
 20598  06F6  1BA8               	btfsc	??_sprintf,7
 20599  06F7  03A9               	decf	??_sprintf+1,f
 20600  06F8  0828               	movf	??_sprintf,w
 20601  06F9  02B2               	subwf	sprintf@width,f
 20602  06FA  0829               	movf	??_sprintf+1,w
 20603  06FB  3BB3               	subwfb	sprintf@width+1,f
 20604  06FC  2F00               	goto	l6803
 20605  06FD                     l6801:	
 20606                           
 20607                           ;doprnt.c: 1383: else
 20608                           ;doprnt.c: 1384: width = 0;
 20609  06FD  0020               	movlb	0	; select bank0
 20610  06FE  01B2               	clrf	sprintf@width
 20611  06FF  01B3               	clrf	sprintf@width+1
 20612  0700                     l6803:	
 20613                           
 20614                           ;doprnt.c: 1422: {
 20615                           ;doprnt.c: 1424: if(width
 20616                           ;doprnt.c: 1428: )
 20617  0700  0832               	movf	sprintf@width,w
 20618  0701  0433               	iorwf	sprintf@width+1,w
 20619  0702  1903               	btfsc	3,2
 20620  0703  2F17               	goto	l6811
 20621  0704                     l6805:	
 20622                           ;doprnt.c: 1429: do
 20623                           
 20624                           
 20625                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 20626  0704  3020               	movlw	32
 20627  0705  00A8               	movwf	??_sprintf
 20628  0706  0831               	movf	sprintf@sp,w
 20629  0707  0086               	movwf	6
 20630  0708  0187               	clrf	7
 20631  0709  0828               	movf	??_sprintf,w
 20632  070A  0081               	movwf	1
 20633  070B  3001               	movlw	1
 20634  070C  00A8               	movwf	??_sprintf
 20635  070D  0828               	movf	??_sprintf,w
 20636  070E  07B1               	addwf	sprintf@sp,f
 20637                           
 20638                           ;doprnt.c: 1431: while(--width);
 20639  070F  30FF               	movlw	255
 20640  0710  07B2               	addwf	sprintf@width,f
 20641  0711  30FF               	movlw	255
 20642  0712  3DB3               	addwfc	sprintf@width+1,f
 20643  0713  0832               	movf	sprintf@width,w
 20644  0714  0433               	iorwf	sprintf@width+1,w
 20645  0715  1D03               	btfss	3,2
 20646  0716  2F04               	goto	l6805
 20647  0717                     l6811:	
 20648                           
 20649                           ;doprnt.c: 1438: if(flag & 0x03)
 20650  0717  082E               	movf	sprintf@flag,w
 20651  0718  3903               	andlw	3
 20652  0719  1903               	btfsc	3,2
 20653  071A  2F26               	goto	l6817
 20654                           
 20655                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 20656  071B  302D               	movlw	45
 20657  071C  00A8               	movwf	??_sprintf
 20658  071D  0831               	movf	sprintf@sp,w
 20659  071E  0086               	movwf	6
 20660  071F  0187               	clrf	7
 20661  0720  0828               	movf	??_sprintf,w
 20662  0721  0081               	movwf	1
 20663  0722  3001               	movlw	1
 20664  0723  00A8               	movwf	??_sprintf
 20665  0724  0828               	movf	??_sprintf,w
 20666  0725  07B1               	addwf	sprintf@sp,f
 20667  0726                     l6817:	
 20668                           
 20669                           ;doprnt.c: 1469: }
 20670                           ;doprnt.c: 1472: prec = c;
 20671  0726  0834               	movf	sprintf@c,w
 20672  0727  00A8               	movwf	??_sprintf
 20673  0728  0828               	movf	??_sprintf,w
 20674  0729  00AD               	movwf	sprintf@prec
 20675  072A                     l6825:	
 20676                           ;doprnt.c: 1474: while(prec--) {
 20677                           
 20678  072A  30FF               	movlw	255
 20679  072B  00A8               	movwf	??_sprintf
 20680  072C  0828               	movf	??_sprintf,w
 20681  072D  07AD               	addwf	sprintf@prec,f
 20682  072E  0A2D               	incf	sprintf@prec,w
 20683  072F  1903               	btfsc	3,2
 20684  0730  2E20               	goto	l6827
 20685                           
 20686                           ;doprnt.c: 1478: {
 20687                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 20688  0731  300A               	movlw	10
 20689  0732  00A0               	movwf	___lwmod@divisor
 20690  0733  3000               	movlw	0
 20691  0734  00A1               	movwf	___lwmod@divisor+1
 20692  0735  082D               	movf	sprintf@prec,w
 20693  0736  00A8               	movwf	??_sprintf
 20694  0737  01A9               	clrf	??_sprintf+1
 20695  0738  35A8               	lslf	??_sprintf,f
 20696  0739  0DA9               	rlf	??_sprintf+1,f
 20697  073A  3000               	movlw	low (_dpowers| (0+32768))
 20698  073B  0728               	addwf	??_sprintf,w
 20699  073C  0084               	movwf	4
 20700  073D  30A0               	movlw	high (_dpowers| (0+32768))
 20701  073E  3D29               	addwfc	??_sprintf+1,w
 20702  073F  0085               	movwf	5
 20703  0740  3F00               	moviw [0]fsr0
 20704  0741  00F1               	movwf	___lwdiv@divisor
 20705  0742  3F01               	moviw [1]fsr0
 20706  0743  00F2               	movwf	___lwdiv@divisor+1
 20707  0744  0830               	movf	sprintf@val+1,w
 20708  0745  00F4               	movwf	___lwdiv@dividend+1
 20709  0746  082F               	movf	sprintf@val,w
 20710  0747  00F3               	movwf	___lwdiv@dividend
 20711  0748  319A  229A  3186   	fcall	___lwdiv
 20712  074B  0872               	movf	?___lwdiv+1,w
 20713  074C  0020               	movlb	0	; select bank0
 20714  074D  00A3               	movwf	___lwmod@dividend+1
 20715  074E  0871               	movf	?___lwdiv,w
 20716  074F  00A2               	movwf	___lwmod@dividend
 20717  0750  3199  21A9  3186   	fcall	___lwmod
 20718  0753  0020               	movlb	0	; select bank0
 20719  0754  0820               	movf	?___lwmod,w
 20720  0755  3E30               	addlw	48
 20721  0756  00AA               	movwf	??_sprintf+2
 20722  0757  082A               	movf	??_sprintf+2,w
 20723  0758  00B4               	movwf	sprintf@c
 20724                           
 20725                           ;doprnt.c: 1523: }
 20726                           ;doprnt.c: 1524: ((*sp++ = (c)));
 20727  0759  0834               	movf	sprintf@c,w
 20728  075A  00A8               	movwf	??_sprintf
 20729  075B  0831               	movf	sprintf@sp,w
 20730  075C  0086               	movwf	6
 20731  075D  0187               	clrf	7
 20732  075E  0828               	movf	??_sprintf,w
 20733  075F  0081               	movwf	1
 20734  0760  3001               	movlw	1
 20735  0761  00A8               	movwf	??_sprintf
 20736  0762  0828               	movf	??_sprintf,w
 20737  0763  07B1               	addwf	sprintf@sp,f
 20738  0764  2F2A               	goto	l6825
 20739  0765                     l6829:	
 20740                           ;doprnt.c: 1525: }
 20741                           ;doprnt.c: 1533: }
 20742                           ;doprnt.c: 1535: alldone:
 20743                           
 20744                           
 20745                           ;doprnt.c: 1538: *sp = 0;
 20746  0765  0020               	movlb	0	; select bank0
 20747  0766  0831               	movf	sprintf@sp,w
 20748  0767  0086               	movwf	6
 20749  0768  0187               	clrf	7
 20750  0769  0181               	clrf	1
 20751  076A  0008               	return
 20752  076B                     __end_of_sprintf:	
 20753                           ;doprnt.c: 1540: return 0;
 20754                           ;	Return value of _sprintf is never used
 20755                           
 20756                           
 20757                           	psect	text34
 20758  26F2                     __ptext34:	
 20759 ;; *************** function _isdigit *****************
 20760 ;; Defined at:
 20761 ;;		line 8 in file "/Applications/microchip/xc8/v1.42/sources/common/isdigit.c"
 20762 ;; Parameters:    Size  Location     Type
 20763 ;;  c               1    wreg     unsigned char 
 20764 ;; Auto vars:     Size  Location     Type
 20765 ;;  c               1    2[COMMON] unsigned char 
 20766 ;; Return value:  Size  Location     Type
 20767 ;;		None               void
 20768 ;; Registers used:
 20769 ;;		wreg, status,2, status,0
 20770 ;; Tracked objects:
 20771 ;;		On entry : 0/0
 20772 ;;		On exit  : 0/0
 20773 ;;		Unchanged: 0/0
 20774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20779 ;;Total ram usage:        2 bytes
 20780 ;; Hardware stack levels used:    1
 20781 ;; Hardware stack levels required when called:    4
 20782 ;; This function calls:
 20783 ;;		Nothing
 20784 ;; This function is called by:
 20785 ;;		_sprintf
 20786 ;; This function uses a non-reentrant model
 20787 ;;
 20788                           
 20789                           
 20790                           ;psect for function _isdigit
 20791  26F2                     _isdigit:	
 20792                           
 20793                           ;incstack = 0
 20794                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 20795                           ;isdigit@c stored from wreg
 20796  26F2  00F2               	movwf	isdigit@c
 20797  26F3  01F1               	clrf	_isdigit$3105
 20798  26F4  303A               	movlw	58
 20799  26F5  0272               	subwf	isdigit@c,w
 20800  26F6  1803               	skipnc
 20801  26F7  2EFE               	goto	l6597
 20802  26F8  3030               	movlw	48
 20803  26F9  0272               	subwf	isdigit@c,w
 20804  26FA  1C03               	skipc
 20805  26FB  2EFE               	goto	l6597
 20806  26FC  01F1               	clrf	_isdigit$3105
 20807  26FD  0AF1               	incf	_isdigit$3105,f
 20808  26FE                     l6597:	
 20809  26FE  0C71               	rrf	_isdigit$3105,w
 20810  26FF  0008               	return
 20811  2700                     __end_of_isdigit:	
 20812                           
 20813                           	psect	text35
 20814  182C                     __ptext35:	
 20815 ;; *************** function ___wmul *****************
 20816 ;; Defined at:
 20817 ;;		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul16.c"
 20818 ;; Parameters:    Size  Location     Type
 20819 ;;  multiplier      2    1[COMMON] unsigned int 
 20820 ;;  multiplicand    2    3[COMMON] unsigned int 
 20821 ;; Auto vars:     Size  Location     Type
 20822 ;;  product         2    5[COMMON] unsigned int 
 20823 ;; Return value:  Size  Location     Type
 20824 ;;                  2    1[COMMON] unsigned int 
 20825 ;; Registers used:
 20826 ;;		wreg, status,2, status,0
 20827 ;; Tracked objects:
 20828 ;;		On entry : 0/0
 20829 ;;		On exit  : 0/0
 20830 ;;		Unchanged: 0/0
 20831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20835 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20836 ;;Total ram usage:        6 bytes
 20837 ;; Hardware stack levels used:    1
 20838 ;; Hardware stack levels required when called:    4
 20839 ;; This function calls:
 20840 ;;		Nothing
 20841 ;; This function is called by:
 20842 ;;		_secret_check
 20843 ;;		_sprintf
 20844 ;; This function uses a non-reentrant model
 20845 ;;
 20846                           
 20847                           
 20848                           ;psect for function ___wmul
 20849  182C                     ___wmul:	
 20850                           
 20851                           ;incstack = 0
 20852                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 20853  182C  01F5               	clrf	___wmul@product
 20854  182D  01F6               	clrf	___wmul@product+1
 20855  182E                     l6603:	
 20856  182E  1C71               	btfss	___wmul@multiplier,0
 20857  182F  2834               	goto	l1452
 20858  1830  0873               	movf	___wmul@multiplicand,w
 20859  1831  07F5               	addwf	___wmul@product,f
 20860  1832  0874               	movf	___wmul@multiplicand+1,w
 20861  1833  3DF6               	addwfc	___wmul@product+1,f
 20862  1834                     l1452:	
 20863  1834  3001               	movlw	1
 20864  1835                     u3715:	
 20865  1835  35F3               	lslf	___wmul@multiplicand,f
 20866  1836  0DF4               	rlf	___wmul@multiplicand+1,f
 20867  1837  0B89               	decfsz	9,f
 20868  1838  2835               	goto	u3715
 20869  1839  3001               	movlw	1
 20870  183A                     u3725:	
 20871  183A  36F2               	lsrf	___wmul@multiplier+1,f
 20872  183B  0CF1               	rrf	___wmul@multiplier,f
 20873  183C  0B89               	decfsz	9,f
 20874  183D  283A               	goto	u3725
 20875  183E  0871               	movf	___wmul@multiplier,w
 20876  183F  0472               	iorwf	___wmul@multiplier+1,w
 20877  1840  1D03               	btfss	3,2
 20878  1841  282E               	goto	l6603
 20879  1842  0876               	movf	___wmul@product+1,w
 20880  1843  00F2               	movwf	?___wmul+1
 20881  1844  0875               	movf	___wmul@product,w
 20882  1845  00F1               	movwf	?___wmul
 20883  1846  0008               	return
 20884  1847                     __end_of___wmul:	
 20885                           
 20886                           	psect	text36
 20887  2601                     __ptext36:	
 20888 ;; *************** function _nullifyBadge_irTxSet *****************
 20889 ;; Defined at:
 20890 ;;		line 264 in file "nullifyBadge.c"
 20891 ;; Parameters:    Size  Location     Type
 20892 ;;		None
 20893 ;; Auto vars:     Size  Location     Type
 20894 ;;		None
 20895 ;; Return value:  Size  Location     Type
 20896 ;;                  1    wreg      void 
 20897 ;; Registers used:
 20898 ;;		None
 20899 ;; Tracked objects:
 20900 ;;		On entry : 0/0
 20901 ;;		On exit  : 0/0
 20902 ;;		Unchanged: 0/0
 20903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20908 ;;Total ram usage:        0 bytes
 20909 ;; Hardware stack levels used:    1
 20910 ;; Hardware stack levels required when called:    4
 20911 ;; This function calls:
 20912 ;;		Nothing
 20913 ;; This function is called by:
 20914 ;;		_flashy_Main
 20915 ;; This function uses a non-reentrant model
 20916 ;;
 20917                           
 20918                           
 20919                           ;psect for function _nullifyBadge_irTxSet
 20920  2601                     _nullifyBadge_irTxSet:	
 20921                           
 20922                           ;incstack = 0
 20923                           ; Regs used in _nullifyBadge_irTxSet: []
 20924                           ;nullifyBadge.c: 266: do { LATBbits.LATB7 = 0; } while(0);
 20925  2601  0022               	movlb	2	; select bank2
 20926  2602  138D               	bcf	13,7	;volatile
 20927  2603  0008               	return
 20928  2604                     __end_of_nullifyBadge_irTxSet:	
 20929                           
 20930                           	psect	text37
 20931  269D                     __ptext37:	
 20932 ;; *************** function _nullifyBadge_irTxRelease *****************
 20933 ;; Defined at:
 20934 ;;		line 254 in file "nullifyBadge.c"
 20935 ;; Parameters:    Size  Location     Type
 20936 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20937 ;;		 -> badge_inst(18), 
 20938 ;; Auto vars:     Size  Location     Type
 20939 ;;  badge           1    2[COMMON] PTR struct t_nullifyBadg
 20940 ;;		 -> badge_inst(18), 
 20941 ;; Return value:  Size  Location     Type
 20942 ;;                  1    wreg      void 
 20943 ;; Registers used:
 20944 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20945 ;; Tracked objects:
 20946 ;;		On entry : 0/0
 20947 ;;		On exit  : 0/0
 20948 ;;		Unchanged: 0/0
 20949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20954 ;;Total ram usage:        2 bytes
 20955 ;; Hardware stack levels used:    1
 20956 ;; Hardware stack levels required when called:    4
 20957 ;; This function calls:
 20958 ;;		Nothing
 20959 ;; This function is called by:
 20960 ;;		_flashy_Main
 20961 ;; This function uses a non-reentrant model
 20962 ;;
 20963                           
 20964                           
 20965                           ;psect for function _nullifyBadge_irTxRelease
 20966  269D                     _nullifyBadge_irTxRelease:	
 20967                           
 20968                           ;incstack = 0
 20969                           ; Regs used in _nullifyBadge_irTxRelease: [wreg+fsr1l+fsr1h+status,2+status,0]
 20970                           ;nullifyBadge_irTxRelease@badge stored from wreg
 20971  269D  00F2               	movwf	nullifyBadge_irTxRelease@badge
 20972                           
 20973                           ;nullifyBadge.c: 255: badge->registeredHw &= ~(1 << HW_IR_TX);
 20974  269E  30FB               	movlw	251
 20975  269F  00F1               	movwf	??_nullifyBadge_irTxRelease
 20976  26A0  0872               	movf	nullifyBadge_irTxRelease@badge,w
 20977  26A1  3E11               	addlw	17
 20978  26A2  0086               	movwf	6
 20979  26A3  3001               	movlw	1	; select bank2/3
 20980  26A4  0087               	movwf	7
 20981  26A5  0871               	movf	??_nullifyBadge_irTxRelease,w
 20982  26A6  0581               	andwf	1,f
 20983  26A7  0008               	return
 20984  26A8                     __end_of_nullifyBadge_irTxRelease:	
 20985                           
 20986                           	psect	text38
 20987  270E                     __ptext38:	
 20988 ;; *************** function _nullifyBadge_irTxRegister *****************
 20989 ;; Defined at:
 20990 ;;		line 242 in file "nullifyBadge.c"
 20991 ;; Parameters:    Size  Location     Type
 20992 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20993 ;;		 -> badge_inst(18), 
 20994 ;; Auto vars:     Size  Location     Type
 20995 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 20996 ;;		 -> badge_inst(18), 
 20997 ;; Return value:  Size  Location     Type
 20998 ;;                  1    wreg      char 
 20999 ;; Registers used:
 21000 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21001 ;; Tracked objects:
 21002 ;;		On entry : 0/0
 21003 ;;		On exit  : 0/0
 21004 ;;		Unchanged: 0/0
 21005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21010 ;;Total ram usage:        1 bytes
 21011 ;; Hardware stack levels used:    1
 21012 ;; Hardware stack levels required when called:    4
 21013 ;; This function calls:
 21014 ;;		Nothing
 21015 ;; This function is called by:
 21016 ;;		_flashy_Main
 21017 ;; This function uses a non-reentrant model
 21018 ;;
 21019                           
 21020                           
 21021                           ;psect for function _nullifyBadge_irTxRegister
 21022  270E                     _nullifyBadge_irTxRegister:	
 21023                           
 21024                           ;incstack = 0
 21025                           ; Regs used in _nullifyBadge_irTxRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 21026                           ;nullifyBadge_irTxRegister@badge stored from wreg
 21027  270E  00F1               	movwf	nullifyBadge_irTxRegister@badge
 21028                           
 21029                           ;nullifyBadge.c: 243: if (badge->registeredHw & HW_IR_TX) {
 21030  270F  0871               	movf	nullifyBadge_irTxRegister@badge,w
 21031  2710  3E11               	addlw	17
 21032  2711  0086               	movwf	6
 21033  2712  3001               	movlw	1	; select bank2/3
 21034  2713  0087               	movwf	7
 21035  2714  1881               	btfsc	1,1
 21036  2715  0008               	return
 21037                           
 21038                           ;nullifyBadge.c: 246: else {
 21039                           ;nullifyBadge.c: 247: badge->registeredHw |= (1 << HW_IR_TX);
 21040                           
 21041                           ;nullifyBadge.c: 245: }
 21042                           
 21043                           ;nullifyBadge.c: 244: return -1;
 21044                           ;	Return value of _nullifyBadge_irTxRegister is never used
 21045  2716  0871               	movf	nullifyBadge_irTxRegister@badge,w
 21046  2717  3E11               	addlw	17
 21047  2718  0086               	movwf	6
 21048  2719  3001               	movlw	1	; select bank2/3
 21049  271A  0087               	movwf	7
 21050  271B  1501               	bsf	1,2
 21051                           
 21052                           ;nullifyBadge.c: 248: return 0;
 21053                           ;	Return value of _nullifyBadge_irTxRegister is never used
 21054  271C  0008               	return
 21055  271D                     __end_of_nullifyBadge_irTxRegister:	
 21056                           
 21057                           	psect	text39
 21058  25FE                     __ptext39:	
 21059 ;; *************** function _nullifyBadge_irTxClr *****************
 21060 ;; Defined at:
 21061 ;;		line 270 in file "nullifyBadge.c"
 21062 ;; Parameters:    Size  Location     Type
 21063 ;;		None
 21064 ;; Auto vars:     Size  Location     Type
 21065 ;;		None
 21066 ;; Return value:  Size  Location     Type
 21067 ;;                  1    wreg      void 
 21068 ;; Registers used:
 21069 ;;		None
 21070 ;; Tracked objects:
 21071 ;;		On entry : 0/0
 21072 ;;		On exit  : 0/0
 21073 ;;		Unchanged: 0/0
 21074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21079 ;;Total ram usage:        0 bytes
 21080 ;; Hardware stack levels used:    1
 21081 ;; Hardware stack levels required when called:    4
 21082 ;; This function calls:
 21083 ;;		Nothing
 21084 ;; This function is called by:
 21085 ;;		_flashy_Main
 21086 ;; This function uses a non-reentrant model
 21087 ;;
 21088                           
 21089                           
 21090                           ;psect for function _nullifyBadge_irTxClr
 21091  25FE                     _nullifyBadge_irTxClr:	
 21092                           
 21093                           ;incstack = 0
 21094                           ; Regs used in _nullifyBadge_irTxClr: []
 21095                           ;nullifyBadge.c: 272: do { LATBbits.LATB7 = 1; } while(0);
 21096  25FE  0022               	movlb	2	; select bank2
 21097  25FF  178D               	bsf	13,7	;volatile
 21098  2600  0008               	return
 21099  2601                     __end_of_nullifyBadge_irTxClr:	
 21100                           
 21101                           	psect	text40
 21102  2604                     __ptext40:	
 21103 ;; *************** function _nullifyBadge_irGet *****************
 21104 ;; Defined at:
 21105 ;;		line 232 in file "nullifyBadge.c"
 21106 ;; Parameters:    Size  Location     Type
 21107 ;;		None
 21108 ;; Auto vars:     Size  Location     Type
 21109 ;;		None
 21110 ;; Return value:  Size  Location     Type
 21111 ;;                  1    wreg      unsigned char 
 21112 ;; Registers used:
 21113 ;;		wreg, status,2, status,0
 21114 ;; Tracked objects:
 21115 ;;		On entry : 0/0
 21116 ;;		On exit  : 0/0
 21117 ;;		Unchanged: 0/0
 21118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21123 ;;Total ram usage:        0 bytes
 21124 ;; Hardware stack levels used:    1
 21125 ;; Hardware stack levels required when called:    4
 21126 ;; This function calls:
 21127 ;;		Nothing
 21128 ;; This function is called by:
 21129 ;;		_flashy_Main
 21130 ;; This function uses a non-reentrant model
 21131 ;;
 21132                           
 21133                           
 21134                           ;psect for function _nullifyBadge_irGet
 21135  2604                     _nullifyBadge_irGet:	
 21136                           
 21137                           ;nullifyBadge.c: 233: return PORTBbits.RB5;
 21138                           
 21139                           ;incstack = 0
 21140                           ; Regs used in _nullifyBadge_irGet: [wreg+status,2+status,0]
 21141  2604  0020               	movlb	0	; select bank0
 21142  2605  0E0D               	swapf	13,w	;volatile
 21143  2606  0C89               	rrf	9,f
 21144  2607  3901               	andlw	1
 21145  2608  0008               	return
 21146  2609                     __end_of_nullifyBadge_irGet:	
 21147                           
 21148                           	psect	text41
 21149  1A05                     __ptext41:	
 21150 ;; *************** function _nullifyBadge_buttonsGet *****************
 21151 ;; Defined at:
 21152 ;;		line 187 in file "nullifyBadge.c"
 21153 ;; Parameters:    Size  Location     Type
 21154 ;;		None
 21155 ;; Auto vars:     Size  Location     Type
 21156 ;;  retVal          1    3[COMMON] unsigned char 
 21157 ;; Return value:  Size  Location     Type
 21158 ;;                  1    wreg      unsigned char 
 21159 ;; Registers used:
 21160 ;;		wreg, status,2, status,0
 21161 ;; Tracked objects:
 21162 ;;		On entry : 0/0
 21163 ;;		On exit  : 0/0
 21164 ;;		Unchanged: 0/0
 21165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21169 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21170 ;;Total ram usage:        3 bytes
 21171 ;; Hardware stack levels used:    1
 21172 ;; Hardware stack levels required when called:    4
 21173 ;; This function calls:
 21174 ;;		Nothing
 21175 ;; This function is called by:
 21176 ;;		_menu_Main
 21177 ;;		_flashy_Main
 21178 ;;		_locked_Main
 21179 ;;		_secret_Main
 21180 ;;		_slot_Main
 21181 ;; This function uses a non-reentrant model
 21182 ;;
 21183                           
 21184                           
 21185                           ;psect for function _nullifyBadge_buttonsGet
 21186  1A05                     _nullifyBadge_buttonsGet:	
 21187                           
 21188                           ;nullifyBadge.c: 188: u8 retVal = 0x0F;
 21189                           
 21190                           ;incstack = 0
 21191                           ; Regs used in _nullifyBadge_buttonsGet: [wreg+status,2+status,0]
 21192  1A05  300F               	movlw	15
 21193  1A06  00F1               	movwf	??_nullifyBadge_buttonsGet
 21194  1A07  0871               	movf	??_nullifyBadge_buttonsGet,w
 21195  1A08  00F3               	movwf	nullifyBadge_buttonsGet@retVal
 21196                           
 21197                           ;nullifyBadge.c: 190: retVal &= ~(PORTCbits.RC5 << 0);
 21198  1A09  0020               	movlb	0	; select bank0
 21199  1A0A  0E0E               	swapf	14,w	;volatile
 21200  1A0B  0C89               	rrf	9,f
 21201  1A0C  3901               	andlw	1
 21202  1A0D  3AFF               	xorlw	255
 21203  1A0E  00F1               	movwf	??_nullifyBadge_buttonsGet
 21204  1A0F  0871               	movf	??_nullifyBadge_buttonsGet,w
 21205  1A10  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 21206                           
 21207                           ;nullifyBadge.c: 191: retVal &= ~(PORTAbits.RA2 << 1);
 21208  1A11  0C0C               	rrf	12,w	;volatile
 21209  1A12  0C89               	rrf	9,f
 21210  1A13  3901               	andlw	1
 21211  1A14  0709               	addwf	9,w
 21212  1A15  3AFF               	xorlw	255
 21213  1A16  00F1               	movwf	??_nullifyBadge_buttonsGet
 21214  1A17  0871               	movf	??_nullifyBadge_buttonsGet,w
 21215  1A18  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 21216                           
 21217                           ;nullifyBadge.c: 192: retVal &= ~(PORTAbits.RA4 << 2);
 21218  1A19  0E0C               	swapf	12,w	;volatile
 21219  1A1A  3901               	andlw	1
 21220  1A1B  00F1               	movwf	??_nullifyBadge_buttonsGet
 21221  1A1C  3001               	movlw	1
 21222  1A1D                     u3775:	
 21223  1A1D  35F1               	lslf	??_nullifyBadge_buttonsGet,f
 21224  1A1E  3EFF               	addlw	-1
 21225  1A1F  1D03               	skipz
 21226  1A20  2A1D               	goto	u3775
 21227  1A21  3571               	lslf	??_nullifyBadge_buttonsGet,w
 21228  1A22  3AFF               	xorlw	255
 21229  1A23  00F2               	movwf	??_nullifyBadge_buttonsGet+1
 21230  1A24  0872               	movf	??_nullifyBadge_buttonsGet+1,w
 21231  1A25  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 21232                           
 21233                           ;nullifyBadge.c: 193: retVal &= ~(PORTAbits.RA5 << 3);
 21234  1A26  0E0C               	swapf	12,w	;volatile
 21235  1A27  0C89               	rrf	9,f
 21236  1A28  3901               	andlw	1
 21237  1A29  00F1               	movwf	??_nullifyBadge_buttonsGet
 21238  1A2A  3002               	movlw	2
 21239  1A2B                     u3785:	
 21240  1A2B  35F1               	lslf	??_nullifyBadge_buttonsGet,f
 21241  1A2C  3EFF               	addlw	-1
 21242  1A2D  1D03               	skipz
 21243  1A2E  2A2B               	goto	u3785
 21244  1A2F  3571               	lslf	??_nullifyBadge_buttonsGet,w
 21245  1A30  3AFF               	xorlw	255
 21246  1A31  00F2               	movwf	??_nullifyBadge_buttonsGet+1
 21247  1A32  0872               	movf	??_nullifyBadge_buttonsGet+1,w
 21248  1A33  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 21249                           
 21250                           ;nullifyBadge.c: 195: return retVal;
 21251  1A34  0873               	movf	nullifyBadge_buttonsGet@retVal,w
 21252  1A35  0008               	return
 21253  1A36                     __end_of_nullifyBadge_buttonsGet:	
 21254                           
 21255                           	psect	text42
 21256  2791                     __ptext42:	
 21257 ;; *************** function _let_alternate *****************
 21258 ;; Defined at:
 21259 ;;		line 186 in file "main.c"
 21260 ;; Parameters:    Size  Location     Type
 21261 ;;  count           2   16[BANK0 ] unsigned int 
 21262 ;; Auto vars:     Size  Location     Type
 21263 ;;		None
 21264 ;; Return value:  Size  Location     Type
 21265 ;;                  1    wreg      void 
 21266 ;; Registers used:
 21267 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21268 ;; Tracked objects:
 21269 ;;		On entry : 0/0
 21270 ;;		On exit  : 0/0
 21271 ;;		Unchanged: 0/0
 21272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21276 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21277 ;;Total ram usage:        2 bytes
 21278 ;; Hardware stack levels used:    1
 21279 ;; Hardware stack levels required when called:    9
 21280 ;; This function calls:
 21281 ;;		_nullifyBadge_userLedsSet
 21282 ;; This function is called by:
 21283 ;;		_flashy_Main
 21284 ;; This function uses a non-reentrant model
 21285 ;;
 21286                           
 21287                           
 21288                           ;psect for function _let_alternate
 21289  2791                     _let_alternate:	
 21290                           
 21291                           ;main.c: 187: if(count %2 == 1){
 21292                           
 21293                           ;incstack = 0
 21294                           ; Regs used in _let_alternate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21295  2791  0020               	movlb	0	; select bank0
 21296  2792  1C30               	btfss	let_alternate@count,0
 21297  2793  2F9C               	goto	l6659
 21298                           
 21299                           ;main.c: 188: nullifyBadge_userLedsSet(&badge_inst,43349);
 21300  2794  3055               	movlw	85
 21301  2795  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21302  2796  30A9               	movlw	169
 21303  2797  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21304  2798  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21305  2799  31A6  26E5         	fcall	_nullifyBadge_userLedsSet
 21306                           
 21307                           ;main.c: 189: }
 21308  279B  0008               	return
 21309  279C                     l6659:	
 21310                           
 21311                           ;main.c: 190: else{
 21312                           ;main.c: 191: nullifyBadge_userLedsSet(&badge_inst,21162);
 21313  279C  30AA               	movlw	170
 21314  279D  0020               	movlb	0	; select bank0
 21315  279E  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21316  279F  3052               	movlw	82
 21317  27A0  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21318  27A1  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21319  27A2  31A6  26E5         	fcall	_nullifyBadge_userLedsSet
 21320  27A4  0008               	return
 21321  27A5                     __end_of_let_alternate:	
 21322                           
 21323                           	psect	text43
 21324  1C37                     __ptext43:	
 21325 ;; *************** function _led_roundabout *****************
 21326 ;; Defined at:
 21327 ;;		line 154 in file "main.c"
 21328 ;; Parameters:    Size  Location     Type
 21329 ;;  counter         2   16[BANK0 ] unsigned int 
 21330 ;; Auto vars:     Size  Location     Type
 21331 ;;  size            2   22[BANK0 ] unsigned int 
 21332 ;;  leds            2   20[BANK0 ] unsigned int 
 21333 ;; Return value:  Size  Location     Type
 21334 ;;                  1    wreg      void 
 21335 ;; Registers used:
 21336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21337 ;; Tracked objects:
 21338 ;;		On entry : 0/0
 21339 ;;		On exit  : 0/0
 21340 ;;		Unchanged: 0/0
 21341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21343 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21345 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21346 ;;Total ram usage:        8 bytes
 21347 ;; Hardware stack levels used:    1
 21348 ;; Hardware stack levels required when called:    9
 21349 ;; This function calls:
 21350 ;;		___lwmod
 21351 ;;		_nullifyBadge_userLedsSet
 21352 ;; This function is called by:
 21353 ;;		_flashy_Main
 21354 ;; This function uses a non-reentrant model
 21355 ;;
 21356                           
 21357                           
 21358                           ;psect for function _led_roundabout
 21359  1C37                     _led_roundabout:	
 21360                           
 21361                           ;main.c: 155: u16 size = sizeof(roundabout_leds) / sizeof(roundabout_leds[0]);
 21362                           
 21363                           ;incstack = 0
 21364                           ; Regs used in _led_roundabout: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21365  1C37  300E               	movlw	14
 21366  1C38  0020               	movlb	0	; select bank0
 21367  1C39  00B6               	movwf	led_roundabout@size
 21368  1C3A  3000               	movlw	0
 21369  1C3B  00B7               	movwf	led_roundabout@size+1
 21370                           
 21371                           ;main.c: 156: u16 leds = roundabout_leds[counter % size];
 21372  1C3C  0837               	movf	led_roundabout@size+1,w
 21373  1C3D  00A1               	movwf	___lwmod@divisor+1
 21374  1C3E  0836               	movf	led_roundabout@size,w
 21375  1C3F  00A0               	movwf	___lwmod@divisor
 21376  1C40  0831               	movf	led_roundabout@counter+1,w
 21377  1C41  00A3               	movwf	___lwmod@dividend+1
 21378  1C42  0830               	movf	led_roundabout@counter,w
 21379  1C43  00A2               	movwf	___lwmod@dividend
 21380  1C44  3199  21A9  319C   	fcall	___lwmod
 21381  1C47  0020               	movlb	0	; select bank0
 21382  1C48  0820               	movf	?___lwmod,w
 21383  1C49  0709               	addwf	9,w
 21384  1C4A  3EBC               	addlw	(low (_roundabout_leds| (0+512)))& (0+255)
 21385  1C4B  0086               	movwf	6
 21386  1C4C  3002               	movlw	2	; select bank5/6
 21387  1C4D  0087               	movwf	7
 21388  1C4E  3F40               	moviw [0]fsr1
 21389  1C4F  00B4               	movwf	led_roundabout@leds
 21390  1C50  3F41               	moviw [1]fsr1
 21391  1C51  00B5               	movwf	led_roundabout@leds+1
 21392                           
 21393                           ;main.c: 158: size = sizeof(roundabout_leds_inverse) / sizeof(roundabout_leds_inverse[0]
      +                          );
 21394  1C52  300E               	movlw	14
 21395  1C53  00B6               	movwf	led_roundabout@size
 21396  1C54  3000               	movlw	0
 21397  1C55  00B7               	movwf	led_roundabout@size+1
 21398                           
 21399                           ;main.c: 159: leds |= roundabout_leds_inverse[counter % size];
 21400  1C56  0837               	movf	led_roundabout@size+1,w
 21401  1C57  00A1               	movwf	___lwmod@divisor+1
 21402  1C58  0836               	movf	led_roundabout@size,w
 21403  1C59  00A0               	movwf	___lwmod@divisor
 21404  1C5A  0831               	movf	led_roundabout@counter+1,w
 21405  1C5B  00A3               	movwf	___lwmod@dividend+1
 21406  1C5C  0830               	movf	led_roundabout@counter,w
 21407  1C5D  00A2               	movwf	___lwmod@dividend
 21408  1C5E  3199  21A9  319C   	fcall	___lwmod
 21409  1C61  0020               	movlb	0	; select bank0
 21410  1C62  0820               	movf	?___lwmod,w
 21411  1C63  0709               	addwf	9,w
 21412  1C64  3EA0               	addlw	(low (_roundabout_leds_inverse| (0+512)))& (0+255)
 21413  1C65  0086               	movwf	6
 21414  1C66  3002               	movlw	2	; select bank5/6
 21415  1C67  0087               	movwf	7
 21416  1C68  3F40               	moviw [0]fsr1
 21417  1C69  00B2               	movwf	??_led_roundabout
 21418  1C6A  3F41               	moviw [1]fsr1
 21419  1C6B  00B3               	movwf	??_led_roundabout+1
 21420  1C6C  0832               	movf	??_led_roundabout,w
 21421  1C6D  04B4               	iorwf	led_roundabout@leds,f
 21422  1C6E  0833               	movf	??_led_roundabout+1,w
 21423  1C6F  04B5               	iorwf	led_roundabout@leds+1,f
 21424                           
 21425                           ;main.c: 161: nullifyBadge_userLedsSet(&badge_inst, leds);
 21426  1C70  0835               	movf	led_roundabout@leds+1,w
 21427  1C71  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21428  1C72  0834               	movf	led_roundabout@leds,w
 21429  1C73  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21430  1C74  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21431  1C75  31A6  26E5         	fcall	_nullifyBadge_userLedsSet
 21432  1C77  0008               	return
 21433  1C78                     __end_of_led_roundabout:	
 21434                           
 21435                           	psect	text44
 21436  273C                     __ptext44:	
 21437 ;; *************** function _led_rand *****************
 21438 ;; Defined at:
 21439 ;;		line 174 in file "main.c"
 21440 ;; Parameters:    Size  Location     Type
 21441 ;;		None
 21442 ;; Auto vars:     Size  Location     Type
 21443 ;;  spark           2   16[BANK0 ] unsigned int 
 21444 ;; Return value:  Size  Location     Type
 21445 ;;                  1    wreg      void 
 21446 ;; Registers used:
 21447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21448 ;; Tracked objects:
 21449 ;;		On entry : 0/0
 21450 ;;		On exit  : 0/0
 21451 ;;		Unchanged: 0/0
 21452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21454 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21456 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21457 ;;Total ram usage:        2 bytes
 21458 ;; Hardware stack levels used:    1
 21459 ;; Hardware stack levels required when called:    9
 21460 ;; This function calls:
 21461 ;;		_nullifyBadge_userLedsSet
 21462 ;;		_rand
 21463 ;; This function is called by:
 21464 ;;		_flashy_Main
 21465 ;; This function uses a non-reentrant model
 21466 ;;
 21467                           
 21468                           
 21469                           ;psect for function _led_rand
 21470  273C                     _led_rand:	
 21471                           
 21472                           ;main.c: 176: u16 spark = rand() % 65536;
 21473                           
 21474                           ;incstack = 0
 21475                           ; Regs used in _led_rand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21476  273C  319C  24BA  31A7   	fcall	_rand
 21477  273F  0020               	movlb	0	; select bank0
 21478  2740  0825               	movf	?_rand+1,w
 21479  2741  00B1               	movwf	led_rand@spark+1
 21480  2742  0824               	movf	?_rand,w
 21481  2743  00B0               	movwf	led_rand@spark
 21482                           
 21483                           ;main.c: 177: nullifyBadge_userLedsSet(&badge_inst,spark);
 21484  2744  0831               	movf	led_rand@spark+1,w
 21485  2745  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21486  2746  0830               	movf	led_rand@spark,w
 21487  2747  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21488  2748  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21489  2749  31A6  26E5         	fcall	_nullifyBadge_userLedsSet
 21490  274B  0008               	return
 21491  274C                     __end_of_led_rand:	
 21492                           
 21493                           	psect	text45
 21494  1CBA                     __ptext45:	
 21495 ;; *************** function _rand *****************
 21496 ;; Defined at:
 21497 ;;		line 12 in file "/Applications/microchip/xc8/v1.42/sources/common/rand.c"
 21498 ;; Parameters:    Size  Location     Type
 21499 ;;		None
 21500 ;; Auto vars:     Size  Location     Type
 21501 ;;		None
 21502 ;; Return value:  Size  Location     Type
 21503 ;;                  2    4[BANK0 ] int 
 21504 ;; Registers used:
 21505 ;;		wreg, status,2, status,0, pclath, cstack
 21506 ;; Tracked objects:
 21507 ;;		On entry : 0/0
 21508 ;;		On exit  : 0/0
 21509 ;;		Unchanged: 0/0
 21510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21513 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21514 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21515 ;;Total ram usage:        7 bytes
 21516 ;; Hardware stack levels used:    1
 21517 ;; Hardware stack levels required when called:    5
 21518 ;; This function calls:
 21519 ;;		___lmul
 21520 ;; This function is called by:
 21521 ;;		_led_rand
 21522 ;; This function uses a non-reentrant model
 21523 ;;
 21524                           
 21525                           
 21526                           ;psect for function _rand
 21527  1CBA                     _rand:	
 21528                           
 21529                           ;incstack = 0
 21530                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
 21531  1CBA  0021               	movlb	1	; select bank1
 21532  1CBB  085F               	movf	(_randx+3)^(0+128),w
 21533  1CBC  00F4               	movwf	___lmul@multiplier+3
 21534  1CBD  085E               	movf	(_randx+2)^(0+128),w
 21535  1CBE  00F3               	movwf	___lmul@multiplier+2
 21536  1CBF  085D               	movf	(_randx+1)^(0+128),w
 21537  1CC0  00F2               	movwf	___lmul@multiplier+1
 21538  1CC1  085C               	movf	_randx^(0+128),w
 21539  1CC2  00F1               	movwf	___lmul@multiplier
 21540  1CC3  3041               	movlw	65
 21541  1CC4  00F8               	movwf	___lmul@multiplicand+3
 21542  1CC5  30C6               	movlw	198
 21543  1CC6  00F7               	movwf	___lmul@multiplicand+2
 21544  1CC7  304E               	movlw	78
 21545  1CC8  00F6               	movwf	___lmul@multiplicand+1
 21546  1CC9  306D               	movlw	109
 21547  1CCA  00F5               	movwf	___lmul@multiplicand
 21548  1CCB  319A  2236  319C   	fcall	___lmul
 21549  1CCE  0874               	movf	?___lmul+3,w
 21550  1CCF  0021               	movlb	1	; select bank1
 21551  1CD0  00DF               	movwf	(_randx+3)^(0+128)
 21552  1CD1  0873               	movf	?___lmul+2,w
 21553  1CD2  00DE               	movwf	(_randx+2)^(0+128)
 21554  1CD3  0872               	movf	?___lmul+1,w
 21555  1CD4  00DD               	movwf	(_randx+1)^(0+128)
 21556  1CD5  0871               	movf	?___lmul,w
 21557  1CD6  00DC               	movwf	_randx^(0+128)
 21558  1CD7  3039               	movlw	57
 21559  1CD8  07DC               	addwf	_randx^(0+128),f
 21560  1CD9  3030               	movlw	48
 21561  1CDA  3DDD               	addwfc	(_randx+1)^(0+128),f
 21562  1CDB  3000               	movlw	0
 21563  1CDC  3DDE               	addwfc	(_randx+2)^(0+128),f
 21564  1CDD  3000               	movlw	0
 21565  1CDE  3DDF               	addwfc	(_randx+3)^(0+128),f
 21566  1CDF  085C               	movf	_randx^(0+128),w
 21567  1CE0  0020               	movlb	0	; select bank0
 21568  1CE1  00A6               	movwf	??_rand
 21569  1CE2  0021               	movlb	1	; select bank1
 21570  1CE3  085D               	movf	(_randx+1)^(0+128),w
 21571  1CE4  0020               	movlb	0	; select bank0
 21572  1CE5  00A7               	movwf	??_rand+1
 21573  1CE6  0021               	movlb	1	; select bank1
 21574  1CE7  085E               	movf	(_randx+2)^(0+128),w
 21575  1CE8  0020               	movlb	0	; select bank0
 21576  1CE9  00A8               	movwf	??_rand+2
 21577  1CEA  0021               	movlb	1	; select bank1
 21578  1CEB  085F               	movf	(_randx+3)^(0+128),w
 21579  1CEC  0020               	movlb	0	; select bank0
 21580  1CED  00A9               	movwf	??_rand+3
 21581  1CEE  3010               	movlw	16
 21582  1CEF  00AA               	movwf	??_rand+4
 21583  1CF0                     u3675:	
 21584  1CF0  37A9               	asrf	??_rand+3,f
 21585  1CF1  0CA8               	rrf	??_rand+2,f
 21586  1CF2  0CA7               	rrf	??_rand+1,f
 21587  1CF3  0CA6               	rrf	??_rand,f
 21588  1CF4  0BAA               	decfsz	??_rand+4,f
 21589  1CF5  2CF0               	goto	u3675
 21590  1CF6  30FF               	movlw	255
 21591  1CF7  0526               	andwf	??_rand,w
 21592  1CF8  00A4               	movwf	?_rand
 21593  1CF9  307F               	movlw	127
 21594  1CFA  0527               	andwf	??_rand+1,w
 21595  1CFB  00A5               	movwf	?_rand+1
 21596  1CFC  0008               	return
 21597  1CFD                     __end_of_rand:	
 21598                           
 21599                           	psect	text46
 21600  1A36                     __ptext46:	
 21601 ;; *************** function ___lmul *****************
 21602 ;; Defined at:
 21603 ;;		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul32.c"
 21604 ;; Parameters:    Size  Location     Type
 21605 ;;  multiplier      4    1[COMMON] unsigned long 
 21606 ;;  multiplicand    4    5[COMMON] unsigned long 
 21607 ;; Auto vars:     Size  Location     Type
 21608 ;;  product         4    0[BANK0 ] unsigned long 
 21609 ;; Return value:  Size  Location     Type
 21610 ;;                  4    1[COMMON] unsigned long 
 21611 ;; Registers used:
 21612 ;;		wreg, status,2, status,0
 21613 ;; Tracked objects:
 21614 ;;		On entry : 0/0
 21615 ;;		On exit  : 0/0
 21616 ;;		Unchanged: 0/0
 21617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21618 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21619 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21621 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21622 ;;Total ram usage:       12 bytes
 21623 ;; Hardware stack levels used:    1
 21624 ;; Hardware stack levels required when called:    4
 21625 ;; This function calls:
 21626 ;;		Nothing
 21627 ;; This function is called by:
 21628 ;;		_rand
 21629 ;; This function uses a non-reentrant model
 21630 ;;
 21631                           
 21632                           
 21633                           ;psect for function ___lmul
 21634  1A36                     ___lmul:	
 21635                           
 21636                           ;incstack = 0
 21637                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 21638  1A36  3000               	movlw	0
 21639  1A37  0020               	movlb	0	; select bank0
 21640  1A38  00A3               	movwf	___lmul@product+3
 21641  1A39  3000               	movlw	0
 21642  1A3A  00A2               	movwf	___lmul@product+2
 21643  1A3B  3000               	movlw	0
 21644  1A3C  00A1               	movwf	___lmul@product+1
 21645  1A3D  3000               	movlw	0
 21646  1A3E  00A0               	movwf	___lmul@product
 21647  1A3F                     l6451:	
 21648  1A3F  1C71               	btfss	___lmul@multiplier,0
 21649  1A40  2A4A               	goto	l6455
 21650  1A41  0875               	movf	___lmul@multiplicand,w
 21651  1A42  0020               	movlb	0	; select bank0
 21652  1A43  07A0               	addwf	___lmul@product,f
 21653  1A44  0876               	movf	___lmul@multiplicand+1,w
 21654  1A45  3DA1               	addwfc	___lmul@product+1,f
 21655  1A46  0877               	movf	___lmul@multiplicand+2,w
 21656  1A47  3DA2               	addwfc	___lmul@product+2,f
 21657  1A48  0878               	movf	___lmul@multiplicand+3,w
 21658  1A49  3DA3               	addwfc	___lmul@product+3,f
 21659  1A4A                     l6455:	
 21660  1A4A  3001               	movlw	1
 21661  1A4B                     u3445:	
 21662  1A4B  35F5               	lslf	___lmul@multiplicand,f
 21663  1A4C  0DF6               	rlf	___lmul@multiplicand+1,f
 21664  1A4D  0DF7               	rlf	___lmul@multiplicand+2,f
 21665  1A4E  0DF8               	rlf	___lmul@multiplicand+3,f
 21666  1A4F  0B89               	decfsz	9,f
 21667  1A50  2A4B               	goto	u3445
 21668  1A51  3001               	movlw	1
 21669  1A52                     u3455:	
 21670  1A52  36F4               	lsrf	___lmul@multiplier+3,f
 21671  1A53  0CF3               	rrf	___lmul@multiplier+2,f
 21672  1A54  0CF2               	rrf	___lmul@multiplier+1,f
 21673  1A55  0CF1               	rrf	___lmul@multiplier,f
 21674  1A56  0B89               	decfsz	9,f
 21675  1A57  2A52               	goto	u3455
 21676  1A58  0874               	movf	___lmul@multiplier+3,w
 21677  1A59  0473               	iorwf	___lmul@multiplier+2,w
 21678  1A5A  0472               	iorwf	___lmul@multiplier+1,w
 21679  1A5B  0471               	iorwf	___lmul@multiplier,w
 21680  1A5C  1D03               	skipz
 21681  1A5D  2A3F               	goto	l6451
 21682  1A5E  0020               	movlb	0	; select bank0
 21683  1A5F  0823               	movf	___lmul@product+3,w
 21684  1A60  00F4               	movwf	?___lmul+3
 21685  1A61  0822               	movf	___lmul@product+2,w
 21686  1A62  00F3               	movwf	?___lmul+2
 21687  1A63  0821               	movf	___lmul@product+1,w
 21688  1A64  00F2               	movwf	?___lmul+1
 21689  1A65  0820               	movf	___lmul@product,w
 21690  1A66  00F1               	movwf	?___lmul
 21691  1A67  0008               	return
 21692  1A68                     __end_of___lmul:	
 21693                           
 21694                           	psect	text47
 21695  1BF6                     __ptext47:	
 21696 ;; *************** function _led_curtain *****************
 21697 ;; Defined at:
 21698 ;;		line 164 in file "main.c"
 21699 ;; Parameters:    Size  Location     Type
 21700 ;;  counter         2   16[BANK0 ] unsigned int 
 21701 ;; Auto vars:     Size  Location     Type
 21702 ;;  size            2   22[BANK0 ] unsigned int 
 21703 ;;  leds            2   20[BANK0 ] unsigned int 
 21704 ;; Return value:  Size  Location     Type
 21705 ;;                  1    wreg      void 
 21706 ;; Registers used:
 21707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21708 ;; Tracked objects:
 21709 ;;		On entry : 0/0
 21710 ;;		On exit  : 0/0
 21711 ;;		Unchanged: 0/0
 21712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21714 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21715 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21716 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21717 ;;Total ram usage:        8 bytes
 21718 ;; Hardware stack levels used:    1
 21719 ;; Hardware stack levels required when called:    9
 21720 ;; This function calls:
 21721 ;;		___lwmod
 21722 ;;		_nullifyBadge_userLedsSet
 21723 ;; This function is called by:
 21724 ;;		_flashy_Main
 21725 ;; This function uses a non-reentrant model
 21726 ;;
 21727                           
 21728                           
 21729                           ;psect for function _led_curtain
 21730  1BF6                     _led_curtain:	
 21731                           
 21732                           ;main.c: 165: u16 size = sizeof(curtain_leds) / sizeof(curtain_leds[0]);
 21733                           
 21734                           ;incstack = 0
 21735                           ; Regs used in _led_curtain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21736  1BF6  300E               	movlw	14
 21737  1BF7  0020               	movlb	0	; select bank0
 21738  1BF8  00B6               	movwf	led_curtain@size
 21739  1BF9  3000               	movlw	0
 21740  1BFA  00B7               	movwf	led_curtain@size+1
 21741                           
 21742                           ;main.c: 166: u16 leds = curtain_leds[counter % size];
 21743  1BFB  0837               	movf	led_curtain@size+1,w
 21744  1BFC  00A1               	movwf	___lwmod@divisor+1
 21745  1BFD  0836               	movf	led_curtain@size,w
 21746  1BFE  00A0               	movwf	___lwmod@divisor
 21747  1BFF  0831               	movf	led_curtain@counter+1,w
 21748  1C00  00A3               	movwf	___lwmod@dividend+1
 21749  1C01  0830               	movf	led_curtain@counter,w
 21750  1C02  00A2               	movwf	___lwmod@dividend
 21751  1C03  3199  21A9  319B   	fcall	___lwmod
 21752  1C06  0020               	movlb	0	; select bank0
 21753  1C07  0820               	movf	?___lwmod,w
 21754  1C08  0709               	addwf	9,w
 21755  1C09  3E3C               	addlw	(low (_curtain_leds| (0+768)))& (0+255)
 21756  1C0A  0086               	movwf	6
 21757  1C0B  3003               	movlw	3	; select bank6/7
 21758  1C0C  0087               	movwf	7
 21759  1C0D  3F40               	moviw [0]fsr1
 21760  1C0E  00B4               	movwf	led_curtain@leds
 21761  1C0F  3F41               	moviw [1]fsr1
 21762  1C10  00B5               	movwf	led_curtain@leds+1
 21763                           
 21764                           ;main.c: 168: size = sizeof(curtain_leds_inverse) / sizeof(curtain_leds_inverse[0]);
 21765  1C11  300E               	movlw	14
 21766  1C12  00B6               	movwf	led_curtain@size
 21767  1C13  3000               	movlw	0
 21768  1C14  00B7               	movwf	led_curtain@size+1
 21769                           
 21770                           ;main.c: 169: leds |= curtain_leds_inverse[counter % size];
 21771  1C15  0837               	movf	led_curtain@size+1,w
 21772  1C16  00A1               	movwf	___lwmod@divisor+1
 21773  1C17  0836               	movf	led_curtain@size,w
 21774  1C18  00A0               	movwf	___lwmod@divisor
 21775  1C19  0831               	movf	led_curtain@counter+1,w
 21776  1C1A  00A3               	movwf	___lwmod@dividend+1
 21777  1C1B  0830               	movf	led_curtain@counter,w
 21778  1C1C  00A2               	movwf	___lwmod@dividend
 21779  1C1D  3199  21A9  319B   	fcall	___lwmod
 21780  1C20  0020               	movlb	0	; select bank0
 21781  1C21  0820               	movf	?___lwmod,w
 21782  1C22  0709               	addwf	9,w
 21783  1C23  3E20               	addlw	(low (_curtain_leds_inverse| (0+768)))& (0+255)
 21784  1C24  0086               	movwf	6
 21785  1C25  3003               	movlw	3	; select bank6/7
 21786  1C26  0087               	movwf	7
 21787  1C27  3F40               	moviw [0]fsr1
 21788  1C28  00B2               	movwf	??_led_curtain
 21789  1C29  3F41               	moviw [1]fsr1
 21790  1C2A  00B3               	movwf	??_led_curtain+1
 21791  1C2B  0832               	movf	??_led_curtain,w
 21792  1C2C  04B4               	iorwf	led_curtain@leds,f
 21793  1C2D  0833               	movf	??_led_curtain+1,w
 21794  1C2E  04B5               	iorwf	led_curtain@leds+1,f
 21795                           
 21796                           ;main.c: 171: nullifyBadge_userLedsSet(&badge_inst, leds);
 21797  1C2F  0835               	movf	led_curtain@leds+1,w
 21798  1C30  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21799  1C31  0834               	movf	led_curtain@leds,w
 21800  1C32  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21801  1C33  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21802  1C34  31A6  26E5         	fcall	_nullifyBadge_userLedsSet
 21803  1C36  0008               	return
 21804  1C37                     __end_of_led_curtain:	
 21805                           
 21806                           	psect	text48
 21807  2640                     __ptext48:	
 21808 ;; *************** function _led_circle *****************
 21809 ;; Defined at:
 21810 ;;		line 180 in file "main.c"
 21811 ;; Parameters:    Size  Location     Type
 21812 ;;  count           2   16[BANK0 ] unsigned int 
 21813 ;; Auto vars:     Size  Location     Type
 21814 ;;		None
 21815 ;; Return value:  Size  Location     Type
 21816 ;;                  1    wreg      void 
 21817 ;; Registers used:
 21818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21819 ;; Tracked objects:
 21820 ;;		On entry : 0/0
 21821 ;;		On exit  : 0/0
 21822 ;;		Unchanged: 0/0
 21823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21827 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21828 ;;Total ram usage:        2 bytes
 21829 ;; Hardware stack levels used:    1
 21830 ;; Hardware stack levels required when called:    9
 21831 ;; This function calls:
 21832 ;;		_nullifyBadge_userLedsSet
 21833 ;; This function is called by:
 21834 ;;		_flashy_Main
 21835 ;; This function uses a non-reentrant model
 21836 ;;
 21837                           
 21838                           
 21839                           ;psect for function _led_circle
 21840  2640                     _led_circle:	
 21841                           
 21842                           ;main.c: 182: nullifyBadge_userLedsSet(&badge_inst,count);
 21843                           
 21844                           ;incstack = 0
 21845                           ; Regs used in _led_circle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21846  2640  0020               	movlb	0	; select bank0
 21847  2641  0831               	movf	led_circle@count+1,w
 21848  2642  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 21849  2643  0830               	movf	led_circle@count,w
 21850  2644  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 21851  2645  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21852  2646  31A6  26E5         	fcall	_nullifyBadge_userLedsSet
 21853  2648  0008               	return
 21854  2649                     __end_of_led_circle:	
 21855                           
 21856                           	psect	text49
 21857  26E5                     __ptext49:	
 21858 ;; *************** function _nullifyBadge_userLedsSet *****************
 21859 ;; Defined at:
 21860 ;;		line 164 in file "nullifyBadge.c"
 21861 ;; Parameters:    Size  Location     Type
 21862 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 21863 ;;		 -> badge_inst(18), 
 21864 ;;  userLedData     2   13[BANK0 ] unsigned int 
 21865 ;; Auto vars:     Size  Location     Type
 21866 ;;  badge           1   15[BANK0 ] PTR struct t_nullifyBadg
 21867 ;;		 -> badge_inst(18), 
 21868 ;; Return value:  Size  Location     Type
 21869 ;;                  1    wreg      void 
 21870 ;; Registers used:
 21871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21872 ;; Tracked objects:
 21873 ;;		On entry : 0/0
 21874 ;;		On exit  : 0/0
 21875 ;;		Unchanged: 0/0
 21876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21877 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21880 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21881 ;;Total ram usage:        3 bytes
 21882 ;; Hardware stack levels used:    1
 21883 ;; Hardware stack levels required when called:    8
 21884 ;; This function calls:
 21885 ;;		_displayL2_SetUserLeds
 21886 ;; This function is called by:
 21887 ;;		_led_roundabout
 21888 ;;		_led_curtain
 21889 ;;		_led_rand
 21890 ;;		_led_circle
 21891 ;;		_let_alternate
 21892 ;;		_menu_display_option
 21893 ;;		_flashy_Main
 21894 ;;		_locked_Main
 21895 ;; This function uses a non-reentrant model
 21896 ;;
 21897                           
 21898                           
 21899                           ;psect for function _nullifyBadge_userLedsSet
 21900  26E5                     _nullifyBadge_userLedsSet:	
 21901                           
 21902                           ;incstack = 0
 21903                           ; Regs used in _nullifyBadge_userLedsSet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 21904                           ;nullifyBadge_userLedsSet@badge stored from wreg
 21905  26E5  0020               	movlb	0	; select bank0
 21906  26E6  00AF               	movwf	nullifyBadge_userLedsSet@badge
 21907                           
 21908                           ;nullifyBadge.c: 165: if (badge_locked) {
 21909  26E7  087C               	movf	_badge_locked,w
 21910  26E8  1D03               	btfss	3,2
 21911                           
 21912                           ;nullifyBadge.c: 166: userLedData |= 1024;
 21913  26E9  152E               	bsf	nullifyBadge_userLedsSet@userLedData+1,2
 21914                           
 21915                           ;nullifyBadge.c: 167: }
 21916                           ;nullifyBadge.c: 168: displayL2_SetUserLeds(&badge->display, userLedData);
 21917  26EA  082E               	movf	nullifyBadge_userLedsSet@userLedData+1,w
 21918  26EB  00AC               	movwf	displayL2_SetUserLeds@userLedData+1
 21919  26EC  082D               	movf	nullifyBadge_userLedsSet@userLedData,w
 21920  26ED  00AB               	movwf	displayL2_SetUserLeds@userLedData
 21921  26EE  082F               	movf	nullifyBadge_userLedsSet@badge,w
 21922  26EF  3198  20D8         	fcall	_displayL2_SetUserLeds
 21923  26F1  0008               	return
 21924  26F2                     __end_of_nullifyBadge_userLedsSet:	
 21925                           
 21926                           	psect	text50
 21927  18D8                     __ptext50:	
 21928 ;; *************** function _displayL2_SetUserLeds *****************
 21929 ;; Defined at:
 21930 ;;		line 88 in file "nullifyBadge_displayL2.c"
 21931 ;; Parameters:    Size  Location     Type
 21932 ;;  display         1    wreg     PTR struct t_nullifyDisp
 21933 ;;		 -> badge_inst(18), 
 21934 ;;  userLedData     2   11[BANK0 ] unsigned int 
 21935 ;; Auto vars:     Size  Location     Type
 21936 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 21937 ;;		 -> badge_inst(18), 
 21938 ;; Return value:  Size  Location     Type
 21939 ;;                  1    wreg      void 
 21940 ;; Registers used:
 21941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21942 ;; Tracked objects:
 21943 ;;		On entry : 0/0
 21944 ;;		On exit  : 0/0
 21945 ;;		Unchanged: 0/0
 21946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21947 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21950 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21951 ;;Total ram usage:        3 bytes
 21952 ;; Hardware stack levels used:    1
 21953 ;; Hardware stack levels required when called:    7
 21954 ;; This function calls:
 21955 ;;		_displayL1_SetUserLed
 21956 ;;		_displayL1_Update
 21957 ;; This function is called by:
 21958 ;;		_nullifyBadge_userLedsSet
 21959 ;;		_nullifyBadge_userLedsSetForce
 21960 ;; This function uses a non-reentrant model
 21961 ;;
 21962                           
 21963                           
 21964                           ;psect for function _displayL2_SetUserLeds
 21965  18D8                     _displayL2_SetUserLeds:	
 21966                           
 21967                           ;incstack = 0
 21968                           ; Regs used in _displayL2_SetUserLeds: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21969                           ;displayL2_SetUserLeds@display stored from wreg
 21970  18D8  00FB               	movwf	displayL2_SetUserLeds@display
 21971                           
 21972                           ;nullifyBadge_displayL2.c: 89: display->ledVect = userLedData;
 21973  18D9  087B               	movf	displayL2_SetUserLeds@display,w
 21974  18DA  3E05               	addlw	5
 21975  18DB  0086               	movwf	6
 21976  18DC  3001               	movlw	1	; select bank2/3
 21977  18DD  0087               	movwf	7
 21978  18DE  0020               	movlb	0	; select bank0
 21979  18DF  082B               	movf	displayL2_SetUserLeds@userLedData,w
 21980  18E0  3FC0               	movwi [0]fsr1
 21981  18E1  082C               	movf	displayL2_SetUserLeds@userLedData+1,w
 21982  18E2  3FC1               	movwi [1]fsr1
 21983                           
 21984                           ;nullifyBadge_displayL2.c: 90: displayL1_SetUserLed(&display->display_l1, display->ledVe
      +                          ct);
 21985  18E3  087B               	movf	displayL2_SetUserLeds@display,w
 21986  18E4  3E05               	addlw	5
 21987  18E5  0086               	movwf	6
 21988  18E6  3001               	movlw	1	; select bank2/3
 21989  18E7  0087               	movwf	7
 21990  18E8  3F40               	moviw [0]fsr1
 21991  18E9  00F1               	movwf	displayL1_SetUserLed@userLedVect
 21992  18EA  3F41               	moviw [1]fsr1
 21993  18EB  00F2               	movwf	displayL1_SetUserLed@userLedVect+1
 21994  18EC  087B               	movf	displayL2_SetUserLeds@display,w
 21995  18ED  3E07               	addlw	7
 21996  18EE  31A7  276D  3198   	fcall	_displayL1_SetUserLed
 21997                           
 21998                           ;nullifyBadge_displayL2.c: 91: displayL1_Update(&display->display_l1);
 21999  18F1  087B               	movf	displayL2_SetUserLeds@display,w
 22000  18F2  3E07               	addlw	7
 22001  18F3  31A7  275C         	fcall	_displayL1_Update
 22002  18F5  0008               	return
 22003  18F6                     __end_of_displayL2_SetUserLeds:	
 22004                           
 22005                           	psect	text51
 22006  276D                     __ptext51:	
 22007 ;; *************** function _displayL1_SetUserLed *****************
 22008 ;; Defined at:
 22009 ;;		line 71 in file "nullifyBadge_displayL1.c"
 22010 ;; Parameters:    Size  Location     Type
 22011 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22012 ;;		 -> badge_inst(18), 
 22013 ;;  userLedVect     2    1[COMMON] unsigned int 
 22014 ;; Auto vars:     Size  Location     Type
 22015 ;;  display         1    4[COMMON] PTR struct t_nullifyDisp
 22016 ;;		 -> badge_inst(18), 
 22017 ;; Return value:  Size  Location     Type
 22018 ;;                  1    wreg      void 
 22019 ;; Registers used:
 22020 ;;		wreg, fsr1l, fsr1h, status,2
 22021 ;; Tracked objects:
 22022 ;;		On entry : 0/0
 22023 ;;		On exit  : 0/0
 22024 ;;		Unchanged: 0/0
 22025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22030 ;;Total ram usage:        4 bytes
 22031 ;; Hardware stack levels used:    1
 22032 ;; Hardware stack levels required when called:    4
 22033 ;; This function calls:
 22034 ;;		Nothing
 22035 ;; This function is called by:
 22036 ;;		_displayL2_SetUserLeds
 22037 ;;		_displayL2_ClrUserLeds
 22038 ;; This function uses a non-reentrant model
 22039 ;;
 22040                           
 22041                           
 22042                           ;psect for function _displayL1_SetUserLed
 22043  276D                     _displayL1_SetUserLed:	
 22044                           
 22045                           ;incstack = 0
 22046                           ; Regs used in _displayL1_SetUserLed: [wreg+fsr1l+fsr1h+status,2]
 22047                           ;displayL1_SetUserLed@display stored from wreg
 22048  276D  00F4               	movwf	displayL1_SetUserLed@display
 22049                           
 22050                           ;nullifyBadge_displayL1.c: 73: display->displayVect[0] = (u8) (userLedVect >> 8);
 22051  276E  0872               	movf	displayL1_SetUserLed@userLedVect+1,w
 22052  276F  00F3               	movwf	??_displayL1_SetUserLed
 22053  2770  0874               	movf	displayL1_SetUserLed@display,w
 22054  2771  0086               	movwf	6
 22055  2772  3001               	movlw	1	; select bank2/3
 22056  2773  0087               	movwf	7
 22057  2774  0873               	movf	??_displayL1_SetUserLed,w
 22058  2775  0081               	movwf	1
 22059                           
 22060                           ;nullifyBadge_displayL1.c: 74: display->displayVect[1] = (u8) (userLedVect & 0xFF);
 22061  2776  0871               	movf	displayL1_SetUserLed@userLedVect,w
 22062  2777  00F3               	movwf	??_displayL1_SetUserLed
 22063  2778  0A74               	incf	displayL1_SetUserLed@display,w
 22064  2779  0086               	movwf	6
 22065  277A  3001               	movlw	1	; select bank2/3
 22066  277B  0087               	movwf	7
 22067  277C  0873               	movf	??_displayL1_SetUserLed,w
 22068  277D  0081               	movwf	1
 22069  277E  0008               	return
 22070  277F                     __end_of_displayL1_SetUserLed:	
 22071                           
 22072                           	psect	text52
 22073  1F3F                     __ptext52:	
 22074 ;; *************** function _flashy_display_option *****************
 22075 ;; Defined at:
 22076 ;;		line 85 in file "flashy_task.c"
 22077 ;; Parameters:    Size  Location     Type
 22078 ;;  data            2   44[BANK0 ] PTR struct t_flashy_task
 22079 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 22080 ;;		 -> flashy_TaskData(30), NULL(0), 
 22081 ;; Auto vars:     Size  Location     Type
 22082 ;;		None
 22083 ;; Return value:  Size  Location     Type
 22084 ;;                  1    wreg      void 
 22085 ;; Registers used:
 22086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22087 ;; Tracked objects:
 22088 ;;		On entry : 0/0
 22089 ;;		On exit  : 0/0
 22090 ;;		Unchanged: 0/0
 22091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22095 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22096 ;;Total ram usage:        2 bytes
 22097 ;; Hardware stack levels used:    1
 22098 ;; Hardware stack levels required when called:   10
 22099 ;; This function calls:
 22100 ;;		_marquee
 22101 ;;		_marquee_speedy
 22102 ;;		_nullifyBadge_segDisplayForceUpdate
 22103 ;;		_nullifyBadge_segDisplayPutStr
 22104 ;; This function is called by:
 22105 ;;		_flashy_Main
 22106 ;; This function uses a non-reentrant model
 22107 ;;
 22108                           
 22109                           
 22110                           ;psect for function _flashy_display_option
 22111  1F3F                     _flashy_display_option:	
 22112                           
 22113                           ;flashy_task.c: 86: if (flashy_option_idx == 0){
 22114                           
 22115                           ;incstack = 0
 22116                           ; Regs used in _flashy_display_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22117  1F3F  0021               	movlb	1	; select bank1
 22118  1F40  0826               	movf	_flashy_option_idx^(0+128),w
 22119  1F41  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 22120  1F42  1D03               	btfss	3,2
 22121  1F43  2F5F               	goto	l6739
 22122                           
 22123                           ;flashy_task.c: 87: nullifyBadge_segDisplayPutStr(data->badge, flashy_option[flashy_opti
      +                          on_idx]);
 22124  1F44  3526               	lslf	_flashy_option_idx^(0+128),w
 22125  1F45  3EA0               	addlw	(low (_flashy_option| (0+256)))& (0+255)
 22126  1F46  0086               	movwf	6
 22127  1F47  3001               	movlw	1	; select bank3/4
 22128  1F48  0087               	movwf	7
 22129  1F49  3F40               	moviw [0]fsr1
 22130  1F4A  0020               	movlb	0	; select bank0
 22131  1F4B  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 22132  1F4C  3F41               	moviw [1]fsr1
 22133  1F4D  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 22134  1F4E  084C               	movf	flashy_display_option@data,w
 22135  1F4F  0086               	movwf	6
 22136  1F50  084D               	movf	flashy_display_option@data+1,w
 22137  1F51  0087               	movwf	7
 22138  1F52  0801               	movf	1,w
 22139  1F53  31A6  265D  319F   	fcall	_nullifyBadge_segDisplayPutStr
 22140                           
 22141                           ;flashy_task.c: 88: nullifyBadge_segDisplayForceUpdate(data->badge);
 22142  1F56  0020               	movlb	0	; select bank0
 22143  1F57  084C               	movf	flashy_display_option@data,w
 22144  1F58  0086               	movwf	6
 22145  1F59  084D               	movf	flashy_display_option@data+1,w
 22146  1F5A  0087               	movwf	7
 22147  1F5B  0801               	movf	1,w
 22148  1F5C  31A6  2615         	fcall	_nullifyBadge_segDisplayForceUpdate
 22149                           
 22150                           ;flashy_task.c: 89: }
 22151  1F5E  0008               	return
 22152  1F5F                     l6739:	
 22153                           
 22154                           ;flashy_task.c: 90: else {
 22155                           ;flashy_task.c: 91: if (data->display_state==FLASHY_STATE_DISPLAY ){
 22156  1F5F  0020               	movlb	0	; select bank0
 22157  1F60  084C               	movf	flashy_display_option@data,w
 22158  1F61  0086               	movwf	6
 22159  1F62  084D               	movf	flashy_display_option@data+1,w
 22160  1F63  0087               	movwf	7
 22161  1F64  3146               	addfsr 1,6
 22162  1F65  0801               	movf	1,w
 22163  1F66  1D03               	btfss	3,2
 22164  1F67  2F87               	goto	l6743
 22165                           
 22166                           ;flashy_task.c: 93: marquee_speedy(flashy_option[flashy_option_idx], data->noholdCount, 
      +                          flashy_scroll_rate);
 22167  1F68  0021               	movlb	1	; select bank1
 22168  1F69  3526               	lslf	_flashy_option_idx^(0+128),w
 22169  1F6A  3EA0               	addlw	(low (_flashy_option| (0+256)))& (0+255)
 22170  1F6B  0086               	movwf	6
 22171  1F6C  3001               	movlw	1	; select bank3/4
 22172  1F6D  0087               	movwf	7
 22173  1F6E  3F40               	moviw [0]fsr1
 22174  1F6F  0020               	movlb	0	; select bank0
 22175  1F70  00BA               	movwf	marquee_speedy@string
 22176  1F71  3F41               	moviw [1]fsr1
 22177  1F72  00BB               	movwf	marquee_speedy@string+1
 22178  1F73  084C               	movf	flashy_display_option@data,w
 22179  1F74  0086               	movwf	6
 22180  1F75  084D               	movf	flashy_display_option@data+1,w
 22181  1F76  0087               	movwf	7
 22182  1F77  315C               	addfsr 1,28
 22183  1F78  3F40               	moviw [0]fsr1
 22184  1F79  00BC               	movwf	marquee_speedy@count
 22185  1F7A  3F41               	moviw [1]fsr1
 22186  1F7B  00BD               	movwf	marquee_speedy@count+1
 22187  1F7C  0021               	movlb	1	; select bank1
 22188  1F7D  082B               	movf	(_flashy_scroll_rate+1)^(0+128),w
 22189  1F7E  0020               	movlb	0	; select bank0
 22190  1F7F  00BF               	movwf	marquee_speedy@multiplier+1
 22191  1F80  0021               	movlb	1	; select bank1
 22192  1F81  082A               	movf	_flashy_scroll_rate^(0+128),w
 22193  1F82  0020               	movlb	0	; select bank0
 22194  1F83  00BE               	movwf	marquee_speedy@multiplier
 22195  1F84  3192  22DD         	fcall	_marquee_speedy
 22196                           
 22197                           ;flashy_task.c: 94: }
 22198  1F86  0008               	return
 22199  1F87                     l6743:	
 22200                           
 22201                           ;flashy_task.c: 95: else{
 22202                           ;flashy_task.c: 96: marquee(flashy_option[flashy_option_idx], data->noholdCount);
 22203  1F87  0021               	movlb	1	; select bank1
 22204  1F88  3526               	lslf	_flashy_option_idx^(0+128),w
 22205  1F89  3EA0               	addlw	(low (_flashy_option| (0+256)))& (0+255)
 22206  1F8A  0086               	movwf	6
 22207  1F8B  3001               	movlw	1	; select bank3/4
 22208  1F8C  0087               	movwf	7
 22209  1F8D  3F40               	moviw [0]fsr1
 22210  1F8E  0020               	movlb	0	; select bank0
 22211  1F8F  00BA               	movwf	marquee@string
 22212  1F90  3F41               	moviw [1]fsr1
 22213  1F91  00BB               	movwf	marquee@string+1
 22214  1F92  084C               	movf	flashy_display_option@data,w
 22215  1F93  0086               	movwf	6
 22216  1F94  084D               	movf	flashy_display_option@data+1,w
 22217  1F95  0087               	movwf	7
 22218  1F96  315C               	addfsr 1,28
 22219  1F97  3F40               	moviw [0]fsr1
 22220  1F98  00BC               	movwf	marquee@count
 22221  1F99  3F41               	moviw [1]fsr1
 22222  1F9A  00BD               	movwf	marquee@count+1
 22223  1F9B  3193  2350         	fcall	_marquee
 22224  1F9D  0008               	return
 22225  1F9E                     __end_of_flashy_display_option:	
 22226                           
 22227                           	psect	text53
 22228  12DD                     __ptext53:	
 22229 ;; *************** function _marquee_speedy *****************
 22230 ;; Defined at:
 22231 ;;		line 128 in file "main.c"
 22232 ;; Parameters:    Size  Location     Type
 22233 ;;  string          2   26[BANK0 ] PTR unsigned char 
 22234 ;;		 -> STR_19(39), STR_18(36), STR_17(34), STR_16(28), 
 22235 ;;		 -> STR_15(21), STR_14(19), STR_13(6), STR_12(8), 
 22236 ;;		 -> STR_11(9), STR_10(5), 
 22237 ;;  count           2   28[BANK0 ] unsigned int 
 22238 ;;  multiplier      2   30[BANK0 ] unsigned int 
 22239 ;; Auto vars:     Size  Location     Type
 22240 ;;  j               2   42[BANK0 ] unsigned int 
 22241 ;;  display_stri    5   33[BANK0 ] unsigned char [5]
 22242 ;;  string_lengt    2   40[BANK0 ] unsigned int 
 22243 ;;  i               2   38[BANK0 ] unsigned int 
 22244 ;; Return value:  Size  Location     Type
 22245 ;;                  1    wreg      void 
 22246 ;; Registers used:
 22247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22248 ;; Tracked objects:
 22249 ;;		On entry : 0/0
 22250 ;;		On exit  : 0/0
 22251 ;;		Unchanged: 0/0
 22252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22253 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22254 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22255 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22256 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22257 ;;Total ram usage:       18 bytes
 22258 ;; Hardware stack levels used:    1
 22259 ;; Hardware stack levels required when called:    9
 22260 ;; This function calls:
 22261 ;;		___lwdiv
 22262 ;;		___lwmod
 22263 ;;		_nullifyBadge_segDisplayForceUpdate
 22264 ;;		_nullifyBadge_segDisplayPutStr
 22265 ;;		_strlen
 22266 ;; This function is called by:
 22267 ;;		_flashy_display_option
 22268 ;; This function uses a non-reentrant model
 22269 ;;
 22270                           
 22271                           
 22272                           ;psect for function _marquee_speedy
 22273  12DD                     _marquee_speedy:	
 22274                           
 22275                           ;main.c: 129: u16 string_length = strlen((const char *) string);
 22276                           
 22277                           ;incstack = 0
 22278                           ; Regs used in _marquee_speedy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22279  12DD  0020               	movlb	0	; select bank0
 22280  12DE  083B               	movf	marquee_speedy@string+1,w
 22281  12DF  00F2               	movwf	strlen@s+1
 22282  12E0  083A               	movf	marquee_speedy@string,w
 22283  12E1  00F1               	movwf	strlen@s
 22284  12E2  3198  20BA  3192   	fcall	_strlen
 22285  12E5  0872               	movf	?_strlen+1,w
 22286  12E6  0020               	movlb	0	; select bank0
 22287  12E7  00C9               	movwf	marquee_speedy@string_length+1
 22288  12E8  0871               	movf	?_strlen,w
 22289  12E9  00C8               	movwf	marquee_speedy@string_length
 22290                           
 22291                           ;main.c: 130: char display_string[] = { ' ', ' ', ' ', ' ', '\0' };
 22292  12EA  3066               	movlw	low marquee_speedy@F14029
 22293  12EB  0086               	movwf	6
 22294  12EC  3001               	movlw	high marquee_speedy@F14029
 22295  12ED  0087               	movwf	7
 22296  12EE  3041               	movlw	low marquee_speedy@display_string
 22297  12EF  0084               	movwf	4
 22298  12F0  3000               	movlw	high marquee_speedy@display_string
 22299  12F1  0085               	movwf	5
 22300  12F2  3005               	movlw	5
 22301  12F3  00C0               	movwf	??_marquee_speedy
 22302  12F4                     u3600:	
 22303  12F4  0016               	moviw fsr1++
 22304  12F5  001A               	movwi fsr0++
 22305  12F6  0BC0               	decfsz	??_marquee_speedy,f
 22306  12F7  2AF4               	goto	u3600
 22307                           
 22308                           ;main.c: 131: u16 i = (count / multiplier) % string_length;
 22309  12F8  0849               	movf	marquee_speedy@string_length+1,w
 22310  12F9  00A1               	movwf	___lwmod@divisor+1
 22311  12FA  0848               	movf	marquee_speedy@string_length,w
 22312  12FB  00A0               	movwf	___lwmod@divisor
 22313  12FC  083F               	movf	marquee_speedy@multiplier+1,w
 22314  12FD  00F2               	movwf	___lwdiv@divisor+1
 22315  12FE  083E               	movf	marquee_speedy@multiplier,w
 22316  12FF  00F1               	movwf	___lwdiv@divisor
 22317  1300  083D               	movf	marquee_speedy@count+1,w
 22318  1301  00F4               	movwf	___lwdiv@dividend+1
 22319  1302  083C               	movf	marquee_speedy@count,w
 22320  1303  00F3               	movwf	___lwdiv@dividend
 22321  1304  319A  229A  3192   	fcall	___lwdiv
 22322  1307  0872               	movf	?___lwdiv+1,w
 22323  1308  0020               	movlb	0	; select bank0
 22324  1309  00A3               	movwf	___lwmod@dividend+1
 22325  130A  0871               	movf	?___lwdiv,w
 22326  130B  00A2               	movwf	___lwmod@dividend
 22327  130C  3199  21A9  3192   	fcall	___lwmod
 22328  130F  0020               	movlb	0	; select bank0
 22329  1310  0821               	movf	?___lwmod+1,w
 22330  1311  00C7               	movwf	marquee_speedy@i+1
 22331  1312  0820               	movf	?___lwmod,w
 22332  1313  00C6               	movwf	marquee_speedy@i
 22333                           
 22334                           ;main.c: 133: for (u16 j=0; j < 4; j++){
 22335  1314  01CA               	clrf	marquee_speedy@j
 22336  1315  01CB               	clrf	marquee_speedy@j+1
 22337  1316  3000               	movlw	0
 22338  1317  024B               	subwf	marquee_speedy@j+1,w
 22339  1318  3004               	movlw	4
 22340  1319  1903               	skipnz
 22341  131A  024A               	subwf	marquee_speedy@j,w
 22342  131B  1803               	btfsc	3,0
 22343  131C  2B44               	goto	l6529
 22344  131D                     l6523:	
 22345                           
 22346                           ;main.c: 134: display_string[j] = string[(i + j) % string_length];
 22347  131D  0849               	movf	marquee_speedy@string_length+1,w
 22348  131E  00A1               	movwf	___lwmod@divisor+1
 22349  131F  0848               	movf	marquee_speedy@string_length,w
 22350  1320  00A0               	movwf	___lwmod@divisor
 22351  1321  084A               	movf	marquee_speedy@j,w
 22352  1322  0746               	addwf	marquee_speedy@i,w
 22353  1323  00A2               	movwf	___lwmod@dividend
 22354  1324  084B               	movf	marquee_speedy@j+1,w
 22355  1325  3D47               	addwfc	marquee_speedy@i+1,w
 22356  1326  00A3               	movwf	___lwmod@dividend+1
 22357  1327  3199  21A9  3192   	fcall	___lwmod
 22358  132A  0020               	movlb	0	; select bank0
 22359  132B  083A               	movf	marquee_speedy@string,w
 22360  132C  0720               	addwf	?___lwmod,w
 22361  132D  0084               	movwf	4
 22362  132E  083B               	movf	marquee_speedy@string+1,w
 22363  132F  3D21               	addwfc	?___lwmod+1,w
 22364  1330  0085               	movwf	5
 22365  1331  0800               	movf	0,w	;code access
 22366  1332  00C0               	movwf	??_marquee_speedy
 22367  1333  084A               	movf	marquee_speedy@j,w
 22368  1334  3E41               	addlw	(low (marquee_speedy@display_string| 0))& (0+255)
 22369  1335  0086               	movwf	6
 22370  1336  0187               	clrf	7
 22371  1337  0840               	movf	??_marquee_speedy,w
 22372  1338  0081               	movwf	1
 22373  1339  3001               	movlw	1
 22374  133A  07CA               	addwf	marquee_speedy@j,f
 22375  133B  3000               	movlw	0
 22376  133C  3DCB               	addwfc	marquee_speedy@j+1,f
 22377  133D  3000               	movlw	0
 22378  133E  024B               	subwf	marquee_speedy@j+1,w
 22379  133F  3004               	movlw	4
 22380  1340  1903               	skipnz
 22381  1341  024A               	subwf	marquee_speedy@j,w
 22382  1342  1C03               	skipc
 22383  1343  2B1D               	goto	l6523
 22384  1344                     l6529:	
 22385                           
 22386                           ;main.c: 135: }
 22387                           ;main.c: 136: nullifyBadge_segDisplayPutStr(&badge_inst, display_string);
 22388  1344  3041               	movlw	low marquee_speedy@display_string
 22389  1345  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 22390  1346  3000               	movlw	high marquee_speedy@display_string
 22391  1347  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 22392  1348  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 22393  1349  31A6  265D  3192   	fcall	_nullifyBadge_segDisplayPutStr
 22394                           
 22395                           ;main.c: 137: nullifyBadge_segDisplayForceUpdate(&badge_inst);
 22396  134C  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 22397  134D  31A6  2615         	fcall	_nullifyBadge_segDisplayForceUpdate
 22398  134F  0008               	return
 22399  1350                     __end_of_marquee_speedy:	
 22400                           
 22401                           	psect	text54
 22402  1350                     __ptext54:	
 22403 ;; *************** function _marquee *****************
 22404 ;; Defined at:
 22405 ;;		line 141 in file "main.c"
 22406 ;; Parameters:    Size  Location     Type
 22407 ;;  string          2   26[BANK0 ] PTR unsigned char 
 22408 ;;		 -> STR_26(5), STR_25(5), STR_24(5), STR_23(11), 
 22409 ;;		 -> STR_22(13), STR_19(39), STR_18(36), STR_17(34), 
 22410 ;;		 -> STR_16(28), STR_15(21), STR_14(19), STR_13(6), 
 22411 ;;		 -> STR_12(8), STR_11(9), STR_10(5), STR_9(18), 
 22412 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 22413 ;;  count           2   28[BANK0 ] unsigned int 
 22414 ;; Auto vars:     Size  Location     Type
 22415 ;;  j               2   42[BANK0 ] unsigned int 
 22416 ;;  display_stri    5   31[BANK0 ] unsigned char [5]
 22417 ;;  string_lengt    2   40[BANK0 ] unsigned int 
 22418 ;;  i               2   38[BANK0 ] unsigned int 
 22419 ;;  multiplier      2   36[BANK0 ] unsigned int 
 22420 ;; Return value:  Size  Location     Type
 22421 ;;                  1    wreg      void 
 22422 ;; Registers used:
 22423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22424 ;; Tracked objects:
 22425 ;;		On entry : 0/0
 22426 ;;		On exit  : 0/0
 22427 ;;		Unchanged: 0/0
 22428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22430 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22431 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22432 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22433 ;;Total ram usage:       18 bytes
 22434 ;; Hardware stack levels used:    1
 22435 ;; Hardware stack levels required when called:    9
 22436 ;; This function calls:
 22437 ;;		___lwdiv
 22438 ;;		___lwmod
 22439 ;;		_nullifyBadge_segDisplayForceUpdate
 22440 ;;		_nullifyBadge_segDisplayPutStr
 22441 ;;		_strlen
 22442 ;; This function is called by:
 22443 ;;		_menu_display_option
 22444 ;;		_flashy_display_option
 22445 ;;		_flashy_Main
 22446 ;;		_locked_Main
 22447 ;;		_slot_Main
 22448 ;; This function uses a non-reentrant model
 22449 ;;
 22450                           
 22451                           
 22452                           ;psect for function _marquee
 22453  1350                     _marquee:	
 22454                           
 22455                           ;main.c: 142: u16 multiplier = 50;
 22456                           
 22457                           ;incstack = 0
 22458                           ; Regs used in _marquee: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22459  1350  3032               	movlw	50
 22460  1351  0020               	movlb	0	; select bank0
 22461  1352  00C4               	movwf	marquee@multiplier
 22462  1353  3000               	movlw	0
 22463  1354  00C5               	movwf	marquee@multiplier+1
 22464                           
 22465                           ;main.c: 143: u16 string_length = strlen((const char *) string);
 22466  1355  083B               	movf	marquee@string+1,w
 22467  1356  00F2               	movwf	strlen@s+1
 22468  1357  083A               	movf	marquee@string,w
 22469  1358  00F1               	movwf	strlen@s
 22470  1359  3198  20BA  3193   	fcall	_strlen
 22471  135C  0872               	movf	?_strlen+1,w
 22472  135D  0020               	movlb	0	; select bank0
 22473  135E  00C9               	movwf	marquee@string_length+1
 22474  135F  0871               	movf	?_strlen,w
 22475  1360  00C8               	movwf	marquee@string_length
 22476                           
 22477                           ;main.c: 144: char display_string[] = { ' ', ' ', ' ', ' ', '\0' };
 22478  1361  3061               	movlw	low marquee@F14038
 22479  1362  0086               	movwf	6
 22480  1363  3001               	movlw	high marquee@F14038
 22481  1364  0087               	movwf	7
 22482  1365  303F               	movlw	low marquee@display_string
 22483  1366  0084               	movwf	4
 22484  1367  3000               	movlw	high marquee@display_string
 22485  1368  0085               	movwf	5
 22486  1369  3005               	movlw	5
 22487  136A  00BE               	movwf	??_marquee
 22488  136B                     u3630:	
 22489  136B  0016               	moviw fsr1++
 22490  136C  001A               	movwi fsr0++
 22491  136D  0BBE               	decfsz	??_marquee,f
 22492  136E  2B6B               	goto	u3630
 22493                           
 22494                           ;main.c: 145: u16 i = (count / multiplier) % string_length;
 22495  136F  0849               	movf	marquee@string_length+1,w
 22496  1370  00A1               	movwf	___lwmod@divisor+1
 22497  1371  0848               	movf	marquee@string_length,w
 22498  1372  00A0               	movwf	___lwmod@divisor
 22499  1373  0845               	movf	marquee@multiplier+1,w
 22500  1374  00F2               	movwf	___lwdiv@divisor+1
 22501  1375  0844               	movf	marquee@multiplier,w
 22502  1376  00F1               	movwf	___lwdiv@divisor
 22503  1377  083D               	movf	marquee@count+1,w
 22504  1378  00F4               	movwf	___lwdiv@dividend+1
 22505  1379  083C               	movf	marquee@count,w
 22506  137A  00F3               	movwf	___lwdiv@dividend
 22507  137B  319A  229A  3193   	fcall	___lwdiv
 22508  137E  0872               	movf	?___lwdiv+1,w
 22509  137F  0020               	movlb	0	; select bank0
 22510  1380  00A3               	movwf	___lwmod@dividend+1
 22511  1381  0871               	movf	?___lwdiv,w
 22512  1382  00A2               	movwf	___lwmod@dividend
 22513  1383  3199  21A9  3193   	fcall	___lwmod
 22514  1386  0020               	movlb	0	; select bank0
 22515  1387  0821               	movf	?___lwmod+1,w
 22516  1388  00C7               	movwf	marquee@i+1
 22517  1389  0820               	movf	?___lwmod,w
 22518  138A  00C6               	movwf	marquee@i
 22519                           
 22520                           ;main.c: 147: for (u16 j=0; j < 4; j++){
 22521  138B  01CA               	clrf	marquee@j
 22522  138C  01CB               	clrf	marquee@j+1
 22523  138D  3000               	movlw	0
 22524  138E  024B               	subwf	marquee@j+1,w
 22525  138F  3004               	movlw	4
 22526  1390  1903               	skipnz
 22527  1391  024A               	subwf	marquee@j,w
 22528  1392  1803               	btfsc	3,0
 22529  1393  2BBB               	goto	l6553
 22530  1394                     l6547:	
 22531                           
 22532                           ;main.c: 148: display_string[j] = string[(i + j) % string_length];
 22533  1394  0849               	movf	marquee@string_length+1,w
 22534  1395  00A1               	movwf	___lwmod@divisor+1
 22535  1396  0848               	movf	marquee@string_length,w
 22536  1397  00A0               	movwf	___lwmod@divisor
 22537  1398  084A               	movf	marquee@j,w
 22538  1399  0746               	addwf	marquee@i,w
 22539  139A  00A2               	movwf	___lwmod@dividend
 22540  139B  084B               	movf	marquee@j+1,w
 22541  139C  3D47               	addwfc	marquee@i+1,w
 22542  139D  00A3               	movwf	___lwmod@dividend+1
 22543  139E  3199  21A9  3193   	fcall	___lwmod
 22544  13A1  0020               	movlb	0	; select bank0
 22545  13A2  083A               	movf	marquee@string,w
 22546  13A3  0720               	addwf	?___lwmod,w
 22547  13A4  0084               	movwf	4
 22548  13A5  083B               	movf	marquee@string+1,w
 22549  13A6  3D21               	addwfc	?___lwmod+1,w
 22550  13A7  0085               	movwf	5
 22551  13A8  0800               	movf	0,w	;code access
 22552  13A9  00BE               	movwf	??_marquee
 22553  13AA  084A               	movf	marquee@j,w
 22554  13AB  3E3F               	addlw	(low (marquee@display_string| 0))& (0+255)
 22555  13AC  0086               	movwf	6
 22556  13AD  0187               	clrf	7
 22557  13AE  083E               	movf	??_marquee,w
 22558  13AF  0081               	movwf	1
 22559  13B0  3001               	movlw	1
 22560  13B1  07CA               	addwf	marquee@j,f
 22561  13B2  3000               	movlw	0
 22562  13B3  3DCB               	addwfc	marquee@j+1,f
 22563  13B4  3000               	movlw	0
 22564  13B5  024B               	subwf	marquee@j+1,w
 22565  13B6  3004               	movlw	4
 22566  13B7  1903               	skipnz
 22567  13B8  024A               	subwf	marquee@j,w
 22568  13B9  1C03               	skipc
 22569  13BA  2B94               	goto	l6547
 22570  13BB                     l6553:	
 22571                           
 22572                           ;main.c: 149: }
 22573                           ;main.c: 150: nullifyBadge_segDisplayPutStr(&badge_inst, display_string);
 22574  13BB  303F               	movlw	low marquee@display_string
 22575  13BC  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 22576  13BD  3000               	movlw	high marquee@display_string
 22577  13BE  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 22578  13BF  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 22579  13C0  31A6  265D  3193   	fcall	_nullifyBadge_segDisplayPutStr
 22580                           
 22581                           ;main.c: 151: nullifyBadge_segDisplayForceUpdate(&badge_inst);
 22582  13C3  3020               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 22583  13C4  31A6  2615         	fcall	_nullifyBadge_segDisplayForceUpdate
 22584  13C6  0008               	return
 22585  13C7                     __end_of_marquee:	
 22586                           
 22587                           	psect	text55
 22588  18BA                     __ptext55:	
 22589 ;; *************** function _strlen *****************
 22590 ;; Defined at:
 22591 ;;		line 4 in file "/Applications/microchip/xc8/v1.42/sources/common/strlen.c"
 22592 ;; Parameters:    Size  Location     Type
 22593 ;;  s               2    1[COMMON] PTR const unsigned char 
 22594 ;;		 -> STR_26(5), secret_inputs.inputs(20), secret_inputs(25), STR_25(5), 
 22595 ;;		 -> STR_24(5), STR_23(11), STR_22(13), STR_19(39), 
 22596 ;;		 -> STR_18(36), STR_17(34), STR_16(28), STR_15(21), 
 22597 ;;		 -> STR_14(19), STR_13(6), STR_12(8), STR_11(9), 
 22598 ;;		 -> STR_10(5), STR_9(18), STR_7(6), STR_6(10), 
 22599 ;;		 -> STR_5(6), STR_4(5), 
 22600 ;; Auto vars:     Size  Location     Type
 22601 ;;  cp              2    5[COMMON] PTR const unsigned char 
 22602 ;;		 -> STR_26(5), secret_inputs.inputs(20), secret_inputs(25), STR_25(5), 
 22603 ;;		 -> STR_24(5), STR_23(11), STR_22(13), STR_19(39), 
 22604 ;;		 -> STR_18(36), STR_17(34), STR_16(28), STR_15(21), 
 22605 ;;		 -> STR_14(19), STR_13(6), STR_12(8), STR_11(9), 
 22606 ;;		 -> STR_10(5), STR_9(18), STR_7(6), STR_6(10), 
 22607 ;;		 -> STR_5(6), STR_4(5), 
 22608 ;; Return value:  Size  Location     Type
 22609 ;;                  2    1[COMMON] unsigned int 
 22610 ;; Registers used:
 22611 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 22612 ;; Tracked objects:
 22613 ;;		On entry : 0/0
 22614 ;;		On exit  : 0/0
 22615 ;;		Unchanged: 0/0
 22616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22620 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22621 ;;Total ram usage:        6 bytes
 22622 ;; Hardware stack levels used:    1
 22623 ;; Hardware stack levels required when called:    4
 22624 ;; This function calls:
 22625 ;;		Nothing
 22626 ;; This function is called by:
 22627 ;;		_marquee_speedy
 22628 ;;		_marquee
 22629 ;;		_secret_check
 22630 ;; This function uses a non-reentrant model
 22631 ;;
 22632                           
 22633                           
 22634                           ;psect for function _strlen
 22635  18BA                     _strlen:	
 22636                           
 22637                           ;incstack = 0
 22638                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 22639  18BA  0872               	movf	strlen@s+1,w
 22640  18BB  00F6               	movwf	strlen@cp+1
 22641  18BC  0871               	movf	strlen@s,w
 22642  18BD  00F5               	movwf	strlen@cp
 22643  18BE                     l6431:	
 22644  18BE  0875               	movf	strlen@cp,w
 22645  18BF  0084               	movwf	4
 22646  18C0  0876               	movf	strlen@cp+1,w
 22647  18C1  0085               	movwf	5
 22648  18C2  0012               	moviw fsr0++
 22649  18C3  1903               	btfsc	3,2
 22650  18C4  28CA               	goto	l6433
 22651  18C5  3001               	movlw	1
 22652  18C6  07F5               	addwf	strlen@cp,f
 22653  18C7  3000               	movlw	0
 22654  18C8  3DF6               	addwfc	strlen@cp+1,f
 22655  18C9  28BE               	goto	l6431
 22656  18CA                     l6433:	
 22657  18CA  0971               	comf	strlen@s,w
 22658  18CB  00F3               	movwf	??_strlen
 22659  18CC  0972               	comf	strlen@s+1,w
 22660  18CD  00F4               	movwf	??_strlen+1
 22661  18CE  0AF3               	incf	??_strlen,f
 22662  18CF  1903               	skipnz
 22663  18D0  0AF4               	incf	??_strlen+1,f
 22664  18D1  0875               	movf	strlen@cp,w
 22665  18D2  0773               	addwf	??_strlen,w
 22666  18D3  00F1               	movwf	?_strlen
 22667  18D4  0876               	movf	strlen@cp+1,w
 22668  18D5  3D74               	addwfc	??_strlen+1,w
 22669  18D6  00F2               	movwf	?_strlen+1
 22670  18D7  0008               	return
 22671  18D8                     __end_of_strlen:	
 22672                           
 22673                           	psect	text56
 22674  265D                     __ptext56:	
 22675 ;; *************** function _nullifyBadge_segDisplayPutStr *****************
 22676 ;; Defined at:
 22677 ;;		line 113 in file "nullifyBadge.c"
 22678 ;; Parameters:    Size  Location     Type
 22679 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 22680 ;;		 -> badge_inst(18), 
 22681 ;;  str             2   23[BANK0 ] PTR unsigned char 
 22682 ;;		 -> flashy_Main@hit_counter(6), STR_20(5), STR_19(39), STR_18(36), 
 22683 ;;		 -> STR_17(34), STR_16(28), STR_15(21), STR_14(19), 
 22684 ;;		 -> STR_13(6), STR_12(8), STR_11(9), STR_10(5), 
 22685 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 22686 ;;		 -> marquee@display_string(5), marquee_speedy@display_string(5), 
 22687 ;; Auto vars:     Size  Location     Type
 22688 ;;  badge           1   25[BANK0 ] PTR struct t_nullifyBadg
 22689 ;;		 -> badge_inst(18), 
 22690 ;; Return value:  Size  Location     Type
 22691 ;;                  1    wreg      void 
 22692 ;; Registers used:
 22693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22694 ;; Tracked objects:
 22695 ;;		On entry : 0/0
 22696 ;;		On exit  : 0/0
 22697 ;;		Unchanged: 0/0
 22698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22703 ;;Total ram usage:        3 bytes
 22704 ;; Hardware stack levels used:    1
 22705 ;; Hardware stack levels required when called:    8
 22706 ;; This function calls:
 22707 ;;		_displayL2_PutStr
 22708 ;; This function is called by:
 22709 ;;		_marquee_speedy
 22710 ;;		_marquee
 22711 ;;		_menu_display_option
 22712 ;;		_flashy_display_option
 22713 ;;		_flashy_Main
 22714 ;; This function uses a non-reentrant model
 22715 ;;
 22716                           
 22717                           
 22718                           ;psect for function _nullifyBadge_segDisplayPutStr
 22719  265D                     _nullifyBadge_segDisplayPutStr:	
 22720                           
 22721                           ;incstack = 0
 22722                           ; Regs used in _nullifyBadge_segDisplayPutStr: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 22723                           ;nullifyBadge_segDisplayPutStr@badge stored from wreg
 22724  265D  0020               	movlb	0	; select bank0
 22725  265E  00B9               	movwf	nullifyBadge_segDisplayPutStr@badge
 22726                           
 22727                           ;nullifyBadge.c: 114: displayL2_PutStr(&badge->display, str);
 22728  265F  0838               	movf	nullifyBadge_segDisplayPutStr@str+1,w
 22729  2660  00B1               	movwf	displayL2_PutStr@str+1
 22730  2661  0837               	movf	nullifyBadge_segDisplayPutStr@str,w
 22731  2662  00B0               	movwf	displayL2_PutStr@str
 22732  2663  0839               	movf	nullifyBadge_segDisplayPutStr@badge,w
 22733  2664  3199  217F         	fcall	_displayL2_PutStr
 22734  2666  0008               	return
 22735  2667                     __end_of_nullifyBadge_segDisplayPutStr:	
 22736                           
 22737                           	psect	text57
 22738  197F                     __ptext57:	
 22739 ;; *************** function _displayL2_PutStr *****************
 22740 ;; Defined at:
 22741 ;;		line 55 in file "nullifyBadge_displayL2.c"
 22742 ;; Parameters:    Size  Location     Type
 22743 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22744 ;;		 -> badge_inst(18), 
 22745 ;;  str             2   16[BANK0 ] PTR unsigned char 
 22746 ;;		 -> flashy_Main@hit_counter(6), STR_20(5), STR_19(39), STR_18(36), 
 22747 ;;		 -> STR_17(34), STR_16(28), STR_15(21), STR_14(19), 
 22748 ;;		 -> STR_13(6), STR_12(8), STR_11(9), STR_10(5), 
 22749 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 22750 ;;		 -> STR_3(5), marquee@display_string(5), marquee_speedy@display_string(5), 
 22751 ;; Auto vars:     Size  Location     Type
 22752 ;;  display         1   21[BANK0 ] PTR struct t_nullifyDisp
 22753 ;;		 -> badge_inst(18), 
 22754 ;;  k               1   22[BANK0 ] unsigned char 
 22755 ;; Return value:  Size  Location     Type
 22756 ;;                  1    wreg      void 
 22757 ;; Registers used:
 22758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22759 ;; Tracked objects:
 22760 ;;		On entry : 0/0
 22761 ;;		On exit  : 0/0
 22762 ;;		Unchanged: 0/0
 22763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22764 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22766 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22767 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22768 ;;Total ram usage:        7 bytes
 22769 ;; Hardware stack levels used:    1
 22770 ;; Hardware stack levels required when called:    7
 22771 ;; This function calls:
 22772 ;;		_displayL2_PutChar
 22773 ;; This function is called by:
 22774 ;;		_nullifyBadge_segDisplayPutStr
 22775 ;;		_displayL2_EraseSegDisplay
 22776 ;; This function uses a non-reentrant model
 22777 ;;
 22778                           
 22779                           
 22780                           ;psect for function _displayL2_PutStr
 22781  197F                     _displayL2_PutStr:	
 22782                           
 22783                           ;incstack = 0
 22784                           ; Regs used in _displayL2_PutStr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22785                           ;displayL2_PutStr@display stored from wreg
 22786  197F  0020               	movlb	0	; select bank0
 22787  1980  00B5               	movwf	displayL2_PutStr@display
 22788                           
 22789                           ;nullifyBadge_displayL2.c: 57: u8 k = 0;
 22790  1981  01B6               	clrf	displayL2_PutStr@k
 22791  1982                     l6405:	
 22792                           ;nullifyBadge_displayL2.c: 59: while (str[k] != '\0') {
 22793                           
 22794  1982  0831               	movf	displayL2_PutStr@str+1,w
 22795  1983  00B3               	movwf	??_displayL2_PutStr+1
 22796  1984  0830               	movf	displayL2_PutStr@str,w
 22797  1985  00B2               	movwf	??_displayL2_PutStr
 22798  1986  0836               	movf	displayL2_PutStr@k,w
 22799  1987  0732               	addwf	??_displayL2_PutStr,w
 22800  1988  0084               	movwf	4
 22801  1989  0833               	movf	??_displayL2_PutStr+1,w
 22802  198A  1803               	skipnc
 22803  198B  0A33               	incf	??_displayL2_PutStr+1,w
 22804  198C  0085               	movwf	5
 22805  198D  0012               	moviw fsr0++
 22806  198E  1903               	btfsc	3,2
 22807  198F  0008               	return
 22808                           
 22809                           ;nullifyBadge_displayL2.c: 60: displayL2_PutChar(display, str[k]);
 22810  1990  0831               	movf	displayL2_PutStr@str+1,w
 22811  1991  00B3               	movwf	??_displayL2_PutStr+1
 22812  1992  0830               	movf	displayL2_PutStr@str,w
 22813  1993  00B2               	movwf	??_displayL2_PutStr
 22814  1994  0836               	movf	displayL2_PutStr@k,w
 22815  1995  0732               	addwf	??_displayL2_PutStr,w
 22816  1996  0084               	movwf	4
 22817  1997  0833               	movf	??_displayL2_PutStr+1,w
 22818  1998  1803               	skipnc
 22819  1999  0A33               	incf	??_displayL2_PutStr+1,w
 22820  199A  0085               	movwf	5
 22821  199B  0800               	movf	0,w	;code access
 22822  199C  00B4               	movwf	??_displayL2_PutStr+2
 22823  199D  0834               	movf	??_displayL2_PutStr+2,w
 22824  199E  00AA               	movwf	displayL2_PutChar@c
 22825  199F  0835               	movf	displayL2_PutStr@display,w
 22826  19A0  319D  258E  3199   	fcall	_displayL2_PutChar
 22827                           
 22828                           ;nullifyBadge_displayL2.c: 61: k++;
 22829  19A3  3001               	movlw	1
 22830  19A4  0020               	movlb	0	; select bank0
 22831  19A5  00B2               	movwf	??_displayL2_PutStr
 22832  19A6  0832               	movf	??_displayL2_PutStr,w
 22833  19A7  07B6               	addwf	displayL2_PutStr@k,f
 22834  19A8  2982               	goto	l6405
 22835  19A9                     __end_of_displayL2_PutStr:	
 22836                           
 22837                           	psect	text58
 22838  1D8E                     __ptext58:	
 22839 ;; *************** function _displayL2_PutChar *****************
 22840 ;; Defined at:
 22841 ;;		line 38 in file "nullifyBadge_displayL2.c"
 22842 ;; Parameters:    Size  Location     Type
 22843 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22844 ;;		 -> badge_inst(18), 
 22845 ;;  c               1   10[BANK0 ] unsigned char 
 22846 ;; Auto vars:     Size  Location     Type
 22847 ;;  display         1   15[BANK0 ] PTR struct t_nullifyDisp
 22848 ;;		 -> badge_inst(18), 
 22849 ;;  k               1   14[BANK0 ] unsigned char 
 22850 ;; Return value:  Size  Location     Type
 22851 ;;                  1    wreg      void 
 22852 ;; Registers used:
 22853 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22854 ;; Tracked objects:
 22855 ;;		On entry : 0/0
 22856 ;;		On exit  : 0/0
 22857 ;;		Unchanged: 0/0
 22858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22859 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22860 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22861 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22862 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22863 ;;Total ram usage:        6 bytes
 22864 ;; Hardware stack levels used:    1
 22865 ;; Hardware stack levels required when called:    6
 22866 ;; This function calls:
 22867 ;;		_displayL1_SetSegChar
 22868 ;; This function is called by:
 22869 ;;		_displayL2_PutStr
 22870 ;;		_nullifyBadge_segDisplayPutChar
 22871 ;; This function uses a non-reentrant model
 22872 ;;
 22873                           
 22874                           
 22875                           ;psect for function _displayL2_PutChar
 22876  1D8E                     _displayL2_PutChar:	
 22877                           
 22878                           ;incstack = 0
 22879                           ; Regs used in _displayL2_PutChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22880                           ;displayL2_PutChar@display stored from wreg
 22881  1D8E  0020               	movlb	0	; select bank0
 22882  1D8F  00AF               	movwf	displayL2_PutChar@display
 22883                           
 22884                           ;nullifyBadge_displayL2.c: 40: display->charVect[0] = display->charVect[1];
 22885  1D90  0A2F               	incf	displayL2_PutChar@display,w
 22886  1D91  0086               	movwf	6
 22887  1D92  3001               	movlw	1	; select bank2/3
 22888  1D93  0087               	movwf	7
 22889  1D94  0801               	movf	1,w
 22890  1D95  00AB               	movwf	??_displayL2_PutChar
 22891  1D96  082F               	movf	displayL2_PutChar@display,w
 22892  1D97  0086               	movwf	6
 22893  1D98  3001               	movlw	1	; select bank2/3
 22894  1D99  0087               	movwf	7
 22895  1D9A  082B               	movf	??_displayL2_PutChar,w
 22896  1D9B  0081               	movwf	1
 22897                           
 22898                           ;nullifyBadge_displayL2.c: 41: display->charVect[1] = display->charVect[2];
 22899  1D9C  082F               	movf	displayL2_PutChar@display,w
 22900  1D9D  3E02               	addlw	2
 22901  1D9E  0086               	movwf	6
 22902  1D9F  3001               	movlw	1	; select bank2/3
 22903  1DA0  0087               	movwf	7
 22904  1DA1  0801               	movf	1,w
 22905  1DA2  00AB               	movwf	??_displayL2_PutChar
 22906  1DA3  0A2F               	incf	displayL2_PutChar@display,w
 22907  1DA4  0086               	movwf	6
 22908  1DA5  3001               	movlw	1	; select bank2/3
 22909  1DA6  0087               	movwf	7
 22910  1DA7  082B               	movf	??_displayL2_PutChar,w
 22911  1DA8  0081               	movwf	1
 22912                           
 22913                           ;nullifyBadge_displayL2.c: 42: display->charVect[2] = display->charVect[3];
 22914  1DA9  082F               	movf	displayL2_PutChar@display,w
 22915  1DAA  3E03               	addlw	3
 22916  1DAB  0086               	movwf	6
 22917  1DAC  3001               	movlw	1	; select bank2/3
 22918  1DAD  0087               	movwf	7
 22919  1DAE  0801               	movf	1,w
 22920  1DAF  00AB               	movwf	??_displayL2_PutChar
 22921  1DB0  082F               	movf	displayL2_PutChar@display,w
 22922  1DB1  3E02               	addlw	2
 22923  1DB2  0086               	movwf	6
 22924  1DB3  3001               	movlw	1	; select bank2/3
 22925  1DB4  0087               	movwf	7
 22926  1DB5  082B               	movf	??_displayL2_PutChar,w
 22927  1DB6  0081               	movwf	1
 22928                           
 22929                           ;nullifyBadge_displayL2.c: 45: display->charVect[3] = c;
 22930  1DB7  082A               	movf	displayL2_PutChar@c,w
 22931  1DB8  00AB               	movwf	??_displayL2_PutChar
 22932  1DB9  082F               	movf	displayL2_PutChar@display,w
 22933  1DBA  3E03               	addlw	3
 22934  1DBB  0086               	movwf	6
 22935  1DBC  3001               	movlw	1	; select bank2/3
 22936  1DBD  0087               	movwf	7
 22937  1DBE  082B               	movf	??_displayL2_PutChar,w
 22938  1DBF  0081               	movwf	1
 22939                           
 22940                           ;nullifyBadge_displayL2.c: 48: u8 k = 0;
 22941  1DC0  01AE               	clrf	displayL2_PutChar@k
 22942                           
 22943                           ;nullifyBadge_displayL2.c: 49: for (k = 0; k < 4; k++) {
 22944  1DC1  01AE               	clrf	displayL2_PutChar@k
 22945  1DC2                     L12:	
 22946  1DC2  3004               	movlw	4
 22947  1DC3  022E               	subwf	displayL2_PutChar@k,w
 22948  1DC4  1803               	btfsc	3,0
 22949  1DC5  0008               	return
 22950                           
 22951                           ;nullifyBadge_displayL2.c: 50: displayL1_SetSegChar(&display->display_l1, display->charV
      +                          ect[k], k);
 22952  1DC6  082E               	movf	displayL2_PutChar@k,w
 22953  1DC7  072F               	addwf	displayL2_PutChar@display,w
 22954  1DC8  00AB               	movwf	??_displayL2_PutChar
 22955  1DC9  082B               	movf	??_displayL2_PutChar,w
 22956  1DCA  0086               	movwf	6
 22957  1DCB  3001               	movlw	1	; select bank2/3
 22958  1DCC  0087               	movwf	7
 22959  1DCD  0801               	movf	1,w
 22960  1DCE  00AC               	movwf	??_displayL2_PutChar+1
 22961  1DCF  082C               	movf	??_displayL2_PutChar+1,w
 22962  1DD0  00A0               	movwf	displayL1_SetSegChar@c
 22963  1DD1  082E               	movf	displayL2_PutChar@k,w
 22964  1DD2  00AD               	movwf	??_displayL2_PutChar+2
 22965  1DD3  082D               	movf	??_displayL2_PutChar+2,w
 22966  1DD4  00A1               	movwf	displayL1_SetSegChar@charPos
 22967  1DD5  082F               	movf	displayL2_PutChar@display,w
 22968  1DD6  3E07               	addlw	7
 22969  1DD7  319B  23B5  319D   	fcall	_displayL1_SetSegChar
 22970  1DDA  3001               	movlw	1
 22971  1DDB  0020               	movlb	0	; select bank0
 22972  1DDC  00AB               	movwf	??_displayL2_PutChar
 22973  1DDD  082B               	movf	??_displayL2_PutChar,w
 22974  1DDE  07AE               	addwf	displayL2_PutChar@k,f
 22975  1DDF  2DC2               	goto	L12
 22976  1DE0                     __end_of_displayL2_PutChar:	
 22977                           
 22978                           	psect	text59
 22979  1BB5                     __ptext59:	
 22980 ;; *************** function _displayL1_SetSegChar *****************
 22981 ;; Defined at:
 22982 ;;		line 18 in file "nullifyBadge_displayL1.c"
 22983 ;; Parameters:    Size  Location     Type
 22984 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22985 ;;		 -> badge_inst(18), 
 22986 ;;  c               1    0[BANK0 ] unsigned char 
 22987 ;;  charPos         1    1[BANK0 ] unsigned char 
 22988 ;; Auto vars:     Size  Location     Type
 22989 ;;  display         1    7[BANK0 ] PTR struct t_nullifyDisp
 22990 ;;		 -> badge_inst(18), 
 22991 ;;  charData        2    8[BANK0 ] unsigned int 
 22992 ;;  dispDataVect    1    6[BANK0 ] unsigned char 
 22993 ;; Return value:  Size  Location     Type
 22994 ;;                  1    wreg      void 
 22995 ;; Registers used:
 22996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22997 ;; Tracked objects:
 22998 ;;		On entry : 0/0
 22999 ;;		On exit  : 0/0
 23000 ;;		Unchanged: 0/0
 23001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23002 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23003 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23004 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23005 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23006 ;;Total ram usage:       10 bytes
 23007 ;; Hardware stack levels used:    1
 23008 ;; Hardware stack levels required when called:    5
 23009 ;; This function calls:
 23010 ;;		_displayCharReverse
 23011 ;; This function is called by:
 23012 ;;		_displayL2_PutChar
 23013 ;;		_nullifyBadge_segDisplayPutCharPos
 23014 ;;		_displayL2_PrintChar
 23015 ;; This function uses a non-reentrant model
 23016 ;;
 23017                           
 23018                           
 23019                           ;psect for function _displayL1_SetSegChar
 23020  1BB5                     _displayL1_SetSegChar:	
 23021                           
 23022                           ;incstack = 0
 23023                           ; Regs used in _displayL1_SetSegChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23024                           ;displayL1_SetSegChar@display stored from wreg
 23025  1BB5  0020               	movlb	0	; select bank0
 23026  1BB6  00A7               	movwf	displayL1_SetSegChar@display
 23027                           
 23028                           ;nullifyBadge_displayL1.c: 23: u16 charData = asciiCharTableLookup[(u8) c];
 23029  1BB7  0820               	movf	displayL1_SetSegChar@c,w
 23030  1BB8  00A2               	movwf	??_displayL1_SetSegChar
 23031  1BB9  01A3               	clrf	??_displayL1_SetSegChar+1
 23032  1BBA  35A2               	lslf	??_displayL1_SetSegChar,f
 23033  1BBB  0DA3               	rlf	??_displayL1_SetSegChar+1,f
 23034  1BBC  30F0               	movlw	240
 23035  1BBD  00A4               	movwf	??_displayL1_SetSegChar+2
 23036  1BBE  3026               	movlw	38
 23037  1BBF  00A5               	movwf	??_displayL1_SetSegChar+3
 23038  1BC0  0822               	movf	??_displayL1_SetSegChar,w
 23039  1BC1  0724               	addwf	??_displayL1_SetSegChar+2,w
 23040  1BC2  0086               	movwf	6
 23041  1BC3  0823               	movf	??_displayL1_SetSegChar+1,w
 23042  1BC4  3D25               	addwfc	??_displayL1_SetSegChar+3,w
 23043  1BC5  0087               	movwf	7
 23044  1BC6  3F40               	moviw [0]fsr1
 23045  1BC7  00A8               	movwf	displayL1_SetSegChar@charData
 23046  1BC8  3F41               	moviw [1]fsr1
 23047  1BC9  00A9               	movwf	displayL1_SetSegChar@charData+1
 23048                           
 23049                           ;nullifyBadge_displayL1.c: 29: if (charPos & 0x1) {
 23050  1BCA  1C21               	btfss	displayL1_SetSegChar@charPos,0
 23051  1BCB  2BD7               	goto	l6343
 23052                           
 23053                           ;nullifyBadge_displayL1.c: 30: charData = displayCharReverse(charData);
 23054  1BCC  0829               	movf	displayL1_SetSegChar@charData+1,w
 23055  1BCD  00F2               	movwf	displayCharReverse@cVal+1
 23056  1BCE  0828               	movf	displayL1_SetSegChar@charData,w
 23057  1BCF  00F1               	movwf	displayCharReverse@cVal
 23058  1BD0  3199  21D6         	fcall	_displayCharReverse
 23059  1BD2  0872               	movf	?_displayCharReverse+1,w
 23060  1BD3  0020               	movlb	0	; select bank0
 23061  1BD4  00A9               	movwf	displayL1_SetSegChar@charData+1
 23062  1BD5  0871               	movf	?_displayCharReverse,w
 23063  1BD6  00A8               	movwf	displayL1_SetSegChar@charData
 23064  1BD7                     l6343:	
 23065                           
 23066                           ;nullifyBadge_displayL1.c: 31: }
 23067                           ;nullifyBadge_displayL1.c: 61: u8 dispDataVectBaseIdx = 8 - ( charPos << 1 );
 23068  1BD7  3521               	lslf	displayL1_SetSegChar@charPos,w
 23069  1BD8  3AFF               	xorlw	255
 23070  1BD9  3E01               	addlw	1
 23071  1BDA  3E08               	addlw	8
 23072  1BDB  00A2               	movwf	??_displayL1_SetSegChar
 23073  1BDC  0822               	movf	??_displayL1_SetSegChar,w
 23074  1BDD  00A6               	movwf	displayL1_SetSegChar@dispDataVectBaseIdx
 23075                           
 23076                           ;nullifyBadge_displayL1.c: 64: display->displayVect[dispDataVectBaseIdx] = (u8) (charDat
      +                          a >> 8);
 23077  1BDE  0829               	movf	displayL1_SetSegChar@charData+1,w
 23078  1BDF  00A2               	movwf	??_displayL1_SetSegChar
 23079  1BE0  0826               	movf	displayL1_SetSegChar@dispDataVectBaseIdx,w
 23080  1BE1  0727               	addwf	displayL1_SetSegChar@display,w
 23081  1BE2  00A3               	movwf	??_displayL1_SetSegChar+1
 23082  1BE3  0823               	movf	??_displayL1_SetSegChar+1,w
 23083  1BE4  0086               	movwf	6
 23084  1BE5  3001               	movlw	1	; select bank2/3
 23085  1BE6  0087               	movwf	7
 23086  1BE7  0822               	movf	??_displayL1_SetSegChar,w
 23087  1BE8  0081               	movwf	1
 23088                           
 23089                           ;nullifyBadge_displayL1.c: 67: display->displayVect[dispDataVectBaseIdx+1] = (u8) (charD
      +                          ata & 0xFF);
 23090  1BE9  0828               	movf	displayL1_SetSegChar@charData,w
 23091  1BEA  00A2               	movwf	??_displayL1_SetSegChar
 23092  1BEB  0826               	movf	displayL1_SetSegChar@dispDataVectBaseIdx,w
 23093  1BEC  3E01               	addlw	1
 23094  1BED  0727               	addwf	displayL1_SetSegChar@display,w
 23095  1BEE  00A3               	movwf	??_displayL1_SetSegChar+1
 23096  1BEF  0823               	movf	??_displayL1_SetSegChar+1,w
 23097  1BF0  0086               	movwf	6
 23098  1BF1  3001               	movlw	1	; select bank2/3
 23099  1BF2  0087               	movwf	7
 23100  1BF3  0822               	movf	??_displayL1_SetSegChar,w
 23101  1BF4  0081               	movwf	1
 23102  1BF5  0008               	return
 23103  1BF6                     __end_of_displayL1_SetSegChar:	
 23104                           
 23105                           	psect	text60
 23106  19D6                     __ptext60:	
 23107 ;; *************** function _displayCharReverse *****************
 23108 ;; Defined at:
 23109 ;;		line 105 in file "nullifyBadge_displayL1.c"
 23110 ;; Parameters:    Size  Location     Type
 23111 ;;  cVal            2    1[COMMON] unsigned int 
 23112 ;; Auto vars:     Size  Location     Type
 23113 ;;  k               1   11[COMMON] unsigned char 
 23114 ;;  retValUpperR    1   10[COMMON] unsigned char 
 23115 ;;  retValUpper     1    9[COMMON] unsigned char 
 23116 ;;  retValLower     1    8[COMMON] unsigned char 
 23117 ;; Return value:  Size  Location     Type
 23118 ;;                  2    1[COMMON] unsigned int 
 23119 ;; Registers used:
 23120 ;;		wreg, status,2, status,0
 23121 ;; Tracked objects:
 23122 ;;		On entry : 0/0
 23123 ;;		On exit  : 0/0
 23124 ;;		Unchanged: 0/0
 23125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23127 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23128 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23129 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23130 ;;Total ram usage:       11 bytes
 23131 ;; Hardware stack levels used:    1
 23132 ;; Hardware stack levels required when called:    4
 23133 ;; This function calls:
 23134 ;;		Nothing
 23135 ;; This function is called by:
 23136 ;;		_displayL1_SetSegChar
 23137 ;; This function uses a non-reentrant model
 23138 ;;
 23139                           
 23140                           
 23141                           ;psect for function _displayCharReverse
 23142  19D6                     _displayCharReverse:	
 23143                           
 23144                           ;nullifyBadge_displayL1.c: 106: u8 retValUpper, retValLower, retValUpperRev;
 23145                           ;nullifyBadge_displayL1.c: 108: u8 k;
 23146                           ;nullifyBadge_displayL1.c: 111: retValUpper = cVal >> 8;
 23147                           
 23148                           ;incstack = 0
 23149                           ; Regs used in _displayCharReverse: [wreg+status,2+status,0]
 23150  19D6  0872               	movf	displayCharReverse@cVal+1,w
 23151  19D7  00F3               	movwf	??_displayCharReverse
 23152  19D8  0873               	movf	??_displayCharReverse,w
 23153  19D9  00F9               	movwf	displayCharReverse@retValUpper
 23154                           
 23155                           ;nullifyBadge_displayL1.c: 112: retValLower = cVal & 0xFF;
 23156  19DA  0871               	movf	displayCharReverse@cVal,w
 23157  19DB  00F3               	movwf	??_displayCharReverse
 23158  19DC  0873               	movf	??_displayCharReverse,w
 23159  19DD  00F8               	movwf	displayCharReverse@retValLower
 23160                           
 23161                           ;nullifyBadge_displayL1.c: 115: retValUpperRev = 0;
 23162  19DE  01FA               	clrf	displayCharReverse@retValUpperRev
 23163                           
 23164                           ;nullifyBadge_displayL1.c: 117: for (k = 0; k < 7; k++) {
 23165  19DF  01FB               	clrf	displayCharReverse@k
 23166  19E0  3007               	movlw	7
 23167  19E1  027B               	subwf	displayCharReverse@k,w
 23168  19E2  1803               	btfsc	3,0
 23169  19E3  29F5               	goto	l6325
 23170  19E4                     l6317:	
 23171                           
 23172                           ;nullifyBadge_displayL1.c: 118: retValUpperRev |= (retValUpper & 0x1);
 23173  19E4  0879               	movf	displayCharReverse@retValUpper,w
 23174  19E5  3901               	andlw	1
 23175  19E6  00F3               	movwf	??_displayCharReverse
 23176  19E7  0873               	movf	??_displayCharReverse,w
 23177  19E8  04FA               	iorwf	displayCharReverse@retValUpperRev,f
 23178                           
 23179                           ;nullifyBadge_displayL1.c: 119: retValUpper >>= 1;
 23180  19E9  1003               	clrc
 23181  19EA  0CF9               	rrf	displayCharReverse@retValUpper,f
 23182                           
 23183                           ;nullifyBadge_displayL1.c: 120: retValUpperRev <<= 1;
 23184  19EB  1003               	clrc
 23185  19EC  0DFA               	rlf	displayCharReverse@retValUpperRev,f
 23186  19ED  3001               	movlw	1
 23187  19EE  00F3               	movwf	??_displayCharReverse
 23188  19EF  0873               	movf	??_displayCharReverse,w
 23189  19F0  07FB               	addwf	displayCharReverse@k,f
 23190  19F1  3007               	movlw	7
 23191  19F2  027B               	subwf	displayCharReverse@k,w
 23192  19F3  1C03               	skipc
 23193  19F4  29E4               	goto	l6317
 23194  19F5                     l6325:	
 23195                           
 23196                           ;nullifyBadge_displayL1.c: 121: }
 23197                           ;nullifyBadge_displayL1.c: 123: return (retValLower << 8) | (retValUpperRev);
 23198  19F5  087A               	movf	displayCharReverse@retValUpperRev,w
 23199  19F6  00F3               	movwf	??_displayCharReverse
 23200  19F7  01F4               	clrf	??_displayCharReverse+1
 23201  19F8  0878               	movf	displayCharReverse@retValLower,w
 23202  19F9  00F5               	movwf	??_displayCharReverse+2
 23203  19FA  01F6               	clrf	??_displayCharReverse+3
 23204  19FB  0875               	movf	??_displayCharReverse+2,w
 23205  19FC  00F6               	movwf	??_displayCharReverse+3
 23206  19FD  01F5               	clrf	??_displayCharReverse+2
 23207  19FE  0873               	movf	??_displayCharReverse,w
 23208  19FF  0475               	iorwf	??_displayCharReverse+2,w
 23209  1A00  00F1               	movwf	?_displayCharReverse
 23210  1A01  0874               	movf	??_displayCharReverse+1,w
 23211  1A02  0476               	iorwf	??_displayCharReverse+3,w
 23212  1A03  00F2               	movwf	?_displayCharReverse+1
 23213  1A04  0008               	return
 23214  1A05                     __end_of_displayCharReverse:	
 23215                           
 23216                           	psect	text61
 23217  2615                     __ptext61:	
 23218 ;; *************** function _nullifyBadge_segDisplayForceUpdate *****************
 23219 ;; Defined at:
 23220 ;;		line 108 in file "nullifyBadge.c"
 23221 ;; Parameters:    Size  Location     Type
 23222 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 23223 ;;		 -> badge_inst(18), 
 23224 ;; Auto vars:     Size  Location     Type
 23225 ;;  badge           1   11[BANK0 ] PTR struct t_nullifyBadg
 23226 ;;		 -> badge_inst(18), 
 23227 ;; Return value:  Size  Location     Type
 23228 ;;                  1    wreg      void 
 23229 ;; Registers used:
 23230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23231 ;; Tracked objects:
 23232 ;;		On entry : 0/0
 23233 ;;		On exit  : 0/0
 23234 ;;		Unchanged: 0/0
 23235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23239 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23240 ;;Total ram usage:        1 bytes
 23241 ;; Hardware stack levels used:    1
 23242 ;; Hardware stack levels required when called:    8
 23243 ;; This function calls:
 23244 ;;		_displayL2_ForceUpdate
 23245 ;; This function is called by:
 23246 ;;		_marquee_speedy
 23247 ;;		_marquee
 23248 ;;		_menu_display_option
 23249 ;;		_flashy_display_option
 23250 ;;		_flashy_Main
 23251 ;; This function uses a non-reentrant model
 23252 ;;
 23253                           
 23254                           
 23255                           ;psect for function _nullifyBadge_segDisplayForceUpdate
 23256  2615                     _nullifyBadge_segDisplayForceUpdate:	
 23257                           
 23258                           ;incstack = 0
 23259                           ; Regs used in _nullifyBadge_segDisplayForceUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+
      +                          pclath+cstack]
 23260                           ;nullifyBadge_segDisplayForceUpdate@badge stored from wreg
 23261  2615  0020               	movlb	0	; select bank0
 23262  2616  00AB               	movwf	nullifyBadge_segDisplayForceUpdate@badge
 23263                           
 23264                           ;nullifyBadge.c: 109: displayL2_ForceUpdate(&badge->display);
 23265  2617  082B               	movf	nullifyBadge_segDisplayForceUpdate@badge,w
 23266  2618  31A6  260F         	fcall	_displayL2_ForceUpdate
 23267  261A  0008               	return
 23268  261B                     __end_of_nullifyBadge_segDisplayForceUpdate:	
 23269                           
 23270                           	psect	text62
 23271  260F                     __ptext62:	
 23272 ;; *************** function _displayL2_ForceUpdate *****************
 23273 ;; Defined at:
 23274 ;;		line 79 in file "nullifyBadge_displayL2.c"
 23275 ;; Parameters:    Size  Location     Type
 23276 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23277 ;;		 -> badge_inst(18), 
 23278 ;; Auto vars:     Size  Location     Type
 23279 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 23280 ;;		 -> badge_inst(18), 
 23281 ;; Return value:  Size  Location     Type
 23282 ;;                  1    wreg      void 
 23283 ;; Registers used:
 23284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23285 ;; Tracked objects:
 23286 ;;		On entry : 0/0
 23287 ;;		On exit  : 0/0
 23288 ;;		Unchanged: 0/0
 23289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23294 ;;Total ram usage:        1 bytes
 23295 ;; Hardware stack levels used:    1
 23296 ;; Hardware stack levels required when called:    7
 23297 ;; This function calls:
 23298 ;;		_displayL1_Update
 23299 ;; This function is called by:
 23300 ;;		_nullifyBadge_segDisplayForceUpdate
 23301 ;; This function uses a non-reentrant model
 23302 ;;
 23303                           
 23304                           
 23305                           ;psect for function _displayL2_ForceUpdate
 23306  260F                     _displayL2_ForceUpdate:	
 23307                           
 23308                           ;incstack = 0
 23309                           ; Regs used in _displayL2_ForceUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23310                           ;displayL2_ForceUpdate@display stored from wreg
 23311  260F  00FB               	movwf	displayL2_ForceUpdate@display
 23312                           
 23313                           ;nullifyBadge_displayL2.c: 80: displayL1_Update(&display->display_l1);
 23314  2610  087B               	movf	displayL2_ForceUpdate@display,w
 23315  2611  3E07               	addlw	7
 23316  2612  31A7  275C         	fcall	_displayL1_Update
 23317  2614  0008               	return
 23318  2615                     __end_of_displayL2_ForceUpdate:	
 23319                           
 23320                           	psect	text63
 23321  19A9                     __ptext63:	
 23322 ;; *************** function ___lwmod *****************
 23323 ;; Defined at:
 23324 ;;		line 6 in file "/Applications/microchip/xc8/v1.42/sources/common/lwmod.c"
 23325 ;; Parameters:    Size  Location     Type
 23326 ;;  divisor         2    0[BANK0 ] unsigned int 
 23327 ;;  dividend        2    2[BANK0 ] unsigned int 
 23328 ;; Auto vars:     Size  Location     Type
 23329 ;;  counter         1   10[COMMON] unsigned char 
 23330 ;; Return value:  Size  Location     Type
 23331 ;;                  2    0[BANK0 ] unsigned int 
 23332 ;; Registers used:
 23333 ;;		wreg, status,2, status,0
 23334 ;; Tracked objects:
 23335 ;;		On entry : 0/0
 23336 ;;		On exit  : 0/0
 23337 ;;		Unchanged: 0/0
 23338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23339 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23341 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23342 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23343 ;;Total ram usage:        6 bytes
 23344 ;; Hardware stack levels used:    1
 23345 ;; Hardware stack levels required when called:    4
 23346 ;; This function calls:
 23347 ;;		Nothing
 23348 ;; This function is called by:
 23349 ;;		_marquee_speedy
 23350 ;;		_marquee
 23351 ;;		_led_roundabout
 23352 ;;		_led_curtain
 23353 ;;		_menu_display_option
 23354 ;;		_locked_Main
 23355 ;;		_sprintf
 23356 ;; This function uses a non-reentrant model
 23357 ;;
 23358                           
 23359                           
 23360                           ;psect for function ___lwmod
 23361  19A9                     ___lwmod:	
 23362                           
 23363                           ;incstack = 0
 23364                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 23365  19A9  0020               	movlb	0	; select bank0
 23366  19AA  0820               	movf	___lwmod@divisor,w
 23367  19AB  0421               	iorwf	___lwmod@divisor+1,w
 23368  19AC  1903               	btfsc	3,2
 23369  19AD  29D1               	goto	l6507
 23370  19AE  01FA               	clrf	___lwmod@counter
 23371  19AF  0AFA               	incf	___lwmod@counter,f
 23372  19B0                     l6497:	
 23373  19B0  1BA1               	btfsc	___lwmod@divisor+1,7
 23374  19B1  29BC               	goto	l6499
 23375  19B2  3001               	movlw	1
 23376  19B3                     u3555:	
 23377  19B3  35A0               	lslf	___lwmod@divisor,f
 23378  19B4  0DA1               	rlf	___lwmod@divisor+1,f
 23379  19B5  0B89               	decfsz	9,f
 23380  19B6  29B3               	goto	u3555
 23381  19B7  3001               	movlw	1
 23382  19B8  00F9               	movwf	??___lwmod
 23383  19B9  0879               	movf	??___lwmod,w
 23384  19BA  07FA               	addwf	___lwmod@counter,f
 23385  19BB  29B0               	goto	l6497
 23386  19BC                     l6499:	
 23387  19BC  0821               	movf	___lwmod@divisor+1,w
 23388  19BD  0223               	subwf	___lwmod@dividend+1,w
 23389  19BE  1D03               	skipz
 23390  19BF  29C2               	goto	u3575
 23391  19C0  0820               	movf	___lwmod@divisor,w
 23392  19C1  0222               	subwf	___lwmod@dividend,w
 23393  19C2                     u3575:	
 23394  19C2  1C03               	skipc
 23395  19C3  29C8               	goto	l6503
 23396  19C4  0820               	movf	___lwmod@divisor,w
 23397  19C5  02A2               	subwf	___lwmod@dividend,f
 23398  19C6  0821               	movf	___lwmod@divisor+1,w
 23399  19C7  3BA3               	subwfb	___lwmod@dividend+1,f
 23400  19C8                     l6503:	
 23401  19C8  3001               	movlw	1
 23402  19C9                     u3585:	
 23403  19C9  36A1               	lsrf	___lwmod@divisor+1,f
 23404  19CA  0CA0               	rrf	___lwmod@divisor,f
 23405  19CB  0B89               	decfsz	9,f
 23406  19CC  29C9               	goto	u3585
 23407  19CD  3001               	movlw	1
 23408  19CE  02FA               	subwf	___lwmod@counter,f
 23409  19CF  1D03               	btfss	3,2
 23410  19D0  29BC               	goto	l6499
 23411  19D1                     l6507:	
 23412  19D1  0823               	movf	___lwmod@dividend+1,w
 23413  19D2  00A1               	movwf	?___lwmod+1
 23414  19D3  0822               	movf	___lwmod@dividend,w
 23415  19D4  00A0               	movwf	?___lwmod
 23416  19D5  0008               	return
 23417  19D6                     __end_of___lwmod:	
 23418                           
 23419                           	psect	text64
 23420  1A9A                     __ptext64:	
 23421 ;; *************** function ___lwdiv *****************
 23422 ;; Defined at:
 23423 ;;		line 6 in file "/Applications/microchip/xc8/v1.42/sources/common/lwdiv.c"
 23424 ;; Parameters:    Size  Location     Type
 23425 ;;  divisor         2    1[COMMON] unsigned int 
 23426 ;;  dividend        2    3[COMMON] unsigned int 
 23427 ;; Auto vars:     Size  Location     Type
 23428 ;;  quotient        2    7[COMMON] unsigned int 
 23429 ;;  counter         1    6[COMMON] unsigned char 
 23430 ;; Return value:  Size  Location     Type
 23431 ;;                  2    1[COMMON] unsigned int 
 23432 ;; Registers used:
 23433 ;;		wreg, status,2, status,0
 23434 ;; Tracked objects:
 23435 ;;		On entry : 0/0
 23436 ;;		On exit  : 0/0
 23437 ;;		Unchanged: 0/0
 23438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23440 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23442 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23443 ;;Total ram usage:        8 bytes
 23444 ;; Hardware stack levels used:    1
 23445 ;; Hardware stack levels required when called:    4
 23446 ;; This function calls:
 23447 ;;		Nothing
 23448 ;; This function is called by:
 23449 ;;		_marquee_speedy
 23450 ;;		_marquee
 23451 ;;		_sprintf
 23452 ;; This function uses a non-reentrant model
 23453 ;;
 23454                           
 23455                           
 23456                           ;psect for function ___lwdiv
 23457  1A9A                     ___lwdiv:	
 23458                           
 23459                           ;incstack = 0
 23460                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 23461  1A9A  01F7               	clrf	___lwdiv@quotient
 23462  1A9B  01F8               	clrf	___lwdiv@quotient+1
 23463  1A9C  0871               	movf	___lwdiv@divisor,w
 23464  1A9D  0472               	iorwf	___lwdiv@divisor+1,w
 23465  1A9E  1903               	btfsc	3,2
 23466  1A9F  2AC9               	goto	l6485
 23467  1AA0  01F6               	clrf	___lwdiv@counter
 23468  1AA1  0AF6               	incf	___lwdiv@counter,f
 23469  1AA2                     l6473:	
 23470  1AA2  1BF2               	btfsc	___lwdiv@divisor+1,7
 23471  1AA3  2AAE               	goto	l6475
 23472  1AA4  3001               	movlw	1
 23473  1AA5                     u3485:	
 23474  1AA5  35F1               	lslf	___lwdiv@divisor,f
 23475  1AA6  0DF2               	rlf	___lwdiv@divisor+1,f
 23476  1AA7  0B89               	decfsz	9,f
 23477  1AA8  2AA5               	goto	u3485
 23478  1AA9  3001               	movlw	1
 23479  1AAA  00F5               	movwf	??___lwdiv
 23480  1AAB  0875               	movf	??___lwdiv,w
 23481  1AAC  07F6               	addwf	___lwdiv@counter,f
 23482  1AAD  2AA2               	goto	l6473
 23483  1AAE                     l6475:	
 23484  1AAE  3001               	movlw	1
 23485  1AAF                     u3505:	
 23486  1AAF  35F7               	lslf	___lwdiv@quotient,f
 23487  1AB0  0DF8               	rlf	___lwdiv@quotient+1,f
 23488  1AB1  0B89               	decfsz	9,f
 23489  1AB2  2AAF               	goto	u3505
 23490  1AB3  0872               	movf	___lwdiv@divisor+1,w
 23491  1AB4  0274               	subwf	___lwdiv@dividend+1,w
 23492  1AB5  1D03               	skipz
 23493  1AB6  2AB9               	goto	u3515
 23494  1AB7  0871               	movf	___lwdiv@divisor,w
 23495  1AB8  0273               	subwf	___lwdiv@dividend,w
 23496  1AB9                     u3515:	
 23497  1AB9  1C03               	skipc
 23498  1ABA  2AC0               	goto	l6481
 23499  1ABB  0871               	movf	___lwdiv@divisor,w
 23500  1ABC  02F3               	subwf	___lwdiv@dividend,f
 23501  1ABD  0872               	movf	___lwdiv@divisor+1,w
 23502  1ABE  3BF4               	subwfb	___lwdiv@dividend+1,f
 23503  1ABF  1477               	bsf	___lwdiv@quotient,0
 23504  1AC0                     l6481:	
 23505  1AC0  3001               	movlw	1
 23506  1AC1                     u3525:	
 23507  1AC1  36F2               	lsrf	___lwdiv@divisor+1,f
 23508  1AC2  0CF1               	rrf	___lwdiv@divisor,f
 23509  1AC3  0B89               	decfsz	9,f
 23510  1AC4  2AC1               	goto	u3525
 23511  1AC5  3001               	movlw	1
 23512  1AC6  02F6               	subwf	___lwdiv@counter,f
 23513  1AC7  1D03               	btfss	3,2
 23514  1AC8  2AAE               	goto	l6475
 23515  1AC9                     l6485:	
 23516  1AC9  0878               	movf	___lwdiv@quotient+1,w
 23517  1ACA  00F2               	movwf	?___lwdiv+1
 23518  1ACB  0877               	movf	___lwdiv@quotient,w
 23519  1ACC  00F1               	movwf	?___lwdiv
 23520  1ACD  0008               	return
 23521  1ACE                     __end_of___lwdiv:	
 23522                           
 23523                           	psect	text65
 23524  1862                     __ptext65:	
 23525 ;; *************** function _TMR0_Read16bitTimer *****************
 23526 ;; Defined at:
 23527 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 23528 ;; Parameters:    Size  Location     Type
 23529 ;;		None
 23530 ;; Auto vars:     Size  Location     Type
 23531 ;;  readVal         2    8[COMMON] unsigned int 
 23532 ;;  readValHigh     1   11[COMMON] unsigned char 
 23533 ;;  readValLow      1   10[COMMON] unsigned char 
 23534 ;; Return value:  Size  Location     Type
 23535 ;;                  2    1[COMMON] unsigned int 
 23536 ;; Registers used:
 23537 ;;		wreg, status,2, status,0
 23538 ;; Tracked objects:
 23539 ;;		On entry : 0/0
 23540 ;;		On exit  : 0/0
 23541 ;;		Unchanged: 0/0
 23542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23544 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23545 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23546 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23547 ;;Total ram usage:       11 bytes
 23548 ;; Hardware stack levels used:    1
 23549 ;; Hardware stack levels required when called:    4
 23550 ;; This function calls:
 23551 ;;		Nothing
 23552 ;; This function is called by:
 23553 ;;		_scheduler_TaskRun
 23554 ;;		_schedulerExecute
 23555 ;; This function uses a non-reentrant model
 23556 ;;
 23557                           
 23558                           
 23559                           ;psect for function _TMR0_Read16bitTimer
 23560  1862                     _TMR0_Read16bitTimer:	
 23561                           
 23562                           ;tmr0.c: 111: uint16_t readVal;
 23563                           ;tmr0.c: 112: uint8_t readValLow;
 23564                           ;tmr0.c: 113: uint8_t readValHigh;
 23565                           ;tmr0.c: 115: readValLow = TMR0L;
 23566                           
 23567                           ;incstack = 0
 23568                           ; Regs used in _TMR0_Read16bitTimer: [wreg+status,2+status,0]
 23569  1862  0020               	movlb	0	; select bank0
 23570  1863  0815               	movf	21,w	;volatile
 23571  1864  00F3               	movwf	??_TMR0_Read16bitTimer
 23572  1865  0873               	movf	??_TMR0_Read16bitTimer,w
 23573  1866  00FA               	movwf	TMR0_Read16bitTimer@readValLow
 23574                           
 23575                           ;tmr0.c: 116: readValHigh = TMR0H;
 23576  1867  0816               	movf	22,w	;volatile
 23577  1868  00F3               	movwf	??_TMR0_Read16bitTimer
 23578  1869  0873               	movf	??_TMR0_Read16bitTimer,w
 23579  186A  00FB               	movwf	TMR0_Read16bitTimer@readValHigh
 23580                           
 23581                           ;tmr0.c: 117: readVal = ((uint16_t)readValHigh << 8) + readValLow;
 23582  186B  087A               	movf	TMR0_Read16bitTimer@readValLow,w
 23583  186C  00F3               	movwf	??_TMR0_Read16bitTimer
 23584  186D  01F4               	clrf	??_TMR0_Read16bitTimer+1
 23585  186E  087B               	movf	TMR0_Read16bitTimer@readValHigh,w
 23586  186F  00F5               	movwf	??_TMR0_Read16bitTimer+2
 23587  1870  01F6               	clrf	??_TMR0_Read16bitTimer+3
 23588  1871  0875               	movf	??_TMR0_Read16bitTimer+2,w
 23589  1872  00F6               	movwf	??_TMR0_Read16bitTimer+3
 23590  1873  01F5               	clrf	??_TMR0_Read16bitTimer+2
 23591  1874  0873               	movf	??_TMR0_Read16bitTimer,w
 23592  1875  0775               	addwf	??_TMR0_Read16bitTimer+2,w
 23593  1876  00F8               	movwf	TMR0_Read16bitTimer@readVal
 23594  1877  0874               	movf	??_TMR0_Read16bitTimer+1,w
 23595  1878  3D76               	addwfc	??_TMR0_Read16bitTimer+3,w
 23596  1879  00F9               	movwf	TMR0_Read16bitTimer@readVal+1
 23597                           
 23598                           ;tmr0.c: 119: return readVal;
 23599  187A  0879               	movf	TMR0_Read16bitTimer@readVal+1,w
 23600  187B  00F2               	movwf	?_TMR0_Read16bitTimer+1
 23601  187C  0878               	movf	TMR0_Read16bitTimer@readVal,w
 23602  187D  00F1               	movwf	?_TMR0_Read16bitTimer
 23603  187E  0008               	return
 23604  187F                     __end_of_TMR0_Read16bitTimer:	
 23605                           
 23606                           	psect	text66
 23607  1E35                     __ptext66:	
 23608 ;; *************** function _nullifyBadge_platformInit *****************
 23609 ;; Defined at:
 23610 ;;		line 13 in file "nullifyBadge.c"
 23611 ;; Parameters:    Size  Location     Type
 23612 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 23613 ;;		 -> badge_inst(18), 
 23614 ;; Auto vars:     Size  Location     Type
 23615 ;;  badge           1   12[BANK0 ] PTR struct t_nullifyBadg
 23616 ;;		 -> badge_inst(18), 
 23617 ;; Return value:  Size  Location     Type
 23618 ;;                  1    wreg      void 
 23619 ;; Registers used:
 23620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23621 ;; Tracked objects:
 23622 ;;		On entry : 0/0
 23623 ;;		On exit  : 0/0
 23624 ;;		Unchanged: 0/0
 23625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23629 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23630 ;;Total ram usage:        1 bytes
 23631 ;; Hardware stack levels used:    1
 23632 ;; Hardware stack levels required when called:    9
 23633 ;; This function calls:
 23634 ;;		_OSCILLATOR_Initialize
 23635 ;;		_PIN_MANAGER_Initialize
 23636 ;;		_PWM1_Initialize
 23637 ;;		_PWM1_LoadDutyValue
 23638 ;;		_PWM2_Initialize
 23639 ;;		_PWM2_LoadDutyValue
 23640 ;;		_PWM5_Initialize
 23641 ;;		_PWM5_LoadDutyValue
 23642 ;;		_PWM6_Initialize
 23643 ;;		_PWM6_LoadDutyValue
 23644 ;;		_SPI1_Initialize
 23645 ;;		_SYSTEM_Initialize
 23646 ;;		_TMR0_Initialize
 23647 ;;		_TMR2_Initialize
 23648 ;;		_TMR4_Initialize
 23649 ;;		_displayL2_Initialize
 23650 ;; This function is called by:
 23651 ;;		_main
 23652 ;; This function uses a non-reentrant model
 23653 ;;
 23654                           
 23655                           
 23656                           ;psect for function _nullifyBadge_platformInit
 23657  1E35                     _nullifyBadge_platformInit:	
 23658                           
 23659                           ;incstack = 0
 23660                           ; Regs used in _nullifyBadge_platformInit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23661                           ;nullifyBadge_platformInit@badge stored from wreg
 23662  1E35  0020               	movlb	0	; select bank0
 23663  1E36  00AC               	movwf	nullifyBadge_platformInit@badge
 23664                           
 23665                           ;nullifyBadge.c: 15: SYSTEM_Initialize();
 23666  1E37  3199  2116  319E   	fcall	_SYSTEM_Initialize
 23667                           
 23668                           ;nullifyBadge.c: 16: OSCILLATOR_Initialize();
 23669  1E3A  31A6  2649  319E   	fcall	_OSCILLATOR_Initialize
 23670                           
 23671                           ;nullifyBadge.c: 19: TMR0_Initialize();
 23672  1E3D  3198  209C  319E   	fcall	_TMR0_Initialize
 23673                           
 23674                           ;nullifyBadge.c: 20: TMR2_Initialize();
 23675  1E40  31A6  2653  319E   	fcall	_TMR2_Initialize
 23676                           
 23677                           ;nullifyBadge.c: 21: TMR4_Initialize();
 23678  1E43  31A6  2692  319E   	fcall	_TMR4_Initialize
 23679                           
 23680                           ;nullifyBadge.c: 23: PIN_MANAGER_Initialize();
 23681  1E46  319D  25E0  319E   	fcall	_PIN_MANAGER_Initialize
 23682                           
 23683                           ;nullifyBadge.c: 24: PWM1_Initialize();
 23684  1E49  31A6  267C  319E   	fcall	_PWM1_Initialize
 23685                           
 23686                           ;nullifyBadge.c: 26: PWM2_Initialize();
 23687  1E4C  31A6  2687  319E   	fcall	_PWM2_Initialize
 23688                           
 23689                           ;nullifyBadge.c: 27: PWM5_Initialize();
 23690  1E4F  31A6  26A8  319E   	fcall	_PWM5_Initialize
 23691                           
 23692                           ;nullifyBadge.c: 28: PWM6_Initialize();
 23693  1E52  31A6  26B4  319E   	fcall	_PWM6_Initialize
 23694                           
 23695                           ;nullifyBadge.c: 29: SPI1_Initialize();
 23696  1E55  31A6  2627  319E   	fcall	_SPI1_Initialize
 23697                           
 23698                           ;nullifyBadge.c: 32: PWM1_LoadDutyValue(128);
 23699  1E58  3080               	movlw	128
 23700  1E59  00F1               	movwf	PWM1_LoadDutyValue@dutyValue
 23701  1E5A  3000               	movlw	0
 23702  1E5B  00F2               	movwf	PWM1_LoadDutyValue@dutyValue+1
 23703  1E5C  31A7  27A5  319E   	fcall	_PWM1_LoadDutyValue
 23704                           
 23705                           ;nullifyBadge.c: 44: do { LATBbits.LATB7 = 1; } while(0);
 23706  1E5F  0022               	movlb	2	; select bank2
 23707  1E60  178D               	bsf	13,7	;volatile
 23708                           
 23709                           ;nullifyBadge.c: 45: PWM2_LoadDutyValue(192);
 23710  1E61  30C0               	movlw	192
 23711  1E62  00F1               	movwf	PWM2_LoadDutyValue@dutyValue
 23712  1E63  3000               	movlw	0
 23713  1E64  00F2               	movwf	PWM2_LoadDutyValue@dutyValue+1
 23714  1E65  31A7  27BB  319E   	fcall	_PWM2_LoadDutyValue
 23715                           
 23716                           ;nullifyBadge.c: 50: PWM5_LoadDutyValue(gamma_table_256x1k[128]);
 23717  1E68  3000               	movlw	low ((_gamma_table_256x1k+256)| (0+32768))
 23718  1E69  0084               	movwf	4
 23719  1E6A  3091               	movlw	high ((_gamma_table_256x1k+256)| (0+32768))
 23720  1E6B  0085               	movwf	5
 23721  1E6C  3F00               	moviw [0]fsr0
 23722  1E6D  00F1               	movwf	PWM5_LoadDutyValue@dutyValue
 23723  1E6E  3F01               	moviw [1]fsr0
 23724  1E6F  00F2               	movwf	PWM5_LoadDutyValue@dutyValue+1
 23725  1E70  31A7  27D1  319E   	fcall	_PWM5_LoadDutyValue
 23726                           
 23727                           ;nullifyBadge.c: 51: PWM6_LoadDutyValue(gamma_table_256x1k[128]);
 23728  1E73  3000               	movlw	low ((_gamma_table_256x1k+256)| (0+32768))
 23729  1E74  0084               	movwf	4
 23730  1E75  3091               	movlw	high ((_gamma_table_256x1k+256)| (0+32768))
 23731  1E76  0085               	movwf	5
 23732  1E77  3F00               	moviw [0]fsr0
 23733  1E78  00F1               	movwf	PWM6_LoadDutyValue@dutyValue
 23734  1E79  3F01               	moviw [1]fsr0
 23735  1E7A  00F2               	movwf	PWM6_LoadDutyValue@dutyValue+1
 23736  1E7B  3192  2202  319E   	fcall	_PWM6_LoadDutyValue
 23737                           
 23738                           ;nullifyBadge.c: 54: displayL2_Initialize(&badge->display);
 23739  1E7E  0020               	movlb	0	; select bank0
 23740  1E7F  082C               	movf	nullifyBadge_platformInit@badge,w
 23741  1E80  3199  2137         	fcall	_displayL2_Initialize
 23742                           
 23743                           ;nullifyBadge.c: 57: badge->registeredHw = 0x0;
 23744  1E82  0020               	movlb	0	; select bank0
 23745  1E83  082C               	movf	nullifyBadge_platformInit@badge,w
 23746  1E84  3E11               	addlw	17
 23747  1E85  0086               	movwf	6
 23748  1E86  3001               	movlw	1	; select bank2/3
 23749  1E87  0087               	movwf	7
 23750  1E88  0181               	clrf	1
 23751  1E89  0008               	return
 23752  1E8A                     __end_of_nullifyBadge_platformInit:	
 23753                           
 23754                           	psect	text67
 23755  1937                     __ptext67:	
 23756 ;; *************** function _displayL2_Initialize *****************
 23757 ;; Defined at:
 23758 ;;		line 12 in file "nullifyBadge_displayL2.c"
 23759 ;; Parameters:    Size  Location     Type
 23760 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23761 ;;		 -> badge_inst(18), 
 23762 ;; Auto vars:     Size  Location     Type
 23763 ;;  display         1   11[BANK0 ] PTR struct t_nullifyDisp
 23764 ;;		 -> badge_inst(18), 
 23765 ;; Return value:  Size  Location     Type
 23766 ;;                  1    wreg      void 
 23767 ;; Registers used:
 23768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23769 ;; Tracked objects:
 23770 ;;		On entry : 0/0
 23771 ;;		On exit  : 0/0
 23772 ;;		Unchanged: 0/0
 23773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23777 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23778 ;;Total ram usage:        1 bytes
 23779 ;; Hardware stack levels used:    1
 23780 ;; Hardware stack levels required when called:    8
 23781 ;; This function calls:
 23782 ;;		_displayL1_Initialize
 23783 ;;		_memset
 23784 ;; This function is called by:
 23785 ;;		_nullifyBadge_platformInit
 23786 ;; This function uses a non-reentrant model
 23787 ;;
 23788                           
 23789                           
 23790                           ;psect for function _displayL2_Initialize
 23791  1937                     _displayL2_Initialize:	
 23792                           
 23793                           ;incstack = 0
 23794                           ; Regs used in _displayL2_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23795                           ;displayL2_Initialize@display stored from wreg
 23796  1937  0020               	movlb	0	; select bank0
 23797  1938  00AB               	movwf	displayL2_Initialize@display
 23798                           
 23799                           ;nullifyBadge_displayL2.c: 13: displayL1_Initialize(&display->display_l1);
 23800  1939  082B               	movf	displayL2_Initialize@display,w
 23801  193A  3E07               	addlw	7
 23802  193B  31A7  272C  3199   	fcall	_displayL1_Initialize
 23803                           
 23804                           ;nullifyBadge_displayL2.c: 14: memset(display->charVect, ' ', sizeof(display->charVect))
      +                          ;
 23805  193E  3020               	movlw	32
 23806  193F  00F1               	movwf	memset@c
 23807  1940  3000               	movlw	0
 23808  1941  00F2               	movwf	memset@c+1
 23809  1942  3004               	movlw	4
 23810  1943  00F3               	movwf	memset@n
 23811  1944  3000               	movlw	0
 23812  1945  00F4               	movwf	memset@n+1
 23813  1946  0020               	movlb	0	; select bank0
 23814  1947  082B               	movf	displayL2_Initialize@display,w
 23815  1948  3198  2011         	fcall	_memset
 23816                           
 23817                           ;nullifyBadge_displayL2.c: 15: display->dpVect = 0;
 23818  194A  0020               	movlb	0	; select bank0
 23819  194B  082B               	movf	displayL2_Initialize@display,w
 23820  194C  3E04               	addlw	4
 23821  194D  0086               	movwf	6
 23822  194E  3001               	movlw	1	; select bank2/3
 23823  194F  0087               	movwf	7
 23824  1950  0181               	clrf	1
 23825                           
 23826                           ;nullifyBadge_displayL2.c: 16: display->ledVect = 0;
 23827  1951  082B               	movf	displayL2_Initialize@display,w
 23828  1952  3E05               	addlw	5
 23829  1953  0086               	movwf	6
 23830  1954  3001               	movlw	1	; select bank2/3
 23831  1955  0087               	movwf	7
 23832  1956  3000               	movlw	0
 23833  1957  3FC0               	movwi [0]fsr1
 23834  1958  3FC1               	movwi [1]fsr1
 23835  1959  0008               	return
 23836  195A                     __end_of_displayL2_Initialize:	
 23837                           
 23838                           	psect	text68
 23839  272C                     __ptext68:	
 23840 ;; *************** function _displayL1_Initialize *****************
 23841 ;; Defined at:
 23842 ;;		line 13 in file "nullifyBadge_displayL1.c"
 23843 ;; Parameters:    Size  Location     Type
 23844 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23845 ;;		 -> badge_inst(18), 
 23846 ;; Auto vars:     Size  Location     Type
 23847 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 23848 ;;		 -> badge_inst(18), 
 23849 ;; Return value:  Size  Location     Type
 23850 ;;                  1    wreg      void 
 23851 ;; Registers used:
 23852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23853 ;; Tracked objects:
 23854 ;;		On entry : 0/0
 23855 ;;		On exit  : 0/0
 23856 ;;		Unchanged: 0/0
 23857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23861 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23862 ;;Total ram usage:        1 bytes
 23863 ;; Hardware stack levels used:    1
 23864 ;; Hardware stack levels required when called:    7
 23865 ;; This function calls:
 23866 ;;		_displayL1_Update
 23867 ;;		_memset
 23868 ;; This function is called by:
 23869 ;;		_displayL2_Initialize
 23870 ;; This function uses a non-reentrant model
 23871 ;;
 23872                           
 23873                           
 23874                           ;psect for function _displayL1_Initialize
 23875  272C                     _displayL1_Initialize:	
 23876                           
 23877                           ;incstack = 0
 23878                           ; Regs used in _displayL1_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23879                           ;displayL1_Initialize@display stored from wreg
 23880  272C  00FB               	movwf	displayL1_Initialize@display
 23881                           
 23882                           ;nullifyBadge_displayL1.c: 14: memset(display->displayVect, 0, sizeof(struct t_nullifyDi
      +                          splay_l1));
 23883  272D  3000               	movlw	0
 23884  272E  00F1               	movwf	memset@c
 23885  272F  00F2               	movwf	memset@c+1
 23886  2730  300A               	movlw	10
 23887  2731  00F3               	movwf	memset@n
 23888  2732  3000               	movlw	0
 23889  2733  00F4               	movwf	memset@n+1
 23890  2734  087B               	movf	displayL1_Initialize@display,w
 23891  2735  3198  2011  31A7   	fcall	_memset
 23892                           
 23893                           ;nullifyBadge_displayL1.c: 15: displayL1_Update(display);
 23894  2738  087B               	movf	displayL1_Initialize@display,w
 23895  2739  31A7  275C         	fcall	_displayL1_Update
 23896  273B  0008               	return
 23897  273C                     __end_of_displayL1_Initialize:	
 23898                           
 23899                           	psect	text69
 23900  1811                     __ptext69:	
 23901 ;; *************** function _memset *****************
 23902 ;; Defined at:
 23903 ;;		line 8 in file "/Applications/microchip/xc8/v1.42/sources/common/memset.c"
 23904 ;; Parameters:    Size  Location     Type
 23905 ;;  p1              1    wreg     PTR void 
 23906 ;;		 -> badge_inst(18), 
 23907 ;;  c               2    1[COMMON] int 
 23908 ;;  n               2    3[COMMON] unsigned int 
 23909 ;; Auto vars:     Size  Location     Type
 23910 ;;  p1              1    7[COMMON] PTR void 
 23911 ;;		 -> badge_inst(18), 
 23912 ;;  p               1    6[COMMON] PTR unsigned char 
 23913 ;;		 -> badge_inst(18), 
 23914 ;; Return value:  Size  Location     Type
 23915 ;;                  1    wreg      PTR void 
 23916 ;; Registers used:
 23917 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23918 ;; Tracked objects:
 23919 ;;		On entry : 0/0
 23920 ;;		On exit  : 0/0
 23921 ;;		Unchanged: 0/0
 23922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23925 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23926 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23927 ;;Total ram usage:        7 bytes
 23928 ;; Hardware stack levels used:    1
 23929 ;; Hardware stack levels required when called:    4
 23930 ;; This function calls:
 23931 ;;		Nothing
 23932 ;; This function is called by:
 23933 ;;		_displayL1_Initialize
 23934 ;;		_displayL2_Initialize
 23935 ;; This function uses a non-reentrant model
 23936 ;;
 23937                           
 23938                           
 23939                           ;psect for function _memset
 23940  1811                     _memset:	
 23941                           
 23942                           ;incstack = 0
 23943                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 23944                           ;memset@p1 stored from wreg
 23945  1811  00F7               	movwf	memset@p1
 23946  1812  0877               	movf	memset@p1,w
 23947  1813  00F5               	movwf	??_memset
 23948  1814  0875               	movf	??_memset,w
 23949  1815  00F6               	movwf	memset@p
 23950  1816                     l6695:	
 23951  1816  3001               	movlw	1
 23952  1817  02F3               	subwf	memset@n,f
 23953  1818  3000               	movlw	0
 23954  1819  3BF4               	subwfb	memset@n+1,f
 23955  181A  0A73               	incf	memset@n,w
 23956  181B  1903               	btfsc	3,2
 23957  181C  0A74               	incf	memset@n+1,w
 23958  181D  1903               	btfsc	3,2
 23959  181E  0008               	return
 23960  181F  0871               	movf	memset@c,w
 23961  1820  00F5               	movwf	??_memset
 23962  1821  0876               	movf	memset@p,w
 23963  1822  0086               	movwf	6
 23964  1823  3001               	movlw	1	; select bank2/3
 23965  1824  0087               	movwf	7
 23966  1825  0875               	movf	??_memset,w
 23967  1826  0081               	movwf	1
 23968  1827  3001               	movlw	1
 23969  1828  00F5               	movwf	??_memset
 23970  1829  0875               	movf	??_memset,w
 23971  182A  07F6               	addwf	memset@p,f
 23972  182B  2816               	goto	l6695
 23973  182C                     __end_of_memset:	
 23974                           ;	Return value of _memset is never used
 23975                           
 23976                           
 23977                           	psect	text70
 23978  275C                     __ptext70:	
 23979 ;; *************** function _displayL1_Update *****************
 23980 ;; Defined at:
 23981 ;;		line 97 in file "nullifyBadge_displayL1.c"
 23982 ;; Parameters:    Size  Location     Type
 23983 ;;  display         1    wreg     PTR struct t_nullifyDisp
 23984 ;;		 -> badge_inst(18), 
 23985 ;; Auto vars:     Size  Location     Type
 23986 ;;  display         1   10[BANK0 ] PTR struct t_nullifyDisp
 23987 ;;		 -> badge_inst(18), 
 23988 ;;  tmpRxBuf       10    0[BANK0 ] unsigned char [10]
 23989 ;; Return value:  Size  Location     Type
 23990 ;;                  1    wreg      void 
 23991 ;; Registers used:
 23992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23993 ;; Tracked objects:
 23994 ;;		On entry : 0/0
 23995 ;;		On exit  : 0/0
 23996 ;;		Unchanged: 0/0
 23997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23999 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24000 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24001 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24002 ;;Total ram usage:       13 bytes
 24003 ;; Hardware stack levels used:    1
 24004 ;; Hardware stack levels required when called:    6
 24005 ;; This function calls:
 24006 ;;		_SPI1_Exchange8bitBuffer
 24007 ;; This function is called by:
 24008 ;;		_displayL1_Initialize
 24009 ;;		_displayL2_ForceUpdate
 24010 ;;		_displayL2_EraseSegDisplay
 24011 ;;		_displayL2_SetUserLeds
 24012 ;;		_displayL2_ClrUserLeds
 24013 ;;		_displayL2_PrintChar
 24014 ;;		_displayL2_PrintStr
 24015 ;; This function uses a non-reentrant model
 24016 ;;
 24017                           
 24018                           
 24019                           ;psect for function _displayL1_Update
 24020  275C                     _displayL1_Update:	
 24021                           
 24022                           ;incstack = 0
 24023                           ; Regs used in _displayL1_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24024                           ;displayL1_Update@display stored from wreg
 24025  275C  0020               	movlb	0	; select bank0
 24026  275D  00AA               	movwf	displayL1_Update@display
 24027                           
 24028                           ;nullifyBadge_displayL1.c: 98: u8 tmpRxBuf[10];
 24029                           ;nullifyBadge_displayL1.c: 100: SPI1_Exchange8bitBuffer(display->displayVect, 10, tmpRxB
      +                          uf);
 24030  275E  300A               	movlw	10
 24031  275F  00F9               	movwf	??_displayL1_Update
 24032  2760  0879               	movf	??_displayL1_Update,w
 24033  2761  00F2               	movwf	SPI1_Exchange8bitBuffer@bufLen
 24034  2762  3020               	movlw	(low (displayL1_Update@tmpRxBuf| 0))& (0+255)
 24035  2763  00FA               	movwf	??_displayL1_Update+1
 24036  2764  087A               	movf	??_displayL1_Update+1,w
 24037  2765  00F3               	movwf	SPI1_Exchange8bitBuffer@dataOut
 24038  2766  082A               	movf	displayL1_Update@display,w
 24039  2767  319D  2540         	fcall	_SPI1_Exchange8bitBuffer
 24040                           
 24041                           ;nullifyBadge_displayL1.c: 101: do { LATCbits.LATC7 = 1; } while(0);
 24042  2769  0022               	movlb	2	; select bank2
 24043  276A  178E               	bsf	14,7	;volatile
 24044                           
 24045                           ;nullifyBadge_displayL1.c: 102: do { LATCbits.LATC7 = 0; } while(0);
 24046  276B  138E               	bcf	14,7	;volatile
 24047  276C  0008               	return
 24048  276D                     __end_of_displayL1_Update:	
 24049                           
 24050                           	psect	text71
 24051  1D40                     __ptext71:	
 24052 ;; *************** function _SPI1_Exchange8bitBuffer *****************
 24053 ;; Defined at:
 24054 ;;		line 91 in file "mcc_generated_files/spi1.c"
 24055 ;; Parameters:    Size  Location     Type
 24056 ;;  dataIn          1    wreg     PTR unsigned char 
 24057 ;;		 -> badge_inst(18), 
 24058 ;;  bufLen          1    2[COMMON] unsigned char 
 24059 ;;  dataOut         1    3[COMMON] PTR unsigned char 
 24060 ;;		 -> displayL1_Update@tmpRxBuf(10), 
 24061 ;; Auto vars:     Size  Location     Type
 24062 ;;  dataIn          1    7[COMMON] PTR unsigned char 
 24063 ;;		 -> badge_inst(18), 
 24064 ;;  bytesWritten    1    8[COMMON] unsigned char 
 24065 ;; Return value:  Size  Location     Type
 24066 ;;                  1    wreg      unsigned char 
 24067 ;; Registers used:
 24068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24069 ;; Tracked objects:
 24070 ;;		On entry : 0/0
 24071 ;;		On exit  : 0/0
 24072 ;;		Unchanged: 0/0
 24073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24076 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24077 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24078 ;;Total ram usage:        7 bytes
 24079 ;; Hardware stack levels used:    1
 24080 ;; Hardware stack levels required when called:    5
 24081 ;; This function calls:
 24082 ;;		_SPI1_Exchange8bit
 24083 ;; This function is called by:
 24084 ;;		_displayL1_Update
 24085 ;; This function uses a non-reentrant model
 24086 ;;
 24087                           
 24088                           
 24089                           ;psect for function _SPI1_Exchange8bitBuffer
 24090  1D40                     _SPI1_Exchange8bitBuffer:	
 24091                           
 24092                           ;incstack = 0
 24093                           ; Regs used in _SPI1_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 24094                           ;SPI1_Exchange8bitBuffer@dataIn stored from wreg
 24095  1D40  00F7               	movwf	SPI1_Exchange8bitBuffer@dataIn
 24096                           
 24097                           ;spi1.c: 93: uint8_t bytesWritten = 0;
 24098  1D41  01F8               	clrf	SPI1_Exchange8bitBuffer@bytesWritten
 24099                           
 24100                           ;spi1.c: 95: if(bufLen != 0)
 24101  1D42  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 24102  1D43  1903               	btfsc	3,2
 24103  1D44  0008               	return
 24104                           
 24105                           ;spi1.c: 96: {
 24106                           ;spi1.c: 97: if(dataIn != (0))
 24107  1D45  0877               	movf	SPI1_Exchange8bitBuffer@dataIn,w
 24108  1D46  1D03               	btfss	3,2
 24109  1D47  2D70               	goto	l6365
 24110  1D48  2D75               	goto	l6367
 24111  1D49                     l6357:	
 24112                           ;spi1.c: 98: {
 24113                           ;spi1.c: 99: while(bytesWritten < bufLen)
 24114                           
 24115                           
 24116                           ;spi1.c: 100: {
 24117                           ;spi1.c: 101: if(dataOut == (0))
 24118  1D49  0873               	movf	SPI1_Exchange8bitBuffer@dataOut,w
 24119  1D4A  1D03               	btfss	3,2
 24120  1D4B  2D58               	goto	l6361
 24121                           
 24122                           ;spi1.c: 102: {
 24123                           ;spi1.c: 103: SPI1_Exchange8bit(dataIn[bytesWritten]);
 24124  1D4C  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24125  1D4D  0777               	addwf	SPI1_Exchange8bitBuffer@dataIn,w
 24126  1D4E  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24127  1D4F  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24128  1D50  0086               	movwf	6
 24129  1D51  3001               	movlw	1	; select bank2/3
 24130  1D52  0087               	movwf	7
 24131  1D53  0801               	movf	1,w
 24132  1D54  31A6  2637  319D   	fcall	_SPI1_Exchange8bit
 24133                           
 24134                           ;spi1.c: 104: }
 24135  1D57  2D6C               	goto	l6363
 24136  1D58                     l6361:	
 24137                           
 24138                           ;spi1.c: 105: else
 24139                           ;spi1.c: 106: {
 24140                           ;spi1.c: 107: dataOut[bytesWritten] = SPI1_Exchange8bit(dataIn[bytesWritten]);
 24141  1D58  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24142  1D59  0777               	addwf	SPI1_Exchange8bitBuffer@dataIn,w
 24143  1D5A  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24144  1D5B  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24145  1D5C  0086               	movwf	6
 24146  1D5D  3001               	movlw	1	; select bank2/3
 24147  1D5E  0087               	movwf	7
 24148  1D5F  0801               	movf	1,w
 24149  1D60  31A6  2637  319D   	fcall	_SPI1_Exchange8bit
 24150  1D63  00F5               	movwf	??_SPI1_Exchange8bitBuffer+1
 24151  1D64  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24152  1D65  0773               	addwf	SPI1_Exchange8bitBuffer@dataOut,w
 24153  1D66  00F6               	movwf	??_SPI1_Exchange8bitBuffer+2
 24154  1D67  0876               	movf	??_SPI1_Exchange8bitBuffer+2,w
 24155  1D68  0086               	movwf	6
 24156  1D69  0187               	clrf	7
 24157  1D6A  0875               	movf	??_SPI1_Exchange8bitBuffer+1,w
 24158  1D6B  0081               	movwf	1
 24159  1D6C                     l6363:	
 24160                           
 24161                           ;spi1.c: 108: }
 24162                           ;spi1.c: 110: bytesWritten++;
 24163  1D6C  3001               	movlw	1
 24164  1D6D  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24165  1D6E  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24166  1D6F  07F8               	addwf	SPI1_Exchange8bitBuffer@bytesWritten,f
 24167  1D70                     l6365:	
 24168  1D70  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 24169  1D71  0278               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24170  1D72  1803               	btfsc	3,0
 24171  1D73  0008               	return
 24172  1D74  2D49               	goto	l6357
 24173  1D75                     l6367:	
 24174                           ;spi1.c: 111: }
 24175                           ;spi1.c: 112: }
 24176                           
 24177                           
 24178                           ;spi1.c: 113: else
 24179                           ;spi1.c: 114: {
 24180                           ;spi1.c: 115: if(dataOut != (0))
 24181  1D75  0873               	movf	SPI1_Exchange8bitBuffer@dataOut,w
 24182  1D76  1903               	btfsc	3,2
 24183  1D77  0008               	return
 24184  1D78                     l6375:	
 24185  1D78  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 24186  1D79  0278               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24187  1D7A  1803               	btfsc	3,0
 24188  1D7B  0008               	return
 24189                           
 24190                           ;spi1.c: 118: {
 24191                           ;spi1.c: 119: dataOut[bytesWritten] = SPI1_Exchange8bit(0x0);
 24192                           
 24193                           ;spi1.c: 116: {
 24194                           ;spi1.c: 117: while(bytesWritten < bufLen )
 24195  1D7C  3000               	movlw	0
 24196  1D7D  31A6  2637  319D   	fcall	_SPI1_Exchange8bit
 24197  1D80  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24198  1D81  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 24199  1D82  0773               	addwf	SPI1_Exchange8bitBuffer@dataOut,w
 24200  1D83  00F5               	movwf	??_SPI1_Exchange8bitBuffer+1
 24201  1D84  0875               	movf	??_SPI1_Exchange8bitBuffer+1,w
 24202  1D85  0086               	movwf	6
 24203  1D86  0187               	clrf	7
 24204  1D87  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24205  1D88  0081               	movwf	1
 24206                           
 24207                           ;spi1.c: 121: bytesWritten++;
 24208  1D89  3001               	movlw	1
 24209  1D8A  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 24210  1D8B  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 24211  1D8C  07F8               	addwf	SPI1_Exchange8bitBuffer@bytesWritten,f
 24212  1D8D  2D78               	goto	l6375
 24213  1D8E                     __end_of_SPI1_Exchange8bitBuffer:	
 24214                           ;spi1.c: 122: }
 24215                           ;spi1.c: 123: }
 24216                           ;spi1.c: 124: }
 24217                           ;spi1.c: 125: }
 24218                           ;spi1.c: 127: return bytesWritten;
 24219                           ;	Return value of _SPI1_Exchange8bitBuffer is never used
 24220                           
 24221                           
 24222                           	psect	text72
 24223  2637                     __ptext72:	
 24224 ;; *************** function _SPI1_Exchange8bit *****************
 24225 ;; Defined at:
 24226 ;;		line 77 in file "mcc_generated_files/spi1.c"
 24227 ;; Parameters:    Size  Location     Type
 24228 ;;  data            1    wreg     unsigned char 
 24229 ;; Auto vars:     Size  Location     Type
 24230 ;;  data            1    1[COMMON] unsigned char 
 24231 ;; Return value:  Size  Location     Type
 24232 ;;                  1    wreg      unsigned char 
 24233 ;; Registers used:
 24234 ;;		wreg
 24235 ;; Tracked objects:
 24236 ;;		On entry : 0/0
 24237 ;;		On exit  : 0/0
 24238 ;;		Unchanged: 0/0
 24239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24244 ;;Total ram usage:        1 bytes
 24245 ;; Hardware stack levels used:    1
 24246 ;; Hardware stack levels required when called:    4
 24247 ;; This function calls:
 24248 ;;		Nothing
 24249 ;; This function is called by:
 24250 ;;		_SPI1_Exchange8bitBuffer
 24251 ;; This function uses a non-reentrant model
 24252 ;;
 24253                           
 24254                           
 24255                           ;psect for function _SPI1_Exchange8bit
 24256  2637                     _SPI1_Exchange8bit:	
 24257                           
 24258                           ;incstack = 0
 24259                           ; Regs used in _SPI1_Exchange8bit: [wreg]
 24260                           ;SPI1_Exchange8bit@data stored from wreg
 24261  2637  00F1               	movwf	SPI1_Exchange8bit@data
 24262                           
 24263                           ;spi1.c: 80: SSP1CON1bits.WCOL = 0;
 24264  2638  0024               	movlb	4	; select bank4
 24265  2639  1395               	bcf	21,7	;volatile
 24266                           
 24267                           ;spi1.c: 82: SSP1BUF = data;
 24268  263A  0871               	movf	SPI1_Exchange8bit@data,w
 24269  263B  0091               	movwf	17	;volatile
 24270  263C                     l18:	
 24271                           ;spi1.c: 85: {
 24272                           
 24273                           ;spi1.c: 84: while(SSP1STATbits.BF == 0x0)
 24274                           
 24275  263C  1C14               	btfss	20,0	;volatile
 24276  263D  2E3C               	goto	l18
 24277                           
 24278                           ;spi1.c: 86: }
 24279                           ;spi1.c: 88: return (SSP1BUF);
 24280  263E  0811               	movf	17,w	;volatile
 24281  263F  0008               	return
 24282  2640                     __end_of_SPI1_Exchange8bit:	
 24283                           
 24284                           	psect	text73
 24285  1916                     __ptext73:	
 24286 ;; *************** function _SYSTEM_Initialize *****************
 24287 ;; Defined at:
 24288 ;;		line 76 in file "mcc_generated_files/mcc.c"
 24289 ;; Parameters:    Size  Location     Type
 24290 ;;		None
 24291 ;; Auto vars:     Size  Location     Type
 24292 ;;		None
 24293 ;; Return value:  Size  Location     Type
 24294 ;;                  1    wreg      void 
 24295 ;; Registers used:
 24296 ;;		wreg, status,2, status,0, pclath, cstack
 24297 ;; Tracked objects:
 24298 ;;		On entry : 0/0
 24299 ;;		On exit  : 0/0
 24300 ;;		Unchanged: 0/0
 24301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24306 ;;Total ram usage:        0 bytes
 24307 ;; Hardware stack levels used:    1
 24308 ;; Hardware stack levels required when called:    6
 24309 ;; This function calls:
 24310 ;;		_OSCILLATOR_Initialize
 24311 ;;		_PIN_MANAGER_Initialize
 24312 ;;		_PWM1_Initialize
 24313 ;;		_PWM2_Initialize
 24314 ;;		_PWM5_Initialize
 24315 ;;		_PWM6_Initialize
 24316 ;;		_SPI1_Initialize
 24317 ;;		_TMR0_Initialize
 24318 ;;		_TMR2_Initialize
 24319 ;;		_TMR4_Initialize
 24320 ;;		_WDT_Initialize
 24321 ;; This function is called by:
 24322 ;;		_nullifyBadge_platformInit
 24323 ;; This function uses a non-reentrant model
 24324 ;;
 24325                           
 24326                           
 24327                           ;psect for function _SYSTEM_Initialize
 24328  1916                     _SYSTEM_Initialize:	
 24329                           
 24330                           ;mcc.c: 79: PIN_MANAGER_Initialize();
 24331                           
 24332                           ;incstack = 0
 24333                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 24334  1916  319D  25E0  3199   	fcall	_PIN_MANAGER_Initialize
 24335                           
 24336                           ;mcc.c: 80: OSCILLATOR_Initialize();
 24337  1919  31A6  2649  3199   	fcall	_OSCILLATOR_Initialize
 24338                           
 24339                           ;mcc.c: 81: WDT_Initialize();
 24340  191C  3188  2000  3199   	fcall	_WDT_Initialize
 24341                           
 24342                           ;mcc.c: 82: SPI1_Initialize();
 24343  191F  31A6  2627  3199   	fcall	_SPI1_Initialize
 24344                           
 24345                           ;mcc.c: 83: PWM6_Initialize();
 24346  1922  31A6  26B4  3199   	fcall	_PWM6_Initialize
 24347                           
 24348                           ;mcc.c: 84: PWM1_Initialize();
 24349  1925  31A6  267C  3199   	fcall	_PWM1_Initialize
 24350                           
 24351                           ;mcc.c: 85: PWM2_Initialize();
 24352  1928  31A6  2687  3199   	fcall	_PWM2_Initialize
 24353                           
 24354                           ;mcc.c: 86: TMR4_Initialize();
 24355  192B  31A6  2692  3199   	fcall	_TMR4_Initialize
 24356                           
 24357                           ;mcc.c: 87: TMR2_Initialize();
 24358  192E  31A6  2653  3199   	fcall	_TMR2_Initialize
 24359                           
 24360                           ;mcc.c: 88: PWM5_Initialize();
 24361  1931  31A6  26A8  3199   	fcall	_PWM5_Initialize
 24362                           
 24363                           ;mcc.c: 89: TMR0_Initialize();
 24364  1934  3198  209C         	fcall	_TMR0_Initialize
 24365  1936  0008               	return
 24366  1937                     __end_of_SYSTEM_Initialize:	
 24367                           
 24368                           	psect	text74
 24369  0800                     __ptext74:	
 24370 ;; *************** function _WDT_Initialize *****************
 24371 ;; Defined at:
 24372 ;;		line 110 in file "mcc_generated_files/mcc.c"
 24373 ;; Parameters:    Size  Location     Type
 24374 ;;		None
 24375 ;; Auto vars:     Size  Location     Type
 24376 ;;		None
 24377 ;; Return value:  Size  Location     Type
 24378 ;;                  1    wreg      void 
 24379 ;; Registers used:
 24380 ;;		wreg
 24381 ;; Tracked objects:
 24382 ;;		On entry : 0/0
 24383 ;;		On exit  : 0/0
 24384 ;;		Unchanged: 0/0
 24385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24390 ;;Total ram usage:        0 bytes
 24391 ;; Hardware stack levels used:    1
 24392 ;; Hardware stack levels required when called:    4
 24393 ;; This function calls:
 24394 ;;		Nothing
 24395 ;; This function is called by:
 24396 ;;		_SYSTEM_Initialize
 24397 ;; This function uses a non-reentrant model
 24398 ;;
 24399                           
 24400                           
 24401                           ;psect for function _WDT_Initialize
 24402  0800                     _WDT_Initialize:	
 24403                           
 24404                           ;mcc.c: 113: WDTCON = 0x16;
 24405                           
 24406                           ;incstack = 0
 24407                           ; Regs used in _WDT_Initialize: [wreg]
 24408  0800  3016               	movlw	22
 24409  0801  0021               	movlb	1	; select bank1
 24410  0802  0097               	movwf	23	;volatile
 24411  0803  0008               	return
 24412  0804                     __end_of_WDT_Initialize:	
 24413                           
 24414                           	psect	text75
 24415  2692                     __ptext75:	
 24416 ;; *************** function _TMR4_Initialize *****************
 24417 ;; Defined at:
 24418 ;;		line 63 in file "mcc_generated_files/tmr4.c"
 24419 ;; Parameters:    Size  Location     Type
 24420 ;;		None
 24421 ;; Auto vars:     Size  Location     Type
 24422 ;;		None
 24423 ;; Return value:  Size  Location     Type
 24424 ;;                  1    wreg      void 
 24425 ;; Registers used:
 24426 ;;		wreg, status,2, status,0, pclath, cstack
 24427 ;; Tracked objects:
 24428 ;;		On entry : 0/0
 24429 ;;		On exit  : 0/0
 24430 ;;		Unchanged: 0/0
 24431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24436 ;;Total ram usage:        0 bytes
 24437 ;; Hardware stack levels used:    1
 24438 ;; Hardware stack levels required when called:    5
 24439 ;; This function calls:
 24440 ;;		_TMR4_StartTimer
 24441 ;; This function is called by:
 24442 ;;		_SYSTEM_Initialize
 24443 ;;		_nullifyBadge_platformInit
 24444 ;; This function uses a non-reentrant model
 24445 ;;
 24446                           
 24447                           
 24448                           ;psect for function _TMR4_Initialize
 24449  2692                     _TMR4_Initialize:	
 24450                           
 24451                           ;tmr4.c: 68: T4CON = 0x7B;
 24452                           
 24453                           ;incstack = 0
 24454                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 24455  2692  307B               	movlw	123
 24456  2693  0028               	movlb	8	; select bank8
 24457  2694  0097               	movwf	23	;volatile
 24458                           
 24459                           ;tmr4.c: 71: PR4 = 0xFF;
 24460  2695  30FF               	movlw	255
 24461  2696  0096               	movwf	22	;volatile
 24462                           
 24463                           ;tmr4.c: 74: TMR4 = 0x00;
 24464  2697  0195               	clrf	21	;volatile
 24465                           
 24466                           ;tmr4.c: 77: PIR2bits.TMR4IF = 0;
 24467  2698  0020               	movlb	0	; select bank0
 24468  2699  1092               	bcf	18,1	;volatile
 24469                           
 24470                           ;tmr4.c: 80: TMR4_StartTimer();
 24471  269A  31A5  25FB         	fcall	_TMR4_StartTimer
 24472  269C  0008               	return
 24473  269D                     __end_of_TMR4_Initialize:	
 24474                           
 24475                           	psect	text76
 24476  25FB                     __ptext76:	
 24477 ;; *************** function _TMR4_StartTimer *****************
 24478 ;; Defined at:
 24479 ;;		line 83 in file "mcc_generated_files/tmr4.c"
 24480 ;; Parameters:    Size  Location     Type
 24481 ;;		None
 24482 ;; Auto vars:     Size  Location     Type
 24483 ;;		None
 24484 ;; Return value:  Size  Location     Type
 24485 ;;                  1    wreg      void 
 24486 ;; Registers used:
 24487 ;;		None
 24488 ;; Tracked objects:
 24489 ;;		On entry : 0/0
 24490 ;;		On exit  : 0/0
 24491 ;;		Unchanged: 0/0
 24492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24497 ;;Total ram usage:        0 bytes
 24498 ;; Hardware stack levels used:    1
 24499 ;; Hardware stack levels required when called:    4
 24500 ;; This function calls:
 24501 ;;		Nothing
 24502 ;; This function is called by:
 24503 ;;		_TMR4_Initialize
 24504 ;; This function uses a non-reentrant model
 24505 ;;
 24506                           
 24507                           
 24508                           ;psect for function _TMR4_StartTimer
 24509  25FB                     _TMR4_StartTimer:	
 24510                           
 24511                           ;tmr4.c: 86: T4CONbits.TMR4ON = 1;
 24512                           
 24513                           ;incstack = 0
 24514                           ; Regs used in _TMR4_StartTimer: []
 24515  25FB  0028               	movlb	8	; select bank8
 24516  25FC  1517               	bsf	23,2	;volatile
 24517  25FD  0008               	return
 24518  25FE                     __end_of_TMR4_StartTimer:	
 24519                           
 24520                           	psect	text77
 24521  2653                     __ptext77:	
 24522 ;; *************** function _TMR2_Initialize *****************
 24523 ;; Defined at:
 24524 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 24525 ;; Parameters:    Size  Location     Type
 24526 ;;		None
 24527 ;; Auto vars:     Size  Location     Type
 24528 ;;		None
 24529 ;; Return value:  Size  Location     Type
 24530 ;;                  1    wreg      void 
 24531 ;; Registers used:
 24532 ;;		wreg, status,2, status,0, pclath, cstack
 24533 ;; Tracked objects:
 24534 ;;		On entry : 0/0
 24535 ;;		On exit  : 0/0
 24536 ;;		Unchanged: 0/0
 24537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24542 ;;Total ram usage:        0 bytes
 24543 ;; Hardware stack levels used:    1
 24544 ;; Hardware stack levels required when called:    5
 24545 ;; This function calls:
 24546 ;;		_TMR2_StartTimer
 24547 ;; This function is called by:
 24548 ;;		_SYSTEM_Initialize
 24549 ;;		_nullifyBadge_platformInit
 24550 ;; This function uses a non-reentrant model
 24551 ;;
 24552                           
 24553                           
 24554                           ;psect for function _TMR2_Initialize
 24555  2653                     _TMR2_Initialize:	
 24556                           
 24557                           ;tmr2.c: 68: T2CON = 0x01;
 24558                           
 24559                           ;incstack = 0
 24560                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 24561  2653  3001               	movlw	1
 24562  2654  0020               	movlb	0	; select bank0
 24563  2655  009F               	movwf	31	;volatile
 24564                           
 24565                           ;tmr2.c: 71: PR2 = 0x4A;
 24566  2656  304A               	movlw	74
 24567  2657  009E               	movwf	30	;volatile
 24568                           
 24569                           ;tmr2.c: 74: TMR2 = 0x00;
 24570  2658  019D               	clrf	29	;volatile
 24571                           
 24572                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 24573  2659  1091               	bcf	17,1	;volatile
 24574                           
 24575                           ;tmr2.c: 80: TMR2_StartTimer();
 24576  265A  31A5  25F8         	fcall	_TMR2_StartTimer
 24577  265C  0008               	return
 24578  265D                     __end_of_TMR2_Initialize:	
 24579                           
 24580                           	psect	text78
 24581  25F8                     __ptext78:	
 24582 ;; *************** function _TMR2_StartTimer *****************
 24583 ;; Defined at:
 24584 ;;		line 83 in file "mcc_generated_files/tmr2.c"
 24585 ;; Parameters:    Size  Location     Type
 24586 ;;		None
 24587 ;; Auto vars:     Size  Location     Type
 24588 ;;		None
 24589 ;; Return value:  Size  Location     Type
 24590 ;;                  1    wreg      void 
 24591 ;; Registers used:
 24592 ;;		None
 24593 ;; Tracked objects:
 24594 ;;		On entry : 0/0
 24595 ;;		On exit  : 0/0
 24596 ;;		Unchanged: 0/0
 24597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24602 ;;Total ram usage:        0 bytes
 24603 ;; Hardware stack levels used:    1
 24604 ;; Hardware stack levels required when called:    4
 24605 ;; This function calls:
 24606 ;;		Nothing
 24607 ;; This function is called by:
 24608 ;;		_TMR2_Initialize
 24609 ;; This function uses a non-reentrant model
 24610 ;;
 24611                           
 24612                           
 24613                           ;psect for function _TMR2_StartTimer
 24614  25F8                     _TMR2_StartTimer:	
 24615                           
 24616                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
 24617                           
 24618                           ;incstack = 0
 24619                           ; Regs used in _TMR2_StartTimer: []
 24620  25F8  0020               	movlb	0	; select bank0
 24621  25F9  151F               	bsf	31,2	;volatile
 24622  25FA  0008               	return
 24623  25FB                     __end_of_TMR2_StartTimer:	
 24624                           
 24625                           	psect	text79
 24626  189C                     __ptext79:	
 24627 ;; *************** function _TMR0_Initialize *****************
 24628 ;; Defined at:
 24629 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 24630 ;; Parameters:    Size  Location     Type
 24631 ;;		None
 24632 ;; Auto vars:     Size  Location     Type
 24633 ;;		None
 24634 ;; Return value:  Size  Location     Type
 24635 ;;                  1    wreg      void 
 24636 ;; Registers used:
 24637 ;;		wreg, status,2, status,0, pclath, cstack
 24638 ;; Tracked objects:
 24639 ;;		On entry : 0/0
 24640 ;;		On exit  : 0/0
 24641 ;;		Unchanged: 0/0
 24642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24647 ;;Total ram usage:        0 bytes
 24648 ;; Hardware stack levels used:    1
 24649 ;; Hardware stack levels required when called:    5
 24650 ;; This function calls:
 24651 ;;		_TMR0_SetInterruptHandler
 24652 ;;		_TMR0_StartTimer
 24653 ;; This function is called by:
 24654 ;;		_SYSTEM_Initialize
 24655 ;;		_nullifyBadge_platformInit
 24656 ;; This function uses a non-reentrant model
 24657 ;;
 24658                           
 24659                           
 24660                           ;psect for function _TMR0_Initialize
 24661  189C                     _TMR0_Initialize:	
 24662                           
 24663                           ;tmr0.c: 70: T0CON0 = 0x10;
 24664                           
 24665                           ;incstack = 0
 24666                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 24667  189C  3010               	movlw	16
 24668  189D  0020               	movlb	0	; select bank0
 24669  189E  0097               	movwf	23	;volatile
 24670                           
 24671                           ;tmr0.c: 73: T0CON1 = 0x4D;
 24672  189F  304D               	movlw	77
 24673  18A0  0098               	movwf	24	;volatile
 24674                           
 24675                           ;tmr0.c: 76: TMR0H = 0xFF;
 24676  18A1  30FF               	movlw	255
 24677  18A2  0096               	movwf	22	;volatile
 24678                           
 24679                           ;tmr0.c: 79: TMR0L = 0xFF;
 24680  18A3  30FF               	movlw	255
 24681  18A4  0095               	movwf	21	;volatile
 24682                           
 24683                           ;tmr0.c: 82: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 24684  18A5  0816               	movf	22,w	;volatile
 24685  18A6  0021               	movlb	1	; select bank1
 24686  18A7  00BB               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
 24687  18A8  0020               	movlb	0	; select bank0
 24688  18A9  0815               	movf	21,w	;volatile
 24689  18AA  0021               	movlb	1	; select bank1
 24690  18AB  00BA               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
 24691                           
 24692                           ;tmr0.c: 85: PIR0bits.TMR0IF = 0;
 24693  18AC  0020               	movlb	0	; select bank0
 24694  18AD  1290               	bcf	16,5	;volatile
 24695                           
 24696                           ;tmr0.c: 88: PIE0bits.TMR0IE = 1;
 24697  18AE  0021               	movlb	1	; select bank1
 24698  18AF  1690               	bsf	16,5	;volatile
 24699                           
 24700                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 24701  18B0  3003               	movlw	low _TMR0_DefaultInterruptHandler
 24702  18B1  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 24703  18B2  3000               	movlw	high _TMR0_DefaultInterruptHandler
 24704  18B3  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 24705  18B4  31A6  2609  3198   	fcall	_TMR0_SetInterruptHandler
 24706                           
 24707                           ;tmr0.c: 94: TMR0_StartTimer();
 24708  18B7  31A5  25F5         	fcall	_TMR0_StartTimer
 24709  18B9  0008               	return
 24710  18BA                     __end_of_TMR0_Initialize:	
 24711                           
 24712                           	psect	text80
 24713  25F5                     __ptext80:	
 24714 ;; *************** function _TMR0_StartTimer *****************
 24715 ;; Defined at:
 24716 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 24717 ;; Parameters:    Size  Location     Type
 24718 ;;		None
 24719 ;; Auto vars:     Size  Location     Type
 24720 ;;		None
 24721 ;; Return value:  Size  Location     Type
 24722 ;;                  1    wreg      void 
 24723 ;; Registers used:
 24724 ;;		None
 24725 ;; Tracked objects:
 24726 ;;		On entry : 0/0
 24727 ;;		On exit  : 0/0
 24728 ;;		Unchanged: 0/0
 24729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24734 ;;Total ram usage:        0 bytes
 24735 ;; Hardware stack levels used:    1
 24736 ;; Hardware stack levels required when called:    4
 24737 ;; This function calls:
 24738 ;;		Nothing
 24739 ;; This function is called by:
 24740 ;;		_TMR0_Initialize
 24741 ;; This function uses a non-reentrant model
 24742 ;;
 24743                           
 24744                           
 24745                           ;psect for function _TMR0_StartTimer
 24746  25F5                     _TMR0_StartTimer:	
 24747                           
 24748                           ;tmr0.c: 100: T0CON0bits.T0EN = 1;
 24749                           
 24750                           ;incstack = 0
 24751                           ; Regs used in _TMR0_StartTimer: []
 24752  25F5  0020               	movlb	0	; select bank0
 24753  25F6  1797               	bsf	23,7	;volatile
 24754  25F7  0008               	return
 24755  25F8                     __end_of_TMR0_StartTimer:	
 24756                           
 24757                           	psect	text81
 24758  2609                     __ptext81:	
 24759 ;; *************** function _TMR0_SetInterruptHandler *****************
 24760 ;; Defined at:
 24761 ;;		line 161 in file "mcc_generated_files/tmr0.c"
 24762 ;; Parameters:    Size  Location     Type
 24763 ;;  InterruptHan    2    1[COMMON] PTR void 
 24764 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 24765 ;; Auto vars:     Size  Location     Type
 24766 ;;		None
 24767 ;; Return value:  Size  Location     Type
 24768 ;;                  1    wreg      void 
 24769 ;; Registers used:
 24770 ;;		wreg
 24771 ;; Tracked objects:
 24772 ;;		On entry : 0/0
 24773 ;;		On exit  : 0/0
 24774 ;;		Unchanged: 0/0
 24775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24780 ;;Total ram usage:        2 bytes
 24781 ;; Hardware stack levels used:    1
 24782 ;; Hardware stack levels required when called:    4
 24783 ;; This function calls:
 24784 ;;		Nothing
 24785 ;; This function is called by:
 24786 ;;		_TMR0_Initialize
 24787 ;; This function uses a non-reentrant model
 24788 ;;
 24789                           
 24790                           
 24791                           ;psect for function _TMR0_SetInterruptHandler
 24792  2609                     _TMR0_SetInterruptHandler:	
 24793                           
 24794                           ;tmr0.c: 162: TMR0_InterruptHandler = InterruptHandler;
 24795                           
 24796                           ;incstack = 0
 24797                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 24798  2609  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 24799  260A  0021               	movlb	1	; select bank1
 24800  260B  00B9               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 24801  260C  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 24802  260D  00B8               	movwf	_TMR0_InterruptHandler^(0+128)
 24803  260E  0008               	return
 24804  260F                     __end_of_TMR0_SetInterruptHandler:	
 24805                           
 24806                           	psect	text82
 24807  2627                     __ptext82:	
 24808 ;; *************** function _SPI1_Initialize *****************
 24809 ;; Defined at:
 24810 ;;		line 63 in file "mcc_generated_files/spi1.c"
 24811 ;; Parameters:    Size  Location     Type
 24812 ;;		None
 24813 ;; Auto vars:     Size  Location     Type
 24814 ;;		None
 24815 ;; Return value:  Size  Location     Type
 24816 ;;                  1    wreg      void 
 24817 ;; Registers used:
 24818 ;;		wreg
 24819 ;; Tracked objects:
 24820 ;;		On entry : 0/0
 24821 ;;		On exit  : 0/0
 24822 ;;		Unchanged: 0/0
 24823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24828 ;;Total ram usage:        0 bytes
 24829 ;; Hardware stack levels used:    1
 24830 ;; Hardware stack levels required when called:    4
 24831 ;; This function calls:
 24832 ;;		Nothing
 24833 ;; This function is called by:
 24834 ;;		_SYSTEM_Initialize
 24835 ;;		_nullifyBadge_platformInit
 24836 ;; This function uses a non-reentrant model
 24837 ;;
 24838                           
 24839                           
 24840                           ;psect for function _SPI1_Initialize
 24841  2627                     _SPI1_Initialize:	
 24842                           
 24843                           ;spi1.c: 68: SSP1STAT = 0x40;
 24844                           
 24845                           ;incstack = 0
 24846                           ; Regs used in _SPI1_Initialize: [wreg]
 24847  2627  3040               	movlw	64
 24848  2628  0024               	movlb	4	; select bank4
 24849  2629  0094               	movwf	20	;volatile
 24850                           
 24851                           ;spi1.c: 71: SSP1CON1 = 0x22;
 24852  262A  3022               	movlw	34
 24853  262B  0095               	movwf	21	;volatile
 24854                           
 24855                           ;spi1.c: 74: SSP1ADD = 0x01;
 24856  262C  3001               	movlw	1
 24857  262D  0092               	movwf	18	;volatile
 24858  262E  0008               	return
 24859  262F                     __end_of_SPI1_Initialize:	
 24860                           
 24861                           	psect	text83
 24862  26B4                     __ptext83:	
 24863 ;; *************** function _PWM6_Initialize *****************
 24864 ;; Defined at:
 24865 ;;		line 57 in file "mcc_generated_files/pwm6.c"
 24866 ;; Parameters:    Size  Location     Type
 24867 ;;		None
 24868 ;; Auto vars:     Size  Location     Type
 24869 ;;		None
 24870 ;; Return value:  Size  Location     Type
 24871 ;;                  1    wreg      void 
 24872 ;; Registers used:
 24873 ;;		wreg, status,2, status,0
 24874 ;; Tracked objects:
 24875 ;;		On entry : 0/0
 24876 ;;		On exit  : 0/0
 24877 ;;		Unchanged: 0/0
 24878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24883 ;;Total ram usage:        0 bytes
 24884 ;; Hardware stack levels used:    1
 24885 ;; Hardware stack levels required when called:    4
 24886 ;; This function calls:
 24887 ;;		Nothing
 24888 ;; This function is called by:
 24889 ;;		_SYSTEM_Initialize
 24890 ;;		_nullifyBadge_platformInit
 24891 ;; This function uses a non-reentrant model
 24892 ;;
 24893                           
 24894                           
 24895                           ;psect for function _PWM6_Initialize
 24896  26B4                     _PWM6_Initialize:	
 24897                           
 24898                           ;pwm6.c: 61: PWM6CON = 0x90;
 24899                           
 24900                           ;incstack = 0
 24901                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 24902  26B4  3090               	movlw	144
 24903  26B5  002C               	movlb	12	; select bank12
 24904  26B6  009C               	movwf	28	;volatile
 24905                           
 24906                           ;pwm6.c: 64: PWM6DCH = 0x7F;
 24907  26B7  307F               	movlw	127
 24908  26B8  009B               	movwf	27	;volatile
 24909                           
 24910                           ;pwm6.c: 67: PWM6DCL = 0xC0;
 24911  26B9  30C0               	movlw	192
 24912  26BA  009A               	movwf	26	;volatile
 24913                           
 24914                           ;pwm6.c: 71: PWMTMRSbits.P6TSEL = 0x2;
 24915  26BB  081F               	movf	31,w	;volatile
 24916  26BC  39F3               	andlw	-13
 24917  26BD  3808               	iorlw	8
 24918  26BE  009F               	movwf	31	;volatile
 24919  26BF  0008               	return
 24920  26C0                     __end_of_PWM6_Initialize:	
 24921                           
 24922                           	psect	text84
 24923  26A8                     __ptext84:	
 24924 ;; *************** function _PWM5_Initialize *****************
 24925 ;; Defined at:
 24926 ;;		line 57 in file "mcc_generated_files/pwm5.c"
 24927 ;; Parameters:    Size  Location     Type
 24928 ;;		None
 24929 ;; Auto vars:     Size  Location     Type
 24930 ;;		None
 24931 ;; Return value:  Size  Location     Type
 24932 ;;                  1    wreg      void 
 24933 ;; Registers used:
 24934 ;;		wreg, status,2, status,0
 24935 ;; Tracked objects:
 24936 ;;		On entry : 0/0
 24937 ;;		On exit  : 0/0
 24938 ;;		Unchanged: 0/0
 24939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24944 ;;Total ram usage:        0 bytes
 24945 ;; Hardware stack levels used:    1
 24946 ;; Hardware stack levels required when called:    4
 24947 ;; This function calls:
 24948 ;;		Nothing
 24949 ;; This function is called by:
 24950 ;;		_SYSTEM_Initialize
 24951 ;;		_nullifyBadge_platformInit
 24952 ;; This function uses a non-reentrant model
 24953 ;;
 24954                           
 24955                           
 24956                           ;psect for function _PWM5_Initialize
 24957  26A8                     _PWM5_Initialize:	
 24958                           
 24959                           ;pwm5.c: 61: PWM5CON = 0x90;
 24960                           
 24961                           ;incstack = 0
 24962                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 24963  26A8  3090               	movlw	144
 24964  26A9  002C               	movlb	12	; select bank12
 24965  26AA  0099               	movwf	25	;volatile
 24966                           
 24967                           ;pwm5.c: 64: PWM5DCH = 0x7F;
 24968  26AB  307F               	movlw	127
 24969  26AC  0098               	movwf	24	;volatile
 24970                           
 24971                           ;pwm5.c: 67: PWM5DCL = 0xC0;
 24972  26AD  30C0               	movlw	192
 24973  26AE  0097               	movwf	23	;volatile
 24974                           
 24975                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 0x2;
 24976  26AF  081F               	movf	31,w	;volatile
 24977  26B0  39FC               	andlw	-4
 24978  26B1  3802               	iorlw	2
 24979  26B2  009F               	movwf	31	;volatile
 24980  26B3  0008               	return
 24981  26B4                     __end_of_PWM5_Initialize:	
 24982                           
 24983                           	psect	text85
 24984  2687                     __ptext85:	
 24985 ;; *************** function _PWM2_Initialize *****************
 24986 ;; Defined at:
 24987 ;;		line 63 in file "mcc_generated_files/pwm2.c"
 24988 ;; Parameters:    Size  Location     Type
 24989 ;;		None
 24990 ;; Auto vars:     Size  Location     Type
 24991 ;;		None
 24992 ;; Return value:  Size  Location     Type
 24993 ;;                  1    wreg      void 
 24994 ;; Registers used:
 24995 ;;		wreg, status,2, status,0
 24996 ;; Tracked objects:
 24997 ;;		On entry : 0/0
 24998 ;;		On exit  : 0/0
 24999 ;;		Unchanged: 0/0
 25000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25005 ;;Total ram usage:        0 bytes
 25006 ;; Hardware stack levels used:    1
 25007 ;; Hardware stack levels required when called:    4
 25008 ;; This function calls:
 25009 ;;		Nothing
 25010 ;; This function is called by:
 25011 ;;		_SYSTEM_Initialize
 25012 ;;		_nullifyBadge_platformInit
 25013 ;; This function uses a non-reentrant model
 25014 ;;
 25015                           
 25016                           
 25017                           ;psect for function _PWM2_Initialize
 25018  2687                     _PWM2_Initialize:	
 25019                           
 25020                           ;pwm2.c: 68: CCP2CON = 0x8F;
 25021                           
 25022                           ;incstack = 0
 25023                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 25024  2687  308F               	movlw	143
 25025  2688  0025               	movlb	5	; select bank5
 25026  2689  0097               	movwf	23	;volatile
 25027                           
 25028                           ;pwm2.c: 71: CCPR2H = 0x00;
 25029  268A  0196               	clrf	22	;volatile
 25030                           
 25031                           ;pwm2.c: 74: CCPR2L = 0xE0;
 25032  268B  30E0               	movlw	224
 25033  268C  0095               	movwf	21	;volatile
 25034                           
 25035                           ;pwm2.c: 77: CCPTMRSbits.C2TSEL = 0x1;
 25036  268D  081F               	movf	31,w	;volatile
 25037  268E  39F3               	andlw	-13
 25038  268F  3804               	iorlw	4
 25039  2690  009F               	movwf	31	;volatile
 25040  2691  0008               	return
 25041  2692                     __end_of_PWM2_Initialize:	
 25042                           
 25043                           	psect	text86
 25044  267C                     __ptext86:	
 25045 ;; *************** function _PWM1_Initialize *****************
 25046 ;; Defined at:
 25047 ;;		line 63 in file "mcc_generated_files/pwm1.c"
 25048 ;; Parameters:    Size  Location     Type
 25049 ;;		None
 25050 ;; Auto vars:     Size  Location     Type
 25051 ;;		None
 25052 ;; Return value:  Size  Location     Type
 25053 ;;                  1    wreg      void 
 25054 ;; Registers used:
 25055 ;;		wreg, status,2, status,0
 25056 ;; Tracked objects:
 25057 ;;		On entry : 0/0
 25058 ;;		On exit  : 0/0
 25059 ;;		Unchanged: 0/0
 25060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25065 ;;Total ram usage:        0 bytes
 25066 ;; Hardware stack levels used:    1
 25067 ;; Hardware stack levels required when called:    4
 25068 ;; This function calls:
 25069 ;;		Nothing
 25070 ;; This function is called by:
 25071 ;;		_SYSTEM_Initialize
 25072 ;;		_nullifyBadge_platformInit
 25073 ;; This function uses a non-reentrant model
 25074 ;;
 25075                           
 25076                           
 25077                           ;psect for function _PWM1_Initialize
 25078  267C                     _PWM1_Initialize:	
 25079                           
 25080                           ;pwm1.c: 68: CCP1CON = 0x8F;
 25081                           
 25082                           ;incstack = 0
 25083                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 25084  267C  308F               	movlw	143
 25085  267D  0025               	movlb	5	; select bank5
 25086  267E  0093               	movwf	19	;volatile
 25087                           
 25088                           ;pwm1.c: 71: CCPR1H = 0x00;
 25089  267F  0192               	clrf	18	;volatile
 25090                           
 25091                           ;pwm1.c: 74: CCPR1L = 0x95;
 25092  2680  3095               	movlw	149
 25093  2681  0091               	movwf	17	;volatile
 25094                           
 25095                           ;pwm1.c: 77: CCPTMRSbits.C1TSEL = 0x1;
 25096  2682  081F               	movf	31,w	;volatile
 25097  2683  39FC               	andlw	-4
 25098  2684  3801               	iorlw	1
 25099  2685  009F               	movwf	31	;volatile
 25100  2686  0008               	return
 25101  2687                     __end_of_PWM1_Initialize:	
 25102                           
 25103                           	psect	text87
 25104  1DE0                     __ptext87:	
 25105 ;; *************** function _PIN_MANAGER_Initialize *****************
 25106 ;; Defined at:
 25107 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 25108 ;; Parameters:    Size  Location     Type
 25109 ;;		None
 25110 ;; Auto vars:     Size  Location     Type
 25111 ;;  state           1    1[COMMON] unsigned char 
 25112 ;; Return value:  Size  Location     Type
 25113 ;;                  1    wreg      void 
 25114 ;; Registers used:
 25115 ;;		wreg, status,2, status,0
 25116 ;; Tracked objects:
 25117 ;;		On entry : 0/0
 25118 ;;		On exit  : 0/0
 25119 ;;		Unchanged: 0/0
 25120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25125 ;;Total ram usage:        1 bytes
 25126 ;; Hardware stack levels used:    1
 25127 ;; Hardware stack levels required when called:    4
 25128 ;; This function calls:
 25129 ;;		Nothing
 25130 ;; This function is called by:
 25131 ;;		_SYSTEM_Initialize
 25132 ;;		_nullifyBadge_platformInit
 25133 ;; This function uses a non-reentrant model
 25134 ;;
 25135                           
 25136                           
 25137                           ;psect for function _PIN_MANAGER_Initialize
 25138  1DE0                     _PIN_MANAGER_Initialize:	
 25139                           
 25140                           ;pin_manager.c: 56: LATA = 0x00;
 25141                           
 25142                           ;incstack = 0
 25143                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 25144  1DE0  0022               	movlb	2	; select bank2
 25145  1DE1  018C               	clrf	12	;volatile
 25146                           
 25147                           ;pin_manager.c: 57: LATB = 0x80;
 25148  1DE2  3080               	movlw	128
 25149  1DE3  008D               	movwf	13	;volatile
 25150                           
 25151                           ;pin_manager.c: 58: LATC = 0x1A;
 25152  1DE4  301A               	movlw	26
 25153  1DE5  008E               	movwf	14	;volatile
 25154                           
 25155                           ;pin_manager.c: 63: TRISA = 0x37;
 25156  1DE6  3037               	movlw	55
 25157  1DE7  0021               	movlb	1	; select bank1
 25158  1DE8  008C               	movwf	12	;volatile
 25159                           
 25160                           ;pin_manager.c: 64: TRISB = 0x30;
 25161  1DE9  3030               	movlw	48
 25162  1DEA  008D               	movwf	13	;volatile
 25163                           
 25164                           ;pin_manager.c: 65: TRISC = 0x60;
 25165  1DEB  3060               	movlw	96
 25166  1DEC  008E               	movwf	14	;volatile
 25167                           
 25168                           ;pin_manager.c: 70: ANSELC = 0x40;
 25169  1DED  3040               	movlw	64
 25170  1DEE  0023               	movlb	3	; select bank3
 25171  1DEF  008E               	movwf	14	;volatile
 25172                           
 25173                           ;pin_manager.c: 71: ANSELB = 0x00;
 25174  1DF0  018D               	clrf	13	;volatile
 25175                           
 25176                           ;pin_manager.c: 72: ANSELA = 0x03;
 25177  1DF1  3003               	movlw	3
 25178  1DF2  008C               	movwf	12	;volatile
 25179                           
 25180                           ;pin_manager.c: 77: WPUB = 0x00;
 25181  1DF3  0024               	movlb	4	; select bank4
 25182  1DF4  018D               	clrf	13	;volatile
 25183                           
 25184                           ;pin_manager.c: 78: WPUA = 0x00;
 25185  1DF5  018C               	clrf	12	;volatile
 25186                           
 25187                           ;pin_manager.c: 79: WPUC = 0x00;
 25188  1DF6  018E               	clrf	14	;volatile
 25189                           
 25190                           ;pin_manager.c: 84: ODCONA = 0x00;
 25191  1DF7  0025               	movlb	5	; select bank5
 25192  1DF8  018C               	clrf	12	;volatile
 25193                           
 25194                           ;pin_manager.c: 85: ODCONB = 0x00;
 25195  1DF9  018D               	clrf	13	;volatile
 25196                           
 25197                           ;pin_manager.c: 86: ODCONC = 0x00;
 25198  1DFA  018E               	clrf	14	;volatile
 25199                           
 25200                           ;pin_manager.c: 93: bool state = GIE;
 25201  1DFB  3000               	movlw	0
 25202  1DFC  1B8B               	btfsc	11,7	;volatile
 25203  1DFD  3001               	movlw	1
 25204  1DFE  00F1               	movwf	PIN_MANAGER_Initialize@state
 25205                           
 25206                           ;pin_manager.c: 94: GIE = 0;
 25207  1DFF  138B               	bcf	11,7	;volatile
 25208                           
 25209                           ;pin_manager.c: 95: PPSLOCK = 0x55;
 25210  1E00  3055               	movlw	85
 25211  1E01  003C               	movlb	28	; select bank28
 25212  1E02  008F               	movwf	15	;volatile
 25213                           
 25214                           ;pin_manager.c: 96: PPSLOCK = 0xAA;
 25215  1E03  30AA               	movlw	170
 25216  1E04  008F               	movwf	15	;volatile
 25217                           
 25218                           ;pin_manager.c: 97: PPSLOCKbits.PPSLOCKED = 0x00;
 25219  1E05  100F               	bcf	15,0	;volatile
 25220                           
 25221                           ;pin_manager.c: 99: RC1PPSbits.RC1PPS = 0x0D;
 25222  1E06  003D               	movlb	29	; select bank29
 25223  1E07  0821               	movf	33,w	;volatile
 25224  1E08  39E0               	andlw	-32
 25225  1E09  380D               	iorlw	13
 25226  1E0A  00A1               	movwf	33	;volatile
 25227                           
 25228                           ;pin_manager.c: 100: SSP1DATPPSbits.SSP1DATPPS = 0x0C;
 25229  1E0B  003C               	movlb	28	; select bank28
 25230  1E0C  0821               	movf	33,w	;volatile
 25231  1E0D  39E0               	andlw	-32
 25232  1E0E  380C               	iorlw	12
 25233  1E0F  00A1               	movwf	33	;volatile
 25234                           
 25235                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 25236  1E10  0820               	movf	32,w	;volatile
 25237  1E11  39E0               	andlw	-32
 25238  1E12  380E               	iorlw	14
 25239  1E13  00A0               	movwf	32	;volatile
 25240                           
 25241                           ;pin_manager.c: 102: RC4PPSbits.RC4PPS = 0x02;
 25242  1E14  003D               	movlb	29	; select bank29
 25243  1E15  0824               	movf	36,w	;volatile
 25244  1E16  39E0               	andlw	-32
 25245  1E17  3802               	iorlw	2
 25246  1E18  00A4               	movwf	36	;volatile
 25247                           
 25248                           ;pin_manager.c: 103: RC0PPSbits.RC0PPS = 0x0C;
 25249  1E19  0820               	movf	32,w	;volatile
 25250  1E1A  39E0               	andlw	-32
 25251  1E1B  380C               	iorlw	12
 25252  1E1C  00A0               	movwf	32	;volatile
 25253                           
 25254                           ;pin_manager.c: 104: RC3PPSbits.RC3PPS = 0x03;
 25255  1E1D  0823               	movf	35,w	;volatile
 25256  1E1E  39E0               	andlw	-32
 25257  1E1F  3803               	iorlw	3
 25258  1E20  00A3               	movwf	35	;volatile
 25259                           
 25260                           ;pin_manager.c: 105: RB6PPSbits.RB6PPS = 0x18;
 25261  1E21  081E               	movf	30,w	;volatile
 25262  1E22  39E0               	andlw	-32
 25263  1E23  3818               	iorlw	24
 25264  1E24  009E               	movwf	30	;volatile
 25265                           
 25266                           ;pin_manager.c: 106: RC2PPSbits.RC2PPS = 0x19;
 25267  1E25  0822               	movf	34,w	;volatile
 25268  1E26  39E0               	andlw	-32
 25269  1E27  3819               	iorlw	25
 25270  1E28  00A2               	movwf	34	;volatile
 25271                           
 25272                           ;pin_manager.c: 108: PPSLOCK = 0x55;
 25273  1E29  3055               	movlw	85
 25274  1E2A  003C               	movlb	28	; select bank28
 25275  1E2B  008F               	movwf	15	;volatile
 25276                           
 25277                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
 25278  1E2C  30AA               	movlw	170
 25279  1E2D  008F               	movwf	15	;volatile
 25280                           
 25281                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x01;
 25282  1E2E  140F               	bsf	15,0	;volatile
 25283                           
 25284                           ;pin_manager.c: 112: GIE = state;
 25285  1E2F  1C71               	btfss	PIN_MANAGER_Initialize@state,0
 25286  1E30  2E33               	goto	u4040
 25287  1E31  178B               	bsf	11,7	;volatile
 25288  1E32  0008               	return
 25289  1E33                     u4040:	
 25290  1E33  138B               	bcf	11,7	;volatile
 25291  1E34  0008               	return
 25292  1E35                     __end_of_PIN_MANAGER_Initialize:	
 25293                           
 25294                           	psect	text88
 25295  2649                     __ptext88:	
 25296 ;; *************** function _OSCILLATOR_Initialize *****************
 25297 ;; Defined at:
 25298 ;;		line 92 in file "mcc_generated_files/mcc.c"
 25299 ;; Parameters:    Size  Location     Type
 25300 ;;		None
 25301 ;; Auto vars:     Size  Location     Type
 25302 ;;		None
 25303 ;; Return value:  Size  Location     Type
 25304 ;;                  1    wreg      void 
 25305 ;; Registers used:
 25306 ;;		wreg, status,2
 25307 ;; Tracked objects:
 25308 ;;		On entry : 0/0
 25309 ;;		On exit  : 0/0
 25310 ;;		Unchanged: 0/0
 25311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25316 ;;Total ram usage:        0 bytes
 25317 ;; Hardware stack levels used:    1
 25318 ;; Hardware stack levels required when called:    4
 25319 ;; This function calls:
 25320 ;;		Nothing
 25321 ;; This function is called by:
 25322 ;;		_SYSTEM_Initialize
 25323 ;;		_nullifyBadge_platformInit
 25324 ;; This function uses a non-reentrant model
 25325 ;;
 25326                           
 25327                           
 25328                           ;psect for function _OSCILLATOR_Initialize
 25329  2649                     _OSCILLATOR_Initialize:	
 25330                           
 25331                           ;mcc.c: 95: OSCCON1 = 0x00;
 25332                           
 25333                           ;incstack = 0
 25334                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 25335  2649  0032               	movlb	18	; select bank18
 25336  264A  0199               	clrf	25	;volatile
 25337                           
 25338                           ;mcc.c: 97: OSCCON3 = 0x00;
 25339  264B  019B               	clrf	27	;volatile
 25340                           
 25341                           ;mcc.c: 99: OSCEN = 0x00;
 25342  264C  019D               	clrf	29	;volatile
 25343                           
 25344                           ;mcc.c: 101: OSCFRQ = 0x06;
 25345  264D  3006               	movlw	6
 25346  264E  009F               	movwf	31	;volatile
 25347                           
 25348                           ;mcc.c: 103: OSCTUNE = 0x00;
 25349  264F  019E               	clrf	30	;volatile
 25350  2650                     l208:	
 25351                           ;mcc.c: 106: {
 25352                           
 25353                           ;mcc.c: 105: while(PLLR == 0)
 25354                           
 25355  2650  181C               	btfsc	28,0	;volatile
 25356  2651  0008               	return
 25357  2652  2E50               	goto	l208
 25358  2653                     __end_of_OSCILLATOR_Initialize:	
 25359                           
 25360                           	psect	text89
 25361  1202                     __ptext89:	
 25362 ;; *************** function _PWM6_LoadDutyValue *****************
 25363 ;; Defined at:
 25364 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 25365 ;; Parameters:    Size  Location     Type
 25366 ;;  dutyValue       2    1[COMMON] unsigned int 
 25367 ;; Auto vars:     Size  Location     Type
 25368 ;;		None
 25369 ;; Return value:  Size  Location     Type
 25370 ;;                  1    wreg      void 
 25371 ;; Registers used:
 25372 ;;		wreg, status,2, status,0
 25373 ;; Tracked objects:
 25374 ;;		On entry : 0/0
 25375 ;;		On exit  : 0/0
 25376 ;;		Unchanged: 0/0
 25377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25381 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25382 ;;Total ram usage:        4 bytes
 25383 ;; Hardware stack levels used:    1
 25384 ;; Hardware stack levels required when called:    4
 25385 ;; This function calls:
 25386 ;;		Nothing
 25387 ;; This function is called by:
 25388 ;;		_nullifyBadge_platformInit
 25389 ;;		_nullifyBadge_userLedsSetBrightness
 25390 ;; This function uses a non-reentrant model
 25391 ;;
 25392                           
 25393                           
 25394                           ;psect for function _PWM6_LoadDutyValue
 25395  1202                     _PWM6_LoadDutyValue:	
 25396                           
 25397                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 25398                           
 25399                           ;incstack = 0
 25400                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 25401  1202  0872               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 25402  1203  00F4               	movwf	??_PWM6_LoadDutyValue+1
 25403  1204  0871               	movf	PWM6_LoadDutyValue@dutyValue,w
 25404  1205  00F3               	movwf	??_PWM6_LoadDutyValue
 25405  1206  36F4               	lsrf	??_PWM6_LoadDutyValue+1,f
 25406  1207  0CF3               	rrf	??_PWM6_LoadDutyValue,f
 25407  1208  36F4               	lsrf	??_PWM6_LoadDutyValue+1,f
 25408  1209  0CF3               	rrf	??_PWM6_LoadDutyValue,f
 25409  120A  0873               	movf	??_PWM6_LoadDutyValue,w
 25410  120B  002C               	movlb	12	; select bank12
 25411  120C  009B               	movwf	27	;volatile
 25412                           
 25413                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 25414  120D  0871               	movf	PWM6_LoadDutyValue@dutyValue,w
 25415  120E  3903               	andlw	3
 25416  120F  00F3               	movwf	??_PWM6_LoadDutyValue
 25417  1210  3005               	movlw	5
 25418  1211                     u4665:	
 25419  1211  35F3               	lslf	??_PWM6_LoadDutyValue,f
 25420  1212  3EFF               	addlw	-1
 25421  1213  1D03               	skipz
 25422  1214  2A11               	goto	u4665
 25423  1215  3573               	lslf	??_PWM6_LoadDutyValue,w
 25424  1216  009A               	movwf	26	;volatile
 25425  1217  0008               	return
 25426  1218                     __end_of_PWM6_LoadDutyValue:	
 25427                           
 25428                           	psect	text90
 25429  27D1                     __ptext90:	
 25430 ;; *************** function _PWM5_LoadDutyValue *****************
 25431 ;; Defined at:
 25432 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 25433 ;; Parameters:    Size  Location     Type
 25434 ;;  dutyValue       2    1[COMMON] unsigned int 
 25435 ;; Auto vars:     Size  Location     Type
 25436 ;;		None
 25437 ;; Return value:  Size  Location     Type
 25438 ;;                  1    wreg      void 
 25439 ;; Registers used:
 25440 ;;		wreg, status,2, status,0
 25441 ;; Tracked objects:
 25442 ;;		On entry : 0/0
 25443 ;;		On exit  : 0/0
 25444 ;;		Unchanged: 0/0
 25445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25450 ;;Total ram usage:        4 bytes
 25451 ;; Hardware stack levels used:    1
 25452 ;; Hardware stack levels required when called:    4
 25453 ;; This function calls:
 25454 ;;		Nothing
 25455 ;; This function is called by:
 25456 ;;		_nullifyBadge_platformInit
 25457 ;;		_fadeDisplay_Init
 25458 ;;		_nullifyBadge_segDisplaySetBrightness
 25459 ;; This function uses a non-reentrant model
 25460 ;;
 25461                           
 25462                           
 25463                           ;psect for function _PWM5_LoadDutyValue
 25464  27D1                     _PWM5_LoadDutyValue:	
 25465                           
 25466                           ;pwm5.c: 77: PWM5DCH = (dutyValue & 0x03FC)>>2;
 25467                           
 25468                           ;incstack = 0
 25469                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 25470  27D1  0872               	movf	PWM5_LoadDutyValue@dutyValue+1,w
 25471  27D2  00F4               	movwf	??_PWM5_LoadDutyValue+1
 25472  27D3  0871               	movf	PWM5_LoadDutyValue@dutyValue,w
 25473  27D4  00F3               	movwf	??_PWM5_LoadDutyValue
 25474  27D5  36F4               	lsrf	??_PWM5_LoadDutyValue+1,f
 25475  27D6  0CF3               	rrf	??_PWM5_LoadDutyValue,f
 25476  27D7  36F4               	lsrf	??_PWM5_LoadDutyValue+1,f
 25477  27D8  0CF3               	rrf	??_PWM5_LoadDutyValue,f
 25478  27D9  0873               	movf	??_PWM5_LoadDutyValue,w
 25479  27DA  002C               	movlb	12	; select bank12
 25480  27DB  0098               	movwf	24	;volatile
 25481                           
 25482                           ;pwm5.c: 80: PWM5DCL = (dutyValue & 0x0003)<<6;
 25483  27DC  0871               	movf	PWM5_LoadDutyValue@dutyValue,w
 25484  27DD  3903               	andlw	3
 25485  27DE  00F3               	movwf	??_PWM5_LoadDutyValue
 25486  27DF  3005               	movlw	5
 25487  27E0                     u4655:	
 25488  27E0  35F3               	lslf	??_PWM5_LoadDutyValue,f
 25489  27E1  3EFF               	addlw	-1
 25490  27E2  1D03               	skipz
 25491  27E3  2FE0               	goto	u4655
 25492  27E4  3573               	lslf	??_PWM5_LoadDutyValue,w
 25493  27E5  0097               	movwf	23	;volatile
 25494  27E6  0008               	return
 25495  27E7                     __end_of_PWM5_LoadDutyValue:	
 25496                           
 25497                           	psect	text91
 25498  27BB                     __ptext91:	
 25499 ;; *************** function _PWM2_LoadDutyValue *****************
 25500 ;; Defined at:
 25501 ;;		line 80 in file "mcc_generated_files/pwm2.c"
 25502 ;; Parameters:    Size  Location     Type
 25503 ;;  dutyValue       2    1[COMMON] unsigned int 
 25504 ;; Auto vars:     Size  Location     Type
 25505 ;;		None
 25506 ;; Return value:  Size  Location     Type
 25507 ;;                  1    wreg      void 
 25508 ;; Registers used:
 25509 ;;		wreg, status,2
 25510 ;; Tracked objects:
 25511 ;;		On entry : 0/0
 25512 ;;		On exit  : 0/0
 25513 ;;		Unchanged: 0/0
 25514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25519 ;;Total ram usage:        2 bytes
 25520 ;; Hardware stack levels used:    1
 25521 ;; Hardware stack levels required when called:    4
 25522 ;; This function calls:
 25523 ;;		Nothing
 25524 ;; This function is called by:
 25525 ;;		_nullifyBadge_platformInit
 25526 ;; This function uses a non-reentrant model
 25527 ;;
 25528                           
 25529                           
 25530                           ;psect for function _PWM2_LoadDutyValue
 25531  27BB                     _PWM2_LoadDutyValue:	
 25532                           
 25533                           ;pwm2.c: 82: dutyValue &= 0x03FF;
 25534                           
 25535                           ;incstack = 0
 25536                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 25537  27BB  30FF               	movlw	255
 25538  27BC  05F1               	andwf	PWM2_LoadDutyValue@dutyValue,f
 25539  27BD  3003               	movlw	3
 25540  27BE  05F2               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 25541                           
 25542                           ;pwm2.c: 85: if(CCP2CONbits.CCP2FMT)
 25543  27BF  0025               	movlb	5	; select bank5
 25544  27C0  1E17               	btfss	23,4	;volatile
 25545  27C1  2FCC               	goto	l7855
 25546                           
 25547                           ;pwm2.c: 86: {
 25548                           ;pwm2.c: 87: dutyValue <<= 6;
 25549  27C2  3006               	movlw	6
 25550  27C3                     u4705:	
 25551  27C3  35F1               	lslf	PWM2_LoadDutyValue@dutyValue,f
 25552  27C4  0DF2               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 25553  27C5  0B89               	decfsz	9,f
 25554  27C6  2FC3               	goto	u4705
 25555                           
 25556                           ;pwm2.c: 88: CCPR2H = dutyValue >> 8;
 25557  27C7  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 25558  27C8  0096               	movwf	22	;volatile
 25559                           
 25560                           ;pwm2.c: 89: CCPR2L = dutyValue;
 25561  27C9  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
 25562  27CA  0095               	movwf	21	;volatile
 25563                           
 25564                           ;pwm2.c: 90: }
 25565  27CB  0008               	return
 25566  27CC                     l7855:	
 25567                           
 25568                           ;pwm2.c: 91: else
 25569                           ;pwm2.c: 92: {
 25570                           ;pwm2.c: 93: CCPR2H = dutyValue >> 8;
 25571  27CC  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 25572  27CD  0096               	movwf	22	;volatile
 25573                           
 25574                           ;pwm2.c: 94: CCPR2L = dutyValue;
 25575  27CE  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
 25576  27CF  0095               	movwf	21	;volatile
 25577  27D0  0008               	return
 25578  27D1                     __end_of_PWM2_LoadDutyValue:	
 25579                           
 25580                           	psect	text92
 25581  27A5                     __ptext92:	
 25582 ;; *************** function _PWM1_LoadDutyValue *****************
 25583 ;; Defined at:
 25584 ;;		line 80 in file "mcc_generated_files/pwm1.c"
 25585 ;; Parameters:    Size  Location     Type
 25586 ;;  dutyValue       2    1[COMMON] unsigned int 
 25587 ;; Auto vars:     Size  Location     Type
 25588 ;;		None
 25589 ;; Return value:  Size  Location     Type
 25590 ;;                  1    wreg      void 
 25591 ;; Registers used:
 25592 ;;		wreg, status,2
 25593 ;; Tracked objects:
 25594 ;;		On entry : 0/0
 25595 ;;		On exit  : 0/0
 25596 ;;		Unchanged: 0/0
 25597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25602 ;;Total ram usage:        2 bytes
 25603 ;; Hardware stack levels used:    1
 25604 ;; Hardware stack levels required when called:    4
 25605 ;; This function calls:
 25606 ;;		Nothing
 25607 ;; This function is called by:
 25608 ;;		_nullifyBadge_platformInit
 25609 ;; This function uses a non-reentrant model
 25610 ;;
 25611                           
 25612                           
 25613                           ;psect for function _PWM1_LoadDutyValue
 25614  27A5                     _PWM1_LoadDutyValue:	
 25615                           
 25616                           ;pwm1.c: 82: dutyValue &= 0x03FF;
 25617                           
 25618                           ;incstack = 0
 25619                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 25620  27A5  30FF               	movlw	255
 25621  27A6  05F1               	andwf	PWM1_LoadDutyValue@dutyValue,f
 25622  27A7  3003               	movlw	3
 25623  27A8  05F2               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 25624                           
 25625                           ;pwm1.c: 85: if(CCP1CONbits.CCP1FMT)
 25626  27A9  0025               	movlb	5	; select bank5
 25627  27AA  1E13               	btfss	19,4	;volatile
 25628  27AB  2FB6               	goto	l7839
 25629                           
 25630                           ;pwm1.c: 86: {
 25631                           ;pwm1.c: 87: dutyValue <<= 6;
 25632  27AC  3006               	movlw	6
 25633  27AD                     u4685:	
 25634  27AD  35F1               	lslf	PWM1_LoadDutyValue@dutyValue,f
 25635  27AE  0DF2               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 25636  27AF  0B89               	decfsz	9,f
 25637  27B0  2FAD               	goto	u4685
 25638                           
 25639                           ;pwm1.c: 88: CCPR1H = dutyValue >> 8;
 25640  27B1  0872               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 25641  27B2  0092               	movwf	18	;volatile
 25642                           
 25643                           ;pwm1.c: 89: CCPR1L = dutyValue;
 25644  27B3  0871               	movf	PWM1_LoadDutyValue@dutyValue,w
 25645  27B4  0091               	movwf	17	;volatile
 25646                           
 25647                           ;pwm1.c: 90: }
 25648  27B5  0008               	return
 25649  27B6                     l7839:	
 25650                           
 25651                           ;pwm1.c: 91: else
 25652                           ;pwm1.c: 92: {
 25653                           ;pwm1.c: 93: CCPR1H = dutyValue >> 8;
 25654  27B6  0872               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 25655  27B7  0092               	movwf	18	;volatile
 25656                           
 25657                           ;pwm1.c: 94: CCPR1L = dutyValue;
 25658  27B8  0871               	movf	PWM1_LoadDutyValue@dutyValue,w
 25659  27B9  0091               	movwf	17	;volatile
 25660  27BA  0008               	return
 25661  27BB                     __end_of_PWM1_LoadDutyValue:	
 25662                           
 25663                           	psect	intentry
 25664  0004                     __pintentry:	
 25665 ;; *************** function _INTERRUPT_InterruptManager *****************
 25666 ;; Defined at:
 25667 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 25668 ;; Parameters:    Size  Location     Type
 25669 ;;		None
 25670 ;; Auto vars:     Size  Location     Type
 25671 ;;		None
 25672 ;; Return value:  Size  Location     Type
 25673 ;;                  1    wreg      void 
 25674 ;; Registers used:
 25675 ;;		wreg, status,2, status,0, pclath, cstack
 25676 ;; Tracked objects:
 25677 ;;		On entry : 0/0
 25678 ;;		On exit  : 0/0
 25679 ;;		Unchanged: 0/0
 25680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25684 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25685 ;;Total ram usage:        1 bytes
 25686 ;; Hardware stack levels used:    1
 25687 ;; Hardware stack levels required when called:    3
 25688 ;; This function calls:
 25689 ;;		_TMR0_ISR
 25690 ;; This function is called by:
 25691 ;;		Interrupt level 1
 25692 ;; This function uses a non-reentrant model
 25693 ;;
 25694                           
 25695  0004                     _INTERRUPT_InterruptManager:	
 25696                           
 25697                           ;incstack = 0
 25698  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 25699                           
 25700                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 25701  0005  3180               	pagesel	$
 25702  0006  0020               	movlb	0	; select bank0
 25703  0007  087F               	movf	127,w
 25704  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
 25705                           
 25706                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 25707  0009  0021               	movlb	1	; select bank1
 25708  000A  1E90               	btfss	16,5	;volatile
 25709  000B  2811               	goto	i1l363
 25710  000C  0020               	movlb	0	; select bank0
 25711  000D  1E90               	btfss	16,5	;volatile
 25712  000E  2811               	goto	i1l363
 25713                           
 25714                           ;interrupt_manager.c: 55: {
 25715                           ;interrupt_manager.c: 56: TMR0_ISR();
 25716  000F  31A6  26D8         	fcall	_TMR0_ISR
 25717  0011                     i1l363:	
 25718                           ;interrupt_manager.c: 58: else
 25719                           ;interrupt_manager.c: 59: {
 25720                           
 25721                           ;interrupt_manager.c: 57: }
 25722                           
 25723  0011  0870               	movf	??_INTERRUPT_InterruptManager,w
 25724  0012  0020               	movlb	0	; select bank0
 25725  0013  00FF               	movwf	127
 25726  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 25727  0015  0009               	retfie
 25728  0016                     __end_of_INTERRUPT_InterruptManager:	
 25729                           
 25730                           	psect	text94
 25731  26D8                     __ptext94:	
 25732 ;; *************** function _TMR0_ISR *****************
 25733 ;; Defined at:
 25734 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 25735 ;; Parameters:    Size  Location     Type
 25736 ;;		None
 25737 ;; Auto vars:     Size  Location     Type
 25738 ;;		None
 25739 ;; Return value:  Size  Location     Type
 25740 ;;                  1    wreg      void 
 25741 ;; Registers used:
 25742 ;;		wreg, status,2, status,0, pclath, cstack
 25743 ;; Tracked objects:
 25744 ;;		On entry : 0/0
 25745 ;;		On exit  : 0/0
 25746 ;;		Unchanged: 0/0
 25747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25752 ;;Total ram usage:        0 bytes
 25753 ;; Hardware stack levels used:    1
 25754 ;; Hardware stack levels required when called:    2
 25755 ;; This function calls:
 25756 ;;		_TMR0_CallBack
 25757 ;; This function is called by:
 25758 ;;		_INTERRUPT_InterruptManager
 25759 ;; This function uses a non-reentrant model
 25760 ;;
 25761                           
 25762                           
 25763                           ;psect for function _TMR0_ISR
 25764  26D8                     _TMR0_ISR:	
 25765                           
 25766                           ;tmr0.c: 139: PIR0bits.TMR0IF = 0;
 25767                           
 25768                           ;incstack = 0
 25769                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 25770  26D8  0020               	movlb	0	; select bank0
 25771  26D9  1290               	bcf	16,5	;volatile
 25772                           
 25773                           ;tmr0.c: 141: TMR0H = timer0ReloadVal16bit >> 8;
 25774  26DA  0021               	movlb	1	; select bank1
 25775  26DB  083B               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
 25776  26DC  0020               	movlb	0	; select bank0
 25777  26DD  0096               	movwf	22	;volatile
 25778                           
 25779                           ;tmr0.c: 142: TMR0L = (uint8_t) timer0ReloadVal16bit;
 25780  26DE  0021               	movlb	1	; select bank1
 25781  26DF  083A               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
 25782  26E0  0020               	movlb	0	; select bank0
 25783  26E1  0095               	movwf	21	;volatile
 25784                           
 25785                           ;tmr0.c: 146: TMR0_CallBack();
 25786  26E2  31A6  2671         	fcall	_TMR0_CallBack
 25787  26E4  0008               	return
 25788  26E5                     __end_of_TMR0_ISR:	
 25789                           
 25790                           	psect	text95
 25791  2671                     __ptext95:	
 25792 ;; *************** function _TMR0_CallBack *****************
 25793 ;; Defined at:
 25794 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 25795 ;; Parameters:    Size  Location     Type
 25796 ;;		None
 25797 ;; Auto vars:     Size  Location     Type
 25798 ;;		None
 25799 ;; Return value:  Size  Location     Type
 25800 ;;                  1    wreg      void 
 25801 ;; Registers used:
 25802 ;;		wreg, status,2, status,0, pclath, cstack
 25803 ;; Tracked objects:
 25804 ;;		On entry : 0/0
 25805 ;;		On exit  : 0/0
 25806 ;;		Unchanged: 0/0
 25807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25812 ;;Total ram usage:        0 bytes
 25813 ;; Hardware stack levels used:    1
 25814 ;; Hardware stack levels required when called:    1
 25815 ;; This function calls:
 25816 ;;		Absolute function
 25817 ;;		_TMR0_DefaultInterruptHandler
 25818 ;; This function is called by:
 25819 ;;		_TMR0_ISR
 25820 ;; This function uses a non-reentrant model
 25821 ;;
 25822                           
 25823                           
 25824                           ;psect for function _TMR0_CallBack
 25825  2671                     _TMR0_CallBack:	
 25826                           
 25827                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
 25828                           
 25829                           ;incstack = 0
 25830                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 25831  2671  0021               	movlb	1	; select bank1
 25832  2672  0838               	movf	_TMR0_InterruptHandler^(0+128),w
 25833  2673  0439               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 25834  2674  1903               	btfsc	3,2
 25835  2675  0008               	return
 25836                           
 25837                           ;tmr0.c: 156: {
 25838                           ;tmr0.c: 157: TMR0_InterruptHandler();
 25839  2676  0839               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 25840  2677  008A               	movwf	10
 25841  2678  0838               	movf	_TMR0_InterruptHandler^(0+128),w
 25842  2679  000A               	callw
 25843  267A  31A6               	pagesel	$
 25844  267B  0008               	return
 25845  267C                     __end_of_TMR0_CallBack:	
 25846                           
 25847                           	psect	text96
 25848  0003                     __ptext96:	
 25849 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 25850 ;; Defined at:
 25851 ;;		line 165 in file "mcc_generated_files/tmr0.c"
 25852 ;; Parameters:    Size  Location     Type
 25853 ;;		None
 25854 ;; Auto vars:     Size  Location     Type
 25855 ;;		None
 25856 ;; Return value:  Size  Location     Type
 25857 ;;                  1    wreg      void 
 25858 ;; Registers used:
 25859 ;;		None
 25860 ;; Tracked objects:
 25861 ;;		On entry : 0/0
 25862 ;;		On exit  : 0/0
 25863 ;;		Unchanged: 0/0
 25864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25869 ;;Total ram usage:        0 bytes
 25870 ;; Hardware stack levels used:    1
 25871 ;; This function calls:
 25872 ;;		Nothing
 25873 ;; This function is called by:
 25874 ;;		_TMR0_Initialize
 25875 ;;		_TMR0_CallBack
 25876 ;; This function uses a non-reentrant model
 25877 ;;
 25878                           
 25879                           
 25880                           ;psect for function _TMR0_DefaultInterruptHandler
 25881  0003                     _TMR0_DefaultInterruptHandler:	
 25882                           
 25883                           ;incstack = 0
 25884                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 25885  0003  0008               	return
 25886  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 25887  007E                     btemp	set	126	;btemp
 25888  007E                     int$flags	set	126
 25889  007E                     wtemp0	set	126


Data Sizes:
    Strings     297
    Constant    522
    Data        463
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80      1      71
    BANK2            80      0      75
    BANK3            80      0      67
    BANK4            80      0      76
    BANK5            80      0      70
    BANK6            80      0      56
    BANK7            80      0      30
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           16      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    menu_run_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    schedulerInst.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    schedulerInst.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    schedulerInst.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    schedulerInst.tasks.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    schedulerExecute$3550	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    secret_check@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S902$3$0	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S902$2$0	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S902$4$0	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_26(CODE[5]), secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[11]), STR_22(CODE[13]), STR_19(CODE[39]), 
		 -> STR_18(CODE[36]), STR_17(CODE[34]), STR_16(CODE[28]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), 
		 -> STR_10(CODE[5]), STR_9(CODE[18]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_26(CODE[5]), secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[11]), STR_22(CODE[13]), STR_19(CODE[39]), 
		 -> STR_18(CODE[36]), STR_17(CODE[34]), STR_16(CODE[28]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), 
		 -> STR_10(CODE[5]), STR_9(CODE[18]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), 

    memset@p1	PTR void  size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    memset@p	PTR unsigned char  size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_21(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> flashy_Main@hit_counter(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    slot_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_Main@data	PTR struct t_slot_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_Init@data	PTR struct t_slot_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_clear@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Main@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_check@inputs	PTR unsigned char  size(1) Largest target is 26
		 -> secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), 

    secret_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    secret_Init@data	PTR struct t_secret_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    S2670secret_input$variable	PTR unsigned int  size(1) Largest target is 2
		 -> secret_value(BANK1[2]), 

    secret_inputs.variable	PTR unsigned int  size(1) Largest target is 2
		 -> secret_value(BANK1[2]), 

    locked_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_clear@data	PTR struct t_locked_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Main@data	PTR struct t_locked_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_Init@data	PTR struct t_locked_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Main@data	PTR struct t_flashy_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_display_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_display_option@data	PTR struct t_flashy_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_Init@data	PTR struct t_flashy_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_option	PTR unsigned char [10] size(2) Largest target is 39
		 -> STR_19(CODE[39]), STR_18(CODE[36]), STR_17(CODE[34]), STR_16(CODE[28]), 
		 -> STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[8]), 
		 -> STR_11(CODE[9]), STR_10(CODE[5]), 

    FLASHY_TEXT_SECRET_TEST	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_9(CODE[18]), 

    FLASHY_TEXT	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    menu_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_clear@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_run_option@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_display_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_display_option@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_Main@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Main@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_Init@taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_Init@data	PTR struct t_menu_taskData size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_option	PTR unsigned char [4] size(2) Largest target is 10
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    displayL2_ClrUserLeds@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_SetUserLeds@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_EraseSegDisplay@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_ForceUpdate@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_PutStr@str	PTR unsigned char  size(2) Largest target is 39
		 -> flashy_Main@hit_counter(BANK0[6]), STR_20(CODE[5]), STR_19(CODE[39]), STR_18(CODE[36]), 
		 -> STR_17(CODE[34]), STR_16(CODE[28]), STR_15(CODE[21]), STR_14(CODE[19]), 
		 -> STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), marquee@display_string(BANK0[5]), marquee_speedy@display_string(BANK0[5]), 

    displayL2_PutStr@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_PutChar@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL2_Initialize@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL1_Update@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL1_SetUserLed@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL1_SetSegChar@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    sp__memset	PTR void  size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    displayL1_Initialize@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_irTxRelease@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_irTxRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_userLedsClr@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_userLedsSet@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_userLedsRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_segDisplayErase@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_segDisplayPutStr@str	PTR unsigned char  size(2) Largest target is 39
		 -> flashy_Main@hit_counter(BANK0[6]), STR_20(CODE[5]), STR_19(CODE[39]), STR_18(CODE[36]), 
		 -> STR_17(CODE[34]), STR_16(CODE[28]), STR_15(CODE[21]), STR_14(CODE[19]), 
		 -> STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 
		 -> marquee@display_string(BANK0[5]), marquee_speedy@display_string(BANK0[5]), 

    nullifyBadge_segDisplayPutStr@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_segDisplayForceUpdate@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_segDisplayRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    nullifyBadge_platformInit@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    marquee@string	PTR unsigned char  size(2) Largest target is 39
		 -> STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[11]), 
		 -> STR_22(CODE[13]), STR_19(CODE[39]), STR_18(CODE[36]), STR_17(CODE[34]), 
		 -> STR_16(CODE[28]), STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), 
		 -> STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), STR_9(CODE[18]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    marquee_speedy@string	PTR unsigned char  size(2) Largest target is 39
		 -> STR_19(CODE[39]), STR_18(CODE[36]), STR_17(CODE[34]), STR_16(CODE[28]), 
		 -> STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[8]), 
		 -> STR_11(CODE[9]), STR_10(CODE[5]), 

    schedulerInst.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    S1166t_secret_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    S1157t_locked_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    S1143t_slot_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    S1134t_menu_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    S1116t_flashy_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 

    secret_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    secret_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    secret_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    secret_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    locked_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    locked_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    locked_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    locked_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    slot_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    slot_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    slot_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    slot_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    menu_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    menu_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    menu_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    menu_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    flashy_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    flashy_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    flashy_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    flashy_task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    fadeDisplay_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    fadeDisplay_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    S1013t_fadeDisplay_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    fadeDisplay_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    schedulerExecute@scheduler.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    schedulerExecute@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    schedulerExecute@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    scheduler_TaskRemove@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskRemove@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskRemove@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskRemove@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskRemove@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_TaskAdd@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskAdd@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskAdd@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskAdd@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskAdd@scheduler.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskAdd@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), 

    scheduler_TaskAdd@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_TaskAdd@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    scheduler_TaskInit@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskInit@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskInit@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskInit@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskInit@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), 

    S923t_scheduler$tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_Init@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_Init@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    S902t_schedulerTask$taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskRun@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    S902t_schedulerTask$taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskRun@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    S902t_schedulerTask$taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskRun@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    S902t_schedulerTask$taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskRun@task.taskData	PTR void  size(2) Largest target is 31
		 -> secret_TaskData(BANK5[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK4[14]), 
		 -> flashy_TaskData(BANK7[30]), NULL(NULL[0]), 

    scheduler_TaskRun@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK2[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    SPI1_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 10
		 -> displayL1_Update@tmpRxBuf(BANK0[10]), 

    SPI1_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 18
		 -> badge_inst(BANK2[18]), 


Critical Paths under _main in COMMON

    _schedulerExecute->_TMR0_Read16bitTimer
    _scheduler_TaskRun->_TMR0_Read16bitTimer
    _secret_check->_strlen
    _nullifyBadge_userLedsClr->_displayL2_ClrUserLeds
    _displayL2_ClrUserLeds->_displayL1_Update
    _sprintf->___lwmod
    _rand->___lmul
    _nullifyBadge_userLedsSet->_displayL2_SetUserLeds
    _displayL2_SetUserLeds->_displayL1_Update
    _displayL1_SetSegChar->_displayCharReverse
    _nullifyBadge_segDisplayForceUpdate->_displayL2_ForceUpdate
    _displayL2_ForceUpdate->_displayL1_Update
    ___lwmod->___lwdiv
    _displayL2_Initialize->_displayL1_Initialize
    _displayL1_Initialize->_displayL1_Update
    _displayL1_Update->_SPI1_Exchange8bitBuffer
    _SPI1_Exchange8bitBuffer->_SPI1_Exchange8bit
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_schedulerExecute
    _scheduler_TaskAdd->_flashy_Init
    _scheduler_TaskAdd->_locked_Init
    _scheduler_TaskAdd->_menu_Init
    _scheduler_TaskAdd->_secret_Init
    _scheduler_TaskAdd->_slot_Init
    _slot_Init->_nullifyBadge_segDisplayErase
    _secret_Init->_nullifyBadge_segDisplayErase
    _menu_Init->_nullifyBadge_segDisplayErase
    _locked_Init->_nullifyBadge_segDisplayErase
    _flashy_Init->_nullifyBadge_segDisplayErase
    _schedulerExecute->_scheduler_TaskRun
    _scheduler_TaskRun->_flashy_Main
    _menu_Main->_menu_display_option
    _menu_run_option->_menu_clear
    _menu_clear->_nullifyBadge_segDisplayErase
    _menu_display_option->_marquee
    _locked_clear->_nullifyBadge_segDisplayErase
    _displayL2_ClrUserLeds->_displayL1_Update
    _nullifyBadge_segDisplayErase->_displayL2_EraseSegDisplay
    _displayL2_EraseSegDisplay->_displayL2_PutStr
    _sprintf->___lwmod
    _let_alternate->_nullifyBadge_userLedsSet
    _led_roundabout->_nullifyBadge_userLedsSet
    _led_rand->_nullifyBadge_userLedsSet
    _rand->___lmul
    _led_curtain->_nullifyBadge_userLedsSet
    _led_circle->_nullifyBadge_userLedsSet
    _nullifyBadge_userLedsSet->_displayL2_SetUserLeds
    _displayL2_SetUserLeds->_displayL1_Update
    _flashy_display_option->_marquee
    _flashy_display_option->_marquee_speedy
    _marquee_speedy->_nullifyBadge_segDisplayPutStr
    _marquee->_nullifyBadge_segDisplayPutStr
    _nullifyBadge_segDisplayPutStr->_displayL2_PutStr
    _displayL2_PutStr->_displayL2_PutChar
    _displayL2_PutChar->_displayL1_SetSegChar
    _displayL2_ForceUpdate->_displayL1_Update
    _nullifyBadge_platformInit->_displayL2_Initialize
    _displayL1_Initialize->_displayL1_Update

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  192558
                                              0 BANK1      1     1      0
          _nullifyBadge_platformInit
                   _schedulerExecute
                     _scheduler_Init
                  _scheduler_TaskAdd
                 _scheduler_TaskInit
 ---------------------------------------------------------------------------------
 (1) _scheduler_TaskInit                                   4     2      2     417
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _scheduler_TaskAdd                                   10     8      2   36288
                                             29 BANK0     10     8      2
                   Absolute function *
                        _flashy_Init *
                        _locked_Init *
                          _menu_Init *
                        _secret_Init *
                          _slot_Init *
 ---------------------------------------------------------------------------------
 (2) _slot_Init                                            4     2      2    6979
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _secret_Init                                          4     2      2    7044
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _menu_Init                                            4     2      2    6979
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _locked_Init                                          4     2      2    7044
                                             25 BANK0      4     2      2
                   _locked_lock_leds
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _flashy_Init                                          4     2      2    7134
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_userLedsRegister                        1     1      0     242
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_segDisplayRegister                      1     1      0     247
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scheduler_Init                                       3     3      0     197
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _schedulerExecute                                    14    14      0  151753
                                             66 BANK0     14    14      0
                _TMR0_Read16bitTimer
                  _scheduler_TaskRun
 ---------------------------------------------------------------------------------
 (2) _scheduler_TaskRun                                    2     0      2  151197
                                             64 BANK0      2     0      2
                   Absolute function *
                _TMR0_Read16bitTimer
                        _flashy_Main *
                        _locked_Main *
                          _menu_Main *
                        _secret_Main *
                          _slot_Main *
 ---------------------------------------------------------------------------------
 (3) _slot_Main                                            6     4      2   10716
                                             50 BANK0      6     4      2
                            _marquee
            _nullifyBadge_buttonsGet
 ---------------------------------------------------------------------------------
 (3) _secret_Main                                          8     6      2    3770
                                             50 BANK0      8     6      2
            _nullifyBadge_buttonsGet
                       _secret_check
                       _secret_clear
 ---------------------------------------------------------------------------------
 (4) _secret_clear                                         2     0      2     286
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _secret_check                                        19    16      3    1771
                                              7 COMMON     3     0      3
                                              0 BANK0     10    10      0
                             ___bmul
                             _strlen
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1      28
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _menu_Main                                            7     5      2   35706
                                             50 BANK0      7     5      2
                         _menu_clear
                _menu_display_option
                    _menu_run_option
            _nullifyBadge_buttonsGet
 ---------------------------------------------------------------------------------
 (4) _menu_run_option                                      2     0      2    6787
                                             27 BANK0      2     0      2
                         _menu_clear
 ---------------------------------------------------------------------------------
 (5) _menu_clear                                           2     0      2    6644
                                             25 BANK0      2     0      2
       _nullifyBadge_segDisplayErase
           _nullifyBadge_userLedsClr
 ---------------------------------------------------------------------------------
 (4) _menu_display_option                                  6     4      2   20763
                                             44 BANK0      6     4      2
                            ___lwmod
                            _marquee
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (3) _locked_Main                                          7     5      2   23527
                                             50 BANK0      7     5      2
                            ___lwmod
                       _locked_clear
               _locked_get_lock_leds
             _locked_get_unlock_leds
                   _locked_lock_leds
                 _locked_unlock_leds
                            _marquee
            _nullifyBadge_buttonsGet
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _locked_unlock_leds                                   2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _locked_lock_leds                                     4     4      0      34
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _locked_get_unlock_leds                               4     2      2      34
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _locked_get_lock_leds                                 8     6      2      68
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _locked_clear                                         2     0      2    6444
                                             25 BANK0      2     0      2
       _nullifyBadge_segDisplayErase
           _nullifyBadge_userLedsClr
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_userLedsClr                             1     1      0    2022
                                             11 BANK0      1     1      0
              _displayL2_ClrUserLeds
 ---------------------------------------------------------------------------------
 (4) _displayL2_ClrUserLeds                                1     1      0    1559
                                             11 COMMON     1     1      0
               _displayL1_SetUserLed
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_segDisplayErase                         1     1      0    4124
                                             24 BANK0      1     1      0
          _displayL2_EraseSegDisplay
 ---------------------------------------------------------------------------------
 (4) _displayL2_EraseSegDisplay                            1     1      0    3589
                                             23 BANK0      1     1      0
                   _displayL1_Update
                   _displayL2_PutStr
 ---------------------------------------------------------------------------------
 (3) _flashy_Main                                         14    12      2   77243
                                             50 BANK0     14    12      2
              _flashy_display_option
                         _led_circle
                        _led_curtain
                           _led_rand
                     _led_roundabout
                      _let_alternate
                            _marquee
            _nullifyBadge_buttonsGet
                 _nullifyBadge_irGet
               _nullifyBadge_irTxClr
          _nullifyBadge_irTxRegister
           _nullifyBadge_irTxRelease
               _nullifyBadge_irTxSet
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
           _nullifyBadge_userLedsSet
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             25    21      4    7725
                                              4 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      99
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3012
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxSet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxRelease                             2     2      0      67
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxRegister                            1     1      0      98
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxClr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irGet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_buttonsGet                              3     3      0      46
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _let_alternate                                        2     0      2    3188
                                             16 BANK0      2     0      2
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_roundabout                                       8     6      2    5716
                                             16 BANK0      8     6      2
                            ___lwmod
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_rand                                             2     2      0    3417
                                             16 BANK0      2     2      0
           _nullifyBadge_userLedsSet
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 7     5      2     316
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _led_curtain                                          8     6      2    5716
                                             16 BANK0      8     6      2
                            ___lwmod
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_circle                                           2     0      2    3188
                                             16 BANK0      2     0      2
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_userLedsSet                             3     1      2    3067
                                             13 BANK0      3     1      2
              _displayL2_SetUserLeds
 ---------------------------------------------------------------------------------
 (6) _displayL2_SetUserLeds                                3     1      2    1868
                                             11 COMMON     1     1      0
                                             11 BANK0      2     0      2
               _displayL1_SetUserLed
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (5) _displayL1_SetUserLed                                 4     2      2     376
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _flashy_display_option                                2     0      2   24233
                                             44 BANK0      2     0      2
                            _marquee
                     _marquee_speedy
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
 ---------------------------------------------------------------------------------
 (5) _marquee_speedy                                      18    12      6    9116
                                             26 BANK0     18    12      6
                            ___lwdiv
                            ___lwmod
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _marquee                                             18    14      4   10289
                                             26 BANK0     18    14      4
                            ___lwdiv
                            ___lwmod
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     400
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_segDisplayPutStr                        3     1      2    3224
                                             23 BANK0      3     1      2
                   _displayL2_PutStr
 ---------------------------------------------------------------------------------
 (5) _displayL2_PutStr                                     7     5      2    2406
                                             16 BANK0      7     5      2
                  _displayL2_PutChar
 ---------------------------------------------------------------------------------
 (6) _displayL2_PutChar                                    6     5      1    1993
                                             10 BANK0      6     5      1
               _displayL1_SetSegChar
 ---------------------------------------------------------------------------------
 (7) _displayL1_SetSegChar                                10     8      2    1298
                                              0 BANK0     10     8      2
                 _displayCharReverse
 ---------------------------------------------------------------------------------
 (8) _displayCharReverse                                  11     9      2     331
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_segDisplayForceUpdate                   1     1      0    1399
                                             11 BANK0      1     1      0
              _displayL2_ForceUpdate
 ---------------------------------------------------------------------------------
 (6) _displayL2_ForceUpdate                                1     1      0    1152
                                             11 COMMON     1     1      0
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4    2392
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4    1001
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _TMR0_Read16bitTimer                                 11     9      2     102
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _nullifyBadge_platformInit                            1     1      0    3903
                                             12 BANK0      1     1      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                 _PWM1_LoadDutyValue
                    _PWM2_Initialize
                 _PWM2_LoadDutyValue
                    _PWM5_Initialize
                 _PWM5_LoadDutyValue
                    _PWM6_Initialize
                 _PWM6_LoadDutyValue
                    _SPI1_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
               _displayL2_Initialize
 ---------------------------------------------------------------------------------
 (2) _displayL2_Initialize                                 1     1      0    2481
                                             11 BANK0      1     1      0
               _displayL1_Initialize
                             _memset
 ---------------------------------------------------------------------------------
 (3) _displayL1_Initialize                                 1     1      0    1752
                                             11 COMMON     1     1      0
                   _displayL1_Update
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     569
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _displayL1_Update                                    13    13      0    1085
                                              9 COMMON     2     2      0
                                              0 BANK0     11    11      0
            _SPI1_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (6) _SPI1_Exchange8bitBuffer                              7     5      2     759
                                              2 COMMON     7     5      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI1_Exchange8bit                                    1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     155
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               1     1      0      34
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     332
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2     220
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     220
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nullifyBadge_platformInit
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM1_LoadDutyValue
     _PWM2_Initialize
     _PWM2_LoadDutyValue
     _PWM5_Initialize
     _PWM5_LoadDutyValue
     _PWM6_Initialize
     _PWM6_LoadDutyValue
     _SPI1_Initialize
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PWM1_Initialize
       _PWM2_Initialize
       _PWM5_Initialize
       _PWM6_Initialize
       _SPI1_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
         _TMR0_StartTimer
       _TMR2_Initialize
         _TMR2_StartTimer
       _TMR4_Initialize
         _TMR4_StartTimer
       _WDT_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer
     _displayL2_Initialize
       _displayL1_Initialize
         _displayL1_Update
           _SPI1_Exchange8bitBuffer
             _SPI1_Exchange8bit
         _memset
       _memset
   _schedulerExecute
     _TMR0_Read16bitTimer
     _scheduler_TaskRun
       Absolute function(Fake) *
       _TMR0_Read16bitTimer *
       _flashy_Main *
         _flashy_display_option
           _marquee
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _marquee_speedy
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
         _led_circle
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _led_curtain
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _led_rand
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _rand
             ___lmul
         _led_roundabout
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _let_alternate
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
         _nullifyBadge_irGet
         _nullifyBadge_irTxClr
         _nullifyBadge_irTxRegister
         _nullifyBadge_irTxRelease
         _nullifyBadge_irTxSet
         _nullifyBadge_segDisplayForceUpdate
           _displayL2_ForceUpdate
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
         _nullifyBadge_segDisplayPutStr
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
         _nullifyBadge_userLedsSet
           _displayL2_SetUserLeds
             _displayL1_SetUserLed
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _locked_Main *
         ___lwmod
           ___lwdiv (ARG)
         _locked_clear
           _nullifyBadge_segDisplayErase
             _displayL2_EraseSegDisplay
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
           _nullifyBadge_userLedsClr
             _displayL2_ClrUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _locked_get_lock_leds
         _locked_get_unlock_leds
         _locked_lock_leds
         _locked_unlock_leds
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
         _nullifyBadge_userLedsSet
           _displayL2_SetUserLeds
             _displayL1_SetUserLed
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
       _menu_Main *
         _menu_clear
           _nullifyBadge_segDisplayErase
             _displayL2_EraseSegDisplay
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
           _nullifyBadge_userLedsClr
             _displayL2_ClrUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _menu_display_option
           ___lwmod
             ___lwdiv (ARG)
           _marquee
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _menu_run_option
           _menu_clear
             _nullifyBadge_segDisplayErase
               _displayL2_EraseSegDisplay
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
                 _displayL2_PutStr
                   _displayL2_PutChar
                     _displayL1_SetSegChar
                       _displayCharReverse
             _nullifyBadge_userLedsClr
               _displayL2_ClrUserLeds
                 _displayL1_SetUserLed
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
         _nullifyBadge_buttonsGet
       _secret_Main *
         _nullifyBadge_buttonsGet
         _secret_check
           ___bmul
           _strlen
         _secret_clear
       _slot_Main *
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
   _scheduler_Init
   _scheduler_TaskAdd
     Absolute function(Fake) *
     _flashy_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _locked_Init *
       _locked_lock_leds
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _menu_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _secret_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _slot_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
   _scheduler_TaskInit

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      1      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4B       9       93.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     21A      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      46      16       87.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      38      18       70.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      1E      20       37.5%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     21A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              10      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Jul 23 17:23:56 2017

                          _SPI1_Exchange8bit 2637                                            pc 0002  
                             ___bmul@product 0073                   __end_of_gamma_table_256x1k 1200  
                         ?_SPI1_Exchange8bit 0070                                  __CFG_CP$OFF 0000  
                                         l18 263C                        _displayL2_ClrUserLeds 2700  
                        ___wmul@multiplicand 0073                     marquee_speedy@multiplier 003E  
                               ?_led_curtain 0030                nullifyBadge_buttonsGet@retVal 0073  
                __size_of_PWM6_LoadDutyValue 0016                                  __CFG_LVP$ON 0000  
                 ??_nullifyBadge_userLedsClr 007C                   ??_nullifyBadge_userLedsSet 007C  
                                        l208 2650                                          l976 1B77  
                                        _GIE 005F              ??_nullifyBadge_segDisplayPutStr 007C  
                                        _PR2 001E                                          _PR4 0416  
                               __CFG_CPD$OFF 0000                               _scheduler_Init 187F  
                        ??_SPI1_Exchange8bit 0071                           _locked_unlock_leds 07ED  
                marquee_speedy@string_length 0048                              _TMR2_Initialize 2653  
             SPI1_Exchange8bitBuffer@dataOut 0073                     displayL1_Update@tmpRxBuf 0020  
                                        wreg 0009                 marquee_speedy@display_string 0041  
                displayL1_Initialize@display 007B                                         S8567 2093  
        nullifyBadge_userLedsSet@userLedData 002D                              led_curtain@leds 0034  
                    secret_Main@secret_found 0056                              led_curtain@size 0036  
                       _displayL1_Initialize 272C                                         l1112 0B74  
                                       l1122 0C5C                                         l1117 0BE7  
                                       l1109 0B07                                         l1218 0385  
                                       l1194 197A                                         l1452 1834  
                                       l1198 27F9                                         l1359 06E1  
                                       l7111 0175                                         l7211 08F8  
                                       l7131 01D1                                         l6325 19F5  
                                       l6317 19E4                                         l6405 1982  
                                       l7213 0907                                         l7117 0198  
                                       l6503 19C8                                         l6343 1BD7  
                                       l6431 18BE                                         l7223 092C  
                                       l7151 0222                                         l7119 019D  
                                       l6361 1D58                                         l6433 18CA  
                                       l7313 0A9F                                         l7241 0968  
                                       l7233 0950                                         l7305 0A71  
                                       l7161 024E                                         l7137 01E6  
                                       l8041 07CA                                         l6363 1D6C  
                                       l6507 19D1                                         l6523 131D  
                                       l6451 1A3F                                         l6603 182E  
                                       l7307 0A85                                         l7147 0212  
                                       l7091 0128                                         l7083 00F4  
                                       l8035 0772                                         l6357 1D49  
                                       l6365 1D70                                         l6621 1808  
                                       l7333 0AF2                                         l7309 0A90  
                                       l7253 098F                                         l7173 0281  
                                       l7069 00B9                                         l8045 07D8  
                                       l6375 1D78                                         l6367 1D75  
                                       l6455 1A4A                                         l7415 0C43  
                                       l7271 09CD                                         l7247 097B  
                                       l7183 0897                                         l7087 011A  
                                       l6481 1AC0                                         l6473 1AA2  
                                       l6553 13BB                                         l6529 1344  
                                       l6801 06FD                                         l6721 1B59  
                                       l6713 1B3F                                         l6617 1802  
                                       l7513 0DE3                                         l7425 0C60  
                                       l7097 013D                                         l7089 0120  
                                       l8073 143D                                         l8049 07E0  
                                       l6475 1AAE                                         l6547 1394  
                                       l6811 0717                                         l6803 0700  
                                       l7531 0E2C                                         l7523 0E07  
                                       l7339 0B0B                                         l7283 0A01  
                                       l7259 099F                                         l7275 09DA  
                                       l7099 0141                                         l6485 1AC9  
                                       l6805 0704                                         l6709 1FE9  
                                       l6717 1B4C                                         l7445 0CB8  
                                       l7365 0B78                                         l7277 09EB  
                                       l7269 09C1                                         l6743 1F87  
                                       l6727 1B66                                         l7535 0E39  
                                       l7527 0E19                                         l7519 0DF6  
                                       l7463 0D0E                                         l7359 0B5F  
                                       l7295 0A49                                         l6497 19B0  
                                       l6825 072A                                         l6817 0726  
                                       l6753 0643                                         l7561 0EE5  
                                       l7537 0E3E                                         l7385 0BCE  
                                       l7641 0318                                         l7633 02F5  
                                       l7625 02C4                                         l7713 0485  
                                       l6499 19BC                                         l6739 1F5F  
                                       l6659 279C                                         l6771 0699  
                                       l6827 0620                                         l7571 0F70  
                                       l7491 0D8A                                         l7483 0D61  
                                       l7395 0BEB                                         l7563 0F36  
                                       l7299 0A5E                                         l7707 046B  
                                       l6597 26FE                                         l6781 06B0  
                                       l6829 0765                                         l7565 0F59  
                                       l7557 0E92                                         l7493 0D8F  
                                       l7653 0365                                         l7741 0508  
                                       l7725 04BC                                         l6695 1816  
                                       l6759 0653                                         l7655 0370  
                                       l7647 0348                                         l6793 06D5  
                                       l6769 0681                                         l7809 1478  
                                       l7577 0F89                                         l7593 0FC9  
                                       l7673 03C7                                         l7761 056C  
                                       l7745 0520                                         l7729 04D4  
                                       l6787 06B6                                         l8571 1B6C  
                                       l7595 0FD6                                         l7667 039B  
                                       l8483 16FB                                         l6893 15FD  
                                       l7589 0FBD                                         l8565 08FE  
                                       l7685 03F2                                         l7677 03D1  
                                       l7669 03AF                                         l7773 05A0  
                                       l7757 0554                                         l7839 27B6  
                                       l7855 27CC                                         l6895 160E  
                                       l7695 0429                                         l7687 03FE  
                                       l6897 1562                                         l8569 0F3B  
                                       l7777 05B8                                         l7793 05FD  
                                       l6899 1614                                         l7699 0454  
                                       l7795 060F                                         l7789 05EC  
                                       STR_1 2897                                         STR_2 2892  
                        ?_locked_unlock_leds 0070                                         STR_3 2072  
                                       STR_4 288D                                         STR_5 286E  
                                       STR_6 2847                                         STR_7 2868  
                                       STR_8 2888                                         STR_9 2828  
                    __end_of_PWM1_Initialize 2687                                         _LATA 010C  
                                       _LATB 010D                                         _LATC 010E  
                                       u4040 1E33                                         u4025 15C7  
                                       u4035 1568                                         u4125 0192  
                                       u3600 12F4                                         u3505 1AAF  
                                       u3515 1AB9                                         u3525 1AC1  
                                       u3445 1A4B                                         u3630 136B  
                                       u3455 1A52                                         u3555 19B3  
                                       u3715 1835                                         u3485 1AA5  
                                       u3725 183A                                         u3575 19C2  
                                       u4705 27C3                                         u3585 19C9  
                                       u3675 1CF0                                         u4395 0D84  
                                       u4804 13DF                                         u4805 13DD  
                                       u4655 27E0                                         u3775 1A1D  
                                       u3935 06F0                                         u4744 0783  
                                       u4665 1211                                         u3785 1A2B  
                                       u4825 142D                                         u4745 0781  
                                       u4764 07A2                                         u4685 27AD  
                                       u4765 07A0                                         u3895 06CB  
                                       u3995 1974                                         _PLLR 48E0  
                                       _TMR2 001D                                         _TMR4 0415  
                                       _WPUA 020C                                         _WPUB 020D  
                                       _WPUC 020E                                 __CFG_WRT$OFF 0000  
                              __CFG_FCMEN$ON 0000                                         _main 1616  
                                       _rand 1CBA                              _TMR0_StartTimer 25F5  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                                __CFG_BOREN$ON 0000  
                           ??_marquee_speedy 0040                                __CFG_BORV$LOW 0000  
                                       start 0016                    __end_of_SPI1_Exchange8bit 2640  
                        _menu_display_option 1F9E                              _PWM5_Initialize 26A8  
                        locked_Main@taskData 0052                 displayL2_ClrUserLeds@display 007B  
                    displayL2_PutStr@display 0035                                __CFG_CSWEN$ON 0000  
                          ___bmul@multiplier 0074                                __CFG_MCLRE$ON 0000  
                       _displayL1_SetSegChar 1BB5                   __end_of_PWM5_LoadDutyValue 27E7  
                        menu_run_option@data 003B                         _displayL2_Initialize 1937  
                       ??_locked_unlock_leds 0071                      __end_of_PWM2_Initialize 2692  
                    __end_of_TMR0_Initialize 18BA               ??_TMR0_DefaultInterruptHandler 0070  
             __size_of_OSCILLATOR_Initialize 000A                       __end_of_scheduler_Init 189C  
                       _displayL1_SetUserLed 276D                        marquee@display_string 003F  
              __end_of_OSCILLATOR_Initialize 2653                      ?_locked_get_unlock_leds 0071  
                    _locked_locking_leds_idx 00A2                                        ?_main 0070  
                                      ?_rand 0024                                        STR_10 2888  
                                      STR_11 2851                                        STR_20 2883  
                                      STR_12 285A                                        STR_21 289C  
                                      STR_13 2862                                        STR_22 283A  
                                      STR_14 2815                                        STR_23 283C  
                                      STR_15 2800                                        STR_24 287E  
                                      STR_16 2077                                        STR_25 2879  
                                      STR_17 2055                                __CFG_WDTE$OFF 0000  
                                      STR_26 2874                                        STR_18 2031  
                                      STR_19 200A                             _schedulerExecute 13C7  
                                      _T2CON 001F                      _flashy_leds_state_track 00AE  
                                      _T4CON 0417                               __CFG_DEBUG$OFF 0000  
                            __end_of___lwdiv 1ACE                              __end_of___lwmod 19D6  
                                      i1l363 0011                                        _OSCEN 091D  
                                      _TMR0H 0016                                        _TMR0L 0015  
                             _led_roundabout 1C37                         ?_menu_display_option 004C  
             nullifyBadge_irTxRegister@badge 0071                   __end_of_scheduler_TaskInit 1BB5  
                                      _TRISA 008C                                        _TRISB 008D  
                                      _TRISC 008E             __size_of_nullifyBadge_buttonsGet 0031  
          __size_of_TMR0_SetInterruptHandler 0006                              _TMR4_Initialize 2692  
                            _PWM6_Initialize 26B4                          ___lmul@multiplicand 0075  
                  ?_TMR0_SetInterruptHandler 0071                        _displayL2_ForceUpdate 260F  
                     ??_locked_get_lock_leds 0073                             __end_of_TMR0_ISR 26E5  
                               _badge_locked 007C                                 ?_locked_Main 0052  
                               ?_locked_Init 0039                        ?_displayL1_Initialize 0070  
                            __end_of_dpowers 200A                      _SPI1_Exchange8bitBuffer 1D40  
                             _WDT_Initialize 0800                              __end_of_isdigit 2700  
                            __end_of_marquee 13C7                                        _randx 00DC  
                                      pclath 000A           __size_of_nullifyBadge_platformInit 0055  
                                      status 0003                                        wtemp0 007E  
                            __end_of_sprintf 076B                              _TMR2_StartTimer 25F8  
          __size_of_nullifyBadge_irTxRelease 000B                             _menu_option_size 00B2  
                  ?_nullifyBadge_irTxRelease 0070                     __size_of_SPI1_Initialize 0008  
                     menu_Main@buttonPressed 0056                 displayL1_SetSegChar@charData 0028  
                      ?_displayL1_SetSegChar 0020                              __initialization 0018  
                          ?_displayL1_Update 0070                                 __end_of_main 1700  
                               __end_of_rand 1CFD                        ?_displayL2_Initialize 0070  
                          ?_displayL2_PutStr 0030                       __size_of_let_alternate 0014  
                     ?_displayL2_ClrUserLeds 0070               __end_of_locked_get_unlock_leds 2800  
                         ??_displayL1_Update 0079                      __end_of_TMR2_Initialize 265D  
                      ?_displayL1_SetUserLed 0071                  ?_INTERRUPT_InterruptManager 0070  
                         ??_displayL2_PutStr 0032             displayCharReverse@retValUpperRev 007A  
                            ?_scheduler_Init 0070                       __end_of_led_roundabout 1C78  
                                     ??_main 00E6                                       ??_rand 0026  
                              slot_Main@data 0056                         _nullifyBadge_irTxClr 25FE  
                      ??_menu_display_option 007C                         _nullifyBadge_irTxSet 2601  
                               ?_secret_Main 0052                                 ?_secret_Init 0039  
                     __end_of_WDT_Initialize 0804                                slot_Init@data 003B  
      __end_of_nullifyBadge_segDisplayPutStr 2667       __size_of_nullifyBadge_segDisplayPutStr 000A  
              _nullifyBadge_segDisplayPutStr 265D                      __end_of_TMR0_StartTimer 25F8  
                            scheduler_Init@k 0073               nullifyBadge_platformInit@badge 002C  
                                     _CCPR1H 0292                                       _CCPR2H 0296  
                                     _CCPR1L 0291                                       _CCPR2L 0295  
                                     _ANSELA 018C                                       _ANSELB 018D  
                                     _ANSELC 018E                                       _T0CON0 0017  
                                     _T0CON1 0018                             ?_PWM1_Initialize 0070  
                                     _ODCONA 028C                                       _ODCONB 028D  
                                     _ODCONC 028E                      __end_of_PWM5_Initialize 26B4  
                __end_of_TMR0_Read16bitTimer 187F                                       _OSCFRQ 091F  
                                     _WDTCON 0097                              _TMR4_StartTimer 25FB  
                      SPI1_Exchange8bit@data 0071                            _scheduler_TaskAdd 076B  
                   __size_of_menu_run_option 003A                     __end_of_locked_lock_leds 1862  
          __end_of_nullifyBadge_platformInit 1E8A                   __size_of_SPI1_Exchange8bit 0009  
                          _scheduler_TaskRun 18F6                               __CFG_PWRTE$OFF 0000  
                         ?_scheduler_TaskAdd 003D                           ?_scheduler_TaskRun 0060  
                                     ___bmul 1800                             __end_of_led_rand 274C  
                                     ___lmul 1A36                     locked_get_lock_leds@leds 0077  
                                     ___wmul 182C                               __CFG_STVREN$ON 0000  
                   locked_get_lock_leds@size 0075                                       _deaths 00A8  
                       __size_of_flashy_Main 07B5                         __size_of_flashy_Init 0096  
                                  ??___lwdiv 0075                                    ??___lwmod 0079  
                      _flashy_display_option 1F3F                             ?_TMR0_Initialize 0070  
                           ?_PWM2_Initialize 0070                                ?_locked_clear 0039  
                                     _memset 1811                      __end_of_PWM6_Initialize 26C0  
                    __end_of_TMR4_Initialize 269D                          ??_scheduler_TaskAdd 003F  
           nullifyBadge_segDisplayPutStr@str 0037             __end_of_nullifyBadge_userLedsClr 2627  
           __end_of_nullifyBadge_userLedsSet 26F2                          ??_scheduler_TaskRun 007C  
                            ?_led_roundabout 0030                        ?_nullifyBadge_irTxClr 0070  
                      ?_nullifyBadge_irTxSet 0070                                       _strlen 18BA  
                               __pdataBIGRAM 26F0                         __size_of_led_curtain 0041  
                     ?_displayL2_ForceUpdate 0070                                    ??_isdigit 0071  
                                  ??_marquee 003E                    ??_SPI1_Exchange8bitBuffer 0074  
                            ?_WDT_Initialize 0070                       ??_displayL1_Initialize 007B  
                      _displayL2_SetUserLeds 18D8                TMR0_Read16bitTimer@readValLow 007A  
                      __end_of_TMR0_CallBack 267C                                _let_alternate 2791  
                    __end_of_TMR2_StartTimer 25FB     TMR0_SetInterruptHandler@InterruptHandler 0071  
                                  ??_sprintf 0028                   ?_displayL2_EraseSegDisplay 0070  
                 __end_of_nullifyBadge_irGet 2609                         locked_lock_leds@size 0073  
                          _SYSTEM_Initialize 1916             displayL2_EraseSegDisplay@display 0037  
                 ?_nullifyBadge_irTxRegister 0070                            _menu_options_leds 01C0  
                  __end_of_scheduler_TaskAdd 07ED                      __end_of__initialization 00A3  
                  secret_check@buttonPressed 0079                    __end_of_scheduler_TaskRun 1916  
                     menu_display_option@led 0050                      _roundabout_leds_inverse 02A0  
                         ?_SYSTEM_Initialize 0070                   __end_of_PWM2_LoadDutyValue 27D1  
                     ??_displayL1_SetSegChar 0022                  PWM1_LoadDutyValue@dutyValue 0071  
                  secret_check@currents_size 0025                          ___bmul@multiplicand 0071  
                              led_rand@spark 0030                       ??_displayL2_Initialize 007C  
                          _displayL2_PutChar 1D8E                               __pcstackCOMMON 0070  
                displayL1_SetSegChar@charPos 0021                  __size_of_displayCharReverse 002F  
                               __pidataBANK1 2667                                 __pidataBANK2 277F  
                               __pidataBANK3 1CFD                                 __pidataBANK5 1B06  
                               __pidataBANK6 1ACE                          ??_SYSTEM_Initialize 0073  
                                  ?_TMR0_ISR 0070                       ??_displayL1_SetUserLed 0073  
                         ?_displayL2_PutChar 002A                                   _badge_inst 0120  
                             ??_locked_clear 007C                            ??_SPI1_Initialize 0071  
                displayL1_SetSegChar@display 0027                           _PWM1_LoadDutyValue 27A5  
                      scheduler_TaskAdd@task 003D                             ?_TMR2_Initialize 0070  
                        locked_Init@taskData 0039                          _flashy_sparkle_rate 00AC  
       __end_of_nullifyBadge_segDisplayErase 2621        __size_of_nullifyBadge_segDisplayErase 0006  
               _nullifyBadge_segDisplayErase 261B                      _nullifyBadge_buttonsGet 1A05  
                        ??_displayL2_PutChar 002B                          ?_PWM1_LoadDutyValue 0071  
                             ?_let_alternate 0030                           _gamma_table_256x1k 1000  
                           ?_TMR0_StartTimer 0070                      __end_of_TMR4_StartTimer 25FE  
                  __end_of_SYSTEM_Initialize 1937                           led_curtain@counter 0030  
                               sprintf@width 0032                                _menu_TaskData 025E  
                                 __pbssBANK1 00A0                                   __pbssBANK2 0120  
                                 __pbssBANK4 0220                                   __pbssBANK5 02D8  
                                 __pbssBANK7 03A0                         __size_of_locked_Main 01CA  
                       __size_of_locked_Init 0063                          secret_Main@taskData 0052  
                           ?_PWM5_Initialize 0070               ?_nullifyBadge_segDisplayPutStr 0037  
                          _flashy_option_idx 00A6                     __end_of_schedulerExecute 1443  
                      _TMR4_InterruptHandler 00BC           nullifyBadge_userLedsRegister@badge 0071  
                         __size_of_menu_Main 01EC                           __size_of_menu_Init 0062  
                  __end_of_displayL2_PutChar 1DE0                                ?_secret_check 0077  
                       ??_PWM1_LoadDutyValue 0073                                ?_secret_clear 0071  
                             _SSP1DATPPSbits 0E21                              _secret_TaskData 02D8  
                                 __pmaintext 1616                                      ?___bmul 0071  
           __end_of_TMR0_SetInterruptHandler 260F                                      ?___lmul 0071  
                     ?_flashy_display_option 004C                                      ?___wmul 0071  
                      scheduler_TaskRun@task 0060                                   ??_TMR0_ISR 0070  
                            __CFG_PPS1WAY$ON 0000                   __end_of_PWM6_LoadDutyValue 1218  
                                 __pintentry 0004                            ??_menu_run_option 007C  
                                    _CCP1CON 0293                                      _CCP2CON 0297  
                                    ?_memset 0071                               ___lmul@product 0020  
                     ??_nullifyBadge_irTxClr 0071                             ?_TMR4_Initialize 0070  
                           ?_PWM6_Initialize 0070                       ??_nullifyBadge_irTxSet 0071  
                             _SSP1CLKPPSbits 0E20                          __CFG_RSTOSC$HFINT32 0000  
                                    ?_strlen 0071                ?_nullifyBadge_segDisplayErase 0070  
                     ?_displayL2_SetUserLeds 002B                           _PWM5_LoadDutyValue 27D1  
                                    _OSCCON1 0919                     displayL2_PutChar@display 002F  
                                    _OSCCON3 091B                           __size_of_slot_Main 0082  
                         __size_of_slot_Init 005A                                      _NVMADRH 0892  
                                    _NVMADRL 0891                                      _NVMDATH 0894  
                                    _OSCTUNE 091E                                      _NVMDATL 0893  
                                    _NVMCON2 0896                                      _PWM5DCH 0618  
                                    _PWM5DCL 0617                                      _PWM6DCH 061B  
                                    _PWM6DCL 061A                                      _PWM5CON 0619  
                                    _PWM6CON 061C                                      _SSP1ADD 0212  
                       __size_of_secret_Main 01BD                                      _PPSLOCK 0E0F  
                                    _SSP1BUF 0211                                   _led_circle 2640  
                       __size_of_secret_Init 005B                             ?_TMR2_StartTimer 0070  
                                  ?_led_rand 0070                          ?_PWM5_LoadDutyValue 0071  
                    _FLASHY_TEXT_SECRET_TEST 00E2                     flashy_Main@buttonPressed 005C  
                 __size_of_scheduler_TaskAdd 0082            __size_of_nullifyBadge_userLedsClr 0006  
                 __size_of_scheduler_TaskRun 0020            __size_of_nullifyBadge_userLedsSet 000D  
                         _scheduler_TaskInit 1B78                    ?_nullifyBadge_userLedsClr 0070  
                  ?_nullifyBadge_userLedsSet 002D                               ??_secret_check 0020  
                             ??_secret_clear 0073                      ??_displayL2_ClrUserLeds 007B  
               displayL2_SetUserLeds@display 007B                             ??_scheduler_Init 0071  
                        ?_scheduler_TaskInit 0071                              __size_of___bmul 0011  
                            __size_of___lmul 0032                              __size_of___wmul 001B  
            ??_nullifyBadge_userLedsRegister 0071                                      ___lwdiv 1A9A  
                         scheduler_TaskAdd@k 0046                                      ___lwmod 19A9  
                       ??_PWM5_LoadDutyValue 0073                  __size_of_locked_unlock_leds 0013  
                  ??_nullifyBadge_buttonsGet 0071                              _roundabout_leds 02BC  
                    scheduler_Init@scheduler 0072                              __size_of_memset 001B  
                      displayL1_SetSegChar@c 0020                              _locked_TaskData 0242  
                                 _menu_clear 0804                                      __ptext1 1B78  
                                    __ptext2 076B                                      __ptext3 1EE4  
                                    __ptext4 127A                                      __ptext5 1218  
                                    __ptext6 14C5                                      __ptext7 1E8A  
                                    __ptext8 271D                                      __ptext9 262F  
                            __size_of_strlen 001E                                      _dpowers 2000  
                      _OSCILLATOR_Initialize 2649                                    _T2CONbits 001F  
                          __end_of_menu_Main 0293                            __end_of_menu_Init 127A  
                                    _isdigit 26F2                              ??_let_alternate 007C  
                                    _marquee 1350                                    _T4CONbits 0417  
                   ??_PIN_MANAGER_Initialize 0071      nullifyBadge_segDisplayForceUpdate@badge 002B  
                  __size_of_displayL1_Update 0011                         ??_scheduler_TaskInit 0073  
                  __size_of_displayL2_PutStr 002A                   __size_of_SYSTEM_Initialize 0021  
                                    _sprintf 061A                                      clrloop0 26C1  
                           ?_TMR4_StartTimer 0070                __size_of_locked_get_lock_leds 0025  
                        displayL2_PutStr@str 0030                                   ??_led_rand 007C  
                       end_of_initialization 00A3                         __end_of_locked_clear 1CBA  
                                    init_ram 26CC                                      memset@c 0071  
                                    memset@n 0073                                      memset@p 0076  
                              secret_check@i 0028                                      initloop 26CD  
                               marquee@count 003C                   __size_of_displayL2_PutChar 0052  
                          ?_locked_lock_leds 0070                            __end_of_slot_Main 14C5  
                          __end_of_slot_Init 1EE4                             ??_led_roundabout 0032  
                         ??_locked_lock_leds 0071               TMR0_Read16bitTimer@readValHigh 007B  
                __end_of_menu_display_option 2000                       slot_Main@buttonPressed 0055  
                                    strlen@s 0071                      ??_displayL2_ForceUpdate 007B  
                    __size_of_marquee_speedy 0073                           secret_check@inputs 0027  
                           ??_WDT_Initialize 0071                     _TMR0_SetInterruptHandler 2609  
                                  _PORTAbits 000C                                    _PORTBbits 000D  
                                  _PORTCbits 000E                nullifyBadge_userLedsClr@badge 002B  
                    displayL1_Update@display 002A                                  ?_led_circle 0030  
                    menu_display_option@data 004C               ??_nullifyBadge_segDisplayErase 007C  
                    menu_display_option@size 004E                             __CFG_FEXTOSC$OFF 0000  
                ??_displayL2_EraseSegDisplay 007C              __end_of_nullifyBadge_buttonsGet 1A36  
                              _schedulerInst 0220                     _nullifyBadge_irTxRelease 269D  
                ??_nullifyBadge_irTxRegister 0071                                  _CCP1CONbits 0293  
                            _SPI1_Initialize 2627                                  _CCP2CONbits 0297  
                          slot_Main@taskData 0052                                ??_flashy_Main 0054  
                              ??_flashy_Init 007C                   ?_nullifyBadge_platformInit 0070  
               __size_of_TMR0_Read16bitTimer 001D                     __size_of_PWM1_Initialize 000B  
                        secret_Init@taskData 0039                         _timer0ReloadVal16bit 00BA  
                         _nullifyBadge_irGet 2604                              flashy_Main@data 005E  
                             __end_of___bmul 1811                nullifyBadge_userLedsSet@badge 002F  
                             __end_of___lmul 1A68                                __pidataBIGRAM 1700  
                              ??_led_curtain 0032                               __end_of___wmul 1847  
                     flashy_Main@hit_counter 0056                            __size_of_TMR0_ISR 000D  
                         _PWM2_LoadDutyValue 27BB                                  ?_menu_clear 0039  
                     ?_OSCILLATOR_Initialize 0070                               __end_of_memset 182C  
                        ?_nullifyBadge_irGet 0070                              flashy_Init@data 003B  
      __end_of_nullifyBadge_userLedsRegister 272C       __size_of_nullifyBadge_userLedsRegister 000F  
              _nullifyBadge_userLedsRegister 271D                         __end_of_secret_check 1616  
                            _menu_option_idx 00B4                         __end_of_secret_clear 1A9A  
                             __end_of_strlen 18D8                          start_initialization 0018  
                   __size_of_PWM2_Initialize 000B                     __size_of_TMR0_Initialize 001E  
                        ?_PWM2_LoadDutyValue 0071              __size_of_PIN_MANAGER_Initialize 0055  
                       marquee_speedy@F14029 0166                __size_of_displayL1_Initialize 0010  
                       ??_nullifyBadge_irGet 0071                              _menu_run_option 1B3E  
                          ?_schedulerExecute 0070                      ??_flashy_display_option 007C  
                 __end_of_displayCharReverse 1A05                     ??_locked_get_unlock_leds 0073  
                         led_roundabout@leds 0034                             __CFG_LPBOREN$OFF 0000  
                         led_roundabout@size 0036                           _flashy_scroll_rate 00AA  
                       ??_PWM2_LoadDutyValue 0073                                _secret_inputs 01CA  
                         ??_schedulerExecute 0062                    flashy_display_option@data 004C  
              __size_of_displayL1_SetSegChar 0041                                     ??___bmul 0072  
                PWM2_LoadDutyValue@dutyValue 0071                                     ??___lmul 0079  
                                   ??___wmul 0075                    _displayL2_EraseSegDisplay 274C  
                                _CCPTMRSbits 029F                          __size_of_led_circle 0009  
              __size_of_displayL2_Initialize 0023                       __size_of_TMR0_CallBack 000B  
                                __pdataBANK1 00DC                                  __pdataBANK2 0159  
                                __pdataBANK3 01A0                                  __pdataBANK5 02A0  
                                __pdataBANK6 0320                                     ??_memset 0075  
                  _nullifyBadge_irTxRegister 270E                __size_of_displayL1_SetUserLed 0012  
                        __end_of_flashy_Main 1000                          __end_of_flashy_Init 155B  
                   ?_SPI1_Exchange8bitBuffer 0072                      ??_displayL2_SetUserLeds 007B  
                           secret_check@data 0077                                     ??_strlen 0073  
                           secret_check@size 0023                    schedulerExecute@scheduler 006E  
         nullifyBadge_segDisplayPutStr@badge 0039                  PWM5_LoadDutyValue@dutyValue 0071  
                       marquee_speedy@string 003A                                  __pbssCOMMON 007C  
                  schedulerExecute@tickDelta 006C                                    ___latbits 0003  
                        __end_of_led_curtain 1C37                                __pcstackBANK0 0020  
                              __pcstackBANK1 00E6                        __size_of_locked_clear 0042  
                           _displayL1_Update 275C                           _PWM6_LoadDutyValue 1202  
                   __size_of_TMR2_Initialize 000A                                ??_locked_Main 0054  
                           _displayL2_PutStr 197F                                ??_locked_Init 007C  
                     scheduler_TaskInit@task 0071                             secret_clear@data 0071  
                    __end_of_SPI1_Initialize 262F                                 _isdigit$3105 0071  
                       _asciiCharTableLookup 26F0                        _locked_lock_base_leds 00E0  
                         _flashy_option_size 00A4                                 _curtain_leds 033C  
                        ?_PWM6_LoadDutyValue 0071             displayL2_SetUserLeds@userLedData 002B  
                                sprintf@flag 002E                            __size_of_led_rand 0010  
                                sprintf@prec 002D                          __size_of_menu_clear 0047  
                      _TMR0_InterruptHandler 00B8                     __size_of_TMR0_StartTimer 0003  
                __size_of_PWM1_LoadDutyValue 0016                             ___lwdiv@dividend 0073  
                     _PIN_MANAGER_Initialize 1DE0                                  _FLASHY_TEXT 00E4  
                   __size_of_PWM5_Initialize 000C                            menu_Main@taskData 0052  
             __size_of_displayL2_ClrUserLeds 000E                __end_of_displayL2_ClrUserLeds 270E  
                displayL1_SetUserLed@display 0074                            schedulerExecute@k 006F  
                                   ?___lwdiv 0071                                     ?___lwmod 0020  
                             _marquee_speedy 12DD                         ??_PWM6_LoadDutyValue 0073  
                               _locked_clear 1C78                            ??_PWM1_Initialize 0071  
               ??_INTERRUPT_InterruptManager 0070                            marquee@multiplier 0044  
                                  __pswtext1 2093                       displayCharReverse@cVal 0071  
              __size_of_nullifyBadge_irTxClr 0003                __size_of_nullifyBadge_irTxSet 0003  
                              ??_secret_Main 0054                                ??_secret_Init 007C  
                        _locked_locking_leds 01B4                                     ?_isdigit 0070  
                                   ?_marquee 003A                     __size_of_PWM6_Initialize 000C  
                   __size_of_TMR4_Initialize 000B               ?_nullifyBadge_userLedsRegister 0070  
                displayL2_Initialize@display 002B                      __end_of_menu_run_option 1B78  
                           ___lwdiv@quotient 0077                              secret_Main@data 0058  
                                  _menu_Main 00A7                                    _menu_Init 1218  
              nullifyBadge_irTxRelease@badge 0072                                    _menu_Exit 0000  
                                   ?_sprintf 0024                          flashy_Main@taskData 0052  
                              _TMR0_CallBack 2671                           displayL2_PutChar@c 002A  
                         displayL2_PutChar@k 002E                                    _menu_task 00C0  
    displayL1_SetSegChar@dispDataVectBaseIdx 0026                            ??_TMR0_Initialize 0073  
                          ??_PWM2_Initialize 0071                              secret_Init@data 003B  
              SPI1_Exchange8bitBuffer@dataIn 0077                               ___wmul@product 0075  
                        __end_of_locked_Main 045D                          __end_of_locked_Init 12DD  
                                   _LATBbits 010D                                     _LATCbits 010E  
              SPI1_Exchange8bitBuffer@bufLen 0072                                    clear_ram0 26C0  
                                   _PIE0bits 0090                     __size_of_TMR2_StartTimer 0003  
        __size_of_INTERRUPT_InterruptManager 0012                   ??_TMR0_SetInterruptHandler 0073  
            __size_of_locked_get_unlock_leds 0019                                     _PIR0bits 0010  
                                   _PIR1bits 0011                                     _PIR2bits 0012  
                                _flashy_Main 084B                                  _flashy_Init 14C5  
                                _flashy_Exit 0000                   TMR0_Read16bitTimer@readVal 0078  
                 __end_of_locked_unlock_leds 0800                   scheduler_TaskAdd@scheduler 0045  
            __end_of_SPI1_Exchange8bitBuffer 1D8E                 __end_of_locked_get_lock_leds 197F  
                     __end_of_marquee_speedy 1350                                  _flashy_task 00CD  
                                   _SSP1CON1 0215                                     _TMR0_ISR 26D8  
                                   _SSP1STAT 0214                            slot_Init@taskData 0039  
                __size_of_PWM5_LoadDutyValue 0016                        __size_of_secret_check 00BB  
                                  _slot_Main 1443                        __size_of_secret_clear 0032  
                                  _slot_Init 1E8A                                    _slot_Exit 0000  
                                _led_curtain 1BF6              displayL1_SetUserLed@userLedVect 0071  
                            _flashy_TaskData 03A0                                    _slot_task 014C  
          schedulerExecute@currentSystemTick 0068                            ___wmul@multiplier 0071  
             __size_of_displayL2_ForceUpdate 0006                __end_of_displayL2_ForceUpdate 2615  
                 ??_nullifyBadge_irTxRelease 0071                    __size_of_locked_lock_leds 001B  
          nullifyBadge_segDisplayErase@badge 0038                     locked_Main@buttonPressed 0056  
                        _TMR0_Read16bitTimer 1862                        __end_of_let_alternate 27A5  
                               ??_led_circle 007C                              led_circle@count 0030  
                __size_of_scheduler_TaskInit 003D                               ?_TMR0_CallBack 0070  
                                 ?_menu_Main 0052                                   ?_menu_Init 0039  
                           ?_SPI1_Initialize 0070                     _nullifyBadge_userLedsClr 2621  
                          ___lmul@multiplier 0071                        led_roundabout@counter 0030  
                   _nullifyBadge_userLedsSet 26E5                          __end_of_secret_Main 061A  
                        __end_of_secret_Init 1F3F                            ??_TMR2_Initialize 0071  
                   secret_Main@buttonPressed 0057                   locked_get_unlock_leds@leds 0073  
                   __size_of_TMR4_StartTimer 0003                                 _secret_check 155B  
                               _secret_clear 1A68                         ?_TMR0_Read16bitTimer 0071  
                            marquee_speedy@i 0046                              marquee_speedy@j 004A  
                ??_nullifyBadge_platformInit 007C                     ?_nullifyBadge_buttonsGet 0070  
                               _secret_value 00DA                              _flashy_leds_idx 00B0  
 __end_of_nullifyBadge_segDisplayForceUpdate 261B  __size_of_nullifyBadge_segDisplayForceUpdate 0006  
       ??_nullifyBadge_segDisplayForceUpdate 007C          ?_nullifyBadge_segDisplayForceUpdate 0070  
         _nullifyBadge_segDisplayForceUpdate 2615                              ?_marquee_speedy 003A  
                    ??_OSCILLATOR_Initialize 0071                          marquee_speedy@count 003C  
                          ??_TMR0_StartTimer 0071                           __end_of_led_circle 2649  
                                 ?_slot_Main 0052                                   ?_slot_Init 0039  
                           __size_of___lwdiv 0034                             __size_of___lwmod 002D  
                               ??_menu_clear 007C                            ??_PWM5_Initialize 0071  
                    __size_of_scheduler_Init 001D                                  _currentTask 00B6  
                                 sprintf@val 002F                 __size_of_menu_display_option 0062  
         __size_of_displayL2_EraseSegDisplay 0010                                   _T0CON0bits 0017  
                     _locked_get_unlock_leds 27E7                             __size_of_isdigit 000E  
                           __size_of_marquee 0077                              ___lwdiv@divisor 0071  
                            ___lwdiv@counter 0076                          displayCharReverse@k 007B  
         __size_of_nullifyBadge_irTxRegister 000F                                     __ptext10 187F  
                                   __ptext11 13C7                                     __ptext20 1800  
                                   __ptext12 18F6                                     __ptext21 1B3E  
                                   __ptext13 045D                                     __ptext30 2700  
                                   __ptext22 0804                                     __ptext14 0293  
                                   __ptext31 261B                                     __ptext23 1F9E  
                                   __ptext15 00A7                                     __ptext40 2604  
                                   __ptext32 274C                                     __ptext24 07ED  
                                   __ptext16 084B                                     __ptext41 1A05  
                                   __ptext33 061A                                     __ptext25 1847  
                                   __ptext17 1443                                     __ptext50 18D8  
                                   __ptext42 2791                                     __ptext34 26F2  
                                   __ptext26 27E7                                     __ptext18 1A68  
                                   __ptext51 276D                                     __ptext43 1C37  
                                   __ptext35 182C                                     __ptext27 195A  
                                   __ptext19 155B                                     __ptext60 19D6  
                                   __ptext52 1F3F                                     __ptext44 273C  
                                   __ptext36 2601                                     __ptext28 1C78  
                                   __ptext61 2615                                     __ptext53 12DD  
                                   __ptext45 1CBA                                     __ptext37 269D  
                                   __ptext29 2621                                     __ptext70 275C  
                                   __ptext62 260F                                     __ptext54 1350  
                                   __ptext46 1A36                                     __ptext38 270E  
                                   __ptext71 1D40                                     __ptext63 19A9  
                                   __ptext55 18BA                                     __ptext47 1BF6  
                                   __ptext39 25FE                                     __ptext80 25F5  
                                   __ptext72 2637                                     __ptext64 1A9A  
                                   __ptext56 265D                                     __ptext48 2640  
                                   __ptext81 2609                                     __ptext73 1916  
                                   __ptext65 1862                                     __ptext57 197F  
                                   __ptext49 26E5                                     __ptext90 27D1  
                                   __ptext82 2627                                     __ptext74 0800  
                                   __ptext66 1E35                                     __ptext58 1D8E  
                                   __ptext91 27BB                                     __ptext83 26B4  
                                   __ptext75 2692                                     __ptext67 1937  
                                   __ptext59 1BB5                                     __ptext92 27A5  
                                   __ptext84 26A8                                     __ptext76 25FB  
                                   __ptext68 272C                                     __ptext85 2687  
                                   __ptext77 2653                                     __ptext69 1811  
                                   __ptext94 26D8                                     __ptext86 267C  
                                   __ptext78 25F8                                     __ptext95 2671  
                                   __ptext87 1DE0                                     __ptext79 189C  
                                   __ptext96 0003                                     __ptext88 2649  
                                   __ptext89 1202                                  _locked_Main 0293  
                                _locked_Init 127A                                  _locked_Exit 0000  
                               _SSP1CON1bits 0215                             ?_menu_run_option 003B  
                                _locked_leds 00A0                                  _locked_task 013F  
                                   _led_rand 273C                             __size_of_sprintf 0151  
                                _menu_option 0159      __end_of_nullifyBadge_segDisplayRegister 2637  
   __size_of_nullifyBadge_segDisplayRegister 0008            ??_nullifyBadge_segDisplayRegister 0071  
           ?_nullifyBadge_segDisplayRegister 0070              _nullifyBadge_segDisplayRegister 262F  
                       marquee@string_length 0048                                menu_Main@data 0057  
                          ??_TMR4_Initialize 0071                            ??_PWM6_Initialize 0071  
                              __size_of_main 00EA                                __size_of_rand 0043  
       __end_of_TMR0_DefaultInterruptHandler 0004        __size_of_TMR0_DefaultInterruptHandler 0001  
               _TMR0_DefaultInterruptHandler 0003                           __end_of_menu_clear 084B  
                          displayL2_PutStr@k 0036                        ??_TMR0_Read16bitTimer 0073  
                                 _RC0PPSbits 0EA0                                marquee@F14038 0161  
                                 _RC1PPSbits 0EA1                                menu_Init@data 003B  
                   __end_of_displayL1_Update 276D                           let_alternate@count 0030  
                                 _RC2PPSbits 0EA2               __size_of_flashy_display_option 005F  
                   __end_of_displayL2_PutStr 19A9                __end_of_flashy_display_option 1F9E  
                                 _RC3PPSbits 0EA3                 __end_of_displayL1_Initialize 273C  
                       _curtain_leds_inverse 0320                                   _RC4PPSbits 0EA4  
                                 _RB6PPSbits 0E9E                                     int$flags 007E  
               displayL2_ForceUpdate@display 007B                              locked_Main@data 0057  
                          ??_TMR2_StartTimer 0071           __end_of_INTERRUPT_InterruptManager 0016  
                 _INTERRUPT_InterruptManager 0004                                 _SSP1STATbits 0214  
       nullifyBadge_segDisplayRegister@badge 0071                  PIN_MANAGER_Initialize@state 0071  
         schedulerExecute@taskLastSystemTick 006A                           _displayCharReverse 19D6  
                          menu_Init@taskData 0039                    __size_of_schedulerExecute 007C  
             __size_of_displayL2_SetUserLeds 001E                              locked_Init@data 003B  
              __end_of_displayL2_SetUserLeds 18F6                displayCharReverse@retValLower 0078  
              displayCharReverse@retValUpper 0079                                   _INTCONbits 000B  
                                _secret_Main 045D                      __size_of_led_roundabout 0041  
                                _secret_Init 1EE4                                  _secret_Exit 0000  
                            ??_TMR0_CallBack 0070                                  _NVMCON1bits 0895  
                  _nullifyBadge_platformInit 1E35                 __end_of_displayL1_SetSegChar 1BF6  
                                _secret_task 0132                               __pstringtext10 2847  
                             __pstringtext11 2851                               __pstringtext20 2888  
                             __pstringtext12 285A                               __pstringtext21 288D  
                             __pstringtext13 2862                               __pstringtext22 2892  
                             __pstringtext14 2868                               __pstringtext23 2897  
                             __pstringtext15 286E                               __pstringtext24 289C  
                             __pstringtext16 2874                               __pstringtext25 0000  
                             __pstringtext17 2879                               __pstringtext18 287E  
                             __pstringtext19 2883            __end_of_displayL2_EraseSegDisplay 275C  
                                   isdigit@c 0072                                     marquee@i 0046  
                                   marquee@j 004A                                     memset@p1 0077  
               __end_of_displayL2_Initialize 195A                          ?_displayCharReverse 0071  
                                ??_menu_Main 0054                                  ??_menu_Init 007C  
                    __size_of_WDT_Initialize 0004                         _locked_get_lock_leds 195A  
          __end_of_nullifyBadge_irTxRegister 271D             __size_of_SPI1_Exchange8bitBuffer 004E  
               __end_of_displayL1_SetUserLed 277F                                     intlevel1 0000  
                                  sprintf@ap 002C                                    sprintf@sp 0031  
                           ___lwmod@dividend 0022                      ?_PIN_MANAGER_Initialize 0070  
                              marquee@string 003A                  __size_of_nullifyBadge_irGet 0005  
                          __CFG_CLKOUTEN$OFF 0000          SPI1_Exchange8bitBuffer@bytesWritten 0078  
                                _PPSLOCKbits 0E0F                              _PWM1_Initialize 267C  
                        flashy_Init@taskData 0039                               menu_clear@data 0039  
              ?_TMR0_DefaultInterruptHandler 0070                  __size_of_PWM2_LoadDutyValue 0016  
                       ??_displayCharReverse 0073                            ??_TMR4_StartTimer 0071  
                                ??_slot_Main 0054                                  ??_slot_Init 007C  
                              __pstringtext1 1000                                __pstringtext2 2000  
                              __pstringtext3 2031                                __pstringtext4 2055  
                              __pstringtext5 2077                                __pstringtext6 2800  
                              __pstringtext7 2815                                __pstringtext8 2828  
                              __pstringtext9 283A             __end_of_nullifyBadge_irTxRelease 26A8  
                                   sprintf@c 0034                                     sprintf@f 0024  
                              _flashy_option 01A0                             _locked_lock_leds 1847  
                            ___lwmod@divisor 0020                              _TMR0_Initialize 189C  
                            _PWM2_Initialize 2687                                     strlen@cp 0075  
                              _slot_TaskData 0250                              ___lwmod@counter 007A  
                PWM6_LoadDutyValue@dutyValue 0071                        ?_locked_get_lock_leds 0071  
             __end_of_PIN_MANAGER_Initialize 1E35                             locked_clear@data 0039  
                                _PWMTMRSbits 061F                 __end_of_nullifyBadge_irTxClr 2601  
               __end_of_nullifyBadge_irTxSet 2604                   __end_of_PWM1_LoadDutyValue 27BB  
                      _TMR2_InterruptHandler 00BE                                 ?_flashy_Main 0052  
                               ?_flashy_Init 0039  
