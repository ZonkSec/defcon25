

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Jul 22 23:52:34 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16LF18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK5,global,class=CODE,delta=2
     8                           	psect	idataBANK6,global,class=CODE,delta=2
     9                           	psect	idataBANK7,global,class=CODE,delta=2
    10                           	psect	idataBIGRAM,global,class=CODE,delta=2
    11                           	psect	stringtext1,global,class=STRCODE,delta=2
    12                           	psect	stringtext2,global,class=STRCODE,delta=2
    13                           	psect	stringtext3,global,class=STRCODE,delta=2
    14                           	psect	stringtext4,global,class=STRCODE,delta=2
    15                           	psect	stringtext5,global,class=STRCODE,delta=2
    16                           	psect	stringtext6,global,class=STRCODE,delta=2
    17                           	psect	stringtext7,global,class=STRCODE,delta=2
    18                           	psect	stringtext8,global,class=STRCODE,delta=2
    19                           	psect	stringtext9,global,class=STRCODE,delta=2
    20                           	psect	stringtext10,global,class=STRCODE,delta=2
    21                           	psect	stringtext11,global,class=STRCODE,delta=2
    22                           	psect	stringtext12,global,class=STRCODE,delta=2
    23                           	psect	stringtext13,global,class=STRCODE,delta=2
    24                           	psect	stringtext14,global,class=STRCODE,delta=2
    25                           	psect	stringtext15,global,class=STRCODE,delta=2
    26                           	psect	stringtext16,global,class=STRCODE,delta=2
    27                           	psect	stringtext17,global,class=STRCODE,delta=2
    28                           	psect	stringtext18,global,class=STRCODE,delta=2
    29                           	psect	stringtext19,global,class=STRCODE,delta=2
    30                           	psect	stringtext20,global,class=STRCODE,delta=2
    31                           	psect	cinit,global,class=CODE,merge=1,delta=2
    32                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    36                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    38                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    39                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    40                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    41                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    42                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    43                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    44                           	psect	inittext,global,class=CODE,delta=2
    45                           	psect	clrtext,global,class=CODE,delta=2
    46                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    47                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    48                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    49                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    50                           	psect	text1,local,class=CODE,merge=1,delta=2
    51                           	psect	text2,local,class=CODE,merge=1,delta=2
    52                           	psect	text3,local,class=CODE,merge=1,delta=2
    53                           	psect	text4,local,class=CODE,merge=1,delta=2
    54                           	psect	text5,local,class=CODE,merge=1,delta=2
    55                           	psect	text6,local,class=CODE,merge=1,delta=2
    56                           	psect	text7,local,class=CODE,merge=1,delta=2
    57                           	psect	text8,local,class=CODE,merge=1,delta=2
    58                           	psect	text9,local,class=CODE,merge=1,delta=2
    59                           	psect	text10,local,class=CODE,merge=1,delta=2
    60                           	psect	text11,local,class=CODE,merge=1,delta=2
    61                           	psect	text12,local,class=CODE,merge=1,delta=2
    62                           	psect	text13,local,class=CODE,merge=1,delta=2
    63                           	psect	text14,local,class=CODE,merge=1,delta=2
    64                           	psect	text15,local,class=CODE,merge=1,delta=2
    65                           	psect	text16,local,class=CODE,merge=1,delta=2
    66                           	psect	text17,local,class=CODE,merge=1,delta=2
    67                           	psect	text18,local,class=CODE,merge=1,delta=2
    68                           	psect	text19,local,class=CODE,merge=1,delta=2
    69                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text21,local,class=CODE,merge=1,delta=2
    71                           	psect	text22,local,class=CODE,merge=1,delta=2
    72                           	psect	text23,local,class=CODE,merge=1,delta=2
    73                           	psect	text24,local,class=CODE,merge=1,delta=2
    74                           	psect	text25,local,class=CODE,merge=1,delta=2
    75                           	psect	text26,local,class=CODE,merge=1,delta=2
    76                           	psect	text27,local,class=CODE,merge=1,delta=2
    77                           	psect	text28,local,class=CODE,merge=1,delta=2
    78                           	psect	text29,local,class=CODE,merge=1,delta=2
    79                           	psect	text30,local,class=CODE,merge=1,delta=2
    80                           	psect	text31,local,class=CODE,merge=1,delta=2
    81                           	psect	text32,local,class=CODE,merge=1,delta=2
    82                           	psect	text33,local,class=CODE,merge=1,delta=2
    83                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text36,local,class=CODE,merge=1,delta=2
    86                           	psect	text37,local,class=CODE,merge=1,delta=2
    87                           	psect	text38,local,class=CODE,merge=1,delta=2
    88                           	psect	text39,local,class=CODE,merge=1,delta=2
    89                           	psect	text40,local,class=CODE,merge=1,delta=2
    90                           	psect	text41,local,class=CODE,merge=1,delta=2
    91                           	psect	text42,local,class=CODE,merge=1,delta=2
    92                           	psect	text43,local,class=CODE,merge=1,delta=2
    93                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text46,local,class=CODE,merge=1,delta=2
    96                           	psect	text47,local,class=CODE,merge=1,delta=2
    97                           	psect	text48,local,class=CODE,merge=1,delta=2
    98                           	psect	text49,local,class=CODE,merge=1,delta=2
    99                           	psect	text50,local,class=CODE,merge=1,delta=2
   100                           	psect	text51,local,class=CODE,merge=1,delta=2
   101                           	psect	text52,local,class=CODE,merge=1,delta=2
   102                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text54,local,class=CODE,merge=1,delta=2
   104                           	psect	text55,local,class=CODE,merge=1,delta=2
   105                           	psect	text56,local,class=CODE,merge=1,delta=2
   106                           	psect	text57,local,class=CODE,merge=1,delta=2
   107                           	psect	text58,local,class=CODE,merge=1,delta=2
   108                           	psect	text59,local,class=CODE,merge=1,delta=2
   109                           	psect	text60,local,class=CODE,merge=1,delta=2
   110                           	psect	text61,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text63,local,class=CODE,merge=1,delta=2
   113                           	psect	text64,local,class=CODE,merge=1,delta=2
   114                           	psect	text65,local,class=CODE,merge=1,delta=2
   115                           	psect	text66,local,class=CODE,merge=1,delta=2
   116                           	psect	text67,local,class=CODE,merge=1,delta=2,group=2
   117                           	psect	text68,local,class=CODE,merge=1,delta=2
   118                           	psect	text69,local,class=CODE,merge=1,delta=2
   119                           	psect	text70,local,class=CODE,merge=1,delta=2
   120                           	psect	text71,local,class=CODE,merge=1,delta=2
   121                           	psect	text72,local,class=CODE,merge=1,delta=2
   122                           	psect	text73,local,class=CODE,merge=1,delta=2
   123                           	psect	text74,local,class=CODE,merge=1,delta=2
   124                           	psect	text75,local,class=CODE,merge=1,delta=2
   125                           	psect	text76,local,class=CODE,merge=1,delta=2
   126                           	psect	text77,local,class=CODE,merge=1,delta=2
   127                           	psect	text78,local,class=CODE,merge=1,delta=2
   128                           	psect	text79,local,class=CODE,merge=1,delta=2
   129                           	psect	text80,local,class=CODE,merge=1,delta=2
   130                           	psect	text81,local,class=CODE,merge=1,delta=2
   131                           	psect	text82,local,class=CODE,merge=1,delta=2
   132                           	psect	text83,local,class=CODE,merge=1,delta=2
   133                           	psect	text84,local,class=CODE,merge=1,delta=2
   134                           	psect	text85,local,class=CODE,merge=1,delta=2
   135                           	psect	text86,local,class=CODE,merge=1,delta=2
   136                           	psect	text87,local,class=CODE,merge=1,delta=2
   137                           	psect	text88,local,class=CODE,merge=1,delta=2
   138                           	psect	text89,local,class=CODE,merge=1,delta=2
   139                           	psect	text90,local,class=CODE,merge=1,delta=2
   140                           	psect	intentry,global,class=CODE,delta=2
   141                           	psect	text92,local,class=CODE,merge=1,delta=2
   142                           	psect	text93,local,class=CODE,merge=1,delta=2
   143                           	psect	text94,local,class=CODE,merge=1,delta=2
   144                           	dabs	1,0xCA0,32
   145                           	dabs	1,0xC20,80
   146                           	dabs	1,0xBA0,80
   147                           	dabs	1,0xB30,64
   148                           	dabs	1,0x26F0,0,_asciiCharTableLookup
   149                           	dabs	1,0x7E,2
   150  0000                     
   151                           ; Version 1.42
   152                           ; Generated 13/04/2017 GMT
   153                           ; 
   154                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   155                           ; All rights reserved.
   156                           ; 
   157                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   158                           ; 
   159                           ; Redistribution and use in source and binary forms, with or without modification, are
   160                           ; permitted provided that the following conditions are met:
   161                           ; 
   162                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   163                           ;        conditions and the following disclaimer.
   164                           ; 
   165                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   166                           ;        of conditions and the following disclaimer in the documentation and/or other
   167                           ;        materials provided with the distribution.
   168                           ; 
   169                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   170                           ;        software without specific prior written permission.
   171                           ; 
   172                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   173                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   174                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   175                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   176                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   177                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   178                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   179                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   180                           ; 
   181                           ; 
   182                           ; Code-generator required, PIC16LF18346 Definitions
   183                           ; 
   184                           ; SFR Addresses
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  008C                     	;# 
   220  008D                     	;# 
   221  008E                     	;# 
   222  0090                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0097                     	;# 
   228  009B                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  0111                     	;# 
   238  0112                     	;# 
   239  0113                     	;# 
   240  0114                     	;# 
   241  0115                     	;# 
   242  0116                     	;# 
   243  0117                     	;# 
   244  0118                     	;# 
   245  0119                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  018E                     	;# 
   249  0199                     	;# 
   250  0199                     	;# 
   251  0199                     	;# 
   252  019A                     	;# 
   253  019A                     	;# 
   254  019A                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019C                     	;# 
   261  019C                     	;# 
   262  019C                     	;# 
   263  019D                     	;# 
   264  019D                     	;# 
   265  019D                     	;# 
   266  019E                     	;# 
   267  019E                     	;# 
   268  019E                     	;# 
   269  019F                     	;# 
   270  019F                     	;# 
   271  019F                     	;# 
   272  019F                     	;# 
   273  019F                     	;# 
   274  020C                     	;# 
   275  020D                     	;# 
   276  020E                     	;# 
   277  0211                     	;# 
   278  0211                     	;# 
   279  0212                     	;# 
   280  0212                     	;# 
   281  0213                     	;# 
   282  0213                     	;# 
   283  0214                     	;# 
   284  0214                     	;# 
   285  0215                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0215                     	;# 
   289  0216                     	;# 
   290  0216                     	;# 
   291  0217                     	;# 
   292  0217                     	;# 
   293  0219                     	;# 
   294  021A                     	;# 
   295  021B                     	;# 
   296  021C                     	;# 
   297  021D                     	;# 
   298  021D                     	;# 
   299  021E                     	;# 
   300  021F                     	;# 
   301  028C                     	;# 
   302  028D                     	;# 
   303  028E                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0297                     	;# 
   313  0298                     	;# 
   314  029F                     	;# 
   315  030C                     	;# 
   316  030D                     	;# 
   317  030E                     	;# 
   318  0311                     	;# 
   319  0311                     	;# 
   320  0312                     	;# 
   321  0313                     	;# 
   322  0314                     	;# 
   323  0315                     	;# 
   324  0315                     	;# 
   325  0316                     	;# 
   326  0317                     	;# 
   327  0318                     	;# 
   328  038C                     	;# 
   329  038D                     	;# 
   330  038E                     	;# 
   331  0391                     	;# 
   332  0392                     	;# 
   333  0393                     	;# 
   334  0394                     	;# 
   335  0395                     	;# 
   336  0396                     	;# 
   337  0397                     	;# 
   338  0398                     	;# 
   339  0399                     	;# 
   340  039A                     	;# 
   341  039C                     	;# 
   342  039D                     	;# 
   343  039E                     	;# 
   344  039F                     	;# 
   345  0411                     	;# 
   346  0411                     	;# 
   347  0412                     	;# 
   348  0413                     	;# 
   349  0414                     	;# 
   350  0415                     	;# 
   351  0416                     	;# 
   352  0417                     	;# 
   353  0418                     	;# 
   354  0418                     	;# 
   355  0419                     	;# 
   356  041A                     	;# 
   357  041B                     	;# 
   358  041C                     	;# 
   359  041D                     	;# 
   360  041E                     	;# 
   361  041F                     	;# 
   362  0498                     	;# 
   363  0498                     	;# 
   364  0499                     	;# 
   365  049A                     	;# 
   366  049B                     	;# 
   367  049B                     	;# 
   368  049C                     	;# 
   369  049D                     	;# 
   370  049E                     	;# 
   371  049F                     	;# 
   372  0617                     	;# 
   373  0618                     	;# 
   374  0619                     	;# 
   375  0619                     	;# 
   376  061A                     	;# 
   377  061B                     	;# 
   378  061C                     	;# 
   379  061C                     	;# 
   380  061F                     	;# 
   381  0691                     	;# 
   382  0692                     	;# 
   383  0693                     	;# 
   384  0694                     	;# 
   385  0695                     	;# 
   386  0696                     	;# 
   387  0697                     	;# 
   388  0698                     	;# 
   389  0699                     	;# 
   390  0711                     	;# 
   391  0712                     	;# 
   392  0713                     	;# 
   393  0714                     	;# 
   394  0715                     	;# 
   395  0716                     	;# 
   396  0717                     	;# 
   397  0718                     	;# 
   398  0719                     	;# 
   399  0891                     	;# 
   400  0891                     	;# 
   401  0891                     	;# 
   402  0891                     	;# 
   403  0891                     	;# 
   404  0891                     	;# 
   405  0892                     	;# 
   406  0892                     	;# 
   407  0892                     	;# 
   408  0893                     	;# 
   409  0893                     	;# 
   410  0893                     	;# 
   411  0893                     	;# 
   412  0893                     	;# 
   413  0893                     	;# 
   414  0894                     	;# 
   415  0894                     	;# 
   416  0894                     	;# 
   417  0895                     	;# 
   418  0895                     	;# 
   419  0895                     	;# 
   420  0896                     	;# 
   421  0896                     	;# 
   422  0896                     	;# 
   423  089B                     	;# 
   424  0911                     	;# 
   425  0912                     	;# 
   426  0913                     	;# 
   427  0914                     	;# 
   428  0915                     	;# 
   429  0916                     	;# 
   430  0918                     	;# 
   431  0919                     	;# 
   432  091A                     	;# 
   433  091B                     	;# 
   434  091C                     	;# 
   435  091D                     	;# 
   436  091E                     	;# 
   437  091F                     	;# 
   438  0E0F                     	;# 
   439  0E10                     	;# 
   440  0E11                     	;# 
   441  0E12                     	;# 
   442  0E13                     	;# 
   443  0E14                     	;# 
   444  0E15                     	;# 
   445  0E16                     	;# 
   446  0E17                     	;# 
   447  0E18                     	;# 
   448  0E19                     	;# 
   449  0E1A                     	;# 
   450  0E1B                     	;# 
   451  0E1C                     	;# 
   452  0E1D                     	;# 
   453  0E1E                     	;# 
   454  0E1F                     	;# 
   455  0E20                     	;# 
   456  0E21                     	;# 
   457  0E22                     	;# 
   458  0E24                     	;# 
   459  0E25                     	;# 
   460  0E28                     	;# 
   461  0E29                     	;# 
   462  0E2A                     	;# 
   463  0E2B                     	;# 
   464  0E2C                     	;# 
   465  0E2D                     	;# 
   466  0E2E                     	;# 
   467  0E2F                     	;# 
   468  0E90                     	;# 
   469  0E91                     	;# 
   470  0E92                     	;# 
   471  0E94                     	;# 
   472  0E95                     	;# 
   473  0E9C                     	;# 
   474  0E9D                     	;# 
   475  0E9E                     	;# 
   476  0E9F                     	;# 
   477  0EA0                     	;# 
   478  0EA1                     	;# 
   479  0EA2                     	;# 
   480  0EA3                     	;# 
   481  0EA4                     	;# 
   482  0EA5                     	;# 
   483  0EA6                     	;# 
   484  0EA7                     	;# 
   485  0F0F                     	;# 
   486  0F10                     	;# 
   487  0F11                     	;# 
   488  0F12                     	;# 
   489  0F13                     	;# 
   490  0F14                     	;# 
   491  0F15                     	;# 
   492  0F16                     	;# 
   493  0F17                     	;# 
   494  0F18                     	;# 
   495  0F19                     	;# 
   496  0F1A                     	;# 
   497  0F1B                     	;# 
   498  0F1C                     	;# 
   499  0F1D                     	;# 
   500  0F1E                     	;# 
   501  0F1F                     	;# 
   502  0F20                     	;# 
   503  0F21                     	;# 
   504  0F22                     	;# 
   505  0F23                     	;# 
   506  0F24                     	;# 
   507  0F25                     	;# 
   508  0F26                     	;# 
   509  0F27                     	;# 
   510  0F28                     	;# 
   511  0F29                     	;# 
   512  0F2A                     	;# 
   513  0F2B                     	;# 
   514  0F2C                     	;# 
   515  0F2D                     	;# 
   516  0F2E                     	;# 
   517  0F2F                     	;# 
   518  0F30                     	;# 
   519  0F31                     	;# 
   520  0F32                     	;# 
   521  0F33                     	;# 
   522  0F34                     	;# 
   523  0F35                     	;# 
   524  0F36                     	;# 
   525  0F37                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  000D                     	;# 
   551  000E                     	;# 
   552  0010                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0014                     	;# 
   557  0015                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  001D                     	;# 
   569  001E                     	;# 
   570  001F                     	;# 
   571  008C                     	;# 
   572  008D                     	;# 
   573  008E                     	;# 
   574  0090                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0097                     	;# 
   580  009B                     	;# 
   581  009B                     	;# 
   582  009C                     	;# 
   583  009D                     	;# 
   584  009E                     	;# 
   585  009F                     	;# 
   586  010C                     	;# 
   587  010D                     	;# 
   588  010E                     	;# 
   589  0111                     	;# 
   590  0112                     	;# 
   591  0113                     	;# 
   592  0114                     	;# 
   593  0115                     	;# 
   594  0116                     	;# 
   595  0117                     	;# 
   596  0118                     	;# 
   597  0119                     	;# 
   598  018C                     	;# 
   599  018D                     	;# 
   600  018E                     	;# 
   601  0199                     	;# 
   602  0199                     	;# 
   603  0199                     	;# 
   604  019A                     	;# 
   605  019A                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019C                     	;# 
   613  019C                     	;# 
   614  019C                     	;# 
   615  019D                     	;# 
   616  019D                     	;# 
   617  019D                     	;# 
   618  019E                     	;# 
   619  019E                     	;# 
   620  019E                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  019F                     	;# 
   624  019F                     	;# 
   625  019F                     	;# 
   626  020C                     	;# 
   627  020D                     	;# 
   628  020E                     	;# 
   629  0211                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0212                     	;# 
   633  0213                     	;# 
   634  0213                     	;# 
   635  0214                     	;# 
   636  0214                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0216                     	;# 
   642  0216                     	;# 
   643  0217                     	;# 
   644  0217                     	;# 
   645  0219                     	;# 
   646  021A                     	;# 
   647  021B                     	;# 
   648  021C                     	;# 
   649  021D                     	;# 
   650  021D                     	;# 
   651  021E                     	;# 
   652  021F                     	;# 
   653  028C                     	;# 
   654  028D                     	;# 
   655  028E                     	;# 
   656  0291                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0293                     	;# 
   660  0294                     	;# 
   661  0295                     	;# 
   662  0295                     	;# 
   663  0296                     	;# 
   664  0297                     	;# 
   665  0298                     	;# 
   666  029F                     	;# 
   667  030C                     	;# 
   668  030D                     	;# 
   669  030E                     	;# 
   670  0311                     	;# 
   671  0311                     	;# 
   672  0312                     	;# 
   673  0313                     	;# 
   674  0314                     	;# 
   675  0315                     	;# 
   676  0315                     	;# 
   677  0316                     	;# 
   678  0317                     	;# 
   679  0318                     	;# 
   680  038C                     	;# 
   681  038D                     	;# 
   682  038E                     	;# 
   683  0391                     	;# 
   684  0392                     	;# 
   685  0393                     	;# 
   686  0394                     	;# 
   687  0395                     	;# 
   688  0396                     	;# 
   689  0397                     	;# 
   690  0398                     	;# 
   691  0399                     	;# 
   692  039A                     	;# 
   693  039C                     	;# 
   694  039D                     	;# 
   695  039E                     	;# 
   696  039F                     	;# 
   697  0411                     	;# 
   698  0411                     	;# 
   699  0412                     	;# 
   700  0413                     	;# 
   701  0414                     	;# 
   702  0415                     	;# 
   703  0416                     	;# 
   704  0417                     	;# 
   705  0418                     	;# 
   706  0418                     	;# 
   707  0419                     	;# 
   708  041A                     	;# 
   709  041B                     	;# 
   710  041C                     	;# 
   711  041D                     	;# 
   712  041E                     	;# 
   713  041F                     	;# 
   714  0498                     	;# 
   715  0498                     	;# 
   716  0499                     	;# 
   717  049A                     	;# 
   718  049B                     	;# 
   719  049B                     	;# 
   720  049C                     	;# 
   721  049D                     	;# 
   722  049E                     	;# 
   723  049F                     	;# 
   724  0617                     	;# 
   725  0618                     	;# 
   726  0619                     	;# 
   727  0619                     	;# 
   728  061A                     	;# 
   729  061B                     	;# 
   730  061C                     	;# 
   731  061C                     	;# 
   732  061F                     	;# 
   733  0691                     	;# 
   734  0692                     	;# 
   735  0693                     	;# 
   736  0694                     	;# 
   737  0695                     	;# 
   738  0696                     	;# 
   739  0697                     	;# 
   740  0698                     	;# 
   741  0699                     	;# 
   742  0711                     	;# 
   743  0712                     	;# 
   744  0713                     	;# 
   745  0714                     	;# 
   746  0715                     	;# 
   747  0716                     	;# 
   748  0717                     	;# 
   749  0718                     	;# 
   750  0719                     	;# 
   751  0891                     	;# 
   752  0891                     	;# 
   753  0891                     	;# 
   754  0891                     	;# 
   755  0891                     	;# 
   756  0891                     	;# 
   757  0892                     	;# 
   758  0892                     	;# 
   759  0892                     	;# 
   760  0893                     	;# 
   761  0893                     	;# 
   762  0893                     	;# 
   763  0893                     	;# 
   764  0893                     	;# 
   765  0893                     	;# 
   766  0894                     	;# 
   767  0894                     	;# 
   768  0894                     	;# 
   769  0895                     	;# 
   770  0895                     	;# 
   771  0895                     	;# 
   772  0896                     	;# 
   773  0896                     	;# 
   774  0896                     	;# 
   775  089B                     	;# 
   776  0911                     	;# 
   777  0912                     	;# 
   778  0913                     	;# 
   779  0914                     	;# 
   780  0915                     	;# 
   781  0916                     	;# 
   782  0918                     	;# 
   783  0919                     	;# 
   784  091A                     	;# 
   785  091B                     	;# 
   786  091C                     	;# 
   787  091D                     	;# 
   788  091E                     	;# 
   789  091F                     	;# 
   790  0E0F                     	;# 
   791  0E10                     	;# 
   792  0E11                     	;# 
   793  0E12                     	;# 
   794  0E13                     	;# 
   795  0E14                     	;# 
   796  0E15                     	;# 
   797  0E16                     	;# 
   798  0E17                     	;# 
   799  0E18                     	;# 
   800  0E19                     	;# 
   801  0E1A                     	;# 
   802  0E1B                     	;# 
   803  0E1C                     	;# 
   804  0E1D                     	;# 
   805  0E1E                     	;# 
   806  0E1F                     	;# 
   807  0E20                     	;# 
   808  0E21                     	;# 
   809  0E22                     	;# 
   810  0E24                     	;# 
   811  0E25                     	;# 
   812  0E28                     	;# 
   813  0E29                     	;# 
   814  0E2A                     	;# 
   815  0E2B                     	;# 
   816  0E2C                     	;# 
   817  0E2D                     	;# 
   818  0E2E                     	;# 
   819  0E2F                     	;# 
   820  0E90                     	;# 
   821  0E91                     	;# 
   822  0E92                     	;# 
   823  0E94                     	;# 
   824  0E95                     	;# 
   825  0E9C                     	;# 
   826  0E9D                     	;# 
   827  0E9E                     	;# 
   828  0E9F                     	;# 
   829  0EA0                     	;# 
   830  0EA1                     	;# 
   831  0EA2                     	;# 
   832  0EA3                     	;# 
   833  0EA4                     	;# 
   834  0EA5                     	;# 
   835  0EA6                     	;# 
   836  0EA7                     	;# 
   837  0F0F                     	;# 
   838  0F10                     	;# 
   839  0F11                     	;# 
   840  0F12                     	;# 
   841  0F13                     	;# 
   842  0F14                     	;# 
   843  0F15                     	;# 
   844  0F16                     	;# 
   845  0F17                     	;# 
   846  0F18                     	;# 
   847  0F19                     	;# 
   848  0F1A                     	;# 
   849  0F1B                     	;# 
   850  0F1C                     	;# 
   851  0F1D                     	;# 
   852  0F1E                     	;# 
   853  0F1F                     	;# 
   854  0F20                     	;# 
   855  0F21                     	;# 
   856  0F22                     	;# 
   857  0F23                     	;# 
   858  0F24                     	;# 
   859  0F25                     	;# 
   860  0F26                     	;# 
   861  0F27                     	;# 
   862  0F28                     	;# 
   863  0F29                     	;# 
   864  0F2A                     	;# 
   865  0F2B                     	;# 
   866  0F2C                     	;# 
   867  0F2D                     	;# 
   868  0F2E                     	;# 
   869  0F2F                     	;# 
   870  0F30                     	;# 
   871  0F31                     	;# 
   872  0F32                     	;# 
   873  0F33                     	;# 
   874  0F34                     	;# 
   875  0F35                     	;# 
   876  0F36                     	;# 
   877  0F37                     	;# 
   878  0FE4                     	;# 
   879  0FE5                     	;# 
   880  0FE6                     	;# 
   881  0FE7                     	;# 
   882  0FE8                     	;# 
   883  0FE9                     	;# 
   884  0FEA                     	;# 
   885  0FEB                     	;# 
   886  0FED                     	;# 
   887  0FEE                     	;# 
   888  0FEF                     	;# 
   889  0000                     	;# 
   890  0001                     	;# 
   891  0002                     	;# 
   892  0003                     	;# 
   893  0004                     	;# 
   894  0005                     	;# 
   895  0006                     	;# 
   896  0007                     	;# 
   897  0008                     	;# 
   898  0009                     	;# 
   899  000A                     	;# 
   900  000B                     	;# 
   901  000C                     	;# 
   902  000D                     	;# 
   903  000E                     	;# 
   904  0010                     	;# 
   905  0011                     	;# 
   906  0012                     	;# 
   907  0013                     	;# 
   908  0014                     	;# 
   909  0015                     	;# 
   910  0015                     	;# 
   911  0016                     	;# 
   912  0016                     	;# 
   913  0017                     	;# 
   914  0018                     	;# 
   915  0019                     	;# 
   916  0019                     	;# 
   917  001A                     	;# 
   918  001B                     	;# 
   919  001C                     	;# 
   920  001D                     	;# 
   921  001E                     	;# 
   922  001F                     	;# 
   923  008C                     	;# 
   924  008D                     	;# 
   925  008E                     	;# 
   926  0090                     	;# 
   927  0091                     	;# 
   928  0092                     	;# 
   929  0093                     	;# 
   930  0094                     	;# 
   931  0097                     	;# 
   932  009B                     	;# 
   933  009B                     	;# 
   934  009C                     	;# 
   935  009D                     	;# 
   936  009E                     	;# 
   937  009F                     	;# 
   938  010C                     	;# 
   939  010D                     	;# 
   940  010E                     	;# 
   941  0111                     	;# 
   942  0112                     	;# 
   943  0113                     	;# 
   944  0114                     	;# 
   945  0115                     	;# 
   946  0116                     	;# 
   947  0117                     	;# 
   948  0118                     	;# 
   949  0119                     	;# 
   950  018C                     	;# 
   951  018D                     	;# 
   952  018E                     	;# 
   953  0199                     	;# 
   954  0199                     	;# 
   955  0199                     	;# 
   956  019A                     	;# 
   957  019A                     	;# 
   958  019A                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019B                     	;# 
   962  019B                     	;# 
   963  019B                     	;# 
   964  019C                     	;# 
   965  019C                     	;# 
   966  019C                     	;# 
   967  019D                     	;# 
   968  019D                     	;# 
   969  019D                     	;# 
   970  019E                     	;# 
   971  019E                     	;# 
   972  019E                     	;# 
   973  019F                     	;# 
   974  019F                     	;# 
   975  019F                     	;# 
   976  019F                     	;# 
   977  019F                     	;# 
   978  020C                     	;# 
   979  020D                     	;# 
   980  020E                     	;# 
   981  0211                     	;# 
   982  0211                     	;# 
   983  0212                     	;# 
   984  0212                     	;# 
   985  0213                     	;# 
   986  0213                     	;# 
   987  0214                     	;# 
   988  0214                     	;# 
   989  0215                     	;# 
   990  0215                     	;# 
   991  0215                     	;# 
   992  0215                     	;# 
   993  0216                     	;# 
   994  0216                     	;# 
   995  0217                     	;# 
   996  0217                     	;# 
   997  0219                     	;# 
   998  021A                     	;# 
   999  021B                     	;# 
  1000  021C                     	;# 
  1001  021D                     	;# 
  1002  021D                     	;# 
  1003  021E                     	;# 
  1004  021F                     	;# 
  1005  028C                     	;# 
  1006  028D                     	;# 
  1007  028E                     	;# 
  1008  0291                     	;# 
  1009  0291                     	;# 
  1010  0292                     	;# 
  1011  0293                     	;# 
  1012  0294                     	;# 
  1013  0295                     	;# 
  1014  0295                     	;# 
  1015  0296                     	;# 
  1016  0297                     	;# 
  1017  0298                     	;# 
  1018  029F                     	;# 
  1019  030C                     	;# 
  1020  030D                     	;# 
  1021  030E                     	;# 
  1022  0311                     	;# 
  1023  0311                     	;# 
  1024  0312                     	;# 
  1025  0313                     	;# 
  1026  0314                     	;# 
  1027  0315                     	;# 
  1028  0315                     	;# 
  1029  0316                     	;# 
  1030  0317                     	;# 
  1031  0318                     	;# 
  1032  038C                     	;# 
  1033  038D                     	;# 
  1034  038E                     	;# 
  1035  0391                     	;# 
  1036  0392                     	;# 
  1037  0393                     	;# 
  1038  0394                     	;# 
  1039  0395                     	;# 
  1040  0396                     	;# 
  1041  0397                     	;# 
  1042  0398                     	;# 
  1043  0399                     	;# 
  1044  039A                     	;# 
  1045  039C                     	;# 
  1046  039D                     	;# 
  1047  039E                     	;# 
  1048  039F                     	;# 
  1049  0411                     	;# 
  1050  0411                     	;# 
  1051  0412                     	;# 
  1052  0413                     	;# 
  1053  0414                     	;# 
  1054  0415                     	;# 
  1055  0416                     	;# 
  1056  0417                     	;# 
  1057  0418                     	;# 
  1058  0418                     	;# 
  1059  0419                     	;# 
  1060  041A                     	;# 
  1061  041B                     	;# 
  1062  041C                     	;# 
  1063  041D                     	;# 
  1064  041E                     	;# 
  1065  041F                     	;# 
  1066  0498                     	;# 
  1067  0498                     	;# 
  1068  0499                     	;# 
  1069  049A                     	;# 
  1070  049B                     	;# 
  1071  049B                     	;# 
  1072  049C                     	;# 
  1073  049D                     	;# 
  1074  049E                     	;# 
  1075  049F                     	;# 
  1076  0617                     	;# 
  1077  0618                     	;# 
  1078  0619                     	;# 
  1079  0619                     	;# 
  1080  061A                     	;# 
  1081  061B                     	;# 
  1082  061C                     	;# 
  1083  061C                     	;# 
  1084  061F                     	;# 
  1085  0691                     	;# 
  1086  0692                     	;# 
  1087  0693                     	;# 
  1088  0694                     	;# 
  1089  0695                     	;# 
  1090  0696                     	;# 
  1091  0697                     	;# 
  1092  0698                     	;# 
  1093  0699                     	;# 
  1094  0711                     	;# 
  1095  0712                     	;# 
  1096  0713                     	;# 
  1097  0714                     	;# 
  1098  0715                     	;# 
  1099  0716                     	;# 
  1100  0717                     	;# 
  1101  0718                     	;# 
  1102  0719                     	;# 
  1103  0891                     	;# 
  1104  0891                     	;# 
  1105  0891                     	;# 
  1106  0891                     	;# 
  1107  0891                     	;# 
  1108  0891                     	;# 
  1109  0892                     	;# 
  1110  0892                     	;# 
  1111  0892                     	;# 
  1112  0893                     	;# 
  1113  0893                     	;# 
  1114  0893                     	;# 
  1115  0893                     	;# 
  1116  0893                     	;# 
  1117  0893                     	;# 
  1118  0894                     	;# 
  1119  0894                     	;# 
  1120  0894                     	;# 
  1121  0895                     	;# 
  1122  0895                     	;# 
  1123  0895                     	;# 
  1124  0896                     	;# 
  1125  0896                     	;# 
  1126  0896                     	;# 
  1127  089B                     	;# 
  1128  0911                     	;# 
  1129  0912                     	;# 
  1130  0913                     	;# 
  1131  0914                     	;# 
  1132  0915                     	;# 
  1133  0916                     	;# 
  1134  0918                     	;# 
  1135  0919                     	;# 
  1136  091A                     	;# 
  1137  091B                     	;# 
  1138  091C                     	;# 
  1139  091D                     	;# 
  1140  091E                     	;# 
  1141  091F                     	;# 
  1142  0E0F                     	;# 
  1143  0E10                     	;# 
  1144  0E11                     	;# 
  1145  0E12                     	;# 
  1146  0E13                     	;# 
  1147  0E14                     	;# 
  1148  0E15                     	;# 
  1149  0E16                     	;# 
  1150  0E17                     	;# 
  1151  0E18                     	;# 
  1152  0E19                     	;# 
  1153  0E1A                     	;# 
  1154  0E1B                     	;# 
  1155  0E1C                     	;# 
  1156  0E1D                     	;# 
  1157  0E1E                     	;# 
  1158  0E1F                     	;# 
  1159  0E20                     	;# 
  1160  0E21                     	;# 
  1161  0E22                     	;# 
  1162  0E24                     	;# 
  1163  0E25                     	;# 
  1164  0E28                     	;# 
  1165  0E29                     	;# 
  1166  0E2A                     	;# 
  1167  0E2B                     	;# 
  1168  0E2C                     	;# 
  1169  0E2D                     	;# 
  1170  0E2E                     	;# 
  1171  0E2F                     	;# 
  1172  0E90                     	;# 
  1173  0E91                     	;# 
  1174  0E92                     	;# 
  1175  0E94                     	;# 
  1176  0E95                     	;# 
  1177  0E9C                     	;# 
  1178  0E9D                     	;# 
  1179  0E9E                     	;# 
  1180  0E9F                     	;# 
  1181  0EA0                     	;# 
  1182  0EA1                     	;# 
  1183  0EA2                     	;# 
  1184  0EA3                     	;# 
  1185  0EA4                     	;# 
  1186  0EA5                     	;# 
  1187  0EA6                     	;# 
  1188  0EA7                     	;# 
  1189  0F0F                     	;# 
  1190  0F10                     	;# 
  1191  0F11                     	;# 
  1192  0F12                     	;# 
  1193  0F13                     	;# 
  1194  0F14                     	;# 
  1195  0F15                     	;# 
  1196  0F16                     	;# 
  1197  0F17                     	;# 
  1198  0F18                     	;# 
  1199  0F19                     	;# 
  1200  0F1A                     	;# 
  1201  0F1B                     	;# 
  1202  0F1C                     	;# 
  1203  0F1D                     	;# 
  1204  0F1E                     	;# 
  1205  0F1F                     	;# 
  1206  0F20                     	;# 
  1207  0F21                     	;# 
  1208  0F22                     	;# 
  1209  0F23                     	;# 
  1210  0F24                     	;# 
  1211  0F25                     	;# 
  1212  0F26                     	;# 
  1213  0F27                     	;# 
  1214  0F28                     	;# 
  1215  0F29                     	;# 
  1216  0F2A                     	;# 
  1217  0F2B                     	;# 
  1218  0F2C                     	;# 
  1219  0F2D                     	;# 
  1220  0F2E                     	;# 
  1221  0F2F                     	;# 
  1222  0F30                     	;# 
  1223  0F31                     	;# 
  1224  0F32                     	;# 
  1225  0F33                     	;# 
  1226  0F34                     	;# 
  1227  0F35                     	;# 
  1228  0F36                     	;# 
  1229  0F37                     	;# 
  1230  0FE4                     	;# 
  1231  0FE5                     	;# 
  1232  0FE6                     	;# 
  1233  0FE7                     	;# 
  1234  0FE8                     	;# 
  1235  0FE9                     	;# 
  1236  0FEA                     	;# 
  1237  0FEB                     	;# 
  1238  0FED                     	;# 
  1239  0FEE                     	;# 
  1240  0FEF                     	;# 
  1241  0000                     	;# 
  1242  0001                     	;# 
  1243  0002                     	;# 
  1244  0003                     	;# 
  1245  0004                     	;# 
  1246  0005                     	;# 
  1247  0006                     	;# 
  1248  0007                     	;# 
  1249  0008                     	;# 
  1250  0009                     	;# 
  1251  000A                     	;# 
  1252  000B                     	;# 
  1253  000C                     	;# 
  1254  000D                     	;# 
  1255  000E                     	;# 
  1256  0010                     	;# 
  1257  0011                     	;# 
  1258  0012                     	;# 
  1259  0013                     	;# 
  1260  0014                     	;# 
  1261  0015                     	;# 
  1262  0015                     	;# 
  1263  0016                     	;# 
  1264  0016                     	;# 
  1265  0017                     	;# 
  1266  0018                     	;# 
  1267  0019                     	;# 
  1268  0019                     	;# 
  1269  001A                     	;# 
  1270  001B                     	;# 
  1271  001C                     	;# 
  1272  001D                     	;# 
  1273  001E                     	;# 
  1274  001F                     	;# 
  1275  008C                     	;# 
  1276  008D                     	;# 
  1277  008E                     	;# 
  1278  0090                     	;# 
  1279  0091                     	;# 
  1280  0092                     	;# 
  1281  0093                     	;# 
  1282  0094                     	;# 
  1283  0097                     	;# 
  1284  009B                     	;# 
  1285  009B                     	;# 
  1286  009C                     	;# 
  1287  009D                     	;# 
  1288  009E                     	;# 
  1289  009F                     	;# 
  1290  010C                     	;# 
  1291  010D                     	;# 
  1292  010E                     	;# 
  1293  0111                     	;# 
  1294  0112                     	;# 
  1295  0113                     	;# 
  1296  0114                     	;# 
  1297  0115                     	;# 
  1298  0116                     	;# 
  1299  0117                     	;# 
  1300  0118                     	;# 
  1301  0119                     	;# 
  1302  018C                     	;# 
  1303  018D                     	;# 
  1304  018E                     	;# 
  1305  0199                     	;# 
  1306  0199                     	;# 
  1307  0199                     	;# 
  1308  019A                     	;# 
  1309  019A                     	;# 
  1310  019A                     	;# 
  1311  019B                     	;# 
  1312  019B                     	;# 
  1313  019B                     	;# 
  1314  019B                     	;# 
  1315  019B                     	;# 
  1316  019C                     	;# 
  1317  019C                     	;# 
  1318  019C                     	;# 
  1319  019D                     	;# 
  1320  019D                     	;# 
  1321  019D                     	;# 
  1322  019E                     	;# 
  1323  019E                     	;# 
  1324  019E                     	;# 
  1325  019F                     	;# 
  1326  019F                     	;# 
  1327  019F                     	;# 
  1328  019F                     	;# 
  1329  019F                     	;# 
  1330  020C                     	;# 
  1331  020D                     	;# 
  1332  020E                     	;# 
  1333  0211                     	;# 
  1334  0211                     	;# 
  1335  0212                     	;# 
  1336  0212                     	;# 
  1337  0213                     	;# 
  1338  0213                     	;# 
  1339  0214                     	;# 
  1340  0214                     	;# 
  1341  0215                     	;# 
  1342  0215                     	;# 
  1343  0215                     	;# 
  1344  0215                     	;# 
  1345  0216                     	;# 
  1346  0216                     	;# 
  1347  0217                     	;# 
  1348  0217                     	;# 
  1349  0219                     	;# 
  1350  021A                     	;# 
  1351  021B                     	;# 
  1352  021C                     	;# 
  1353  021D                     	;# 
  1354  021D                     	;# 
  1355  021E                     	;# 
  1356  021F                     	;# 
  1357  028C                     	;# 
  1358  028D                     	;# 
  1359  028E                     	;# 
  1360  0291                     	;# 
  1361  0291                     	;# 
  1362  0292                     	;# 
  1363  0293                     	;# 
  1364  0294                     	;# 
  1365  0295                     	;# 
  1366  0295                     	;# 
  1367  0296                     	;# 
  1368  0297                     	;# 
  1369  0298                     	;# 
  1370  029F                     	;# 
  1371  030C                     	;# 
  1372  030D                     	;# 
  1373  030E                     	;# 
  1374  0311                     	;# 
  1375  0311                     	;# 
  1376  0312                     	;# 
  1377  0313                     	;# 
  1378  0314                     	;# 
  1379  0315                     	;# 
  1380  0315                     	;# 
  1381  0316                     	;# 
  1382  0317                     	;# 
  1383  0318                     	;# 
  1384  038C                     	;# 
  1385  038D                     	;# 
  1386  038E                     	;# 
  1387  0391                     	;# 
  1388  0392                     	;# 
  1389  0393                     	;# 
  1390  0394                     	;# 
  1391  0395                     	;# 
  1392  0396                     	;# 
  1393  0397                     	;# 
  1394  0398                     	;# 
  1395  0399                     	;# 
  1396  039A                     	;# 
  1397  039C                     	;# 
  1398  039D                     	;# 
  1399  039E                     	;# 
  1400  039F                     	;# 
  1401  0411                     	;# 
  1402  0411                     	;# 
  1403  0412                     	;# 
  1404  0413                     	;# 
  1405  0414                     	;# 
  1406  0415                     	;# 
  1407  0416                     	;# 
  1408  0417                     	;# 
  1409  0418                     	;# 
  1410  0418                     	;# 
  1411  0419                     	;# 
  1412  041A                     	;# 
  1413  041B                     	;# 
  1414  041C                     	;# 
  1415  041D                     	;# 
  1416  041E                     	;# 
  1417  041F                     	;# 
  1418  0498                     	;# 
  1419  0498                     	;# 
  1420  0499                     	;# 
  1421  049A                     	;# 
  1422  049B                     	;# 
  1423  049B                     	;# 
  1424  049C                     	;# 
  1425  049D                     	;# 
  1426  049E                     	;# 
  1427  049F                     	;# 
  1428  0617                     	;# 
  1429  0618                     	;# 
  1430  0619                     	;# 
  1431  0619                     	;# 
  1432  061A                     	;# 
  1433  061B                     	;# 
  1434  061C                     	;# 
  1435  061C                     	;# 
  1436  061F                     	;# 
  1437  0691                     	;# 
  1438  0692                     	;# 
  1439  0693                     	;# 
  1440  0694                     	;# 
  1441  0695                     	;# 
  1442  0696                     	;# 
  1443  0697                     	;# 
  1444  0698                     	;# 
  1445  0699                     	;# 
  1446  0711                     	;# 
  1447  0712                     	;# 
  1448  0713                     	;# 
  1449  0714                     	;# 
  1450  0715                     	;# 
  1451  0716                     	;# 
  1452  0717                     	;# 
  1453  0718                     	;# 
  1454  0719                     	;# 
  1455  0891                     	;# 
  1456  0891                     	;# 
  1457  0891                     	;# 
  1458  0891                     	;# 
  1459  0891                     	;# 
  1460  0891                     	;# 
  1461  0892                     	;# 
  1462  0892                     	;# 
  1463  0892                     	;# 
  1464  0893                     	;# 
  1465  0893                     	;# 
  1466  0893                     	;# 
  1467  0893                     	;# 
  1468  0893                     	;# 
  1469  0893                     	;# 
  1470  0894                     	;# 
  1471  0894                     	;# 
  1472  0894                     	;# 
  1473  0895                     	;# 
  1474  0895                     	;# 
  1475  0895                     	;# 
  1476  0896                     	;# 
  1477  0896                     	;# 
  1478  0896                     	;# 
  1479  089B                     	;# 
  1480  0911                     	;# 
  1481  0912                     	;# 
  1482  0913                     	;# 
  1483  0914                     	;# 
  1484  0915                     	;# 
  1485  0916                     	;# 
  1486  0918                     	;# 
  1487  0919                     	;# 
  1488  091A                     	;# 
  1489  091B                     	;# 
  1490  091C                     	;# 
  1491  091D                     	;# 
  1492  091E                     	;# 
  1493  091F                     	;# 
  1494  0E0F                     	;# 
  1495  0E10                     	;# 
  1496  0E11                     	;# 
  1497  0E12                     	;# 
  1498  0E13                     	;# 
  1499  0E14                     	;# 
  1500  0E15                     	;# 
  1501  0E16                     	;# 
  1502  0E17                     	;# 
  1503  0E18                     	;# 
  1504  0E19                     	;# 
  1505  0E1A                     	;# 
  1506  0E1B                     	;# 
  1507  0E1C                     	;# 
  1508  0E1D                     	;# 
  1509  0E1E                     	;# 
  1510  0E1F                     	;# 
  1511  0E20                     	;# 
  1512  0E21                     	;# 
  1513  0E22                     	;# 
  1514  0E24                     	;# 
  1515  0E25                     	;# 
  1516  0E28                     	;# 
  1517  0E29                     	;# 
  1518  0E2A                     	;# 
  1519  0E2B                     	;# 
  1520  0E2C                     	;# 
  1521  0E2D                     	;# 
  1522  0E2E                     	;# 
  1523  0E2F                     	;# 
  1524  0E90                     	;# 
  1525  0E91                     	;# 
  1526  0E92                     	;# 
  1527  0E94                     	;# 
  1528  0E95                     	;# 
  1529  0E9C                     	;# 
  1530  0E9D                     	;# 
  1531  0E9E                     	;# 
  1532  0E9F                     	;# 
  1533  0EA0                     	;# 
  1534  0EA1                     	;# 
  1535  0EA2                     	;# 
  1536  0EA3                     	;# 
  1537  0EA4                     	;# 
  1538  0EA5                     	;# 
  1539  0EA6                     	;# 
  1540  0EA7                     	;# 
  1541  0F0F                     	;# 
  1542  0F10                     	;# 
  1543  0F11                     	;# 
  1544  0F12                     	;# 
  1545  0F13                     	;# 
  1546  0F14                     	;# 
  1547  0F15                     	;# 
  1548  0F16                     	;# 
  1549  0F17                     	;# 
  1550  0F18                     	;# 
  1551  0F19                     	;# 
  1552  0F1A                     	;# 
  1553  0F1B                     	;# 
  1554  0F1C                     	;# 
  1555  0F1D                     	;# 
  1556  0F1E                     	;# 
  1557  0F1F                     	;# 
  1558  0F20                     	;# 
  1559  0F21                     	;# 
  1560  0F22                     	;# 
  1561  0F23                     	;# 
  1562  0F24                     	;# 
  1563  0F25                     	;# 
  1564  0F26                     	;# 
  1565  0F27                     	;# 
  1566  0F28                     	;# 
  1567  0F29                     	;# 
  1568  0F2A                     	;# 
  1569  0F2B                     	;# 
  1570  0F2C                     	;# 
  1571  0F2D                     	;# 
  1572  0F2E                     	;# 
  1573  0F2F                     	;# 
  1574  0F30                     	;# 
  1575  0F31                     	;# 
  1576  0F32                     	;# 
  1577  0F33                     	;# 
  1578  0F34                     	;# 
  1579  0F35                     	;# 
  1580  0F36                     	;# 
  1581  0F37                     	;# 
  1582  0FE4                     	;# 
  1583  0FE5                     	;# 
  1584  0FE6                     	;# 
  1585  0FE7                     	;# 
  1586  0FE8                     	;# 
  1587  0FE9                     	;# 
  1588  0FEA                     	;# 
  1589  0FEB                     	;# 
  1590  0FED                     	;# 
  1591  0FEE                     	;# 
  1592  0FEF                     	;# 
  1593  0000                     	;# 
  1594  0001                     	;# 
  1595  0002                     	;# 
  1596  0003                     	;# 
  1597  0004                     	;# 
  1598  0005                     	;# 
  1599  0006                     	;# 
  1600  0007                     	;# 
  1601  0008                     	;# 
  1602  0009                     	;# 
  1603  000A                     	;# 
  1604  000B                     	;# 
  1605  000C                     	;# 
  1606  000D                     	;# 
  1607  000E                     	;# 
  1608  0010                     	;# 
  1609  0011                     	;# 
  1610  0012                     	;# 
  1611  0013                     	;# 
  1612  0014                     	;# 
  1613  0015                     	;# 
  1614  0015                     	;# 
  1615  0016                     	;# 
  1616  0016                     	;# 
  1617  0017                     	;# 
  1618  0018                     	;# 
  1619  0019                     	;# 
  1620  0019                     	;# 
  1621  001A                     	;# 
  1622  001B                     	;# 
  1623  001C                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008D                     	;# 
  1629  008E                     	;# 
  1630  0090                     	;# 
  1631  0091                     	;# 
  1632  0092                     	;# 
  1633  0093                     	;# 
  1634  0094                     	;# 
  1635  0097                     	;# 
  1636  009B                     	;# 
  1637  009B                     	;# 
  1638  009C                     	;# 
  1639  009D                     	;# 
  1640  009E                     	;# 
  1641  009F                     	;# 
  1642  010C                     	;# 
  1643  010D                     	;# 
  1644  010E                     	;# 
  1645  0111                     	;# 
  1646  0112                     	;# 
  1647  0113                     	;# 
  1648  0114                     	;# 
  1649  0115                     	;# 
  1650  0116                     	;# 
  1651  0117                     	;# 
  1652  0118                     	;# 
  1653  0119                     	;# 
  1654  018C                     	;# 
  1655  018D                     	;# 
  1656  018E                     	;# 
  1657  0199                     	;# 
  1658  0199                     	;# 
  1659  0199                     	;# 
  1660  019A                     	;# 
  1661  019A                     	;# 
  1662  019A                     	;# 
  1663  019B                     	;# 
  1664  019B                     	;# 
  1665  019B                     	;# 
  1666  019B                     	;# 
  1667  019B                     	;# 
  1668  019C                     	;# 
  1669  019C                     	;# 
  1670  019C                     	;# 
  1671  019D                     	;# 
  1672  019D                     	;# 
  1673  019D                     	;# 
  1674  019E                     	;# 
  1675  019E                     	;# 
  1676  019E                     	;# 
  1677  019F                     	;# 
  1678  019F                     	;# 
  1679  019F                     	;# 
  1680  019F                     	;# 
  1681  019F                     	;# 
  1682  020C                     	;# 
  1683  020D                     	;# 
  1684  020E                     	;# 
  1685  0211                     	;# 
  1686  0211                     	;# 
  1687  0212                     	;# 
  1688  0212                     	;# 
  1689  0213                     	;# 
  1690  0213                     	;# 
  1691  0214                     	;# 
  1692  0214                     	;# 
  1693  0215                     	;# 
  1694  0215                     	;# 
  1695  0215                     	;# 
  1696  0215                     	;# 
  1697  0216                     	;# 
  1698  0216                     	;# 
  1699  0217                     	;# 
  1700  0217                     	;# 
  1701  0219                     	;# 
  1702  021A                     	;# 
  1703  021B                     	;# 
  1704  021C                     	;# 
  1705  021D                     	;# 
  1706  021D                     	;# 
  1707  021E                     	;# 
  1708  021F                     	;# 
  1709  028C                     	;# 
  1710  028D                     	;# 
  1711  028E                     	;# 
  1712  0291                     	;# 
  1713  0291                     	;# 
  1714  0292                     	;# 
  1715  0293                     	;# 
  1716  0294                     	;# 
  1717  0295                     	;# 
  1718  0295                     	;# 
  1719  0296                     	;# 
  1720  0297                     	;# 
  1721  0298                     	;# 
  1722  029F                     	;# 
  1723  030C                     	;# 
  1724  030D                     	;# 
  1725  030E                     	;# 
  1726  0311                     	;# 
  1727  0311                     	;# 
  1728  0312                     	;# 
  1729  0313                     	;# 
  1730  0314                     	;# 
  1731  0315                     	;# 
  1732  0315                     	;# 
  1733  0316                     	;# 
  1734  0317                     	;# 
  1735  0318                     	;# 
  1736  038C                     	;# 
  1737  038D                     	;# 
  1738  038E                     	;# 
  1739  0391                     	;# 
  1740  0392                     	;# 
  1741  0393                     	;# 
  1742  0394                     	;# 
  1743  0395                     	;# 
  1744  0396                     	;# 
  1745  0397                     	;# 
  1746  0398                     	;# 
  1747  0399                     	;# 
  1748  039A                     	;# 
  1749  039C                     	;# 
  1750  039D                     	;# 
  1751  039E                     	;# 
  1752  039F                     	;# 
  1753  0411                     	;# 
  1754  0411                     	;# 
  1755  0412                     	;# 
  1756  0413                     	;# 
  1757  0414                     	;# 
  1758  0415                     	;# 
  1759  0416                     	;# 
  1760  0417                     	;# 
  1761  0418                     	;# 
  1762  0418                     	;# 
  1763  0419                     	;# 
  1764  041A                     	;# 
  1765  041B                     	;# 
  1766  041C                     	;# 
  1767  041D                     	;# 
  1768  041E                     	;# 
  1769  041F                     	;# 
  1770  0498                     	;# 
  1771  0498                     	;# 
  1772  0499                     	;# 
  1773  049A                     	;# 
  1774  049B                     	;# 
  1775  049B                     	;# 
  1776  049C                     	;# 
  1777  049D                     	;# 
  1778  049E                     	;# 
  1779  049F                     	;# 
  1780  0617                     	;# 
  1781  0618                     	;# 
  1782  0619                     	;# 
  1783  0619                     	;# 
  1784  061A                     	;# 
  1785  061B                     	;# 
  1786  061C                     	;# 
  1787  061C                     	;# 
  1788  061F                     	;# 
  1789  0691                     	;# 
  1790  0692                     	;# 
  1791  0693                     	;# 
  1792  0694                     	;# 
  1793  0695                     	;# 
  1794  0696                     	;# 
  1795  0697                     	;# 
  1796  0698                     	;# 
  1797  0699                     	;# 
  1798  0711                     	;# 
  1799  0712                     	;# 
  1800  0713                     	;# 
  1801  0714                     	;# 
  1802  0715                     	;# 
  1803  0716                     	;# 
  1804  0717                     	;# 
  1805  0718                     	;# 
  1806  0719                     	;# 
  1807  0891                     	;# 
  1808  0891                     	;# 
  1809  0891                     	;# 
  1810  0891                     	;# 
  1811  0891                     	;# 
  1812  0891                     	;# 
  1813  0892                     	;# 
  1814  0892                     	;# 
  1815  0892                     	;# 
  1816  0893                     	;# 
  1817  0893                     	;# 
  1818  0893                     	;# 
  1819  0893                     	;# 
  1820  0893                     	;# 
  1821  0893                     	;# 
  1822  0894                     	;# 
  1823  0894                     	;# 
  1824  0894                     	;# 
  1825  0895                     	;# 
  1826  0895                     	;# 
  1827  0895                     	;# 
  1828  0896                     	;# 
  1829  0896                     	;# 
  1830  0896                     	;# 
  1831  089B                     	;# 
  1832  0911                     	;# 
  1833  0912                     	;# 
  1834  0913                     	;# 
  1835  0914                     	;# 
  1836  0915                     	;# 
  1837  0916                     	;# 
  1838  0918                     	;# 
  1839  0919                     	;# 
  1840  091A                     	;# 
  1841  091B                     	;# 
  1842  091C                     	;# 
  1843  091D                     	;# 
  1844  091E                     	;# 
  1845  091F                     	;# 
  1846  0E0F                     	;# 
  1847  0E10                     	;# 
  1848  0E11                     	;# 
  1849  0E12                     	;# 
  1850  0E13                     	;# 
  1851  0E14                     	;# 
  1852  0E15                     	;# 
  1853  0E16                     	;# 
  1854  0E17                     	;# 
  1855  0E18                     	;# 
  1856  0E19                     	;# 
  1857  0E1A                     	;# 
  1858  0E1B                     	;# 
  1859  0E1C                     	;# 
  1860  0E1D                     	;# 
  1861  0E1E                     	;# 
  1862  0E1F                     	;# 
  1863  0E20                     	;# 
  1864  0E21                     	;# 
  1865  0E22                     	;# 
  1866  0E24                     	;# 
  1867  0E25                     	;# 
  1868  0E28                     	;# 
  1869  0E29                     	;# 
  1870  0E2A                     	;# 
  1871  0E2B                     	;# 
  1872  0E2C                     	;# 
  1873  0E2D                     	;# 
  1874  0E2E                     	;# 
  1875  0E2F                     	;# 
  1876  0E90                     	;# 
  1877  0E91                     	;# 
  1878  0E92                     	;# 
  1879  0E94                     	;# 
  1880  0E95                     	;# 
  1881  0E9C                     	;# 
  1882  0E9D                     	;# 
  1883  0E9E                     	;# 
  1884  0E9F                     	;# 
  1885  0EA0                     	;# 
  1886  0EA1                     	;# 
  1887  0EA2                     	;# 
  1888  0EA3                     	;# 
  1889  0EA4                     	;# 
  1890  0EA5                     	;# 
  1891  0EA6                     	;# 
  1892  0EA7                     	;# 
  1893  0F0F                     	;# 
  1894  0F10                     	;# 
  1895  0F11                     	;# 
  1896  0F12                     	;# 
  1897  0F13                     	;# 
  1898  0F14                     	;# 
  1899  0F15                     	;# 
  1900  0F16                     	;# 
  1901  0F17                     	;# 
  1902  0F18                     	;# 
  1903  0F19                     	;# 
  1904  0F1A                     	;# 
  1905  0F1B                     	;# 
  1906  0F1C                     	;# 
  1907  0F1D                     	;# 
  1908  0F1E                     	;# 
  1909  0F1F                     	;# 
  1910  0F20                     	;# 
  1911  0F21                     	;# 
  1912  0F22                     	;# 
  1913  0F23                     	;# 
  1914  0F24                     	;# 
  1915  0F25                     	;# 
  1916  0F26                     	;# 
  1917  0F27                     	;# 
  1918  0F28                     	;# 
  1919  0F29                     	;# 
  1920  0F2A                     	;# 
  1921  0F2B                     	;# 
  1922  0F2C                     	;# 
  1923  0F2D                     	;# 
  1924  0F2E                     	;# 
  1925  0F2F                     	;# 
  1926  0F30                     	;# 
  1927  0F31                     	;# 
  1928  0F32                     	;# 
  1929  0F33                     	;# 
  1930  0F34                     	;# 
  1931  0F35                     	;# 
  1932  0F36                     	;# 
  1933  0F37                     	;# 
  1934  0FE4                     	;# 
  1935  0FE5                     	;# 
  1936  0FE6                     	;# 
  1937  0FE7                     	;# 
  1938  0FE8                     	;# 
  1939  0FE9                     	;# 
  1940  0FEA                     	;# 
  1941  0FEB                     	;# 
  1942  0FED                     	;# 
  1943  0FEE                     	;# 
  1944  0FEF                     	;# 
  1945  0000                     	;# 
  1946  0001                     	;# 
  1947  0002                     	;# 
  1948  0003                     	;# 
  1949  0004                     	;# 
  1950  0005                     	;# 
  1951  0006                     	;# 
  1952  0007                     	;# 
  1953  0008                     	;# 
  1954  0009                     	;# 
  1955  000A                     	;# 
  1956  000B                     	;# 
  1957  000C                     	;# 
  1958  000D                     	;# 
  1959  000E                     	;# 
  1960  0010                     	;# 
  1961  0011                     	;# 
  1962  0012                     	;# 
  1963  0013                     	;# 
  1964  0014                     	;# 
  1965  0015                     	;# 
  1966  0015                     	;# 
  1967  0016                     	;# 
  1968  0016                     	;# 
  1969  0017                     	;# 
  1970  0018                     	;# 
  1971  0019                     	;# 
  1972  0019                     	;# 
  1973  001A                     	;# 
  1974  001B                     	;# 
  1975  001C                     	;# 
  1976  001D                     	;# 
  1977  001E                     	;# 
  1978  001F                     	;# 
  1979  008C                     	;# 
  1980  008D                     	;# 
  1981  008E                     	;# 
  1982  0090                     	;# 
  1983  0091                     	;# 
  1984  0092                     	;# 
  1985  0093                     	;# 
  1986  0094                     	;# 
  1987  0097                     	;# 
  1988  009B                     	;# 
  1989  009B                     	;# 
  1990  009C                     	;# 
  1991  009D                     	;# 
  1992  009E                     	;# 
  1993  009F                     	;# 
  1994  010C                     	;# 
  1995  010D                     	;# 
  1996  010E                     	;# 
  1997  0111                     	;# 
  1998  0112                     	;# 
  1999  0113                     	;# 
  2000  0114                     	;# 
  2001  0115                     	;# 
  2002  0116                     	;# 
  2003  0117                     	;# 
  2004  0118                     	;# 
  2005  0119                     	;# 
  2006  018C                     	;# 
  2007  018D                     	;# 
  2008  018E                     	;# 
  2009  0199                     	;# 
  2010  0199                     	;# 
  2011  0199                     	;# 
  2012  019A                     	;# 
  2013  019A                     	;# 
  2014  019A                     	;# 
  2015  019B                     	;# 
  2016  019B                     	;# 
  2017  019B                     	;# 
  2018  019B                     	;# 
  2019  019B                     	;# 
  2020  019C                     	;# 
  2021  019C                     	;# 
  2022  019C                     	;# 
  2023  019D                     	;# 
  2024  019D                     	;# 
  2025  019D                     	;# 
  2026  019E                     	;# 
  2027  019E                     	;# 
  2028  019E                     	;# 
  2029  019F                     	;# 
  2030  019F                     	;# 
  2031  019F                     	;# 
  2032  019F                     	;# 
  2033  019F                     	;# 
  2034  020C                     	;# 
  2035  020D                     	;# 
  2036  020E                     	;# 
  2037  0211                     	;# 
  2038  0211                     	;# 
  2039  0212                     	;# 
  2040  0212                     	;# 
  2041  0213                     	;# 
  2042  0213                     	;# 
  2043  0214                     	;# 
  2044  0214                     	;# 
  2045  0215                     	;# 
  2046  0215                     	;# 
  2047  0215                     	;# 
  2048  0215                     	;# 
  2049  0216                     	;# 
  2050  0216                     	;# 
  2051  0217                     	;# 
  2052  0217                     	;# 
  2053  0219                     	;# 
  2054  021A                     	;# 
  2055  021B                     	;# 
  2056  021C                     	;# 
  2057  021D                     	;# 
  2058  021D                     	;# 
  2059  021E                     	;# 
  2060  021F                     	;# 
  2061  028C                     	;# 
  2062  028D                     	;# 
  2063  028E                     	;# 
  2064  0291                     	;# 
  2065  0291                     	;# 
  2066  0292                     	;# 
  2067  0293                     	;# 
  2068  0294                     	;# 
  2069  0295                     	;# 
  2070  0295                     	;# 
  2071  0296                     	;# 
  2072  0297                     	;# 
  2073  0298                     	;# 
  2074  029F                     	;# 
  2075  030C                     	;# 
  2076  030D                     	;# 
  2077  030E                     	;# 
  2078  0311                     	;# 
  2079  0311                     	;# 
  2080  0312                     	;# 
  2081  0313                     	;# 
  2082  0314                     	;# 
  2083  0315                     	;# 
  2084  0315                     	;# 
  2085  0316                     	;# 
  2086  0317                     	;# 
  2087  0318                     	;# 
  2088  038C                     	;# 
  2089  038D                     	;# 
  2090  038E                     	;# 
  2091  0391                     	;# 
  2092  0392                     	;# 
  2093  0393                     	;# 
  2094  0394                     	;# 
  2095  0395                     	;# 
  2096  0396                     	;# 
  2097  0397                     	;# 
  2098  0398                     	;# 
  2099  0399                     	;# 
  2100  039A                     	;# 
  2101  039C                     	;# 
  2102  039D                     	;# 
  2103  039E                     	;# 
  2104  039F                     	;# 
  2105  0411                     	;# 
  2106  0411                     	;# 
  2107  0412                     	;# 
  2108  0413                     	;# 
  2109  0414                     	;# 
  2110  0415                     	;# 
  2111  0416                     	;# 
  2112  0417                     	;# 
  2113  0418                     	;# 
  2114  0418                     	;# 
  2115  0419                     	;# 
  2116  041A                     	;# 
  2117  041B                     	;# 
  2118  041C                     	;# 
  2119  041D                     	;# 
  2120  041E                     	;# 
  2121  041F                     	;# 
  2122  0498                     	;# 
  2123  0498                     	;# 
  2124  0499                     	;# 
  2125  049A                     	;# 
  2126  049B                     	;# 
  2127  049B                     	;# 
  2128  049C                     	;# 
  2129  049D                     	;# 
  2130  049E                     	;# 
  2131  049F                     	;# 
  2132  0617                     	;# 
  2133  0618                     	;# 
  2134  0619                     	;# 
  2135  0619                     	;# 
  2136  061A                     	;# 
  2137  061B                     	;# 
  2138  061C                     	;# 
  2139  061C                     	;# 
  2140  061F                     	;# 
  2141  0691                     	;# 
  2142  0692                     	;# 
  2143  0693                     	;# 
  2144  0694                     	;# 
  2145  0695                     	;# 
  2146  0696                     	;# 
  2147  0697                     	;# 
  2148  0698                     	;# 
  2149  0699                     	;# 
  2150  0711                     	;# 
  2151  0712                     	;# 
  2152  0713                     	;# 
  2153  0714                     	;# 
  2154  0715                     	;# 
  2155  0716                     	;# 
  2156  0717                     	;# 
  2157  0718                     	;# 
  2158  0719                     	;# 
  2159  0891                     	;# 
  2160  0891                     	;# 
  2161  0891                     	;# 
  2162  0891                     	;# 
  2163  0891                     	;# 
  2164  0891                     	;# 
  2165  0892                     	;# 
  2166  0892                     	;# 
  2167  0892                     	;# 
  2168  0893                     	;# 
  2169  0893                     	;# 
  2170  0893                     	;# 
  2171  0893                     	;# 
  2172  0893                     	;# 
  2173  0893                     	;# 
  2174  0894                     	;# 
  2175  0894                     	;# 
  2176  0894                     	;# 
  2177  0895                     	;# 
  2178  0895                     	;# 
  2179  0895                     	;# 
  2180  0896                     	;# 
  2181  0896                     	;# 
  2182  0896                     	;# 
  2183  089B                     	;# 
  2184  0911                     	;# 
  2185  0912                     	;# 
  2186  0913                     	;# 
  2187  0914                     	;# 
  2188  0915                     	;# 
  2189  0916                     	;# 
  2190  0918                     	;# 
  2191  0919                     	;# 
  2192  091A                     	;# 
  2193  091B                     	;# 
  2194  091C                     	;# 
  2195  091D                     	;# 
  2196  091E                     	;# 
  2197  091F                     	;# 
  2198  0E0F                     	;# 
  2199  0E10                     	;# 
  2200  0E11                     	;# 
  2201  0E12                     	;# 
  2202  0E13                     	;# 
  2203  0E14                     	;# 
  2204  0E15                     	;# 
  2205  0E16                     	;# 
  2206  0E17                     	;# 
  2207  0E18                     	;# 
  2208  0E19                     	;# 
  2209  0E1A                     	;# 
  2210  0E1B                     	;# 
  2211  0E1C                     	;# 
  2212  0E1D                     	;# 
  2213  0E1E                     	;# 
  2214  0E1F                     	;# 
  2215  0E20                     	;# 
  2216  0E21                     	;# 
  2217  0E22                     	;# 
  2218  0E24                     	;# 
  2219  0E25                     	;# 
  2220  0E28                     	;# 
  2221  0E29                     	;# 
  2222  0E2A                     	;# 
  2223  0E2B                     	;# 
  2224  0E2C                     	;# 
  2225  0E2D                     	;# 
  2226  0E2E                     	;# 
  2227  0E2F                     	;# 
  2228  0E90                     	;# 
  2229  0E91                     	;# 
  2230  0E92                     	;# 
  2231  0E94                     	;# 
  2232  0E95                     	;# 
  2233  0E9C                     	;# 
  2234  0E9D                     	;# 
  2235  0E9E                     	;# 
  2236  0E9F                     	;# 
  2237  0EA0                     	;# 
  2238  0EA1                     	;# 
  2239  0EA2                     	;# 
  2240  0EA3                     	;# 
  2241  0EA4                     	;# 
  2242  0EA5                     	;# 
  2243  0EA6                     	;# 
  2244  0EA7                     	;# 
  2245  0F0F                     	;# 
  2246  0F10                     	;# 
  2247  0F11                     	;# 
  2248  0F12                     	;# 
  2249  0F13                     	;# 
  2250  0F14                     	;# 
  2251  0F15                     	;# 
  2252  0F16                     	;# 
  2253  0F17                     	;# 
  2254  0F18                     	;# 
  2255  0F19                     	;# 
  2256  0F1A                     	;# 
  2257  0F1B                     	;# 
  2258  0F1C                     	;# 
  2259  0F1D                     	;# 
  2260  0F1E                     	;# 
  2261  0F1F                     	;# 
  2262  0F20                     	;# 
  2263  0F21                     	;# 
  2264  0F22                     	;# 
  2265  0F23                     	;# 
  2266  0F24                     	;# 
  2267  0F25                     	;# 
  2268  0F26                     	;# 
  2269  0F27                     	;# 
  2270  0F28                     	;# 
  2271  0F29                     	;# 
  2272  0F2A                     	;# 
  2273  0F2B                     	;# 
  2274  0F2C                     	;# 
  2275  0F2D                     	;# 
  2276  0F2E                     	;# 
  2277  0F2F                     	;# 
  2278  0F30                     	;# 
  2279  0F31                     	;# 
  2280  0F32                     	;# 
  2281  0F33                     	;# 
  2282  0F34                     	;# 
  2283  0F35                     	;# 
  2284  0F36                     	;# 
  2285  0F37                     	;# 
  2286  0FE4                     	;# 
  2287  0FE5                     	;# 
  2288  0FE6                     	;# 
  2289  0FE7                     	;# 
  2290  0FE8                     	;# 
  2291  0FE9                     	;# 
  2292  0FEA                     	;# 
  2293  0FEB                     	;# 
  2294  0FED                     	;# 
  2295  0FEE                     	;# 
  2296  0FEF                     	;# 
  2297  0000                     	;# 
  2298  0001                     	;# 
  2299  0002                     	;# 
  2300  0003                     	;# 
  2301  0004                     	;# 
  2302  0005                     	;# 
  2303  0006                     	;# 
  2304  0007                     	;# 
  2305  0008                     	;# 
  2306  0009                     	;# 
  2307  000A                     	;# 
  2308  000B                     	;# 
  2309  000C                     	;# 
  2310  000D                     	;# 
  2311  000E                     	;# 
  2312  0010                     	;# 
  2313  0011                     	;# 
  2314  0012                     	;# 
  2315  0013                     	;# 
  2316  0014                     	;# 
  2317  0015                     	;# 
  2318  0015                     	;# 
  2319  0016                     	;# 
  2320  0016                     	;# 
  2321  0017                     	;# 
  2322  0018                     	;# 
  2323  0019                     	;# 
  2324  0019                     	;# 
  2325  001A                     	;# 
  2326  001B                     	;# 
  2327  001C                     	;# 
  2328  001D                     	;# 
  2329  001E                     	;# 
  2330  001F                     	;# 
  2331  008C                     	;# 
  2332  008D                     	;# 
  2333  008E                     	;# 
  2334  0090                     	;# 
  2335  0091                     	;# 
  2336  0092                     	;# 
  2337  0093                     	;# 
  2338  0094                     	;# 
  2339  0097                     	;# 
  2340  009B                     	;# 
  2341  009B                     	;# 
  2342  009C                     	;# 
  2343  009D                     	;# 
  2344  009E                     	;# 
  2345  009F                     	;# 
  2346  010C                     	;# 
  2347  010D                     	;# 
  2348  010E                     	;# 
  2349  0111                     	;# 
  2350  0112                     	;# 
  2351  0113                     	;# 
  2352  0114                     	;# 
  2353  0115                     	;# 
  2354  0116                     	;# 
  2355  0117                     	;# 
  2356  0118                     	;# 
  2357  0119                     	;# 
  2358  018C                     	;# 
  2359  018D                     	;# 
  2360  018E                     	;# 
  2361  0199                     	;# 
  2362  0199                     	;# 
  2363  0199                     	;# 
  2364  019A                     	;# 
  2365  019A                     	;# 
  2366  019A                     	;# 
  2367  019B                     	;# 
  2368  019B                     	;# 
  2369  019B                     	;# 
  2370  019B                     	;# 
  2371  019B                     	;# 
  2372  019C                     	;# 
  2373  019C                     	;# 
  2374  019C                     	;# 
  2375  019D                     	;# 
  2376  019D                     	;# 
  2377  019D                     	;# 
  2378  019E                     	;# 
  2379  019E                     	;# 
  2380  019E                     	;# 
  2381  019F                     	;# 
  2382  019F                     	;# 
  2383  019F                     	;# 
  2384  019F                     	;# 
  2385  019F                     	;# 
  2386  020C                     	;# 
  2387  020D                     	;# 
  2388  020E                     	;# 
  2389  0211                     	;# 
  2390  0211                     	;# 
  2391  0212                     	;# 
  2392  0212                     	;# 
  2393  0213                     	;# 
  2394  0213                     	;# 
  2395  0214                     	;# 
  2396  0214                     	;# 
  2397  0215                     	;# 
  2398  0215                     	;# 
  2399  0215                     	;# 
  2400  0215                     	;# 
  2401  0216                     	;# 
  2402  0216                     	;# 
  2403  0217                     	;# 
  2404  0217                     	;# 
  2405  0219                     	;# 
  2406  021A                     	;# 
  2407  021B                     	;# 
  2408  021C                     	;# 
  2409  021D                     	;# 
  2410  021D                     	;# 
  2411  021E                     	;# 
  2412  021F                     	;# 
  2413  028C                     	;# 
  2414  028D                     	;# 
  2415  028E                     	;# 
  2416  0291                     	;# 
  2417  0291                     	;# 
  2418  0292                     	;# 
  2419  0293                     	;# 
  2420  0294                     	;# 
  2421  0295                     	;# 
  2422  0295                     	;# 
  2423  0296                     	;# 
  2424  0297                     	;# 
  2425  0298                     	;# 
  2426  029F                     	;# 
  2427  030C                     	;# 
  2428  030D                     	;# 
  2429  030E                     	;# 
  2430  0311                     	;# 
  2431  0311                     	;# 
  2432  0312                     	;# 
  2433  0313                     	;# 
  2434  0314                     	;# 
  2435  0315                     	;# 
  2436  0315                     	;# 
  2437  0316                     	;# 
  2438  0317                     	;# 
  2439  0318                     	;# 
  2440  038C                     	;# 
  2441  038D                     	;# 
  2442  038E                     	;# 
  2443  0391                     	;# 
  2444  0392                     	;# 
  2445  0393                     	;# 
  2446  0394                     	;# 
  2447  0395                     	;# 
  2448  0396                     	;# 
  2449  0397                     	;# 
  2450  0398                     	;# 
  2451  0399                     	;# 
  2452  039A                     	;# 
  2453  039C                     	;# 
  2454  039D                     	;# 
  2455  039E                     	;# 
  2456  039F                     	;# 
  2457  0411                     	;# 
  2458  0411                     	;# 
  2459  0412                     	;# 
  2460  0413                     	;# 
  2461  0414                     	;# 
  2462  0415                     	;# 
  2463  0416                     	;# 
  2464  0417                     	;# 
  2465  0418                     	;# 
  2466  0418                     	;# 
  2467  0419                     	;# 
  2468  041A                     	;# 
  2469  041B                     	;# 
  2470  041C                     	;# 
  2471  041D                     	;# 
  2472  041E                     	;# 
  2473  041F                     	;# 
  2474  0498                     	;# 
  2475  0498                     	;# 
  2476  0499                     	;# 
  2477  049A                     	;# 
  2478  049B                     	;# 
  2479  049B                     	;# 
  2480  049C                     	;# 
  2481  049D                     	;# 
  2482  049E                     	;# 
  2483  049F                     	;# 
  2484  0617                     	;# 
  2485  0618                     	;# 
  2486  0619                     	;# 
  2487  0619                     	;# 
  2488  061A                     	;# 
  2489  061B                     	;# 
  2490  061C                     	;# 
  2491  061C                     	;# 
  2492  061F                     	;# 
  2493  0691                     	;# 
  2494  0692                     	;# 
  2495  0693                     	;# 
  2496  0694                     	;# 
  2497  0695                     	;# 
  2498  0696                     	;# 
  2499  0697                     	;# 
  2500  0698                     	;# 
  2501  0699                     	;# 
  2502  0711                     	;# 
  2503  0712                     	;# 
  2504  0713                     	;# 
  2505  0714                     	;# 
  2506  0715                     	;# 
  2507  0716                     	;# 
  2508  0717                     	;# 
  2509  0718                     	;# 
  2510  0719                     	;# 
  2511  0891                     	;# 
  2512  0891                     	;# 
  2513  0891                     	;# 
  2514  0891                     	;# 
  2515  0891                     	;# 
  2516  0891                     	;# 
  2517  0892                     	;# 
  2518  0892                     	;# 
  2519  0892                     	;# 
  2520  0893                     	;# 
  2521  0893                     	;# 
  2522  0893                     	;# 
  2523  0893                     	;# 
  2524  0893                     	;# 
  2525  0893                     	;# 
  2526  0894                     	;# 
  2527  0894                     	;# 
  2528  0894                     	;# 
  2529  0895                     	;# 
  2530  0895                     	;# 
  2531  0895                     	;# 
  2532  0896                     	;# 
  2533  0896                     	;# 
  2534  0896                     	;# 
  2535  089B                     	;# 
  2536  0911                     	;# 
  2537  0912                     	;# 
  2538  0913                     	;# 
  2539  0914                     	;# 
  2540  0915                     	;# 
  2541  0916                     	;# 
  2542  0918                     	;# 
  2543  0919                     	;# 
  2544  091A                     	;# 
  2545  091B                     	;# 
  2546  091C                     	;# 
  2547  091D                     	;# 
  2548  091E                     	;# 
  2549  091F                     	;# 
  2550  0E0F                     	;# 
  2551  0E10                     	;# 
  2552  0E11                     	;# 
  2553  0E12                     	;# 
  2554  0E13                     	;# 
  2555  0E14                     	;# 
  2556  0E15                     	;# 
  2557  0E16                     	;# 
  2558  0E17                     	;# 
  2559  0E18                     	;# 
  2560  0E19                     	;# 
  2561  0E1A                     	;# 
  2562  0E1B                     	;# 
  2563  0E1C                     	;# 
  2564  0E1D                     	;# 
  2565  0E1E                     	;# 
  2566  0E1F                     	;# 
  2567  0E20                     	;# 
  2568  0E21                     	;# 
  2569  0E22                     	;# 
  2570  0E24                     	;# 
  2571  0E25                     	;# 
  2572  0E28                     	;# 
  2573  0E29                     	;# 
  2574  0E2A                     	;# 
  2575  0E2B                     	;# 
  2576  0E2C                     	;# 
  2577  0E2D                     	;# 
  2578  0E2E                     	;# 
  2579  0E2F                     	;# 
  2580  0E90                     	;# 
  2581  0E91                     	;# 
  2582  0E92                     	;# 
  2583  0E94                     	;# 
  2584  0E95                     	;# 
  2585  0E9C                     	;# 
  2586  0E9D                     	;# 
  2587  0E9E                     	;# 
  2588  0E9F                     	;# 
  2589  0EA0                     	;# 
  2590  0EA1                     	;# 
  2591  0EA2                     	;# 
  2592  0EA3                     	;# 
  2593  0EA4                     	;# 
  2594  0EA5                     	;# 
  2595  0EA6                     	;# 
  2596  0EA7                     	;# 
  2597  0F0F                     	;# 
  2598  0F10                     	;# 
  2599  0F11                     	;# 
  2600  0F12                     	;# 
  2601  0F13                     	;# 
  2602  0F14                     	;# 
  2603  0F15                     	;# 
  2604  0F16                     	;# 
  2605  0F17                     	;# 
  2606  0F18                     	;# 
  2607  0F19                     	;# 
  2608  0F1A                     	;# 
  2609  0F1B                     	;# 
  2610  0F1C                     	;# 
  2611  0F1D                     	;# 
  2612  0F1E                     	;# 
  2613  0F1F                     	;# 
  2614  0F20                     	;# 
  2615  0F21                     	;# 
  2616  0F22                     	;# 
  2617  0F23                     	;# 
  2618  0F24                     	;# 
  2619  0F25                     	;# 
  2620  0F26                     	;# 
  2621  0F27                     	;# 
  2622  0F28                     	;# 
  2623  0F29                     	;# 
  2624  0F2A                     	;# 
  2625  0F2B                     	;# 
  2626  0F2C                     	;# 
  2627  0F2D                     	;# 
  2628  0F2E                     	;# 
  2629  0F2F                     	;# 
  2630  0F30                     	;# 
  2631  0F31                     	;# 
  2632  0F32                     	;# 
  2633  0F33                     	;# 
  2634  0F34                     	;# 
  2635  0F35                     	;# 
  2636  0F36                     	;# 
  2637  0F37                     	;# 
  2638  0FE4                     	;# 
  2639  0FE5                     	;# 
  2640  0FE6                     	;# 
  2641  0FE7                     	;# 
  2642  0FE8                     	;# 
  2643  0FE9                     	;# 
  2644  0FEA                     	;# 
  2645  0FEB                     	;# 
  2646  0FED                     	;# 
  2647  0FEE                     	;# 
  2648  0FEF                     	;# 
  2649  0000                     	;# 
  2650  0001                     	;# 
  2651  0002                     	;# 
  2652  0003                     	;# 
  2653  0004                     	;# 
  2654  0005                     	;# 
  2655  0006                     	;# 
  2656  0007                     	;# 
  2657  0008                     	;# 
  2658  0009                     	;# 
  2659  000A                     	;# 
  2660  000B                     	;# 
  2661  000C                     	;# 
  2662  000D                     	;# 
  2663  000E                     	;# 
  2664  0010                     	;# 
  2665  0011                     	;# 
  2666  0012                     	;# 
  2667  0013                     	;# 
  2668  0014                     	;# 
  2669  0015                     	;# 
  2670  0015                     	;# 
  2671  0016                     	;# 
  2672  0016                     	;# 
  2673  0017                     	;# 
  2674  0018                     	;# 
  2675  0019                     	;# 
  2676  0019                     	;# 
  2677  001A                     	;# 
  2678  001B                     	;# 
  2679  001C                     	;# 
  2680  001D                     	;# 
  2681  001E                     	;# 
  2682  001F                     	;# 
  2683  008C                     	;# 
  2684  008D                     	;# 
  2685  008E                     	;# 
  2686  0090                     	;# 
  2687  0091                     	;# 
  2688  0092                     	;# 
  2689  0093                     	;# 
  2690  0094                     	;# 
  2691  0097                     	;# 
  2692  009B                     	;# 
  2693  009B                     	;# 
  2694  009C                     	;# 
  2695  009D                     	;# 
  2696  009E                     	;# 
  2697  009F                     	;# 
  2698  010C                     	;# 
  2699  010D                     	;# 
  2700  010E                     	;# 
  2701  0111                     	;# 
  2702  0112                     	;# 
  2703  0113                     	;# 
  2704  0114                     	;# 
  2705  0115                     	;# 
  2706  0116                     	;# 
  2707  0117                     	;# 
  2708  0118                     	;# 
  2709  0119                     	;# 
  2710  018C                     	;# 
  2711  018D                     	;# 
  2712  018E                     	;# 
  2713  0199                     	;# 
  2714  0199                     	;# 
  2715  0199                     	;# 
  2716  019A                     	;# 
  2717  019A                     	;# 
  2718  019A                     	;# 
  2719  019B                     	;# 
  2720  019B                     	;# 
  2721  019B                     	;# 
  2722  019B                     	;# 
  2723  019B                     	;# 
  2724  019C                     	;# 
  2725  019C                     	;# 
  2726  019C                     	;# 
  2727  019D                     	;# 
  2728  019D                     	;# 
  2729  019D                     	;# 
  2730  019E                     	;# 
  2731  019E                     	;# 
  2732  019E                     	;# 
  2733  019F                     	;# 
  2734  019F                     	;# 
  2735  019F                     	;# 
  2736  019F                     	;# 
  2737  019F                     	;# 
  2738  020C                     	;# 
  2739  020D                     	;# 
  2740  020E                     	;# 
  2741  0211                     	;# 
  2742  0211                     	;# 
  2743  0212                     	;# 
  2744  0212                     	;# 
  2745  0213                     	;# 
  2746  0213                     	;# 
  2747  0214                     	;# 
  2748  0214                     	;# 
  2749  0215                     	;# 
  2750  0215                     	;# 
  2751  0215                     	;# 
  2752  0215                     	;# 
  2753  0216                     	;# 
  2754  0216                     	;# 
  2755  0217                     	;# 
  2756  0217                     	;# 
  2757  0219                     	;# 
  2758  021A                     	;# 
  2759  021B                     	;# 
  2760  021C                     	;# 
  2761  021D                     	;# 
  2762  021D                     	;# 
  2763  021E                     	;# 
  2764  021F                     	;# 
  2765  028C                     	;# 
  2766  028D                     	;# 
  2767  028E                     	;# 
  2768  0291                     	;# 
  2769  0291                     	;# 
  2770  0292                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0295                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  029F                     	;# 
  2779  030C                     	;# 
  2780  030D                     	;# 
  2781  030E                     	;# 
  2782  0311                     	;# 
  2783  0311                     	;# 
  2784  0312                     	;# 
  2785  0313                     	;# 
  2786  0314                     	;# 
  2787  0315                     	;# 
  2788  0315                     	;# 
  2789  0316                     	;# 
  2790  0317                     	;# 
  2791  0318                     	;# 
  2792  038C                     	;# 
  2793  038D                     	;# 
  2794  038E                     	;# 
  2795  0391                     	;# 
  2796  0392                     	;# 
  2797  0393                     	;# 
  2798  0394                     	;# 
  2799  0395                     	;# 
  2800  0396                     	;# 
  2801  0397                     	;# 
  2802  0398                     	;# 
  2803  0399                     	;# 
  2804  039A                     	;# 
  2805  039C                     	;# 
  2806  039D                     	;# 
  2807  039E                     	;# 
  2808  039F                     	;# 
  2809  0411                     	;# 
  2810  0411                     	;# 
  2811  0412                     	;# 
  2812  0413                     	;# 
  2813  0414                     	;# 
  2814  0415                     	;# 
  2815  0416                     	;# 
  2816  0417                     	;# 
  2817  0418                     	;# 
  2818  0418                     	;# 
  2819  0419                     	;# 
  2820  041A                     	;# 
  2821  041B                     	;# 
  2822  041C                     	;# 
  2823  041D                     	;# 
  2824  041E                     	;# 
  2825  041F                     	;# 
  2826  0498                     	;# 
  2827  0498                     	;# 
  2828  0499                     	;# 
  2829  049A                     	;# 
  2830  049B                     	;# 
  2831  049B                     	;# 
  2832  049C                     	;# 
  2833  049D                     	;# 
  2834  049E                     	;# 
  2835  049F                     	;# 
  2836  0617                     	;# 
  2837  0618                     	;# 
  2838  0619                     	;# 
  2839  0619                     	;# 
  2840  061A                     	;# 
  2841  061B                     	;# 
  2842  061C                     	;# 
  2843  061C                     	;# 
  2844  061F                     	;# 
  2845  0691                     	;# 
  2846  0692                     	;# 
  2847  0693                     	;# 
  2848  0694                     	;# 
  2849  0695                     	;# 
  2850  0696                     	;# 
  2851  0697                     	;# 
  2852  0698                     	;# 
  2853  0699                     	;# 
  2854  0711                     	;# 
  2855  0712                     	;# 
  2856  0713                     	;# 
  2857  0714                     	;# 
  2858  0715                     	;# 
  2859  0716                     	;# 
  2860  0717                     	;# 
  2861  0718                     	;# 
  2862  0719                     	;# 
  2863  0891                     	;# 
  2864  0891                     	;# 
  2865  0891                     	;# 
  2866  0891                     	;# 
  2867  0891                     	;# 
  2868  0891                     	;# 
  2869  0892                     	;# 
  2870  0892                     	;# 
  2871  0892                     	;# 
  2872  0893                     	;# 
  2873  0893                     	;# 
  2874  0893                     	;# 
  2875  0893                     	;# 
  2876  0893                     	;# 
  2877  0893                     	;# 
  2878  0894                     	;# 
  2879  0894                     	;# 
  2880  0894                     	;# 
  2881  0895                     	;# 
  2882  0895                     	;# 
  2883  0895                     	;# 
  2884  0896                     	;# 
  2885  0896                     	;# 
  2886  0896                     	;# 
  2887  089B                     	;# 
  2888  0911                     	;# 
  2889  0912                     	;# 
  2890  0913                     	;# 
  2891  0914                     	;# 
  2892  0915                     	;# 
  2893  0916                     	;# 
  2894  0918                     	;# 
  2895  0919                     	;# 
  2896  091A                     	;# 
  2897  091B                     	;# 
  2898  091C                     	;# 
  2899  091D                     	;# 
  2900  091E                     	;# 
  2901  091F                     	;# 
  2902  0E0F                     	;# 
  2903  0E10                     	;# 
  2904  0E11                     	;# 
  2905  0E12                     	;# 
  2906  0E13                     	;# 
  2907  0E14                     	;# 
  2908  0E15                     	;# 
  2909  0E16                     	;# 
  2910  0E17                     	;# 
  2911  0E18                     	;# 
  2912  0E19                     	;# 
  2913  0E1A                     	;# 
  2914  0E1B                     	;# 
  2915  0E1C                     	;# 
  2916  0E1D                     	;# 
  2917  0E1E                     	;# 
  2918  0E1F                     	;# 
  2919  0E20                     	;# 
  2920  0E21                     	;# 
  2921  0E22                     	;# 
  2922  0E24                     	;# 
  2923  0E25                     	;# 
  2924  0E28                     	;# 
  2925  0E29                     	;# 
  2926  0E2A                     	;# 
  2927  0E2B                     	;# 
  2928  0E2C                     	;# 
  2929  0E2D                     	;# 
  2930  0E2E                     	;# 
  2931  0E2F                     	;# 
  2932  0E90                     	;# 
  2933  0E91                     	;# 
  2934  0E92                     	;# 
  2935  0E94                     	;# 
  2936  0E95                     	;# 
  2937  0E9C                     	;# 
  2938  0E9D                     	;# 
  2939  0E9E                     	;# 
  2940  0E9F                     	;# 
  2941  0EA0                     	;# 
  2942  0EA1                     	;# 
  2943  0EA2                     	;# 
  2944  0EA3                     	;# 
  2945  0EA4                     	;# 
  2946  0EA5                     	;# 
  2947  0EA6                     	;# 
  2948  0EA7                     	;# 
  2949  0F0F                     	;# 
  2950  0F10                     	;# 
  2951  0F11                     	;# 
  2952  0F12                     	;# 
  2953  0F13                     	;# 
  2954  0F14                     	;# 
  2955  0F15                     	;# 
  2956  0F16                     	;# 
  2957  0F17                     	;# 
  2958  0F18                     	;# 
  2959  0F19                     	;# 
  2960  0F1A                     	;# 
  2961  0F1B                     	;# 
  2962  0F1C                     	;# 
  2963  0F1D                     	;# 
  2964  0F1E                     	;# 
  2965  0F1F                     	;# 
  2966  0F20                     	;# 
  2967  0F21                     	;# 
  2968  0F22                     	;# 
  2969  0F23                     	;# 
  2970  0F24                     	;# 
  2971  0F25                     	;# 
  2972  0F26                     	;# 
  2973  0F27                     	;# 
  2974  0F28                     	;# 
  2975  0F29                     	;# 
  2976  0F2A                     	;# 
  2977  0F2B                     	;# 
  2978  0F2C                     	;# 
  2979  0F2D                     	;# 
  2980  0F2E                     	;# 
  2981  0F2F                     	;# 
  2982  0F30                     	;# 
  2983  0F31                     	;# 
  2984  0F32                     	;# 
  2985  0F33                     	;# 
  2986  0F34                     	;# 
  2987  0F35                     	;# 
  2988  0F36                     	;# 
  2989  0F37                     	;# 
  2990  0FE4                     	;# 
  2991  0FE5                     	;# 
  2992  0FE6                     	;# 
  2993  0FE7                     	;# 
  2994  0FE8                     	;# 
  2995  0FE9                     	;# 
  2996  0FEA                     	;# 
  2997  0FEB                     	;# 
  2998  0FED                     	;# 
  2999  0FEE                     	;# 
  3000  0FEF                     	;# 
  3001  0000                     	;# 
  3002  0001                     	;# 
  3003  0002                     	;# 
  3004  0003                     	;# 
  3005  0004                     	;# 
  3006  0005                     	;# 
  3007  0006                     	;# 
  3008  0007                     	;# 
  3009  0008                     	;# 
  3010  0009                     	;# 
  3011  000A                     	;# 
  3012  000B                     	;# 
  3013  000C                     	;# 
  3014  000D                     	;# 
  3015  000E                     	;# 
  3016  0010                     	;# 
  3017  0011                     	;# 
  3018  0012                     	;# 
  3019  0013                     	;# 
  3020  0014                     	;# 
  3021  0015                     	;# 
  3022  0015                     	;# 
  3023  0016                     	;# 
  3024  0016                     	;# 
  3025  0017                     	;# 
  3026  0018                     	;# 
  3027  0019                     	;# 
  3028  0019                     	;# 
  3029  001A                     	;# 
  3030  001B                     	;# 
  3031  001C                     	;# 
  3032  001D                     	;# 
  3033  001E                     	;# 
  3034  001F                     	;# 
  3035  008C                     	;# 
  3036  008D                     	;# 
  3037  008E                     	;# 
  3038  0090                     	;# 
  3039  0091                     	;# 
  3040  0092                     	;# 
  3041  0093                     	;# 
  3042  0094                     	;# 
  3043  0097                     	;# 
  3044  009B                     	;# 
  3045  009B                     	;# 
  3046  009C                     	;# 
  3047  009D                     	;# 
  3048  009E                     	;# 
  3049  009F                     	;# 
  3050  010C                     	;# 
  3051  010D                     	;# 
  3052  010E                     	;# 
  3053  0111                     	;# 
  3054  0112                     	;# 
  3055  0113                     	;# 
  3056  0114                     	;# 
  3057  0115                     	;# 
  3058  0116                     	;# 
  3059  0117                     	;# 
  3060  0118                     	;# 
  3061  0119                     	;# 
  3062  018C                     	;# 
  3063  018D                     	;# 
  3064  018E                     	;# 
  3065  0199                     	;# 
  3066  0199                     	;# 
  3067  0199                     	;# 
  3068  019A                     	;# 
  3069  019A                     	;# 
  3070  019A                     	;# 
  3071  019B                     	;# 
  3072  019B                     	;# 
  3073  019B                     	;# 
  3074  019B                     	;# 
  3075  019B                     	;# 
  3076  019C                     	;# 
  3077  019C                     	;# 
  3078  019C                     	;# 
  3079  019D                     	;# 
  3080  019D                     	;# 
  3081  019D                     	;# 
  3082  019E                     	;# 
  3083  019E                     	;# 
  3084  019E                     	;# 
  3085  019F                     	;# 
  3086  019F                     	;# 
  3087  019F                     	;# 
  3088  019F                     	;# 
  3089  019F                     	;# 
  3090  020C                     	;# 
  3091  020D                     	;# 
  3092  020E                     	;# 
  3093  0211                     	;# 
  3094  0211                     	;# 
  3095  0212                     	;# 
  3096  0212                     	;# 
  3097  0213                     	;# 
  3098  0213                     	;# 
  3099  0214                     	;# 
  3100  0214                     	;# 
  3101  0215                     	;# 
  3102  0215                     	;# 
  3103  0215                     	;# 
  3104  0215                     	;# 
  3105  0216                     	;# 
  3106  0216                     	;# 
  3107  0217                     	;# 
  3108  0217                     	;# 
  3109  0219                     	;# 
  3110  021A                     	;# 
  3111  021B                     	;# 
  3112  021C                     	;# 
  3113  021D                     	;# 
  3114  021D                     	;# 
  3115  021E                     	;# 
  3116  021F                     	;# 
  3117  028C                     	;# 
  3118  028D                     	;# 
  3119  028E                     	;# 
  3120  0291                     	;# 
  3121  0291                     	;# 
  3122  0292                     	;# 
  3123  0293                     	;# 
  3124  0294                     	;# 
  3125  0295                     	;# 
  3126  0295                     	;# 
  3127  0296                     	;# 
  3128  0297                     	;# 
  3129  0298                     	;# 
  3130  029F                     	;# 
  3131  030C                     	;# 
  3132  030D                     	;# 
  3133  030E                     	;# 
  3134  0311                     	;# 
  3135  0311                     	;# 
  3136  0312                     	;# 
  3137  0313                     	;# 
  3138  0314                     	;# 
  3139  0315                     	;# 
  3140  0315                     	;# 
  3141  0316                     	;# 
  3142  0317                     	;# 
  3143  0318                     	;# 
  3144  038C                     	;# 
  3145  038D                     	;# 
  3146  038E                     	;# 
  3147  0391                     	;# 
  3148  0392                     	;# 
  3149  0393                     	;# 
  3150  0394                     	;# 
  3151  0395                     	;# 
  3152  0396                     	;# 
  3153  0397                     	;# 
  3154  0398                     	;# 
  3155  0399                     	;# 
  3156  039A                     	;# 
  3157  039C                     	;# 
  3158  039D                     	;# 
  3159  039E                     	;# 
  3160  039F                     	;# 
  3161  0411                     	;# 
  3162  0411                     	;# 
  3163  0412                     	;# 
  3164  0413                     	;# 
  3165  0414                     	;# 
  3166  0415                     	;# 
  3167  0416                     	;# 
  3168  0417                     	;# 
  3169  0418                     	;# 
  3170  0418                     	;# 
  3171  0419                     	;# 
  3172  041A                     	;# 
  3173  041B                     	;# 
  3174  041C                     	;# 
  3175  041D                     	;# 
  3176  041E                     	;# 
  3177  041F                     	;# 
  3178  0498                     	;# 
  3179  0498                     	;# 
  3180  0499                     	;# 
  3181  049A                     	;# 
  3182  049B                     	;# 
  3183  049B                     	;# 
  3184  049C                     	;# 
  3185  049D                     	;# 
  3186  049E                     	;# 
  3187  049F                     	;# 
  3188  0617                     	;# 
  3189  0618                     	;# 
  3190  0619                     	;# 
  3191  0619                     	;# 
  3192  061A                     	;# 
  3193  061B                     	;# 
  3194  061C                     	;# 
  3195  061C                     	;# 
  3196  061F                     	;# 
  3197  0691                     	;# 
  3198  0692                     	;# 
  3199  0693                     	;# 
  3200  0694                     	;# 
  3201  0695                     	;# 
  3202  0696                     	;# 
  3203  0697                     	;# 
  3204  0698                     	;# 
  3205  0699                     	;# 
  3206  0711                     	;# 
  3207  0712                     	;# 
  3208  0713                     	;# 
  3209  0714                     	;# 
  3210  0715                     	;# 
  3211  0716                     	;# 
  3212  0717                     	;# 
  3213  0718                     	;# 
  3214  0719                     	;# 
  3215  0891                     	;# 
  3216  0891                     	;# 
  3217  0891                     	;# 
  3218  0891                     	;# 
  3219  0891                     	;# 
  3220  0891                     	;# 
  3221  0892                     	;# 
  3222  0892                     	;# 
  3223  0892                     	;# 
  3224  0893                     	;# 
  3225  0893                     	;# 
  3226  0893                     	;# 
  3227  0893                     	;# 
  3228  0893                     	;# 
  3229  0893                     	;# 
  3230  0894                     	;# 
  3231  0894                     	;# 
  3232  0894                     	;# 
  3233  0895                     	;# 
  3234  0895                     	;# 
  3235  0895                     	;# 
  3236  0896                     	;# 
  3237  0896                     	;# 
  3238  0896                     	;# 
  3239  089B                     	;# 
  3240  0911                     	;# 
  3241  0912                     	;# 
  3242  0913                     	;# 
  3243  0914                     	;# 
  3244  0915                     	;# 
  3245  0916                     	;# 
  3246  0918                     	;# 
  3247  0919                     	;# 
  3248  091A                     	;# 
  3249  091B                     	;# 
  3250  091C                     	;# 
  3251  091D                     	;# 
  3252  091E                     	;# 
  3253  091F                     	;# 
  3254  0E0F                     	;# 
  3255  0E10                     	;# 
  3256  0E11                     	;# 
  3257  0E12                     	;# 
  3258  0E13                     	;# 
  3259  0E14                     	;# 
  3260  0E15                     	;# 
  3261  0E16                     	;# 
  3262  0E17                     	;# 
  3263  0E18                     	;# 
  3264  0E19                     	;# 
  3265  0E1A                     	;# 
  3266  0E1B                     	;# 
  3267  0E1C                     	;# 
  3268  0E1D                     	;# 
  3269  0E1E                     	;# 
  3270  0E1F                     	;# 
  3271  0E20                     	;# 
  3272  0E21                     	;# 
  3273  0E22                     	;# 
  3274  0E24                     	;# 
  3275  0E25                     	;# 
  3276  0E28                     	;# 
  3277  0E29                     	;# 
  3278  0E2A                     	;# 
  3279  0E2B                     	;# 
  3280  0E2C                     	;# 
  3281  0E2D                     	;# 
  3282  0E2E                     	;# 
  3283  0E2F                     	;# 
  3284  0E90                     	;# 
  3285  0E91                     	;# 
  3286  0E92                     	;# 
  3287  0E94                     	;# 
  3288  0E95                     	;# 
  3289  0E9C                     	;# 
  3290  0E9D                     	;# 
  3291  0E9E                     	;# 
  3292  0E9F                     	;# 
  3293  0EA0                     	;# 
  3294  0EA1                     	;# 
  3295  0EA2                     	;# 
  3296  0EA3                     	;# 
  3297  0EA4                     	;# 
  3298  0EA5                     	;# 
  3299  0EA6                     	;# 
  3300  0EA7                     	;# 
  3301  0F0F                     	;# 
  3302  0F10                     	;# 
  3303  0F11                     	;# 
  3304  0F12                     	;# 
  3305  0F13                     	;# 
  3306  0F14                     	;# 
  3307  0F15                     	;# 
  3308  0F16                     	;# 
  3309  0F17                     	;# 
  3310  0F18                     	;# 
  3311  0F19                     	;# 
  3312  0F1A                     	;# 
  3313  0F1B                     	;# 
  3314  0F1C                     	;# 
  3315  0F1D                     	;# 
  3316  0F1E                     	;# 
  3317  0F1F                     	;# 
  3318  0F20                     	;# 
  3319  0F21                     	;# 
  3320  0F22                     	;# 
  3321  0F23                     	;# 
  3322  0F24                     	;# 
  3323  0F25                     	;# 
  3324  0F26                     	;# 
  3325  0F27                     	;# 
  3326  0F28                     	;# 
  3327  0F29                     	;# 
  3328  0F2A                     	;# 
  3329  0F2B                     	;# 
  3330  0F2C                     	;# 
  3331  0F2D                     	;# 
  3332  0F2E                     	;# 
  3333  0F2F                     	;# 
  3334  0F30                     	;# 
  3335  0F31                     	;# 
  3336  0F32                     	;# 
  3337  0F33                     	;# 
  3338  0F34                     	;# 
  3339  0F35                     	;# 
  3340  0F36                     	;# 
  3341  0F37                     	;# 
  3342  0FE4                     	;# 
  3343  0FE5                     	;# 
  3344  0FE6                     	;# 
  3345  0FE7                     	;# 
  3346  0FE8                     	;# 
  3347  0FE9                     	;# 
  3348  0FEA                     	;# 
  3349  0FEB                     	;# 
  3350  0FED                     	;# 
  3351  0FEE                     	;# 
  3352  0FEF                     	;# 
  3353  0000                     	;# 
  3354  0001                     	;# 
  3355  0002                     	;# 
  3356  0003                     	;# 
  3357  0004                     	;# 
  3358  0005                     	;# 
  3359  0006                     	;# 
  3360  0007                     	;# 
  3361  0008                     	;# 
  3362  0009                     	;# 
  3363  000A                     	;# 
  3364  000B                     	;# 
  3365  000C                     	;# 
  3366  000D                     	;# 
  3367  000E                     	;# 
  3368  0010                     	;# 
  3369  0011                     	;# 
  3370  0012                     	;# 
  3371  0013                     	;# 
  3372  0014                     	;# 
  3373  0015                     	;# 
  3374  0015                     	;# 
  3375  0016                     	;# 
  3376  0016                     	;# 
  3377  0017                     	;# 
  3378  0018                     	;# 
  3379  0019                     	;# 
  3380  0019                     	;# 
  3381  001A                     	;# 
  3382  001B                     	;# 
  3383  001C                     	;# 
  3384  001D                     	;# 
  3385  001E                     	;# 
  3386  001F                     	;# 
  3387  008C                     	;# 
  3388  008D                     	;# 
  3389  008E                     	;# 
  3390  0090                     	;# 
  3391  0091                     	;# 
  3392  0092                     	;# 
  3393  0093                     	;# 
  3394  0094                     	;# 
  3395  0097                     	;# 
  3396  009B                     	;# 
  3397  009B                     	;# 
  3398  009C                     	;# 
  3399  009D                     	;# 
  3400  009E                     	;# 
  3401  009F                     	;# 
  3402  010C                     	;# 
  3403  010D                     	;# 
  3404  010E                     	;# 
  3405  0111                     	;# 
  3406  0112                     	;# 
  3407  0113                     	;# 
  3408  0114                     	;# 
  3409  0115                     	;# 
  3410  0116                     	;# 
  3411  0117                     	;# 
  3412  0118                     	;# 
  3413  0119                     	;# 
  3414  018C                     	;# 
  3415  018D                     	;# 
  3416  018E                     	;# 
  3417  0199                     	;# 
  3418  0199                     	;# 
  3419  0199                     	;# 
  3420  019A                     	;# 
  3421  019A                     	;# 
  3422  019A                     	;# 
  3423  019B                     	;# 
  3424  019B                     	;# 
  3425  019B                     	;# 
  3426  019B                     	;# 
  3427  019B                     	;# 
  3428  019C                     	;# 
  3429  019C                     	;# 
  3430  019C                     	;# 
  3431  019D                     	;# 
  3432  019D                     	;# 
  3433  019D                     	;# 
  3434  019E                     	;# 
  3435  019E                     	;# 
  3436  019E                     	;# 
  3437  019F                     	;# 
  3438  019F                     	;# 
  3439  019F                     	;# 
  3440  019F                     	;# 
  3441  019F                     	;# 
  3442  020C                     	;# 
  3443  020D                     	;# 
  3444  020E                     	;# 
  3445  0211                     	;# 
  3446  0211                     	;# 
  3447  0212                     	;# 
  3448  0212                     	;# 
  3449  0213                     	;# 
  3450  0213                     	;# 
  3451  0214                     	;# 
  3452  0214                     	;# 
  3453  0215                     	;# 
  3454  0215                     	;# 
  3455  0215                     	;# 
  3456  0215                     	;# 
  3457  0216                     	;# 
  3458  0216                     	;# 
  3459  0217                     	;# 
  3460  0217                     	;# 
  3461  0219                     	;# 
  3462  021A                     	;# 
  3463  021B                     	;# 
  3464  021C                     	;# 
  3465  021D                     	;# 
  3466  021D                     	;# 
  3467  021E                     	;# 
  3468  021F                     	;# 
  3469  028C                     	;# 
  3470  028D                     	;# 
  3471  028E                     	;# 
  3472  0291                     	;# 
  3473  0291                     	;# 
  3474  0292                     	;# 
  3475  0293                     	;# 
  3476  0294                     	;# 
  3477  0295                     	;# 
  3478  0295                     	;# 
  3479  0296                     	;# 
  3480  0297                     	;# 
  3481  0298                     	;# 
  3482  029F                     	;# 
  3483  030C                     	;# 
  3484  030D                     	;# 
  3485  030E                     	;# 
  3486  0311                     	;# 
  3487  0311                     	;# 
  3488  0312                     	;# 
  3489  0313                     	;# 
  3490  0314                     	;# 
  3491  0315                     	;# 
  3492  0315                     	;# 
  3493  0316                     	;# 
  3494  0317                     	;# 
  3495  0318                     	;# 
  3496  038C                     	;# 
  3497  038D                     	;# 
  3498  038E                     	;# 
  3499  0391                     	;# 
  3500  0392                     	;# 
  3501  0393                     	;# 
  3502  0394                     	;# 
  3503  0395                     	;# 
  3504  0396                     	;# 
  3505  0397                     	;# 
  3506  0398                     	;# 
  3507  0399                     	;# 
  3508  039A                     	;# 
  3509  039C                     	;# 
  3510  039D                     	;# 
  3511  039E                     	;# 
  3512  039F                     	;# 
  3513  0411                     	;# 
  3514  0411                     	;# 
  3515  0412                     	;# 
  3516  0413                     	;# 
  3517  0414                     	;# 
  3518  0415                     	;# 
  3519  0416                     	;# 
  3520  0417                     	;# 
  3521  0418                     	;# 
  3522  0418                     	;# 
  3523  0419                     	;# 
  3524  041A                     	;# 
  3525  041B                     	;# 
  3526  041C                     	;# 
  3527  041D                     	;# 
  3528  041E                     	;# 
  3529  041F                     	;# 
  3530  0498                     	;# 
  3531  0498                     	;# 
  3532  0499                     	;# 
  3533  049A                     	;# 
  3534  049B                     	;# 
  3535  049B                     	;# 
  3536  049C                     	;# 
  3537  049D                     	;# 
  3538  049E                     	;# 
  3539  049F                     	;# 
  3540  0617                     	;# 
  3541  0618                     	;# 
  3542  0619                     	;# 
  3543  0619                     	;# 
  3544  061A                     	;# 
  3545  061B                     	;# 
  3546  061C                     	;# 
  3547  061C                     	;# 
  3548  061F                     	;# 
  3549  0691                     	;# 
  3550  0692                     	;# 
  3551  0693                     	;# 
  3552  0694                     	;# 
  3553  0695                     	;# 
  3554  0696                     	;# 
  3555  0697                     	;# 
  3556  0698                     	;# 
  3557  0699                     	;# 
  3558  0711                     	;# 
  3559  0712                     	;# 
  3560  0713                     	;# 
  3561  0714                     	;# 
  3562  0715                     	;# 
  3563  0716                     	;# 
  3564  0717                     	;# 
  3565  0718                     	;# 
  3566  0719                     	;# 
  3567  0891                     	;# 
  3568  0891                     	;# 
  3569  0891                     	;# 
  3570  0891                     	;# 
  3571  0891                     	;# 
  3572  0891                     	;# 
  3573  0892                     	;# 
  3574  0892                     	;# 
  3575  0892                     	;# 
  3576  0893                     	;# 
  3577  0893                     	;# 
  3578  0893                     	;# 
  3579  0893                     	;# 
  3580  0893                     	;# 
  3581  0893                     	;# 
  3582  0894                     	;# 
  3583  0894                     	;# 
  3584  0894                     	;# 
  3585  0895                     	;# 
  3586  0895                     	;# 
  3587  0895                     	;# 
  3588  0896                     	;# 
  3589  0896                     	;# 
  3590  0896                     	;# 
  3591  089B                     	;# 
  3592  0911                     	;# 
  3593  0912                     	;# 
  3594  0913                     	;# 
  3595  0914                     	;# 
  3596  0915                     	;# 
  3597  0916                     	;# 
  3598  0918                     	;# 
  3599  0919                     	;# 
  3600  091A                     	;# 
  3601  091B                     	;# 
  3602  091C                     	;# 
  3603  091D                     	;# 
  3604  091E                     	;# 
  3605  091F                     	;# 
  3606  0E0F                     	;# 
  3607  0E10                     	;# 
  3608  0E11                     	;# 
  3609  0E12                     	;# 
  3610  0E13                     	;# 
  3611  0E14                     	;# 
  3612  0E15                     	;# 
  3613  0E16                     	;# 
  3614  0E17                     	;# 
  3615  0E18                     	;# 
  3616  0E19                     	;# 
  3617  0E1A                     	;# 
  3618  0E1B                     	;# 
  3619  0E1C                     	;# 
  3620  0E1D                     	;# 
  3621  0E1E                     	;# 
  3622  0E1F                     	;# 
  3623  0E20                     	;# 
  3624  0E21                     	;# 
  3625  0E22                     	;# 
  3626  0E24                     	;# 
  3627  0E25                     	;# 
  3628  0E28                     	;# 
  3629  0E29                     	;# 
  3630  0E2A                     	;# 
  3631  0E2B                     	;# 
  3632  0E2C                     	;# 
  3633  0E2D                     	;# 
  3634  0E2E                     	;# 
  3635  0E2F                     	;# 
  3636  0E90                     	;# 
  3637  0E91                     	;# 
  3638  0E92                     	;# 
  3639  0E94                     	;# 
  3640  0E95                     	;# 
  3641  0E9C                     	;# 
  3642  0E9D                     	;# 
  3643  0E9E                     	;# 
  3644  0E9F                     	;# 
  3645  0EA0                     	;# 
  3646  0EA1                     	;# 
  3647  0EA2                     	;# 
  3648  0EA3                     	;# 
  3649  0EA4                     	;# 
  3650  0EA5                     	;# 
  3651  0EA6                     	;# 
  3652  0EA7                     	;# 
  3653  0F0F                     	;# 
  3654  0F10                     	;# 
  3655  0F11                     	;# 
  3656  0F12                     	;# 
  3657  0F13                     	;# 
  3658  0F14                     	;# 
  3659  0F15                     	;# 
  3660  0F16                     	;# 
  3661  0F17                     	;# 
  3662  0F18                     	;# 
  3663  0F19                     	;# 
  3664  0F1A                     	;# 
  3665  0F1B                     	;# 
  3666  0F1C                     	;# 
  3667  0F1D                     	;# 
  3668  0F1E                     	;# 
  3669  0F1F                     	;# 
  3670  0F20                     	;# 
  3671  0F21                     	;# 
  3672  0F22                     	;# 
  3673  0F23                     	;# 
  3674  0F24                     	;# 
  3675  0F25                     	;# 
  3676  0F26                     	;# 
  3677  0F27                     	;# 
  3678  0F28                     	;# 
  3679  0F29                     	;# 
  3680  0F2A                     	;# 
  3681  0F2B                     	;# 
  3682  0F2C                     	;# 
  3683  0F2D                     	;# 
  3684  0F2E                     	;# 
  3685  0F2F                     	;# 
  3686  0F30                     	;# 
  3687  0F31                     	;# 
  3688  0F32                     	;# 
  3689  0F33                     	;# 
  3690  0F34                     	;# 
  3691  0F35                     	;# 
  3692  0F36                     	;# 
  3693  0F37                     	;# 
  3694  0FE4                     	;# 
  3695  0FE5                     	;# 
  3696  0FE6                     	;# 
  3697  0FE7                     	;# 
  3698  0FE8                     	;# 
  3699  0FE9                     	;# 
  3700  0FEA                     	;# 
  3701  0FEB                     	;# 
  3702  0FED                     	;# 
  3703  0FEE                     	;# 
  3704  0FEF                     	;# 
  3705  0000                     	;# 
  3706  0001                     	;# 
  3707  0002                     	;# 
  3708  0003                     	;# 
  3709  0004                     	;# 
  3710  0005                     	;# 
  3711  0006                     	;# 
  3712  0007                     	;# 
  3713  0008                     	;# 
  3714  0009                     	;# 
  3715  000A                     	;# 
  3716  000B                     	;# 
  3717  000C                     	;# 
  3718  000D                     	;# 
  3719  000E                     	;# 
  3720  0010                     	;# 
  3721  0011                     	;# 
  3722  0012                     	;# 
  3723  0013                     	;# 
  3724  0014                     	;# 
  3725  0015                     	;# 
  3726  0015                     	;# 
  3727  0016                     	;# 
  3728  0016                     	;# 
  3729  0017                     	;# 
  3730  0018                     	;# 
  3731  0019                     	;# 
  3732  0019                     	;# 
  3733  001A                     	;# 
  3734  001B                     	;# 
  3735  001C                     	;# 
  3736  001D                     	;# 
  3737  001E                     	;# 
  3738  001F                     	;# 
  3739  008C                     	;# 
  3740  008D                     	;# 
  3741  008E                     	;# 
  3742  0090                     	;# 
  3743  0091                     	;# 
  3744  0092                     	;# 
  3745  0093                     	;# 
  3746  0094                     	;# 
  3747  0097                     	;# 
  3748  009B                     	;# 
  3749  009B                     	;# 
  3750  009C                     	;# 
  3751  009D                     	;# 
  3752  009E                     	;# 
  3753  009F                     	;# 
  3754  010C                     	;# 
  3755  010D                     	;# 
  3756  010E                     	;# 
  3757  0111                     	;# 
  3758  0112                     	;# 
  3759  0113                     	;# 
  3760  0114                     	;# 
  3761  0115                     	;# 
  3762  0116                     	;# 
  3763  0117                     	;# 
  3764  0118                     	;# 
  3765  0119                     	;# 
  3766  018C                     	;# 
  3767  018D                     	;# 
  3768  018E                     	;# 
  3769  0199                     	;# 
  3770  0199                     	;# 
  3771  0199                     	;# 
  3772  019A                     	;# 
  3773  019A                     	;# 
  3774  019A                     	;# 
  3775  019B                     	;# 
  3776  019B                     	;# 
  3777  019B                     	;# 
  3778  019B                     	;# 
  3779  019B                     	;# 
  3780  019C                     	;# 
  3781  019C                     	;# 
  3782  019C                     	;# 
  3783  019D                     	;# 
  3784  019D                     	;# 
  3785  019D                     	;# 
  3786  019E                     	;# 
  3787  019E                     	;# 
  3788  019E                     	;# 
  3789  019F                     	;# 
  3790  019F                     	;# 
  3791  019F                     	;# 
  3792  019F                     	;# 
  3793  019F                     	;# 
  3794  020C                     	;# 
  3795  020D                     	;# 
  3796  020E                     	;# 
  3797  0211                     	;# 
  3798  0211                     	;# 
  3799  0212                     	;# 
  3800  0212                     	;# 
  3801  0213                     	;# 
  3802  0213                     	;# 
  3803  0214                     	;# 
  3804  0214                     	;# 
  3805  0215                     	;# 
  3806  0215                     	;# 
  3807  0215                     	;# 
  3808  0215                     	;# 
  3809  0216                     	;# 
  3810  0216                     	;# 
  3811  0217                     	;# 
  3812  0217                     	;# 
  3813  0219                     	;# 
  3814  021A                     	;# 
  3815  021B                     	;# 
  3816  021C                     	;# 
  3817  021D                     	;# 
  3818  021D                     	;# 
  3819  021E                     	;# 
  3820  021F                     	;# 
  3821  028C                     	;# 
  3822  028D                     	;# 
  3823  028E                     	;# 
  3824  0291                     	;# 
  3825  0291                     	;# 
  3826  0292                     	;# 
  3827  0293                     	;# 
  3828  0294                     	;# 
  3829  0295                     	;# 
  3830  0295                     	;# 
  3831  0296                     	;# 
  3832  0297                     	;# 
  3833  0298                     	;# 
  3834  029F                     	;# 
  3835  030C                     	;# 
  3836  030D                     	;# 
  3837  030E                     	;# 
  3838  0311                     	;# 
  3839  0311                     	;# 
  3840  0312                     	;# 
  3841  0313                     	;# 
  3842  0314                     	;# 
  3843  0315                     	;# 
  3844  0315                     	;# 
  3845  0316                     	;# 
  3846  0317                     	;# 
  3847  0318                     	;# 
  3848  038C                     	;# 
  3849  038D                     	;# 
  3850  038E                     	;# 
  3851  0391                     	;# 
  3852  0392                     	;# 
  3853  0393                     	;# 
  3854  0394                     	;# 
  3855  0395                     	;# 
  3856  0396                     	;# 
  3857  0397                     	;# 
  3858  0398                     	;# 
  3859  0399                     	;# 
  3860  039A                     	;# 
  3861  039C                     	;# 
  3862  039D                     	;# 
  3863  039E                     	;# 
  3864  039F                     	;# 
  3865  0411                     	;# 
  3866  0411                     	;# 
  3867  0412                     	;# 
  3868  0413                     	;# 
  3869  0414                     	;# 
  3870  0415                     	;# 
  3871  0416                     	;# 
  3872  0417                     	;# 
  3873  0418                     	;# 
  3874  0418                     	;# 
  3875  0419                     	;# 
  3876  041A                     	;# 
  3877  041B                     	;# 
  3878  041C                     	;# 
  3879  041D                     	;# 
  3880  041E                     	;# 
  3881  041F                     	;# 
  3882  0498                     	;# 
  3883  0498                     	;# 
  3884  0499                     	;# 
  3885  049A                     	;# 
  3886  049B                     	;# 
  3887  049B                     	;# 
  3888  049C                     	;# 
  3889  049D                     	;# 
  3890  049E                     	;# 
  3891  049F                     	;# 
  3892  0617                     	;# 
  3893  0618                     	;# 
  3894  0619                     	;# 
  3895  0619                     	;# 
  3896  061A                     	;# 
  3897  061B                     	;# 
  3898  061C                     	;# 
  3899  061C                     	;# 
  3900  061F                     	;# 
  3901  0691                     	;# 
  3902  0692                     	;# 
  3903  0693                     	;# 
  3904  0694                     	;# 
  3905  0695                     	;# 
  3906  0696                     	;# 
  3907  0697                     	;# 
  3908  0698                     	;# 
  3909  0699                     	;# 
  3910  0711                     	;# 
  3911  0712                     	;# 
  3912  0713                     	;# 
  3913  0714                     	;# 
  3914  0715                     	;# 
  3915  0716                     	;# 
  3916  0717                     	;# 
  3917  0718                     	;# 
  3918  0719                     	;# 
  3919  0891                     	;# 
  3920  0891                     	;# 
  3921  0891                     	;# 
  3922  0891                     	;# 
  3923  0891                     	;# 
  3924  0891                     	;# 
  3925  0892                     	;# 
  3926  0892                     	;# 
  3927  0892                     	;# 
  3928  0893                     	;# 
  3929  0893                     	;# 
  3930  0893                     	;# 
  3931  0893                     	;# 
  3932  0893                     	;# 
  3933  0893                     	;# 
  3934  0894                     	;# 
  3935  0894                     	;# 
  3936  0894                     	;# 
  3937  0895                     	;# 
  3938  0895                     	;# 
  3939  0895                     	;# 
  3940  0896                     	;# 
  3941  0896                     	;# 
  3942  0896                     	;# 
  3943  089B                     	;# 
  3944  0911                     	;# 
  3945  0912                     	;# 
  3946  0913                     	;# 
  3947  0914                     	;# 
  3948  0915                     	;# 
  3949  0916                     	;# 
  3950  0918                     	;# 
  3951  0919                     	;# 
  3952  091A                     	;# 
  3953  091B                     	;# 
  3954  091C                     	;# 
  3955  091D                     	;# 
  3956  091E                     	;# 
  3957  091F                     	;# 
  3958  0E0F                     	;# 
  3959  0E10                     	;# 
  3960  0E11                     	;# 
  3961  0E12                     	;# 
  3962  0E13                     	;# 
  3963  0E14                     	;# 
  3964  0E15                     	;# 
  3965  0E16                     	;# 
  3966  0E17                     	;# 
  3967  0E18                     	;# 
  3968  0E19                     	;# 
  3969  0E1A                     	;# 
  3970  0E1B                     	;# 
  3971  0E1C                     	;# 
  3972  0E1D                     	;# 
  3973  0E1E                     	;# 
  3974  0E1F                     	;# 
  3975  0E20                     	;# 
  3976  0E21                     	;# 
  3977  0E22                     	;# 
  3978  0E24                     	;# 
  3979  0E25                     	;# 
  3980  0E28                     	;# 
  3981  0E29                     	;# 
  3982  0E2A                     	;# 
  3983  0E2B                     	;# 
  3984  0E2C                     	;# 
  3985  0E2D                     	;# 
  3986  0E2E                     	;# 
  3987  0E2F                     	;# 
  3988  0E90                     	;# 
  3989  0E91                     	;# 
  3990  0E92                     	;# 
  3991  0E94                     	;# 
  3992  0E95                     	;# 
  3993  0E9C                     	;# 
  3994  0E9D                     	;# 
  3995  0E9E                     	;# 
  3996  0E9F                     	;# 
  3997  0EA0                     	;# 
  3998  0EA1                     	;# 
  3999  0EA2                     	;# 
  4000  0EA3                     	;# 
  4001  0EA4                     	;# 
  4002  0EA5                     	;# 
  4003  0EA6                     	;# 
  4004  0EA7                     	;# 
  4005  0F0F                     	;# 
  4006  0F10                     	;# 
  4007  0F11                     	;# 
  4008  0F12                     	;# 
  4009  0F13                     	;# 
  4010  0F14                     	;# 
  4011  0F15                     	;# 
  4012  0F16                     	;# 
  4013  0F17                     	;# 
  4014  0F18                     	;# 
  4015  0F19                     	;# 
  4016  0F1A                     	;# 
  4017  0F1B                     	;# 
  4018  0F1C                     	;# 
  4019  0F1D                     	;# 
  4020  0F1E                     	;# 
  4021  0F1F                     	;# 
  4022  0F20                     	;# 
  4023  0F21                     	;# 
  4024  0F22                     	;# 
  4025  0F23                     	;# 
  4026  0F24                     	;# 
  4027  0F25                     	;# 
  4028  0F26                     	;# 
  4029  0F27                     	;# 
  4030  0F28                     	;# 
  4031  0F29                     	;# 
  4032  0F2A                     	;# 
  4033  0F2B                     	;# 
  4034  0F2C                     	;# 
  4035  0F2D                     	;# 
  4036  0F2E                     	;# 
  4037  0F2F                     	;# 
  4038  0F30                     	;# 
  4039  0F31                     	;# 
  4040  0F32                     	;# 
  4041  0F33                     	;# 
  4042  0F34                     	;# 
  4043  0F35                     	;# 
  4044  0F36                     	;# 
  4045  0F37                     	;# 
  4046  0FE4                     	;# 
  4047  0FE5                     	;# 
  4048  0FE6                     	;# 
  4049  0FE7                     	;# 
  4050  0FE8                     	;# 
  4051  0FE9                     	;# 
  4052  0FEA                     	;# 
  4053  0FEB                     	;# 
  4054  0FED                     	;# 
  4055  0FEE                     	;# 
  4056  0FEF                     	;# 
  4057  0000                     	;# 
  4058  0001                     	;# 
  4059  0002                     	;# 
  4060  0003                     	;# 
  4061  0004                     	;# 
  4062  0005                     	;# 
  4063  0006                     	;# 
  4064  0007                     	;# 
  4065  0008                     	;# 
  4066  0009                     	;# 
  4067  000A                     	;# 
  4068  000B                     	;# 
  4069  000C                     	;# 
  4070  000D                     	;# 
  4071  000E                     	;# 
  4072  0010                     	;# 
  4073  0011                     	;# 
  4074  0012                     	;# 
  4075  0013                     	;# 
  4076  0014                     	;# 
  4077  0015                     	;# 
  4078  0015                     	;# 
  4079  0016                     	;# 
  4080  0016                     	;# 
  4081  0017                     	;# 
  4082  0018                     	;# 
  4083  0019                     	;# 
  4084  0019                     	;# 
  4085  001A                     	;# 
  4086  001B                     	;# 
  4087  001C                     	;# 
  4088  001D                     	;# 
  4089  001E                     	;# 
  4090  001F                     	;# 
  4091  008C                     	;# 
  4092  008D                     	;# 
  4093  008E                     	;# 
  4094  0090                     	;# 
  4095  0091                     	;# 
  4096  0092                     	;# 
  4097  0093                     	;# 
  4098  0094                     	;# 
  4099  0097                     	;# 
  4100  009B                     	;# 
  4101  009B                     	;# 
  4102  009C                     	;# 
  4103  009D                     	;# 
  4104  009E                     	;# 
  4105  009F                     	;# 
  4106  010C                     	;# 
  4107  010D                     	;# 
  4108  010E                     	;# 
  4109  0111                     	;# 
  4110  0112                     	;# 
  4111  0113                     	;# 
  4112  0114                     	;# 
  4113  0115                     	;# 
  4114  0116                     	;# 
  4115  0117                     	;# 
  4116  0118                     	;# 
  4117  0119                     	;# 
  4118  018C                     	;# 
  4119  018D                     	;# 
  4120  018E                     	;# 
  4121  0199                     	;# 
  4122  0199                     	;# 
  4123  0199                     	;# 
  4124  019A                     	;# 
  4125  019A                     	;# 
  4126  019A                     	;# 
  4127  019B                     	;# 
  4128  019B                     	;# 
  4129  019B                     	;# 
  4130  019B                     	;# 
  4131  019B                     	;# 
  4132  019C                     	;# 
  4133  019C                     	;# 
  4134  019C                     	;# 
  4135  019D                     	;# 
  4136  019D                     	;# 
  4137  019D                     	;# 
  4138  019E                     	;# 
  4139  019E                     	;# 
  4140  019E                     	;# 
  4141  019F                     	;# 
  4142  019F                     	;# 
  4143  019F                     	;# 
  4144  019F                     	;# 
  4145  019F                     	;# 
  4146  020C                     	;# 
  4147  020D                     	;# 
  4148  020E                     	;# 
  4149  0211                     	;# 
  4150  0211                     	;# 
  4151  0212                     	;# 
  4152  0212                     	;# 
  4153  0213                     	;# 
  4154  0213                     	;# 
  4155  0214                     	;# 
  4156  0214                     	;# 
  4157  0215                     	;# 
  4158  0215                     	;# 
  4159  0215                     	;# 
  4160  0215                     	;# 
  4161  0216                     	;# 
  4162  0216                     	;# 
  4163  0217                     	;# 
  4164  0217                     	;# 
  4165  0219                     	;# 
  4166  021A                     	;# 
  4167  021B                     	;# 
  4168  021C                     	;# 
  4169  021D                     	;# 
  4170  021D                     	;# 
  4171  021E                     	;# 
  4172  021F                     	;# 
  4173  028C                     	;# 
  4174  028D                     	;# 
  4175  028E                     	;# 
  4176  0291                     	;# 
  4177  0291                     	;# 
  4178  0292                     	;# 
  4179  0293                     	;# 
  4180  0294                     	;# 
  4181  0295                     	;# 
  4182  0295                     	;# 
  4183  0296                     	;# 
  4184  0297                     	;# 
  4185  0298                     	;# 
  4186  029F                     	;# 
  4187  030C                     	;# 
  4188  030D                     	;# 
  4189  030E                     	;# 
  4190  0311                     	;# 
  4191  0311                     	;# 
  4192  0312                     	;# 
  4193  0313                     	;# 
  4194  0314                     	;# 
  4195  0315                     	;# 
  4196  0315                     	;# 
  4197  0316                     	;# 
  4198  0317                     	;# 
  4199  0318                     	;# 
  4200  038C                     	;# 
  4201  038D                     	;# 
  4202  038E                     	;# 
  4203  0391                     	;# 
  4204  0392                     	;# 
  4205  0393                     	;# 
  4206  0394                     	;# 
  4207  0395                     	;# 
  4208  0396                     	;# 
  4209  0397                     	;# 
  4210  0398                     	;# 
  4211  0399                     	;# 
  4212  039A                     	;# 
  4213  039C                     	;# 
  4214  039D                     	;# 
  4215  039E                     	;# 
  4216  039F                     	;# 
  4217  0411                     	;# 
  4218  0411                     	;# 
  4219  0412                     	;# 
  4220  0413                     	;# 
  4221  0414                     	;# 
  4222  0415                     	;# 
  4223  0416                     	;# 
  4224  0417                     	;# 
  4225  0418                     	;# 
  4226  0418                     	;# 
  4227  0419                     	;# 
  4228  041A                     	;# 
  4229  041B                     	;# 
  4230  041C                     	;# 
  4231  041D                     	;# 
  4232  041E                     	;# 
  4233  041F                     	;# 
  4234  0498                     	;# 
  4235  0498                     	;# 
  4236  0499                     	;# 
  4237  049A                     	;# 
  4238  049B                     	;# 
  4239  049B                     	;# 
  4240  049C                     	;# 
  4241  049D                     	;# 
  4242  049E                     	;# 
  4243  049F                     	;# 
  4244  0617                     	;# 
  4245  0618                     	;# 
  4246  0619                     	;# 
  4247  0619                     	;# 
  4248  061A                     	;# 
  4249  061B                     	;# 
  4250  061C                     	;# 
  4251  061C                     	;# 
  4252  061F                     	;# 
  4253  0691                     	;# 
  4254  0692                     	;# 
  4255  0693                     	;# 
  4256  0694                     	;# 
  4257  0695                     	;# 
  4258  0696                     	;# 
  4259  0697                     	;# 
  4260  0698                     	;# 
  4261  0699                     	;# 
  4262  0711                     	;# 
  4263  0712                     	;# 
  4264  0713                     	;# 
  4265  0714                     	;# 
  4266  0715                     	;# 
  4267  0716                     	;# 
  4268  0717                     	;# 
  4269  0718                     	;# 
  4270  0719                     	;# 
  4271  0891                     	;# 
  4272  0891                     	;# 
  4273  0891                     	;# 
  4274  0891                     	;# 
  4275  0891                     	;# 
  4276  0891                     	;# 
  4277  0892                     	;# 
  4278  0892                     	;# 
  4279  0892                     	;# 
  4280  0893                     	;# 
  4281  0893                     	;# 
  4282  0893                     	;# 
  4283  0893                     	;# 
  4284  0893                     	;# 
  4285  0893                     	;# 
  4286  0894                     	;# 
  4287  0894                     	;# 
  4288  0894                     	;# 
  4289  0895                     	;# 
  4290  0895                     	;# 
  4291  0895                     	;# 
  4292  0896                     	;# 
  4293  0896                     	;# 
  4294  0896                     	;# 
  4295  089B                     	;# 
  4296  0911                     	;# 
  4297  0912                     	;# 
  4298  0913                     	;# 
  4299  0914                     	;# 
  4300  0915                     	;# 
  4301  0916                     	;# 
  4302  0918                     	;# 
  4303  0919                     	;# 
  4304  091A                     	;# 
  4305  091B                     	;# 
  4306  091C                     	;# 
  4307  091D                     	;# 
  4308  091E                     	;# 
  4309  091F                     	;# 
  4310  0E0F                     	;# 
  4311  0E10                     	;# 
  4312  0E11                     	;# 
  4313  0E12                     	;# 
  4314  0E13                     	;# 
  4315  0E14                     	;# 
  4316  0E15                     	;# 
  4317  0E16                     	;# 
  4318  0E17                     	;# 
  4319  0E18                     	;# 
  4320  0E19                     	;# 
  4321  0E1A                     	;# 
  4322  0E1B                     	;# 
  4323  0E1C                     	;# 
  4324  0E1D                     	;# 
  4325  0E1E                     	;# 
  4326  0E1F                     	;# 
  4327  0E20                     	;# 
  4328  0E21                     	;# 
  4329  0E22                     	;# 
  4330  0E24                     	;# 
  4331  0E25                     	;# 
  4332  0E28                     	;# 
  4333  0E29                     	;# 
  4334  0E2A                     	;# 
  4335  0E2B                     	;# 
  4336  0E2C                     	;# 
  4337  0E2D                     	;# 
  4338  0E2E                     	;# 
  4339  0E2F                     	;# 
  4340  0E90                     	;# 
  4341  0E91                     	;# 
  4342  0E92                     	;# 
  4343  0E94                     	;# 
  4344  0E95                     	;# 
  4345  0E9C                     	;# 
  4346  0E9D                     	;# 
  4347  0E9E                     	;# 
  4348  0E9F                     	;# 
  4349  0EA0                     	;# 
  4350  0EA1                     	;# 
  4351  0EA2                     	;# 
  4352  0EA3                     	;# 
  4353  0EA4                     	;# 
  4354  0EA5                     	;# 
  4355  0EA6                     	;# 
  4356  0EA7                     	;# 
  4357  0F0F                     	;# 
  4358  0F10                     	;# 
  4359  0F11                     	;# 
  4360  0F12                     	;# 
  4361  0F13                     	;# 
  4362  0F14                     	;# 
  4363  0F15                     	;# 
  4364  0F16                     	;# 
  4365  0F17                     	;# 
  4366  0F18                     	;# 
  4367  0F19                     	;# 
  4368  0F1A                     	;# 
  4369  0F1B                     	;# 
  4370  0F1C                     	;# 
  4371  0F1D                     	;# 
  4372  0F1E                     	;# 
  4373  0F1F                     	;# 
  4374  0F20                     	;# 
  4375  0F21                     	;# 
  4376  0F22                     	;# 
  4377  0F23                     	;# 
  4378  0F24                     	;# 
  4379  0F25                     	;# 
  4380  0F26                     	;# 
  4381  0F27                     	;# 
  4382  0F28                     	;# 
  4383  0F29                     	;# 
  4384  0F2A                     	;# 
  4385  0F2B                     	;# 
  4386  0F2C                     	;# 
  4387  0F2D                     	;# 
  4388  0F2E                     	;# 
  4389  0F2F                     	;# 
  4390  0F30                     	;# 
  4391  0F31                     	;# 
  4392  0F32                     	;# 
  4393  0F33                     	;# 
  4394  0F34                     	;# 
  4395  0F35                     	;# 
  4396  0F36                     	;# 
  4397  0F37                     	;# 
  4398  0FE4                     	;# 
  4399  0FE5                     	;# 
  4400  0FE6                     	;# 
  4401  0FE7                     	;# 
  4402  0FE8                     	;# 
  4403  0FE9                     	;# 
  4404  0FEA                     	;# 
  4405  0FEB                     	;# 
  4406  0FED                     	;# 
  4407  0FEE                     	;# 
  4408  0FEF                     	;# 
  4409  0000                     	;# 
  4410  0001                     	;# 
  4411  0002                     	;# 
  4412  0003                     	;# 
  4413  0004                     	;# 
  4414  0005                     	;# 
  4415  0006                     	;# 
  4416  0007                     	;# 
  4417  0008                     	;# 
  4418  0009                     	;# 
  4419  000A                     	;# 
  4420  000B                     	;# 
  4421  000C                     	;# 
  4422  000D                     	;# 
  4423  000E                     	;# 
  4424  0010                     	;# 
  4425  0011                     	;# 
  4426  0012                     	;# 
  4427  0013                     	;# 
  4428  0014                     	;# 
  4429  0015                     	;# 
  4430  0015                     	;# 
  4431  0016                     	;# 
  4432  0016                     	;# 
  4433  0017                     	;# 
  4434  0018                     	;# 
  4435  0019                     	;# 
  4436  0019                     	;# 
  4437  001A                     	;# 
  4438  001B                     	;# 
  4439  001C                     	;# 
  4440  001D                     	;# 
  4441  001E                     	;# 
  4442  001F                     	;# 
  4443  008C                     	;# 
  4444  008D                     	;# 
  4445  008E                     	;# 
  4446  0090                     	;# 
  4447  0091                     	;# 
  4448  0092                     	;# 
  4449  0093                     	;# 
  4450  0094                     	;# 
  4451  0097                     	;# 
  4452  009B                     	;# 
  4453  009B                     	;# 
  4454  009C                     	;# 
  4455  009D                     	;# 
  4456  009E                     	;# 
  4457  009F                     	;# 
  4458  010C                     	;# 
  4459  010D                     	;# 
  4460  010E                     	;# 
  4461  0111                     	;# 
  4462  0112                     	;# 
  4463  0113                     	;# 
  4464  0114                     	;# 
  4465  0115                     	;# 
  4466  0116                     	;# 
  4467  0117                     	;# 
  4468  0118                     	;# 
  4469  0119                     	;# 
  4470  018C                     	;# 
  4471  018D                     	;# 
  4472  018E                     	;# 
  4473  0199                     	;# 
  4474  0199                     	;# 
  4475  0199                     	;# 
  4476  019A                     	;# 
  4477  019A                     	;# 
  4478  019A                     	;# 
  4479  019B                     	;# 
  4480  019B                     	;# 
  4481  019B                     	;# 
  4482  019B                     	;# 
  4483  019B                     	;# 
  4484  019C                     	;# 
  4485  019C                     	;# 
  4486  019C                     	;# 
  4487  019D                     	;# 
  4488  019D                     	;# 
  4489  019D                     	;# 
  4490  019E                     	;# 
  4491  019E                     	;# 
  4492  019E                     	;# 
  4493  019F                     	;# 
  4494  019F                     	;# 
  4495  019F                     	;# 
  4496  019F                     	;# 
  4497  019F                     	;# 
  4498  020C                     	;# 
  4499  020D                     	;# 
  4500  020E                     	;# 
  4501  0211                     	;# 
  4502  0211                     	;# 
  4503  0212                     	;# 
  4504  0212                     	;# 
  4505  0213                     	;# 
  4506  0213                     	;# 
  4507  0214                     	;# 
  4508  0214                     	;# 
  4509  0215                     	;# 
  4510  0215                     	;# 
  4511  0215                     	;# 
  4512  0215                     	;# 
  4513  0216                     	;# 
  4514  0216                     	;# 
  4515  0217                     	;# 
  4516  0217                     	;# 
  4517  0219                     	;# 
  4518  021A                     	;# 
  4519  021B                     	;# 
  4520  021C                     	;# 
  4521  021D                     	;# 
  4522  021D                     	;# 
  4523  021E                     	;# 
  4524  021F                     	;# 
  4525  028C                     	;# 
  4526  028D                     	;# 
  4527  028E                     	;# 
  4528  0291                     	;# 
  4529  0291                     	;# 
  4530  0292                     	;# 
  4531  0293                     	;# 
  4532  0294                     	;# 
  4533  0295                     	;# 
  4534  0295                     	;# 
  4535  0296                     	;# 
  4536  0297                     	;# 
  4537  0298                     	;# 
  4538  029F                     	;# 
  4539  030C                     	;# 
  4540  030D                     	;# 
  4541  030E                     	;# 
  4542  0311                     	;# 
  4543  0311                     	;# 
  4544  0312                     	;# 
  4545  0313                     	;# 
  4546  0314                     	;# 
  4547  0315                     	;# 
  4548  0315                     	;# 
  4549  0316                     	;# 
  4550  0317                     	;# 
  4551  0318                     	;# 
  4552  038C                     	;# 
  4553  038D                     	;# 
  4554  038E                     	;# 
  4555  0391                     	;# 
  4556  0392                     	;# 
  4557  0393                     	;# 
  4558  0394                     	;# 
  4559  0395                     	;# 
  4560  0396                     	;# 
  4561  0397                     	;# 
  4562  0398                     	;# 
  4563  0399                     	;# 
  4564  039A                     	;# 
  4565  039C                     	;# 
  4566  039D                     	;# 
  4567  039E                     	;# 
  4568  039F                     	;# 
  4569  0411                     	;# 
  4570  0411                     	;# 
  4571  0412                     	;# 
  4572  0413                     	;# 
  4573  0414                     	;# 
  4574  0415                     	;# 
  4575  0416                     	;# 
  4576  0417                     	;# 
  4577  0418                     	;# 
  4578  0418                     	;# 
  4579  0419                     	;# 
  4580  041A                     	;# 
  4581  041B                     	;# 
  4582  041C                     	;# 
  4583  041D                     	;# 
  4584  041E                     	;# 
  4585  041F                     	;# 
  4586  0498                     	;# 
  4587  0498                     	;# 
  4588  0499                     	;# 
  4589  049A                     	;# 
  4590  049B                     	;# 
  4591  049B                     	;# 
  4592  049C                     	;# 
  4593  049D                     	;# 
  4594  049E                     	;# 
  4595  049F                     	;# 
  4596  0617                     	;# 
  4597  0618                     	;# 
  4598  0619                     	;# 
  4599  0619                     	;# 
  4600  061A                     	;# 
  4601  061B                     	;# 
  4602  061C                     	;# 
  4603  061C                     	;# 
  4604  061F                     	;# 
  4605  0691                     	;# 
  4606  0692                     	;# 
  4607  0693                     	;# 
  4608  0694                     	;# 
  4609  0695                     	;# 
  4610  0696                     	;# 
  4611  0697                     	;# 
  4612  0698                     	;# 
  4613  0699                     	;# 
  4614  0711                     	;# 
  4615  0712                     	;# 
  4616  0713                     	;# 
  4617  0714                     	;# 
  4618  0715                     	;# 
  4619  0716                     	;# 
  4620  0717                     	;# 
  4621  0718                     	;# 
  4622  0719                     	;# 
  4623  0891                     	;# 
  4624  0891                     	;# 
  4625  0891                     	;# 
  4626  0891                     	;# 
  4627  0891                     	;# 
  4628  0891                     	;# 
  4629  0892                     	;# 
  4630  0892                     	;# 
  4631  0892                     	;# 
  4632  0893                     	;# 
  4633  0893                     	;# 
  4634  0893                     	;# 
  4635  0893                     	;# 
  4636  0893                     	;# 
  4637  0893                     	;# 
  4638  0894                     	;# 
  4639  0894                     	;# 
  4640  0894                     	;# 
  4641  0895                     	;# 
  4642  0895                     	;# 
  4643  0895                     	;# 
  4644  0896                     	;# 
  4645  0896                     	;# 
  4646  0896                     	;# 
  4647  089B                     	;# 
  4648  0911                     	;# 
  4649  0912                     	;# 
  4650  0913                     	;# 
  4651  0914                     	;# 
  4652  0915                     	;# 
  4653  0916                     	;# 
  4654  0918                     	;# 
  4655  0919                     	;# 
  4656  091A                     	;# 
  4657  091B                     	;# 
  4658  091C                     	;# 
  4659  091D                     	;# 
  4660  091E                     	;# 
  4661  091F                     	;# 
  4662  0E0F                     	;# 
  4663  0E10                     	;# 
  4664  0E11                     	;# 
  4665  0E12                     	;# 
  4666  0E13                     	;# 
  4667  0E14                     	;# 
  4668  0E15                     	;# 
  4669  0E16                     	;# 
  4670  0E17                     	;# 
  4671  0E18                     	;# 
  4672  0E19                     	;# 
  4673  0E1A                     	;# 
  4674  0E1B                     	;# 
  4675  0E1C                     	;# 
  4676  0E1D                     	;# 
  4677  0E1E                     	;# 
  4678  0E1F                     	;# 
  4679  0E20                     	;# 
  4680  0E21                     	;# 
  4681  0E22                     	;# 
  4682  0E24                     	;# 
  4683  0E25                     	;# 
  4684  0E28                     	;# 
  4685  0E29                     	;# 
  4686  0E2A                     	;# 
  4687  0E2B                     	;# 
  4688  0E2C                     	;# 
  4689  0E2D                     	;# 
  4690  0E2E                     	;# 
  4691  0E2F                     	;# 
  4692  0E90                     	;# 
  4693  0E91                     	;# 
  4694  0E92                     	;# 
  4695  0E94                     	;# 
  4696  0E95                     	;# 
  4697  0E9C                     	;# 
  4698  0E9D                     	;# 
  4699  0E9E                     	;# 
  4700  0E9F                     	;# 
  4701  0EA0                     	;# 
  4702  0EA1                     	;# 
  4703  0EA2                     	;# 
  4704  0EA3                     	;# 
  4705  0EA4                     	;# 
  4706  0EA5                     	;# 
  4707  0EA6                     	;# 
  4708  0EA7                     	;# 
  4709  0F0F                     	;# 
  4710  0F10                     	;# 
  4711  0F11                     	;# 
  4712  0F12                     	;# 
  4713  0F13                     	;# 
  4714  0F14                     	;# 
  4715  0F15                     	;# 
  4716  0F16                     	;# 
  4717  0F17                     	;# 
  4718  0F18                     	;# 
  4719  0F19                     	;# 
  4720  0F1A                     	;# 
  4721  0F1B                     	;# 
  4722  0F1C                     	;# 
  4723  0F1D                     	;# 
  4724  0F1E                     	;# 
  4725  0F1F                     	;# 
  4726  0F20                     	;# 
  4727  0F21                     	;# 
  4728  0F22                     	;# 
  4729  0F23                     	;# 
  4730  0F24                     	;# 
  4731  0F25                     	;# 
  4732  0F26                     	;# 
  4733  0F27                     	;# 
  4734  0F28                     	;# 
  4735  0F29                     	;# 
  4736  0F2A                     	;# 
  4737  0F2B                     	;# 
  4738  0F2C                     	;# 
  4739  0F2D                     	;# 
  4740  0F2E                     	;# 
  4741  0F2F                     	;# 
  4742  0F30                     	;# 
  4743  0F31                     	;# 
  4744  0F32                     	;# 
  4745  0F33                     	;# 
  4746  0F34                     	;# 
  4747  0F35                     	;# 
  4748  0F36                     	;# 
  4749  0F37                     	;# 
  4750  0FE4                     	;# 
  4751  0FE5                     	;# 
  4752  0FE6                     	;# 
  4753  0FE7                     	;# 
  4754  0FE8                     	;# 
  4755  0FE9                     	;# 
  4756  0FEA                     	;# 
  4757  0FEB                     	;# 
  4758  0FED                     	;# 
  4759  0FEE                     	;# 
  4760  0FEF                     	;# 
  4761  0000                     	;# 
  4762  0001                     	;# 
  4763  0002                     	;# 
  4764  0003                     	;# 
  4765  0004                     	;# 
  4766  0005                     	;# 
  4767  0006                     	;# 
  4768  0007                     	;# 
  4769  0008                     	;# 
  4770  0009                     	;# 
  4771  000A                     	;# 
  4772  000B                     	;# 
  4773  000C                     	;# 
  4774  000D                     	;# 
  4775  000E                     	;# 
  4776  0010                     	;# 
  4777  0011                     	;# 
  4778  0012                     	;# 
  4779  0013                     	;# 
  4780  0014                     	;# 
  4781  0015                     	;# 
  4782  0015                     	;# 
  4783  0016                     	;# 
  4784  0016                     	;# 
  4785  0017                     	;# 
  4786  0018                     	;# 
  4787  0019                     	;# 
  4788  0019                     	;# 
  4789  001A                     	;# 
  4790  001B                     	;# 
  4791  001C                     	;# 
  4792  001D                     	;# 
  4793  001E                     	;# 
  4794  001F                     	;# 
  4795  008C                     	;# 
  4796  008D                     	;# 
  4797  008E                     	;# 
  4798  0090                     	;# 
  4799  0091                     	;# 
  4800  0092                     	;# 
  4801  0093                     	;# 
  4802  0094                     	;# 
  4803  0097                     	;# 
  4804  009B                     	;# 
  4805  009B                     	;# 
  4806  009C                     	;# 
  4807  009D                     	;# 
  4808  009E                     	;# 
  4809  009F                     	;# 
  4810  010C                     	;# 
  4811  010D                     	;# 
  4812  010E                     	;# 
  4813  0111                     	;# 
  4814  0112                     	;# 
  4815  0113                     	;# 
  4816  0114                     	;# 
  4817  0115                     	;# 
  4818  0116                     	;# 
  4819  0117                     	;# 
  4820  0118                     	;# 
  4821  0119                     	;# 
  4822  018C                     	;# 
  4823  018D                     	;# 
  4824  018E                     	;# 
  4825  0199                     	;# 
  4826  0199                     	;# 
  4827  0199                     	;# 
  4828  019A                     	;# 
  4829  019A                     	;# 
  4830  019A                     	;# 
  4831  019B                     	;# 
  4832  019B                     	;# 
  4833  019B                     	;# 
  4834  019B                     	;# 
  4835  019B                     	;# 
  4836  019C                     	;# 
  4837  019C                     	;# 
  4838  019C                     	;# 
  4839  019D                     	;# 
  4840  019D                     	;# 
  4841  019D                     	;# 
  4842  019E                     	;# 
  4843  019E                     	;# 
  4844  019E                     	;# 
  4845  019F                     	;# 
  4846  019F                     	;# 
  4847  019F                     	;# 
  4848  019F                     	;# 
  4849  019F                     	;# 
  4850  020C                     	;# 
  4851  020D                     	;# 
  4852  020E                     	;# 
  4853  0211                     	;# 
  4854  0211                     	;# 
  4855  0212                     	;# 
  4856  0212                     	;# 
  4857  0213                     	;# 
  4858  0213                     	;# 
  4859  0214                     	;# 
  4860  0214                     	;# 
  4861  0215                     	;# 
  4862  0215                     	;# 
  4863  0215                     	;# 
  4864  0215                     	;# 
  4865  0216                     	;# 
  4866  0216                     	;# 
  4867  0217                     	;# 
  4868  0217                     	;# 
  4869  0219                     	;# 
  4870  021A                     	;# 
  4871  021B                     	;# 
  4872  021C                     	;# 
  4873  021D                     	;# 
  4874  021D                     	;# 
  4875  021E                     	;# 
  4876  021F                     	;# 
  4877  028C                     	;# 
  4878  028D                     	;# 
  4879  028E                     	;# 
  4880  0291                     	;# 
  4881  0291                     	;# 
  4882  0292                     	;# 
  4883  0293                     	;# 
  4884  0294                     	;# 
  4885  0295                     	;# 
  4886  0295                     	;# 
  4887  0296                     	;# 
  4888  0297                     	;# 
  4889  0298                     	;# 
  4890  029F                     	;# 
  4891  030C                     	;# 
  4892  030D                     	;# 
  4893  030E                     	;# 
  4894  0311                     	;# 
  4895  0311                     	;# 
  4896  0312                     	;# 
  4897  0313                     	;# 
  4898  0314                     	;# 
  4899  0315                     	;# 
  4900  0315                     	;# 
  4901  0316                     	;# 
  4902  0317                     	;# 
  4903  0318                     	;# 
  4904  038C                     	;# 
  4905  038D                     	;# 
  4906  038E                     	;# 
  4907  0391                     	;# 
  4908  0392                     	;# 
  4909  0393                     	;# 
  4910  0394                     	;# 
  4911  0395                     	;# 
  4912  0396                     	;# 
  4913  0397                     	;# 
  4914  0398                     	;# 
  4915  0399                     	;# 
  4916  039A                     	;# 
  4917  039C                     	;# 
  4918  039D                     	;# 
  4919  039E                     	;# 
  4920  039F                     	;# 
  4921  0411                     	;# 
  4922  0411                     	;# 
  4923  0412                     	;# 
  4924  0413                     	;# 
  4925  0414                     	;# 
  4926  0415                     	;# 
  4927  0416                     	;# 
  4928  0417                     	;# 
  4929  0418                     	;# 
  4930  0418                     	;# 
  4931  0419                     	;# 
  4932  041A                     	;# 
  4933  041B                     	;# 
  4934  041C                     	;# 
  4935  041D                     	;# 
  4936  041E                     	;# 
  4937  041F                     	;# 
  4938  0498                     	;# 
  4939  0498                     	;# 
  4940  0499                     	;# 
  4941  049A                     	;# 
  4942  049B                     	;# 
  4943  049B                     	;# 
  4944  049C                     	;# 
  4945  049D                     	;# 
  4946  049E                     	;# 
  4947  049F                     	;# 
  4948  0617                     	;# 
  4949  0618                     	;# 
  4950  0619                     	;# 
  4951  0619                     	;# 
  4952  061A                     	;# 
  4953  061B                     	;# 
  4954  061C                     	;# 
  4955  061C                     	;# 
  4956  061F                     	;# 
  4957  0691                     	;# 
  4958  0692                     	;# 
  4959  0693                     	;# 
  4960  0694                     	;# 
  4961  0695                     	;# 
  4962  0696                     	;# 
  4963  0697                     	;# 
  4964  0698                     	;# 
  4965  0699                     	;# 
  4966  0711                     	;# 
  4967  0712                     	;# 
  4968  0713                     	;# 
  4969  0714                     	;# 
  4970  0715                     	;# 
  4971  0716                     	;# 
  4972  0717                     	;# 
  4973  0718                     	;# 
  4974  0719                     	;# 
  4975  0891                     	;# 
  4976  0891                     	;# 
  4977  0891                     	;# 
  4978  0891                     	;# 
  4979  0891                     	;# 
  4980  0891                     	;# 
  4981  0892                     	;# 
  4982  0892                     	;# 
  4983  0892                     	;# 
  4984  0893                     	;# 
  4985  0893                     	;# 
  4986  0893                     	;# 
  4987  0893                     	;# 
  4988  0893                     	;# 
  4989  0893                     	;# 
  4990  0894                     	;# 
  4991  0894                     	;# 
  4992  0894                     	;# 
  4993  0895                     	;# 
  4994  0895                     	;# 
  4995  0895                     	;# 
  4996  0896                     	;# 
  4997  0896                     	;# 
  4998  0896                     	;# 
  4999  089B                     	;# 
  5000  0911                     	;# 
  5001  0912                     	;# 
  5002  0913                     	;# 
  5003  0914                     	;# 
  5004  0915                     	;# 
  5005  0916                     	;# 
  5006  0918                     	;# 
  5007  0919                     	;# 
  5008  091A                     	;# 
  5009  091B                     	;# 
  5010  091C                     	;# 
  5011  091D                     	;# 
  5012  091E                     	;# 
  5013  091F                     	;# 
  5014  0E0F                     	;# 
  5015  0E10                     	;# 
  5016  0E11                     	;# 
  5017  0E12                     	;# 
  5018  0E13                     	;# 
  5019  0E14                     	;# 
  5020  0E15                     	;# 
  5021  0E16                     	;# 
  5022  0E17                     	;# 
  5023  0E18                     	;# 
  5024  0E19                     	;# 
  5025  0E1A                     	;# 
  5026  0E1B                     	;# 
  5027  0E1C                     	;# 
  5028  0E1D                     	;# 
  5029  0E1E                     	;# 
  5030  0E1F                     	;# 
  5031  0E20                     	;# 
  5032  0E21                     	;# 
  5033  0E22                     	;# 
  5034  0E24                     	;# 
  5035  0E25                     	;# 
  5036  0E28                     	;# 
  5037  0E29                     	;# 
  5038  0E2A                     	;# 
  5039  0E2B                     	;# 
  5040  0E2C                     	;# 
  5041  0E2D                     	;# 
  5042  0E2E                     	;# 
  5043  0E2F                     	;# 
  5044  0E90                     	;# 
  5045  0E91                     	;# 
  5046  0E92                     	;# 
  5047  0E94                     	;# 
  5048  0E95                     	;# 
  5049  0E9C                     	;# 
  5050  0E9D                     	;# 
  5051  0E9E                     	;# 
  5052  0E9F                     	;# 
  5053  0EA0                     	;# 
  5054  0EA1                     	;# 
  5055  0EA2                     	;# 
  5056  0EA3                     	;# 
  5057  0EA4                     	;# 
  5058  0EA5                     	;# 
  5059  0EA6                     	;# 
  5060  0EA7                     	;# 
  5061  0F0F                     	;# 
  5062  0F10                     	;# 
  5063  0F11                     	;# 
  5064  0F12                     	;# 
  5065  0F13                     	;# 
  5066  0F14                     	;# 
  5067  0F15                     	;# 
  5068  0F16                     	;# 
  5069  0F17                     	;# 
  5070  0F18                     	;# 
  5071  0F19                     	;# 
  5072  0F1A                     	;# 
  5073  0F1B                     	;# 
  5074  0F1C                     	;# 
  5075  0F1D                     	;# 
  5076  0F1E                     	;# 
  5077  0F1F                     	;# 
  5078  0F20                     	;# 
  5079  0F21                     	;# 
  5080  0F22                     	;# 
  5081  0F23                     	;# 
  5082  0F24                     	;# 
  5083  0F25                     	;# 
  5084  0F26                     	;# 
  5085  0F27                     	;# 
  5086  0F28                     	;# 
  5087  0F29                     	;# 
  5088  0F2A                     	;# 
  5089  0F2B                     	;# 
  5090  0F2C                     	;# 
  5091  0F2D                     	;# 
  5092  0F2E                     	;# 
  5093  0F2F                     	;# 
  5094  0F30                     	;# 
  5095  0F31                     	;# 
  5096  0F32                     	;# 
  5097  0F33                     	;# 
  5098  0F34                     	;# 
  5099  0F35                     	;# 
  5100  0F36                     	;# 
  5101  0F37                     	;# 
  5102  0FE4                     	;# 
  5103  0FE5                     	;# 
  5104  0FE6                     	;# 
  5105  0FE7                     	;# 
  5106  0FE8                     	;# 
  5107  0FE9                     	;# 
  5108  0FEA                     	;# 
  5109  0FEB                     	;# 
  5110  0FED                     	;# 
  5111  0FEE                     	;# 
  5112  0FEF                     	;# 
  5113  0000                     	;# 
  5114  0001                     	;# 
  5115  0002                     	;# 
  5116  0003                     	;# 
  5117  0004                     	;# 
  5118  0005                     	;# 
  5119  0006                     	;# 
  5120  0007                     	;# 
  5121  0008                     	;# 
  5122  0009                     	;# 
  5123  000A                     	;# 
  5124  000B                     	;# 
  5125  000C                     	;# 
  5126  000D                     	;# 
  5127  000E                     	;# 
  5128  0010                     	;# 
  5129  0011                     	;# 
  5130  0012                     	;# 
  5131  0013                     	;# 
  5132  0014                     	;# 
  5133  0015                     	;# 
  5134  0015                     	;# 
  5135  0016                     	;# 
  5136  0016                     	;# 
  5137  0017                     	;# 
  5138  0018                     	;# 
  5139  0019                     	;# 
  5140  0019                     	;# 
  5141  001A                     	;# 
  5142  001B                     	;# 
  5143  001C                     	;# 
  5144  001D                     	;# 
  5145  001E                     	;# 
  5146  001F                     	;# 
  5147  008C                     	;# 
  5148  008D                     	;# 
  5149  008E                     	;# 
  5150  0090                     	;# 
  5151  0091                     	;# 
  5152  0092                     	;# 
  5153  0093                     	;# 
  5154  0094                     	;# 
  5155  0097                     	;# 
  5156  009B                     	;# 
  5157  009B                     	;# 
  5158  009C                     	;# 
  5159  009D                     	;# 
  5160  009E                     	;# 
  5161  009F                     	;# 
  5162  010C                     	;# 
  5163  010D                     	;# 
  5164  010E                     	;# 
  5165  0111                     	;# 
  5166  0112                     	;# 
  5167  0113                     	;# 
  5168  0114                     	;# 
  5169  0115                     	;# 
  5170  0116                     	;# 
  5171  0117                     	;# 
  5172  0118                     	;# 
  5173  0119                     	;# 
  5174  018C                     	;# 
  5175  018D                     	;# 
  5176  018E                     	;# 
  5177  0197                     	;# 
  5178  0199                     	;# 
  5179  0199                     	;# 
  5180  0199                     	;# 
  5181  019A                     	;# 
  5182  019A                     	;# 
  5183  019A                     	;# 
  5184  019B                     	;# 
  5185  019B                     	;# 
  5186  019B                     	;# 
  5187  019B                     	;# 
  5188  019B                     	;# 
  5189  019C                     	;# 
  5190  019C                     	;# 
  5191  019C                     	;# 
  5192  019D                     	;# 
  5193  019D                     	;# 
  5194  019D                     	;# 
  5195  019E                     	;# 
  5196  019E                     	;# 
  5197  019E                     	;# 
  5198  019F                     	;# 
  5199  019F                     	;# 
  5200  019F                     	;# 
  5201  019F                     	;# 
  5202  019F                     	;# 
  5203  020C                     	;# 
  5204  020D                     	;# 
  5205  020E                     	;# 
  5206  0211                     	;# 
  5207  0211                     	;# 
  5208  0212                     	;# 
  5209  0212                     	;# 
  5210  0213                     	;# 
  5211  0213                     	;# 
  5212  0214                     	;# 
  5213  0214                     	;# 
  5214  0215                     	;# 
  5215  0215                     	;# 
  5216  0215                     	;# 
  5217  0215                     	;# 
  5218  0216                     	;# 
  5219  0216                     	;# 
  5220  0217                     	;# 
  5221  0217                     	;# 
  5222  0219                     	;# 
  5223  021A                     	;# 
  5224  021B                     	;# 
  5225  021C                     	;# 
  5226  021D                     	;# 
  5227  021D                     	;# 
  5228  021E                     	;# 
  5229  021F                     	;# 
  5230  028C                     	;# 
  5231  028D                     	;# 
  5232  028E                     	;# 
  5233  0291                     	;# 
  5234  0291                     	;# 
  5235  0292                     	;# 
  5236  0293                     	;# 
  5237  0294                     	;# 
  5238  0295                     	;# 
  5239  0295                     	;# 
  5240  0296                     	;# 
  5241  0297                     	;# 
  5242  0298                     	;# 
  5243  029F                     	;# 
  5244  030C                     	;# 
  5245  030D                     	;# 
  5246  030E                     	;# 
  5247  0311                     	;# 
  5248  0311                     	;# 
  5249  0312                     	;# 
  5250  0313                     	;# 
  5251  0314                     	;# 
  5252  0315                     	;# 
  5253  0315                     	;# 
  5254  0316                     	;# 
  5255  0317                     	;# 
  5256  0318                     	;# 
  5257  038C                     	;# 
  5258  038D                     	;# 
  5259  038E                     	;# 
  5260  0391                     	;# 
  5261  0392                     	;# 
  5262  0393                     	;# 
  5263  0394                     	;# 
  5264  0395                     	;# 
  5265  0396                     	;# 
  5266  0397                     	;# 
  5267  0398                     	;# 
  5268  0399                     	;# 
  5269  039A                     	;# 
  5270  039C                     	;# 
  5271  039D                     	;# 
  5272  039E                     	;# 
  5273  039F                     	;# 
  5274  0411                     	;# 
  5275  0411                     	;# 
  5276  0412                     	;# 
  5277  0413                     	;# 
  5278  0414                     	;# 
  5279  0415                     	;# 
  5280  0416                     	;# 
  5281  0417                     	;# 
  5282  0418                     	;# 
  5283  0418                     	;# 
  5284  0419                     	;# 
  5285  041A                     	;# 
  5286  041B                     	;# 
  5287  041C                     	;# 
  5288  041D                     	;# 
  5289  041E                     	;# 
  5290  041F                     	;# 
  5291  0498                     	;# 
  5292  0498                     	;# 
  5293  0499                     	;# 
  5294  049A                     	;# 
  5295  049B                     	;# 
  5296  049B                     	;# 
  5297  049C                     	;# 
  5298  049D                     	;# 
  5299  049E                     	;# 
  5300  049F                     	;# 
  5301  0617                     	;# 
  5302  0618                     	;# 
  5303  0619                     	;# 
  5304  0619                     	;# 
  5305  061A                     	;# 
  5306  061B                     	;# 
  5307  061C                     	;# 
  5308  061C                     	;# 
  5309  061F                     	;# 
  5310  0691                     	;# 
  5311  0692                     	;# 
  5312  0693                     	;# 
  5313  0694                     	;# 
  5314  0695                     	;# 
  5315  0696                     	;# 
  5316  0697                     	;# 
  5317  0698                     	;# 
  5318  0699                     	;# 
  5319  0711                     	;# 
  5320  0712                     	;# 
  5321  0713                     	;# 
  5322  0714                     	;# 
  5323  0715                     	;# 
  5324  0716                     	;# 
  5325  0717                     	;# 
  5326  0718                     	;# 
  5327  0719                     	;# 
  5328  0891                     	;# 
  5329  0891                     	;# 
  5330  0891                     	;# 
  5331  0891                     	;# 
  5332  0891                     	;# 
  5333  0891                     	;# 
  5334  0892                     	;# 
  5335  0892                     	;# 
  5336  0892                     	;# 
  5337  0893                     	;# 
  5338  0893                     	;# 
  5339  0893                     	;# 
  5340  0893                     	;# 
  5341  0893                     	;# 
  5342  0893                     	;# 
  5343  0894                     	;# 
  5344  0894                     	;# 
  5345  0894                     	;# 
  5346  0895                     	;# 
  5347  0895                     	;# 
  5348  0895                     	;# 
  5349  0896                     	;# 
  5350  0896                     	;# 
  5351  0896                     	;# 
  5352  089B                     	;# 
  5353  0911                     	;# 
  5354  0912                     	;# 
  5355  0913                     	;# 
  5356  0914                     	;# 
  5357  0915                     	;# 
  5358  0916                     	;# 
  5359  0918                     	;# 
  5360  0919                     	;# 
  5361  091A                     	;# 
  5362  091B                     	;# 
  5363  091C                     	;# 
  5364  091D                     	;# 
  5365  091E                     	;# 
  5366  091F                     	;# 
  5367  0E0F                     	;# 
  5368  0E10                     	;# 
  5369  0E11                     	;# 
  5370  0E12                     	;# 
  5371  0E13                     	;# 
  5372  0E14                     	;# 
  5373  0E15                     	;# 
  5374  0E16                     	;# 
  5375  0E17                     	;# 
  5376  0E18                     	;# 
  5377  0E19                     	;# 
  5378  0E1A                     	;# 
  5379  0E1B                     	;# 
  5380  0E1C                     	;# 
  5381  0E1D                     	;# 
  5382  0E1E                     	;# 
  5383  0E1F                     	;# 
  5384  0E20                     	;# 
  5385  0E21                     	;# 
  5386  0E22                     	;# 
  5387  0E24                     	;# 
  5388  0E25                     	;# 
  5389  0E28                     	;# 
  5390  0E29                     	;# 
  5391  0E2A                     	;# 
  5392  0E2B                     	;# 
  5393  0E2C                     	;# 
  5394  0E2D                     	;# 
  5395  0E2E                     	;# 
  5396  0E2F                     	;# 
  5397  0E90                     	;# 
  5398  0E91                     	;# 
  5399  0E92                     	;# 
  5400  0E94                     	;# 
  5401  0E95                     	;# 
  5402  0E9C                     	;# 
  5403  0E9D                     	;# 
  5404  0E9E                     	;# 
  5405  0E9F                     	;# 
  5406  0EA0                     	;# 
  5407  0EA1                     	;# 
  5408  0EA2                     	;# 
  5409  0EA3                     	;# 
  5410  0EA4                     	;# 
  5411  0EA5                     	;# 
  5412  0EA6                     	;# 
  5413  0EA7                     	;# 
  5414  0F0F                     	;# 
  5415  0F10                     	;# 
  5416  0F11                     	;# 
  5417  0F12                     	;# 
  5418  0F13                     	;# 
  5419  0F14                     	;# 
  5420  0F15                     	;# 
  5421  0F16                     	;# 
  5422  0F17                     	;# 
  5423  0F18                     	;# 
  5424  0F19                     	;# 
  5425  0F1A                     	;# 
  5426  0F1B                     	;# 
  5427  0F1C                     	;# 
  5428  0F1D                     	;# 
  5429  0F1E                     	;# 
  5430  0F1F                     	;# 
  5431  0F20                     	;# 
  5432  0F21                     	;# 
  5433  0F22                     	;# 
  5434  0F23                     	;# 
  5435  0F24                     	;# 
  5436  0F25                     	;# 
  5437  0F26                     	;# 
  5438  0F27                     	;# 
  5439  0F28                     	;# 
  5440  0F29                     	;# 
  5441  0F2A                     	;# 
  5442  0F2B                     	;# 
  5443  0F2C                     	;# 
  5444  0F2D                     	;# 
  5445  0F2E                     	;# 
  5446  0F2F                     	;# 
  5447  0F30                     	;# 
  5448  0F31                     	;# 
  5449  0F32                     	;# 
  5450  0F33                     	;# 
  5451  0F34                     	;# 
  5452  0F35                     	;# 
  5453  0F36                     	;# 
  5454  0F37                     	;# 
  5455  0FE4                     	;# 
  5456  0FE5                     	;# 
  5457  0FE6                     	;# 
  5458  0FE7                     	;# 
  5459  0FE8                     	;# 
  5460  0FE9                     	;# 
  5461  0FEA                     	;# 
  5462  0FEB                     	;# 
  5463  0FED                     	;# 
  5464  0FEE                     	;# 
  5465  0FEF                     	;# 
  5466  0000                     	;# 
  5467  0001                     	;# 
  5468  0002                     	;# 
  5469  0003                     	;# 
  5470  0004                     	;# 
  5471  0005                     	;# 
  5472  0006                     	;# 
  5473  0007                     	;# 
  5474  0008                     	;# 
  5475  0009                     	;# 
  5476  000A                     	;# 
  5477  000B                     	;# 
  5478  000C                     	;# 
  5479  000D                     	;# 
  5480  000E                     	;# 
  5481  0010                     	;# 
  5482  0011                     	;# 
  5483  0012                     	;# 
  5484  0013                     	;# 
  5485  0014                     	;# 
  5486  0015                     	;# 
  5487  0015                     	;# 
  5488  0016                     	;# 
  5489  0016                     	;# 
  5490  0017                     	;# 
  5491  0018                     	;# 
  5492  0019                     	;# 
  5493  0019                     	;# 
  5494  001A                     	;# 
  5495  001B                     	;# 
  5496  001C                     	;# 
  5497  001D                     	;# 
  5498  001E                     	;# 
  5499  001F                     	;# 
  5500  008C                     	;# 
  5501  008D                     	;# 
  5502  008E                     	;# 
  5503  0090                     	;# 
  5504  0091                     	;# 
  5505  0092                     	;# 
  5506  0093                     	;# 
  5507  0094                     	;# 
  5508  0097                     	;# 
  5509  009B                     	;# 
  5510  009B                     	;# 
  5511  009C                     	;# 
  5512  009D                     	;# 
  5513  009E                     	;# 
  5514  009F                     	;# 
  5515  010C                     	;# 
  5516  010D                     	;# 
  5517  010E                     	;# 
  5518  0111                     	;# 
  5519  0112                     	;# 
  5520  0113                     	;# 
  5521  0114                     	;# 
  5522  0115                     	;# 
  5523  0116                     	;# 
  5524  0117                     	;# 
  5525  0118                     	;# 
  5526  0119                     	;# 
  5527  018C                     	;# 
  5528  018D                     	;# 
  5529  018E                     	;# 
  5530  0199                     	;# 
  5531  0199                     	;# 
  5532  0199                     	;# 
  5533  019A                     	;# 
  5534  019A                     	;# 
  5535  019A                     	;# 
  5536  019B                     	;# 
  5537  019B                     	;# 
  5538  019B                     	;# 
  5539  019B                     	;# 
  5540  019B                     	;# 
  5541  019C                     	;# 
  5542  019C                     	;# 
  5543  019C                     	;# 
  5544  019D                     	;# 
  5545  019D                     	;# 
  5546  019D                     	;# 
  5547  019E                     	;# 
  5548  019E                     	;# 
  5549  019E                     	;# 
  5550  019F                     	;# 
  5551  019F                     	;# 
  5552  019F                     	;# 
  5553  019F                     	;# 
  5554  019F                     	;# 
  5555  020C                     	;# 
  5556  020D                     	;# 
  5557  020E                     	;# 
  5558  0211                     	;# 
  5559  0211                     	;# 
  5560  0212                     	;# 
  5561  0212                     	;# 
  5562  0213                     	;# 
  5563  0213                     	;# 
  5564  0214                     	;# 
  5565  0214                     	;# 
  5566  0215                     	;# 
  5567  0215                     	;# 
  5568  0215                     	;# 
  5569  0215                     	;# 
  5570  0216                     	;# 
  5571  0216                     	;# 
  5572  0217                     	;# 
  5573  0217                     	;# 
  5574  0219                     	;# 
  5575  021A                     	;# 
  5576  021B                     	;# 
  5577  021C                     	;# 
  5578  021D                     	;# 
  5579  021D                     	;# 
  5580  021E                     	;# 
  5581  021F                     	;# 
  5582  028C                     	;# 
  5583  028D                     	;# 
  5584  028E                     	;# 
  5585  0291                     	;# 
  5586  0291                     	;# 
  5587  0292                     	;# 
  5588  0293                     	;# 
  5589  0294                     	;# 
  5590  0295                     	;# 
  5591  0295                     	;# 
  5592  0296                     	;# 
  5593  0297                     	;# 
  5594  0298                     	;# 
  5595  029F                     	;# 
  5596  030C                     	;# 
  5597  030D                     	;# 
  5598  030E                     	;# 
  5599  0311                     	;# 
  5600  0311                     	;# 
  5601  0312                     	;# 
  5602  0313                     	;# 
  5603  0314                     	;# 
  5604  0315                     	;# 
  5605  0315                     	;# 
  5606  0316                     	;# 
  5607  0317                     	;# 
  5608  0318                     	;# 
  5609  038C                     	;# 
  5610  038D                     	;# 
  5611  038E                     	;# 
  5612  0391                     	;# 
  5613  0392                     	;# 
  5614  0393                     	;# 
  5615  0394                     	;# 
  5616  0395                     	;# 
  5617  0396                     	;# 
  5618  0397                     	;# 
  5619  0398                     	;# 
  5620  0399                     	;# 
  5621  039A                     	;# 
  5622  039C                     	;# 
  5623  039D                     	;# 
  5624  039E                     	;# 
  5625  039F                     	;# 
  5626  0411                     	;# 
  5627  0411                     	;# 
  5628  0412                     	;# 
  5629  0413                     	;# 
  5630  0414                     	;# 
  5631  0415                     	;# 
  5632  0416                     	;# 
  5633  0417                     	;# 
  5634  0418                     	;# 
  5635  0418                     	;# 
  5636  0419                     	;# 
  5637  041A                     	;# 
  5638  041B                     	;# 
  5639  041C                     	;# 
  5640  041D                     	;# 
  5641  041E                     	;# 
  5642  041F                     	;# 
  5643  0498                     	;# 
  5644  0498                     	;# 
  5645  0499                     	;# 
  5646  049A                     	;# 
  5647  049B                     	;# 
  5648  049B                     	;# 
  5649  049C                     	;# 
  5650  049D                     	;# 
  5651  049E                     	;# 
  5652  049F                     	;# 
  5653  0617                     	;# 
  5654  0618                     	;# 
  5655  0619                     	;# 
  5656  0619                     	;# 
  5657  061A                     	;# 
  5658  061B                     	;# 
  5659  061C                     	;# 
  5660  061C                     	;# 
  5661  061F                     	;# 
  5662  0691                     	;# 
  5663  0692                     	;# 
  5664  0693                     	;# 
  5665  0694                     	;# 
  5666  0695                     	;# 
  5667  0696                     	;# 
  5668  0697                     	;# 
  5669  0698                     	;# 
  5670  0699                     	;# 
  5671  0711                     	;# 
  5672  0712                     	;# 
  5673  0713                     	;# 
  5674  0714                     	;# 
  5675  0715                     	;# 
  5676  0716                     	;# 
  5677  0717                     	;# 
  5678  0718                     	;# 
  5679  0719                     	;# 
  5680  0891                     	;# 
  5681  0891                     	;# 
  5682  0891                     	;# 
  5683  0891                     	;# 
  5684  0891                     	;# 
  5685  0891                     	;# 
  5686  0892                     	;# 
  5687  0892                     	;# 
  5688  0892                     	;# 
  5689  0893                     	;# 
  5690  0893                     	;# 
  5691  0893                     	;# 
  5692  0893                     	;# 
  5693  0893                     	;# 
  5694  0893                     	;# 
  5695  0894                     	;# 
  5696  0894                     	;# 
  5697  0894                     	;# 
  5698  0895                     	;# 
  5699  0895                     	;# 
  5700  0895                     	;# 
  5701  0896                     	;# 
  5702  0896                     	;# 
  5703  0896                     	;# 
  5704  089B                     	;# 
  5705  0911                     	;# 
  5706  0912                     	;# 
  5707  0913                     	;# 
  5708  0914                     	;# 
  5709  0915                     	;# 
  5710  0916                     	;# 
  5711  0918                     	;# 
  5712  0919                     	;# 
  5713  091A                     	;# 
  5714  091B                     	;# 
  5715  091C                     	;# 
  5716  091D                     	;# 
  5717  091E                     	;# 
  5718  091F                     	;# 
  5719  0E0F                     	;# 
  5720  0E10                     	;# 
  5721  0E11                     	;# 
  5722  0E12                     	;# 
  5723  0E13                     	;# 
  5724  0E14                     	;# 
  5725  0E15                     	;# 
  5726  0E16                     	;# 
  5727  0E17                     	;# 
  5728  0E18                     	;# 
  5729  0E19                     	;# 
  5730  0E1A                     	;# 
  5731  0E1B                     	;# 
  5732  0E1C                     	;# 
  5733  0E1D                     	;# 
  5734  0E1E                     	;# 
  5735  0E1F                     	;# 
  5736  0E20                     	;# 
  5737  0E21                     	;# 
  5738  0E22                     	;# 
  5739  0E24                     	;# 
  5740  0E25                     	;# 
  5741  0E28                     	;# 
  5742  0E29                     	;# 
  5743  0E2A                     	;# 
  5744  0E2B                     	;# 
  5745  0E2C                     	;# 
  5746  0E2D                     	;# 
  5747  0E2E                     	;# 
  5748  0E2F                     	;# 
  5749  0E90                     	;# 
  5750  0E91                     	;# 
  5751  0E92                     	;# 
  5752  0E94                     	;# 
  5753  0E95                     	;# 
  5754  0E9C                     	;# 
  5755  0E9D                     	;# 
  5756  0E9E                     	;# 
  5757  0E9F                     	;# 
  5758  0EA0                     	;# 
  5759  0EA1                     	;# 
  5760  0EA2                     	;# 
  5761  0EA3                     	;# 
  5762  0EA4                     	;# 
  5763  0EA5                     	;# 
  5764  0EA6                     	;# 
  5765  0EA7                     	;# 
  5766  0F0F                     	;# 
  5767  0F10                     	;# 
  5768  0F11                     	;# 
  5769  0F12                     	;# 
  5770  0F13                     	;# 
  5771  0F14                     	;# 
  5772  0F15                     	;# 
  5773  0F16                     	;# 
  5774  0F17                     	;# 
  5775  0F18                     	;# 
  5776  0F19                     	;# 
  5777  0F1A                     	;# 
  5778  0F1B                     	;# 
  5779  0F1C                     	;# 
  5780  0F1D                     	;# 
  5781  0F1E                     	;# 
  5782  0F1F                     	;# 
  5783  0F20                     	;# 
  5784  0F21                     	;# 
  5785  0F22                     	;# 
  5786  0F23                     	;# 
  5787  0F24                     	;# 
  5788  0F25                     	;# 
  5789  0F26                     	;# 
  5790  0F27                     	;# 
  5791  0F28                     	;# 
  5792  0F29                     	;# 
  5793  0F2A                     	;# 
  5794  0F2B                     	;# 
  5795  0F2C                     	;# 
  5796  0F2D                     	;# 
  5797  0F2E                     	;# 
  5798  0F2F                     	;# 
  5799  0F30                     	;# 
  5800  0F31                     	;# 
  5801  0F32                     	;# 
  5802  0F33                     	;# 
  5803  0F34                     	;# 
  5804  0F35                     	;# 
  5805  0F36                     	;# 
  5806  0F37                     	;# 
  5807  0FE4                     	;# 
  5808  0FE5                     	;# 
  5809  0FE6                     	;# 
  5810  0FE7                     	;# 
  5811  0FE8                     	;# 
  5812  0FE9                     	;# 
  5813  0FEA                     	;# 
  5814  0FEB                     	;# 
  5815  0FED                     	;# 
  5816  0FEE                     	;# 
  5817  0FEF                     	;# 
  5818  0000                     	;# 
  5819  0001                     	;# 
  5820  0002                     	;# 
  5821  0003                     	;# 
  5822  0004                     	;# 
  5823  0005                     	;# 
  5824  0006                     	;# 
  5825  0007                     	;# 
  5826  0008                     	;# 
  5827  0009                     	;# 
  5828  000A                     	;# 
  5829  000B                     	;# 
  5830  000C                     	;# 
  5831  000D                     	;# 
  5832  000E                     	;# 
  5833  0010                     	;# 
  5834  0011                     	;# 
  5835  0012                     	;# 
  5836  0013                     	;# 
  5837  0014                     	;# 
  5838  0015                     	;# 
  5839  0015                     	;# 
  5840  0016                     	;# 
  5841  0016                     	;# 
  5842  0017                     	;# 
  5843  0018                     	;# 
  5844  0019                     	;# 
  5845  0019                     	;# 
  5846  001A                     	;# 
  5847  001B                     	;# 
  5848  001C                     	;# 
  5849  001D                     	;# 
  5850  001E                     	;# 
  5851  001F                     	;# 
  5852  008C                     	;# 
  5853  008D                     	;# 
  5854  008E                     	;# 
  5855  0090                     	;# 
  5856  0091                     	;# 
  5857  0092                     	;# 
  5858  0093                     	;# 
  5859  0094                     	;# 
  5860  0097                     	;# 
  5861  009B                     	;# 
  5862  009B                     	;# 
  5863  009C                     	;# 
  5864  009D                     	;# 
  5865  009E                     	;# 
  5866  009F                     	;# 
  5867  010C                     	;# 
  5868  010D                     	;# 
  5869  010E                     	;# 
  5870  0111                     	;# 
  5871  0112                     	;# 
  5872  0113                     	;# 
  5873  0114                     	;# 
  5874  0115                     	;# 
  5875  0116                     	;# 
  5876  0117                     	;# 
  5877  0118                     	;# 
  5878  0119                     	;# 
  5879  018C                     	;# 
  5880  018D                     	;# 
  5881  018E                     	;# 
  5882  0199                     	;# 
  5883  0199                     	;# 
  5884  0199                     	;# 
  5885  019A                     	;# 
  5886  019A                     	;# 
  5887  019A                     	;# 
  5888  019B                     	;# 
  5889  019B                     	;# 
  5890  019B                     	;# 
  5891  019B                     	;# 
  5892  019B                     	;# 
  5893  019C                     	;# 
  5894  019C                     	;# 
  5895  019C                     	;# 
  5896  019D                     	;# 
  5897  019D                     	;# 
  5898  019D                     	;# 
  5899  019E                     	;# 
  5900  019E                     	;# 
  5901  019E                     	;# 
  5902  019F                     	;# 
  5903  019F                     	;# 
  5904  019F                     	;# 
  5905  019F                     	;# 
  5906  019F                     	;# 
  5907  020C                     	;# 
  5908  020D                     	;# 
  5909  020E                     	;# 
  5910  0211                     	;# 
  5911  0211                     	;# 
  5912  0212                     	;# 
  5913  0212                     	;# 
  5914  0213                     	;# 
  5915  0213                     	;# 
  5916  0214                     	;# 
  5917  0214                     	;# 
  5918  0215                     	;# 
  5919  0215                     	;# 
  5920  0215                     	;# 
  5921  0215                     	;# 
  5922  0216                     	;# 
  5923  0216                     	;# 
  5924  0217                     	;# 
  5925  0217                     	;# 
  5926  0219                     	;# 
  5927  021A                     	;# 
  5928  021B                     	;# 
  5929  021C                     	;# 
  5930  021D                     	;# 
  5931  021D                     	;# 
  5932  021E                     	;# 
  5933  021F                     	;# 
  5934  028C                     	;# 
  5935  028D                     	;# 
  5936  028E                     	;# 
  5937  0291                     	;# 
  5938  0291                     	;# 
  5939  0292                     	;# 
  5940  0293                     	;# 
  5941  0294                     	;# 
  5942  0295                     	;# 
  5943  0295                     	;# 
  5944  0296                     	;# 
  5945  0297                     	;# 
  5946  0298                     	;# 
  5947  029F                     	;# 
  5948  030C                     	;# 
  5949  030D                     	;# 
  5950  030E                     	;# 
  5951  0311                     	;# 
  5952  0311                     	;# 
  5953  0312                     	;# 
  5954  0313                     	;# 
  5955  0314                     	;# 
  5956  0315                     	;# 
  5957  0315                     	;# 
  5958  0316                     	;# 
  5959  0317                     	;# 
  5960  0318                     	;# 
  5961  038C                     	;# 
  5962  038D                     	;# 
  5963  038E                     	;# 
  5964  0391                     	;# 
  5965  0392                     	;# 
  5966  0393                     	;# 
  5967  0394                     	;# 
  5968  0395                     	;# 
  5969  0396                     	;# 
  5970  0397                     	;# 
  5971  0398                     	;# 
  5972  0399                     	;# 
  5973  039A                     	;# 
  5974  039C                     	;# 
  5975  039D                     	;# 
  5976  039E                     	;# 
  5977  039F                     	;# 
  5978  0411                     	;# 
  5979  0411                     	;# 
  5980  0412                     	;# 
  5981  0413                     	;# 
  5982  0414                     	;# 
  5983  0415                     	;# 
  5984  0416                     	;# 
  5985  0417                     	;# 
  5986  0418                     	;# 
  5987  0418                     	;# 
  5988  0419                     	;# 
  5989  041A                     	;# 
  5990  041B                     	;# 
  5991  041C                     	;# 
  5992  041D                     	;# 
  5993  041E                     	;# 
  5994  041F                     	;# 
  5995  0498                     	;# 
  5996  0498                     	;# 
  5997  0499                     	;# 
  5998  049A                     	;# 
  5999  049B                     	;# 
  6000  049B                     	;# 
  6001  049C                     	;# 
  6002  049D                     	;# 
  6003  049E                     	;# 
  6004  049F                     	;# 
  6005  0617                     	;# 
  6006  0618                     	;# 
  6007  0619                     	;# 
  6008  0619                     	;# 
  6009  061A                     	;# 
  6010  061B                     	;# 
  6011  061C                     	;# 
  6012  061C                     	;# 
  6013  061F                     	;# 
  6014  0691                     	;# 
  6015  0692                     	;# 
  6016  0693                     	;# 
  6017  0694                     	;# 
  6018  0695                     	;# 
  6019  0696                     	;# 
  6020  0697                     	;# 
  6021  0698                     	;# 
  6022  0699                     	;# 
  6023  0711                     	;# 
  6024  0712                     	;# 
  6025  0713                     	;# 
  6026  0714                     	;# 
  6027  0715                     	;# 
  6028  0716                     	;# 
  6029  0717                     	;# 
  6030  0718                     	;# 
  6031  0719                     	;# 
  6032  0891                     	;# 
  6033  0891                     	;# 
  6034  0891                     	;# 
  6035  0891                     	;# 
  6036  0891                     	;# 
  6037  0891                     	;# 
  6038  0892                     	;# 
  6039  0892                     	;# 
  6040  0892                     	;# 
  6041  0893                     	;# 
  6042  0893                     	;# 
  6043  0893                     	;# 
  6044  0893                     	;# 
  6045  0893                     	;# 
  6046  0893                     	;# 
  6047  0894                     	;# 
  6048  0894                     	;# 
  6049  0894                     	;# 
  6050  0895                     	;# 
  6051  0895                     	;# 
  6052  0895                     	;# 
  6053  0896                     	;# 
  6054  0896                     	;# 
  6055  0896                     	;# 
  6056  089B                     	;# 
  6057  0911                     	;# 
  6058  0912                     	;# 
  6059  0913                     	;# 
  6060  0914                     	;# 
  6061  0915                     	;# 
  6062  0916                     	;# 
  6063  0918                     	;# 
  6064  0919                     	;# 
  6065  091A                     	;# 
  6066  091B                     	;# 
  6067  091C                     	;# 
  6068  091D                     	;# 
  6069  091E                     	;# 
  6070  091F                     	;# 
  6071  0E0F                     	;# 
  6072  0E10                     	;# 
  6073  0E11                     	;# 
  6074  0E12                     	;# 
  6075  0E13                     	;# 
  6076  0E14                     	;# 
  6077  0E15                     	;# 
  6078  0E16                     	;# 
  6079  0E17                     	;# 
  6080  0E18                     	;# 
  6081  0E19                     	;# 
  6082  0E1A                     	;# 
  6083  0E1B                     	;# 
  6084  0E1C                     	;# 
  6085  0E1D                     	;# 
  6086  0E1E                     	;# 
  6087  0E1F                     	;# 
  6088  0E20                     	;# 
  6089  0E21                     	;# 
  6090  0E22                     	;# 
  6091  0E24                     	;# 
  6092  0E25                     	;# 
  6093  0E28                     	;# 
  6094  0E29                     	;# 
  6095  0E2A                     	;# 
  6096  0E2B                     	;# 
  6097  0E2C                     	;# 
  6098  0E2D                     	;# 
  6099  0E2E                     	;# 
  6100  0E2F                     	;# 
  6101  0E90                     	;# 
  6102  0E91                     	;# 
  6103  0E92                     	;# 
  6104  0E94                     	;# 
  6105  0E95                     	;# 
  6106  0E9C                     	;# 
  6107  0E9D                     	;# 
  6108  0E9E                     	;# 
  6109  0E9F                     	;# 
  6110  0EA0                     	;# 
  6111  0EA1                     	;# 
  6112  0EA2                     	;# 
  6113  0EA3                     	;# 
  6114  0EA4                     	;# 
  6115  0EA5                     	;# 
  6116  0EA6                     	;# 
  6117  0EA7                     	;# 
  6118  0F0F                     	;# 
  6119  0F10                     	;# 
  6120  0F11                     	;# 
  6121  0F12                     	;# 
  6122  0F13                     	;# 
  6123  0F14                     	;# 
  6124  0F15                     	;# 
  6125  0F16                     	;# 
  6126  0F17                     	;# 
  6127  0F18                     	;# 
  6128  0F19                     	;# 
  6129  0F1A                     	;# 
  6130  0F1B                     	;# 
  6131  0F1C                     	;# 
  6132  0F1D                     	;# 
  6133  0F1E                     	;# 
  6134  0F1F                     	;# 
  6135  0F20                     	;# 
  6136  0F21                     	;# 
  6137  0F22                     	;# 
  6138  0F23                     	;# 
  6139  0F24                     	;# 
  6140  0F25                     	;# 
  6141  0F26                     	;# 
  6142  0F27                     	;# 
  6143  0F28                     	;# 
  6144  0F29                     	;# 
  6145  0F2A                     	;# 
  6146  0F2B                     	;# 
  6147  0F2C                     	;# 
  6148  0F2D                     	;# 
  6149  0F2E                     	;# 
  6150  0F2F                     	;# 
  6151  0F30                     	;# 
  6152  0F31                     	;# 
  6153  0F32                     	;# 
  6154  0F33                     	;# 
  6155  0F34                     	;# 
  6156  0F35                     	;# 
  6157  0F36                     	;# 
  6158  0F37                     	;# 
  6159  0FE4                     	;# 
  6160  0FE5                     	;# 
  6161  0FE6                     	;# 
  6162  0FE7                     	;# 
  6163  0FE8                     	;# 
  6164  0FE9                     	;# 
  6165  0FEA                     	;# 
  6166  0FEB                     	;# 
  6167  0FED                     	;# 
  6168  0FEE                     	;# 
  6169  0FEF                     	;# 
  6170  0000                     	;# 
  6171  0001                     	;# 
  6172  0002                     	;# 
  6173  0003                     	;# 
  6174  0004                     	;# 
  6175  0005                     	;# 
  6176  0006                     	;# 
  6177  0007                     	;# 
  6178  0008                     	;# 
  6179  0009                     	;# 
  6180  000A                     	;# 
  6181  000B                     	;# 
  6182  000C                     	;# 
  6183  000D                     	;# 
  6184  000E                     	;# 
  6185  0010                     	;# 
  6186  0011                     	;# 
  6187  0012                     	;# 
  6188  0013                     	;# 
  6189  0014                     	;# 
  6190  0015                     	;# 
  6191  0015                     	;# 
  6192  0016                     	;# 
  6193  0016                     	;# 
  6194  0017                     	;# 
  6195  0018                     	;# 
  6196  0019                     	;# 
  6197  0019                     	;# 
  6198  001A                     	;# 
  6199  001B                     	;# 
  6200  001C                     	;# 
  6201  001D                     	;# 
  6202  001E                     	;# 
  6203  001F                     	;# 
  6204  008C                     	;# 
  6205  008D                     	;# 
  6206  008E                     	;# 
  6207  0090                     	;# 
  6208  0091                     	;# 
  6209  0092                     	;# 
  6210  0093                     	;# 
  6211  0094                     	;# 
  6212  0097                     	;# 
  6213  009B                     	;# 
  6214  009B                     	;# 
  6215  009C                     	;# 
  6216  009D                     	;# 
  6217  009E                     	;# 
  6218  009F                     	;# 
  6219  010C                     	;# 
  6220  010D                     	;# 
  6221  010E                     	;# 
  6222  0111                     	;# 
  6223  0112                     	;# 
  6224  0113                     	;# 
  6225  0114                     	;# 
  6226  0115                     	;# 
  6227  0116                     	;# 
  6228  0117                     	;# 
  6229  0118                     	;# 
  6230  0119                     	;# 
  6231  018C                     	;# 
  6232  018D                     	;# 
  6233  018E                     	;# 
  6234  0199                     	;# 
  6235  0199                     	;# 
  6236  0199                     	;# 
  6237  019A                     	;# 
  6238  019A                     	;# 
  6239  019A                     	;# 
  6240  019B                     	;# 
  6241  019B                     	;# 
  6242  019B                     	;# 
  6243  019B                     	;# 
  6244  019B                     	;# 
  6245  019C                     	;# 
  6246  019C                     	;# 
  6247  019C                     	;# 
  6248  019D                     	;# 
  6249  019D                     	;# 
  6250  019D                     	;# 
  6251  019E                     	;# 
  6252  019E                     	;# 
  6253  019E                     	;# 
  6254  019F                     	;# 
  6255  019F                     	;# 
  6256  019F                     	;# 
  6257  019F                     	;# 
  6258  019F                     	;# 
  6259  020C                     	;# 
  6260  020D                     	;# 
  6261  020E                     	;# 
  6262  0211                     	;# 
  6263  0211                     	;# 
  6264  0212                     	;# 
  6265  0212                     	;# 
  6266  0213                     	;# 
  6267  0213                     	;# 
  6268  0214                     	;# 
  6269  0214                     	;# 
  6270  0215                     	;# 
  6271  0215                     	;# 
  6272  0215                     	;# 
  6273  0215                     	;# 
  6274  0216                     	;# 
  6275  0216                     	;# 
  6276  0217                     	;# 
  6277  0217                     	;# 
  6278  0219                     	;# 
  6279  021A                     	;# 
  6280  021B                     	;# 
  6281  021C                     	;# 
  6282  021D                     	;# 
  6283  021D                     	;# 
  6284  021E                     	;# 
  6285  021F                     	;# 
  6286  028C                     	;# 
  6287  028D                     	;# 
  6288  028E                     	;# 
  6289  0291                     	;# 
  6290  0291                     	;# 
  6291  0292                     	;# 
  6292  0293                     	;# 
  6293  0294                     	;# 
  6294  0295                     	;# 
  6295  0295                     	;# 
  6296  0296                     	;# 
  6297  0297                     	;# 
  6298  0298                     	;# 
  6299  029F                     	;# 
  6300  030C                     	;# 
  6301  030D                     	;# 
  6302  030E                     	;# 
  6303  0311                     	;# 
  6304  0311                     	;# 
  6305  0312                     	;# 
  6306  0313                     	;# 
  6307  0314                     	;# 
  6308  0315                     	;# 
  6309  0315                     	;# 
  6310  0316                     	;# 
  6311  0317                     	;# 
  6312  0318                     	;# 
  6313  038C                     	;# 
  6314  038D                     	;# 
  6315  038E                     	;# 
  6316  0391                     	;# 
  6317  0392                     	;# 
  6318  0393                     	;# 
  6319  0394                     	;# 
  6320  0395                     	;# 
  6321  0396                     	;# 
  6322  0397                     	;# 
  6323  0398                     	;# 
  6324  0399                     	;# 
  6325  039A                     	;# 
  6326  039C                     	;# 
  6327  039D                     	;# 
  6328  039E                     	;# 
  6329  039F                     	;# 
  6330  0411                     	;# 
  6331  0411                     	;# 
  6332  0412                     	;# 
  6333  0413                     	;# 
  6334  0414                     	;# 
  6335  0415                     	;# 
  6336  0416                     	;# 
  6337  0417                     	;# 
  6338  0418                     	;# 
  6339  0418                     	;# 
  6340  0419                     	;# 
  6341  041A                     	;# 
  6342  041B                     	;# 
  6343  041C                     	;# 
  6344  041D                     	;# 
  6345  041E                     	;# 
  6346  041F                     	;# 
  6347  0498                     	;# 
  6348  0498                     	;# 
  6349  0499                     	;# 
  6350  049A                     	;# 
  6351  049B                     	;# 
  6352  049B                     	;# 
  6353  049C                     	;# 
  6354  049D                     	;# 
  6355  049E                     	;# 
  6356  049F                     	;# 
  6357  0617                     	;# 
  6358  0618                     	;# 
  6359  0619                     	;# 
  6360  0619                     	;# 
  6361  061A                     	;# 
  6362  061B                     	;# 
  6363  061C                     	;# 
  6364  061C                     	;# 
  6365  061F                     	;# 
  6366  0691                     	;# 
  6367  0692                     	;# 
  6368  0693                     	;# 
  6369  0694                     	;# 
  6370  0695                     	;# 
  6371  0696                     	;# 
  6372  0697                     	;# 
  6373  0698                     	;# 
  6374  0699                     	;# 
  6375  0711                     	;# 
  6376  0712                     	;# 
  6377  0713                     	;# 
  6378  0714                     	;# 
  6379  0715                     	;# 
  6380  0716                     	;# 
  6381  0717                     	;# 
  6382  0718                     	;# 
  6383  0719                     	;# 
  6384  0891                     	;# 
  6385  0891                     	;# 
  6386  0891                     	;# 
  6387  0891                     	;# 
  6388  0891                     	;# 
  6389  0891                     	;# 
  6390  0892                     	;# 
  6391  0892                     	;# 
  6392  0892                     	;# 
  6393  0893                     	;# 
  6394  0893                     	;# 
  6395  0893                     	;# 
  6396  0893                     	;# 
  6397  0893                     	;# 
  6398  0893                     	;# 
  6399  0894                     	;# 
  6400  0894                     	;# 
  6401  0894                     	;# 
  6402  0895                     	;# 
  6403  0895                     	;# 
  6404  0895                     	;# 
  6405  0896                     	;# 
  6406  0896                     	;# 
  6407  0896                     	;# 
  6408  089B                     	;# 
  6409  0911                     	;# 
  6410  0912                     	;# 
  6411  0913                     	;# 
  6412  0914                     	;# 
  6413  0915                     	;# 
  6414  0916                     	;# 
  6415  0918                     	;# 
  6416  0919                     	;# 
  6417  091A                     	;# 
  6418  091B                     	;# 
  6419  091C                     	;# 
  6420  091D                     	;# 
  6421  091E                     	;# 
  6422  091F                     	;# 
  6423  0E0F                     	;# 
  6424  0E10                     	;# 
  6425  0E11                     	;# 
  6426  0E12                     	;# 
  6427  0E13                     	;# 
  6428  0E14                     	;# 
  6429  0E15                     	;# 
  6430  0E16                     	;# 
  6431  0E17                     	;# 
  6432  0E18                     	;# 
  6433  0E19                     	;# 
  6434  0E1A                     	;# 
  6435  0E1B                     	;# 
  6436  0E1C                     	;# 
  6437  0E1D                     	;# 
  6438  0E1E                     	;# 
  6439  0E1F                     	;# 
  6440  0E20                     	;# 
  6441  0E21                     	;# 
  6442  0E22                     	;# 
  6443  0E24                     	;# 
  6444  0E25                     	;# 
  6445  0E28                     	;# 
  6446  0E29                     	;# 
  6447  0E2A                     	;# 
  6448  0E2B                     	;# 
  6449  0E2C                     	;# 
  6450  0E2D                     	;# 
  6451  0E2E                     	;# 
  6452  0E2F                     	;# 
  6453  0E90                     	;# 
  6454  0E91                     	;# 
  6455  0E92                     	;# 
  6456  0E94                     	;# 
  6457  0E95                     	;# 
  6458  0E9C                     	;# 
  6459  0E9D                     	;# 
  6460  0E9E                     	;# 
  6461  0E9F                     	;# 
  6462  0EA0                     	;# 
  6463  0EA1                     	;# 
  6464  0EA2                     	;# 
  6465  0EA3                     	;# 
  6466  0EA4                     	;# 
  6467  0EA5                     	;# 
  6468  0EA6                     	;# 
  6469  0EA7                     	;# 
  6470  0F0F                     	;# 
  6471  0F10                     	;# 
  6472  0F11                     	;# 
  6473  0F12                     	;# 
  6474  0F13                     	;# 
  6475  0F14                     	;# 
  6476  0F15                     	;# 
  6477  0F16                     	;# 
  6478  0F17                     	;# 
  6479  0F18                     	;# 
  6480  0F19                     	;# 
  6481  0F1A                     	;# 
  6482  0F1B                     	;# 
  6483  0F1C                     	;# 
  6484  0F1D                     	;# 
  6485  0F1E                     	;# 
  6486  0F1F                     	;# 
  6487  0F20                     	;# 
  6488  0F21                     	;# 
  6489  0F22                     	;# 
  6490  0F23                     	;# 
  6491  0F24                     	;# 
  6492  0F25                     	;# 
  6493  0F26                     	;# 
  6494  0F27                     	;# 
  6495  0F28                     	;# 
  6496  0F29                     	;# 
  6497  0F2A                     	;# 
  6498  0F2B                     	;# 
  6499  0F2C                     	;# 
  6500  0F2D                     	;# 
  6501  0F2E                     	;# 
  6502  0F2F                     	;# 
  6503  0F30                     	;# 
  6504  0F31                     	;# 
  6505  0F32                     	;# 
  6506  0F33                     	;# 
  6507  0F34                     	;# 
  6508  0F35                     	;# 
  6509  0F36                     	;# 
  6510  0F37                     	;# 
  6511  0FE4                     	;# 
  6512  0FE5                     	;# 
  6513  0FE6                     	;# 
  6514  0FE7                     	;# 
  6515  0FE8                     	;# 
  6516  0FE9                     	;# 
  6517  0FEA                     	;# 
  6518  0FEB                     	;# 
  6519  0FED                     	;# 
  6520  0FEE                     	;# 
  6521  0FEF                     	;# 
  6522  0000                     	;# 
  6523  0001                     	;# 
  6524  0002                     	;# 
  6525  0003                     	;# 
  6526  0004                     	;# 
  6527  0005                     	;# 
  6528  0006                     	;# 
  6529  0007                     	;# 
  6530  0008                     	;# 
  6531  0009                     	;# 
  6532  000A                     	;# 
  6533  000B                     	;# 
  6534  000C                     	;# 
  6535  000D                     	;# 
  6536  000E                     	;# 
  6537  0010                     	;# 
  6538  0011                     	;# 
  6539  0012                     	;# 
  6540  0013                     	;# 
  6541  0014                     	;# 
  6542  0015                     	;# 
  6543  0015                     	;# 
  6544  0016                     	;# 
  6545  0016                     	;# 
  6546  0017                     	;# 
  6547  0018                     	;# 
  6548  0019                     	;# 
  6549  0019                     	;# 
  6550  001A                     	;# 
  6551  001B                     	;# 
  6552  001C                     	;# 
  6553  001D                     	;# 
  6554  001E                     	;# 
  6555  001F                     	;# 
  6556  008C                     	;# 
  6557  008D                     	;# 
  6558  008E                     	;# 
  6559  0090                     	;# 
  6560  0091                     	;# 
  6561  0092                     	;# 
  6562  0093                     	;# 
  6563  0094                     	;# 
  6564  0097                     	;# 
  6565  009B                     	;# 
  6566  009B                     	;# 
  6567  009C                     	;# 
  6568  009D                     	;# 
  6569  009E                     	;# 
  6570  009F                     	;# 
  6571  010C                     	;# 
  6572  010D                     	;# 
  6573  010E                     	;# 
  6574  0111                     	;# 
  6575  0112                     	;# 
  6576  0113                     	;# 
  6577  0114                     	;# 
  6578  0115                     	;# 
  6579  0116                     	;# 
  6580  0117                     	;# 
  6581  0118                     	;# 
  6582  0119                     	;# 
  6583  018C                     	;# 
  6584  018D                     	;# 
  6585  018E                     	;# 
  6586  0199                     	;# 
  6587  0199                     	;# 
  6588  0199                     	;# 
  6589  019A                     	;# 
  6590  019A                     	;# 
  6591  019A                     	;# 
  6592  019B                     	;# 
  6593  019B                     	;# 
  6594  019B                     	;# 
  6595  019B                     	;# 
  6596  019B                     	;# 
  6597  019C                     	;# 
  6598  019C                     	;# 
  6599  019C                     	;# 
  6600  019D                     	;# 
  6601  019D                     	;# 
  6602  019D                     	;# 
  6603  019E                     	;# 
  6604  019E                     	;# 
  6605  019E                     	;# 
  6606  019F                     	;# 
  6607  019F                     	;# 
  6608  019F                     	;# 
  6609  019F                     	;# 
  6610  019F                     	;# 
  6611  020C                     	;# 
  6612  020D                     	;# 
  6613  020E                     	;# 
  6614  0211                     	;# 
  6615  0211                     	;# 
  6616  0212                     	;# 
  6617  0212                     	;# 
  6618  0213                     	;# 
  6619  0213                     	;# 
  6620  0214                     	;# 
  6621  0214                     	;# 
  6622  0215                     	;# 
  6623  0215                     	;# 
  6624  0215                     	;# 
  6625  0215                     	;# 
  6626  0216                     	;# 
  6627  0216                     	;# 
  6628  0217                     	;# 
  6629  0217                     	;# 
  6630  0219                     	;# 
  6631  021A                     	;# 
  6632  021B                     	;# 
  6633  021C                     	;# 
  6634  021D                     	;# 
  6635  021D                     	;# 
  6636  021E                     	;# 
  6637  021F                     	;# 
  6638  028C                     	;# 
  6639  028D                     	;# 
  6640  028E                     	;# 
  6641  0291                     	;# 
  6642  0291                     	;# 
  6643  0292                     	;# 
  6644  0293                     	;# 
  6645  0294                     	;# 
  6646  0295                     	;# 
  6647  0295                     	;# 
  6648  0296                     	;# 
  6649  0297                     	;# 
  6650  0298                     	;# 
  6651  029F                     	;# 
  6652  030C                     	;# 
  6653  030D                     	;# 
  6654  030E                     	;# 
  6655  0311                     	;# 
  6656  0311                     	;# 
  6657  0312                     	;# 
  6658  0313                     	;# 
  6659  0314                     	;# 
  6660  0315                     	;# 
  6661  0315                     	;# 
  6662  0316                     	;# 
  6663  0317                     	;# 
  6664  0318                     	;# 
  6665  038C                     	;# 
  6666  038D                     	;# 
  6667  038E                     	;# 
  6668  0391                     	;# 
  6669  0392                     	;# 
  6670  0393                     	;# 
  6671  0394                     	;# 
  6672  0395                     	;# 
  6673  0396                     	;# 
  6674  0397                     	;# 
  6675  0398                     	;# 
  6676  0399                     	;# 
  6677  039A                     	;# 
  6678  039C                     	;# 
  6679  039D                     	;# 
  6680  039E                     	;# 
  6681  039F                     	;# 
  6682  0411                     	;# 
  6683  0411                     	;# 
  6684  0412                     	;# 
  6685  0413                     	;# 
  6686  0414                     	;# 
  6687  0415                     	;# 
  6688  0416                     	;# 
  6689  0417                     	;# 
  6690  0418                     	;# 
  6691  0418                     	;# 
  6692  0419                     	;# 
  6693  041A                     	;# 
  6694  041B                     	;# 
  6695  041C                     	;# 
  6696  041D                     	;# 
  6697  041E                     	;# 
  6698  041F                     	;# 
  6699  0498                     	;# 
  6700  0498                     	;# 
  6701  0499                     	;# 
  6702  049A                     	;# 
  6703  049B                     	;# 
  6704  049B                     	;# 
  6705  049C                     	;# 
  6706  049D                     	;# 
  6707  049E                     	;# 
  6708  049F                     	;# 
  6709  0617                     	;# 
  6710  0618                     	;# 
  6711  0619                     	;# 
  6712  0619                     	;# 
  6713  061A                     	;# 
  6714  061B                     	;# 
  6715  061C                     	;# 
  6716  061C                     	;# 
  6717  061F                     	;# 
  6718  0691                     	;# 
  6719  0692                     	;# 
  6720  0693                     	;# 
  6721  0694                     	;# 
  6722  0695                     	;# 
  6723  0696                     	;# 
  6724  0697                     	;# 
  6725  0698                     	;# 
  6726  0699                     	;# 
  6727  0711                     	;# 
  6728  0712                     	;# 
  6729  0713                     	;# 
  6730  0714                     	;# 
  6731  0715                     	;# 
  6732  0716                     	;# 
  6733  0717                     	;# 
  6734  0718                     	;# 
  6735  0719                     	;# 
  6736  0891                     	;# 
  6737  0891                     	;# 
  6738  0891                     	;# 
  6739  0891                     	;# 
  6740  0891                     	;# 
  6741  0891                     	;# 
  6742  0892                     	;# 
  6743  0892                     	;# 
  6744  0892                     	;# 
  6745  0893                     	;# 
  6746  0893                     	;# 
  6747  0893                     	;# 
  6748  0893                     	;# 
  6749  0893                     	;# 
  6750  0893                     	;# 
  6751  0894                     	;# 
  6752  0894                     	;# 
  6753  0894                     	;# 
  6754  0895                     	;# 
  6755  0895                     	;# 
  6756  0895                     	;# 
  6757  0896                     	;# 
  6758  0896                     	;# 
  6759  0896                     	;# 
  6760  089B                     	;# 
  6761  0911                     	;# 
  6762  0912                     	;# 
  6763  0913                     	;# 
  6764  0914                     	;# 
  6765  0915                     	;# 
  6766  0916                     	;# 
  6767  0918                     	;# 
  6768  0919                     	;# 
  6769  091A                     	;# 
  6770  091B                     	;# 
  6771  091C                     	;# 
  6772  091D                     	;# 
  6773  091E                     	;# 
  6774  091F                     	;# 
  6775  0E0F                     	;# 
  6776  0E10                     	;# 
  6777  0E11                     	;# 
  6778  0E12                     	;# 
  6779  0E13                     	;# 
  6780  0E14                     	;# 
  6781  0E15                     	;# 
  6782  0E16                     	;# 
  6783  0E17                     	;# 
  6784  0E18                     	;# 
  6785  0E19                     	;# 
  6786  0E1A                     	;# 
  6787  0E1B                     	;# 
  6788  0E1C                     	;# 
  6789  0E1D                     	;# 
  6790  0E1E                     	;# 
  6791  0E1F                     	;# 
  6792  0E20                     	;# 
  6793  0E21                     	;# 
  6794  0E22                     	;# 
  6795  0E24                     	;# 
  6796  0E25                     	;# 
  6797  0E28                     	;# 
  6798  0E29                     	;# 
  6799  0E2A                     	;# 
  6800  0E2B                     	;# 
  6801  0E2C                     	;# 
  6802  0E2D                     	;# 
  6803  0E2E                     	;# 
  6804  0E2F                     	;# 
  6805  0E90                     	;# 
  6806  0E91                     	;# 
  6807  0E92                     	;# 
  6808  0E94                     	;# 
  6809  0E95                     	;# 
  6810  0E9C                     	;# 
  6811  0E9D                     	;# 
  6812  0E9E                     	;# 
  6813  0E9F                     	;# 
  6814  0EA0                     	;# 
  6815  0EA1                     	;# 
  6816  0EA2                     	;# 
  6817  0EA3                     	;# 
  6818  0EA4                     	;# 
  6819  0EA5                     	;# 
  6820  0EA6                     	;# 
  6821  0EA7                     	;# 
  6822  0F0F                     	;# 
  6823  0F10                     	;# 
  6824  0F11                     	;# 
  6825  0F12                     	;# 
  6826  0F13                     	;# 
  6827  0F14                     	;# 
  6828  0F15                     	;# 
  6829  0F16                     	;# 
  6830  0F17                     	;# 
  6831  0F18                     	;# 
  6832  0F19                     	;# 
  6833  0F1A                     	;# 
  6834  0F1B                     	;# 
  6835  0F1C                     	;# 
  6836  0F1D                     	;# 
  6837  0F1E                     	;# 
  6838  0F1F                     	;# 
  6839  0F20                     	;# 
  6840  0F21                     	;# 
  6841  0F22                     	;# 
  6842  0F23                     	;# 
  6843  0F24                     	;# 
  6844  0F25                     	;# 
  6845  0F26                     	;# 
  6846  0F27                     	;# 
  6847  0F28                     	;# 
  6848  0F29                     	;# 
  6849  0F2A                     	;# 
  6850  0F2B                     	;# 
  6851  0F2C                     	;# 
  6852  0F2D                     	;# 
  6853  0F2E                     	;# 
  6854  0F2F                     	;# 
  6855  0F30                     	;# 
  6856  0F31                     	;# 
  6857  0F32                     	;# 
  6858  0F33                     	;# 
  6859  0F34                     	;# 
  6860  0F35                     	;# 
  6861  0F36                     	;# 
  6862  0F37                     	;# 
  6863  0FE4                     	;# 
  6864  0FE5                     	;# 
  6865  0FE6                     	;# 
  6866  0FE7                     	;# 
  6867  0FE8                     	;# 
  6868  0FE9                     	;# 
  6869  0FEA                     	;# 
  6870  0FEB                     	;# 
  6871  0FED                     	;# 
  6872  0FEE                     	;# 
  6873  0FEF                     	;# 
  6874  0000                     	;# 
  6875  0001                     	;# 
  6876  0002                     	;# 
  6877  0003                     	;# 
  6878  0004                     	;# 
  6879  0005                     	;# 
  6880  0006                     	;# 
  6881  0007                     	;# 
  6882  0008                     	;# 
  6883  0009                     	;# 
  6884  000A                     	;# 
  6885  000B                     	;# 
  6886  000C                     	;# 
  6887  000D                     	;# 
  6888  000E                     	;# 
  6889  0010                     	;# 
  6890  0011                     	;# 
  6891  0012                     	;# 
  6892  0013                     	;# 
  6893  0014                     	;# 
  6894  0015                     	;# 
  6895  0015                     	;# 
  6896  0016                     	;# 
  6897  0016                     	;# 
  6898  0017                     	;# 
  6899  0018                     	;# 
  6900  0019                     	;# 
  6901  0019                     	;# 
  6902  001A                     	;# 
  6903  001B                     	;# 
  6904  001C                     	;# 
  6905  001D                     	;# 
  6906  001E                     	;# 
  6907  001F                     	;# 
  6908  008C                     	;# 
  6909  008D                     	;# 
  6910  008E                     	;# 
  6911  0090                     	;# 
  6912  0091                     	;# 
  6913  0092                     	;# 
  6914  0093                     	;# 
  6915  0094                     	;# 
  6916  0097                     	;# 
  6917  009B                     	;# 
  6918  009B                     	;# 
  6919  009C                     	;# 
  6920  009D                     	;# 
  6921  009E                     	;# 
  6922  009F                     	;# 
  6923  010C                     	;# 
  6924  010D                     	;# 
  6925  010E                     	;# 
  6926  0111                     	;# 
  6927  0112                     	;# 
  6928  0113                     	;# 
  6929  0114                     	;# 
  6930  0115                     	;# 
  6931  0116                     	;# 
  6932  0117                     	;# 
  6933  0118                     	;# 
  6934  0119                     	;# 
  6935  018C                     	;# 
  6936  018D                     	;# 
  6937  018E                     	;# 
  6938  0199                     	;# 
  6939  0199                     	;# 
  6940  0199                     	;# 
  6941  019A                     	;# 
  6942  019A                     	;# 
  6943  019A                     	;# 
  6944  019B                     	;# 
  6945  019B                     	;# 
  6946  019B                     	;# 
  6947  019B                     	;# 
  6948  019B                     	;# 
  6949  019C                     	;# 
  6950  019C                     	;# 
  6951  019C                     	;# 
  6952  019D                     	;# 
  6953  019D                     	;# 
  6954  019D                     	;# 
  6955  019E                     	;# 
  6956  019E                     	;# 
  6957  019E                     	;# 
  6958  019F                     	;# 
  6959  019F                     	;# 
  6960  019F                     	;# 
  6961  019F                     	;# 
  6962  019F                     	;# 
  6963  020C                     	;# 
  6964  020D                     	;# 
  6965  020E                     	;# 
  6966  0211                     	;# 
  6967  0211                     	;# 
  6968  0212                     	;# 
  6969  0212                     	;# 
  6970  0213                     	;# 
  6971  0213                     	;# 
  6972  0214                     	;# 
  6973  0214                     	;# 
  6974  0215                     	;# 
  6975  0215                     	;# 
  6976  0215                     	;# 
  6977  0215                     	;# 
  6978  0216                     	;# 
  6979  0216                     	;# 
  6980  0217                     	;# 
  6981  0217                     	;# 
  6982  0219                     	;# 
  6983  021A                     	;# 
  6984  021B                     	;# 
  6985  021C                     	;# 
  6986  021D                     	;# 
  6987  021D                     	;# 
  6988  021E                     	;# 
  6989  021F                     	;# 
  6990  028C                     	;# 
  6991  028D                     	;# 
  6992  028E                     	;# 
  6993  0291                     	;# 
  6994  0291                     	;# 
  6995  0292                     	;# 
  6996  0293                     	;# 
  6997  0294                     	;# 
  6998  0295                     	;# 
  6999  0295                     	;# 
  7000  0296                     	;# 
  7001  0297                     	;# 
  7002  0298                     	;# 
  7003  029F                     	;# 
  7004  030C                     	;# 
  7005  030D                     	;# 
  7006  030E                     	;# 
  7007  0311                     	;# 
  7008  0311                     	;# 
  7009  0312                     	;# 
  7010  0313                     	;# 
  7011  0314                     	;# 
  7012  0315                     	;# 
  7013  0315                     	;# 
  7014  0316                     	;# 
  7015  0317                     	;# 
  7016  0318                     	;# 
  7017  038C                     	;# 
  7018  038D                     	;# 
  7019  038E                     	;# 
  7020  0391                     	;# 
  7021  0392                     	;# 
  7022  0393                     	;# 
  7023  0394                     	;# 
  7024  0395                     	;# 
  7025  0396                     	;# 
  7026  0397                     	;# 
  7027  0398                     	;# 
  7028  0399                     	;# 
  7029  039A                     	;# 
  7030  039C                     	;# 
  7031  039D                     	;# 
  7032  039E                     	;# 
  7033  039F                     	;# 
  7034  0411                     	;# 
  7035  0411                     	;# 
  7036  0412                     	;# 
  7037  0413                     	;# 
  7038  0414                     	;# 
  7039  0415                     	;# 
  7040  0416                     	;# 
  7041  0417                     	;# 
  7042  0418                     	;# 
  7043  0418                     	;# 
  7044  0419                     	;# 
  7045  041A                     	;# 
  7046  041B                     	;# 
  7047  041C                     	;# 
  7048  041D                     	;# 
  7049  041E                     	;# 
  7050  041F                     	;# 
  7051  0498                     	;# 
  7052  0498                     	;# 
  7053  0499                     	;# 
  7054  049A                     	;# 
  7055  049B                     	;# 
  7056  049B                     	;# 
  7057  049C                     	;# 
  7058  049D                     	;# 
  7059  049E                     	;# 
  7060  049F                     	;# 
  7061  0617                     	;# 
  7062  0618                     	;# 
  7063  0619                     	;# 
  7064  0619                     	;# 
  7065  061A                     	;# 
  7066  061B                     	;# 
  7067  061C                     	;# 
  7068  061C                     	;# 
  7069  061F                     	;# 
  7070  0691                     	;# 
  7071  0692                     	;# 
  7072  0693                     	;# 
  7073  0694                     	;# 
  7074  0695                     	;# 
  7075  0696                     	;# 
  7076  0697                     	;# 
  7077  0698                     	;# 
  7078  0699                     	;# 
  7079  0711                     	;# 
  7080  0712                     	;# 
  7081  0713                     	;# 
  7082  0714                     	;# 
  7083  0715                     	;# 
  7084  0716                     	;# 
  7085  0717                     	;# 
  7086  0718                     	;# 
  7087  0719                     	;# 
  7088  0891                     	;# 
  7089  0891                     	;# 
  7090  0891                     	;# 
  7091  0891                     	;# 
  7092  0891                     	;# 
  7093  0891                     	;# 
  7094  0892                     	;# 
  7095  0892                     	;# 
  7096  0892                     	;# 
  7097  0893                     	;# 
  7098  0893                     	;# 
  7099  0893                     	;# 
  7100  0893                     	;# 
  7101  0893                     	;# 
  7102  0893                     	;# 
  7103  0894                     	;# 
  7104  0894                     	;# 
  7105  0894                     	;# 
  7106  0895                     	;# 
  7107  0895                     	;# 
  7108  0895                     	;# 
  7109  0896                     	;# 
  7110  0896                     	;# 
  7111  0896                     	;# 
  7112  089B                     	;# 
  7113  0911                     	;# 
  7114  0912                     	;# 
  7115  0913                     	;# 
  7116  0914                     	;# 
  7117  0915                     	;# 
  7118  0916                     	;# 
  7119  0918                     	;# 
  7120  0919                     	;# 
  7121  091A                     	;# 
  7122  091B                     	;# 
  7123  091C                     	;# 
  7124  091D                     	;# 
  7125  091E                     	;# 
  7126  091F                     	;# 
  7127  0E0F                     	;# 
  7128  0E10                     	;# 
  7129  0E11                     	;# 
  7130  0E12                     	;# 
  7131  0E13                     	;# 
  7132  0E14                     	;# 
  7133  0E15                     	;# 
  7134  0E16                     	;# 
  7135  0E17                     	;# 
  7136  0E18                     	;# 
  7137  0E19                     	;# 
  7138  0E1A                     	;# 
  7139  0E1B                     	;# 
  7140  0E1C                     	;# 
  7141  0E1D                     	;# 
  7142  0E1E                     	;# 
  7143  0E1F                     	;# 
  7144  0E20                     	;# 
  7145  0E21                     	;# 
  7146  0E22                     	;# 
  7147  0E24                     	;# 
  7148  0E25                     	;# 
  7149  0E28                     	;# 
  7150  0E29                     	;# 
  7151  0E2A                     	;# 
  7152  0E2B                     	;# 
  7153  0E2C                     	;# 
  7154  0E2D                     	;# 
  7155  0E2E                     	;# 
  7156  0E2F                     	;# 
  7157  0E90                     	;# 
  7158  0E91                     	;# 
  7159  0E92                     	;# 
  7160  0E94                     	;# 
  7161  0E95                     	;# 
  7162  0E9C                     	;# 
  7163  0E9D                     	;# 
  7164  0E9E                     	;# 
  7165  0E9F                     	;# 
  7166  0EA0                     	;# 
  7167  0EA1                     	;# 
  7168  0EA2                     	;# 
  7169  0EA3                     	;# 
  7170  0EA4                     	;# 
  7171  0EA5                     	;# 
  7172  0EA6                     	;# 
  7173  0EA7                     	;# 
  7174  0F0F                     	;# 
  7175  0F10                     	;# 
  7176  0F11                     	;# 
  7177  0F12                     	;# 
  7178  0F13                     	;# 
  7179  0F14                     	;# 
  7180  0F15                     	;# 
  7181  0F16                     	;# 
  7182  0F17                     	;# 
  7183  0F18                     	;# 
  7184  0F19                     	;# 
  7185  0F1A                     	;# 
  7186  0F1B                     	;# 
  7187  0F1C                     	;# 
  7188  0F1D                     	;# 
  7189  0F1E                     	;# 
  7190  0F1F                     	;# 
  7191  0F20                     	;# 
  7192  0F21                     	;# 
  7193  0F22                     	;# 
  7194  0F23                     	;# 
  7195  0F24                     	;# 
  7196  0F25                     	;# 
  7197  0F26                     	;# 
  7198  0F27                     	;# 
  7199  0F28                     	;# 
  7200  0F29                     	;# 
  7201  0F2A                     	;# 
  7202  0F2B                     	;# 
  7203  0F2C                     	;# 
  7204  0F2D                     	;# 
  7205  0F2E                     	;# 
  7206  0F2F                     	;# 
  7207  0F30                     	;# 
  7208  0F31                     	;# 
  7209  0F32                     	;# 
  7210  0F33                     	;# 
  7211  0F34                     	;# 
  7212  0F35                     	;# 
  7213  0F36                     	;# 
  7214  0F37                     	;# 
  7215  0FE4                     	;# 
  7216  0FE5                     	;# 
  7217  0FE6                     	;# 
  7218  0FE7                     	;# 
  7219  0FE8                     	;# 
  7220  0FE9                     	;# 
  7221  0FEA                     	;# 
  7222  0FEB                     	;# 
  7223  0FED                     	;# 
  7224  0FEE                     	;# 
  7225  0FEF                     	;# 
  7226  0000                     	;# 
  7227  0001                     	;# 
  7228  0002                     	;# 
  7229  0003                     	;# 
  7230  0004                     	;# 
  7231  0005                     	;# 
  7232  0006                     	;# 
  7233  0007                     	;# 
  7234  0008                     	;# 
  7235  0009                     	;# 
  7236  000A                     	;# 
  7237  000B                     	;# 
  7238  000C                     	;# 
  7239  000D                     	;# 
  7240  000E                     	;# 
  7241  0010                     	;# 
  7242  0011                     	;# 
  7243  0012                     	;# 
  7244  0013                     	;# 
  7245  0014                     	;# 
  7246  0015                     	;# 
  7247  0015                     	;# 
  7248  0016                     	;# 
  7249  0016                     	;# 
  7250  0017                     	;# 
  7251  0018                     	;# 
  7252  0019                     	;# 
  7253  0019                     	;# 
  7254  001A                     	;# 
  7255  001B                     	;# 
  7256  001C                     	;# 
  7257  001D                     	;# 
  7258  001E                     	;# 
  7259  001F                     	;# 
  7260  008C                     	;# 
  7261  008D                     	;# 
  7262  008E                     	;# 
  7263  0090                     	;# 
  7264  0091                     	;# 
  7265  0092                     	;# 
  7266  0093                     	;# 
  7267  0094                     	;# 
  7268  0097                     	;# 
  7269  009B                     	;# 
  7270  009B                     	;# 
  7271  009C                     	;# 
  7272  009D                     	;# 
  7273  009E                     	;# 
  7274  009F                     	;# 
  7275  010C                     	;# 
  7276  010D                     	;# 
  7277  010E                     	;# 
  7278  0111                     	;# 
  7279  0112                     	;# 
  7280  0113                     	;# 
  7281  0114                     	;# 
  7282  0115                     	;# 
  7283  0116                     	;# 
  7284  0117                     	;# 
  7285  0118                     	;# 
  7286  0119                     	;# 
  7287  018C                     	;# 
  7288  018D                     	;# 
  7289  018E                     	;# 
  7290  0199                     	;# 
  7291  0199                     	;# 
  7292  0199                     	;# 
  7293  019A                     	;# 
  7294  019A                     	;# 
  7295  019A                     	;# 
  7296  019B                     	;# 
  7297  019B                     	;# 
  7298  019B                     	;# 
  7299  019B                     	;# 
  7300  019B                     	;# 
  7301  019C                     	;# 
  7302  019C                     	;# 
  7303  019C                     	;# 
  7304  019D                     	;# 
  7305  019D                     	;# 
  7306  019D                     	;# 
  7307  019E                     	;# 
  7308  019E                     	;# 
  7309  019E                     	;# 
  7310  019F                     	;# 
  7311  019F                     	;# 
  7312  019F                     	;# 
  7313  019F                     	;# 
  7314  019F                     	;# 
  7315  020C                     	;# 
  7316  020D                     	;# 
  7317  020E                     	;# 
  7318  0211                     	;# 
  7319  0211                     	;# 
  7320  0212                     	;# 
  7321  0212                     	;# 
  7322  0213                     	;# 
  7323  0213                     	;# 
  7324  0214                     	;# 
  7325  0214                     	;# 
  7326  0215                     	;# 
  7327  0215                     	;# 
  7328  0215                     	;# 
  7329  0215                     	;# 
  7330  0216                     	;# 
  7331  0216                     	;# 
  7332  0217                     	;# 
  7333  0217                     	;# 
  7334  0219                     	;# 
  7335  021A                     	;# 
  7336  021B                     	;# 
  7337  021C                     	;# 
  7338  021D                     	;# 
  7339  021D                     	;# 
  7340  021E                     	;# 
  7341  021F                     	;# 
  7342  028C                     	;# 
  7343  028D                     	;# 
  7344  028E                     	;# 
  7345  0291                     	;# 
  7346  0291                     	;# 
  7347  0292                     	;# 
  7348  0293                     	;# 
  7349  0294                     	;# 
  7350  0295                     	;# 
  7351  0295                     	;# 
  7352  0296                     	;# 
  7353  0297                     	;# 
  7354  0298                     	;# 
  7355  029F                     	;# 
  7356  030C                     	;# 
  7357  030D                     	;# 
  7358  030E                     	;# 
  7359  0311                     	;# 
  7360  0311                     	;# 
  7361  0312                     	;# 
  7362  0313                     	;# 
  7363  0314                     	;# 
  7364  0315                     	;# 
  7365  0315                     	;# 
  7366  0316                     	;# 
  7367  0317                     	;# 
  7368  0318                     	;# 
  7369  038C                     	;# 
  7370  038D                     	;# 
  7371  038E                     	;# 
  7372  0391                     	;# 
  7373  0392                     	;# 
  7374  0393                     	;# 
  7375  0394                     	;# 
  7376  0395                     	;# 
  7377  0396                     	;# 
  7378  0397                     	;# 
  7379  0398                     	;# 
  7380  0399                     	;# 
  7381  039A                     	;# 
  7382  039C                     	;# 
  7383  039D                     	;# 
  7384  039E                     	;# 
  7385  039F                     	;# 
  7386  0411                     	;# 
  7387  0411                     	;# 
  7388  0412                     	;# 
  7389  0413                     	;# 
  7390  0414                     	;# 
  7391  0415                     	;# 
  7392  0416                     	;# 
  7393  0417                     	;# 
  7394  0418                     	;# 
  7395  0418                     	;# 
  7396  0419                     	;# 
  7397  041A                     	;# 
  7398  041B                     	;# 
  7399  041C                     	;# 
  7400  041D                     	;# 
  7401  041E                     	;# 
  7402  041F                     	;# 
  7403  0498                     	;# 
  7404  0498                     	;# 
  7405  0499                     	;# 
  7406  049A                     	;# 
  7407  049B                     	;# 
  7408  049B                     	;# 
  7409  049C                     	;# 
  7410  049D                     	;# 
  7411  049E                     	;# 
  7412  049F                     	;# 
  7413  0617                     	;# 
  7414  0618                     	;# 
  7415  0619                     	;# 
  7416  0619                     	;# 
  7417  061A                     	;# 
  7418  061B                     	;# 
  7419  061C                     	;# 
  7420  061C                     	;# 
  7421  061F                     	;# 
  7422  0691                     	;# 
  7423  0692                     	;# 
  7424  0693                     	;# 
  7425  0694                     	;# 
  7426  0695                     	;# 
  7427  0696                     	;# 
  7428  0697                     	;# 
  7429  0698                     	;# 
  7430  0699                     	;# 
  7431  0711                     	;# 
  7432  0712                     	;# 
  7433  0713                     	;# 
  7434  0714                     	;# 
  7435  0715                     	;# 
  7436  0716                     	;# 
  7437  0717                     	;# 
  7438  0718                     	;# 
  7439  0719                     	;# 
  7440  0891                     	;# 
  7441  0891                     	;# 
  7442  0891                     	;# 
  7443  0891                     	;# 
  7444  0891                     	;# 
  7445  0891                     	;# 
  7446  0892                     	;# 
  7447  0892                     	;# 
  7448  0892                     	;# 
  7449  0893                     	;# 
  7450  0893                     	;# 
  7451  0893                     	;# 
  7452  0893                     	;# 
  7453  0893                     	;# 
  7454  0893                     	;# 
  7455  0894                     	;# 
  7456  0894                     	;# 
  7457  0894                     	;# 
  7458  0895                     	;# 
  7459  0895                     	;# 
  7460  0895                     	;# 
  7461  0896                     	;# 
  7462  0896                     	;# 
  7463  0896                     	;# 
  7464  089B                     	;# 
  7465  0911                     	;# 
  7466  0912                     	;# 
  7467  0913                     	;# 
  7468  0914                     	;# 
  7469  0915                     	;# 
  7470  0916                     	;# 
  7471  0918                     	;# 
  7472  0919                     	;# 
  7473  091A                     	;# 
  7474  091B                     	;# 
  7475  091C                     	;# 
  7476  091D                     	;# 
  7477  091E                     	;# 
  7478  091F                     	;# 
  7479  0E0F                     	;# 
  7480  0E10                     	;# 
  7481  0E11                     	;# 
  7482  0E12                     	;# 
  7483  0E13                     	;# 
  7484  0E14                     	;# 
  7485  0E15                     	;# 
  7486  0E16                     	;# 
  7487  0E17                     	;# 
  7488  0E18                     	;# 
  7489  0E19                     	;# 
  7490  0E1A                     	;# 
  7491  0E1B                     	;# 
  7492  0E1C                     	;# 
  7493  0E1D                     	;# 
  7494  0E1E                     	;# 
  7495  0E1F                     	;# 
  7496  0E20                     	;# 
  7497  0E21                     	;# 
  7498  0E22                     	;# 
  7499  0E24                     	;# 
  7500  0E25                     	;# 
  7501  0E28                     	;# 
  7502  0E29                     	;# 
  7503  0E2A                     	;# 
  7504  0E2B                     	;# 
  7505  0E2C                     	;# 
  7506  0E2D                     	;# 
  7507  0E2E                     	;# 
  7508  0E2F                     	;# 
  7509  0E90                     	;# 
  7510  0E91                     	;# 
  7511  0E92                     	;# 
  7512  0E94                     	;# 
  7513  0E95                     	;# 
  7514  0E9C                     	;# 
  7515  0E9D                     	;# 
  7516  0E9E                     	;# 
  7517  0E9F                     	;# 
  7518  0EA0                     	;# 
  7519  0EA1                     	;# 
  7520  0EA2                     	;# 
  7521  0EA3                     	;# 
  7522  0EA4                     	;# 
  7523  0EA5                     	;# 
  7524  0EA6                     	;# 
  7525  0EA7                     	;# 
  7526  0F0F                     	;# 
  7527  0F10                     	;# 
  7528  0F11                     	;# 
  7529  0F12                     	;# 
  7530  0F13                     	;# 
  7531  0F14                     	;# 
  7532  0F15                     	;# 
  7533  0F16                     	;# 
  7534  0F17                     	;# 
  7535  0F18                     	;# 
  7536  0F19                     	;# 
  7537  0F1A                     	;# 
  7538  0F1B                     	;# 
  7539  0F1C                     	;# 
  7540  0F1D                     	;# 
  7541  0F1E                     	;# 
  7542  0F1F                     	;# 
  7543  0F20                     	;# 
  7544  0F21                     	;# 
  7545  0F22                     	;# 
  7546  0F23                     	;# 
  7547  0F24                     	;# 
  7548  0F25                     	;# 
  7549  0F26                     	;# 
  7550  0F27                     	;# 
  7551  0F28                     	;# 
  7552  0F29                     	;# 
  7553  0F2A                     	;# 
  7554  0F2B                     	;# 
  7555  0F2C                     	;# 
  7556  0F2D                     	;# 
  7557  0F2E                     	;# 
  7558  0F2F                     	;# 
  7559  0F30                     	;# 
  7560  0F31                     	;# 
  7561  0F32                     	;# 
  7562  0F33                     	;# 
  7563  0F34                     	;# 
  7564  0F35                     	;# 
  7565  0F36                     	;# 
  7566  0F37                     	;# 
  7567  0FE4                     	;# 
  7568  0FE5                     	;# 
  7569  0FE6                     	;# 
  7570  0FE7                     	;# 
  7571  0FE8                     	;# 
  7572  0FE9                     	;# 
  7573  0FEA                     	;# 
  7574  0FEB                     	;# 
  7575  0FED                     	;# 
  7576  0FEE                     	;# 
  7577  0FEF                     	;# 
  7578  0000                     	;# 
  7579  0001                     	;# 
  7580  0002                     	;# 
  7581  0003                     	;# 
  7582  0004                     	;# 
  7583  0005                     	;# 
  7584  0006                     	;# 
  7585  0007                     	;# 
  7586  0008                     	;# 
  7587  0009                     	;# 
  7588  000A                     	;# 
  7589  000B                     	;# 
  7590  000C                     	;# 
  7591  000D                     	;# 
  7592  000E                     	;# 
  7593  0010                     	;# 
  7594  0011                     	;# 
  7595  0012                     	;# 
  7596  0013                     	;# 
  7597  0014                     	;# 
  7598  0015                     	;# 
  7599  0015                     	;# 
  7600  0016                     	;# 
  7601  0016                     	;# 
  7602  0017                     	;# 
  7603  0018                     	;# 
  7604  0019                     	;# 
  7605  0019                     	;# 
  7606  001A                     	;# 
  7607  001B                     	;# 
  7608  001C                     	;# 
  7609  001D                     	;# 
  7610  001E                     	;# 
  7611  001F                     	;# 
  7612  008C                     	;# 
  7613  008D                     	;# 
  7614  008E                     	;# 
  7615  0090                     	;# 
  7616  0091                     	;# 
  7617  0092                     	;# 
  7618  0093                     	;# 
  7619  0094                     	;# 
  7620  0097                     	;# 
  7621  009B                     	;# 
  7622  009B                     	;# 
  7623  009C                     	;# 
  7624  009D                     	;# 
  7625  009E                     	;# 
  7626  009F                     	;# 
  7627  010C                     	;# 
  7628  010D                     	;# 
  7629  010E                     	;# 
  7630  0111                     	;# 
  7631  0112                     	;# 
  7632  0113                     	;# 
  7633  0114                     	;# 
  7634  0115                     	;# 
  7635  0116                     	;# 
  7636  0117                     	;# 
  7637  0118                     	;# 
  7638  0119                     	;# 
  7639  018C                     	;# 
  7640  018D                     	;# 
  7641  018E                     	;# 
  7642  0199                     	;# 
  7643  0199                     	;# 
  7644  0199                     	;# 
  7645  019A                     	;# 
  7646  019A                     	;# 
  7647  019A                     	;# 
  7648  019B                     	;# 
  7649  019B                     	;# 
  7650  019B                     	;# 
  7651  019B                     	;# 
  7652  019B                     	;# 
  7653  019C                     	;# 
  7654  019C                     	;# 
  7655  019C                     	;# 
  7656  019D                     	;# 
  7657  019D                     	;# 
  7658  019D                     	;# 
  7659  019E                     	;# 
  7660  019E                     	;# 
  7661  019E                     	;# 
  7662  019F                     	;# 
  7663  019F                     	;# 
  7664  019F                     	;# 
  7665  019F                     	;# 
  7666  019F                     	;# 
  7667  020C                     	;# 
  7668  020D                     	;# 
  7669  020E                     	;# 
  7670  0211                     	;# 
  7671  0211                     	;# 
  7672  0212                     	;# 
  7673  0212                     	;# 
  7674  0213                     	;# 
  7675  0213                     	;# 
  7676  0214                     	;# 
  7677  0214                     	;# 
  7678  0215                     	;# 
  7679  0215                     	;# 
  7680  0215                     	;# 
  7681  0215                     	;# 
  7682  0216                     	;# 
  7683  0216                     	;# 
  7684  0217                     	;# 
  7685  0217                     	;# 
  7686  0219                     	;# 
  7687  021A                     	;# 
  7688  021B                     	;# 
  7689  021C                     	;# 
  7690  021D                     	;# 
  7691  021D                     	;# 
  7692  021E                     	;# 
  7693  021F                     	;# 
  7694  028C                     	;# 
  7695  028D                     	;# 
  7696  028E                     	;# 
  7697  0291                     	;# 
  7698  0291                     	;# 
  7699  0292                     	;# 
  7700  0293                     	;# 
  7701  0294                     	;# 
  7702  0295                     	;# 
  7703  0295                     	;# 
  7704  0296                     	;# 
  7705  0297                     	;# 
  7706  0298                     	;# 
  7707  029F                     	;# 
  7708  030C                     	;# 
  7709  030D                     	;# 
  7710  030E                     	;# 
  7711  0311                     	;# 
  7712  0311                     	;# 
  7713  0312                     	;# 
  7714  0313                     	;# 
  7715  0314                     	;# 
  7716  0315                     	;# 
  7717  0315                     	;# 
  7718  0316                     	;# 
  7719  0317                     	;# 
  7720  0318                     	;# 
  7721  038C                     	;# 
  7722  038D                     	;# 
  7723  038E                     	;# 
  7724  0391                     	;# 
  7725  0392                     	;# 
  7726  0393                     	;# 
  7727  0394                     	;# 
  7728  0395                     	;# 
  7729  0396                     	;# 
  7730  0397                     	;# 
  7731  0398                     	;# 
  7732  0399                     	;# 
  7733  039A                     	;# 
  7734  039C                     	;# 
  7735  039D                     	;# 
  7736  039E                     	;# 
  7737  039F                     	;# 
  7738  0411                     	;# 
  7739  0411                     	;# 
  7740  0412                     	;# 
  7741  0413                     	;# 
  7742  0414                     	;# 
  7743  0415                     	;# 
  7744  0416                     	;# 
  7745  0417                     	;# 
  7746  0418                     	;# 
  7747  0418                     	;# 
  7748  0419                     	;# 
  7749  041A                     	;# 
  7750  041B                     	;# 
  7751  041C                     	;# 
  7752  041D                     	;# 
  7753  041E                     	;# 
  7754  041F                     	;# 
  7755  0498                     	;# 
  7756  0498                     	;# 
  7757  0499                     	;# 
  7758  049A                     	;# 
  7759  049B                     	;# 
  7760  049B                     	;# 
  7761  049C                     	;# 
  7762  049D                     	;# 
  7763  049E                     	;# 
  7764  049F                     	;# 
  7765  0617                     	;# 
  7766  0618                     	;# 
  7767  0619                     	;# 
  7768  0619                     	;# 
  7769  061A                     	;# 
  7770  061B                     	;# 
  7771  061C                     	;# 
  7772  061C                     	;# 
  7773  061F                     	;# 
  7774  0691                     	;# 
  7775  0692                     	;# 
  7776  0693                     	;# 
  7777  0694                     	;# 
  7778  0695                     	;# 
  7779  0696                     	;# 
  7780  0697                     	;# 
  7781  0698                     	;# 
  7782  0699                     	;# 
  7783  0711                     	;# 
  7784  0712                     	;# 
  7785  0713                     	;# 
  7786  0714                     	;# 
  7787  0715                     	;# 
  7788  0716                     	;# 
  7789  0717                     	;# 
  7790  0718                     	;# 
  7791  0719                     	;# 
  7792  0891                     	;# 
  7793  0891                     	;# 
  7794  0891                     	;# 
  7795  0891                     	;# 
  7796  0891                     	;# 
  7797  0891                     	;# 
  7798  0892                     	;# 
  7799  0892                     	;# 
  7800  0892                     	;# 
  7801  0893                     	;# 
  7802  0893                     	;# 
  7803  0893                     	;# 
  7804  0893                     	;# 
  7805  0893                     	;# 
  7806  0893                     	;# 
  7807  0894                     	;# 
  7808  0894                     	;# 
  7809  0894                     	;# 
  7810  0895                     	;# 
  7811  0895                     	;# 
  7812  0895                     	;# 
  7813  0896                     	;# 
  7814  0896                     	;# 
  7815  0896                     	;# 
  7816  089B                     	;# 
  7817  0911                     	;# 
  7818  0912                     	;# 
  7819  0913                     	;# 
  7820  0914                     	;# 
  7821  0915                     	;# 
  7822  0916                     	;# 
  7823  0918                     	;# 
  7824  0919                     	;# 
  7825  091A                     	;# 
  7826  091B                     	;# 
  7827  091C                     	;# 
  7828  091D                     	;# 
  7829  091E                     	;# 
  7830  091F                     	;# 
  7831  0E0F                     	;# 
  7832  0E10                     	;# 
  7833  0E11                     	;# 
  7834  0E12                     	;# 
  7835  0E13                     	;# 
  7836  0E14                     	;# 
  7837  0E15                     	;# 
  7838  0E16                     	;# 
  7839  0E17                     	;# 
  7840  0E18                     	;# 
  7841  0E19                     	;# 
  7842  0E1A                     	;# 
  7843  0E1B                     	;# 
  7844  0E1C                     	;# 
  7845  0E1D                     	;# 
  7846  0E1E                     	;# 
  7847  0E1F                     	;# 
  7848  0E20                     	;# 
  7849  0E21                     	;# 
  7850  0E22                     	;# 
  7851  0E24                     	;# 
  7852  0E25                     	;# 
  7853  0E28                     	;# 
  7854  0E29                     	;# 
  7855  0E2A                     	;# 
  7856  0E2B                     	;# 
  7857  0E2C                     	;# 
  7858  0E2D                     	;# 
  7859  0E2E                     	;# 
  7860  0E2F                     	;# 
  7861  0E90                     	;# 
  7862  0E91                     	;# 
  7863  0E92                     	;# 
  7864  0E94                     	;# 
  7865  0E95                     	;# 
  7866  0E9C                     	;# 
  7867  0E9D                     	;# 
  7868  0E9E                     	;# 
  7869  0E9F                     	;# 
  7870  0EA0                     	;# 
  7871  0EA1                     	;# 
  7872  0EA2                     	;# 
  7873  0EA3                     	;# 
  7874  0EA4                     	;# 
  7875  0EA5                     	;# 
  7876  0EA6                     	;# 
  7877  0EA7                     	;# 
  7878  0F0F                     	;# 
  7879  0F10                     	;# 
  7880  0F11                     	;# 
  7881  0F12                     	;# 
  7882  0F13                     	;# 
  7883  0F14                     	;# 
  7884  0F15                     	;# 
  7885  0F16                     	;# 
  7886  0F17                     	;# 
  7887  0F18                     	;# 
  7888  0F19                     	;# 
  7889  0F1A                     	;# 
  7890  0F1B                     	;# 
  7891  0F1C                     	;# 
  7892  0F1D                     	;# 
  7893  0F1E                     	;# 
  7894  0F1F                     	;# 
  7895  0F20                     	;# 
  7896  0F21                     	;# 
  7897  0F22                     	;# 
  7898  0F23                     	;# 
  7899  0F24                     	;# 
  7900  0F25                     	;# 
  7901  0F26                     	;# 
  7902  0F27                     	;# 
  7903  0F28                     	;# 
  7904  0F29                     	;# 
  7905  0F2A                     	;# 
  7906  0F2B                     	;# 
  7907  0F2C                     	;# 
  7908  0F2D                     	;# 
  7909  0F2E                     	;# 
  7910  0F2F                     	;# 
  7911  0F30                     	;# 
  7912  0F31                     	;# 
  7913  0F32                     	;# 
  7914  0F33                     	;# 
  7915  0F34                     	;# 
  7916  0F35                     	;# 
  7917  0F36                     	;# 
  7918  0F37                     	;# 
  7919  0FE4                     	;# 
  7920  0FE5                     	;# 
  7921  0FE6                     	;# 
  7922  0FE7                     	;# 
  7923  0FE8                     	;# 
  7924  0FE9                     	;# 
  7925  0FEA                     	;# 
  7926  0FEB                     	;# 
  7927  0FED                     	;# 
  7928  0FEE                     	;# 
  7929  0FEF                     	;# 
  7930  0000                     	;# 
  7931  0001                     	;# 
  7932  0002                     	;# 
  7933  0003                     	;# 
  7934  0004                     	;# 
  7935  0005                     	;# 
  7936  0006                     	;# 
  7937  0007                     	;# 
  7938  0008                     	;# 
  7939  0009                     	;# 
  7940  000A                     	;# 
  7941  000B                     	;# 
  7942  000C                     	;# 
  7943  000D                     	;# 
  7944  000E                     	;# 
  7945  0010                     	;# 
  7946  0011                     	;# 
  7947  0012                     	;# 
  7948  0013                     	;# 
  7949  0014                     	;# 
  7950  0015                     	;# 
  7951  0015                     	;# 
  7952  0016                     	;# 
  7953  0016                     	;# 
  7954  0017                     	;# 
  7955  0018                     	;# 
  7956  0019                     	;# 
  7957  0019                     	;# 
  7958  001A                     	;# 
  7959  001B                     	;# 
  7960  001C                     	;# 
  7961  001D                     	;# 
  7962  001E                     	;# 
  7963  001F                     	;# 
  7964  008C                     	;# 
  7965  008D                     	;# 
  7966  008E                     	;# 
  7967  0090                     	;# 
  7968  0091                     	;# 
  7969  0092                     	;# 
  7970  0093                     	;# 
  7971  0094                     	;# 
  7972  0097                     	;# 
  7973  009B                     	;# 
  7974  009B                     	;# 
  7975  009C                     	;# 
  7976  009D                     	;# 
  7977  009E                     	;# 
  7978  009F                     	;# 
  7979  010C                     	;# 
  7980  010D                     	;# 
  7981  010E                     	;# 
  7982  0111                     	;# 
  7983  0112                     	;# 
  7984  0113                     	;# 
  7985  0114                     	;# 
  7986  0115                     	;# 
  7987  0116                     	;# 
  7988  0117                     	;# 
  7989  0118                     	;# 
  7990  0119                     	;# 
  7991  018C                     	;# 
  7992  018D                     	;# 
  7993  018E                     	;# 
  7994  0199                     	;# 
  7995  0199                     	;# 
  7996  0199                     	;# 
  7997  019A                     	;# 
  7998  019A                     	;# 
  7999  019A                     	;# 
  8000  019B                     	;# 
  8001  019B                     	;# 
  8002  019B                     	;# 
  8003  019B                     	;# 
  8004  019B                     	;# 
  8005  019C                     	;# 
  8006  019C                     	;# 
  8007  019C                     	;# 
  8008  019D                     	;# 
  8009  019D                     	;# 
  8010  019D                     	;# 
  8011  019E                     	;# 
  8012  019E                     	;# 
  8013  019E                     	;# 
  8014  019F                     	;# 
  8015  019F                     	;# 
  8016  019F                     	;# 
  8017  019F                     	;# 
  8018  019F                     	;# 
  8019  020C                     	;# 
  8020  020D                     	;# 
  8021  020E                     	;# 
  8022  0211                     	;# 
  8023  0211                     	;# 
  8024  0212                     	;# 
  8025  0212                     	;# 
  8026  0213                     	;# 
  8027  0213                     	;# 
  8028  0214                     	;# 
  8029  0214                     	;# 
  8030  0215                     	;# 
  8031  0215                     	;# 
  8032  0215                     	;# 
  8033  0215                     	;# 
  8034  0216                     	;# 
  8035  0216                     	;# 
  8036  0217                     	;# 
  8037  0217                     	;# 
  8038  0219                     	;# 
  8039  021A                     	;# 
  8040  021B                     	;# 
  8041  021C                     	;# 
  8042  021D                     	;# 
  8043  021D                     	;# 
  8044  021E                     	;# 
  8045  021F                     	;# 
  8046  028C                     	;# 
  8047  028D                     	;# 
  8048  028E                     	;# 
  8049  0291                     	;# 
  8050  0291                     	;# 
  8051  0292                     	;# 
  8052  0293                     	;# 
  8053  0294                     	;# 
  8054  0295                     	;# 
  8055  0295                     	;# 
  8056  0296                     	;# 
  8057  0297                     	;# 
  8058  0298                     	;# 
  8059  029F                     	;# 
  8060  030C                     	;# 
  8061  030D                     	;# 
  8062  030E                     	;# 
  8063  0311                     	;# 
  8064  0311                     	;# 
  8065  0312                     	;# 
  8066  0313                     	;# 
  8067  0314                     	;# 
  8068  0315                     	;# 
  8069  0315                     	;# 
  8070  0316                     	;# 
  8071  0317                     	;# 
  8072  0318                     	;# 
  8073  038C                     	;# 
  8074  038D                     	;# 
  8075  038E                     	;# 
  8076  0391                     	;# 
  8077  0392                     	;# 
  8078  0393                     	;# 
  8079  0394                     	;# 
  8080  0395                     	;# 
  8081  0396                     	;# 
  8082  0397                     	;# 
  8083  0398                     	;# 
  8084  0399                     	;# 
  8085  039A                     	;# 
  8086  039C                     	;# 
  8087  039D                     	;# 
  8088  039E                     	;# 
  8089  039F                     	;# 
  8090  0411                     	;# 
  8091  0411                     	;# 
  8092  0412                     	;# 
  8093  0413                     	;# 
  8094  0414                     	;# 
  8095  0415                     	;# 
  8096  0416                     	;# 
  8097  0417                     	;# 
  8098  0418                     	;# 
  8099  0418                     	;# 
  8100  0419                     	;# 
  8101  041A                     	;# 
  8102  041B                     	;# 
  8103  041C                     	;# 
  8104  041D                     	;# 
  8105  041E                     	;# 
  8106  041F                     	;# 
  8107  0498                     	;# 
  8108  0498                     	;# 
  8109  0499                     	;# 
  8110  049A                     	;# 
  8111  049B                     	;# 
  8112  049B                     	;# 
  8113  049C                     	;# 
  8114  049D                     	;# 
  8115  049E                     	;# 
  8116  049F                     	;# 
  8117  0617                     	;# 
  8118  0618                     	;# 
  8119  0619                     	;# 
  8120  0619                     	;# 
  8121  061A                     	;# 
  8122  061B                     	;# 
  8123  061C                     	;# 
  8124  061C                     	;# 
  8125  061F                     	;# 
  8126  0691                     	;# 
  8127  0692                     	;# 
  8128  0693                     	;# 
  8129  0694                     	;# 
  8130  0695                     	;# 
  8131  0696                     	;# 
  8132  0697                     	;# 
  8133  0698                     	;# 
  8134  0699                     	;# 
  8135  0711                     	;# 
  8136  0712                     	;# 
  8137  0713                     	;# 
  8138  0714                     	;# 
  8139  0715                     	;# 
  8140  0716                     	;# 
  8141  0717                     	;# 
  8142  0718                     	;# 
  8143  0719                     	;# 
  8144  0891                     	;# 
  8145  0891                     	;# 
  8146  0891                     	;# 
  8147  0891                     	;# 
  8148  0891                     	;# 
  8149  0891                     	;# 
  8150  0892                     	;# 
  8151  0892                     	;# 
  8152  0892                     	;# 
  8153  0893                     	;# 
  8154  0893                     	;# 
  8155  0893                     	;# 
  8156  0893                     	;# 
  8157  0893                     	;# 
  8158  0893                     	;# 
  8159  0894                     	;# 
  8160  0894                     	;# 
  8161  0894                     	;# 
  8162  0895                     	;# 
  8163  0895                     	;# 
  8164  0895                     	;# 
  8165  0896                     	;# 
  8166  0896                     	;# 
  8167  0896                     	;# 
  8168  089B                     	;# 
  8169  0911                     	;# 
  8170  0912                     	;# 
  8171  0913                     	;# 
  8172  0914                     	;# 
  8173  0915                     	;# 
  8174  0916                     	;# 
  8175  0918                     	;# 
  8176  0919                     	;# 
  8177  091A                     	;# 
  8178  091B                     	;# 
  8179  091C                     	;# 
  8180  091D                     	;# 
  8181  091E                     	;# 
  8182  091F                     	;# 
  8183  0E0F                     	;# 
  8184  0E10                     	;# 
  8185  0E11                     	;# 
  8186  0E12                     	;# 
  8187  0E13                     	;# 
  8188  0E14                     	;# 
  8189  0E15                     	;# 
  8190  0E16                     	;# 
  8191  0E17                     	;# 
  8192  0E18                     	;# 
  8193  0E19                     	;# 
  8194  0E1A                     	;# 
  8195  0E1B                     	;# 
  8196  0E1C                     	;# 
  8197  0E1D                     	;# 
  8198  0E1E                     	;# 
  8199  0E1F                     	;# 
  8200  0E20                     	;# 
  8201  0E21                     	;# 
  8202  0E22                     	;# 
  8203  0E24                     	;# 
  8204  0E25                     	;# 
  8205  0E28                     	;# 
  8206  0E29                     	;# 
  8207  0E2A                     	;# 
  8208  0E2B                     	;# 
  8209  0E2C                     	;# 
  8210  0E2D                     	;# 
  8211  0E2E                     	;# 
  8212  0E2F                     	;# 
  8213  0E90                     	;# 
  8214  0E91                     	;# 
  8215  0E92                     	;# 
  8216  0E94                     	;# 
  8217  0E95                     	;# 
  8218  0E9C                     	;# 
  8219  0E9D                     	;# 
  8220  0E9E                     	;# 
  8221  0E9F                     	;# 
  8222  0EA0                     	;# 
  8223  0EA1                     	;# 
  8224  0EA2                     	;# 
  8225  0EA3                     	;# 
  8226  0EA4                     	;# 
  8227  0EA5                     	;# 
  8228  0EA6                     	;# 
  8229  0EA7                     	;# 
  8230  0F0F                     	;# 
  8231  0F10                     	;# 
  8232  0F11                     	;# 
  8233  0F12                     	;# 
  8234  0F13                     	;# 
  8235  0F14                     	;# 
  8236  0F15                     	;# 
  8237  0F16                     	;# 
  8238  0F17                     	;# 
  8239  0F18                     	;# 
  8240  0F19                     	;# 
  8241  0F1A                     	;# 
  8242  0F1B                     	;# 
  8243  0F1C                     	;# 
  8244  0F1D                     	;# 
  8245  0F1E                     	;# 
  8246  0F1F                     	;# 
  8247  0F20                     	;# 
  8248  0F21                     	;# 
  8249  0F22                     	;# 
  8250  0F23                     	;# 
  8251  0F24                     	;# 
  8252  0F25                     	;# 
  8253  0F26                     	;# 
  8254  0F27                     	;# 
  8255  0F28                     	;# 
  8256  0F29                     	;# 
  8257  0F2A                     	;# 
  8258  0F2B                     	;# 
  8259  0F2C                     	;# 
  8260  0F2D                     	;# 
  8261  0F2E                     	;# 
  8262  0F2F                     	;# 
  8263  0F30                     	;# 
  8264  0F31                     	;# 
  8265  0F32                     	;# 
  8266  0F33                     	;# 
  8267  0F34                     	;# 
  8268  0F35                     	;# 
  8269  0F36                     	;# 
  8270  0F37                     	;# 
  8271  0FE4                     	;# 
  8272  0FE5                     	;# 
  8273  0FE6                     	;# 
  8274  0FE7                     	;# 
  8275  0FE8                     	;# 
  8276  0FE9                     	;# 
  8277  0FEA                     	;# 
  8278  0FEB                     	;# 
  8279  0FED                     	;# 
  8280  0FEE                     	;# 
  8281  0FEF                     	;# 
  8282  0000                     	;# 
  8283  0001                     	;# 
  8284  0002                     	;# 
  8285  0003                     	;# 
  8286  0004                     	;# 
  8287  0005                     	;# 
  8288  0006                     	;# 
  8289  0007                     	;# 
  8290  0008                     	;# 
  8291  0009                     	;# 
  8292  000A                     	;# 
  8293  000B                     	;# 
  8294  000C                     	;# 
  8295  000D                     	;# 
  8296  000E                     	;# 
  8297  0010                     	;# 
  8298  0011                     	;# 
  8299  0012                     	;# 
  8300  0013                     	;# 
  8301  0014                     	;# 
  8302  0015                     	;# 
  8303  0015                     	;# 
  8304  0016                     	;# 
  8305  0016                     	;# 
  8306  0017                     	;# 
  8307  0018                     	;# 
  8308  0019                     	;# 
  8309  0019                     	;# 
  8310  001A                     	;# 
  8311  001B                     	;# 
  8312  001C                     	;# 
  8313  001D                     	;# 
  8314  001E                     	;# 
  8315  001F                     	;# 
  8316  008C                     	;# 
  8317  008D                     	;# 
  8318  008E                     	;# 
  8319  0090                     	;# 
  8320  0091                     	;# 
  8321  0092                     	;# 
  8322  0093                     	;# 
  8323  0094                     	;# 
  8324  0097                     	;# 
  8325  009B                     	;# 
  8326  009B                     	;# 
  8327  009C                     	;# 
  8328  009D                     	;# 
  8329  009E                     	;# 
  8330  009F                     	;# 
  8331  010C                     	;# 
  8332  010D                     	;# 
  8333  010E                     	;# 
  8334  0111                     	;# 
  8335  0112                     	;# 
  8336  0113                     	;# 
  8337  0114                     	;# 
  8338  0115                     	;# 
  8339  0116                     	;# 
  8340  0117                     	;# 
  8341  0118                     	;# 
  8342  0119                     	;# 
  8343  018C                     	;# 
  8344  018D                     	;# 
  8345  018E                     	;# 
  8346  0199                     	;# 
  8347  0199                     	;# 
  8348  0199                     	;# 
  8349  019A                     	;# 
  8350  019A                     	;# 
  8351  019A                     	;# 
  8352  019B                     	;# 
  8353  019B                     	;# 
  8354  019B                     	;# 
  8355  019B                     	;# 
  8356  019B                     	;# 
  8357  019C                     	;# 
  8358  019C                     	;# 
  8359  019C                     	;# 
  8360  019D                     	;# 
  8361  019D                     	;# 
  8362  019D                     	;# 
  8363  019E                     	;# 
  8364  019E                     	;# 
  8365  019E                     	;# 
  8366  019F                     	;# 
  8367  019F                     	;# 
  8368  019F                     	;# 
  8369  019F                     	;# 
  8370  019F                     	;# 
  8371  020C                     	;# 
  8372  020D                     	;# 
  8373  020E                     	;# 
  8374  0211                     	;# 
  8375  0211                     	;# 
  8376  0212                     	;# 
  8377  0212                     	;# 
  8378  0213                     	;# 
  8379  0213                     	;# 
  8380  0214                     	;# 
  8381  0214                     	;# 
  8382  0215                     	;# 
  8383  0215                     	;# 
  8384  0215                     	;# 
  8385  0215                     	;# 
  8386  0216                     	;# 
  8387  0216                     	;# 
  8388  0217                     	;# 
  8389  0217                     	;# 
  8390  0219                     	;# 
  8391  021A                     	;# 
  8392  021B                     	;# 
  8393  021C                     	;# 
  8394  021D                     	;# 
  8395  021D                     	;# 
  8396  021E                     	;# 
  8397  021F                     	;# 
  8398  028C                     	;# 
  8399  028D                     	;# 
  8400  028E                     	;# 
  8401  0291                     	;# 
  8402  0291                     	;# 
  8403  0292                     	;# 
  8404  0293                     	;# 
  8405  0294                     	;# 
  8406  0295                     	;# 
  8407  0295                     	;# 
  8408  0296                     	;# 
  8409  0297                     	;# 
  8410  0298                     	;# 
  8411  029F                     	;# 
  8412  030C                     	;# 
  8413  030D                     	;# 
  8414  030E                     	;# 
  8415  0311                     	;# 
  8416  0311                     	;# 
  8417  0312                     	;# 
  8418  0313                     	;# 
  8419  0314                     	;# 
  8420  0315                     	;# 
  8421  0315                     	;# 
  8422  0316                     	;# 
  8423  0317                     	;# 
  8424  0318                     	;# 
  8425  038C                     	;# 
  8426  038D                     	;# 
  8427  038E                     	;# 
  8428  0391                     	;# 
  8429  0392                     	;# 
  8430  0393                     	;# 
  8431  0394                     	;# 
  8432  0395                     	;# 
  8433  0396                     	;# 
  8434  0397                     	;# 
  8435  0398                     	;# 
  8436  0399                     	;# 
  8437  039A                     	;# 
  8438  039C                     	;# 
  8439  039D                     	;# 
  8440  039E                     	;# 
  8441  039F                     	;# 
  8442  0411                     	;# 
  8443  0411                     	;# 
  8444  0412                     	;# 
  8445  0413                     	;# 
  8446  0414                     	;# 
  8447  0415                     	;# 
  8448  0416                     	;# 
  8449  0417                     	;# 
  8450  0418                     	;# 
  8451  0418                     	;# 
  8452  0419                     	;# 
  8453  041A                     	;# 
  8454  041B                     	;# 
  8455  041C                     	;# 
  8456  041D                     	;# 
  8457  041E                     	;# 
  8458  041F                     	;# 
  8459  0498                     	;# 
  8460  0498                     	;# 
  8461  0499                     	;# 
  8462  049A                     	;# 
  8463  049B                     	;# 
  8464  049B                     	;# 
  8465  049C                     	;# 
  8466  049D                     	;# 
  8467  049E                     	;# 
  8468  049F                     	;# 
  8469  0617                     	;# 
  8470  0618                     	;# 
  8471  0619                     	;# 
  8472  0619                     	;# 
  8473  061A                     	;# 
  8474  061B                     	;# 
  8475  061C                     	;# 
  8476  061C                     	;# 
  8477  061F                     	;# 
  8478  0691                     	;# 
  8479  0692                     	;# 
  8480  0693                     	;# 
  8481  0694                     	;# 
  8482  0695                     	;# 
  8483  0696                     	;# 
  8484  0697                     	;# 
  8485  0698                     	;# 
  8486  0699                     	;# 
  8487  0711                     	;# 
  8488  0712                     	;# 
  8489  0713                     	;# 
  8490  0714                     	;# 
  8491  0715                     	;# 
  8492  0716                     	;# 
  8493  0717                     	;# 
  8494  0718                     	;# 
  8495  0719                     	;# 
  8496  0891                     	;# 
  8497  0891                     	;# 
  8498  0891                     	;# 
  8499  0891                     	;# 
  8500  0891                     	;# 
  8501  0891                     	;# 
  8502  0892                     	;# 
  8503  0892                     	;# 
  8504  0892                     	;# 
  8505  0893                     	;# 
  8506  0893                     	;# 
  8507  0893                     	;# 
  8508  0893                     	;# 
  8509  0893                     	;# 
  8510  0893                     	;# 
  8511  0894                     	;# 
  8512  0894                     	;# 
  8513  0894                     	;# 
  8514  0895                     	;# 
  8515  0895                     	;# 
  8516  0895                     	;# 
  8517  0896                     	;# 
  8518  0896                     	;# 
  8519  0896                     	;# 
  8520  089B                     	;# 
  8521  0911                     	;# 
  8522  0912                     	;# 
  8523  0913                     	;# 
  8524  0914                     	;# 
  8525  0915                     	;# 
  8526  0916                     	;# 
  8527  0918                     	;# 
  8528  0919                     	;# 
  8529  091A                     	;# 
  8530  091B                     	;# 
  8531  091C                     	;# 
  8532  091D                     	;# 
  8533  091E                     	;# 
  8534  091F                     	;# 
  8535  0E0F                     	;# 
  8536  0E10                     	;# 
  8537  0E11                     	;# 
  8538  0E12                     	;# 
  8539  0E13                     	;# 
  8540  0E14                     	;# 
  8541  0E15                     	;# 
  8542  0E16                     	;# 
  8543  0E17                     	;# 
  8544  0E18                     	;# 
  8545  0E19                     	;# 
  8546  0E1A                     	;# 
  8547  0E1B                     	;# 
  8548  0E1C                     	;# 
  8549  0E1D                     	;# 
  8550  0E1E                     	;# 
  8551  0E1F                     	;# 
  8552  0E20                     	;# 
  8553  0E21                     	;# 
  8554  0E22                     	;# 
  8555  0E24                     	;# 
  8556  0E25                     	;# 
  8557  0E28                     	;# 
  8558  0E29                     	;# 
  8559  0E2A                     	;# 
  8560  0E2B                     	;# 
  8561  0E2C                     	;# 
  8562  0E2D                     	;# 
  8563  0E2E                     	;# 
  8564  0E2F                     	;# 
  8565  0E90                     	;# 
  8566  0E91                     	;# 
  8567  0E92                     	;# 
  8568  0E94                     	;# 
  8569  0E95                     	;# 
  8570  0E9C                     	;# 
  8571  0E9D                     	;# 
  8572  0E9E                     	;# 
  8573  0E9F                     	;# 
  8574  0EA0                     	;# 
  8575  0EA1                     	;# 
  8576  0EA2                     	;# 
  8577  0EA3                     	;# 
  8578  0EA4                     	;# 
  8579  0EA5                     	;# 
  8580  0EA6                     	;# 
  8581  0EA7                     	;# 
  8582  0F0F                     	;# 
  8583  0F10                     	;# 
  8584  0F11                     	;# 
  8585  0F12                     	;# 
  8586  0F13                     	;# 
  8587  0F14                     	;# 
  8588  0F15                     	;# 
  8589  0F16                     	;# 
  8590  0F17                     	;# 
  8591  0F18                     	;# 
  8592  0F19                     	;# 
  8593  0F1A                     	;# 
  8594  0F1B                     	;# 
  8595  0F1C                     	;# 
  8596  0F1D                     	;# 
  8597  0F1E                     	;# 
  8598  0F1F                     	;# 
  8599  0F20                     	;# 
  8600  0F21                     	;# 
  8601  0F22                     	;# 
  8602  0F23                     	;# 
  8603  0F24                     	;# 
  8604  0F25                     	;# 
  8605  0F26                     	;# 
  8606  0F27                     	;# 
  8607  0F28                     	;# 
  8608  0F29                     	;# 
  8609  0F2A                     	;# 
  8610  0F2B                     	;# 
  8611  0F2C                     	;# 
  8612  0F2D                     	;# 
  8613  0F2E                     	;# 
  8614  0F2F                     	;# 
  8615  0F30                     	;# 
  8616  0F31                     	;# 
  8617  0F32                     	;# 
  8618  0F33                     	;# 
  8619  0F34                     	;# 
  8620  0F35                     	;# 
  8621  0F36                     	;# 
  8622  0F37                     	;# 
  8623  0FE4                     	;# 
  8624  0FE5                     	;# 
  8625  0FE6                     	;# 
  8626  0FE7                     	;# 
  8627  0FE8                     	;# 
  8628  0FE9                     	;# 
  8629  0FEA                     	;# 
  8630  0FEB                     	;# 
  8631  0FED                     	;# 
  8632  0FEE                     	;# 
  8633  0FEF                     	;_asciiCharTableLookup
  8634                           
  8635 ;; Function _menu_Exit is unused but had its address taken
  8636  0000                     
  8637 ;; Function _flashy_Exit is unused but had its address taken
  8638  0000                     
  8639 ;; Function _locked_Exit is unused but had its address taken
  8640  0000                     
  8641 ;; Function _secret_Exit is unused but had its address taken
  8642  0000                     
  8643 ;; Function _slot_Exit is unused but had its address taken
  8644  0000                     
  8645                           	psect	idataBANK1
  8646  18E2                     __pidataBANK1:	
  8647                           
  8648                           ;initializer for _randx
  8649  18E2  3401               	retlw	1
  8650  18E3  3400               	retlw	0
  8651  18E4  3400               	retlw	0
  8652  18E5  3400               	retlw	0
  8653                           
  8654                           ;initializer for _locked_lock_base_leds
  8655  18E6  341F               	retlw	31
  8656  18E7  34F8               	retlw	248
  8657                           
  8658                           ;initializer for _FLASHY_TEXT_SECRET_TEST
  8659  18E8  340A               	retlw	low (STR_9| (0+32768))
  8660  18E9  34A0               	retlw	high (STR_9| (0+32768))
  8661                           
  8662                           ;initializer for _FLASHY_TEXT
  8663  18EA  346A               	retlw	low (STR_8| (0+32768))
  8664  18EB  34A0               	retlw	high (STR_8| (0+32768))
  8665                           
  8666                           	psect	idataBANK2
  8667  1BED                     __pidataBANK2:	
  8668                           
  8669                           ;initializer for _locked_locking_leds
  8670  1BED  3400               	retlw	0
  8671  1BEE  3400               	retlw	0
  8672  1BEF  3420               	retlw	32
  8673  1BF0  3400               	retlw	0
  8674  1BF1  3460               	retlw	96
  8675  1BF2  3400               	retlw	0
  8676  1BF3  34E0               	retlw	224
  8677  1BF4  3400               	retlw	0
  8678  1BF5  34E0               	retlw	224
  8679  1BF6  3401               	retlw	1
  8680  1BF7  34E0               	retlw	224
  8681  1BF8  3403               	retlw	3
  8682                           
  8683                           ;initializer for _flashy_option
  8684  1BF9  346A               	retlw	low (STR_8| (0+32768))
  8685  1BFA  34A0               	retlw	high (STR_8| (0+32768))
  8686  1BFB  3433               	retlw	low (STR_11| (0+32768))
  8687  1BFC  34A0               	retlw	high (STR_11| (0+32768))
  8688  1BFD  343C               	retlw	low (STR_12| (0+32768))
  8689  1BFE  34A0               	retlw	high (STR_12| (0+32768))
  8690  1BFF  3444               	retlw	low (STR_13| (0+32768))
  8691  1C00  34A0               	retlw	high (STR_13| (0+32768))
  8692                           
  8693                           ;initializer for _menu_option
  8694  1C01  346F               	retlw	low (STR_4| (0+32768))
  8695  1C02  34A0               	retlw	high (STR_4| (0+32768))
  8696  1C03  3450               	retlw	low (STR_5| (0+32768))
  8697  1C04  34A0               	retlw	high (STR_5| (0+32768))
  8698  1C05  3429               	retlw	low (STR_6| (0+32768))
  8699  1C06  34A0               	retlw	high (STR_6| (0+32768))
  8700  1C07  344A               	retlw	low (STR_7| (0+32768))
  8701  1C08  34A0               	retlw	high (STR_7| (0+32768))
  8702                           
  8703                           ;initializer for marquee@F14020
  8704  1C09  3420               	retlw	32
  8705  1C0A  3420               	retlw	32
  8706  1C0B  3420               	retlw	32
  8707  1C0C  3420               	retlw	32
  8708  1C0D  3400               	retlw	0
  8709                           
  8710                           	psect	idataBANK3
  8711  1C31                     __pidataBANK3:	
  8712                           
  8713                           ;initializer for _menu_options_leds
  8714  1C31  3400               	retlw	0
  8715  1C32  3402               	retlw	2
  8716  1C33  3400               	retlw	0
  8717  1C34  3401               	retlw	1
  8718  1C35  3480               	retlw	128
  8719  1C36  3400               	retlw	0
  8720  1C37  3440               	retlw	64
  8721  1C38  3400               	retlw	0
  8722  1C39  3420               	retlw	32
  8723  1C3A  3400               	retlw	0
  8724                           
  8725                           ;initializer for _secret_inputs
  8726  1C3B  3401               	retlw	1
  8727  1C3C  3401               	retlw	1
  8728  1C3D  3402               	retlw	2
  8729  1C3E  3402               	retlw	2
  8730  1C3F  3401               	retlw	1
  8731  1C40  3402               	retlw	2
  8732  1C41  3401               	retlw	1
  8733  1C42  3402               	retlw	2
  8734  1C43  3404               	retlw	4
  8735  1C44  3408               	retlw	8
  8736  1C45  3400               	retlw	0
  8737  1C46  3400               	retlw	0
  8738  1C47  3400               	retlw	0
  8739  1C48  3400               	retlw	0
  8740  1C49  3400               	retlw	0
  8741  1C4A  3400               	retlw	0
  8742  1C4B  3400               	retlw	0
  8743  1C4C  3400               	retlw	0
  8744  1C4D  3400               	retlw	0
  8745  1C4E  3400               	retlw	0
  8746  1C4F  3400               	retlw	0
  8747  1C50  3400               	retlw	0
  8748  1C51  34E3               	retlw	low (_secret_value| 0)
  8749  1C52  3401               	retlw	1
  8750  1C53  3400               	retlw	0
  8751                           
  8752                           	psect	idataBANK5
  8753  1AFC                     __pidataBANK5:	
  8754                           
  8755                           ;initializer for _roundabout_leds
  8756  1AFC  3480               	retlw	128
  8757  1AFD  3400               	retlw	0
  8758  1AFE  3400               	retlw	0
  8759  1AFF  3401               	retlw	1
  8760  1B00  3400               	retlw	0
  8761  1B01  3402               	retlw	2
  8762  1B02  3400               	retlw	0
  8763  1B03  3408               	retlw	8
  8764  1B04  3400               	retlw	0
  8765  1B05  3410               	retlw	16
  8766  1B06  3400               	retlw	0
  8767  1B07  3420               	retlw	32
  8768  1B08  3400               	retlw	0
  8769  1B09  3440               	retlw	64
  8770  1B0A  3400               	retlw	0
  8771  1B0B  3480               	retlw	128
  8772  1B0C  3400               	retlw	0
  8773  1B0D  3440               	retlw	64
  8774  1B0E  3400               	retlw	0
  8775  1B0F  3420               	retlw	32
  8776  1B10  3400               	retlw	0
  8777  1B11  3410               	retlw	16
  8778  1B12  3400               	retlw	0
  8779  1B13  3408               	retlw	8
  8780  1B14  3400               	retlw	0
  8781  1B15  3402               	retlw	2
  8782  1B16  3400               	retlw	0
  8783  1B17  3401               	retlw	1
  8784                           
  8785                           	psect	idataBANK6
  8786  1DFF                     __pidataBANK6:	
  8787                           
  8788                           ;initializer for _curtain_leds
  8789  1DFF  3480               	retlw	128
  8790  1E00  3400               	retlw	0
  8791  1E01  3480               	retlw	128
  8792  1E02  3401               	retlw	1
  8793  1E03  3480               	retlw	128
  8794  1E04  3403               	retlw	3
  8795  1E05  3480               	retlw	128
  8796  1E06  340B               	retlw	11
  8797  1E07  3480               	retlw	128
  8798  1E08  341B               	retlw	27
  8799  1E09  3480               	retlw	128
  8800  1E0A  343B               	retlw	59
  8801  1E0B  3480               	retlw	128
  8802  1E0C  347B               	retlw	123
  8803  1E0D  3480               	retlw	128
  8804  1E0E  34FB               	retlw	251
  8805  1E0F  3480               	retlw	128
  8806  1E10  347B               	retlw	123
  8807  1E11  3480               	retlw	128
  8808  1E12  343B               	retlw	59
  8809  1E13  3480               	retlw	128
  8810  1E14  341B               	retlw	27
  8811  1E15  3480               	retlw	128
  8812  1E16  340B               	retlw	11
  8813  1E17  3480               	retlw	128
  8814  1E18  3403               	retlw	3
  8815  1E19  3480               	retlw	128
  8816  1E1A  3401               	retlw	1
  8817                           
  8818                           ;initializer for _roundabout_leds_inverse
  8819  1E1B  3480               	retlw	128
  8820  1E1C  3400               	retlw	0
  8821  1E1D  3440               	retlw	64
  8822  1E1E  3400               	retlw	0
  8823  1E1F  3420               	retlw	32
  8824  1E20  3400               	retlw	0
  8825  1E21  3410               	retlw	16
  8826  1E22  3400               	retlw	0
  8827  1E23  3408               	retlw	8
  8828  1E24  3400               	retlw	0
  8829  1E25  3404               	retlw	4
  8830  1E26  3400               	retlw	0
  8831  1E27  3402               	retlw	2
  8832  1E28  3400               	retlw	0
  8833  1E29  3401               	retlw	1
  8834  1E2A  3400               	retlw	0
  8835  1E2B  3402               	retlw	2
  8836  1E2C  3400               	retlw	0
  8837  1E2D  3404               	retlw	4
  8838  1E2E  3400               	retlw	0
  8839  1E2F  3408               	retlw	8
  8840  1E30  3400               	retlw	0
  8841  1E31  3410               	retlw	16
  8842  1E32  3400               	retlw	0
  8843  1E33  3420               	retlw	32
  8844  1E34  3400               	retlw	0
  8845  1E35  3440               	retlw	64
  8846  1E36  3400               	retlw	0
  8847                           
  8848                           	psect	idataBANK7
  8849  1AE0                     __pidataBANK7:	
  8850                           
  8851                           ;initializer for _curtain_leds_inverse
  8852  1AE0  3480               	retlw	128
  8853  1AE1  3400               	retlw	0
  8854  1AE2  34C0               	retlw	192
  8855  1AE3  3400               	retlw	0
  8856  1AE4  34E0               	retlw	224
  8857  1AE5  3400               	retlw	0
  8858  1AE6  34F0               	retlw	240
  8859  1AE7  3400               	retlw	0
  8860  1AE8  34F8               	retlw	248
  8861  1AE9  3400               	retlw	0
  8862  1AEA  34FC               	retlw	252
  8863  1AEB  3400               	retlw	0
  8864  1AEC  34FE               	retlw	254
  8865  1AED  3400               	retlw	0
  8866  1AEE  34FF               	retlw	255
  8867  1AEF  3400               	retlw	0
  8868  1AF0  34FE               	retlw	254
  8869  1AF1  3400               	retlw	0
  8870  1AF2  34FC               	retlw	252
  8871  1AF3  3400               	retlw	0
  8872  1AF4  34F8               	retlw	248
  8873  1AF5  3400               	retlw	0
  8874  1AF6  34F0               	retlw	240
  8875  1AF7  3400               	retlw	0
  8876  1AF8  34E0               	retlw	224
  8877  1AF9  3400               	retlw	0
  8878  1AFA  34C0               	retlw	192
  8879  1AFB  3400               	retlw	0
  8880                           
  8881                           	psect	idataBIGRAM
  8882  1700                     __pidataBIGRAM:	
  8883                           
  8884                           ;initializer for _asciiCharTableLookup
  8885  1700  3400               	retlw	0
  8886  1701  3400               	retlw	0
  8887  1702  3400               	retlw	0
  8888  1703  3420               	retlw	32
  8889  1704  3410               	retlw	16
  8890  1705  3410               	retlw	16
  8891  1706  3420               	retlw	32
  8892  1707  3400               	retlw	0
  8893  1708  3410               	retlw	16
  8894  1709  3410               	retlw	16
  8895  170A  34A5               	retlw	165
  8896  170B  3421               	retlw	33
  8897  170C  34A5               	retlw	165
  8898  170D  3460               	retlw	96
  8899  170E  3410               	retlw	16
  8900  170F  3430               	retlw	48
  8901  1710  3400               	retlw	0
  8902  1711  3412               	retlw	18
  8903  1712  3410               	retlw	16
  8904  1713  3408               	retlw	8
  8905  1714  3420               	retlw	32
  8906  1715  3420               	retlw	32
  8907  1716  3485               	retlw	133
  8908  1717  3445               	retlw	69
  8909  1718  34B1               	retlw	177
  8910  1719  3430               	retlw	48
  8911  171A  3410               	retlw	16
  8912  171B  3410               	retlw	16
  8913  171C  3410               	retlw	16
  8914  171D  3410               	retlw	16
  8915  171E  3410               	retlw	16
  8916  171F  3410               	retlw	16
  8917  1720  3410               	retlw	16
  8918  1721  3410               	retlw	16
  8919  1722  3410               	retlw	16
  8920  1723  3410               	retlw	16
  8921  1724  3410               	retlw	16
  8922  1725  3410               	retlw	16
  8923  1726  3410               	retlw	16
  8924  1727  3410               	retlw	16
  8925  1728  3410               	retlw	16
  8926  1729  3410               	retlw	16
  8927  172A  3410               	retlw	16
  8928  172B  3410               	retlw	16
  8929  172C  3410               	retlw	16
  8930  172D  3410               	retlw	16
  8931  172E  3410               	retlw	16
  8932  172F  3410               	retlw	16
  8933  1730  3410               	retlw	16
  8934  1731  3410               	retlw	16
  8935  1732  3410               	retlw	16
  8936  1733  3410               	retlw	16
  8937  1734  3410               	retlw	16
  8938  1735  3410               	retlw	16
  8939  1736  3410               	retlw	16
  8940  1737  3410               	retlw	16
  8941  1738  3410               	retlw	16
  8942  1739  3410               	retlw	16
  8943  173A  3410               	retlw	16
  8944  173B  3410               	retlw	16
  8945  173C  3410               	retlw	16
  8946  173D  3410               	retlw	16
  8947  173E  3410               	retlw	16
  8948  173F  3410               	retlw	16
  8949  1740  3400               	retlw	0
  8950  1741  3400               	retlw	0
  8951  1742  34C0               	retlw	192
  8952  1743  3440               	retlw	64
  8953  1744  3400               	retlw	0
  8954  1745  3444               	retlw	68
  8955  1746  3410               	retlw	16
  8956  1747  3410               	retlw	16
  8957  1748  34B4               	retlw	180
  8958  1749  3435               	retlw	53
  8959  174A  3410               	retlw	16
  8960  174B  3410               	retlw	16
  8961  174C  3410               	retlw	16
  8962  174D  3410               	retlw	16
  8963  174E  3400               	retlw	0
  8964  174F  3404               	retlw	4
  8965  1750  3408               	retlw	8
  8966  1751  3408               	retlw	8
  8967  1752  3402               	retlw	2
  8968  1753  3402               	retlw	2
  8969  1754  341E               	retlw	30
  8970  1755  341E               	retlw	30
  8971  1756  3414               	retlw	20
  8972  1757  3414               	retlw	20
  8973  1758  3440               	retlw	64
  8974  1759  3400               	retlw	0
  8975  175A  3410               	retlw	16
  8976  175B  3410               	retlw	16
  8977  175C  3440               	retlw	64
  8978  175D  3400               	retlw	0
  8979  175E  3402               	retlw	2
  8980  175F  3408               	retlw	8
  8981  1760  34A9               	retlw	169
  8982  1761  3463               	retlw	99
  8983  1762  3480               	retlw	128
  8984  1763  3440               	retlw	64
  8985  1764  3431               	retlw	49
  8986  1765  3470               	retlw	112
  8987  1766  34B0               	retlw	176
  8988  1767  3460               	retlw	96
  8989  1768  3490               	retlw	144
  8990  1769  3451               	retlw	81
  8991  176A  34B0               	retlw	176
  8992  176B  3431               	retlw	49
  8993  176C  34B1               	retlw	177
  8994  176D  3431               	retlw	49
  8995  176E  3480               	retlw	128
  8996  176F  3460               	retlw	96
  8997  1770  34B1               	retlw	177
  8998  1771  3471               	retlw	113
  8999  1772  3490               	retlw	144
  9000  1773  3471               	retlw	113
  9001  1774  3410               	retlw	16
  9002  1775  3410               	retlw	16
  9003  1776  3410               	retlw	16
  9004  1777  3410               	retlw	16
  9005  1778  3408               	retlw	8
  9006  1779  3408               	retlw	8
  9007  177A  3430               	retlw	48
  9008  177B  3410               	retlw	16
  9009  177C  3402               	retlw	2
  9010  177D  3402               	retlw	2
  9011  177E  3414               	retlw	20
  9012  177F  34E1               	retlw	225
  9013  1780  34A5               	retlw	165
  9014  1781  3470               	retlw	112
  9015  1782  3491               	retlw	145
  9016  1783  3471               	retlw	113
  9017  1784  34B1               	retlw	177
  9018  1785  3411               	retlw	17
  9019  1786  3421               	retlw	33
  9020  1787  3421               	retlw	33
  9021  1788  34B1               	retlw	177
  9022  1789  3450               	retlw	80
  9023  178A  3421               	retlw	33
  9024  178B  3431               	retlw	49
  9025  178C  3401               	retlw	1
  9026  178D  3431               	retlw	49
  9027  178E  34B1               	retlw	177
  9028  178F  3421               	retlw	33
  9029  1790  3491               	retlw	145
  9030  1791  3451               	retlw	81
  9031  1792  3424               	retlw	36
  9032  1793  3424               	retlw	36
  9033  1794  34A1               	retlw	161
  9034  1795  3440               	retlw	64
  9035  1796  3409               	retlw	9
  9036  1797  3419               	retlw	25
  9037  1798  3421               	retlw	33
  9038  1799  3401               	retlw	1
  9039  179A  3481               	retlw	129
  9040  179B  344B               	retlw	75
  9041  179C  3489               	retlw	137
  9042  179D  3443               	retlw	67
  9043  179E  34A1               	retlw	161
  9044  179F  3461               	retlw	97
  9045  17A0  3411               	retlw	17
  9046  17A1  3471               	retlw	113
  9047  17A2  34A9               	retlw	169
  9048  17A3  3461               	retlw	97
  9049  17A4  3419               	retlw	25
  9050  17A5  3471               	retlw	113
  9051  17A6  34B0               	retlw	176
  9052  17A7  3431               	retlw	49
  9053  17A8  3404               	retlw	4
  9054  17A9  3424               	retlw	36
  9055  17AA  34A1               	retlw	161
  9056  17AB  3441               	retlw	65
  9057  17AC  3403               	retlw	3
  9058  17AD  3409               	retlw	9
  9059  17AE  348B               	retlw	139
  9060  17AF  3441               	retlw	65
  9061  17B0  340A               	retlw	10
  9062  17B1  340A               	retlw	10
  9063  17B2  3404               	retlw	4
  9064  17B3  340A               	retlw	10
  9065  17B4  3422               	retlw	34
  9066  17B5  3428               	retlw	40
  9067  17B6  3421               	retlw	33
  9068  17B7  3421               	retlw	33
  9069  17B8  3408               	retlw	8
  9070  17B9  3402               	retlw	2
  9071  17BA  34A0               	retlw	160
  9072  17BB  3460               	retlw	96
  9073  17BC  340A               	retlw	10
  9074  17BD  3400               	retlw	0
  9075  17BE  3420               	retlw	32
  9076  17BF  3400               	retlw	0
  9077  17C0  3410               	retlw	16
  9078  17C1  3410               	retlw	16
  9079  17C2  3491               	retlw	145
  9080  17C3  3471               	retlw	113
  9081  17C4  34B1               	retlw	177
  9082  17C5  3411               	retlw	17
  9083  17C6  3431               	retlw	49
  9084  17C7  3410               	retlw	16
  9085  17C8  34B1               	retlw	177
  9086  17C9  3450               	retlw	80
  9087  17CA  3421               	retlw	33
  9088  17CB  3431               	retlw	49
  9089  17CC  3401               	retlw	1
  9090  17CD  3431               	retlw	49
  9091  17CE  34B1               	retlw	177
  9092  17CF  3421               	retlw	33
  9093  17D0  3491               	retlw	145
  9094  17D1  3451               	retlw	81
  9095  17D2  3424               	retlw	36
  9096  17D3  3424               	retlw	36
  9097  17D4  34A1               	retlw	161
  9098  17D5  3440               	retlw	64
  9099  17D6  3409               	retlw	9
  9100  17D7  3419               	retlw	25
  9101  17D8  3421               	retlw	33
  9102  17D9  3401               	retlw	1
  9103  17DA  3481               	retlw	129
  9104  17DB  344B               	retlw	75
  9105  17DC  3489               	retlw	137
  9106  17DD  3443               	retlw	67
  9107  17DE  34A1               	retlw	161
  9108  17DF  3461               	retlw	97
  9109  17E0  3411               	retlw	17
  9110  17E1  3471               	retlw	113
  9111  17E2  34A9               	retlw	169
  9112  17E3  3461               	retlw	97
  9113  17E4  3419               	retlw	25
  9114  17E5  3471               	retlw	113
  9115  17E6  34B0               	retlw	176
  9116  17E7  3431               	retlw	49
  9117  17E8  3404               	retlw	4
  9118  17E9  3424               	retlw	36
  9119  17EA  34A1               	retlw	161
  9120  17EB  3441               	retlw	65
  9121  17EC  3403               	retlw	3
  9122  17ED  3409               	retlw	9
  9123  17EE  348B               	retlw	139
  9124  17EF  3441               	retlw	65
  9125  17F0  340A               	retlw	10
  9126  17F1  340A               	retlw	10
  9127  17F2  3404               	retlw	4
  9128  17F3  340A               	retlw	10
  9129  17F4  3422               	retlw	34
  9130  17F5  3428               	retlw	40
  9131  17F6  3410               	retlw	16
  9132  17F7  3410               	retlw	16
  9133  17F8  3404               	retlw	4
  9134  17F9  3404               	retlw	4
  9135  17FA  3410               	retlw	16
  9136  17FB  3410               	retlw	16
  9137  17FC  3410               	retlw	16
  9138  17FD  3410               	retlw	16
  9139  17FE  34FF               	retlw	255
  9140  17FF  34FF               	retlw	255
  9141                           
  9142                           	psect	stringtext1
  9143  06A9                     __pstringtext1:	
  9144  06A9                     _gamma_table_256x1k:	
  9145  06A9  3400               	retlw	0
  9146  06AA  3400               	retlw	0
  9147  06AB  3400               	retlw	0
  9148  06AC  3400               	retlw	0
  9149  06AD  3400               	retlw	0
  9150  06AE  3400               	retlw	0
  9151  06AF  3400               	retlw	0
  9152  06B0  3400               	retlw	0
  9153  06B1  3400               	retlw	0
  9154  06B2  3400               	retlw	0
  9155  06B3  3400               	retlw	0
  9156  06B4  3400               	retlw	0
  9157  06B5  3400               	retlw	0
  9158  06B6  3400               	retlw	0
  9159  06B7  3400               	retlw	0
  9160  06B8  3400               	retlw	0
  9161  06B9  3400               	retlw	0
  9162  06BA  3400               	retlw	0
  9163  06BB  3400               	retlw	0
  9164  06BC  3400               	retlw	0
  9165  06BD  3400               	retlw	0
  9166  06BE  3400               	retlw	0
  9167  06BF  3400               	retlw	0
  9168  06C0  3400               	retlw	0
  9169  06C1  3400               	retlw	0
  9170  06C2  3400               	retlw	0
  9171  06C3  3400               	retlw	0
  9172  06C4  3400               	retlw	0
  9173  06C5  3400               	retlw	0
  9174  06C6  3400               	retlw	0
  9175  06C7  3401               	retlw	1
  9176  06C8  3400               	retlw	0
  9177  06C9  3401               	retlw	1
  9178  06CA  3400               	retlw	0
  9179  06CB  3401               	retlw	1
  9180  06CC  3400               	retlw	0
  9181  06CD  3401               	retlw	1
  9182  06CE  3400               	retlw	0
  9183  06CF  3401               	retlw	1
  9184  06D0  3400               	retlw	0
  9185  06D1  3401               	retlw	1
  9186  06D2  3400               	retlw	0
  9187  06D3  3402               	retlw	2
  9188  06D4  3400               	retlw	0
  9189  06D5  3402               	retlw	2
  9190  06D6  3400               	retlw	0
  9191  06D7  3402               	retlw	2
  9192  06D8  3400               	retlw	0
  9193  06D9  3403               	retlw	3
  9194  06DA  3400               	retlw	0
  9195  06DB  3403               	retlw	3
  9196  06DC  3400               	retlw	0
  9197  06DD  3403               	retlw	3
  9198  06DE  3400               	retlw	0
  9199  06DF  3404               	retlw	4
  9200  06E0  3400               	retlw	0
  9201  06E1  3404               	retlw	4
  9202  06E2  3400               	retlw	0
  9203  06E3  3404               	retlw	4
  9204  06E4  3400               	retlw	0
  9205  06E5  3405               	retlw	5
  9206  06E6  3400               	retlw	0
  9207  06E7  3405               	retlw	5
  9208  06E8  3400               	retlw	0
  9209  06E9  3406               	retlw	6
  9210  06EA  3400               	retlw	0
  9211  06EB  3406               	retlw	6
  9212  06EC  3400               	retlw	0
  9213  06ED  3407               	retlw	7
  9214  06EE  3400               	retlw	0
  9215  06EF  3407               	retlw	7
  9216  06F0  3400               	retlw	0
  9217  06F1  3408               	retlw	8
  9218  06F2  3400               	retlw	0
  9219  06F3  3408               	retlw	8
  9220  06F4  3400               	retlw	0
  9221  06F5  3409               	retlw	9
  9222  06F6  3400               	retlw	0
  9223  06F7  3409               	retlw	9
  9224  06F8  3400               	retlw	0
  9225  06F9  340A               	retlw	10
  9226  06FA  3400               	retlw	0
  9227  06FB  340B               	retlw	11
  9228  06FC  3400               	retlw	0
  9229  06FD  340B               	retlw	11
  9230  06FE  3400               	retlw	0
  9231  06FF  340C               	retlw	12
  9232  0700  3400               	retlw	0
  9233  0701  340D               	retlw	13
  9234  0702  3400               	retlw	0
  9235  0703  340E               	retlw	14
  9236  0704  3400               	retlw	0
  9237  0705  340E               	retlw	14
  9238  0706  3400               	retlw	0
  9239  0707  340F               	retlw	15
  9240  0708  3400               	retlw	0
  9241  0709  3410               	retlw	16
  9242  070A  3400               	retlw	0
  9243  070B  3411               	retlw	17
  9244  070C  3400               	retlw	0
  9245  070D  3412               	retlw	18
  9246  070E  3400               	retlw	0
  9247  070F  3413               	retlw	19
  9248  0710  3400               	retlw	0
  9249  0711  3413               	retlw	19
  9250  0712  3400               	retlw	0
  9251  0713  3414               	retlw	20
  9252  0714  3400               	retlw	0
  9253  0715  3415               	retlw	21
  9254  0716  3400               	retlw	0
  9255  0717  3416               	retlw	22
  9256  0718  3400               	retlw	0
  9257  0719  3417               	retlw	23
  9258  071A  3400               	retlw	0
  9259  071B  3419               	retlw	25
  9260  071C  3400               	retlw	0
  9261  071D  341A               	retlw	26
  9262  071E  3400               	retlw	0
  9263  071F  341B               	retlw	27
  9264  0720  3400               	retlw	0
  9265  0721  341C               	retlw	28
  9266  0722  3400               	retlw	0
  9267  0723  341D               	retlw	29
  9268  0724  3400               	retlw	0
  9269  0725  341E               	retlw	30
  9270  0726  3400               	retlw	0
  9271  0727  3420               	retlw	32
  9272  0728  3400               	retlw	0
  9273  0729  3421               	retlw	33
  9274  072A  3400               	retlw	0
  9275  072B  3422               	retlw	34
  9276  072C  3400               	retlw	0
  9277  072D  3423               	retlw	35
  9278  072E  3400               	retlw	0
  9279  072F  3425               	retlw	37
  9280  0730  3400               	retlw	0
  9281  0731  3426               	retlw	38
  9282  0732  3400               	retlw	0
  9283  0733  3428               	retlw	40
  9284  0734  3400               	retlw	0
  9285  0735  3429               	retlw	41
  9286  0736  3400               	retlw	0
  9287  0737  342A               	retlw	42
  9288  0738  3400               	retlw	0
  9289  0739  342C               	retlw	44
  9290  073A  3400               	retlw	0
  9291  073B  342E               	retlw	46
  9292  073C  3400               	retlw	0
  9293  073D  342F               	retlw	47
  9294  073E  3400               	retlw	0
  9295  073F  3431               	retlw	49
  9296  0740  3400               	retlw	0
  9297  0741  3432               	retlw	50
  9298  0742  3400               	retlw	0
  9299  0743  3434               	retlw	52
  9300  0744  3400               	retlw	0
  9301  0745  3436               	retlw	54
  9302  0746  3400               	retlw	0
  9303  0747  3437               	retlw	55
  9304  0748  3400               	retlw	0
  9305  0749  3439               	retlw	57
  9306  074A  3400               	retlw	0
  9307  074B  343B               	retlw	59
  9308  074C  3400               	retlw	0
  9309  074D  343D               	retlw	61
  9310  074E  3400               	retlw	0
  9311  074F  343F               	retlw	63
  9312  0750  3400               	retlw	0
  9313  0751  3441               	retlw	65
  9314  0752  3400               	retlw	0
  9315  0753  3442               	retlw	66
  9316  0754  3400               	retlw	0
  9317  0755  3444               	retlw	68
  9318  0756  3400               	retlw	0
  9319  0757  3446               	retlw	70
  9320  0758  3400               	retlw	0
  9321  0759  3448               	retlw	72
  9322  075A  3400               	retlw	0
  9323  075B  344B               	retlw	75
  9324  075C  3400               	retlw	0
  9325  075D  344D               	retlw	77
  9326  075E  3400               	retlw	0
  9327  075F  344F               	retlw	79
  9328  0760  3400               	retlw	0
  9329  0761  3451               	retlw	81
  9330  0762  3400               	retlw	0
  9331  0763  3453               	retlw	83
  9332  0764  3400               	retlw	0
  9333  0765  3455               	retlw	85
  9334  0766  3400               	retlw	0
  9335  0767  3458               	retlw	88
  9336  0768  3400               	retlw	0
  9337  0769  345A               	retlw	90
  9338  076A  3400               	retlw	0
  9339  076B  345C               	retlw	92
  9340  076C  3400               	retlw	0
  9341  076D  345F               	retlw	95
  9342  076E  3400               	retlw	0
  9343  076F  3461               	retlw	97
  9344  0770  3400               	retlw	0
  9345  0771  3464               	retlw	100
  9346  0772  3400               	retlw	0
  9347  0773  3466               	retlw	102
  9348  0774  3400               	retlw	0
  9349  0775  3469               	retlw	105
  9350  0776  3400               	retlw	0
  9351  0777  346B               	retlw	107
  9352  0778  3400               	retlw	0
  9353  0779  346E               	retlw	110
  9354  077A  3400               	retlw	0
  9355  077B  3470               	retlw	112
  9356  077C  3400               	retlw	0
  9357  077D  3473               	retlw	115
  9358  077E  3400               	retlw	0
  9359  077F  3476               	retlw	118
  9360  0780  3400               	retlw	0
  9361  0781  3479               	retlw	121
  9362  0782  3400               	retlw	0
  9363  0783  347B               	retlw	123
  9364  0784  3400               	retlw	0
  9365  0785  347E               	retlw	126
  9366  0786  3400               	retlw	0
  9367  0787  3481               	retlw	129
  9368  0788  3400               	retlw	0
  9369  0789  3484               	retlw	132
  9370  078A  3400               	retlw	0
  9371  078B  3487               	retlw	135
  9372  078C  3400               	retlw	0
  9373  078D  348A               	retlw	138
  9374  078E  3400               	retlw	0
  9375  078F  348D               	retlw	141
  9376  0790  3400               	retlw	0
  9377  0791  3490               	retlw	144
  9378  0792  3400               	retlw	0
  9379  0793  3493               	retlw	147
  9380  0794  3400               	retlw	0
  9381  0795  3496               	retlw	150
  9382  0796  3400               	retlw	0
  9383  0797  349A               	retlw	154
  9384  0798  3400               	retlw	0
  9385  0799  349D               	retlw	157
  9386  079A  3400               	retlw	0
  9387  079B  34A0               	retlw	160
  9388  079C  3400               	retlw	0
  9389  079D  34A3               	retlw	163
  9390  079E  3400               	retlw	0
  9391  079F  34A7               	retlw	167
  9392  07A0  3400               	retlw	0
  9393  07A1  34AA               	retlw	170
  9394  07A2  3400               	retlw	0
  9395  07A3  34AE               	retlw	174
  9396  07A4  3400               	retlw	0
  9397  07A5  34B1               	retlw	177
  9398  07A6  3400               	retlw	0
  9399  07A7  34B5               	retlw	181
  9400  07A8  3400               	retlw	0
  9401  07A9  34B8               	retlw	184
  9402  07AA  3400               	retlw	0
  9403  07AB  34BC               	retlw	188
  9404  07AC  3400               	retlw	0
  9405  07AD  34BF               	retlw	191
  9406  07AE  3400               	retlw	0
  9407  07AF  34C3               	retlw	195
  9408  07B0  3400               	retlw	0
  9409  07B1  34C7               	retlw	199
  9410  07B2  3400               	retlw	0
  9411  07B3  34CA               	retlw	202
  9412  07B4  3400               	retlw	0
  9413  07B5  34CE               	retlw	206
  9414  07B6  3400               	retlw	0
  9415  07B7  34D2               	retlw	210
  9416  07B8  3400               	retlw	0
  9417  07B9  34D6               	retlw	214
  9418  07BA  3400               	retlw	0
  9419  07BB  34DA               	retlw	218
  9420  07BC  3400               	retlw	0
  9421  07BD  34DE               	retlw	222
  9422  07BE  3400               	retlw	0
  9423  07BF  34E2               	retlw	226
  9424  07C0  3400               	retlw	0
  9425  07C1  34E6               	retlw	230
  9426  07C2  3400               	retlw	0
  9427  07C3  34EA               	retlw	234
  9428  07C4  3400               	retlw	0
  9429  07C5  34EE               	retlw	238
  9430  07C6  3400               	retlw	0
  9431  07C7  34F3               	retlw	243
  9432  07C8  3400               	retlw	0
  9433  07C9  34F7               	retlw	247
  9434  07CA  3400               	retlw	0
  9435  07CB  34FB               	retlw	251
  9436  07CC  3400               	retlw	0
  9437  07CD  34FF               	retlw	255
  9438  07CE  3400               	retlw	0
  9439  07CF  3404               	retlw	4
  9440  07D0  3401               	retlw	1
  9441  07D1  3408               	retlw	8
  9442  07D2  3401               	retlw	1
  9443  07D3  340D               	retlw	13
  9444  07D4  3401               	retlw	1
  9445  07D5  3411               	retlw	17
  9446  07D6  3401               	retlw	1
  9447  07D7  3416               	retlw	22
  9448  07D8  3401               	retlw	1
  9449  07D9  341A               	retlw	26
  9450  07DA  3401               	retlw	1
  9451  07DB  341F               	retlw	31
  9452  07DC  3401               	retlw	1
  9453  07DD  3424               	retlw	36
  9454  07DE  3401               	retlw	1
  9455  07DF  3428               	retlw	40
  9456  07E0  3401               	retlw	1
  9457  07E1  342D               	retlw	45
  9458  07E2  3401               	retlw	1
  9459  07E3  3432               	retlw	50
  9460  07E4  3401               	retlw	1
  9461  07E5  3437               	retlw	55
  9462  07E6  3401               	retlw	1
  9463  07E7  343C               	retlw	60
  9464  07E8  3401               	retlw	1
  9465  07E9  3441               	retlw	65
  9466  07EA  3401               	retlw	1
  9467  07EB  3446               	retlw	70
  9468  07EC  3401               	retlw	1
  9469  07ED  344B               	retlw	75
  9470  07EE  3401               	retlw	1
  9471  07EF  3450               	retlw	80
  9472  07F0  3401               	retlw	1
  9473  07F1  3455               	retlw	85
  9474  07F2  3401               	retlw	1
  9475  07F3  345A               	retlw	90
  9476  07F4  3401               	retlw	1
  9477  07F5  345F               	retlw	95
  9478  07F6  3401               	retlw	1
  9479  07F7  3465               	retlw	101
  9480  07F8  3401               	retlw	1
  9481  07F9  346A               	retlw	106
  9482  07FA  3401               	retlw	1
  9483  07FB  346F               	retlw	111
  9484  07FC  3401               	retlw	1
  9485  07FD  3475               	retlw	117
  9486  07FE  3401               	retlw	1
  9487  07FF  347A               	retlw	122
  9488  0800  3401               	retlw	1
  9489  0801  3480               	retlw	128
  9490  0802  3401               	retlw	1
  9491  0803  3486               	retlw	134
  9492  0804  3401               	retlw	1
  9493  0805  348B               	retlw	139
  9494  0806  3401               	retlw	1
  9495  0807  3491               	retlw	145
  9496  0808  3401               	retlw	1
  9497  0809  3497               	retlw	151
  9498  080A  3401               	retlw	1
  9499  080B  349C               	retlw	156
  9500  080C  3401               	retlw	1
  9501  080D  34A2               	retlw	162
  9502  080E  3401               	retlw	1
  9503  080F  34A8               	retlw	168
  9504  0810  3401               	retlw	1
  9505  0811  34AE               	retlw	174
  9506  0812  3401               	retlw	1
  9507  0813  34B4               	retlw	180
  9508  0814  3401               	retlw	1
  9509  0815  34BA               	retlw	186
  9510  0816  3401               	retlw	1
  9511  0817  34C0               	retlw	192
  9512  0818  3401               	retlw	1
  9513  0819  34C6               	retlw	198
  9514  081A  3401               	retlw	1
  9515  081B  34CC               	retlw	204
  9516  081C  3401               	retlw	1
  9517  081D  34D2               	retlw	210
  9518  081E  3401               	retlw	1
  9519  081F  34D9               	retlw	217
  9520  0820  3401               	retlw	1
  9521  0821  34DF               	retlw	223
  9522  0822  3401               	retlw	1
  9523  0823  34E5               	retlw	229
  9524  0824  3401               	retlw	1
  9525  0825  34EC               	retlw	236
  9526  0826  3401               	retlw	1
  9527  0827  34F2               	retlw	242
  9528  0828  3401               	retlw	1
  9529  0829  34F9               	retlw	249
  9530  082A  3401               	retlw	1
  9531  082B  34FF               	retlw	255
  9532  082C  3401               	retlw	1
  9533  082D  3406               	retlw	6
  9534  082E  3402               	retlw	2
  9535  082F  340D               	retlw	13
  9536  0830  3402               	retlw	2
  9537  0831  3413               	retlw	19
  9538  0832  3402               	retlw	2
  9539  0833  341A               	retlw	26
  9540  0834  3402               	retlw	2
  9541  0835  3421               	retlw	33
  9542  0836  3402               	retlw	2
  9543  0837  3428               	retlw	40
  9544  0838  3402               	retlw	2
  9545  0839  342F               	retlw	47
  9546  083A  3402               	retlw	2
  9547  083B  3436               	retlw	54
  9548  083C  3402               	retlw	2
  9549  083D  343D               	retlw	61
  9550  083E  3402               	retlw	2
  9551  083F  3444               	retlw	68
  9552  0840  3402               	retlw	2
  9553  0841  344B               	retlw	75
  9554  0842  3402               	retlw	2
  9555  0843  3452               	retlw	82
  9556  0844  3402               	retlw	2
  9557  0845  345A               	retlw	90
  9558  0846  3402               	retlw	2
  9559  0847  3461               	retlw	97
  9560  0848  3402               	retlw	2
  9561  0849  3468               	retlw	104
  9562  084A  3402               	retlw	2
  9563  084B  3470               	retlw	112
  9564  084C  3402               	retlw	2
  9565  084D  3477               	retlw	119
  9566  084E  3402               	retlw	2
  9567  084F  347F               	retlw	127
  9568  0850  3402               	retlw	2
  9569  0851  3486               	retlw	134
  9570  0852  3402               	retlw	2
  9571  0853  348E               	retlw	142
  9572  0854  3402               	retlw	2
  9573  0855  3495               	retlw	149
  9574  0856  3402               	retlw	2
  9575  0857  349D               	retlw	157
  9576  0858  3402               	retlw	2
  9577  0859  34A5               	retlw	165
  9578  085A  3402               	retlw	2
  9579  085B  34AD               	retlw	173
  9580  085C  3402               	retlw	2
  9581  085D  34B5               	retlw	181
  9582  085E  3402               	retlw	2
  9583  085F  34BD               	retlw	189
  9584  0860  3402               	retlw	2
  9585  0861  34C5               	retlw	197
  9586  0862  3402               	retlw	2
  9587  0863  34CD               	retlw	205
  9588  0864  3402               	retlw	2
  9589  0865  34D5               	retlw	213
  9590  0866  3402               	retlw	2
  9591  0867  34DD               	retlw	221
  9592  0868  3402               	retlw	2
  9593  0869  34E5               	retlw	229
  9594  086A  3402               	retlw	2
  9595  086B  34ED               	retlw	237
  9596  086C  3402               	retlw	2
  9597  086D  34F6               	retlw	246
  9598  086E  3402               	retlw	2
  9599  086F  34FE               	retlw	254
  9600  0870  3402               	retlw	2
  9601  0871  3406               	retlw	6
  9602  0872  3403               	retlw	3
  9603  0873  340F               	retlw	15
  9604  0874  3403               	retlw	3
  9605  0875  3418               	retlw	24
  9606  0876  3403               	retlw	3
  9607  0877  3420               	retlw	32
  9608  0878  3403               	retlw	3
  9609  0879  3429               	retlw	41
  9610  087A  3403               	retlw	3
  9611  087B  3431               	retlw	49
  9612  087C  3403               	retlw	3
  9613  087D  343A               	retlw	58
  9614  087E  3403               	retlw	3
  9615  087F  3443               	retlw	67
  9616  0880  3403               	retlw	3
  9617  0881  344C               	retlw	76
  9618  0882  3403               	retlw	3
  9619  0883  3455               	retlw	85
  9620  0884  3403               	retlw	3
  9621  0885  345E               	retlw	94
  9622  0886  3403               	retlw	3
  9623  0887  3467               	retlw	103
  9624  0888  3403               	retlw	3
  9625  0889  3470               	retlw	112
  9626  088A  3403               	retlw	3
  9627  088B  3479               	retlw	121
  9628  088C  3403               	retlw	3
  9629  088D  3482               	retlw	130
  9630  088E  3403               	retlw	3
  9631  088F  348C               	retlw	140
  9632  0890  3403               	retlw	3
  9633  0891  3495               	retlw	149
  9634  0892  3403               	retlw	3
  9635  0893  349E               	retlw	158
  9636  0894  3403               	retlw	3
  9637  0895  34A8               	retlw	168
  9638  0896  3403               	retlw	3
  9639  0897  34B1               	retlw	177
  9640  0898  3403               	retlw	3
  9641  0899  34BB               	retlw	187
  9642  089A  3403               	retlw	3
  9643  089B  34C5               	retlw	197
  9644  089C  3403               	retlw	3
  9645  089D  34CE               	retlw	206
  9646  089E  3403               	retlw	3
  9647  089F  34D8               	retlw	216
  9648  08A0  3403               	retlw	3
  9649  08A1  34E2               	retlw	226
  9650  08A2  3403               	retlw	3
  9651  08A3  34EC               	retlw	236
  9652  08A4  3403               	retlw	3
  9653  08A5  34F6               	retlw	246
  9654  08A6  3403               	retlw	3
  9655  08A7  34FF               	retlw	255
  9656  08A8  3403               	retlw	3
  9657  08A9                     __end_of_gamma_table_256x1k:	
  9658                           
  9659                           	psect	stringtext2
  9660  2000                     __pstringtext2:	
  9661  2000                     _dpowers:	
  9662  2000  3401               	retlw	1
  9663  2001  3400               	retlw	0
  9664  2002  340A               	retlw	10
  9665  2003  3400               	retlw	0
  9666  2004  3464               	retlw	100
  9667  2005  3400               	retlw	0
  9668  2006  34E8               	retlw	232
  9669  2007  3403               	retlw	3
  9670  2008  3410               	retlw	16
  9671  2009  3427               	retlw	39
  9672  200A                     __end_of_dpowers:	
  9673  000D                     _PORTBbits	set	13
  9674  000C                     _PORTAbits	set	12
  9675  000E                     _PORTCbits	set	14
  9676  000B                     _INTCONbits	set	11
  9677  0017                     _T0CON0bits	set	23
  9678  0010                     _PIR0bits	set	16
  9679  0015                     _TMR0L	set	21
  9680  0016                     _TMR0H	set	22
  9681  0018                     _T0CON1	set	24
  9682  0017                     _T0CON0	set	23
  9683  0012                     _PIR2bits	set	18
  9684  001F                     _T2CONbits	set	31
  9685  0011                     _PIR1bits	set	17
  9686  001D                     _TMR2	set	29
  9687  001E                     _PR2	set	30
  9688  001F                     _T2CON	set	31
  9689  005F                     _GIE	set	95
  9690  0090                     _PIE0bits	set	144
  9691  008E                     _TRISC	set	142
  9692  008D                     _TRISB	set	141
  9693  008C                     _TRISA	set	140
  9694  0097                     _WDTCON	set	151
  9695  010E                     _LATCbits	set	270
  9696  010D                     _LATBbits	set	269
  9697  010E                     _LATC	set	270
  9698  010D                     _LATB	set	269
  9699  010C                     _LATA	set	268
  9700  018C                     _ANSELA	set	396
  9701  018D                     _ANSELB	set	397
  9702  018E                     _ANSELC	set	398
  9703  020E                     _WPUC	set	526
  9704  020C                     _WPUA	set	524
  9705  020D                     _WPUB	set	525
  9706  0214                     _SSP1STATbits	set	532
  9707  0211                     _SSP1BUF	set	529
  9708  0215                     _SSP1CON1bits	set	533
  9709  0212                     _SSP1ADD	set	530
  9710  0215                     _SSP1CON1	set	533
  9711  0214                     _SSP1STAT	set	532
  9712  0297                     _CCP2CONbits	set	663
  9713  0295                     _CCPR2L	set	661
  9714  0296                     _CCPR2H	set	662
  9715  0297                     _CCP2CON	set	663
  9716  028E                     _ODCONC	set	654
  9717  028D                     _ODCONB	set	653
  9718  028C                     _ODCONA	set	652
  9719  0293                     _CCP1CONbits	set	659
  9720  029F                     _CCPTMRSbits	set	671
  9721  0291                     _CCPR1L	set	657
  9722  0292                     _CCPR1H	set	658
  9723  0293                     _CCP1CON	set	659
  9724  0417                     _T4CONbits	set	1047
  9725  0415                     _TMR4	set	1045
  9726  0416                     _PR4	set	1046
  9727  0417                     _T4CON	set	1047
  9728  061A                     _PWM6DCL	set	1562
  9729  061B                     _PWM6DCH	set	1563
  9730  061C                     _PWM6CON	set	1564
  9731  061F                     _PWMTMRSbits	set	1567
  9732  0617                     _PWM5DCL	set	1559
  9733  0618                     _PWM5DCH	set	1560
  9734  0619                     _PWM5CON	set	1561
  9735  0896                     _NVMCON2	set	2198
  9736  0893                     _NVMDATL	set	2195
  9737  0894                     _NVMDATH	set	2196
  9738  0895                     _NVMCON1bits	set	2197
  9739  0892                     _NVMADRH	set	2194
  9740  0891                     _NVMADRL	set	2193
  9741  091E                     _OSCTUNE	set	2334
  9742  091F                     _OSCFRQ	set	2335
  9743  091D                     _OSCEN	set	2333
  9744  091B                     _OSCCON3	set	2331
  9745  0919                     _OSCCON1	set	2329
  9746  48E0                     _PLLR	set	18656
  9747  0E20                     _SSP1CLKPPSbits	set	3616
  9748  0E21                     _SSP1DATPPSbits	set	3617
  9749  0E0F                     _PPSLOCKbits	set	3599
  9750  0E0F                     _PPSLOCK	set	3599
  9751  0EA2                     _RC2PPSbits	set	3746
  9752  0E9E                     _RB6PPSbits	set	3742
  9753  0EA3                     _RC3PPSbits	set	3747
  9754  0EA0                     _RC0PPSbits	set	3744
  9755  0EA4                     _RC4PPSbits	set	3748
  9756  0EA1                     _RC1PPSbits	set	3745
  9757  200A                     STR_9:	
  9758  200A  3405               	retlw	5
  9759  200B  3407               	retlw	7
  9760  200C  3407               	retlw	7
  9761  200D  3408               	retlw	8
  9762  200E  342D               	retlw	45	;'-'
  9763  200F  342D               	retlw	45	;'-'
  9764  2010  3420               	retlw	32	;' '
  9765  2011  3420               	retlw	32	;' '
  9766  2012  342D               	retlw	45	;'-'
  9767  2013  342D               	retlw	45	;'-'
  9768  2014  3409               	retlw	9
  9769  2015  3407               	retlw	7
  9770  2016  3407               	retlw	7
  9771  2017  3406               	retlw	6
  9772  2018  3420               	retlw	32	;' '
  9773  2019  340B               	retlw	11
  9774  201A  3420               	retlw	32	;' '
  9775  201B  3400               	retlw	0
  9776                           
  9777                           	psect	stringtext3
  9778  201C                     __pstringtext3:	
  9779  201C                     STR_16:	
  9780  201C  3455               	retlw	85	;'U'
  9781  201D  344E               	retlw	78	;'N'
  9782  201E  344C               	retlw	76	;'L'
  9783  201F  344F               	retlw	79	;'O'
  9784  2020  3443               	retlw	67	;'C'
  9785  2021  344B               	retlw	75	;'K'
  9786  2022  3449               	retlw	73	;'I'
  9787  2023  344E               	retlw	78	;'N'
  9788  2024  3447               	retlw	71	;'G'
  9789  2025  342E               	retlw	46	;'.'
  9790  2026  342E               	retlw	46	;'.'
  9791  2027  342E               	retlw	46	;'.'
  9792  2028  3400               	retlw	0
  9793                           
  9794                           	psect	stringtext4
  9795  2029                     __pstringtext4:	
  9796  2029                     STR_6:	
  9797  2029  3450               	retlw	80	;'P'
  9798  202A  3441               	retlw	65	;'A'
  9799  202B  3453               	retlw	83	;'S'
  9800  202C  3453               	retlw	83	;'S'
  9801  202D  3457               	retlw	87	;'W'
  9802  202E  344F               	retlw	79	;'O'
  9803  202F  3452               	retlw	82	;'R'
  9804  2030  3444               	retlw	68	;'D'
  9805  2031  3420               	retlw	32	;' '
  9806  2032  3400               	retlw	0
  9807                           
  9808                           	psect	stringtext5
  9809  2033                     __pstringtext5:	
  9810  2033                     STR_11:	
  9811  2033  344E               	retlw	78	;'N'
  9812  2034  3455               	retlw	85	;'U'
  9813  2035  344C               	retlw	76	;'L'
  9814  2036  344C               	retlw	76	;'L'
  9815  2037  3449               	retlw	73	;'I'
  9816  2038  3446               	retlw	70	;'F'
  9817  2039  3459               	retlw	89	;'Y'
  9818  203A  3420               	retlw	32	;' '
  9819  203B  3400               	retlw	0
  9820                           
  9821                           	psect	stringtext6
  9822  203C                     __pstringtext6:	
  9823  203C                     STR_12:	
  9824  203C  3444               	retlw	68	;'D'
  9825  203D  3445               	retlw	69	;'E'
  9826  203E  3446               	retlw	70	;'F'
  9827  203F  3443               	retlw	67	;'C'
  9828  2040  344F               	retlw	79	;'O'
  9829  2041  344E               	retlw	78	;'N'
  9830  2042  3420               	retlw	32	;' '
  9831  2043  3400               	retlw	0
  9832                           
  9833                           	psect	stringtext7
  9834  2044                     __pstringtext7:	
  9835  2044                     STR_13:	
  9836  2044  3448               	retlw	72	;'H'
  9837  2045  3441               	retlw	65	;'A'
  9838  2046  3458               	retlw	88	;'X'
  9839  2047  3420               	retlw	32	;' '
  9840  2048  3420               	retlw	32	;' '
  9841  2049  3400               	retlw	0
  9842                           
  9843                           	psect	stringtext8
  9844  204A                     __pstringtext8:	
  9845  204A                     STR_7:	
  9846  204A  3445               	retlw	69	;'E'
  9847  204B  3458               	retlw	88	;'X'
  9848  204C  3449               	retlw	73	;'I'
  9849  204D  3454               	retlw	84	;'T'
  9850  204E  3420               	retlw	32	;' '
  9851  204F  3400               	retlw	0
  9852                           
  9853                           	psect	stringtext9
  9854  2050                     __pstringtext9:	
  9855  2050                     STR_5:	
  9856  2050  3453               	retlw	83	;'S'
  9857  2051  344C               	retlw	76	;'L'
  9858  2052  344F               	retlw	79	;'O'
  9859  2053  3454               	retlw	84	;'T'
  9860  2054  3420               	retlw	32	;' '
  9861  2055  3400               	retlw	0
  9862                           
  9863                           	psect	stringtext10
  9864  2056                     __pstringtext10:	
  9865  2056                     STR_20:	
  9866  2056  3424               	retlw	36	;'$'
  9867  2057  3424               	retlw	36	;'$'
  9868  2058  3424               	retlw	36	;'$'
  9869  2059  3420               	retlw	32	;' '
  9870  205A  3400               	retlw	0
  9871                           
  9872                           	psect	stringtext11
  9873  205B                     __pstringtext11:	
  9874  205B                     STR_19:	
  9875  205B  344C               	retlw	76	;'L'
  9876  205C  344F               	retlw	79	;'O'
  9877  205D  3443               	retlw	67	;'C'
  9878  205E  344B               	retlw	75	;'K'
  9879  205F  3400               	retlw	0
  9880                           
  9881                           	psect	stringtext12
  9882  2060                     __pstringtext12:	
  9883  2060                     STR_18:	
  9884  2060  344F               	retlw	79	;'O'
  9885  2061  3450               	retlw	80	;'P'
  9886  2062  3445               	retlw	69	;'E'
  9887  2063  344E               	retlw	78	;'N'
  9888  2064  3400               	retlw	0
  9889                           
  9890                           	psect	stringtext13
  9891  2065                     __pstringtext13:	
  9892  2065                     STR_14:	
  9893  2065  3450               	retlw	80	;'P'
  9894  2066  3445               	retlw	69	;'E'
  9895  2067  3457               	retlw	87	;'W'
  9896  2068  3420               	retlw	32	;' '
  9897  2069  3400               	retlw	0
  9898                           
  9899                           	psect	stringtext14
  9900  206A                     __pstringtext14:	
  9901  206A                     STR_8:	
  9902  206A  344E               	retlw	78	;'N'
  9903  206B  3455               	retlw	85	;'U'
  9904  206C  344C               	retlw	76	;'L'
  9905  206D  344C               	retlw	76	;'L'
  9906  206E  3400               	retlw	0
  9907                           
  9908                           	psect	stringtext15
  9909  206F                     __pstringtext15:	
  9910  206F                     STR_4:	
  9911  206F  344D               	retlw	77	;'M'
  9912  2070  3445               	retlw	69	;'E'
  9913  2071  344E               	retlw	78	;'N'
  9914  2072  3455               	retlw	85	;'U'
  9915  2073  3400               	retlw	0
  9916                           
  9917                           	psect	stringtext16
  9918  2074                     __pstringtext16:	
  9919  2074                     STR_3:	
  9920  2074  3420               	retlw	32	;' '
  9921  2075  3420               	retlw	32	;' '
  9922  2076  3420               	retlw	32	;' '
  9923  2077  3420               	retlw	32	;' '
  9924  2078  3400               	retlw	0
  9925                           
  9926                           	psect	stringtext17
  9927  2079                     __pstringtext17:	
  9928  2079                     STR_2:	
  9929  2079  3444               	retlw	68	;'D'
  9930  207A  344F               	retlw	79	;'O'
  9931  207B  3457               	retlw	87	;'W'
  9932  207C  344E               	retlw	78	;'N'
  9933  207D  3400               	retlw	0
  9934                           
  9935                           	psect	stringtext18
  9936  207E                     __pstringtext18:	
  9937  207E                     STR_1:	
  9938  207E  3420               	retlw	32	;' '
  9939  207F  3420               	retlw	32	;' '
  9940  2080  3455               	retlw	85	;'U'
  9941  2081  3450               	retlw	80	;'P'
  9942  2082  3400               	retlw	0
  9943                           
  9944                           	psect	stringtext19
  9945  2083                     __pstringtext19:	
  9946  2083                     STR_15:	
  9947  2083  3425               	retlw	37	;'%'
  9948  2084  3434               	retlw	52	;'4'
  9949  2085  3464               	retlw	100	;'d'
  9950  2086  3400               	retlw	0
  9951                           
  9952                           	psect	stringtext20
  9953  0000                     __pstringtext20:	
  9954  201E                     
  9955                           ; #config settings
  9956  0000                     
  9957                           	psect	cinit
  9958  0018                     start_initialization:	
  9959  0018                     __initialization:		;BIGRAM
  9960                           
  9961                           ; Initialize objects allocated to BIGRAM
  9962  0018  3000               	movlw	low __pidataBIGRAM
  9963  0019  0084               	movwf	4
  9964  001A  3097               	movlw	(high __pidataBIGRAM)| (0+128)
  9965  001B  0085               	movwf	5
  9966  001C  30F0               	movlw	low (0+9968)
  9967  001D  0086               	movwf	6
  9968  001E  3026               	movlw	high (0+9968)
  9969  001F  0087               	movwf	7
  9970  0020  3001               	movlw	1
  9971  0021  00FF               	movwf	btemp+1
  9972  0022  3000               	movlw	0
  9973  0023  3199  2147  3180   	fcall	init_ram
  9974                           
  9975                           ; Initialize objects allocated to BANK1
  9976  0026  30E2               	movlw	low __pidataBANK1
  9977  0027  0084               	movwf	4
  9978  0028  3098               	movlw	(high __pidataBANK1)| (0+128)
  9979  0029  0085               	movwf	5
  9980  002A  30E5               	movlw	low __pdataBANK1
  9981  002B  0086               	movwf	6
  9982  002C  3000               	movlw	high __pdataBANK1
  9983  002D  0087               	movwf	7
  9984  002E  3000               	movlw	0
  9985  002F  00FF               	movwf	btemp+1
  9986  0030  300A               	movlw	10
  9987  0031  3199  2147  3180   	fcall	init_ram
  9988                           
  9989                           ; Initialize objects allocated to BANK2
  9990  0034  30ED               	movlw	low __pidataBANK2
  9991  0035  0084               	movwf	4
  9992  0036  309B               	movlw	(high __pidataBANK2)| (0+128)
  9993  0037  0085               	movwf	5
  9994  0038  3020               	movlw	low __pdataBANK2
  9995  0039  0086               	movwf	6
  9996  003A  3001               	movlw	high __pdataBANK2
  9997  003B  0087               	movwf	7
  9998  003C  3000               	movlw	0
  9999  003D  00FF               	movwf	btemp+1
 10000  003E  3021               	movlw	33
 10001  003F  3199  2147  3180   	fcall	init_ram
 10002                           
 10003                           ; Initialize objects allocated to BANK3
 10004  0042  3031               	movlw	low __pidataBANK3
 10005  0043  0084               	movwf	4
 10006  0044  309C               	movlw	(high __pidataBANK3)| (0+128)
 10007  0045  0085               	movwf	5
 10008  0046  30A0               	movlw	low __pdataBANK3
 10009  0047  0086               	movwf	6
 10010  0048  3001               	movlw	high __pdataBANK3
 10011  0049  0087               	movwf	7
 10012  004A  3000               	movlw	0
 10013  004B  00FF               	movwf	btemp+1
 10014  004C  3023               	movlw	35
 10015  004D  3199  2147  3180   	fcall	init_ram
 10016                           
 10017                           ; Initialize objects allocated to BANK5
 10018  0050  30FC               	movlw	low __pidataBANK5
 10019  0051  0084               	movwf	4
 10020  0052  309A               	movlw	(high __pidataBANK5)| (0+128)
 10021  0053  0085               	movwf	5
 10022  0054  30A0               	movlw	low __pdataBANK5
 10023  0055  0086               	movwf	6
 10024  0056  3002               	movlw	high __pdataBANK5
 10025  0057  0087               	movwf	7
 10026  0058  3000               	movlw	0
 10027  0059  00FF               	movwf	btemp+1
 10028  005A  301C               	movlw	28
 10029  005B  3199  2147  3180   	fcall	init_ram
 10030                           
 10031                           ; Initialize objects allocated to BANK6
 10032  005E  30FF               	movlw	low __pidataBANK6
 10033  005F  0084               	movwf	4
 10034  0060  309D               	movlw	(high __pidataBANK6)| (0+128)
 10035  0061  0085               	movwf	5
 10036  0062  3020               	movlw	low __pdataBANK6
 10037  0063  0086               	movwf	6
 10038  0064  3003               	movlw	high __pdataBANK6
 10039  0065  0087               	movwf	7
 10040  0066  3000               	movlw	0
 10041  0067  00FF               	movwf	btemp+1
 10042  0068  3038               	movlw	56
 10043  0069  3199  2147  3180   	fcall	init_ram
 10044                           
 10045                           ; Initialize objects allocated to BANK7
 10046  006C  30E0               	movlw	low __pidataBANK7
 10047  006D  0084               	movwf	4
 10048  006E  309A               	movlw	(high __pidataBANK7)| (0+128)
 10049  006F  0085               	movwf	5
 10050  0070  30A0               	movlw	low __pdataBANK7
 10051  0071  0086               	movwf	6
 10052  0072  3003               	movlw	high __pdataBANK7
 10053  0073  0087               	movwf	7
 10054  0074  3000               	movlw	0
 10055  0075  00FF               	movwf	btemp+1
 10056  0076  301C               	movlw	28
 10057  0077  3199  2147  3180   	fcall	init_ram
 10058                           
 10059                           ; Clear objects allocated to COMMON
 10060  007A  01FC               	clrf	__pbssCOMMON& (0+127)
 10061                           
 10062                           ; Clear objects allocated to BANK1
 10063  007B  30A0               	movlw	low __pbssBANK1
 10064  007C  0084               	movwf	4
 10065  007D  3000               	movlw	high __pbssBANK1
 10066  007E  0085               	movwf	5
 10067  007F  3045               	movlw	69
 10068  0080  00FE               	movwf	btemp
 10069  0081  3000               	movlw	0
 10070  0082  00FF               	movwf	btemp+1
 10071  0083  3199  213B  3180   	fcall	clear_ram0
 10072                           
 10073                           ; Clear objects allocated to BANK2
 10074  0086  3041               	movlw	low __pbssBANK2
 10075  0087  0084               	movwf	4
 10076  0088  3001               	movlw	high __pbssBANK2
 10077  0089  0085               	movwf	5
 10078  008A  301A               	movlw	26
 10079  008B  00FE               	movwf	btemp
 10080  008C  3000               	movlw	0
 10081  008D  00FF               	movwf	btemp+1
 10082  008E  3199  213B  3180   	fcall	clear_ram0
 10083                           
 10084                           ; Clear objects allocated to BANK3
 10085  0091  30C3               	movlw	low __pbssBANK3
 10086  0092  0084               	movwf	4
 10087  0093  3001               	movlw	high __pbssBANK3
 10088  0094  0085               	movwf	5
 10089  0095  3020               	movlw	32
 10090  0096  00FE               	movwf	btemp
 10091  0097  3000               	movlw	0
 10092  0098  00FF               	movwf	btemp+1
 10093  0099  3199  213B  3180   	fcall	clear_ram0
 10094                           
 10095                           ; Clear objects allocated to BANK4
 10096  009C  3020               	movlw	low __pbssBANK4
 10097  009D  0084               	movwf	4
 10098  009E  3002               	movlw	high __pbssBANK4
 10099  009F  0085               	movwf	5
 10100  00A0  304C               	movlw	76
 10101  00A1  00FE               	movwf	btemp
 10102  00A2  3000               	movlw	0
 10103  00A3  00FF               	movwf	btemp+1
 10104  00A4  3199  213B  3180   	fcall	clear_ram0
 10105                           
 10106                           ; Clear objects allocated to BANK5
 10107  00A7  30BC               	movlw	low __pbssBANK5
 10108  00A8  0084               	movwf	4
 10109  00A9  3002               	movlw	high __pbssBANK5
 10110  00AA  0085               	movwf	5
 10111  00AB  301A               	movlw	26
 10112  00AC  00FE               	movwf	btemp
 10113  00AD  3000               	movlw	0
 10114  00AE  00FF               	movwf	btemp+1
 10115  00AF  3199  213B         	fcall	clear_ram0
 10116  00B1                     end_of_initialization:	
 10117                           ;End of C runtime variable initialization code
 10118                           
 10119  00B1                     __end_of__initialization:	
 10120  00B1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10121  00B2  0020               	movlb	0
 10122  00B3  3196  2E16         	ljmp	_main	;jump to C main() function
 10123                           
 10124                           	psect	bssCOMMON
 10125  007C                     __pbssCOMMON:	
 10126  007C                     _badge_locked:	
 10127  007C                     	ds	1
 10128                           
 10129                           	psect	bssBANK1
 10130  00A0                     __pbssBANK1:	
 10131  00A0                     _locked_leds:	
 10132  00A0                     	ds	2
 10133  00A2                     _locked_locking_leds_idx:	
 10134  00A2                     	ds	2
 10135  00A4                     _flashy_option_size:	
 10136  00A4                     	ds	2
 10137  00A6                     _flashy_option_idx:	
 10138  00A6                     	ds	2
 10139  00A8                     _deaths:	
 10140  00A8                     	ds	2
 10141  00AA                     _flashy_sparkle_rate:	
 10142  00AA                     	ds	2
 10143  00AC                     _flashy_leds_idx:	
 10144  00AC                     	ds	2
 10145  00AE                     _menu_option_size:	
 10146  00AE                     	ds	2
 10147  00B0                     _menu_option_idx:	
 10148  00B0                     	ds	2
 10149  00B2                     _currentTask:	
 10150  00B2                     	ds	2
 10151  00B4                     _TMR0_InterruptHandler:	
 10152  00B4                     	ds	2
 10153  00B6                     _timer0ReloadVal16bit:	
 10154  00B6                     	ds	2
 10155  00B8                     _TMR4_InterruptHandler:	
 10156  00B8                     	ds	2
 10157  00BA                     _TMR2_InterruptHandler:	
 10158  00BA                     	ds	2
 10159  00BC                     _slot_task:	
 10160  00BC                     	ds	13
 10161  00C9                     _menu_task:	
 10162  00C9                     	ds	13
 10163  00D6                     _flashy_task:	
 10164  00D6                     	ds	13
 10165  00E3                     _secret_value:	
 10166  00E3                     	ds	2
 10167                           
 10168                           	psect	dataBANK1
 10169  00E5                     __pdataBANK1:	
 10170  00E5                     _randx:	
 10171  00E5                     	ds	4
 10172  00E9                     _locked_lock_base_leds:	
 10173  00E9                     	ds	2
 10174  00EB                     _FLASHY_TEXT_SECRET_TEST:	
 10175  00EB                     	ds	2
 10176  00ED                     _FLASHY_TEXT:	
 10177  00ED                     	ds	2
 10178                           
 10179                           	psect	bssBANK2
 10180  0141                     __pbssBANK2:	
 10181  0141                     _secret_task:	
 10182  0141                     	ds	13
 10183  014E                     _locked_task:	
 10184  014E                     	ds	13
 10185                           
 10186                           	psect	dataBANK2
 10187  0120                     __pdataBANK2:	
 10188  0120                     _locked_locking_leds:	
 10189  0120                     	ds	12
 10190  012C                     _flashy_option:	
 10191  012C                     	ds	8
 10192  0134                     _menu_option:	
 10193  0134                     	ds	8
 10194  013C                     marquee@F14020:	
 10195  013C                     	ds	5
 10196                           
 10197                           	psect	bssBANK3
 10198  01C3                     __pbssBANK3:	
 10199  01C3                     _badge_inst:	
 10200  01C3                     	ds	18
 10201  01D5                     _menu_TaskData:	
 10202  01D5                     	ds	14
 10203                           
 10204                           	psect	dataBANK3
 10205  01A0                     __pdataBANK3:	
 10206  01A0                     _menu_options_leds:	
 10207  01A0                     	ds	10
 10208  01AA                     _secret_inputs:	
 10209  01AA                     	ds	25
 10210                           
 10211                           	psect	bssBANK4
 10212  0220                     __pbssBANK4:	
 10213  0220                     _schedulerInst:	
 10214  0220                     	ds	34
 10215  0242                     _secret_TaskData:	
 10216  0242                     	ds	14
 10217  0250                     _locked_TaskData:	
 10218  0250                     	ds	14
 10219  025E                     _slot_TaskData:	
 10220  025E                     	ds	14
 10221                           
 10222                           	psect	bssBANK5
 10223  02BC                     __pbssBANK5:	
 10224  02BC                     _flashy_TaskData:	
 10225  02BC                     	ds	26
 10226                           
 10227                           	psect	dataBANK5
 10228  02A0                     __pdataBANK5:	
 10229  02A0                     _roundabout_leds:	
 10230  02A0                     	ds	28
 10231                           
 10232                           	psect	dataBANK6
 10233  0320                     __pdataBANK6:	
 10234  0320                     _curtain_leds:	
 10235  0320                     	ds	28
 10236  033C                     _roundabout_leds_inverse:	
 10237  033C                     	ds	28
 10238                           
 10239                           	psect	dataBANK7
 10240  03A0                     __pdataBANK7:	
 10241  03A0                     _curtain_leds_inverse:	
 10242  03A0                     	ds	28
 10243                           
 10244                           	psect	inittext
 10245  1947                     init_ram:	
 10246  1947  00FE               	movwf	126
 10247  1948                     initloop:	
 10248  1948  0012               	moviw fsr0++
 10249  1949  001E               	movwi fsr1++
 10250  194A  3001               	movlw	1
 10251  194B  02FE               	subwf	126,f
 10252  194C  3000               	movlw	0
 10253  194D  3BFF               	subwfb	127,f
 10254  194E  087F               	movf	127,w
 10255  194F  047E               	iorwf	126,w
 10256  1950  1903               	btfsc	3,2
 10257  1951  3400               	retlw	0
 10258  1952  2948               	goto	initloop
 10259                           
 10260                           	psect	clrtext
 10261  193B                     clear_ram0:	
 10262                           ;	Called with FSR0 containing the base address, and
 10263                           ;	btemp/btemp+1 has the size to clear
 10264                           
 10265  193B  0064               	clrwdt	;clear the watchdog before getting into this loop
 10266  193C                     clrloop0:	
 10267  193C  0180               	clrf	0	;clear RAM location pointed to by FSR
 10268  193D  3101               	addfsr 0,1
 10269  193E  3001               	movlw	1
 10270  193F  02FE               	subwf	126,f
 10271  1940  3000               	movlw	0
 10272  1941  3BFF               	subwfb	127,f
 10273  1942  087F               	movf	127,w
 10274  1943  047E               	iorwf	126,w
 10275  1944  1903               	btfsc	3,2
 10276  1945  3400               	retlw	0	;all done for this memory range, return
 10277  1946  293C               	goto	clrloop0	;have we reached the end yet?
 10278                           
 10279                           	psect	cstackBANK1
 10280  00EF                     __pcstackBANK1:	
 10281  00EF                     ??_main:	
 10282                           
 10283                           ; 1 bytes @ 0x0
 10284  00EF                     	ds	1
 10285                           
 10286                           	psect	cstackCOMMON
 10287  0070                     __pcstackCOMMON:	
 10288  0070                     ?_isdigit:	
 10289  0070                     ?_TMR2_StartTimer:	
 10290                           ; 1 bit 
 10291                           
 10292  0070                     ?_TMR4_StartTimer:	
 10293                           ; 1 bytes @ 0x0
 10294                           
 10295  0070                     ?_PIN_MANAGER_Initialize:	
 10296                           ; 1 bytes @ 0x0
 10297                           
 10298  0070                     ?_OSCILLATOR_Initialize:	
 10299                           ; 1 bytes @ 0x0
 10300                           
 10301  0070                     ?_WDT_Initialize:	
 10302                           ; 1 bytes @ 0x0
 10303                           
 10304  0070                     ?_PWM2_Initialize:	
 10305                           ; 1 bytes @ 0x0
 10306                           
 10307  0070                     ?_TMR0_Initialize:	
 10308                           ; 1 bytes @ 0x0
 10309                           
 10310  0070                     ?_TMR0_DefaultInterruptHandler:	
 10311                           ; 1 bytes @ 0x0
 10312                           
 10313  0070                     ??_TMR0_DefaultInterruptHandler:	
 10314                           ; 1 bytes @ 0x0
 10315                           
 10316  0070                     ?_TMR0_StartTimer:	
 10317                           ; 1 bytes @ 0x0
 10318                           
 10319  0070                     ?_TMR0_CallBack:	
 10320                           ; 1 bytes @ 0x0
 10321                           
 10322  0070                     ??_TMR0_CallBack:	
 10323                           ; 1 bytes @ 0x0
 10324                           
 10325  0070                     ?_nullifyBadge_segDisplayRegister:	
 10326                           ; 1 bytes @ 0x0
 10327                           
 10328  0070                     ?_nullifyBadge_segDisplayErase:	
 10329                           ; 1 bytes @ 0x0
 10330                           
 10331  0070                     ?_nullifyBadge_segDisplayForceUpdate:	
 10332                           ; 1 bytes @ 0x0
 10333                           
 10334  0070                     ?_nullifyBadge_platformInit:	
 10335                           ; 1 bytes @ 0x0
 10336                           
 10337  0070                     ?_displayL2_Initialize:	
 10338                           ; 1 bytes @ 0x0
 10339                           
 10340  0070                     ?_displayL2_ForceUpdate:	
 10341                           ; 1 bytes @ 0x0
 10342                           
 10343  0070                     ?_displayL2_EraseSegDisplay:	
 10344                           ; 1 bytes @ 0x0
 10345                           
 10346  0070                     ?_displayL2_ClrUserLeds:	
 10347                           ; 1 bytes @ 0x0
 10348                           
 10349  0070                     ?_displayL1_Update:	
 10350                           ; 1 bytes @ 0x0
 10351                           
 10352  0070                     ?_SPI1_Initialize:	
 10353                           ; 1 bytes @ 0x0
 10354                           
 10355  0070                     ?_SPI1_Exchange8bit:	
 10356                           ; 1 bytes @ 0x0
 10357                           
 10358  0070                     ?_PWM5_Initialize:	
 10359                           ; 1 bytes @ 0x0
 10360                           
 10361  0070                     ?_PWM6_Initialize:	
 10362                           ; 1 bytes @ 0x0
 10363                           
 10364  0070                     ?_PWM1_Initialize:	
 10365                           ; 1 bytes @ 0x0
 10366                           
 10367  0070                     ?_TMR2_Initialize:	
 10368                           ; 1 bytes @ 0x0
 10369                           
 10370  0070                     ?_TMR4_Initialize:	
 10371                           ; 1 bytes @ 0x0
 10372                           
 10373  0070                     ?_SYSTEM_Initialize:	
 10374                           ; 1 bytes @ 0x0
 10375                           
 10376  0070                     ?_TMR0_ISR:	
 10377                           ; 1 bytes @ 0x0
 10378                           
 10379  0070                     ??_TMR0_ISR:	
 10380                           ; 1 bytes @ 0x0
 10381                           
 10382  0070                     ?_INTERRUPT_InterruptManager:	
 10383                           ; 1 bytes @ 0x0
 10384                           
 10385  0070                     ??_INTERRUPT_InterruptManager:	
 10386                           ; 1 bytes @ 0x0
 10387                           
 10388  0070                     ?_scheduler_Init:	
 10389                           ; 1 bytes @ 0x0
 10390                           
 10391  0070                     ?_schedulerExecute:	
 10392                           ; 1 bytes @ 0x0
 10393                           
 10394  0070                     ?_led_rand:	
 10395                           ; 1 bytes @ 0x0
 10396                           
 10397  0070                     ?_main:	
 10398                           ; 1 bytes @ 0x0
 10399                           
 10400  0070                     ?_nullifyBadge_userLedsRegister:	
 10401                           ; 1 bytes @ 0x0
 10402                           
 10403  0070                     ?_nullifyBadge_userLedsClr:	
 10404                           ; 1 bytes @ 0x0
 10405                           
 10406  0070                     ?_nullifyBadge_buttonsGet:	
 10407                           ; 1 bytes @ 0x0
 10408                           
 10409  0070                     ?_nullifyBadge_irGet:	
 10410                           ; 1 bytes @ 0x0
 10411                           
 10412  0070                     ?_nullifyBadge_irTxRegister:	
 10413                           ; 1 bytes @ 0x0
 10414                           
 10415  0070                     ?_nullifyBadge_irTxRelease:	
 10416                           ; 1 bytes @ 0x0
 10417                           
 10418  0070                     ?_nullifyBadge_irTxSet:	
 10419                           ; 1 bytes @ 0x0
 10420                           
 10421  0070                     ?_nullifyBadge_irTxClr:	
 10422                           ; 1 bytes @ 0x0
 10423                           
 10424  0070                     ?_displayL1_Initialize:	
 10425                           ; 1 bytes @ 0x0
 10426                           
 10427  0070                     ?_locked_lock_leds:	
 10428                           ; 1 bytes @ 0x0
 10429                           
 10430  0070                     ?_locked_unlock_leds:	
 10431                           ; 2 bytes @ 0x0
 10432                           
 10433                           
 10434                           ; 2 bytes @ 0x0
 10435  0070                     	ds	1
 10436  0071                     ??_TMR2_StartTimer:	
 10437  0071                     ??_TMR4_StartTimer:	
 10438                           ; 1 bytes @ 0x1
 10439                           
 10440  0071                     ??_PIN_MANAGER_Initialize:	
 10441                           ; 1 bytes @ 0x1
 10442                           
 10443  0071                     ??_OSCILLATOR_Initialize:	
 10444                           ; 1 bytes @ 0x1
 10445                           
 10446  0071                     ??_WDT_Initialize:	
 10447                           ; 1 bytes @ 0x1
 10448                           
 10449  0071                     ??_PWM2_Initialize:	
 10450                           ; 1 bytes @ 0x1
 10451                           
 10452  0071                     ?_TMR0_SetInterruptHandler:	
 10453                           ; 1 bytes @ 0x1
 10454                           
 10455  0071                     ??_TMR0_StartTimer:	
 10456                           ; 1 bytes @ 0x1
 10457                           
 10458  0071                     ??_nullifyBadge_segDisplayRegister:	
 10459                           ; 1 bytes @ 0x1
 10460                           
 10461  0071                     ?_memset:	
 10462                           ; 1 bytes @ 0x1
 10463                           
 10464  0071                     ?_secret_clear:	
 10465                           ; 1 bytes @ 0x1
 10466                           
 10467  0071                     ??_isdigit:	
 10468                           ; 1 bytes @ 0x1
 10469                           
 10470  0071                     ??_SPI1_Initialize:	
 10471                           ; 1 bytes @ 0x1
 10472                           
 10473  0071                     ??_SPI1_Exchange8bit:	
 10474                           ; 1 bytes @ 0x1
 10475                           
 10476  0071                     ??_PWM5_Initialize:	
 10477                           ; 1 bytes @ 0x1
 10478                           
 10479  0071                     ?_PWM5_LoadDutyValue:	
 10480                           ; 1 bytes @ 0x1
 10481                           
 10482  0071                     ??_PWM6_Initialize:	
 10483                           ; 1 bytes @ 0x1
 10484                           
 10485  0071                     ?_PWM6_LoadDutyValue:	
 10486                           ; 1 bytes @ 0x1
 10487                           
 10488  0071                     ??_PWM1_Initialize:	
 10489                           ; 1 bytes @ 0x1
 10490                           
 10491  0071                     ?_PWM1_LoadDutyValue:	
 10492                           ; 1 bytes @ 0x1
 10493                           
 10494  0071                     ??_TMR2_Initialize:	
 10495                           ; 1 bytes @ 0x1
 10496                           
 10497  0071                     ??_TMR4_Initialize:	
 10498                           ; 1 bytes @ 0x1
 10499                           
 10500  0071                     ?_PWM2_LoadDutyValue:	
 10501                           ; 1 bytes @ 0x1
 10502                           
 10503  0071                     ??_scheduler_Init:	
 10504                           ; 1 bytes @ 0x1
 10505                           
 10506  0071                     ?_scheduler_TaskInit:	
 10507                           ; 1 bytes @ 0x1
 10508                           
 10509  0071                     ??_nullifyBadge_userLedsRegister:	
 10510                           ; 1 bytes @ 0x1
 10511                           
 10512  0071                     ??_nullifyBadge_buttonsGet:	
 10513                           ; 1 bytes @ 0x1
 10514                           
 10515  0071                     ??_nullifyBadge_irGet:	
 10516                           ; 1 bytes @ 0x1
 10517                           
 10518  0071                     ??_nullifyBadge_irTxRegister:	
 10519                           ; 1 bytes @ 0x1
 10520                           
 10521  0071                     ??_nullifyBadge_irTxRelease:	
 10522                           ; 1 bytes @ 0x1
 10523                           
 10524  0071                     ??_nullifyBadge_irTxSet:	
 10525                           ; 1 bytes @ 0x1
 10526                           
 10527  0071                     ??_nullifyBadge_irTxClr:	
 10528                           ; 1 bytes @ 0x1
 10529                           
 10530  0071                     ?_displayL1_SetUserLed:	
 10531                           ; 1 bytes @ 0x1
 10532                           
 10533  0071                     ??_locked_lock_leds:	
 10534                           ; 1 bytes @ 0x1
 10535                           
 10536  0071                     ??_locked_unlock_leds:	
 10537                           ; 1 bytes @ 0x1
 10538                           
 10539  0071                     ?___bmul:	
 10540                           ; 1 bytes @ 0x1
 10541                           
 10542  0071                     ?_strlen:	
 10543                           ; 1 bytes @ 0x1
 10544                           
 10545  0071                     ?_displayCharReverse:	
 10546                           ; 2 bytes @ 0x1
 10547                           
 10548  0071                     ?_TMR0_Read16bitTimer:	
 10549                           ; 2 bytes @ 0x1
 10550                           
 10551  0071                     ?_locked_get_lock_leds:	
 10552                           ; 2 bytes @ 0x1
 10553                           
 10554  0071                     ?_locked_get_unlock_leds:	
 10555                           ; 2 bytes @ 0x1
 10556                           
 10557  0071                     ?___wmul:	
 10558                           ; 2 bytes @ 0x1
 10559                           
 10560  0071                     ?___lwdiv:	
 10561                           ; 2 bytes @ 0x1
 10562                           
 10563  0071                     ?___lmul:	
 10564                           ; 2 bytes @ 0x1
 10565                           
 10566  0071                     SPI1_Exchange8bit@data:	
 10567                           ; 4 bytes @ 0x1
 10568                           
 10569  0071                     PIN_MANAGER_Initialize@state:	
 10570                           ; 1 bytes @ 0x1
 10571                           
 10572  0071                     nullifyBadge_segDisplayRegister@badge:	
 10573                           ; 1 bytes @ 0x1
 10574                           
 10575  0071                     nullifyBadge_userLedsRegister@badge:	
 10576                           ; 1 bytes @ 0x1
 10577                           
 10578  0071                     nullifyBadge_irTxRegister@badge:	
 10579                           ; 1 bytes @ 0x1
 10580                           
 10581  0071                     ___bmul@multiplicand:	
 10582                           ; 1 bytes @ 0x1
 10583                           
 10584  0071                     _isdigit$3064:	
 10585                           ; 1 bytes @ 0x1
 10586                           
 10587  0071                     PWM5_LoadDutyValue@dutyValue:	
 10588                           ; 1 bytes @ 0x1
 10589                           
 10590  0071                     PWM6_LoadDutyValue@dutyValue:	
 10591                           ; 2 bytes @ 0x1
 10592                           
 10593  0071                     PWM1_LoadDutyValue@dutyValue:	
 10594                           ; 2 bytes @ 0x1
 10595                           
 10596  0071                     PWM2_LoadDutyValue@dutyValue:	
 10597                           ; 2 bytes @ 0x1
 10598                           
 10599  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
 10600                           ; 2 bytes @ 0x1
 10601                           
 10602  0071                     scheduler_TaskInit@task:	
 10603                           ; 2 bytes @ 0x1
 10604                           
 10605  0071                     displayL1_SetUserLed@userLedVect:	
 10606                           ; 2 bytes @ 0x1
 10607                           
 10608  0071                     displayCharReverse@cVal:	
 10609                           ; 2 bytes @ 0x1
 10610                           
 10611  0071                     secret_clear@data:	
 10612                           ; 2 bytes @ 0x1
 10613                           
 10614  0071                     ___wmul@multiplier:	
 10615                           ; 2 bytes @ 0x1
 10616                           
 10617  0071                     ___lwdiv@divisor:	
 10618                           ; 2 bytes @ 0x1
 10619                           
 10620  0071                     memset@c:	
 10621                           ; 2 bytes @ 0x1
 10622                           
 10623  0071                     strlen@s:	
 10624                           ; 2 bytes @ 0x1
 10625                           
 10626  0071                     ___lmul@multiplier:	
 10627                           ; 2 bytes @ 0x1
 10628                           
 10629                           
 10630                           ; 4 bytes @ 0x1
 10631  0071                     	ds	1
 10632  0072                     ?_SPI1_Exchange8bitBuffer:	
 10633  0072                     ??___bmul:	
 10634                           ; 1 bytes @ 0x2
 10635                           
 10636  0072                     SPI1_Exchange8bitBuffer@bufLen:	
 10637                           ; 1 bytes @ 0x2
 10638                           
 10639  0072                     scheduler_Init@scheduler:	
 10640                           ; 1 bytes @ 0x2
 10641                           
 10642  0072                     nullifyBadge_irTxRelease@badge:	
 10643                           ; 1 bytes @ 0x2
 10644                           
 10645  0072                     isdigit@c:	
 10646                           ; 1 bytes @ 0x2
 10647                           
 10648                           
 10649                           ; 1 bytes @ 0x2
 10650  0072                     	ds	1
 10651  0073                     ??_TMR0_Initialize:	
 10652  0073                     ??_TMR0_SetInterruptHandler:	
 10653                           ; 1 bytes @ 0x3
 10654                           
 10655  0073                     ??_strlen:	
 10656                           ; 1 bytes @ 0x3
 10657                           
 10658  0073                     ??_displayCharReverse:	
 10659                           ; 1 bytes @ 0x3
 10660                           
 10661  0073                     ??_secret_clear:	
 10662                           ; 1 bytes @ 0x3
 10663                           
 10664  0073                     ??_PWM5_LoadDutyValue:	
 10665                           ; 1 bytes @ 0x3
 10666                           
 10667  0073                     ??_PWM6_LoadDutyValue:	
 10668                           ; 1 bytes @ 0x3
 10669                           
 10670  0073                     ??_PWM1_LoadDutyValue:	
 10671                           ; 1 bytes @ 0x3
 10672                           
 10673  0073                     ??_SYSTEM_Initialize:	
 10674                           ; 1 bytes @ 0x3
 10675                           
 10676  0073                     ??_PWM2_LoadDutyValue:	
 10677                           ; 1 bytes @ 0x3
 10678                           
 10679  0073                     ??_TMR0_Read16bitTimer:	
 10680                           ; 1 bytes @ 0x3
 10681                           
 10682  0073                     ??_scheduler_TaskInit:	
 10683                           ; 1 bytes @ 0x3
 10684                           
 10685  0073                     ??_displayL1_SetUserLed:	
 10686                           ; 1 bytes @ 0x3
 10687                           
 10688  0073                     ??_locked_get_lock_leds:	
 10689                           ; 1 bytes @ 0x3
 10690                           
 10691  0073                     ??_locked_get_unlock_leds:	
 10692                           ; 1 bytes @ 0x3
 10693                           
 10694  0073                     SPI1_Exchange8bitBuffer@dataOut:	
 10695                           ; 1 bytes @ 0x3
 10696                           
 10697  0073                     scheduler_Init@k:	
 10698                           ; 1 bytes @ 0x3
 10699                           
 10700  0073                     nullifyBadge_buttonsGet@retVal:	
 10701                           ; 1 bytes @ 0x3
 10702                           
 10703  0073                     ___bmul@product:	
 10704                           ; 1 bytes @ 0x3
 10705                           
 10706  0073                     locked_lock_leds@size:	
 10707                           ; 1 bytes @ 0x3
 10708                           
 10709  0073                     locked_get_unlock_leds@leds:	
 10710                           ; 2 bytes @ 0x3
 10711                           
 10712  0073                     ___wmul@multiplicand:	
 10713                           ; 2 bytes @ 0x3
 10714                           
 10715  0073                     ___lwdiv@dividend:	
 10716                           ; 2 bytes @ 0x3
 10717                           
 10718  0073                     memset@n:	
 10719                           ; 2 bytes @ 0x3
 10720                           
 10721                           
 10722                           ; 2 bytes @ 0x3
 10723  0073                     	ds	1
 10724  0074                     ??_SPI1_Exchange8bitBuffer:	
 10725  0074                     displayL1_SetUserLed@display:	
 10726                           ; 1 bytes @ 0x4
 10727                           
 10728  0074                     ___bmul@multiplier:	
 10729                           ; 1 bytes @ 0x4
 10730                           
 10731                           
 10732                           ; 1 bytes @ 0x4
 10733  0074                     	ds	1
 10734  0075                     ??_memset:	
 10735  0075                     ??___wmul:	
 10736                           ; 1 bytes @ 0x5
 10737                           
 10738  0075                     ??___lwdiv:	
 10739                           ; 1 bytes @ 0x5
 10740                           
 10741  0075                     locked_get_lock_leds@size:	
 10742                           ; 1 bytes @ 0x5
 10743                           
 10744  0075                     ___wmul@product:	
 10745                           ; 2 bytes @ 0x5
 10746                           
 10747  0075                     strlen@cp:	
 10748                           ; 2 bytes @ 0x5
 10749                           
 10750  0075                     ___lmul@multiplicand:	
 10751                           ; 2 bytes @ 0x5
 10752                           
 10753                           
 10754                           ; 4 bytes @ 0x5
 10755  0075                     	ds	1
 10756  0076                     ___lwdiv@counter:	
 10757  0076                     memset@p:	
 10758                           ; 1 bytes @ 0x6
 10759                           
 10760                           
 10761                           ; 1 bytes @ 0x6
 10762  0076                     	ds	1
 10763  0077                     ?_secret_check:	
 10764  0077                     SPI1_Exchange8bitBuffer@dataIn:	
 10765                           ; 1 bytes @ 0x7
 10766                           
 10767  0077                     memset@p1:	
 10768                           ; 1 bytes @ 0x7
 10769                           
 10770  0077                     locked_get_lock_leds@leds:	
 10771                           ; 1 bytes @ 0x7
 10772                           
 10773  0077                     secret_check@data:	
 10774                           ; 2 bytes @ 0x7
 10775                           
 10776  0077                     ___lwdiv@quotient:	
 10777                           ; 2 bytes @ 0x7
 10778                           
 10779                           
 10780                           ; 2 bytes @ 0x7
 10781  0077                     	ds	1
 10782  0078                     SPI1_Exchange8bitBuffer@bytesWritten:	
 10783  0078                     displayCharReverse@retValLower:	
 10784                           ; 1 bytes @ 0x8
 10785                           
 10786  0078                     TMR0_Read16bitTimer@readVal:	
 10787                           ; 1 bytes @ 0x8
 10788                           
 10789                           
 10790                           ; 2 bytes @ 0x8
 10791  0078                     	ds	1
 10792  0079                     ??_displayL1_Update:	
 10793  0079                     ??___lmul:	
 10794                           ; 1 bytes @ 0x9
 10795                           
 10796  0079                     ??___lwmod:	
 10797                           ; 1 bytes @ 0x9
 10798                           
 10799  0079                     displayCharReverse@retValUpper:	
 10800                           ; 1 bytes @ 0x9
 10801                           
 10802  0079                     secret_check@buttonPressed:	
 10803                           ; 1 bytes @ 0x9
 10804                           
 10805                           
 10806                           ; 1 bytes @ 0x9
 10807  0079                     	ds	1
 10808  007A                     TMR0_Read16bitTimer@readValLow:	
 10809  007A                     displayCharReverse@retValUpperRev:	
 10810                           ; 1 bytes @ 0xA
 10811                           
 10812  007A                     ___lwmod@counter:	
 10813                           ; 1 bytes @ 0xA
 10814                           
 10815                           
 10816                           ; 1 bytes @ 0xA
 10817  007A                     	ds	1
 10818  007B                     ??_displayL2_ForceUpdate:	
 10819  007B                     ??_displayL2_SetUserLeds:	
 10820                           ; 1 bytes @ 0xB
 10821                           
 10822  007B                     ??_displayL2_ClrUserLeds:	
 10823                           ; 1 bytes @ 0xB
 10824                           
 10825  007B                     ??_displayL1_Initialize:	
 10826                           ; 1 bytes @ 0xB
 10827                           
 10828  007B                     TMR0_Read16bitTimer@readValHigh:	
 10829                           ; 1 bytes @ 0xB
 10830                           
 10831  007B                     displayL1_Initialize@display:	
 10832                           ; 1 bytes @ 0xB
 10833                           
 10834  007B                     displayCharReverse@k:	
 10835                           ; 1 bytes @ 0xB
 10836                           
 10837  007B                     displayL2_ForceUpdate@display:	
 10838                           ; 1 bytes @ 0xB
 10839                           
 10840  007B                     displayL2_SetUserLeds@display:	
 10841                           ; 1 bytes @ 0xB
 10842                           
 10843  007B                     displayL2_ClrUserLeds@display:	
 10844                           ; 1 bytes @ 0xB
 10845                           
 10846                           
 10847                           ; 1 bytes @ 0xB
 10848  007B                     	ds	1
 10849  007C                     ??_nullifyBadge_segDisplayErase:	
 10850  007C                     ??_nullifyBadge_segDisplayPutStr:	
 10851                           ; 1 bytes @ 0xC
 10852                           
 10853  007C                     ??_nullifyBadge_segDisplayForceUpdate:	
 10854                           ; 1 bytes @ 0xC
 10855                           
 10856  007C                     ??_nullifyBadge_userLedsSet:	
 10857                           ; 1 bytes @ 0xC
 10858                           
 10859  007C                     ??_nullifyBadge_platformInit:	
 10860                           ; 1 bytes @ 0xC
 10861                           
 10862  007C                     ??_flashy_Init:	
 10863                           ; 1 bytes @ 0xC
 10864                           
 10865  007C                     ??_menu_Init:	
 10866                           ; 1 bytes @ 0xC
 10867                           
 10868  007C                     ??_slot_Init:	
 10869                           ; 1 bytes @ 0xC
 10870                           
 10871  007C                     ??_locked_Init:	
 10872                           ; 1 bytes @ 0xC
 10873                           
 10874  007C                     ??_secret_Init:	
 10875                           ; 1 bytes @ 0xC
 10876                           
 10877  007C                     ??_displayL2_Initialize:	
 10878                           ; 1 bytes @ 0xC
 10879                           
 10880  007C                     ??_displayL2_EraseSegDisplay:	
 10881                           ; 1 bytes @ 0xC
 10882                           
 10883  007C                     ??_menu_clear:	
 10884                           ; 1 bytes @ 0xC
 10885                           
 10886  007C                     ??_menu_display_option:	
 10887                           ; 1 bytes @ 0xC
 10888                           
 10889  007C                     ??_menu_run_option:	
 10890                           ; 1 bytes @ 0xC
 10891                           
 10892  007C                     ??_locked_clear:	
 10893                           ; 1 bytes @ 0xC
 10894                           
 10895  007C                     ??_scheduler_TaskRun:	
 10896                           ; 1 bytes @ 0xC
 10897                           
 10898  007C                     ??_led_rand:	
 10899                           ; 1 bytes @ 0xC
 10900                           
 10901  007C                     ??_led_circle:	
 10902                           ; 1 bytes @ 0xC
 10903                           
 10904  007C                     ??_nullifyBadge_userLedsClr:	
 10905                           ; 1 bytes @ 0xC
 10906                           
 10907  007C                     ??_flashy_display_option:	
 10908                           ; 1 bytes @ 0xC
 10909                           
 10910                           
 10911                           	psect	cstackBANK0
 10912  0020                     __pcstackBANK0:	
 10913                           ; 1 bytes @ 0xC
 10914                           
 10915  0020                     ?_displayL1_SetSegChar:	
 10916  0020                     ??_secret_check:	
 10917                           ; 1 bytes @ 0x0
 10918                           
 10919  0020                     ?___lwmod:	
 10920                           ; 1 bytes @ 0x0
 10921                           
 10922  0020                     displayL1_SetSegChar@c:	
 10923                           ; 2 bytes @ 0x0
 10924                           
 10925  0020                     ___lwmod@divisor:	
 10926                           ; 1 bytes @ 0x0
 10927                           
 10928  0020                     ___lmul@product:	
 10929                           ; 2 bytes @ 0x0
 10930                           
 10931  0020                     displayL1_Update@tmpRxBuf:	
 10932                           ; 4 bytes @ 0x0
 10933                           
 10934                           
 10935                           ; 10 bytes @ 0x0
 10936  0020                     	ds	1
 10937  0021                     displayL1_SetSegChar@charPos:	
 10938                           
 10939                           ; 1 bytes @ 0x1
 10940  0021                     	ds	1
 10941  0022                     ??_displayL1_SetSegChar:	
 10942  0022                     ___lwmod@dividend:	
 10943                           ; 1 bytes @ 0x2
 10944                           
 10945                           
 10946                           ; 2 bytes @ 0x2
 10947  0022                     	ds	1
 10948  0023                     secret_check@size:	
 10949                           
 10950                           ; 2 bytes @ 0x3
 10951  0023                     	ds	1
 10952  0024                     ?_rand:	
 10953  0024                     ?_sprintf:	
 10954                           ; 2 bytes @ 0x4
 10955                           
 10956  0024                     sprintf@f:	
 10957                           ; 2 bytes @ 0x4
 10958                           
 10959                           
 10960                           ; 2 bytes @ 0x4
 10961  0024                     	ds	1
 10962  0025                     secret_check@currents_size:	
 10963                           
 10964                           ; 2 bytes @ 0x5
 10965  0025                     	ds	1
 10966  0026                     ??_rand:	
 10967  0026                     displayL1_SetSegChar@dispDataVectBaseIdx:	
 10968                           ; 1 bytes @ 0x6
 10969                           
 10970                           
 10971                           ; 1 bytes @ 0x6
 10972  0026                     	ds	1
 10973  0027                     displayL1_SetSegChar@display:	
 10974  0027                     secret_check@inputs:	
 10975                           ; 1 bytes @ 0x7
 10976                           
 10977                           
 10978                           ; 1 bytes @ 0x7
 10979  0027                     	ds	1
 10980  0028                     ??_sprintf:	
 10981  0028                     displayL1_SetSegChar@charData:	
 10982                           ; 1 bytes @ 0x8
 10983                           
 10984  0028                     secret_check@i:	
 10985                           ; 2 bytes @ 0x8
 10986                           
 10987                           
 10988                           ; 2 bytes @ 0x8
 10989  0028                     	ds	2
 10990  002A                     ?_displayL2_PutChar:	
 10991  002A                     displayL1_Update@display:	
 10992                           ; 1 bytes @ 0xA
 10993                           
 10994  002A                     displayL2_PutChar@c:	
 10995                           ; 1 bytes @ 0xA
 10996                           
 10997                           
 10998                           ; 1 bytes @ 0xA
 10999  002A                     	ds	1
 11000  002B                     ??_displayL2_PutChar:	
 11001  002B                     ?_displayL2_SetUserLeds:	
 11002                           ; 1 bytes @ 0xB
 11003                           
 11004  002B                     nullifyBadge_segDisplayForceUpdate@badge:	
 11005                           ; 1 bytes @ 0xB
 11006                           
 11007  002B                     nullifyBadge_userLedsClr@badge:	
 11008                           ; 1 bytes @ 0xB
 11009                           
 11010  002B                     displayL2_Initialize@display:	
 11011                           ; 1 bytes @ 0xB
 11012                           
 11013  002B                     displayL2_SetUserLeds@userLedData:	
 11014                           ; 1 bytes @ 0xB
 11015                           
 11016                           
 11017                           ; 2 bytes @ 0xB
 11018  002B                     	ds	1
 11019  002C                     nullifyBadge_platformInit@badge:	
 11020  002C                     sprintf@ap:	
 11021                           ; 1 bytes @ 0xC
 11022                           
 11023                           
 11024                           ; 1 bytes @ 0xC
 11025  002C                     	ds	1
 11026  002D                     ?_nullifyBadge_userLedsSet:	
 11027  002D                     sprintf@prec:	
 11028                           ; 1 bytes @ 0xD
 11029                           
 11030  002D                     nullifyBadge_userLedsSet@userLedData:	
 11031                           ; 1 bytes @ 0xD
 11032                           
 11033                           
 11034                           ; 2 bytes @ 0xD
 11035  002D                     	ds	1
 11036  002E                     displayL2_PutChar@k:	
 11037  002E                     sprintf@flag:	
 11038                           ; 1 bytes @ 0xE
 11039                           
 11040                           
 11041                           ; 1 bytes @ 0xE
 11042  002E                     	ds	1
 11043  002F                     nullifyBadge_userLedsSet@badge:	
 11044  002F                     displayL2_PutChar@display:	
 11045                           ; 1 bytes @ 0xF
 11046                           
 11047  002F                     sprintf@val:	
 11048                           ; 1 bytes @ 0xF
 11049                           
 11050                           
 11051                           ; 2 bytes @ 0xF
 11052  002F                     	ds	1
 11053  0030                     ?_displayL2_PutStr:	
 11054  0030                     ?_led_roundabout:	
 11055                           ; 1 bytes @ 0x10
 11056                           
 11057  0030                     ?_led_curtain:	
 11058                           ; 1 bytes @ 0x10
 11059                           
 11060  0030                     ?_led_circle:	
 11061                           ; 1 bytes @ 0x10
 11062                           
 11063  0030                     led_roundabout@counter:	
 11064                           ; 1 bytes @ 0x10
 11065                           
 11066  0030                     led_curtain@counter:	
 11067                           ; 2 bytes @ 0x10
 11068                           
 11069  0030                     led_rand@spark:	
 11070                           ; 2 bytes @ 0x10
 11071                           
 11072  0030                     led_circle@count:	
 11073                           ; 2 bytes @ 0x10
 11074                           
 11075  0030                     displayL2_PutStr@str:	
 11076                           ; 2 bytes @ 0x10
 11077                           
 11078                           
 11079                           ; 2 bytes @ 0x10
 11080  0030                     	ds	1
 11081  0031                     sprintf@sp:	
 11082                           
 11083                           ; 1 bytes @ 0x11
 11084  0031                     	ds	1
 11085  0032                     ??_displayL2_PutStr:	
 11086  0032                     ??_led_roundabout:	
 11087                           ; 1 bytes @ 0x12
 11088                           
 11089  0032                     ??_led_curtain:	
 11090                           ; 1 bytes @ 0x12
 11091                           
 11092  0032                     sprintf@width:	
 11093                           ; 1 bytes @ 0x12
 11094                           
 11095                           
 11096                           ; 2 bytes @ 0x12
 11097  0032                     	ds	2
 11098  0034                     sprintf@c:	
 11099  0034                     led_roundabout@leds:	
 11100                           ; 1 bytes @ 0x14
 11101                           
 11102  0034                     led_curtain@leds:	
 11103                           ; 2 bytes @ 0x14
 11104                           
 11105                           
 11106                           ; 2 bytes @ 0x14
 11107  0034                     	ds	1
 11108  0035                     displayL2_PutStr@display:	
 11109                           
 11110                           ; 1 bytes @ 0x15
 11111  0035                     	ds	1
 11112  0036                     displayL2_PutStr@k:	
 11113  0036                     led_roundabout@size:	
 11114                           ; 1 bytes @ 0x16
 11115                           
 11116  0036                     led_curtain@size:	
 11117                           ; 2 bytes @ 0x16
 11118                           
 11119                           
 11120                           ; 2 bytes @ 0x16
 11121  0036                     	ds	1
 11122  0037                     ?_nullifyBadge_segDisplayPutStr:	
 11123  0037                     displayL2_EraseSegDisplay@display:	
 11124                           ; 1 bytes @ 0x17
 11125                           
 11126  0037                     nullifyBadge_segDisplayPutStr@str:	
 11127                           ; 1 bytes @ 0x17
 11128                           
 11129                           
 11130                           ; 2 bytes @ 0x17
 11131  0037                     	ds	1
 11132  0038                     nullifyBadge_segDisplayErase@badge:	
 11133                           
 11134                           ; 1 bytes @ 0x18
 11135  0038                     	ds	1
 11136  0039                     ?_flashy_Init:	
 11137  0039                     ?_menu_Init:	
 11138                           ; 1 bytes @ 0x19
 11139                           
 11140  0039                     ?_slot_Init:	
 11141                           ; 1 bytes @ 0x19
 11142                           
 11143  0039                     ?_locked_Init:	
 11144                           ; 1 bytes @ 0x19
 11145                           
 11146  0039                     ?_secret_Init:	
 11147                           ; 1 bytes @ 0x19
 11148                           
 11149  0039                     ?_menu_clear:	
 11150                           ; 1 bytes @ 0x19
 11151                           
 11152  0039                     ?_locked_clear:	
 11153                           ; 1 bytes @ 0x19
 11154                           
 11155  0039                     nullifyBadge_segDisplayPutStr@badge:	
 11156                           ; 1 bytes @ 0x19
 11157                           
 11158  0039                     menu_Init@taskData:	
 11159                           ; 1 bytes @ 0x19
 11160                           
 11161  0039                     menu_clear@data:	
 11162                           ; 2 bytes @ 0x19
 11163                           
 11164  0039                     flashy_Init@taskData:	
 11165                           ; 2 bytes @ 0x19
 11166                           
 11167  0039                     locked_Init@taskData:	
 11168                           ; 2 bytes @ 0x19
 11169                           
 11170  0039                     locked_clear@data:	
 11171                           ; 2 bytes @ 0x19
 11172                           
 11173  0039                     secret_Init@taskData:	
 11174                           ; 2 bytes @ 0x19
 11175                           
 11176  0039                     slot_Init@taskData:	
 11177                           ; 2 bytes @ 0x19
 11178                           
 11179                           
 11180                           ; 2 bytes @ 0x19
 11181  0039                     	ds	1
 11182  003A                     ?_marquee:	
 11183  003A                     marquee@string:	
 11184                           ; 1 bytes @ 0x1A
 11185                           
 11186                           
 11187                           ; 2 bytes @ 0x1A
 11188  003A                     	ds	1
 11189  003B                     ?_menu_run_option:	
 11190  003B                     menu_Init@data:	
 11191                           ; 1 bytes @ 0x1B
 11192                           
 11193  003B                     menu_run_option@data:	
 11194                           ; 2 bytes @ 0x1B
 11195                           
 11196  003B                     flashy_Init@data:	
 11197                           ; 2 bytes @ 0x1B
 11198                           
 11199  003B                     locked_Init@data:	
 11200                           ; 2 bytes @ 0x1B
 11201                           
 11202  003B                     secret_Init@data:	
 11203                           ; 2 bytes @ 0x1B
 11204                           
 11205  003B                     slot_Init@data:	
 11206                           ; 2 bytes @ 0x1B
 11207                           
 11208                           
 11209                           ; 2 bytes @ 0x1B
 11210  003B                     	ds	1
 11211  003C                     marquee@count:	
 11212                           
 11213                           ; 2 bytes @ 0x1C
 11214  003C                     	ds	1
 11215  003D                     ?_scheduler_TaskAdd:	
 11216  003D                     scheduler_TaskAdd@task:	
 11217                           ; 1 bytes @ 0x1D
 11218                           
 11219                           
 11220                           ; 2 bytes @ 0x1D
 11221  003D                     	ds	1
 11222  003E                     ??_marquee:	
 11223                           
 11224                           ; 1 bytes @ 0x1E
 11225  003E                     	ds	1
 11226  003F                     ??_scheduler_TaskAdd:	
 11227  003F                     marquee@display_string:	
 11228                           ; 1 bytes @ 0x1F
 11229                           
 11230                           
 11231                           ; 5 bytes @ 0x1F
 11232  003F                     	ds	5
 11233  0044                     marquee@multiplier:	
 11234                           
 11235                           ; 2 bytes @ 0x24
 11236  0044                     	ds	1
 11237  0045                     scheduler_TaskAdd@scheduler:	
 11238                           
 11239                           ; 1 bytes @ 0x25
 11240  0045                     	ds	1
 11241  0046                     scheduler_TaskAdd@k:	
 11242  0046                     marquee@i:	
 11243                           ; 1 bytes @ 0x26
 11244                           
 11245                           
 11246                           ; 2 bytes @ 0x26
 11247  0046                     	ds	2
 11248  0048                     marquee@string_length:	
 11249                           
 11250                           ; 2 bytes @ 0x28
 11251  0048                     	ds	2
 11252  004A                     marquee@j:	
 11253                           
 11254                           ; 2 bytes @ 0x2A
 11255  004A                     	ds	2
 11256  004C                     ?_menu_display_option:	
 11257  004C                     ?_flashy_display_option:	
 11258                           ; 1 bytes @ 0x2C
 11259                           
 11260  004C                     menu_display_option@data:	
 11261                           ; 1 bytes @ 0x2C
 11262                           
 11263  004C                     flashy_display_option@data:	
 11264                           ; 2 bytes @ 0x2C
 11265                           
 11266                           
 11267                           ; 2 bytes @ 0x2C
 11268  004C                     	ds	2
 11269  004E                     menu_display_option@size:	
 11270                           
 11271                           ; 2 bytes @ 0x2E
 11272  004E                     	ds	2
 11273  0050                     menu_display_option@led:	
 11274                           
 11275                           ; 2 bytes @ 0x30
 11276  0050                     	ds	2
 11277  0052                     ?_flashy_Main:	
 11278  0052                     ?_menu_Main:	
 11279                           ; 1 bytes @ 0x32
 11280                           
 11281  0052                     ?_slot_Main:	
 11282                           ; 1 bytes @ 0x32
 11283                           
 11284  0052                     ?_locked_Main:	
 11285                           ; 1 bytes @ 0x32
 11286                           
 11287  0052                     ?_secret_Main:	
 11288                           ; 1 bytes @ 0x32
 11289                           
 11290  0052                     menu_Main@taskData:	
 11291                           ; 1 bytes @ 0x32
 11292                           
 11293  0052                     flashy_Main@taskData:	
 11294                           ; 2 bytes @ 0x32
 11295                           
 11296  0052                     locked_Main@taskData:	
 11297                           ; 2 bytes @ 0x32
 11298                           
 11299  0052                     secret_Main@taskData:	
 11300                           ; 2 bytes @ 0x32
 11301                           
 11302  0052                     slot_Main@taskData:	
 11303                           ; 2 bytes @ 0x32
 11304                           
 11305                           
 11306                           ; 2 bytes @ 0x32
 11307  0052                     	ds	2
 11308  0054                     ??_flashy_Main:	
 11309  0054                     ??_menu_Main:	
 11310                           ; 1 bytes @ 0x34
 11311                           
 11312  0054                     ??_slot_Main:	
 11313                           ; 1 bytes @ 0x34
 11314                           
 11315  0054                     ??_locked_Main:	
 11316                           ; 1 bytes @ 0x34
 11317                           
 11318  0054                     ??_secret_Main:	
 11319                           ; 1 bytes @ 0x34
 11320                           
 11321                           
 11322                           ; 1 bytes @ 0x34
 11323  0054                     	ds	1
 11324  0055                     slot_Main@buttonPressed:	
 11325                           
 11326                           ; 1 bytes @ 0x35
 11327  0055                     	ds	1
 11328  0056                     menu_Main@buttonPressed:	
 11329  0056                     locked_Main@buttonPressed:	
 11330                           ; 1 bytes @ 0x36
 11331                           
 11332  0056                     secret_Main@secret_found:	
 11333                           ; 1 bytes @ 0x36
 11334                           
 11335  0056                     slot_Main@data:	
 11336                           ; 1 bytes @ 0x36
 11337                           
 11338  0056                     flashy_Main@hit_counter:	
 11339                           ; 2 bytes @ 0x36
 11340                           
 11341                           
 11342                           ; 6 bytes @ 0x36
 11343  0056                     	ds	1
 11344  0057                     secret_Main@buttonPressed:	
 11345  0057                     menu_Main@data:	
 11346                           ; 1 bytes @ 0x37
 11347                           
 11348  0057                     locked_Main@data:	
 11349                           ; 2 bytes @ 0x37
 11350                           
 11351                           
 11352                           ; 2 bytes @ 0x37
 11353  0057                     	ds	1
 11354  0058                     secret_Main@data:	
 11355                           
 11356                           ; 2 bytes @ 0x38
 11357  0058                     	ds	4
 11358  005C                     flashy_Main@buttonPressed:	
 11359                           
 11360                           ; 2 bytes @ 0x3C
 11361  005C                     	ds	2
 11362  005E                     flashy_Main@data:	
 11363                           
 11364                           ; 2 bytes @ 0x3E
 11365  005E                     	ds	2
 11366  0060                     ?_scheduler_TaskRun:	
 11367  0060                     scheduler_TaskRun@task:	
 11368                           ; 1 bytes @ 0x40
 11369                           
 11370                           
 11371                           ; 2 bytes @ 0x40
 11372  0060                     	ds	2
 11373  0062                     ??_schedulerExecute:	
 11374                           
 11375                           ; 1 bytes @ 0x42
 11376  0062                     	ds	6
 11377  0068                     schedulerExecute@currentSystemTick:	
 11378                           
 11379                           ; 2 bytes @ 0x48
 11380  0068                     	ds	2
 11381  006A                     schedulerExecute@taskLastSystemTick:	
 11382                           
 11383                           ; 2 bytes @ 0x4A
 11384  006A                     	ds	2
 11385  006C                     schedulerExecute@tickDelta:	
 11386                           
 11387                           ; 2 bytes @ 0x4C
 11388  006C                     	ds	2
 11389  006E                     schedulerExecute@scheduler:	
 11390                           
 11391                           ; 1 bytes @ 0x4E
 11392  006E                     	ds	1
 11393  006F                     schedulerExecute@k:	
 11394                           
 11395                           ; 1 bytes @ 0x4F
 11396  006F                     	ds	1
 11397                           
 11398                           	psect	maintext
 11399  1616                     __pmaintext:	
 11400 ;;
 11401 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 11402 ;;
 11403 ;; *************** function _main *****************
 11404 ;; Defined at:
 11405 ;;		line 172 in file "main.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;		None
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;		None
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      void 
 11412 ;; Registers used:
 11413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11414 ;; Tracked objects:
 11415 ;;		On entry : B1F/0
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11421 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11422 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11423 ;;Total ram usage:        1 bytes
 11424 ;; Hardware stack levels required when called:   15
 11425 ;; This function calls:
 11426 ;;		_nullifyBadge_platformInit
 11427 ;;		_schedulerExecute
 11428 ;;		_scheduler_Init
 11429 ;;		_scheduler_TaskAdd
 11430 ;;		_scheduler_TaskInit
 11431 ;; This function is called by:
 11432 ;;		Startup code after reset
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           
 11437                           ;psect for function _main
 11438  1616                     _main:	
 11439                           
 11440                           ;main.c: 175: nullifyBadge_platformInit(&badge_inst);
 11441                           
 11442                           ;incstack = 0
 11443                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11444  1616  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11445  1617  3191  2133  3196   	fcall	_nullifyBadge_platformInit
 11446                           
 11447                           ;main.c: 178: scheduler_Init(&schedulerInst);
 11448  161A  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11449  161B  319B  2335  3196   	fcall	_scheduler_Init
 11450                           
 11451                           ;main.c: 181: scheduler_TaskInit(&flashy_task);
 11452  161E  30D6               	movlw	low _flashy_task
 11453  161F  00F1               	movwf	scheduler_TaskInit@task
 11454  1620  3000               	movlw	high _flashy_task
 11455  1621  00F2               	movwf	scheduler_TaskInit@task+1
 11456  1622  3190  2001  3196   	fcall	_scheduler_TaskInit
 11457                           
 11458                           ;main.c: 182: scheduler_TaskInit(&menu_task);
 11459  1625  30C9               	movlw	low _menu_task
 11460  1626  00F1               	movwf	scheduler_TaskInit@task
 11461  1627  3000               	movlw	high _menu_task
 11462  1628  00F2               	movwf	scheduler_TaskInit@task+1
 11463  1629  3190  2001  3196   	fcall	_scheduler_TaskInit
 11464                           
 11465                           ;main.c: 183: scheduler_TaskInit(&slot_task);
 11466  162C  30BC               	movlw	low _slot_task
 11467  162D  00F1               	movwf	scheduler_TaskInit@task
 11468  162E  3000               	movlw	high _slot_task
 11469  162F  00F2               	movwf	scheduler_TaskInit@task+1
 11470  1630  3190  2001  3196   	fcall	_scheduler_TaskInit
 11471                           
 11472                           ;main.c: 184: scheduler_TaskInit(&locked_task);
 11473  1633  304E               	movlw	low _locked_task
 11474  1634  00F1               	movwf	scheduler_TaskInit@task
 11475  1635  3001               	movlw	high _locked_task
 11476  1636  00F2               	movwf	scheduler_TaskInit@task+1
 11477  1637  3190  2001  3196   	fcall	_scheduler_TaskInit
 11478                           
 11479                           ;main.c: 185: scheduler_TaskInit(&secret_task);
 11480  163A  3041               	movlw	low _secret_task
 11481  163B  00F1               	movwf	scheduler_TaskInit@task
 11482  163C  3001               	movlw	high _secret_task
 11483  163D  00F2               	movwf	scheduler_TaskInit@task+1
 11484  163E  3190  2001  3196   	fcall	_scheduler_TaskInit
 11485                           
 11486                           ;main.c: 188: flashy_TaskData.badge = &badge_inst;
 11487  1641  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11488  1642  0021               	movlb	1	; select bank1
 11489  1643  00EF               	movwf	??_main^(0+128)
 11490  1644  086F               	movf	??_main^(0+128),w
 11491  1645  0025               	movlb	5	; select bank5
 11492  1646  00BC               	movwf	_flashy_TaskData^(0+640)
 11493                           
 11494                           ;main.c: 189: menu_TaskData.badge = &badge_inst;
 11495  1647  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11496  1648  0021               	movlb	1	; select bank1
 11497  1649  00EF               	movwf	??_main^(0+128)
 11498  164A  086F               	movf	??_main^(0+128),w
 11499  164B  0023               	movlb	3	; select bank3
 11500  164C  00D5               	movwf	_menu_TaskData^(0+384)
 11501                           
 11502                           ;main.c: 190: slot_TaskData.badge = &badge_inst;
 11503  164D  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11504  164E  0021               	movlb	1	; select bank1
 11505  164F  00EF               	movwf	??_main^(0+128)
 11506  1650  086F               	movf	??_main^(0+128),w
 11507  1651  0024               	movlb	4	; select bank4
 11508  1652  00DE               	movwf	_slot_TaskData^(0+512)
 11509                           
 11510                           ;main.c: 191: locked_TaskData.badge = &badge_inst;
 11511  1653  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11512  1654  0021               	movlb	1	; select bank1
 11513  1655  00EF               	movwf	??_main^(0+128)
 11514  1656  086F               	movf	??_main^(0+128),w
 11515  1657  0024               	movlb	4	; select bank4
 11516  1658  00D0               	movwf	_locked_TaskData^(0+512)
 11517                           
 11518                           ;main.c: 192: secret_TaskData.badge = &badge_inst;
 11519  1659  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 11520  165A  0021               	movlb	1	; select bank1
 11521  165B  00EF               	movwf	??_main^(0+128)
 11522  165C  086F               	movf	??_main^(0+128),w
 11523  165D  0024               	movlb	4	; select bank4
 11524  165E  00C2               	movwf	_secret_TaskData^(0+512)
 11525                           
 11526                           ;main.c: 195: badge_locked = 1;
 11527  165F  01FC               	clrf	_badge_locked
 11528  1660  0AFC               	incf	_badge_locked,f
 11529                           
 11530                           ;main.c: 198: flashy_task.taskData = (void *) &flashy_TaskData;
 11531  1661  30BC               	movlw	low _flashy_TaskData
 11532  1662  0021               	movlb	1	; select bank1
 11533  1663  00D8               	movwf	(low ((_flashy_task| 0+2)))^(0+128)
 11534  1664  3002               	movlw	high _flashy_TaskData
 11535  1665  00D9               	movwf	((low ((_flashy_task| 0+2))+1))^(0+128)
 11536                           
 11537                           ;main.c: 199: flashy_task.taskInitCallback = flashy_Init;
 11538  1666  30AC               	movlw	low _flashy_Init
 11539  1667  00DA               	movwf	(low ((_flashy_task| 0+4)))^(0+128)
 11540  1668  3008               	movlw	high _flashy_Init
 11541  1669  00DB               	movwf	((low ((_flashy_task| 0+4)))^(0+128)+1)
 11542                           
 11543                           ;main.c: 200: flashy_task.taskExecuteCallback = flashy_Main;
 11544  166A  30B5               	movlw	low _flashy_Main
 11545  166B  00DE               	movwf	(low ((_flashy_task| 0+8)))^(0+128)
 11546  166C  3000               	movlw	high _flashy_Main
 11547  166D  00DF               	movwf	((low ((_flashy_task| 0+8)))^(0+128)+1)
 11548                           
 11549                           ;main.c: 201: flashy_task.taskExitCallback = flashy_Exit;
 11550  166E  3000               	movlw	0
 11551  166F  00DC               	movwf	(low ((_flashy_task| 0+6)))^(0+128)
 11552  1670  3000               	movlw	0
 11553  1671  00DD               	movwf	((low ((_flashy_task| 0+6)))^(0+128)+1)
 11554                           
 11555                           ;main.c: 202: flashy_task.taskInterval = 10;
 11556  1672  300A               	movlw	10
 11557  1673  00E0               	movwf	(_flashy_task^(0+128)+10)
 11558  1674  3000               	movlw	0
 11559  1675  00E1               	movwf	(_flashy_task^(0+128)+11)
 11560                           
 11561                           ;main.c: 204: menu_task.taskData = (void *) &menu_TaskData;
 11562  1676  30D5               	movlw	low _menu_TaskData
 11563  1677  00CB               	movwf	(low ((_menu_task| 0+2)))^(0+128)
 11564  1678  3001               	movlw	high _menu_TaskData
 11565  1679  00CC               	movwf	((low ((_menu_task| 0+2))+1))^(0+128)
 11566                           
 11567                           ;main.c: 205: menu_task.taskInitCallback = menu_Init;
 11568  167A  309F               	movlw	low _menu_Init
 11569  167B  00CD               	movwf	(low ((_menu_task| 0+4)))^(0+128)
 11570  167C  3012               	movlw	high _menu_Init
 11571  167D  00CE               	movwf	((low ((_menu_task| 0+4)))^(0+128)+1)
 11572                           
 11573                           ;main.c: 206: menu_task.taskExecuteCallback = menu_Main;
 11574  167E  3014               	movlw	low _menu_Main
 11575  167F  00D1               	movwf	(low ((_menu_task| 0+8)))^(0+128)
 11576  1680  300E               	movlw	high _menu_Main
 11577  1681  00D2               	movwf	((low ((_menu_task| 0+8)))^(0+128)+1)
 11578                           
 11579                           ;main.c: 207: menu_task.taskExitCallback = menu_Exit;
 11580  1682  3000               	movlw	0
 11581  1683  00CF               	movwf	(low ((_menu_task| 0+6)))^(0+128)
 11582  1684  3000               	movlw	0
 11583  1685  00D0               	movwf	((low ((_menu_task| 0+6)))^(0+128)+1)
 11584                           
 11585                           ;main.c: 208: menu_task.taskInterval = 10;
 11586  1686  300A               	movlw	10
 11587  1687  00D3               	movwf	(_menu_task^(0+128)+10)
 11588  1688  3000               	movlw	0
 11589  1689  00D4               	movwf	(_menu_task^(0+128)+11)
 11590                           
 11591                           ;main.c: 210: slot_task.taskData = (void *) &slot_TaskData;
 11592  168A  305E               	movlw	low _slot_TaskData
 11593  168B  00BE               	movwf	(low ((_slot_task| 0+2)))^(0+128)
 11594  168C  3002               	movlw	high _slot_TaskData
 11595  168D  00BF               	movwf	((low ((_slot_task| 0+2))+1))^(0+128)
 11596                           
 11597                           ;main.c: 211: slot_task.taskInitCallback = slot_Init;
 11598  168E  3088               	movlw	low _slot_Init
 11599  168F  00C0               	movwf	(low ((_slot_task| 0+4)))^(0+128)
 11600  1690  3011               	movlw	high _slot_Init
 11601  1691  00C1               	movwf	((low ((_slot_task| 0+4)))^(0+128)+1)
 11602                           
 11603                           ;main.c: 212: slot_task.taskExecuteCallback = slot_Main;
 11604  1692  3057               	movlw	low _slot_Main
 11605  1693  00C4               	movwf	(low ((_slot_task| 0+8)))^(0+128)
 11606  1694  3014               	movlw	high _slot_Main
 11607  1695  00C5               	movwf	((low ((_slot_task| 0+8)))^(0+128)+1)
 11608                           
 11609                           ;main.c: 213: slot_task.taskExitCallback = slot_Exit;
 11610  1696  3000               	movlw	0
 11611  1697  00C2               	movwf	(low ((_slot_task| 0+6)))^(0+128)
 11612  1698  3000               	movlw	0
 11613  1699  00C3               	movwf	((low ((_slot_task| 0+6)))^(0+128)+1)
 11614                           
 11615                           ;main.c: 214: slot_task.taskInterval = 10;
 11616  169A  300A               	movlw	10
 11617  169B  00C6               	movwf	(_slot_task^(0+128)+10)
 11618  169C  3000               	movlw	0
 11619  169D  00C7               	movwf	(_slot_task^(0+128)+11)
 11620                           
 11621                           ;main.c: 216: locked_task.taskData = (void *) &locked_TaskData;
 11622  169E  3050               	movlw	low _locked_TaskData
 11623  169F  0022               	movlb	2	; select bank2
 11624  16A0  00D0               	movwf	(low ((_locked_task| (0+256)+2)))^0
 11625  16A1  3002               	movlw	high _locked_TaskData
 11626  16A2  00D1               	movwf	((low ((_locked_task| (0+256)+2))+1))^0
 11627                           
 11628                           ;main.c: 217: locked_task.taskInitCallback = locked_Init;
 11629  16A3  3001               	movlw	low _locked_Init
 11630  16A4  00D2               	movwf	(low ((_locked_task| (0+256)+4)))^0
 11631  16A5  3013               	movlw	high _locked_Init
 11632  16A6  00D3               	movwf	((low ((_locked_task| (0+256)+4)))^0+1)
 11633                           
 11634                           ;main.c: 218: locked_task.taskExecuteCallback = locked_Main;
 11635  16A7  304A               	movlw	low _locked_Main
 11636  16A8  00D6               	movwf	(low ((_locked_task| (0+256)+8)))^0
 11637  16A9  300C               	movlw	high _locked_Main
 11638  16AA  00D7               	movwf	((low ((_locked_task| (0+256)+8)))^0+1)
 11639                           
 11640                           ;main.c: 219: locked_task.taskExitCallback = locked_Exit;
 11641  16AB  3000               	movlw	0
 11642  16AC  00D4               	movwf	(low ((_locked_task| (0+256)+6)))^0
 11643  16AD  3000               	movlw	0
 11644  16AE  00D5               	movwf	((low ((_locked_task| (0+256)+6)))^0+1)
 11645                           
 11646                           ;main.c: 220: locked_task.taskInterval = 10;
 11647  16AF  300A               	movlw	10
 11648  16B0  00D8               	movwf	(_locked_task^(0+256)+10)
 11649  16B1  3000               	movlw	0
 11650  16B2  00D9               	movwf	(_locked_task^(0+256)+11)
 11651                           
 11652                           ;main.c: 222: secret_task.taskData = (void *) &secret_TaskData;
 11653  16B3  3042               	movlw	low _secret_TaskData
 11654  16B4  00C3               	movwf	(low ((_secret_task| (0+256)+2)))^0
 11655  16B5  3002               	movlw	high _secret_TaskData
 11656  16B6  00C4               	movwf	((low ((_secret_task| (0+256)+2))+1))^0
 11657                           
 11658                           ;main.c: 223: secret_task.taskInitCallback = secret_Init;
 11659  16B7  30E2               	movlw	low _secret_Init
 11660  16B8  00C5               	movwf	(low ((_secret_task| (0+256)+4)))^0
 11661  16B9  3011               	movlw	high _secret_Init
 11662  16BA  00C6               	movwf	((low ((_secret_task| (0+256)+4)))^0+1)
 11663                           
 11664                           ;main.c: 224: secret_task.taskExecuteCallback = secret_Main;
 11665  16BB  308D               	movlw	low _secret_Main
 11666  16BC  00C9               	movwf	(low ((_secret_task| (0+256)+8)))^0
 11667  16BD  300A               	movlw	high _secret_Main
 11668  16BE  00CA               	movwf	((low ((_secret_task| (0+256)+8)))^0+1)
 11669                           
 11670                           ;main.c: 225: secret_task.taskExitCallback = secret_Exit;
 11671  16BF  3000               	movlw	0
 11672  16C0  00C7               	movwf	(low ((_secret_task| (0+256)+6)))^0
 11673  16C1  3000               	movlw	0
 11674  16C2  00C8               	movwf	((low ((_secret_task| (0+256)+6)))^0+1)
 11675                           
 11676                           ;main.c: 226: secret_task.taskInterval = 10;
 11677  16C3  300A               	movlw	10
 11678  16C4  00CB               	movwf	(_secret_task^(0+256)+10)
 11679  16C5  3000               	movlw	0
 11680  16C6  00CC               	movwf	(_secret_task^(0+256)+11)
 11681                           
 11682                           ;main.c: 229: secret_value = SECRET_VALUE_INIT;
 11683  16C7  0021               	movlb	1	; select bank1
 11684  16C8  01E3               	clrf	_secret_value^(0+128)
 11685  16C9  01E4               	clrf	(_secret_value+1)^(0+128)
 11686                           
 11687                           ;main.c: 232: currentTask = FLASHY_TASK;
 11688  16CA  3002               	movlw	2
 11689  16CB  00B2               	movwf	_currentTask^(0+128)
 11690  16CC  3000               	movlw	0
 11691  16CD  00B3               	movwf	(_currentTask^(0+128)+1)
 11692                           
 11693                           ;main.c: 233: scheduler_TaskAdd(&schedulerInst, &flashy_task);
 11694  16CE  30D6               	movlw	low _flashy_task
 11695  16CF  0020               	movlb	0	; select bank0
 11696  16D0  00BD               	movwf	scheduler_TaskAdd@task
 11697  16D1  3000               	movlw	high _flashy_task
 11698  16D2  00BE               	movwf	scheduler_TaskAdd@task+1
 11699  16D3  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11700  16D4  3194  24D9  3196   	fcall	_scheduler_TaskAdd
 11701                           
 11702                           ;main.c: 234: scheduler_TaskAdd(&schedulerInst, &menu_task);
 11703  16D7  30C9               	movlw	low _menu_task
 11704  16D8  0020               	movlb	0	; select bank0
 11705  16D9  00BD               	movwf	scheduler_TaskAdd@task
 11706  16DA  3000               	movlw	high _menu_task
 11707  16DB  00BE               	movwf	scheduler_TaskAdd@task+1
 11708  16DC  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11709  16DD  3194  24D9  3196   	fcall	_scheduler_TaskAdd
 11710                           
 11711                           ;main.c: 235: scheduler_TaskAdd(&schedulerInst, &slot_task);
 11712  16E0  30BC               	movlw	low _slot_task
 11713  16E1  0020               	movlb	0	; select bank0
 11714  16E2  00BD               	movwf	scheduler_TaskAdd@task
 11715  16E3  3000               	movlw	high _slot_task
 11716  16E4  00BE               	movwf	scheduler_TaskAdd@task+1
 11717  16E5  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11718  16E6  3194  24D9  3196   	fcall	_scheduler_TaskAdd
 11719                           
 11720                           ;main.c: 236: scheduler_TaskAdd(&schedulerInst, &locked_task);
 11721  16E9  304E               	movlw	low _locked_task
 11722  16EA  0020               	movlb	0	; select bank0
 11723  16EB  00BD               	movwf	scheduler_TaskAdd@task
 11724  16EC  3001               	movlw	high _locked_task
 11725  16ED  00BE               	movwf	scheduler_TaskAdd@task+1
 11726  16EE  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11727  16EF  3194  24D9  3196   	fcall	_scheduler_TaskAdd
 11728                           
 11729                           ;main.c: 237: scheduler_TaskAdd(&schedulerInst, &secret_task);
 11730  16F2  3041               	movlw	low _secret_task
 11731  16F3  0020               	movlb	0	; select bank0
 11732  16F4  00BD               	movwf	scheduler_TaskAdd@task
 11733  16F5  3001               	movlw	high _secret_task
 11734  16F6  00BE               	movwf	scheduler_TaskAdd@task+1
 11735  16F7  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11736  16F8  3194  24D9  3196   	fcall	_scheduler_TaskAdd
 11737  16FB                     l7666:	
 11738                           ;main.c: 239: while(1){
 11739                           
 11740                           
 11741                           ;main.c: 240: schedulerExecute(&schedulerInst);
 11742  16FB  3020               	movlw	(low (_schedulerInst| (0+512)))& (0+255)
 11743  16FC  3193  23DB  3196   	fcall	_schedulerExecute
 11744  16FF  2EFB               	goto	l7666
 11745  1700                     __end_of_main:	
 11746                           
 11747                           	psect	text1
 11748  1001                     __ptext1:	
 11749 ;; *************** function _scheduler_TaskInit *****************
 11750 ;; Defined at:
 11751 ;;		line 36 in file "cooperative_scheduler.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;  task            2    1[COMMON] PTR struct t_schedulerTa
 11754 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 11755 ;;		 -> flashy_task(13), 
 11756 ;; Auto vars:     Size  Location     Type
 11757 ;;		None
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  1    wreg      void 
 11760 ;; Registers used:
 11761 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11762 ;; Tracked objects:
 11763 ;;		On entry : 0/0
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11770 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11771 ;;Total ram usage:        4 bytes
 11772 ;; Hardware stack levels used:    1
 11773 ;; Hardware stack levels required when called:    4
 11774 ;; This function calls:
 11775 ;;		Nothing
 11776 ;; This function is called by:
 11777 ;;		_main
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781                           
 11782                           ;psect for function _scheduler_TaskInit
 11783  1001                     _scheduler_TaskInit:	
 11784                           
 11785                           ;cooperative_scheduler.c: 37: task->systemTickLastExecuted = 0;
 11786                           
 11787                           ;incstack = 0
 11788                           ; Regs used in _scheduler_TaskInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 11789  1001  0871               	movf	scheduler_TaskInit@task,w
 11790  1002  0086               	movwf	6
 11791  1003  0872               	movf	scheduler_TaskInit@task+1,w
 11792  1004  0087               	movwf	7
 11793  1005  3000               	movlw	0
 11794  1006  3FC0               	movwi [0]fsr1
 11795  1007  3FC1               	movwi [1]fsr1
 11796                           
 11797                           ;cooperative_scheduler.c: 38: task->taskData = (0);
 11798  1008  0871               	movf	scheduler_TaskInit@task,w
 11799  1009  0086               	movwf	6
 11800  100A  0872               	movf	scheduler_TaskInit@task+1,w
 11801  100B  0087               	movwf	7
 11802  100C  3142               	addfsr 1,2
 11803  100D  3000               	movlw	0
 11804  100E  3FC0               	movwi [0]fsr1
 11805  100F  3FC1               	movwi [1]fsr1
 11806                           
 11807                           ;cooperative_scheduler.c: 39: task->taskInitCallback = (0);
 11808  1010  0871               	movf	scheduler_TaskInit@task,w
 11809  1011  0086               	movwf	6
 11810  1012  0872               	movf	scheduler_TaskInit@task+1,w
 11811  1013  0087               	movwf	7
 11812  1014  3144               	addfsr 1,4
 11813  1015  3000               	movlw	0
 11814  1016  3FC0               	movwi [0]fsr1
 11815  1017  3FC1               	movwi [1]fsr1
 11816                           
 11817                           ;cooperative_scheduler.c: 40: task->taskExitCallback = (0);
 11818  1018  0871               	movf	scheduler_TaskInit@task,w
 11819  1019  0086               	movwf	6
 11820  101A  0872               	movf	scheduler_TaskInit@task+1,w
 11821  101B  0087               	movwf	7
 11822  101C  3146               	addfsr 1,6
 11823  101D  3000               	movlw	0
 11824  101E  3FC0               	movwi [0]fsr1
 11825  101F  3FC1               	movwi [1]fsr1
 11826                           
 11827                           ;cooperative_scheduler.c: 41: task->taskExecuteCallback = (0);
 11828  1020  0871               	movf	scheduler_TaskInit@task,w
 11829  1021  0086               	movwf	6
 11830  1022  0872               	movf	scheduler_TaskInit@task+1,w
 11831  1023  0087               	movwf	7
 11832  1024  3148               	addfsr 1,8
 11833  1025  3000               	movlw	0
 11834  1026  3FC0               	movwi [0]fsr1
 11835  1027  3FC1               	movwi [1]fsr1
 11836                           
 11837                           ;cooperative_scheduler.c: 42: task->taskInterval = 65535;
 11838  1028  0871               	movf	scheduler_TaskInit@task,w
 11839  1029  0086               	movwf	6
 11840  102A  0872               	movf	scheduler_TaskInit@task+1,w
 11841  102B  0087               	movwf	7
 11842  102C  314A               	addfsr 1,10
 11843  102D  30FF               	movlw	255
 11844  102E  3FC0               	movwi [0]fsr1
 11845  102F  30FF               	movlw	255
 11846  1030  3FC1               	movwi [1]fsr1
 11847                           
 11848                           ;cooperative_scheduler.c: 43: task->taskId = -1;
 11849  1031  0871               	movf	scheduler_TaskInit@task,w
 11850  1032  3E0C               	addlw	12
 11851  1033  00F3               	movwf	??_scheduler_TaskInit
 11852  1034  3000               	movlw	0
 11853  1035  3D72               	addwfc	scheduler_TaskInit@task+1,w
 11854  1036  00F4               	movwf	??_scheduler_TaskInit+1
 11855  1037  0873               	movf	??_scheduler_TaskInit,w
 11856  1038  0086               	movwf	6
 11857  1039  0874               	movf	??_scheduler_TaskInit+1,w
 11858  103A  0087               	movwf	7
 11859  103B  30FF               	movlw	-1
 11860  103C  0081               	movwf	1
 11861  103D  0008               	return
 11862  103E                     __end_of_scheduler_TaskInit:	
 11863                           
 11864                           	psect	text2
 11865  14D9                     __ptext2:	
 11866 ;; *************** function _scheduler_TaskAdd *****************
 11867 ;; Defined at:
 11868 ;;		line 46 in file "cooperative_scheduler.c"
 11869 ;; Parameters:    Size  Location     Type
 11870 ;;  scheduler       1    wreg     PTR struct t_scheduler
 11871 ;;		 -> schedulerInst(34), 
 11872 ;;  task            2   29[BANK0 ] PTR struct t_schedulerTa
 11873 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 11874 ;;		 -> flashy_task(13), 
 11875 ;; Auto vars:     Size  Location     Type
 11876 ;;  scheduler       1   37[BANK0 ] PTR struct t_scheduler
 11877 ;;		 -> schedulerInst(34), 
 11878 ;;  k               1   38[BANK0 ] unsigned char 
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      char 
 11881 ;; Registers used:
 11882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11889 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11890 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11891 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11892 ;;Total ram usage:       10 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:   11
 11895 ;; This function calls:
 11896 ;;		Absolute function
 11897 ;;		_flashy_Init
 11898 ;;		_locked_Init
 11899 ;;		_menu_Init
 11900 ;;		_secret_Init
 11901 ;;		_slot_Init
 11902 ;; This function is called by:
 11903 ;;		_main
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           
 11908                           ;psect for function _scheduler_TaskAdd
 11909  14D9                     _scheduler_TaskAdd:	
 11910                           
 11911                           ;incstack = 0
 11912                           ; Regs used in _scheduler_TaskAdd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11913                           ;scheduler_TaskAdd@scheduler stored from wreg
 11914  14D9  0020               	movlb	0	; select bank0
 11915  14DA  00C5               	movwf	scheduler_TaskAdd@scheduler
 11916                           
 11917                           ;cooperative_scheduler.c: 47: u8 k;
 11918                           ;cooperative_scheduler.c: 48: for (k = 0; k < 16; k++) {
 11919  14DB  01C6               	clrf	scheduler_TaskAdd@k
 11920  14DC  3010               	movlw	16
 11921  14DD  0246               	subwf	scheduler_TaskAdd@k,w
 11922  14DE  1803               	btfsc	3,0
 11923  14DF  2D4E               	goto	l7474
 11924  14E0                     l7460:	
 11925                           
 11926                           ;cooperative_scheduler.c: 49: if (!(scheduler->taskEntryVector & (1 << k)) ) {
 11927  14E0  0845               	movf	scheduler_TaskAdd@scheduler,w
 11928  14E1  3E20               	addlw	32
 11929  14E2  0086               	movwf	6
 11930  14E3  3002               	movlw	2	; select bank4/5
 11931  14E4  0087               	movwf	7
 11932  14E5  3F40               	moviw [0]fsr1
 11933  14E6  00BF               	movwf	??_scheduler_TaskAdd
 11934  14E7  3F41               	moviw [1]fsr1
 11935  14E8  00C0               	movwf	??_scheduler_TaskAdd+1
 11936  14E9  3001               	movlw	1
 11937  14EA  00C1               	movwf	??_scheduler_TaskAdd+2
 11938  14EB  3000               	movlw	0
 11939  14EC  00C2               	movwf	??_scheduler_TaskAdd+3
 11940  14ED  0A46               	incf	scheduler_TaskAdd@k,w
 11941  14EE  2CF1               	goto	u4234
 11942  14EF                     u4235:	
 11943  14EF  35C1               	lslf	??_scheduler_TaskAdd+2,f
 11944  14F0  0DC2               	rlf	??_scheduler_TaskAdd+3,f
 11945  14F1                     u4234:	
 11946  14F1  0B89               	decfsz	9,f
 11947  14F2  2CEF               	goto	u4235
 11948  14F3  083F               	movf	??_scheduler_TaskAdd,w
 11949  14F4  0541               	andwf	??_scheduler_TaskAdd+2,w
 11950  14F5  00C3               	movwf	??_scheduler_TaskAdd+4
 11951  14F6  0840               	movf	??_scheduler_TaskAdd+1,w
 11952  14F7  0542               	andwf	??_scheduler_TaskAdd+3,w
 11953  14F8  00C4               	movwf	??_scheduler_TaskAdd+5
 11954  14F9  0843               	movf	??_scheduler_TaskAdd+4,w
 11955  14FA  0444               	iorwf	??_scheduler_TaskAdd+5,w
 11956  14FB  1D03               	btfss	3,2
 11957  14FC  2D46               	goto	l7470
 11958                           
 11959                           ;cooperative_scheduler.c: 50: scheduler->tasks[k] = task;
 11960  14FD  3546               	lslf	scheduler_TaskAdd@k,w
 11961  14FE  0745               	addwf	scheduler_TaskAdd@scheduler,w
 11962  14FF  00BF               	movwf	??_scheduler_TaskAdd
 11963  1500  083F               	movf	??_scheduler_TaskAdd,w
 11964  1501  0086               	movwf	6
 11965  1502  3002               	movlw	2	; select bank4/5
 11966  1503  0087               	movwf	7
 11967  1504  083D               	movf	scheduler_TaskAdd@task,w
 11968  1505  3FC0               	movwi [0]fsr1
 11969  1506  083E               	movf	scheduler_TaskAdd@task+1,w
 11970  1507  3FC1               	movwi [1]fsr1
 11971                           
 11972                           ;cooperative_scheduler.c: 51: scheduler->taskEntryVector |= (1 << k);
 11973  1508  3001               	movlw	1
 11974  1509  00BF               	movwf	??_scheduler_TaskAdd
 11975  150A  3000               	movlw	0
 11976  150B  00C0               	movwf	??_scheduler_TaskAdd+1
 11977  150C  0A46               	incf	scheduler_TaskAdd@k,w
 11978  150D  2D10               	goto	u4254
 11979  150E                     u4255:	
 11980  150E  35BF               	lslf	??_scheduler_TaskAdd,f
 11981  150F  0DC0               	rlf	??_scheduler_TaskAdd+1,f
 11982  1510                     u4254:	
 11983  1510  0B89               	decfsz	9,f
 11984  1511  2D0E               	goto	u4255
 11985  1512  0845               	movf	scheduler_TaskAdd@scheduler,w
 11986  1513  3E20               	addlw	32
 11987  1514  0086               	movwf	6
 11988  1515  3002               	movlw	2	; select bank4/5
 11989  1516  0087               	movwf	7
 11990  1517  083F               	movf	??_scheduler_TaskAdd,w
 11991  1518  0481               	iorwf	1,f
 11992  1519  3141               	addfsr 1,1
 11993  151A  0840               	movf	??_scheduler_TaskAdd+1,w
 11994  151B  0481               	iorwf	1,f
 11995                           
 11996                           ;cooperative_scheduler.c: 53: if (task->taskInitCallback != (0)) {
 11997  151C  083D               	movf	scheduler_TaskAdd@task,w
 11998  151D  0086               	movwf	6
 11999  151E  083E               	movf	scheduler_TaskAdd@task+1,w
 12000  151F  0087               	movwf	7
 12001  1520  3144               	addfsr 1,4
 12002  1521  0016               	moviw fsr1++
 12003  1522  0401               	iorwf	1,w
 12004  1523  1903               	btfsc	3,2
 12005  1524  2D38               	goto	l7466
 12006                           
 12007                           ;cooperative_scheduler.c: 54: task->taskInitCallback (task->taskData);
 12008  1525  083D               	movf	scheduler_TaskAdd@task,w
 12009  1526  0086               	movwf	6
 12010  1527  083E               	movf	scheduler_TaskAdd@task+1,w
 12011  1528  0087               	movwf	7
 12012  1529  3142               	addfsr 1,2
 12013  152A  3F40               	moviw [0]fsr1
 12014  152B  00B9               	movwf	secret_Init@taskData
 12015  152C  3F41               	moviw [1]fsr1
 12016  152D  00BA               	movwf	secret_Init@taskData+1
 12017  152E  083D               	movf	scheduler_TaskAdd@task,w
 12018  152F  0086               	movwf	6
 12019  1530  083E               	movf	scheduler_TaskAdd@task+1,w
 12020  1531  0087               	movwf	7
 12021  1532  3144               	addfsr 1,4
 12022  1533  3F41               	moviw [1]fsr1
 12023  1534  008A               	movwf	10
 12024  1535  3F40               	moviw [0]fsr1
 12025  1536  000A               	callw
 12026  1537  3194               	pagesel	$
 12027  1538                     l7466:	
 12028                           
 12029                           ;cooperative_scheduler.c: 55: }
 12030                           ;cooperative_scheduler.c: 57: task->taskId = (s8) k;
 12031  1538  0020               	movlb	0	; select bank0
 12032  1539  083D               	movf	scheduler_TaskAdd@task,w
 12033  153A  3E0C               	addlw	12
 12034  153B  00BF               	movwf	??_scheduler_TaskAdd
 12035  153C  3000               	movlw	0
 12036  153D  3D3E               	addwfc	scheduler_TaskAdd@task+1,w
 12037  153E  00C0               	movwf	??_scheduler_TaskAdd+1
 12038  153F  083F               	movf	??_scheduler_TaskAdd,w
 12039  1540  0086               	movwf	6
 12040  1541  0840               	movf	??_scheduler_TaskAdd+1,w
 12041  1542  0087               	movwf	7
 12042  1543  0846               	movf	scheduler_TaskAdd@k,w
 12043  1544  0081               	movwf	1
 12044                           
 12045                           ;cooperative_scheduler.c: 58: return k;
 12046                           ;	Return value of _scheduler_TaskAdd is never used
 12047  1545  0008               	return
 12048  1546                     l7470:	
 12049  1546  3001               	movlw	1
 12050  1547  00BF               	movwf	??_scheduler_TaskAdd
 12051  1548  083F               	movf	??_scheduler_TaskAdd,w
 12052  1549  07C6               	addwf	scheduler_TaskAdd@k,f
 12053  154A  3010               	movlw	16
 12054  154B  0246               	subwf	scheduler_TaskAdd@k,w
 12055  154C  1C03               	skipc
 12056  154D  2CE0               	goto	l7460
 12057  154E                     l7474:	
 12058                           
 12059                           ;cooperative_scheduler.c: 59: }
 12060                           ;cooperative_scheduler.c: 60: }
 12061                           ;cooperative_scheduler.c: 62: task->taskId = -1;
 12062  154E  083D               	movf	scheduler_TaskAdd@task,w
 12063  154F  3E0C               	addlw	12
 12064  1550  00BF               	movwf	??_scheduler_TaskAdd
 12065  1551  3000               	movlw	0
 12066  1552  3D3E               	addwfc	scheduler_TaskAdd@task+1,w
 12067  1553  00C0               	movwf	??_scheduler_TaskAdd+1
 12068  1554  083F               	movf	??_scheduler_TaskAdd,w
 12069  1555  0086               	movwf	6
 12070  1556  0840               	movf	??_scheduler_TaskAdd+1,w
 12071  1557  0087               	movwf	7
 12072  1558  30FF               	movlw	-1
 12073  1559  0081               	movwf	1
 12074  155A  0008               	return
 12075  155B                     __end_of_scheduler_TaskAdd:	
 12076                           ;cooperative_scheduler.c: 63: return -1;
 12077                           ;	Return value of _scheduler_TaskAdd is never used
 12078                           
 12079                           
 12080                           	psect	text3
 12081  11E2                     __ptext3:	
 12082 ;; *************** function _secret_Init *****************
 12083 ;; Defined at:
 12084 ;;		line 51 in file "secret_task.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;  taskData        2   25[BANK0 ] PTR void 
 12087 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12088 ;;		 -> flashy_TaskData(26), NULL(0), 
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  data            2   27[BANK0 ] PTR struct t_secret_task
 12091 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12092 ;;		 -> flashy_TaskData(26), NULL(0), 
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  1    wreg      void 
 12095 ;; Registers used:
 12096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12103 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12105 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12106 ;;Total ram usage:        4 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; Hardware stack levels required when called:   10
 12109 ;; This function calls:
 12110 ;;		_nullifyBadge_segDisplayErase
 12111 ;;		_nullifyBadge_segDisplayRegister
 12112 ;;		_nullifyBadge_userLedsClr
 12113 ;;		_nullifyBadge_userLedsRegister
 12114 ;; This function is called by:
 12115 ;;		_main
 12116 ;;		_scheduler_TaskAdd
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120                           
 12121                           ;psect for function _secret_Init
 12122  11E2                     _secret_Init:	
 12123                           
 12124                           ;secret_task.c: 52: struct t_secret_taskData *data = (struct t_secret_taskData *) taskDa
      +                          ta;
 12125                           
 12126                           ;incstack = 0
 12127                           ; Regs used in _secret_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12128  11E2  0020               	movlb	0	; select bank0
 12129  11E3  083A               	movf	secret_Init@taskData+1,w
 12130  11E4  00BC               	movwf	secret_Init@data+1
 12131  11E5  0839               	movf	secret_Init@taskData,w
 12132  11E6  00BB               	movwf	secret_Init@data
 12133                           
 12134                           ;secret_task.c: 55: nullifyBadge_userLedsRegister(data->badge);
 12135  11E7  083B               	movf	secret_Init@data,w
 12136  11E8  0086               	movwf	6
 12137  11E9  083C               	movf	secret_Init@data+1,w
 12138  11EA  0087               	movwf	7
 12139  11EB  0801               	movf	1,w
 12140  11EC  3199  2198  3191   	fcall	_nullifyBadge_userLedsRegister
 12141                           
 12142                           ;secret_task.c: 56: nullifyBadge_userLedsClr(data->badge);
 12143  11EF  0020               	movlb	0	; select bank0
 12144  11F0  083B               	movf	secret_Init@data,w
 12145  11F1  0086               	movwf	6
 12146  11F2  083C               	movf	secret_Init@data+1,w
 12147  11F3  0087               	movwf	7
 12148  11F4  0801               	movf	1,w
 12149  11F5  3198  209C  3191   	fcall	_nullifyBadge_userLedsClr
 12150                           
 12151                           ;secret_task.c: 57: nullifyBadge_segDisplayRegister(data->badge);
 12152  11F8  0020               	movlb	0	; select bank0
 12153  11F9  083B               	movf	secret_Init@data,w
 12154  11FA  0086               	movwf	6
 12155  11FB  083C               	movf	secret_Init@data+1,w
 12156  11FC  0087               	movwf	7
 12157  11FD  0801               	movf	1,w
 12158  11FE  3198  20AA  3191   	fcall	_nullifyBadge_segDisplayRegister
 12159                           
 12160                           ;secret_task.c: 58: nullifyBadge_segDisplayErase(data->badge);
 12161  1201  0020               	movlb	0	; select bank0
 12162  1202  083B               	movf	secret_Init@data,w
 12163  1203  0086               	movwf	6
 12164  1204  083C               	movf	secret_Init@data+1,w
 12165  1205  0087               	movwf	7
 12166  1206  0801               	movf	1,w
 12167  1207  3198  2096  3191   	fcall	_nullifyBadge_segDisplayErase
 12168                           
 12169                           ;secret_task.c: 61: data->delayTickCount = 300;
 12170  120A  0020               	movlb	0	; select bank0
 12171  120B  083B               	movf	secret_Init@data,w
 12172  120C  0086               	movwf	6
 12173  120D  083C               	movf	secret_Init@data+1,w
 12174  120E  0087               	movwf	7
 12175  120F  3142               	addfsr 1,2
 12176  1210  302C               	movlw	44
 12177  1211  3FC0               	movwi [0]fsr1
 12178  1212  3001               	movlw	1
 12179  1213  3FC1               	movwi [1]fsr1
 12180                           
 12181                           ;secret_task.c: 62: data->holdCountA = 0;
 12182  1214  083B               	movf	secret_Init@data,w
 12183  1215  0086               	movwf	6
 12184  1216  083C               	movf	secret_Init@data+1,w
 12185  1217  0087               	movwf	7
 12186  1218  3144               	addfsr 1,4
 12187  1219  3000               	movlw	0
 12188  121A  3FC0               	movwi [0]fsr1
 12189  121B  3FC1               	movwi [1]fsr1
 12190                           
 12191                           ;secret_task.c: 63: data->holdCountB = 0;
 12192  121C  083B               	movf	secret_Init@data,w
 12193  121D  0086               	movwf	6
 12194  121E  083C               	movf	secret_Init@data+1,w
 12195  121F  0087               	movwf	7
 12196  1220  3146               	addfsr 1,6
 12197  1221  3000               	movlw	0
 12198  1222  3FC0               	movwi [0]fsr1
 12199  1223  3FC1               	movwi [1]fsr1
 12200                           
 12201                           ;secret_task.c: 64: data->holdCountX = 0;
 12202  1224  083B               	movf	secret_Init@data,w
 12203  1225  0086               	movwf	6
 12204  1226  083C               	movf	secret_Init@data+1,w
 12205  1227  0087               	movwf	7
 12206  1228  3148               	addfsr 1,8
 12207  1229  3000               	movlw	0
 12208  122A  3FC0               	movwi [0]fsr1
 12209  122B  3FC1               	movwi [1]fsr1
 12210                           
 12211                           ;secret_task.c: 65: data->holdCountY = 0;
 12212  122C  083B               	movf	secret_Init@data,w
 12213  122D  0086               	movwf	6
 12214  122E  083C               	movf	secret_Init@data+1,w
 12215  122F  0087               	movwf	7
 12216  1230  314A               	addfsr 1,10
 12217  1231  3000               	movlw	0
 12218  1232  3FC0               	movwi [0]fsr1
 12219  1233  3FC1               	movwi [1]fsr1
 12220                           
 12221                           ;secret_task.c: 66: data->noholdCount = 0;
 12222  1234  083B               	movf	secret_Init@data,w
 12223  1235  0086               	movwf	6
 12224  1236  083C               	movf	secret_Init@data+1,w
 12225  1237  0087               	movwf	7
 12226  1238  314C               	addfsr 1,12
 12227  1239  3000               	movlw	0
 12228  123A  3FC0               	movwi [0]fsr1
 12229  123B  3FC1               	movwi [1]fsr1
 12230  123C  0008               	return
 12231  123D                     __end_of_secret_Init:	
 12232                           
 12233                           	psect	text4
 12234  1301                     __ptext4:	
 12235 ;; *************** function _locked_Init *****************
 12236 ;; Defined at:
 12237 ;;		line 64 in file "locked_task.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;  taskData        2   25[BANK0 ] PTR void 
 12240 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12241 ;;		 -> flashy_TaskData(26), NULL(0), 
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;  data            2   27[BANK0 ] PTR struct t_locked_task
 12244 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12245 ;;		 -> flashy_TaskData(26), NULL(0), 
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  1    wreg      void 
 12248 ;; Registers used:
 12249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12258 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12259 ;;Total ram usage:        4 bytes
 12260 ;; Hardware stack levels used:    1
 12261 ;; Hardware stack levels required when called:   10
 12262 ;; This function calls:
 12263 ;;		_locked_lock_leds
 12264 ;;		_nullifyBadge_segDisplayErase
 12265 ;;		_nullifyBadge_segDisplayRegister
 12266 ;;		_nullifyBadge_userLedsClr
 12267 ;;		_nullifyBadge_userLedsRegister
 12268 ;; This function is called by:
 12269 ;;		_main
 12270 ;;		_scheduler_TaskAdd
 12271 ;; This function uses a non-reentrant model
 12272 ;;
 12273                           
 12274                           
 12275                           ;psect for function _locked_Init
 12276  1301                     _locked_Init:	
 12277                           
 12278                           ;locked_task.c: 65: struct t_locked_taskData *data = (struct t_locked_taskData *) taskDa
      +                          ta;
 12279                           
 12280                           ;incstack = 0
 12281                           ; Regs used in _locked_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12282  1301  0020               	movlb	0	; select bank0
 12283  1302  083A               	movf	locked_Init@taskData+1,w
 12284  1303  00BC               	movwf	locked_Init@data+1
 12285  1304  0839               	movf	locked_Init@taskData,w
 12286  1305  00BB               	movwf	locked_Init@data
 12287                           
 12288                           ;locked_task.c: 68: nullifyBadge_userLedsRegister(data->badge);
 12289  1306  083B               	movf	locked_Init@data,w
 12290  1307  0086               	movwf	6
 12291  1308  083C               	movf	locked_Init@data+1,w
 12292  1309  0087               	movwf	7
 12293  130A  0801               	movf	1,w
 12294  130B  3199  2198  3193   	fcall	_nullifyBadge_userLedsRegister
 12295                           
 12296                           ;locked_task.c: 69: nullifyBadge_userLedsClr(data->badge);
 12297  130E  0020               	movlb	0	; select bank0
 12298  130F  083B               	movf	locked_Init@data,w
 12299  1310  0086               	movwf	6
 12300  1311  083C               	movf	locked_Init@data+1,w
 12301  1312  0087               	movwf	7
 12302  1313  0801               	movf	1,w
 12303  1314  3198  209C  3193   	fcall	_nullifyBadge_userLedsClr
 12304                           
 12305                           ;locked_task.c: 70: nullifyBadge_segDisplayRegister(data->badge);
 12306  1317  0020               	movlb	0	; select bank0
 12307  1318  083B               	movf	locked_Init@data,w
 12308  1319  0086               	movwf	6
 12309  131A  083C               	movf	locked_Init@data+1,w
 12310  131B  0087               	movwf	7
 12311  131C  0801               	movf	1,w
 12312  131D  3198  20AA  3193   	fcall	_nullifyBadge_segDisplayRegister
 12313                           
 12314                           ;locked_task.c: 71: nullifyBadge_segDisplayErase(data->badge);
 12315  1320  0020               	movlb	0	; select bank0
 12316  1321  083B               	movf	locked_Init@data,w
 12317  1322  0086               	movwf	6
 12318  1323  083C               	movf	locked_Init@data+1,w
 12319  1324  0087               	movwf	7
 12320  1325  0801               	movf	1,w
 12321  1326  3198  2096  3193   	fcall	_nullifyBadge_segDisplayErase
 12322                           
 12323                           ;locked_task.c: 74: locked_lock_leds();
 12324  1329  319A  22C5  3193   	fcall	_locked_lock_leds
 12325                           
 12326                           ;locked_task.c: 75: data->state = LOCKED_LOCKED_STATE;
 12327  132C  0020               	movlb	0	; select bank0
 12328  132D  083B               	movf	locked_Init@data,w
 12329  132E  0086               	movwf	6
 12330  132F  083C               	movf	locked_Init@data+1,w
 12331  1330  0087               	movwf	7
 12332  1331  314D               	addfsr 1,13
 12333  1332  0181               	clrf	1
 12334                           
 12335                           ;locked_task.c: 76: data->delayTickCount = 0;
 12336  1333  083B               	movf	locked_Init@data,w
 12337  1334  0086               	movwf	6
 12338  1335  083C               	movf	locked_Init@data+1,w
 12339  1336  0087               	movwf	7
 12340  1337  3141               	addfsr 1,1
 12341  1338  3000               	movlw	0
 12342  1339  3FC0               	movwi [0]fsr1
 12343  133A  3FC1               	movwi [1]fsr1
 12344                           
 12345                           ;locked_task.c: 77: data->holdCountA = 0;
 12346  133B  083B               	movf	locked_Init@data,w
 12347  133C  0086               	movwf	6
 12348  133D  083C               	movf	locked_Init@data+1,w
 12349  133E  0087               	movwf	7
 12350  133F  3143               	addfsr 1,3
 12351  1340  3000               	movlw	0
 12352  1341  3FC0               	movwi [0]fsr1
 12353  1342  3FC1               	movwi [1]fsr1
 12354                           
 12355                           ;locked_task.c: 78: data->holdCountB = 0;
 12356  1343  083B               	movf	locked_Init@data,w
 12357  1344  0086               	movwf	6
 12358  1345  083C               	movf	locked_Init@data+1,w
 12359  1346  0087               	movwf	7
 12360  1347  3145               	addfsr 1,5
 12361  1348  3000               	movlw	0
 12362  1349  3FC0               	movwi [0]fsr1
 12363  134A  3FC1               	movwi [1]fsr1
 12364                           
 12365                           ;locked_task.c: 79: data->holdCountX = 0;
 12366  134B  083B               	movf	locked_Init@data,w
 12367  134C  0086               	movwf	6
 12368  134D  083C               	movf	locked_Init@data+1,w
 12369  134E  0087               	movwf	7
 12370  134F  3147               	addfsr 1,7
 12371  1350  3000               	movlw	0
 12372  1351  3FC0               	movwi [0]fsr1
 12373  1352  3FC1               	movwi [1]fsr1
 12374                           
 12375                           ;locked_task.c: 80: data->holdCountY = 0;
 12376  1353  083B               	movf	locked_Init@data,w
 12377  1354  0086               	movwf	6
 12378  1355  083C               	movf	locked_Init@data+1,w
 12379  1356  0087               	movwf	7
 12380  1357  3149               	addfsr 1,9
 12381  1358  3000               	movlw	0
 12382  1359  3FC0               	movwi [0]fsr1
 12383  135A  3FC1               	movwi [1]fsr1
 12384                           
 12385                           ;locked_task.c: 81: data->noholdCount = 0;
 12386  135B  083B               	movf	locked_Init@data,w
 12387  135C  0086               	movwf	6
 12388  135D  083C               	movf	locked_Init@data+1,w
 12389  135E  0087               	movwf	7
 12390  135F  314B               	addfsr 1,11
 12391  1360  3000               	movlw	0
 12392  1361  3FC0               	movwi [0]fsr1
 12393  1362  3FC1               	movwi [1]fsr1
 12394  1363  0008               	return
 12395  1364                     __end_of_locked_Init:	
 12396                           
 12397                           	psect	text5
 12398  129F                     __ptext5:	
 12399 ;; *************** function _menu_Init *****************
 12400 ;; Defined at:
 12401 ;;		line 32 in file "menu_task.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;  taskData        2   25[BANK0 ] PTR void 
 12404 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12405 ;;		 -> flashy_TaskData(26), NULL(0), 
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;  data            2   27[BANK0 ] PTR struct t_menu_taskDa
 12408 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12409 ;;		 -> flashy_TaskData(26), NULL(0), 
 12410 ;; Return value:  Size  Location     Type
 12411 ;;                  1    wreg      void 
 12412 ;; Registers used:
 12413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12414 ;; Tracked objects:
 12415 ;;		On entry : 0/0
 12416 ;;		On exit  : 0/0
 12417 ;;		Unchanged: 0/0
 12418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12422 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12423 ;;Total ram usage:        4 bytes
 12424 ;; Hardware stack levels used:    1
 12425 ;; Hardware stack levels required when called:   10
 12426 ;; This function calls:
 12427 ;;		_nullifyBadge_segDisplayErase
 12428 ;;		_nullifyBadge_segDisplayRegister
 12429 ;;		_nullifyBadge_userLedsClr
 12430 ;;		_nullifyBadge_userLedsRegister
 12431 ;; This function is called by:
 12432 ;;		_main
 12433 ;;		_scheduler_TaskAdd
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           
 12438                           ;psect for function _menu_Init
 12439  129F                     _menu_Init:	
 12440                           
 12441                           ;menu_task.c: 33: struct t_menu_taskData *data = (struct t_menu_taskData *) taskData;
 12442                           
 12443                           ;incstack = 0
 12444                           ; Regs used in _menu_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12445  129F  0020               	movlb	0	; select bank0
 12446  12A0  083A               	movf	menu_Init@taskData+1,w
 12447  12A1  00BC               	movwf	menu_Init@data+1
 12448  12A2  0839               	movf	menu_Init@taskData,w
 12449  12A3  00BB               	movwf	menu_Init@data
 12450                           
 12451                           ;menu_task.c: 36: nullifyBadge_userLedsRegister(data->badge);
 12452  12A4  083B               	movf	menu_Init@data,w
 12453  12A5  0086               	movwf	6
 12454  12A6  083C               	movf	menu_Init@data+1,w
 12455  12A7  0087               	movwf	7
 12456  12A8  0801               	movf	1,w
 12457  12A9  3199  2198  3192   	fcall	_nullifyBadge_userLedsRegister
 12458                           
 12459                           ;menu_task.c: 37: nullifyBadge_userLedsClr(data->badge);
 12460  12AC  0020               	movlb	0	; select bank0
 12461  12AD  083B               	movf	menu_Init@data,w
 12462  12AE  0086               	movwf	6
 12463  12AF  083C               	movf	menu_Init@data+1,w
 12464  12B0  0087               	movwf	7
 12465  12B1  0801               	movf	1,w
 12466  12B2  3198  209C  3192   	fcall	_nullifyBadge_userLedsClr
 12467                           
 12468                           ;menu_task.c: 38: nullifyBadge_segDisplayRegister(data->badge);
 12469  12B5  0020               	movlb	0	; select bank0
 12470  12B6  083B               	movf	menu_Init@data,w
 12471  12B7  0086               	movwf	6
 12472  12B8  083C               	movf	menu_Init@data+1,w
 12473  12B9  0087               	movwf	7
 12474  12BA  0801               	movf	1,w
 12475  12BB  3198  20AA  3192   	fcall	_nullifyBadge_segDisplayRegister
 12476                           
 12477                           ;menu_task.c: 39: nullifyBadge_segDisplayErase(data->badge);
 12478  12BE  0020               	movlb	0	; select bank0
 12479  12BF  083B               	movf	menu_Init@data,w
 12480  12C0  0086               	movwf	6
 12481  12C1  083C               	movf	menu_Init@data+1,w
 12482  12C2  0087               	movwf	7
 12483  12C3  0801               	movf	1,w
 12484  12C4  3198  2096  3192   	fcall	_nullifyBadge_segDisplayErase
 12485                           
 12486                           ;menu_task.c: 42: data->delayTickCount = 50;
 12487  12C7  0020               	movlb	0	; select bank0
 12488  12C8  083B               	movf	menu_Init@data,w
 12489  12C9  0086               	movwf	6
 12490  12CA  083C               	movf	menu_Init@data+1,w
 12491  12CB  0087               	movwf	7
 12492  12CC  3142               	addfsr 1,2
 12493  12CD  3032               	movlw	50
 12494  12CE  3FC0               	movwi [0]fsr1
 12495  12CF  3000               	movlw	0
 12496  12D0  3FC1               	movwi [1]fsr1
 12497                           
 12498                           ;menu_task.c: 43: data->holdCountA = 0;
 12499  12D1  083B               	movf	menu_Init@data,w
 12500  12D2  0086               	movwf	6
 12501  12D3  083C               	movf	menu_Init@data+1,w
 12502  12D4  0087               	movwf	7
 12503  12D5  3144               	addfsr 1,4
 12504  12D6  3000               	movlw	0
 12505  12D7  3FC0               	movwi [0]fsr1
 12506  12D8  3FC1               	movwi [1]fsr1
 12507                           
 12508                           ;menu_task.c: 44: data->holdCountB = 0;
 12509  12D9  083B               	movf	menu_Init@data,w
 12510  12DA  0086               	movwf	6
 12511  12DB  083C               	movf	menu_Init@data+1,w
 12512  12DC  0087               	movwf	7
 12513  12DD  3146               	addfsr 1,6
 12514  12DE  3000               	movlw	0
 12515  12DF  3FC0               	movwi [0]fsr1
 12516  12E0  3FC1               	movwi [1]fsr1
 12517                           
 12518                           ;menu_task.c: 45: data->holdCountX = 0;
 12519  12E1  083B               	movf	menu_Init@data,w
 12520  12E2  0086               	movwf	6
 12521  12E3  083C               	movf	menu_Init@data+1,w
 12522  12E4  0087               	movwf	7
 12523  12E5  3148               	addfsr 1,8
 12524  12E6  3000               	movlw	0
 12525  12E7  3FC0               	movwi [0]fsr1
 12526  12E8  3FC1               	movwi [1]fsr1
 12527                           
 12528                           ;menu_task.c: 46: data->holdCountY = 0;
 12529  12E9  083B               	movf	menu_Init@data,w
 12530  12EA  0086               	movwf	6
 12531  12EB  083C               	movf	menu_Init@data+1,w
 12532  12EC  0087               	movwf	7
 12533  12ED  314A               	addfsr 1,10
 12534  12EE  3000               	movlw	0
 12535  12EF  3FC0               	movwi [0]fsr1
 12536  12F0  3FC1               	movwi [1]fsr1
 12537                           
 12538                           ;menu_task.c: 47: data->noholdCount = 0;
 12539  12F1  083B               	movf	menu_Init@data,w
 12540  12F2  0086               	movwf	6
 12541  12F3  083C               	movf	menu_Init@data+1,w
 12542  12F4  0087               	movwf	7
 12543  12F5  314C               	addfsr 1,12
 12544  12F6  3000               	movlw	0
 12545  12F7  3FC0               	movwi [0]fsr1
 12546  12F8  3FC1               	movwi [1]fsr1
 12547                           
 12548                           ;menu_task.c: 49: menu_option_idx = 0;
 12549  12F9  0021               	movlb	1	; select bank1
 12550  12FA  01B0               	clrf	_menu_option_idx^(0+128)
 12551  12FB  01B1               	clrf	(_menu_option_idx+1)^(0+128)
 12552                           
 12553                           ;menu_task.c: 51: menu_option_size = sizeof(menu_option)/sizeof(menu_option[0]);
 12554  12FC  3004               	movlw	4
 12555  12FD  00AE               	movwf	_menu_option_size^(0+128)
 12556  12FE  3000               	movlw	0
 12557  12FF  00AF               	movwf	(_menu_option_size^(0+128)+1)
 12558  1300  0008               	return
 12559  1301                     __end_of_menu_Init:	
 12560                           
 12561                           	psect	text6
 12562  08AC                     __ptext6:	
 12563 ;; *************** function _flashy_Init *****************
 12564 ;; Defined at:
 12565 ;;		line 37 in file "flashy_task.c"
 12566 ;; Parameters:    Size  Location     Type
 12567 ;;  taskData        2   25[BANK0 ] PTR void 
 12568 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12569 ;;		 -> flashy_TaskData(26), NULL(0), 
 12570 ;; Auto vars:     Size  Location     Type
 12571 ;;  data            2   27[BANK0 ] PTR struct t_flashy_task
 12572 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12573 ;;		 -> flashy_TaskData(26), NULL(0), 
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  1    wreg      void 
 12576 ;; Registers used:
 12577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12578 ;; Tracked objects:
 12579 ;;		On entry : 0/0
 12580 ;;		On exit  : 0/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12586 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12587 ;;Total ram usage:        4 bytes
 12588 ;; Hardware stack levels used:    1
 12589 ;; Hardware stack levels required when called:   10
 12590 ;; This function calls:
 12591 ;;		_nullifyBadge_segDisplayErase
 12592 ;;		_nullifyBadge_segDisplayRegister
 12593 ;;		_nullifyBadge_userLedsClr
 12594 ;;		_nullifyBadge_userLedsRegister
 12595 ;; This function is called by:
 12596 ;;		_main
 12597 ;;		_scheduler_TaskAdd
 12598 ;; This function uses a non-reentrant model
 12599 ;;
 12600                           
 12601                           
 12602                           ;psect for function _flashy_Init
 12603  08AC                     _flashy_Init:	
 12604                           
 12605                           ;flashy_task.c: 38: struct t_flashy_taskData *data = (struct t_flashy_taskData *) taskDa
      +                          ta;
 12606                           
 12607                           ;incstack = 0
 12608                           ; Regs used in _flashy_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12609  08AC  0020               	movlb	0	; select bank0
 12610  08AD  083A               	movf	flashy_Init@taskData+1,w
 12611  08AE  00BC               	movwf	flashy_Init@data+1
 12612  08AF  0839               	movf	flashy_Init@taskData,w
 12613  08B0  00BB               	movwf	flashy_Init@data
 12614                           
 12615                           ;flashy_task.c: 41: nullifyBadge_userLedsRegister(data->badge);
 12616  08B1  083B               	movf	flashy_Init@data,w
 12617  08B2  0086               	movwf	6
 12618  08B3  083C               	movf	flashy_Init@data+1,w
 12619  08B4  0087               	movwf	7
 12620  08B5  0801               	movf	1,w
 12621  08B6  3199  2198  3188   	fcall	_nullifyBadge_userLedsRegister
 12622                           
 12623                           ;flashy_task.c: 42: nullifyBadge_userLedsClr(data->badge);
 12624  08B9  0020               	movlb	0	; select bank0
 12625  08BA  083B               	movf	flashy_Init@data,w
 12626  08BB  0086               	movwf	6
 12627  08BC  083C               	movf	flashy_Init@data+1,w
 12628  08BD  0087               	movwf	7
 12629  08BE  0801               	movf	1,w
 12630  08BF  3198  209C  3188   	fcall	_nullifyBadge_userLedsClr
 12631                           
 12632                           ;flashy_task.c: 43: nullifyBadge_segDisplayRegister(data->badge);
 12633  08C2  0020               	movlb	0	; select bank0
 12634  08C3  083B               	movf	flashy_Init@data,w
 12635  08C4  0086               	movwf	6
 12636  08C5  083C               	movf	flashy_Init@data+1,w
 12637  08C6  0087               	movwf	7
 12638  08C7  0801               	movf	1,w
 12639  08C8  3198  20AA  3188   	fcall	_nullifyBadge_segDisplayRegister
 12640                           
 12641                           ;flashy_task.c: 44: nullifyBadge_segDisplayErase(data->badge);
 12642  08CB  0020               	movlb	0	; select bank0
 12643  08CC  083B               	movf	flashy_Init@data,w
 12644  08CD  0086               	movwf	6
 12645  08CE  083C               	movf	flashy_Init@data+1,w
 12646  08CF  0087               	movwf	7
 12647  08D0  0801               	movf	1,w
 12648  08D1  3198  2096  3188   	fcall	_nullifyBadge_segDisplayErase
 12649                           
 12650                           ;flashy_task.c: 50: data->delayTickCount = 35;
 12651  08D4  0020               	movlb	0	; select bank0
 12652  08D5  083B               	movf	flashy_Init@data,w
 12653  08D6  0086               	movwf	6
 12654  08D7  083C               	movf	flashy_Init@data+1,w
 12655  08D8  0087               	movwf	7
 12656  08D9  3141               	addfsr 1,1
 12657  08DA  3023               	movlw	35
 12658  08DB  3FC0               	movwi [0]fsr1
 12659  08DC  3000               	movlw	0
 12660  08DD  3FC1               	movwi [1]fsr1
 12661                           
 12662                           ;flashy_task.c: 51: data->displayTickCount = 0;
 12663  08DE  083B               	movf	flashy_Init@data,w
 12664  08DF  0086               	movwf	6
 12665  08E0  083C               	movf	flashy_Init@data+1,w
 12666  08E1  0087               	movwf	7
 12667  08E2  3144               	addfsr 1,4
 12668  08E3  3000               	movlw	0
 12669  08E4  3FC0               	movwi [0]fsr1
 12670  08E5  3FC1               	movwi [1]fsr1
 12671                           
 12672                           ;flashy_task.c: 54: data->holdCountA = 0;
 12673  08E6  083B               	movf	flashy_Init@data,w
 12674  08E7  0086               	movwf	6
 12675  08E8  083C               	movf	flashy_Init@data+1,w
 12676  08E9  0087               	movwf	7
 12677  08EA  314A               	addfsr 1,10
 12678  08EB  3000               	movlw	0
 12679  08EC  3FC0               	movwi [0]fsr1
 12680  08ED  3FC1               	movwi [1]fsr1
 12681                           
 12682                           ;flashy_task.c: 55: data->holdCountB = 0;
 12683  08EE  083B               	movf	flashy_Init@data,w
 12684  08EF  0086               	movwf	6
 12685  08F0  083C               	movf	flashy_Init@data+1,w
 12686  08F1  0087               	movwf	7
 12687  08F2  314C               	addfsr 1,12
 12688  08F3  3000               	movlw	0
 12689  08F4  3FC0               	movwi [0]fsr1
 12690  08F5  3FC1               	movwi [1]fsr1
 12691                           
 12692                           ;flashy_task.c: 56: data->holdCountX = 0;
 12693  08F6  083B               	movf	flashy_Init@data,w
 12694  08F7  0086               	movwf	6
 12695  08F8  083C               	movf	flashy_Init@data+1,w
 12696  08F9  0087               	movwf	7
 12697  08FA  314E               	addfsr 1,14
 12698  08FB  3000               	movlw	0
 12699  08FC  3FC0               	movwi [0]fsr1
 12700  08FD  3FC1               	movwi [1]fsr1
 12701                           
 12702                           ;flashy_task.c: 57: data->holdCountY = 0;
 12703  08FE  083B               	movf	flashy_Init@data,w
 12704  08FF  0086               	movwf	6
 12705  0900  083C               	movf	flashy_Init@data+1,w
 12706  0901  0087               	movwf	7
 12707  0902  3150               	addfsr 1,16
 12708  0903  3000               	movlw	0
 12709  0904  3FC0               	movwi [0]fsr1
 12710  0905  3FC1               	movwi [1]fsr1
 12711                           
 12712                           ;flashy_task.c: 58: data->holdCountXY = 0;
 12713  0906  083B               	movf	flashy_Init@data,w
 12714  0907  0086               	movwf	6
 12715  0908  083C               	movf	flashy_Init@data+1,w
 12716  0909  0087               	movwf	7
 12717  090A  3152               	addfsr 1,18
 12718  090B  3000               	movlw	0
 12719  090C  3FC0               	movwi [0]fsr1
 12720  090D  3FC1               	movwi [1]fsr1
 12721                           
 12722                           ;flashy_task.c: 59: data->holdCountAY = 0;
 12723  090E  083B               	movf	flashy_Init@data,w
 12724  090F  0086               	movwf	6
 12725  0910  083C               	movf	flashy_Init@data+1,w
 12726  0911  0087               	movwf	7
 12727  0912  3154               	addfsr 1,20
 12728  0913  3000               	movlw	0
 12729  0914  3FC0               	movwi [0]fsr1
 12730  0915  3FC1               	movwi [1]fsr1
 12731                           
 12732                           ;flashy_task.c: 60: data->holdCountAX = 0;
 12733  0916  083B               	movf	flashy_Init@data,w
 12734  0917  0086               	movwf	6
 12735  0918  083C               	movf	flashy_Init@data+1,w
 12736  0919  0087               	movwf	7
 12737  091A  3156               	addfsr 1,22
 12738  091B  3000               	movlw	0
 12739  091C  3FC0               	movwi [0]fsr1
 12740  091D  3FC1               	movwi [1]fsr1
 12741                           
 12742                           ;flashy_task.c: 61: data->noholdCount = 0;
 12743  091E  083B               	movf	flashy_Init@data,w
 12744  091F  0086               	movwf	6
 12745  0920  083C               	movf	flashy_Init@data+1,w
 12746  0921  0087               	movwf	7
 12747  0922  3158               	addfsr 1,24
 12748  0923  3000               	movlw	0
 12749  0924  3FC0               	movwi [0]fsr1
 12750  0925  3FC1               	movwi [1]fsr1
 12751                           
 12752                           ;flashy_task.c: 63: flashy_leds_idx = 0;
 12753  0926  0021               	movlb	1	; select bank1
 12754  0927  01AC               	clrf	_flashy_leds_idx^(0+128)
 12755  0928  01AD               	clrf	(_flashy_leds_idx+1)^(0+128)
 12756                           
 12757                           ;flashy_task.c: 64: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 12758  0929  0020               	movlb	0	; select bank0
 12759  092A  083B               	movf	flashy_Init@data,w
 12760  092B  0086               	movwf	6
 12761  092C  083C               	movf	flashy_Init@data+1,w
 12762  092D  0087               	movwf	7
 12763  092E  3143               	addfsr 1,3
 12764  092F  0181               	clrf	1
 12765                           
 12766                           ;flashy_task.c: 65: flashy_option_idx = 0;
 12767  0930  0021               	movlb	1	; select bank1
 12768  0931  01A6               	clrf	_flashy_option_idx^(0+128)
 12769  0932  01A7               	clrf	(_flashy_option_idx+1)^(0+128)
 12770                           
 12771                           ;flashy_task.c: 67: flashy_option_size = sizeof(flashy_option)/sizeof(flashy_option[0]);
 12772  0933  3004               	movlw	4
 12773  0934  00A4               	movwf	_flashy_option_size^(0+128)
 12774  0935  3000               	movlw	0
 12775  0936  00A5               	movwf	(_flashy_option_size^(0+128)+1)
 12776                           
 12777                           ;flashy_task.c: 69: flashy_sparkle_rate =50;
 12778  0937  3032               	movlw	50
 12779  0938  00AA               	movwf	_flashy_sparkle_rate^(0+128)
 12780  0939  3000               	movlw	0
 12781  093A  00AB               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 12782  093B  0008               	return
 12783  093C                     __end_of_flashy_Init:	
 12784                           
 12785                           	psect	text7
 12786  1188                     __ptext7:	
 12787 ;; *************** function _slot_Init *****************
 12788 ;; Defined at:
 12789 ;;		line 16 in file "slot_task.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  taskData        2   25[BANK0 ] PTR void 
 12792 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12793 ;;		 -> flashy_TaskData(26), NULL(0), 
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;  data            2   27[BANK0 ] PTR struct t_slot_taskDa
 12796 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 12797 ;;		 -> flashy_TaskData(26), NULL(0), 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1    wreg      void 
 12800 ;; Registers used:
 12801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12807 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12808 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12810 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12811 ;;Total ram usage:        4 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:   10
 12814 ;; This function calls:
 12815 ;;		_nullifyBadge_segDisplayErase
 12816 ;;		_nullifyBadge_segDisplayRegister
 12817 ;;		_nullifyBadge_userLedsClr
 12818 ;;		_nullifyBadge_userLedsRegister
 12819 ;; This function is called by:
 12820 ;;		_main
 12821 ;;		_scheduler_TaskAdd
 12822 ;; This function uses a non-reentrant model
 12823 ;;
 12824                           
 12825                           
 12826                           ;psect for function _slot_Init
 12827  1188                     _slot_Init:	
 12828                           
 12829                           ;slot_task.c: 17: struct t_slot_taskData *data = (struct t_slot_taskData *) taskData;
 12830                           
 12831                           ;incstack = 0
 12832                           ; Regs used in _slot_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12833  1188  0020               	movlb	0	; select bank0
 12834  1189  083A               	movf	slot_Init@taskData+1,w
 12835  118A  00BC               	movwf	slot_Init@data+1
 12836  118B  0839               	movf	slot_Init@taskData,w
 12837  118C  00BB               	movwf	slot_Init@data
 12838                           
 12839                           ;slot_task.c: 20: nullifyBadge_userLedsRegister(data->badge);
 12840  118D  083B               	movf	slot_Init@data,w
 12841  118E  0086               	movwf	6
 12842  118F  083C               	movf	slot_Init@data+1,w
 12843  1190  0087               	movwf	7
 12844  1191  0801               	movf	1,w
 12845  1192  3199  2198  3191   	fcall	_nullifyBadge_userLedsRegister
 12846                           
 12847                           ;slot_task.c: 21: nullifyBadge_userLedsClr(data->badge);
 12848  1195  0020               	movlb	0	; select bank0
 12849  1196  083B               	movf	slot_Init@data,w
 12850  1197  0086               	movwf	6
 12851  1198  083C               	movf	slot_Init@data+1,w
 12852  1199  0087               	movwf	7
 12853  119A  0801               	movf	1,w
 12854  119B  3198  209C  3191   	fcall	_nullifyBadge_userLedsClr
 12855                           
 12856                           ;slot_task.c: 22: nullifyBadge_segDisplayRegister(data->badge);
 12857  119E  0020               	movlb	0	; select bank0
 12858  119F  083B               	movf	slot_Init@data,w
 12859  11A0  0086               	movwf	6
 12860  11A1  083C               	movf	slot_Init@data+1,w
 12861  11A2  0087               	movwf	7
 12862  11A3  0801               	movf	1,w
 12863  11A4  3198  20AA  3191   	fcall	_nullifyBadge_segDisplayRegister
 12864                           
 12865                           ;slot_task.c: 23: nullifyBadge_segDisplayErase(data->badge);
 12866  11A7  0020               	movlb	0	; select bank0
 12867  11A8  083B               	movf	slot_Init@data,w
 12868  11A9  0086               	movwf	6
 12869  11AA  083C               	movf	slot_Init@data+1,w
 12870  11AB  0087               	movwf	7
 12871  11AC  0801               	movf	1,w
 12872  11AD  3198  2096  3191   	fcall	_nullifyBadge_segDisplayErase
 12873                           
 12874                           ;slot_task.c: 26: data->displayTickCount = 0;
 12875  11B0  0020               	movlb	0	; select bank0
 12876  11B1  083B               	movf	slot_Init@data,w
 12877  11B2  0086               	movwf	6
 12878  11B3  083C               	movf	slot_Init@data+1,w
 12879  11B4  0087               	movwf	7
 12880  11B5  3142               	addfsr 1,2
 12881  11B6  3000               	movlw	0
 12882  11B7  3FC0               	movwi [0]fsr1
 12883  11B8  3FC1               	movwi [1]fsr1
 12884                           
 12885                           ;slot_task.c: 27: data->holdCountA = 0;
 12886  11B9  083B               	movf	slot_Init@data,w
 12887  11BA  0086               	movwf	6
 12888  11BB  083C               	movf	slot_Init@data+1,w
 12889  11BC  0087               	movwf	7
 12890  11BD  3144               	addfsr 1,4
 12891  11BE  3000               	movlw	0
 12892  11BF  3FC0               	movwi [0]fsr1
 12893  11C0  3FC1               	movwi [1]fsr1
 12894                           
 12895                           ;slot_task.c: 28: data->holdCountB = 0;
 12896  11C1  083B               	movf	slot_Init@data,w
 12897  11C2  0086               	movwf	6
 12898  11C3  083C               	movf	slot_Init@data+1,w
 12899  11C4  0087               	movwf	7
 12900  11C5  3146               	addfsr 1,6
 12901  11C6  3000               	movlw	0
 12902  11C7  3FC0               	movwi [0]fsr1
 12903  11C8  3FC1               	movwi [1]fsr1
 12904                           
 12905                           ;slot_task.c: 29: data->holdCountX = 0;
 12906  11C9  083B               	movf	slot_Init@data,w
 12907  11CA  0086               	movwf	6
 12908  11CB  083C               	movf	slot_Init@data+1,w
 12909  11CC  0087               	movwf	7
 12910  11CD  3148               	addfsr 1,8
 12911  11CE  3000               	movlw	0
 12912  11CF  3FC0               	movwi [0]fsr1
 12913  11D0  3FC1               	movwi [1]fsr1
 12914                           
 12915                           ;slot_task.c: 30: data->holdCountY = 0;
 12916  11D1  083B               	movf	slot_Init@data,w
 12917  11D2  0086               	movwf	6
 12918  11D3  083C               	movf	slot_Init@data+1,w
 12919  11D4  0087               	movwf	7
 12920  11D5  314A               	addfsr 1,10
 12921  11D6  3000               	movlw	0
 12922  11D7  3FC0               	movwi [0]fsr1
 12923  11D8  3FC1               	movwi [1]fsr1
 12924                           
 12925                           ;slot_task.c: 31: data->noholdCount = 0;
 12926  11D9  083B               	movf	slot_Init@data,w
 12927  11DA  0086               	movwf	6
 12928  11DB  083C               	movf	slot_Init@data+1,w
 12929  11DC  0087               	movwf	7
 12930  11DD  314C               	addfsr 1,12
 12931  11DE  3000               	movlw	0
 12932  11DF  3FC0               	movwi [0]fsr1
 12933  11E0  3FC1               	movwi [1]fsr1
 12934  11E1  0008               	return
 12935  11E2                     __end_of_slot_Init:	
 12936                           
 12937                           	psect	text8
 12938  1998                     __ptext8:	
 12939 ;; *************** function _nullifyBadge_userLedsRegister *****************
 12940 ;; Defined at:
 12941 ;;		line 133 in file "nullifyBadge.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 12944 ;;		 -> badge_inst(18), 
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 12947 ;;		 -> badge_inst(18), 
 12948 ;; Return value:  Size  Location     Type
 12949 ;;                  1    wreg      char 
 12950 ;; Registers used:
 12951 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12952 ;; Tracked objects:
 12953 ;;		On entry : 0/0
 12954 ;;		On exit  : 0/0
 12955 ;;		Unchanged: 0/0
 12956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12961 ;;Total ram usage:        1 bytes
 12962 ;; Hardware stack levels used:    1
 12963 ;; Hardware stack levels required when called:    4
 12964 ;; This function calls:
 12965 ;;		Nothing
 12966 ;; This function is called by:
 12967 ;;		_menu_Init
 12968 ;;		_flashy_Init
 12969 ;;		_locked_Init
 12970 ;;		_secret_Init
 12971 ;;		_slot_Init
 12972 ;; This function uses a non-reentrant model
 12973 ;;
 12974                           
 12975                           
 12976                           ;psect for function _nullifyBadge_userLedsRegister
 12977  1998                     _nullifyBadge_userLedsRegister:	
 12978                           
 12979                           ;incstack = 0
 12980                           ; Regs used in _nullifyBadge_userLedsRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 12981                           ;nullifyBadge_userLedsRegister@badge stored from wreg
 12982  1998  00F1               	movwf	nullifyBadge_userLedsRegister@badge
 12983                           
 12984                           ;nullifyBadge.c: 134: if (badge->registeredHw & HW_USER_LEDS) {
 12985  1999  0871               	movf	nullifyBadge_userLedsRegister@badge,w
 12986  199A  3E11               	addlw	17
 12987  199B  0086               	movwf	6
 12988  199C  3001               	movlw	1	; select bank2/3
 12989  199D  0087               	movwf	7
 12990  199E  1801               	btfsc	1,0
 12991  199F  0008               	return
 12992                           
 12993                           ;nullifyBadge.c: 137: else {
 12994                           ;nullifyBadge.c: 138: badge->registeredHw |= (1 << HW_USER_LEDS);
 12995                           
 12996                           ;nullifyBadge.c: 136: }
 12997                           
 12998                           ;nullifyBadge.c: 135: return -1;
 12999                           ;	Return value of _nullifyBadge_userLedsRegister is never used
 13000  19A0  0871               	movf	nullifyBadge_userLedsRegister@badge,w
 13001  19A1  3E11               	addlw	17
 13002  19A2  0086               	movwf	6
 13003  19A3  3001               	movlw	1	; select bank2/3
 13004  19A4  0087               	movwf	7
 13005  19A5  1481               	bsf	1,1
 13006                           
 13007                           ;nullifyBadge.c: 139: return 0;
 13008                           ;	Return value of _nullifyBadge_userLedsRegister is never used
 13009  19A6  0008               	return
 13010  19A7                     __end_of_nullifyBadge_userLedsRegister:	
 13011                           
 13012                           	psect	text9
 13013  18AA                     __ptext9:	
 13014 ;; *************** function _nullifyBadge_segDisplayRegister *****************
 13015 ;; Defined at:
 13016 ;;		line 68 in file "nullifyBadge.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 13019 ;;		 -> badge_inst(18), 
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 13022 ;;		 -> badge_inst(18), 
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      char 
 13025 ;; Registers used:
 13026 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13027 ;; Tracked objects:
 13028 ;;		On entry : 0/0
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13036 ;;Total ram usage:        1 bytes
 13037 ;; Hardware stack levels used:    1
 13038 ;; Hardware stack levels required when called:    4
 13039 ;; This function calls:
 13040 ;;		Nothing
 13041 ;; This function is called by:
 13042 ;;		_menu_Init
 13043 ;;		_flashy_Init
 13044 ;;		_locked_Init
 13045 ;;		_secret_Init
 13046 ;;		_slot_Init
 13047 ;;		_fadeDisplay_Init
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           
 13052                           ;psect for function _nullifyBadge_segDisplayRegister
 13053  18AA                     _nullifyBadge_segDisplayRegister:	
 13054                           
 13055                           ;incstack = 0
 13056                           ; Regs used in _nullifyBadge_segDisplayRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 13057                           ;nullifyBadge_segDisplayRegister@badge stored from wreg
 13058  18AA  00F1               	movwf	nullifyBadge_segDisplayRegister@badge
 13059                           
 13060                           ;nullifyBadge.c: 72: else {
 13061                           ;nullifyBadge.c: 73: badge->registeredHw |= (1 << HW_SEG_DISPLAY);
 13062                           
 13063                           ;nullifyBadge.c: 71: }
 13064                           
 13065                           ;nullifyBadge.c: 70: return -1;
 13066                           ;	Return value of _nullifyBadge_segDisplayRegister is never used
 13067                           
 13068                           ;nullifyBadge.c: 69: if (badge->registeredHw & HW_SEG_DISPLAY) {
 13069  18AB  0871               	movf	nullifyBadge_segDisplayRegister@badge,w
 13070  18AC  3E11               	addlw	17
 13071  18AD  0086               	movwf	6
 13072  18AE  3001               	movlw	1	; select bank2/3
 13073  18AF  0087               	movwf	7
 13074  18B0  1401               	bsf	1,0
 13075                           
 13076                           ;nullifyBadge.c: 74: return 0;
 13077                           ;	Return value of _nullifyBadge_segDisplayRegister is never used
 13078  18B1  0008               	return
 13079  18B2                     __end_of_nullifyBadge_segDisplayRegister:	
 13080                           
 13081                           	psect	text10
 13082  1B35                     __ptext10:	
 13083 ;; *************** function _scheduler_Init *****************
 13084 ;; Defined at:
 13085 ;;		line 27 in file "cooperative_scheduler.c"
 13086 ;; Parameters:    Size  Location     Type
 13087 ;;  scheduler       1    wreg     PTR struct t_scheduler
 13088 ;;		 -> schedulerInst(34), 
 13089 ;; Auto vars:     Size  Location     Type
 13090 ;;  scheduler       1    2[COMMON] PTR struct t_scheduler
 13091 ;;		 -> schedulerInst(34), 
 13092 ;;  k               1    3[COMMON] unsigned char 
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      void 
 13095 ;; Registers used:
 13096 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13105 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13106 ;;Total ram usage:        3 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    4
 13109 ;; This function calls:
 13110 ;;		Nothing
 13111 ;; This function is called by:
 13112 ;;		_main
 13113 ;; This function uses a non-reentrant model
 13114 ;;
 13115                           
 13116                           
 13117                           ;psect for function _scheduler_Init
 13118  1B35                     _scheduler_Init:	
 13119                           
 13120                           ;incstack = 0
 13121                           ; Regs used in _scheduler_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
 13122                           ;scheduler_Init@scheduler stored from wreg
 13123  1B35  00F2               	movwf	scheduler_Init@scheduler
 13124                           
 13125                           ;cooperative_scheduler.c: 28: scheduler->taskEntryVector = 0x0;
 13126  1B36  0872               	movf	scheduler_Init@scheduler,w
 13127  1B37  3E20               	addlw	32
 13128  1B38  0086               	movwf	6
 13129  1B39  3002               	movlw	2	; select bank4/5
 13130  1B3A  0087               	movwf	7
 13131  1B3B  3000               	movlw	0
 13132  1B3C  3FC0               	movwi [0]fsr1
 13133  1B3D  3FC1               	movwi [1]fsr1
 13134                           
 13135                           ;cooperative_scheduler.c: 29: u8 k;
 13136                           ;cooperative_scheduler.c: 31: for (k = 0; k < 16; k++) {
 13137  1B3E  01F3               	clrf	scheduler_Init@k
 13138  1B3F                     L1:	
 13139  1B3F  3010               	movlw	16
 13140  1B40  0273               	subwf	scheduler_Init@k,w
 13141  1B41  1803               	btfsc	3,0
 13142  1B42  0008               	return
 13143                           
 13144                           ;cooperative_scheduler.c: 32: scheduler->tasks[k] = (0);
 13145  1B43  3573               	lslf	scheduler_Init@k,w
 13146  1B44  0772               	addwf	scheduler_Init@scheduler,w
 13147  1B45  00F1               	movwf	??_scheduler_Init
 13148  1B46  0871               	movf	??_scheduler_Init,w
 13149  1B47  0086               	movwf	6
 13150  1B48  3002               	movlw	2	; select bank4/5
 13151  1B49  0087               	movwf	7
 13152  1B4A  3000               	movlw	0
 13153  1B4B  3FC0               	movwi [0]fsr1
 13154  1B4C  3FC1               	movwi [1]fsr1
 13155  1B4D  3001               	movlw	1
 13156  1B4E  00F1               	movwf	??_scheduler_Init
 13157  1B4F  0871               	movf	??_scheduler_Init,w
 13158  1B50  07F3               	addwf	scheduler_Init@k,f
 13159  1B51  2B3F               	goto	L1
 13160  1B52                     __end_of_scheduler_Init:	
 13161                           
 13162                           	psect	text11
 13163  13DB                     __ptext11:	
 13164 ;; *************** function _schedulerExecute *****************
 13165 ;; Defined at:
 13166 ;;		line 77 in file "cooperative_scheduler.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  scheduler       1    wreg     PTR struct t_scheduler
 13169 ;;		 -> schedulerInst(34), 
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;  scheduler       1   78[BANK0 ] PTR struct t_scheduler
 13172 ;;		 -> schedulerInst(34), 
 13173 ;;  tickDelta       2   76[BANK0 ] unsigned int 
 13174 ;;  taskLastSyst    2   74[BANK0 ] unsigned int 
 13175 ;;  currentSyste    2   72[BANK0 ] unsigned int 
 13176 ;;  k               1   79[BANK0 ] unsigned char 
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  1    wreg      void 
 13179 ;; Registers used:
 13180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13187 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13188 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13189 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13190 ;;Total ram usage:       14 bytes
 13191 ;; Hardware stack levels used:    1
 13192 ;; Hardware stack levels required when called:   14
 13193 ;; This function calls:
 13194 ;;		_TMR0_Read16bitTimer
 13195 ;;		_scheduler_TaskRun
 13196 ;; This function is called by:
 13197 ;;		_main
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201                           
 13202                           ;psect for function _schedulerExecute
 13203  13DB                     _schedulerExecute:	
 13204                           
 13205                           ;incstack = 0
 13206                           ; Regs used in _schedulerExecute: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13207                           ;schedulerExecute@scheduler stored from wreg
 13208  13DB  0020               	movlb	0	; select bank0
 13209  13DC  00EE               	movwf	schedulerExecute@scheduler
 13210                           
 13211                           ;cooperative_scheduler.c: 78: u16 currentSystemTick;
 13212                           ;cooperative_scheduler.c: 79: u16 taskLastSystemTick;
 13213                           ;cooperative_scheduler.c: 80: u16 tickDelta;
 13214                           ;cooperative_scheduler.c: 81: u8 k;
 13215                           ;cooperative_scheduler.c: 83: for (k = 0; k < 16; k++) {
 13216  13DD  01EF               	clrf	schedulerExecute@k
 13217  13DE                     L2:	
 13218  13DE  3010               	movlw	16
 13219  13DF  026F               	subwf	schedulerExecute@k,w
 13220  13E0  1803               	btfsc	3,0
 13221  13E1  0008               	return
 13222                           
 13223                           ;cooperative_scheduler.c: 86: if (!(scheduler->taskEntryVector & (1 << k)) ) {
 13224  13E2  086E               	movf	schedulerExecute@scheduler,w
 13225  13E3  3E20               	addlw	32
 13226  13E4  0086               	movwf	6
 13227  13E5  3002               	movlw	2	; select bank4/5
 13228  13E6  0087               	movwf	7
 13229  13E7  3F40               	moviw [0]fsr1
 13230  13E8  00E2               	movwf	??_schedulerExecute
 13231  13E9  3F41               	moviw [1]fsr1
 13232  13EA  00E3               	movwf	??_schedulerExecute+1
 13233  13EB  3001               	movlw	1
 13234  13EC  00E4               	movwf	??_schedulerExecute+2
 13235  13ED  3000               	movlw	0
 13236  13EE  00E5               	movwf	??_schedulerExecute+3
 13237  13EF  0A6F               	incf	schedulerExecute@k,w
 13238  13F0  2BF3               	goto	u4294
 13239  13F1                     u4295:	
 13240  13F1  35E4               	lslf	??_schedulerExecute+2,f
 13241  13F2  0DE5               	rlf	??_schedulerExecute+3,f
 13242  13F3                     u4294:	
 13243  13F3  0B89               	decfsz	9,f
 13244  13F4  2BF1               	goto	u4295
 13245  13F5  0862               	movf	??_schedulerExecute,w
 13246  13F6  0564               	andwf	??_schedulerExecute+2,w
 13247  13F7  00E6               	movwf	??_schedulerExecute+4
 13248  13F8  0863               	movf	??_schedulerExecute+1,w
 13249  13F9  0565               	andwf	??_schedulerExecute+3,w
 13250  13FA  00E7               	movwf	??_schedulerExecute+5
 13251  13FB  0866               	movf	??_schedulerExecute+4,w
 13252  13FC  0467               	iorwf	??_schedulerExecute+5,w
 13253  13FD  1903               	btfsc	3,2
 13254  13FE  2C51               	goto	l7498
 13255                           
 13256                           ;cooperative_scheduler.c: 88: }
 13257                           ;cooperative_scheduler.c: 90: currentSystemTick = TMR0_Read16bitTimer();
 13258                           
 13259                           ;cooperative_scheduler.c: 87: continue;
 13260  13FF  319B  2318  3193   	fcall	_TMR0_Read16bitTimer
 13261  1402  0872               	movf	?_TMR0_Read16bitTimer+1,w
 13262  1403  0020               	movlb	0	; select bank0
 13263  1404  00E9               	movwf	schedulerExecute@currentSystemTick+1
 13264  1405  0871               	movf	?_TMR0_Read16bitTimer,w
 13265  1406  00E8               	movwf	schedulerExecute@currentSystemTick
 13266                           
 13267                           ;cooperative_scheduler.c: 91: taskLastSystemTick = scheduler->tasks[k]->systemTickLastEx
      +                          ecuted;
 13268  1407  356F               	lslf	schedulerExecute@k,w
 13269  1408  076E               	addwf	schedulerExecute@scheduler,w
 13270  1409  00E2               	movwf	??_schedulerExecute
 13271  140A  0862               	movf	??_schedulerExecute,w
 13272  140B  0086               	movwf	6
 13273  140C  3002               	movlw	2	; select bank4/5
 13274  140D  0087               	movwf	7
 13275  140E  3F40               	moviw [0]fsr1
 13276  140F  00E3               	movwf	??_schedulerExecute+1
 13277  1410  3F41               	moviw [1]fsr1
 13278  1411  00E4               	movwf	??_schedulerExecute+2
 13279  1412  0863               	movf	??_schedulerExecute+1,w
 13280  1413  0086               	movwf	6
 13281  1414  0864               	movf	??_schedulerExecute+2,w
 13282  1415  0087               	movwf	7
 13283  1416  3F40               	moviw [0]fsr1
 13284  1417  00EA               	movwf	schedulerExecute@taskLastSystemTick
 13285  1418  3F41               	moviw [1]fsr1
 13286  1419  00EB               	movwf	schedulerExecute@taskLastSystemTick+1
 13287                           
 13288                           ;cooperative_scheduler.c: 99: tickDelta = currentSystemTick - taskLastSystemTick;
 13289  141A  096A               	comf	schedulerExecute@taskLastSystemTick,w
 13290  141B  00E2               	movwf	??_schedulerExecute
 13291  141C  096B               	comf	schedulerExecute@taskLastSystemTick+1,w
 13292  141D  00E3               	movwf	??_schedulerExecute+1
 13293  141E  0AE2               	incf	??_schedulerExecute,f
 13294  141F  1903               	skipnz
 13295  1420  0AE3               	incf	??_schedulerExecute+1,f
 13296  1421  0868               	movf	schedulerExecute@currentSystemTick,w
 13297  1422  0762               	addwf	??_schedulerExecute,w
 13298  1423  00EC               	movwf	schedulerExecute@tickDelta
 13299  1424  0869               	movf	schedulerExecute@currentSystemTick+1,w
 13300  1425  3D63               	addwfc	??_schedulerExecute+1,w
 13301  1426  00ED               	movwf	schedulerExecute@tickDelta+1
 13302                           
 13303                           ;cooperative_scheduler.c: 103: if (tickDelta >= scheduler->tasks[k]->taskInterval) {
 13304  1427  356F               	lslf	schedulerExecute@k,w
 13305  1428  076E               	addwf	schedulerExecute@scheduler,w
 13306  1429  00E2               	movwf	??_schedulerExecute
 13307  142A  0862               	movf	??_schedulerExecute,w
 13308  142B  0086               	movwf	6
 13309  142C  3002               	movlw	2	; select bank4/5
 13310  142D  0087               	movwf	7
 13311  142E  3F40               	moviw [0]fsr1
 13312  142F  00E3               	movwf	??_schedulerExecute+1
 13313  1430  3F41               	moviw [1]fsr1
 13314  1431  00E4               	movwf	??_schedulerExecute+2
 13315  1432  0863               	movf	??_schedulerExecute+1,w
 13316  1433  0086               	movwf	6
 13317  1434  0864               	movf	??_schedulerExecute+2,w
 13318  1435  0087               	movwf	7
 13319  1436  314A               	addfsr 1,10
 13320  1437  3F40               	moviw [0]fsr1
 13321  1438  00E5               	movwf	??_schedulerExecute+3
 13322  1439  3F41               	moviw [1]fsr1
 13323  143A  00E6               	movwf	??_schedulerExecute+4
 13324  143B  0866               	movf	??_schedulerExecute+4,w
 13325  143C  026D               	subwf	schedulerExecute@tickDelta+1,w
 13326  143D  1D03               	skipz
 13327  143E  2C41               	goto	u4315
 13328  143F  0865               	movf	??_schedulerExecute+3,w
 13329  1440  026C               	subwf	schedulerExecute@tickDelta,w
 13330  1441                     u4315:	
 13331  1441  1C03               	skipc
 13332  1442  2C51               	goto	l7498
 13333                           
 13334                           ;cooperative_scheduler.c: 104: scheduler_TaskRun(scheduler->tasks[k]);
 13335  1443  356F               	lslf	schedulerExecute@k,w
 13336  1444  076E               	addwf	schedulerExecute@scheduler,w
 13337  1445  00E2               	movwf	??_schedulerExecute
 13338  1446  0862               	movf	??_schedulerExecute,w
 13339  1447  0086               	movwf	6
 13340  1448  3002               	movlw	2	; select bank4/5
 13341  1449  0087               	movwf	7
 13342  144A  3F40               	moviw [0]fsr1
 13343  144B  00E0               	movwf	scheduler_TaskRun@task
 13344  144C  3F41               	moviw [1]fsr1
 13345  144D  00E1               	movwf	scheduler_TaskRun@task+1
 13346  144E  319B  23AC  3193   	fcall	_scheduler_TaskRun
 13347  1451                     l7498:	
 13348  1451  3001               	movlw	1
 13349  1452  0020               	movlb	0	; select bank0
 13350  1453  00E2               	movwf	??_schedulerExecute
 13351  1454  0862               	movf	??_schedulerExecute,w
 13352  1455  07EF               	addwf	schedulerExecute@k,f
 13353  1456  2BDE               	goto	L2
 13354  1457                     __end_of_schedulerExecute:	
 13355                           
 13356                           	psect	text12
 13357  1BAC                     __ptext12:	
 13358 ;; *************** function _scheduler_TaskRun *****************
 13359 ;; Defined at:
 13360 ;;		line 20 in file "cooperative_scheduler.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;  task            2   64[BANK0 ] PTR struct t_schedulerTa
 13363 ;;		 -> secret_task(13), locked_task(13), slot_task(13), menu_task(13), 
 13364 ;;		 -> flashy_task(13), NULL(0), 
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;		None
 13367 ;; Return value:  Size  Location     Type
 13368 ;;                  1    wreg      void 
 13369 ;; Registers used:
 13370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13371 ;; Tracked objects:
 13372 ;;		On entry : 0/0
 13373 ;;		On exit  : 0/0
 13374 ;;		Unchanged: 0/0
 13375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13380 ;;Total ram usage:        2 bytes
 13381 ;; Hardware stack levels used:    1
 13382 ;; Hardware stack levels required when called:   13
 13383 ;; This function calls:
 13384 ;;		Absolute function
 13385 ;;		_TMR0_Read16bitTimer
 13386 ;;		_flashy_Main
 13387 ;;		_locked_Main
 13388 ;;		_menu_Main
 13389 ;;		_secret_Main
 13390 ;;		_slot_Main
 13391 ;; This function is called by:
 13392 ;;		_schedulerExecute
 13393 ;; This function uses a non-reentrant model
 13394 ;;
 13395                           
 13396                           
 13397                           ;psect for function _scheduler_TaskRun
 13398  1BAC                     _scheduler_TaskRun:	
 13399                           
 13400                           ;cooperative_scheduler.c: 21: task->taskExecuteCallback (task->taskData);
 13401                           
 13402                           ;incstack = 0
 13403                           ; Regs used in _scheduler_TaskRun: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13404  1BAC  0020               	movlb	0	; select bank0
 13405  1BAD  0860               	movf	scheduler_TaskRun@task,w
 13406  1BAE  0086               	movwf	6
 13407  1BAF  0861               	movf	scheduler_TaskRun@task+1,w
 13408  1BB0  0087               	movwf	7
 13409  1BB1  3142               	addfsr 1,2
 13410  1BB2  3F40               	moviw [0]fsr1
 13411  1BB3  00D2               	movwf	secret_Main@taskData
 13412  1BB4  3F41               	moviw [1]fsr1
 13413  1BB5  00D3               	movwf	secret_Main@taskData+1
 13414  1BB6  0860               	movf	scheduler_TaskRun@task,w
 13415  1BB7  0086               	movwf	6
 13416  1BB8  0861               	movf	scheduler_TaskRun@task+1,w
 13417  1BB9  0087               	movwf	7
 13418  1BBA  3148               	addfsr 1,8
 13419  1BBB  3F41               	moviw [1]fsr1
 13420  1BBC  008A               	movwf	10
 13421  1BBD  3F40               	moviw [0]fsr1
 13422  1BBE  000A               	callw
 13423  1BBF  319B               	pagesel	$
 13424                           
 13425                           ;cooperative_scheduler.c: 22: task->systemTickLastExecuted = TMR0_Read16bitTimer();
 13426  1BC0  319B  2318         	fcall	_TMR0_Read16bitTimer
 13427  1BC2  0020               	movlb	0	; select bank0
 13428  1BC3  0860               	movf	scheduler_TaskRun@task,w
 13429  1BC4  0086               	movwf	6
 13430  1BC5  0861               	movf	scheduler_TaskRun@task+1,w
 13431  1BC6  0087               	movwf	7
 13432  1BC7  0871               	movf	?_TMR0_Read16bitTimer,w
 13433  1BC8  3FC0               	movwi [0]fsr1
 13434  1BC9  0872               	movf	?_TMR0_Read16bitTimer+1,w
 13435  1BCA  3FC1               	movwi [1]fsr1
 13436  1BCB  0008               	return
 13437  1BCC                     __end_of_scheduler_TaskRun:	
 13438                           
 13439                           	psect	text13
 13440  0A8D                     __ptext13:	
 13441 ;; *************** function _secret_Main *****************
 13442 ;; Defined at:
 13443 ;;		line 99 in file "secret_task.c"
 13444 ;; Parameters:    Size  Location     Type
 13445 ;;  taskData        2   50[BANK0 ] PTR void 
 13446 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13447 ;;		 -> flashy_TaskData(26), NULL(0), 
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;  data            2   56[BANK0 ] PTR struct t_secret_task
 13450 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 13451 ;;		 -> flashy_TaskData(26), NULL(0), 
 13452 ;;  buttonPresse    1   55[BANK0 ] unsigned char 
 13453 ;;  secret_found    1   54[BANK0 ] unsigned char 
 13454 ;; Return value:  Size  Location     Type
 13455 ;;                  1    wreg      void 
 13456 ;; Registers used:
 13457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13458 ;; Tracked objects:
 13459 ;;		On entry : 0/0
 13460 ;;		On exit  : 0/0
 13461 ;;		Unchanged: 0/0
 13462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13463 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13464 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13465 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13466 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13467 ;;Total ram usage:        8 bytes
 13468 ;; Hardware stack levels used:    1
 13469 ;; Hardware stack levels required when called:    6
 13470 ;; This function calls:
 13471 ;;		_nullifyBadge_buttonsGet
 13472 ;;		_secret_check
 13473 ;;		_secret_clear
 13474 ;; This function is called by:
 13475 ;;		_main
 13476 ;;		_scheduler_TaskRun
 13477 ;; This function uses a non-reentrant model
 13478 ;;
 13479                           
 13480                           
 13481                           ;psect for function _secret_Main
 13482  0A8D                     _secret_Main:	
 13483                           
 13484                           ;secret_task.c: 100: struct t_secret_taskData *data = (struct t_secret_taskData *) taskD
      +                          ata;
 13485                           
 13486                           ;incstack = 0
 13487                           ; Regs used in _secret_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13488  0A8D  0020               	movlb	0	; select bank0
 13489  0A8E  0853               	movf	secret_Main@taskData+1,w
 13490  0A8F  00D9               	movwf	secret_Main@data+1
 13491  0A90  0852               	movf	secret_Main@taskData,w
 13492  0A91  00D8               	movwf	secret_Main@data
 13493                           
 13494                           ;secret_task.c: 101: u8 buttonPressed, secret_found = 0;
 13495  0A92  01D6               	clrf	secret_Main@secret_found
 13496                           
 13497                           ;secret_task.c: 103: buttonPressed = nullifyBadge_buttonsGet();
 13498  0A93  319C  24FF  318A   	fcall	_nullifyBadge_buttonsGet
 13499  0A96  0020               	movlb	0	; select bank0
 13500  0A97  00D4               	movwf	??_secret_Main
 13501  0A98  0854               	movf	??_secret_Main,w
 13502  0A99  00D7               	movwf	secret_Main@buttonPressed
 13503                           
 13504                           ;secret_task.c: 104: switch (buttonPressed) {
 13505  0A9A  2C2D               	goto	l7222
 13506  0A9B                     l7136:	
 13507                           ;secret_task.c: 105: case 0:
 13508                           
 13509                           
 13510                           ;secret_task.c: 107: if (data->delayTickCount == 0){
 13511  0A9B  0858               	movf	secret_Main@data,w
 13512  0A9C  0086               	movwf	6
 13513  0A9D  0859               	movf	secret_Main@data+1,w
 13514  0A9E  0087               	movwf	7
 13515  0A9F  3142               	addfsr 1,2
 13516  0AA0  0016               	moviw fsr1++
 13517  0AA1  0401               	iorwf	1,w
 13518  0AA2  1D03               	btfss	3,2
 13519  0AA3  2AB5               	goto	l7142
 13520                           
 13521                           ;secret_task.c: 108: data->delayTickCount = 300;
 13522  0AA4  0858               	movf	secret_Main@data,w
 13523  0AA5  0086               	movwf	6
 13524  0AA6  0859               	movf	secret_Main@data+1,w
 13525  0AA7  0087               	movwf	7
 13526  0AA8  3142               	addfsr 1,2
 13527  0AA9  302C               	movlw	44
 13528  0AAA  3FC0               	movwi [0]fsr1
 13529  0AAB  3001               	movlw	1
 13530  0AAC  3FC1               	movwi [1]fsr1
 13531                           
 13532                           ;secret_task.c: 109: secret_check(data, 0);
 13533  0AAD  0859               	movf	secret_Main@data+1,w
 13534  0AAE  00F8               	movwf	secret_check@data+1
 13535  0AAF  0858               	movf	secret_Main@data,w
 13536  0AB0  00F7               	movwf	secret_check@data
 13537  0AB1  01F9               	clrf	secret_check@buttonPressed
 13538  0AB2  3195  255B  318A   	fcall	_secret_check
 13539  0AB5                     l7142:	
 13540                           
 13541                           ;secret_task.c: 110: }
 13542                           ;secret_task.c: 111: data->holdCountA = 0;
 13543  0AB5  0020               	movlb	0	; select bank0
 13544  0AB6  0858               	movf	secret_Main@data,w
 13545  0AB7  0086               	movwf	6
 13546  0AB8  0859               	movf	secret_Main@data+1,w
 13547  0AB9  0087               	movwf	7
 13548  0ABA  3144               	addfsr 1,4
 13549  0ABB  3000               	movlw	0
 13550  0ABC  3FC0               	movwi [0]fsr1
 13551  0ABD  3FC1               	movwi [1]fsr1
 13552                           
 13553                           ;secret_task.c: 112: data->holdCountB = 0;
 13554  0ABE  0858               	movf	secret_Main@data,w
 13555  0ABF  0086               	movwf	6
 13556  0AC0  0859               	movf	secret_Main@data+1,w
 13557  0AC1  0087               	movwf	7
 13558  0AC2  3146               	addfsr 1,6
 13559  0AC3  3000               	movlw	0
 13560  0AC4  3FC0               	movwi [0]fsr1
 13561  0AC5  3FC1               	movwi [1]fsr1
 13562                           
 13563                           ;secret_task.c: 113: data->holdCountX = 0;
 13564  0AC6  0858               	movf	secret_Main@data,w
 13565  0AC7  0086               	movwf	6
 13566  0AC8  0859               	movf	secret_Main@data+1,w
 13567  0AC9  0087               	movwf	7
 13568  0ACA  3148               	addfsr 1,8
 13569  0ACB  3000               	movlw	0
 13570  0ACC  3FC0               	movwi [0]fsr1
 13571  0ACD  3FC1               	movwi [1]fsr1
 13572                           
 13573                           ;secret_task.c: 114: data->holdCountY = 0;
 13574  0ACE  0858               	movf	secret_Main@data,w
 13575  0ACF  0086               	movwf	6
 13576  0AD0  0859               	movf	secret_Main@data+1,w
 13577  0AD1  0087               	movwf	7
 13578  0AD2  314A               	addfsr 1,10
 13579  0AD3  3000               	movlw	0
 13580  0AD4  3FC0               	movwi [0]fsr1
 13581  0AD5  3FC1               	movwi [1]fsr1
 13582                           
 13583                           ;secret_task.c: 115: data->noholdCount += 1;
 13584  0AD6  0858               	movf	secret_Main@data,w
 13585  0AD7  0086               	movwf	6
 13586  0AD8  0859               	movf	secret_Main@data+1,w
 13587  0AD9  0087               	movwf	7
 13588  0ADA  314C               	addfsr 1,12
 13589  0ADB  3001               	movlw	1
 13590  0ADC  0781               	addwf	1,f
 13591  0ADD  3141               	addfsr 1,1
 13592  0ADE  1803               	skipnc
 13593  0ADF  0A81               	incf	1,f
 13594                           
 13595                           ;secret_task.c: 116: data->delayTickCount -= 1;
 13596  0AE0  0858               	movf	secret_Main@data,w
 13597  0AE1  0086               	movwf	6
 13598  0AE2  0859               	movf	secret_Main@data+1,w
 13599  0AE3  0087               	movwf	7
 13600  0AE4  3142               	addfsr 1,2
 13601  0AE5  3001               	movlw	1
 13602  0AE6  0281               	subwf	1,f
 13603  0AE7  3141               	addfsr 1,1
 13604  0AE8  3000               	movlw	0
 13605  0AE9  3B81               	subwfb	1,f
 13606  0AEA  317F               	addfsr 1,-1
 13607                           
 13608                           ;secret_task.c: 117: break;
 13609  0AEB  2C3F               	goto	l7224
 13610  0AEC                     l7154:	
 13611                           ;secret_task.c: 118: case 1:
 13612                           
 13613                           
 13614                           ;secret_task.c: 120: if (data->holdCountA == 0){
 13615  0AEC  0858               	movf	secret_Main@data,w
 13616  0AED  0086               	movwf	6
 13617  0AEE  0859               	movf	secret_Main@data+1,w
 13618  0AEF  0087               	movwf	7
 13619  0AF0  3144               	addfsr 1,4
 13620  0AF1  0016               	moviw fsr1++
 13621  0AF2  0401               	iorwf	1,w
 13622  0AF3  1D03               	btfss	3,2
 13623  0AF4  2B04               	goto	l7158
 13624                           
 13625                           ;secret_task.c: 121: secret_found = secret_check(data, buttonPressed);
 13626  0AF5  0859               	movf	secret_Main@data+1,w
 13627  0AF6  00F8               	movwf	secret_check@data+1
 13628  0AF7  0858               	movf	secret_Main@data,w
 13629  0AF8  00F7               	movwf	secret_check@data
 13630  0AF9  0857               	movf	secret_Main@buttonPressed,w
 13631  0AFA  00D4               	movwf	??_secret_Main
 13632  0AFB  0854               	movf	??_secret_Main,w
 13633  0AFC  00F9               	movwf	secret_check@buttonPressed
 13634  0AFD  3195  255B  318A   	fcall	_secret_check
 13635  0B00  0020               	movlb	0	; select bank0
 13636  0B01  00D5               	movwf	??_secret_Main+1
 13637  0B02  0855               	movf	??_secret_Main+1,w
 13638  0B03  00D6               	movwf	secret_Main@secret_found
 13639  0B04                     l7158:	
 13640                           
 13641                           ;secret_task.c: 122: }
 13642                           ;secret_task.c: 123: data->holdCountA += 1;
 13643  0B04  0858               	movf	secret_Main@data,w
 13644  0B05  0086               	movwf	6
 13645  0B06  0859               	movf	secret_Main@data+1,w
 13646  0B07  0087               	movwf	7
 13647  0B08  3144               	addfsr 1,4
 13648  0B09  3001               	movlw	1
 13649  0B0A  0781               	addwf	1,f
 13650  0B0B  3141               	addfsr 1,1
 13651  0B0C  1803               	skipnc
 13652  0B0D  0A81               	incf	1,f
 13653                           
 13654                           ;secret_task.c: 124: data->holdCountB = 0;
 13655  0B0E  0858               	movf	secret_Main@data,w
 13656  0B0F  0086               	movwf	6
 13657  0B10  0859               	movf	secret_Main@data+1,w
 13658  0B11  0087               	movwf	7
 13659  0B12  3146               	addfsr 1,6
 13660  0B13  3000               	movlw	0
 13661  0B14  3FC0               	movwi [0]fsr1
 13662  0B15  3FC1               	movwi [1]fsr1
 13663                           
 13664                           ;secret_task.c: 125: data->holdCountX = 0;
 13665  0B16  0858               	movf	secret_Main@data,w
 13666  0B17  0086               	movwf	6
 13667  0B18  0859               	movf	secret_Main@data+1,w
 13668  0B19  0087               	movwf	7
 13669  0B1A  3148               	addfsr 1,8
 13670  0B1B  3000               	movlw	0
 13671  0B1C  3FC0               	movwi [0]fsr1
 13672  0B1D  3FC1               	movwi [1]fsr1
 13673                           
 13674                           ;secret_task.c: 126: data->holdCountY = 0;
 13675  0B1E  0858               	movf	secret_Main@data,w
 13676  0B1F  0086               	movwf	6
 13677  0B20  0859               	movf	secret_Main@data+1,w
 13678  0B21  0087               	movwf	7
 13679  0B22  314A               	addfsr 1,10
 13680  0B23  3000               	movlw	0
 13681  0B24  3FC0               	movwi [0]fsr1
 13682  0B25  3FC1               	movwi [1]fsr1
 13683                           
 13684                           ;secret_task.c: 127: data->noholdCount = 0;
 13685  0B26  0858               	movf	secret_Main@data,w
 13686  0B27  0086               	movwf	6
 13687  0B28  0859               	movf	secret_Main@data+1,w
 13688  0B29  0087               	movwf	7
 13689  0B2A  314C               	addfsr 1,12
 13690  0B2B  3000               	movlw	0
 13691  0B2C  3FC0               	movwi [0]fsr1
 13692  0B2D  3FC1               	movwi [1]fsr1
 13693                           
 13694                           ;secret_task.c: 128: data->delayTickCount = 300;
 13695  0B2E  0858               	movf	secret_Main@data,w
 13696  0B2F  0086               	movwf	6
 13697  0B30  0859               	movf	secret_Main@data+1,w
 13698  0B31  0087               	movwf	7
 13699  0B32  3142               	addfsr 1,2
 13700  0B33  302C               	movlw	44
 13701  0B34  3FC0               	movwi [0]fsr1
 13702  0B35  3001               	movlw	1
 13703  0B36  3FC1               	movwi [1]fsr1
 13704                           
 13705                           ;secret_task.c: 129: break;
 13706  0B37  2C3F               	goto	l7224
 13707  0B38                     l7170:	
 13708                           ;secret_task.c: 130: case 2:
 13709                           
 13710                           
 13711                           ;secret_task.c: 132: if (data->holdCountB == 0){
 13712  0B38  0858               	movf	secret_Main@data,w
 13713  0B39  0086               	movwf	6
 13714  0B3A  0859               	movf	secret_Main@data+1,w
 13715  0B3B  0087               	movwf	7
 13716  0B3C  3146               	addfsr 1,6
 13717  0B3D  0016               	moviw fsr1++
 13718  0B3E  0401               	iorwf	1,w
 13719  0B3F  1D03               	btfss	3,2
 13720  0B40  2B50               	goto	l7174
 13721                           
 13722                           ;secret_task.c: 133: secret_found = secret_check(data, buttonPressed);
 13723  0B41  0859               	movf	secret_Main@data+1,w
 13724  0B42  00F8               	movwf	secret_check@data+1
 13725  0B43  0858               	movf	secret_Main@data,w
 13726  0B44  00F7               	movwf	secret_check@data
 13727  0B45  0857               	movf	secret_Main@buttonPressed,w
 13728  0B46  00D4               	movwf	??_secret_Main
 13729  0B47  0854               	movf	??_secret_Main,w
 13730  0B48  00F9               	movwf	secret_check@buttonPressed
 13731  0B49  3195  255B  318A   	fcall	_secret_check
 13732  0B4C  0020               	movlb	0	; select bank0
 13733  0B4D  00D5               	movwf	??_secret_Main+1
 13734  0B4E  0855               	movf	??_secret_Main+1,w
 13735  0B4F  00D6               	movwf	secret_Main@secret_found
 13736  0B50                     l7174:	
 13737                           
 13738                           ;secret_task.c: 134: }
 13739                           ;secret_task.c: 135: data->holdCountA = 0;
 13740  0B50  0858               	movf	secret_Main@data,w
 13741  0B51  0086               	movwf	6
 13742  0B52  0859               	movf	secret_Main@data+1,w
 13743  0B53  0087               	movwf	7
 13744  0B54  3144               	addfsr 1,4
 13745  0B55  3000               	movlw	0
 13746  0B56  3FC0               	movwi [0]fsr1
 13747  0B57  3FC1               	movwi [1]fsr1
 13748                           
 13749                           ;secret_task.c: 136: data->holdCountB += 1;
 13750  0B58  0858               	movf	secret_Main@data,w
 13751  0B59  0086               	movwf	6
 13752  0B5A  0859               	movf	secret_Main@data+1,w
 13753  0B5B  0087               	movwf	7
 13754  0B5C  3146               	addfsr 1,6
 13755  0B5D  3001               	movlw	1
 13756  0B5E  0781               	addwf	1,f
 13757  0B5F  3141               	addfsr 1,1
 13758  0B60  1803               	skipnc
 13759  0B61  0A81               	incf	1,f
 13760                           
 13761                           ;secret_task.c: 137: data->holdCountX = 0;
 13762  0B62  0858               	movf	secret_Main@data,w
 13763  0B63  0086               	movwf	6
 13764  0B64  0859               	movf	secret_Main@data+1,w
 13765  0B65  0087               	movwf	7
 13766  0B66  3148               	addfsr 1,8
 13767  0B67  3000               	movlw	0
 13768  0B68  3FC0               	movwi [0]fsr1
 13769  0B69  3FC1               	movwi [1]fsr1
 13770                           
 13771                           ;secret_task.c: 138: data->holdCountY = 0;
 13772  0B6A  0858               	movf	secret_Main@data,w
 13773  0B6B  0086               	movwf	6
 13774  0B6C  0859               	movf	secret_Main@data+1,w
 13775  0B6D  0087               	movwf	7
 13776  0B6E  314A               	addfsr 1,10
 13777  0B6F  3000               	movlw	0
 13778  0B70  3FC0               	movwi [0]fsr1
 13779  0B71  3FC1               	movwi [1]fsr1
 13780                           
 13781                           ;secret_task.c: 139: data->noholdCount = 0;
 13782  0B72  0858               	movf	secret_Main@data,w
 13783  0B73  0086               	movwf	6
 13784  0B74  0859               	movf	secret_Main@data+1,w
 13785  0B75  0087               	movwf	7
 13786  0B76  314C               	addfsr 1,12
 13787  0B77  3000               	movlw	0
 13788  0B78  3FC0               	movwi [0]fsr1
 13789  0B79  3FC1               	movwi [1]fsr1
 13790                           
 13791                           ;secret_task.c: 140: data->delayTickCount = 300;
 13792  0B7A  0858               	movf	secret_Main@data,w
 13793  0B7B  0086               	movwf	6
 13794  0B7C  0859               	movf	secret_Main@data+1,w
 13795  0B7D  0087               	movwf	7
 13796  0B7E  3142               	addfsr 1,2
 13797  0B7F  302C               	movlw	44
 13798  0B80  3FC0               	movwi [0]fsr1
 13799  0B81  3001               	movlw	1
 13800  0B82  3FC1               	movwi [1]fsr1
 13801                           
 13802                           ;secret_task.c: 141: break;
 13803  0B83  2C3F               	goto	l7224
 13804  0B84                     l7186:	
 13805                           ;secret_task.c: 142: case 4:
 13806                           
 13807                           
 13808                           ;secret_task.c: 144: if (data->holdCountX == 0){
 13809  0B84  0858               	movf	secret_Main@data,w
 13810  0B85  0086               	movwf	6
 13811  0B86  0859               	movf	secret_Main@data+1,w
 13812  0B87  0087               	movwf	7
 13813  0B88  3148               	addfsr 1,8
 13814  0B89  0016               	moviw fsr1++
 13815  0B8A  0401               	iorwf	1,w
 13816  0B8B  1D03               	btfss	3,2
 13817  0B8C  2B9C               	goto	l7190
 13818                           
 13819                           ;secret_task.c: 145: secret_found = secret_check(data, buttonPressed);
 13820  0B8D  0859               	movf	secret_Main@data+1,w
 13821  0B8E  00F8               	movwf	secret_check@data+1
 13822  0B8F  0858               	movf	secret_Main@data,w
 13823  0B90  00F7               	movwf	secret_check@data
 13824  0B91  0857               	movf	secret_Main@buttonPressed,w
 13825  0B92  00D4               	movwf	??_secret_Main
 13826  0B93  0854               	movf	??_secret_Main,w
 13827  0B94  00F9               	movwf	secret_check@buttonPressed
 13828  0B95  3195  255B  318A   	fcall	_secret_check
 13829  0B98  0020               	movlb	0	; select bank0
 13830  0B99  00D5               	movwf	??_secret_Main+1
 13831  0B9A  0855               	movf	??_secret_Main+1,w
 13832  0B9B  00D6               	movwf	secret_Main@secret_found
 13833  0B9C                     l7190:	
 13834                           
 13835                           ;secret_task.c: 146: }
 13836                           ;secret_task.c: 147: data->holdCountA = 0;
 13837  0B9C  0858               	movf	secret_Main@data,w
 13838  0B9D  0086               	movwf	6
 13839  0B9E  0859               	movf	secret_Main@data+1,w
 13840  0B9F  0087               	movwf	7
 13841  0BA0  3144               	addfsr 1,4
 13842  0BA1  3000               	movlw	0
 13843  0BA2  3FC0               	movwi [0]fsr1
 13844  0BA3  3FC1               	movwi [1]fsr1
 13845                           
 13846                           ;secret_task.c: 148: data->holdCountB = 0;
 13847  0BA4  0858               	movf	secret_Main@data,w
 13848  0BA5  0086               	movwf	6
 13849  0BA6  0859               	movf	secret_Main@data+1,w
 13850  0BA7  0087               	movwf	7
 13851  0BA8  3146               	addfsr 1,6
 13852  0BA9  3000               	movlw	0
 13853  0BAA  3FC0               	movwi [0]fsr1
 13854  0BAB  3FC1               	movwi [1]fsr1
 13855                           
 13856                           ;secret_task.c: 149: data->holdCountX += 1;
 13857  0BAC  0858               	movf	secret_Main@data,w
 13858  0BAD  0086               	movwf	6
 13859  0BAE  0859               	movf	secret_Main@data+1,w
 13860  0BAF  0087               	movwf	7
 13861  0BB0  3148               	addfsr 1,8
 13862  0BB1  3001               	movlw	1
 13863  0BB2  0781               	addwf	1,f
 13864  0BB3  3141               	addfsr 1,1
 13865  0BB4  1803               	skipnc
 13866  0BB5  0A81               	incf	1,f
 13867                           
 13868                           ;secret_task.c: 150: data->holdCountY = 0;
 13869  0BB6  0858               	movf	secret_Main@data,w
 13870  0BB7  0086               	movwf	6
 13871  0BB8  0859               	movf	secret_Main@data+1,w
 13872  0BB9  0087               	movwf	7
 13873  0BBA  314A               	addfsr 1,10
 13874  0BBB  3000               	movlw	0
 13875  0BBC  3FC0               	movwi [0]fsr1
 13876  0BBD  3FC1               	movwi [1]fsr1
 13877                           
 13878                           ;secret_task.c: 151: data->noholdCount = 0;
 13879  0BBE  0858               	movf	secret_Main@data,w
 13880  0BBF  0086               	movwf	6
 13881  0BC0  0859               	movf	secret_Main@data+1,w
 13882  0BC1  0087               	movwf	7
 13883  0BC2  314C               	addfsr 1,12
 13884  0BC3  3000               	movlw	0
 13885  0BC4  3FC0               	movwi [0]fsr1
 13886  0BC5  3FC1               	movwi [1]fsr1
 13887                           
 13888                           ;secret_task.c: 152: data->delayTickCount = 300;
 13889  0BC6  0858               	movf	secret_Main@data,w
 13890  0BC7  0086               	movwf	6
 13891  0BC8  0859               	movf	secret_Main@data+1,w
 13892  0BC9  0087               	movwf	7
 13893  0BCA  3142               	addfsr 1,2
 13894  0BCB  302C               	movlw	44
 13895  0BCC  3FC0               	movwi [0]fsr1
 13896  0BCD  3001               	movlw	1
 13897  0BCE  3FC1               	movwi [1]fsr1
 13898                           
 13899                           ;secret_task.c: 153: break;
 13900  0BCF  2C3F               	goto	l7224
 13901  0BD0                     l7202:	
 13902                           ;secret_task.c: 154: case 8:
 13903                           
 13904                           
 13905                           ;secret_task.c: 156: if (data->holdCountY == 0){
 13906  0BD0  0858               	movf	secret_Main@data,w
 13907  0BD1  0086               	movwf	6
 13908  0BD2  0859               	movf	secret_Main@data+1,w
 13909  0BD3  0087               	movwf	7
 13910  0BD4  314A               	addfsr 1,10
 13911  0BD5  0016               	moviw fsr1++
 13912  0BD6  0401               	iorwf	1,w
 13913  0BD7  1D03               	btfss	3,2
 13914  0BD8  2BE8               	goto	l7206
 13915                           
 13916                           ;secret_task.c: 157: secret_found = secret_check(data, buttonPressed);
 13917  0BD9  0859               	movf	secret_Main@data+1,w
 13918  0BDA  00F8               	movwf	secret_check@data+1
 13919  0BDB  0858               	movf	secret_Main@data,w
 13920  0BDC  00F7               	movwf	secret_check@data
 13921  0BDD  0857               	movf	secret_Main@buttonPressed,w
 13922  0BDE  00D4               	movwf	??_secret_Main
 13923  0BDF  0854               	movf	??_secret_Main,w
 13924  0BE0  00F9               	movwf	secret_check@buttonPressed
 13925  0BE1  3195  255B  318A   	fcall	_secret_check
 13926  0BE4  0020               	movlb	0	; select bank0
 13927  0BE5  00D5               	movwf	??_secret_Main+1
 13928  0BE6  0855               	movf	??_secret_Main+1,w
 13929  0BE7  00D6               	movwf	secret_Main@secret_found
 13930  0BE8                     l7206:	
 13931                           
 13932                           ;secret_task.c: 158: }
 13933                           ;secret_task.c: 159: data->holdCountA = 0;
 13934  0BE8  0858               	movf	secret_Main@data,w
 13935  0BE9  0086               	movwf	6
 13936  0BEA  0859               	movf	secret_Main@data+1,w
 13937  0BEB  0087               	movwf	7
 13938  0BEC  3144               	addfsr 1,4
 13939  0BED  3000               	movlw	0
 13940  0BEE  3FC0               	movwi [0]fsr1
 13941  0BEF  3FC1               	movwi [1]fsr1
 13942                           
 13943                           ;secret_task.c: 160: data->holdCountB = 0;
 13944  0BF0  0858               	movf	secret_Main@data,w
 13945  0BF1  0086               	movwf	6
 13946  0BF2  0859               	movf	secret_Main@data+1,w
 13947  0BF3  0087               	movwf	7
 13948  0BF4  3146               	addfsr 1,6
 13949  0BF5  3000               	movlw	0
 13950  0BF6  3FC0               	movwi [0]fsr1
 13951  0BF7  3FC1               	movwi [1]fsr1
 13952                           
 13953                           ;secret_task.c: 161: data->holdCountX = 0;
 13954  0BF8  0858               	movf	secret_Main@data,w
 13955  0BF9  0086               	movwf	6
 13956  0BFA  0859               	movf	secret_Main@data+1,w
 13957  0BFB  0087               	movwf	7
 13958  0BFC  3148               	addfsr 1,8
 13959  0BFD  3000               	movlw	0
 13960  0BFE  3FC0               	movwi [0]fsr1
 13961  0BFF  3FC1               	movwi [1]fsr1
 13962                           
 13963                           ;secret_task.c: 162: data->holdCountY += 1;
 13964  0C00  0858               	movf	secret_Main@data,w
 13965  0C01  0086               	movwf	6
 13966  0C02  0859               	movf	secret_Main@data+1,w
 13967  0C03  0087               	movwf	7
 13968  0C04  314A               	addfsr 1,10
 13969  0C05  3001               	movlw	1
 13970  0C06  0781               	addwf	1,f
 13971  0C07  3141               	addfsr 1,1
 13972  0C08  1803               	skipnc
 13973  0C09  0A81               	incf	1,f
 13974                           
 13975                           ;secret_task.c: 163: data->noholdCount = 0;
 13976  0C0A  0858               	movf	secret_Main@data,w
 13977  0C0B  0086               	movwf	6
 13978  0C0C  0859               	movf	secret_Main@data+1,w
 13979  0C0D  0087               	movwf	7
 13980  0C0E  314C               	addfsr 1,12
 13981  0C0F  3000               	movlw	0
 13982  0C10  3FC0               	movwi [0]fsr1
 13983  0C11  3FC1               	movwi [1]fsr1
 13984                           
 13985                           ;secret_task.c: 164: data->delayTickCount = 300;
 13986  0C12  0858               	movf	secret_Main@data,w
 13987  0C13  0086               	movwf	6
 13988  0C14  0859               	movf	secret_Main@data+1,w
 13989  0C15  0087               	movwf	7
 13990  0C16  3142               	addfsr 1,2
 13991  0C17  302C               	movlw	44
 13992  0C18  3FC0               	movwi [0]fsr1
 13993  0C19  3001               	movlw	1
 13994  0C1A  3FC1               	movwi [1]fsr1
 13995                           
 13996                           ;secret_task.c: 165: break;
 13997  0C1B  2C3F               	goto	l7224
 13998  0C1C                     l7218:	
 13999                           ;secret_task.c: 166: default:
 14000                           
 14001                           
 14002                           ;secret_task.c: 168: secret_check(data, 0);
 14003  0C1C  0859               	movf	secret_Main@data+1,w
 14004  0C1D  00F8               	movwf	secret_check@data+1
 14005  0C1E  0858               	movf	secret_Main@data,w
 14006  0C1F  00F7               	movwf	secret_check@data
 14007  0C20  01F9               	clrf	secret_check@buttonPressed
 14008  0C21  3195  255B  318A   	fcall	_secret_check
 14009                           
 14010                           ;secret_task.c: 169: secret_clear(data);
 14011  0C24  0020               	movlb	0	; select bank0
 14012  0C25  0859               	movf	secret_Main@data+1,w
 14013  0C26  00F2               	movwf	secret_clear@data+1
 14014  0C27  0858               	movf	secret_Main@data,w
 14015  0C28  00F1               	movwf	secret_clear@data
 14016  0C29  319D  2562  318A   	fcall	_secret_clear
 14017                           
 14018                           ;secret_task.c: 170: }
 14019  0C2C  2C3F               	goto	l7224
 14020  0C2D                     l7222:	
 14021  0C2D  0020               	movlb	0	; select bank0
 14022  0C2E  0857               	movf	secret_Main@buttonPressed,w
 14023                           
 14024                           ; Switch size 1, requested type "space"
 14025                           ; Number of cases is 5, Range of values is 0 to 8
 14026                           ; switch strategies available:
 14027                           ; Name         Instructions Cycles
 14028                           ; simple_byte           16     9 (average)
 14029                           ; direct_byte           24     6 (fixed)
 14030                           ; jumptable            260     6 (fixed)
 14031                           ;	Chosen strategy is simple_byte
 14032  0C2F  3A00               	xorlw	0	; case 0
 14033  0C30  1903               	skipnz
 14034  0C31  2A9B               	goto	l7136
 14035  0C32  3A01               	xorlw	1	; case 1
 14036  0C33  1903               	skipnz
 14037  0C34  2AEC               	goto	l7154
 14038  0C35  3A03               	xorlw	3	; case 2
 14039  0C36  1903               	skipnz
 14040  0C37  2B38               	goto	l7170
 14041  0C38  3A06               	xorlw	6	; case 4
 14042  0C39  1903               	skipnz
 14043  0C3A  2B84               	goto	l7186
 14044  0C3B  3A0C               	xorlw	12	; case 8
 14045  0C3C  1903               	skipnz
 14046  0C3D  2BD0               	goto	l7202
 14047  0C3E  2C1C               	goto	l7218
 14048  0C3F                     l7224:	
 14049                           
 14050                           ;secret_task.c: 173: if (secret_found){
 14051  0C3F  0020               	movlb	0	; select bank0
 14052  0C40  0856               	movf	secret_Main@secret_found,w
 14053  0C41  1903               	btfsc	3,2
 14054  0C42  0008               	return
 14055                           
 14056                           ;secret_task.c: 174: secret_clear(data);
 14057  0C43  0859               	movf	secret_Main@data+1,w
 14058  0C44  00F2               	movwf	secret_clear@data+1
 14059  0C45  0858               	movf	secret_Main@data,w
 14060  0C46  00F1               	movwf	secret_clear@data
 14061  0C47  319D  2562         	fcall	_secret_clear
 14062  0C49  0008               	return
 14063  0C4A                     __end_of_secret_Main:	
 14064                           
 14065                           	psect	text14
 14066  0C4A                     __ptext14:	
 14067 ;; *************** function _locked_Main *****************
 14068 ;; Defined at:
 14069 ;;		line 84 in file "locked_task.c"
 14070 ;; Parameters:    Size  Location     Type
 14071 ;;  taskData        2   50[BANK0 ] PTR void 
 14072 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14073 ;;		 -> flashy_TaskData(26), NULL(0), 
 14074 ;; Auto vars:     Size  Location     Type
 14075 ;;  data            2   55[BANK0 ] PTR struct t_locked_task
 14076 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14077 ;;		 -> flashy_TaskData(26), NULL(0), 
 14078 ;;  buttonPresse    1   54[BANK0 ] unsigned char 
 14079 ;; Return value:  Size  Location     Type
 14080 ;;                  1    wreg      void 
 14081 ;; Registers used:
 14082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14083 ;; Tracked objects:
 14084 ;;		On entry : 0/0
 14085 ;;		On exit  : 0/0
 14086 ;;		Unchanged: 0/0
 14087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14089 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14090 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14091 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14092 ;;Total ram usage:        7 bytes
 14093 ;; Hardware stack levels used:    1
 14094 ;; Hardware stack levels required when called:   11
 14095 ;; This function calls:
 14096 ;;		___lwmod
 14097 ;;		_locked_clear
 14098 ;;		_locked_get_lock_leds
 14099 ;;		_locked_get_unlock_leds
 14100 ;;		_locked_lock_leds
 14101 ;;		_locked_unlock_leds
 14102 ;;		_marquee
 14103 ;;		_nullifyBadge_buttonsGet
 14104 ;;		_nullifyBadge_userLedsSet
 14105 ;; This function is called by:
 14106 ;;		_main
 14107 ;;		_scheduler_TaskRun
 14108 ;; This function uses a non-reentrant model
 14109 ;;
 14110                           
 14111                           
 14112                           ;psect for function _locked_Main
 14113  0C4A                     _locked_Main:	
 14114                           
 14115                           ;locked_task.c: 85: struct t_locked_taskData *data = (struct t_locked_taskData *) taskDa
      +                          ta;
 14116                           
 14117                           ;incstack = 0
 14118                           ; Regs used in _locked_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14119  0C4A  0020               	movlb	0	; select bank0
 14120  0C4B  0853               	movf	locked_Main@taskData+1,w
 14121  0C4C  00D8               	movwf	locked_Main@data+1
 14122  0C4D  0852               	movf	locked_Main@taskData,w
 14123  0C4E  00D7               	movwf	locked_Main@data
 14124                           
 14125                           ;locked_task.c: 86: u8 buttonPressed;
 14126                           ;locked_task.c: 88: if ( currentTask != LOCKED_TASK ){
 14127  0C4F  3003               	movlw	3
 14128  0C50  0021               	movlb	1	; select bank1
 14129  0C51  0632               	xorwf	_currentTask^(0+128),w
 14130  0C52  0433               	iorwf	(_currentTask+1)^(0+128),w
 14131  0C53  1903               	btfsc	3,2
 14132  0C54  2D52               	goto	l7096
 14133                           
 14134                           ;locked_task.c: 89: data->holdCountA = 1;
 14135  0C55  0020               	movlb	0	; select bank0
 14136  0C56  0857               	movf	locked_Main@data,w
 14137  0C57  0086               	movwf	6
 14138  0C58  0858               	movf	locked_Main@data+1,w
 14139  0C59  0087               	movwf	7
 14140  0C5A  3143               	addfsr 1,3
 14141  0C5B  3001               	movlw	1
 14142  0C5C  3FC0               	movwi [0]fsr1
 14143  0C5D  3000               	movlw	0
 14144  0C5E  3FC1               	movwi [1]fsr1
 14145                           
 14146                           ;locked_task.c: 90: data->holdCountB = 1;
 14147  0C5F  0857               	movf	locked_Main@data,w
 14148  0C60  0086               	movwf	6
 14149  0C61  0858               	movf	locked_Main@data+1,w
 14150  0C62  0087               	movwf	7
 14151  0C63  3145               	addfsr 1,5
 14152  0C64  3001               	movlw	1
 14153  0C65  3FC0               	movwi [0]fsr1
 14154  0C66  3000               	movlw	0
 14155  0C67  3FC1               	movwi [1]fsr1
 14156                           
 14157                           ;locked_task.c: 91: data->holdCountX = 1;
 14158  0C68  0857               	movf	locked_Main@data,w
 14159  0C69  0086               	movwf	6
 14160  0C6A  0858               	movf	locked_Main@data+1,w
 14161  0C6B  0087               	movwf	7
 14162  0C6C  3147               	addfsr 1,7
 14163  0C6D  3001               	movlw	1
 14164  0C6E  3FC0               	movwi [0]fsr1
 14165  0C6F  3000               	movlw	0
 14166  0C70  3FC1               	movwi [1]fsr1
 14167                           
 14168                           ;locked_task.c: 92: data->holdCountY = 1;
 14169  0C71  0857               	movf	locked_Main@data,w
 14170  0C72  0086               	movwf	6
 14171  0C73  0858               	movf	locked_Main@data+1,w
 14172  0C74  0087               	movwf	7
 14173  0C75  3149               	addfsr 1,9
 14174  0C76  3001               	movlw	1
 14175  0C77  3FC0               	movwi [0]fsr1
 14176  0C78  3000               	movlw	0
 14177  0C79  3FC1               	movwi [1]fsr1
 14178                           
 14179                           ;locked_task.c: 93: return;
 14180  0C7A  0008               	return
 14181  0C7B                     l7054:	
 14182                           ;locked_task.c: 100: case LOCKED_UNLOCKING_STATE:
 14183                           
 14184                           ;locked_task.c: 94: }
 14185                           ;locked_task.c: 99: switch (data->state){
 14186                           
 14187                           
 14188                           ;locked_task.c: 101: badge_locked = 0;
 14189  0C7B  01FC               	clrf	_badge_locked
 14190                           
 14191                           ;locked_task.c: 102: marquee("UNLOCKING...", data->delayTickCount);
 14192  0C7C  301C               	movlw	low (STR_16| (0+32768))
 14193  0C7D  00BA               	movwf	marquee@string
 14194  0C7E  30A0               	movlw	high (STR_16| (0+32768))
 14195  0C7F  00BB               	movwf	marquee@string+1
 14196  0C80  0857               	movf	locked_Main@data,w
 14197  0C81  0086               	movwf	6
 14198  0C82  0858               	movf	locked_Main@data+1,w
 14199  0C83  0087               	movwf	7
 14200  0C84  3141               	addfsr 1,1
 14201  0C85  3F40               	moviw [0]fsr1
 14202  0C86  00BC               	movwf	marquee@count
 14203  0C87  3F41               	moviw [1]fsr1
 14204  0C88  00BD               	movwf	marquee@count+1
 14205  0C89  3193  2364  318C   	fcall	_marquee
 14206                           
 14207                           ;locked_task.c: 104: if (data->delayTickCount % 75 == 0){
 14208  0C8C  304B               	movlw	75
 14209  0C8D  0020               	movlb	0	; select bank0
 14210  0C8E  00A0               	movwf	___lwmod@divisor
 14211  0C8F  3000               	movlw	0
 14212  0C90  00A1               	movwf	___lwmod@divisor+1
 14213  0C91  0857               	movf	locked_Main@data,w
 14214  0C92  0086               	movwf	6
 14215  0C93  0858               	movf	locked_Main@data+1,w
 14216  0C94  0087               	movwf	7
 14217  0C95  3141               	addfsr 1,1
 14218  0C96  3F40               	moviw [0]fsr1
 14219  0C97  00A2               	movwf	___lwmod@dividend
 14220  0C98  3F41               	moviw [1]fsr1
 14221  0C99  00A3               	movwf	___lwmod@dividend+1
 14222  0C9A  319C  24A3  318C   	fcall	___lwmod
 14223  0C9D  0020               	movlb	0	; select bank0
 14224  0C9E  0820               	movf	?___lwmod,w
 14225  0C9F  0421               	iorwf	?___lwmod+1,w
 14226  0CA0  1D03               	btfss	3,2
 14227  0CA1  2CAC               	goto	l7062
 14228                           
 14229                           ;locked_task.c: 105: locked_leds = locked_lock_base_leds | locked_get_unlock_leds();
 14230  0CA2  319A  2276  318C   	fcall	_locked_get_unlock_leds
 14231  0CA5  0021               	movlb	1	; select bank1
 14232  0CA6  0869               	movf	_locked_lock_base_leds^(0+128),w
 14233  0CA7  0471               	iorwf	?_locked_get_unlock_leds,w
 14234  0CA8  00A0               	movwf	_locked_leds^(0+128)
 14235  0CA9  086A               	movf	(_locked_lock_base_leds+1)^(0+128),w
 14236  0CAA  0472               	iorwf	?_locked_get_unlock_leds+1,w
 14237  0CAB  00A1               	movwf	(_locked_leds+1)^(0+128)
 14238  0CAC                     l7062:	
 14239                           
 14240                           ;locked_task.c: 106: }
 14241                           ;locked_task.c: 109: if (data->delayTickCount == 375){
 14242  0CAC  0020               	movlb	0	; select bank0
 14243  0CAD  0857               	movf	locked_Main@data,w
 14244  0CAE  0086               	movwf	6
 14245  0CAF  0858               	movf	locked_Main@data+1,w
 14246  0CB0  0087               	movwf	7
 14247  0CB1  3141               	addfsr 1,1
 14248  0CB2  0016               	moviw fsr1++
 14249  0CB3  3A77               	xorlw	119
 14250  0CB4  00D4               	movwf	??_locked_Main
 14251  0CB5  0016               	moviw fsr1++
 14252  0CB6  3A01               	xorlw	1
 14253  0CB7  04D4               	iorwf	??_locked_Main,f
 14254  0CB8  1D03               	btfss	3,2
 14255  0CB9  2D1C               	goto	l7082
 14256                           
 14257                           ;locked_task.c: 110: data->state = LOCKED_UNLOCKED_STATE;
 14258  0CBA  0857               	movf	locked_Main@data,w
 14259  0CBB  3E0D               	addlw	13
 14260  0CBC  00D4               	movwf	??_locked_Main
 14261  0CBD  3000               	movlw	0
 14262  0CBE  3D58               	addwfc	locked_Main@data+1,w
 14263  0CBF  00D5               	movwf	??_locked_Main+1
 14264  0CC0  0854               	movf	??_locked_Main,w
 14265  0CC1  0086               	movwf	6
 14266  0CC2  0855               	movf	??_locked_Main+1,w
 14267  0CC3  0087               	movwf	7
 14268  0CC4  3002               	movlw	2
 14269  0CC5  0081               	movwf	1
 14270                           
 14271                           ;locked_task.c: 111: data->delayTickCount = 0;
 14272  0CC6  0857               	movf	locked_Main@data,w
 14273  0CC7  0086               	movwf	6
 14274  0CC8  0858               	movf	locked_Main@data+1,w
 14275  0CC9  0087               	movwf	7
 14276  0CCA  3141               	addfsr 1,1
 14277  0CCB  3000               	movlw	0
 14278  0CCC  3FC0               	movwi [0]fsr1
 14279  0CCD  3FC1               	movwi [1]fsr1
 14280  0CCE  2D66               	goto	l7098
 14281  0CCF                     l7070:	
 14282                           ;locked_task.c: 117: case LOCKED_LOCKING_STATE:
 14283                           
 14284                           ;locked_task.c: 115: }
 14285                           ;locked_task.c: 116: break;
 14286                           
 14287                           ;locked_task.c: 113: else {
 14288                           ;locked_task.c: 114: data->delayTickCount += 1;
 14289                           
 14290                           ;locked_task.c: 112: }
 14291                           
 14292                           
 14293                           ;locked_task.c: 118: marquee("LOCKING...", data->delayTickCount);
 14294  0CCF  301E               	movlw	low ((STR_16+2)| (0+32768))
 14295  0CD0  00BA               	movwf	marquee@string
 14296  0CD1  30A0               	movlw	high ((STR_16+2)| (0+32768))
 14297  0CD2  00BB               	movwf	marquee@string+1
 14298  0CD3  0857               	movf	locked_Main@data,w
 14299  0CD4  0086               	movwf	6
 14300  0CD5  0858               	movf	locked_Main@data+1,w
 14301  0CD6  0087               	movwf	7
 14302  0CD7  3141               	addfsr 1,1
 14303  0CD8  3F40               	moviw [0]fsr1
 14304  0CD9  00BC               	movwf	marquee@count
 14305  0CDA  3F41               	moviw [1]fsr1
 14306  0CDB  00BD               	movwf	marquee@count+1
 14307  0CDC  3193  2364  318C   	fcall	_marquee
 14308                           
 14309                           ;locked_task.c: 120: if (data->delayTickCount % 75 == 0){
 14310  0CDF  304B               	movlw	75
 14311  0CE0  0020               	movlb	0	; select bank0
 14312  0CE1  00A0               	movwf	___lwmod@divisor
 14313  0CE2  3000               	movlw	0
 14314  0CE3  00A1               	movwf	___lwmod@divisor+1
 14315  0CE4  0857               	movf	locked_Main@data,w
 14316  0CE5  0086               	movwf	6
 14317  0CE6  0858               	movf	locked_Main@data+1,w
 14318  0CE7  0087               	movwf	7
 14319  0CE8  3141               	addfsr 1,1
 14320  0CE9  3F40               	moviw [0]fsr1
 14321  0CEA  00A2               	movwf	___lwmod@dividend
 14322  0CEB  3F41               	moviw [1]fsr1
 14323  0CEC  00A3               	movwf	___lwmod@dividend+1
 14324  0CED  319C  24A3  318C   	fcall	___lwmod
 14325  0CF0  0020               	movlb	0	; select bank0
 14326  0CF1  0820               	movf	?___lwmod,w
 14327  0CF2  0421               	iorwf	?___lwmod+1,w
 14328  0CF3  1D03               	btfss	3,2
 14329  0CF4  2CFF               	goto	l7076
 14330                           
 14331                           ;locked_task.c: 121: locked_leds = locked_lock_base_leds | locked_get_lock_leds();
 14332  0CF5  319C  2454  318C   	fcall	_locked_get_lock_leds
 14333  0CF8  0021               	movlb	1	; select bank1
 14334  0CF9  0869               	movf	_locked_lock_base_leds^(0+128),w
 14335  0CFA  0471               	iorwf	?_locked_get_lock_leds,w
 14336  0CFB  00A0               	movwf	_locked_leds^(0+128)
 14337  0CFC  086A               	movf	(_locked_lock_base_leds+1)^(0+128),w
 14338  0CFD  0472               	iorwf	?_locked_get_lock_leds+1,w
 14339  0CFE  00A1               	movwf	(_locked_leds+1)^(0+128)
 14340  0CFF                     l7076:	
 14341                           
 14342                           ;locked_task.c: 122: }
 14343                           ;locked_task.c: 125: if (data->delayTickCount == 375){
 14344  0CFF  0020               	movlb	0	; select bank0
 14345  0D00  0857               	movf	locked_Main@data,w
 14346  0D01  0086               	movwf	6
 14347  0D02  0858               	movf	locked_Main@data+1,w
 14348  0D03  0087               	movwf	7
 14349  0D04  3141               	addfsr 1,1
 14350  0D05  0016               	moviw fsr1++
 14351  0D06  3A77               	xorlw	119
 14352  0D07  00D4               	movwf	??_locked_Main
 14353  0D08  0016               	moviw fsr1++
 14354  0D09  3A01               	xorlw	1
 14355  0D0A  04D4               	iorwf	??_locked_Main,f
 14356  0D0B  1D03               	btfss	3,2
 14357  0D0C  2D1C               	goto	l7082
 14358                           
 14359                           ;locked_task.c: 126: data->state = LOCKED_LOCKED_STATE;
 14360  0D0D  0857               	movf	locked_Main@data,w
 14361  0D0E  0086               	movwf	6
 14362  0D0F  0858               	movf	locked_Main@data+1,w
 14363  0D10  0087               	movwf	7
 14364  0D11  314D               	addfsr 1,13
 14365  0D12  0181               	clrf	1
 14366                           
 14367                           ;locked_task.c: 127: data->delayTickCount = 0;
 14368  0D13  0857               	movf	locked_Main@data,w
 14369  0D14  0086               	movwf	6
 14370  0D15  0858               	movf	locked_Main@data+1,w
 14371  0D16  0087               	movwf	7
 14372  0D17  3141               	addfsr 1,1
 14373  0D18  3000               	movlw	0
 14374  0D19  3FC0               	movwi [0]fsr1
 14375  0D1A  3FC1               	movwi [1]fsr1
 14376                           
 14377                           ;locked_task.c: 128: }
 14378  0D1B  2D66               	goto	l7098
 14379  0D1C                     l7082:	
 14380                           
 14381                           ;locked_task.c: 129: else {
 14382                           ;locked_task.c: 130: data->delayTickCount += 1;
 14383  0D1C  0857               	movf	locked_Main@data,w
 14384  0D1D  0086               	movwf	6
 14385  0D1E  0858               	movf	locked_Main@data+1,w
 14386  0D1F  0087               	movwf	7
 14387  0D20  3141               	addfsr 1,1
 14388  0D21  3001               	movlw	1
 14389  0D22  0781               	addwf	1,f
 14390  0D23  3141               	addfsr 1,1
 14391  0D24  1803               	skipnc
 14392  0D25  0A81               	incf	1,f
 14393                           
 14394                           ;locked_task.c: 131: }
 14395                           ;locked_task.c: 132: break;
 14396  0D26  2D66               	goto	l7098
 14397  0D27                     l7084:	
 14398                           ;locked_task.c: 133: case LOCKED_UNLOCKED_STATE:
 14399                           
 14400                           
 14401                           ;locked_task.c: 134: badge_locked = 0;
 14402  0D27  01FC               	clrf	_badge_locked
 14403                           
 14404                           ;locked_task.c: 136: marquee("OPEN", data->delayTickCount);
 14405  0D28  3060               	movlw	low (STR_18| (0+32768))
 14406  0D29  00BA               	movwf	marquee@string
 14407  0D2A  30A0               	movlw	high (STR_18| (0+32768))
 14408  0D2B  00BB               	movwf	marquee@string+1
 14409  0D2C  0857               	movf	locked_Main@data,w
 14410  0D2D  0086               	movwf	6
 14411  0D2E  0858               	movf	locked_Main@data+1,w
 14412  0D2F  0087               	movwf	7
 14413  0D30  3141               	addfsr 1,1
 14414  0D31  3F40               	moviw [0]fsr1
 14415  0D32  00BC               	movwf	marquee@count
 14416  0D33  3F41               	moviw [1]fsr1
 14417  0D34  00BD               	movwf	marquee@count+1
 14418  0D35  3193  2364  318C   	fcall	_marquee
 14419                           
 14420                           ;locked_task.c: 137: locked_unlock_leds();
 14421  0D38  319A  220B  318C   	fcall	_locked_unlock_leds
 14422                           
 14423                           ;locked_task.c: 138: break;
 14424  0D3B  2D66               	goto	l7098
 14425  0D3C                     l1179:	
 14426                           ;locked_task.c: 139: case LOCKED_LOCKED_STATE:
 14427                           
 14428                           
 14429                           ;locked_task.c: 140: badge_locked = 1;
 14430  0D3C  01FC               	clrf	_badge_locked
 14431  0D3D  0AFC               	incf	_badge_locked,f
 14432                           
 14433                           ;locked_task.c: 141: marquee("LOCK", data->delayTickCount);
 14434  0D3E  305B               	movlw	low (STR_19| (0+32768))
 14435  0D3F  00BA               	movwf	marquee@string
 14436  0D40  30A0               	movlw	high (STR_19| (0+32768))
 14437  0D41  00BB               	movwf	marquee@string+1
 14438  0D42  0857               	movf	locked_Main@data,w
 14439  0D43  0086               	movwf	6
 14440  0D44  0858               	movf	locked_Main@data+1,w
 14441  0D45  0087               	movwf	7
 14442  0D46  3141               	addfsr 1,1
 14443  0D47  3F40               	moviw [0]fsr1
 14444  0D48  00BC               	movwf	marquee@count
 14445  0D49  3F41               	moviw [1]fsr1
 14446  0D4A  00BD               	movwf	marquee@count+1
 14447  0D4B  3193  2364  318C   	fcall	_marquee
 14448                           
 14449                           ;locked_task.c: 143: locked_lock_leds();
 14450  0D4E  319A  22C5  318C   	fcall	_locked_lock_leds
 14451                           
 14452                           ;locked_task.c: 145: }
 14453                           
 14454                           ;locked_task.c: 144: break;
 14455  0D51  2D66               	goto	l7098
 14456  0D52                     l7096:	
 14457  0D52  0020               	movlb	0	; select bank0
 14458  0D53  0857               	movf	locked_Main@data,w
 14459  0D54  0086               	movwf	6
 14460  0D55  0858               	movf	locked_Main@data+1,w
 14461  0D56  0087               	movwf	7
 14462  0D57  314D               	addfsr 1,13
 14463  0D58  0801               	movf	1,w
 14464                           
 14465                           ; Switch size 1, requested type "space"
 14466                           ; Number of cases is 4, Range of values is 0 to 3
 14467                           ; switch strategies available:
 14468                           ; Name         Instructions Cycles
 14469                           ; simple_byte           13     7 (average)
 14470                           ; direct_byte           14     6 (fixed)
 14471                           ; jumptable            260     6 (fixed)
 14472                           ;	Chosen strategy is simple_byte
 14473  0D59  3A00               	xorlw	0	; case 0
 14474  0D5A  1903               	skipnz
 14475  0D5B  2D3C               	goto	l1179
 14476  0D5C  3A01               	xorlw	1	; case 1
 14477  0D5D  1903               	skipnz
 14478  0D5E  2CCF               	goto	l7070
 14479  0D5F  3A03               	xorlw	3	; case 2
 14480  0D60  1903               	skipnz
 14481  0D61  2D27               	goto	l7084
 14482  0D62  3A01               	xorlw	1	; case 3
 14483  0D63  1903               	skipnz
 14484  0D64  2C7B               	goto	l7054
 14485  0D65  2D66               	goto	l7098
 14486  0D66                     l7098:	
 14487                           
 14488                           ;locked_task.c: 146: nullifyBadge_userLedsSet(data->badge, locked_leds);
 14489  0D66  0021               	movlb	1	; select bank1
 14490  0D67  0821               	movf	(_locked_leds+1)^(0+128),w
 14491  0D68  0020               	movlb	0	; select bank0
 14492  0D69  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 14493  0D6A  0021               	movlb	1	; select bank1
 14494  0D6B  0820               	movf	_locked_leds^(0+128),w
 14495  0D6C  0020               	movlb	0	; select bank0
 14496  0D6D  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 14497  0D6E  0857               	movf	locked_Main@data,w
 14498  0D6F  0086               	movwf	6
 14499  0D70  0858               	movf	locked_Main@data+1,w
 14500  0D71  0087               	movwf	7
 14501  0D72  0801               	movf	1,w
 14502  0D73  3199  2160  318C   	fcall	_nullifyBadge_userLedsSet
 14503                           
 14504                           ;locked_task.c: 149: buttonPressed = nullifyBadge_buttonsGet();
 14505  0D76  319C  24FF  318C   	fcall	_nullifyBadge_buttonsGet
 14506  0D79  0020               	movlb	0	; select bank0
 14507  0D7A  00D4               	movwf	??_locked_Main
 14508  0D7B  0854               	movf	??_locked_Main,w
 14509  0D7C  00D6               	movwf	locked_Main@buttonPressed
 14510                           
 14511                           ;locked_task.c: 150: switch (buttonPressed) {
 14512  0D7D  2E0B               	goto	l7128
 14513  0D7E                     l7102:	
 14514                           ;locked_task.c: 151: case 4:
 14515                           
 14516                           
 14517                           ;locked_task.c: 152: locked_clear(data);
 14518  0D7E  0858               	movf	locked_Main@data+1,w
 14519  0D7F  00BA               	movwf	locked_clear@data+1
 14520  0D80  0857               	movf	locked_Main@data,w
 14521  0D81  00B9               	movwf	locked_clear@data
 14522  0D82  319F  2734         	fcall	_locked_clear
 14523                           
 14524                           ;locked_task.c: 153: currentTask = MENU_TASK;
 14525  0D84  0021               	movlb	1	; select bank1
 14526  0D85  01B2               	clrf	_currentTask^(0+128)
 14527  0D86  01B3               	clrf	(_currentTask+1)^(0+128)
 14528                           
 14529                           ;locked_task.c: 154: break;
 14530  0D87  0008               	return
 14531  0D88                     l7106:	
 14532                           ;locked_task.c: 155: case 8:
 14533                           
 14534                           
 14535                           ;locked_task.c: 156: if (data->holdCountY == 0){
 14536  0D88  0020               	movlb	0	; select bank0
 14537  0D89  0857               	movf	locked_Main@data,w
 14538  0D8A  0086               	movwf	6
 14539  0D8B  0858               	movf	locked_Main@data+1,w
 14540  0D8C  0087               	movwf	7
 14541  0D8D  3149               	addfsr 1,9
 14542  0D8E  0016               	moviw fsr1++
 14543  0D8F  0401               	iorwf	1,w
 14544  0D90  1D03               	btfss	3,2
 14545  0D91  2DB5               	goto	l7116
 14546                           
 14547                           ;locked_task.c: 159: data->delayTickCount = 0;
 14548  0D92  0857               	movf	locked_Main@data,w
 14549  0D93  0086               	movwf	6
 14550  0D94  0858               	movf	locked_Main@data+1,w
 14551  0D95  0087               	movwf	7
 14552  0D96  3141               	addfsr 1,1
 14553  0D97  3000               	movlw	0
 14554  0D98  3FC0               	movwi [0]fsr1
 14555  0D99  3FC1               	movwi [1]fsr1
 14556                           
 14557                           ;locked_task.c: 160: if (badge_locked){
 14558  0D9A  087C               	movf	_badge_locked,w
 14559  0D9B  1903               	btfsc	3,2
 14560  0D9C  2DA9               	goto	l7114
 14561                           
 14562                           ;locked_task.c: 162: data->state = LOCKED_UNLOCKING_STATE;
 14563  0D9D  0857               	movf	locked_Main@data,w
 14564  0D9E  3E0D               	addlw	13
 14565  0D9F  00D4               	movwf	??_locked_Main
 14566  0DA0  3000               	movlw	0
 14567  0DA1  3D58               	addwfc	locked_Main@data+1,w
 14568  0DA2  00D5               	movwf	??_locked_Main+1
 14569  0DA3  0854               	movf	??_locked_Main,w
 14570  0DA4  0086               	movwf	6
 14571  0DA5  0855               	movf	??_locked_Main+1,w
 14572  0DA6  0087               	movwf	7
 14573  0DA7  3003               	movlw	3
 14574  0DA8  2DB4               	goto	L3
 14575  0DA9                     l7114:	
 14576                           ;locked_task.c: 163: }
 14577                           
 14578                           
 14579                           ;locked_task.c: 164: else {
 14580                           ;locked_task.c: 166: data->state = LOCKED_LOCKING_STATE;
 14581  0DA9  0857               	movf	locked_Main@data,w
 14582  0DAA  3E0D               	addlw	13
 14583  0DAB  00D4               	movwf	??_locked_Main
 14584  0DAC  3000               	movlw	0
 14585  0DAD  3D58               	addwfc	locked_Main@data+1,w
 14586  0DAE  00D5               	movwf	??_locked_Main+1
 14587  0DAF  0854               	movf	??_locked_Main,w
 14588  0DB0  0086               	movwf	6
 14589  0DB1  0855               	movf	??_locked_Main+1,w
 14590  0DB2  0087               	movwf	7
 14591  0DB3  3001               	movlw	1
 14592  0DB4                     L3:	
 14593  0DB4  0081               	movwf	1
 14594  0DB5                     l7116:	
 14595                           
 14596                           ;locked_task.c: 167: }
 14597                           ;locked_task.c: 168: }
 14598                           ;locked_task.c: 169: data->holdCountA = 0;
 14599  0DB5  0857               	movf	locked_Main@data,w
 14600  0DB6  0086               	movwf	6
 14601  0DB7  0858               	movf	locked_Main@data+1,w
 14602  0DB8  0087               	movwf	7
 14603  0DB9  3143               	addfsr 1,3
 14604  0DBA  3000               	movlw	0
 14605  0DBB  3FC0               	movwi [0]fsr1
 14606  0DBC  3FC1               	movwi [1]fsr1
 14607                           
 14608                           ;locked_task.c: 170: data->holdCountB = 0;
 14609  0DBD  0857               	movf	locked_Main@data,w
 14610  0DBE  0086               	movwf	6
 14611  0DBF  0858               	movf	locked_Main@data+1,w
 14612  0DC0  0087               	movwf	7
 14613  0DC1  3145               	addfsr 1,5
 14614  0DC2  3000               	movlw	0
 14615  0DC3  3FC0               	movwi [0]fsr1
 14616  0DC4  3FC1               	movwi [1]fsr1
 14617                           
 14618                           ;locked_task.c: 171: data->holdCountX = 0;
 14619  0DC5  0857               	movf	locked_Main@data,w
 14620  0DC6  0086               	movwf	6
 14621  0DC7  0858               	movf	locked_Main@data+1,w
 14622  0DC8  0087               	movwf	7
 14623  0DC9  3147               	addfsr 1,7
 14624  0DCA  3000               	movlw	0
 14625  0DCB  3FC0               	movwi [0]fsr1
 14626  0DCC  3FC1               	movwi [1]fsr1
 14627                           
 14628                           ;locked_task.c: 172: data->holdCountY += 1;
 14629  0DCD  0857               	movf	locked_Main@data,w
 14630  0DCE  0086               	movwf	6
 14631  0DCF  0858               	movf	locked_Main@data+1,w
 14632  0DD0  0087               	movwf	7
 14633  0DD1  3149               	addfsr 1,9
 14634  0DD2  3001               	movlw	1
 14635  0DD3  0781               	addwf	1,f
 14636  0DD4  3141               	addfsr 1,1
 14637  0DD5  1803               	skipnc
 14638  0DD6  0A81               	incf	1,f
 14639                           
 14640                           ;locked_task.c: 173: data->noholdCount = 0;
 14641  0DD7  0857               	movf	locked_Main@data,w
 14642  0DD8  0086               	movwf	6
 14643  0DD9  0858               	movf	locked_Main@data+1,w
 14644  0DDA  0087               	movwf	7
 14645  0DDB  314B               	addfsr 1,11
 14646  0DDC  3000               	movlw	0
 14647  0DDD  3FC0               	movwi [0]fsr1
 14648  0DDE  3FC1               	movwi [1]fsr1
 14649                           
 14650                           ;locked_task.c: 174: break;
 14651  0DDF  0008               	return
 14652  0DE0                     l7124:	
 14653                           ;locked_task.c: 175: default:
 14654                           
 14655                           
 14656                           ;locked_task.c: 176: data->holdCountA = 0;
 14657  0DE0  0857               	movf	locked_Main@data,w
 14658  0DE1  0086               	movwf	6
 14659  0DE2  0858               	movf	locked_Main@data+1,w
 14660  0DE3  0087               	movwf	7
 14661  0DE4  3143               	addfsr 1,3
 14662  0DE5  3000               	movlw	0
 14663  0DE6  3FC0               	movwi [0]fsr1
 14664  0DE7  3FC1               	movwi [1]fsr1
 14665                           
 14666                           ;locked_task.c: 177: data->holdCountB = 0;
 14667  0DE8  0857               	movf	locked_Main@data,w
 14668  0DE9  0086               	movwf	6
 14669  0DEA  0858               	movf	locked_Main@data+1,w
 14670  0DEB  0087               	movwf	7
 14671  0DEC  3145               	addfsr 1,5
 14672  0DED  3000               	movlw	0
 14673  0DEE  3FC0               	movwi [0]fsr1
 14674  0DEF  3FC1               	movwi [1]fsr1
 14675                           
 14676                           ;locked_task.c: 178: data->holdCountX = 0;
 14677  0DF0  0857               	movf	locked_Main@data,w
 14678  0DF1  0086               	movwf	6
 14679  0DF2  0858               	movf	locked_Main@data+1,w
 14680  0DF3  0087               	movwf	7
 14681  0DF4  3147               	addfsr 1,7
 14682  0DF5  3000               	movlw	0
 14683  0DF6  3FC0               	movwi [0]fsr1
 14684  0DF7  3FC1               	movwi [1]fsr1
 14685                           
 14686                           ;locked_task.c: 179: data->holdCountY = 0;
 14687  0DF8  0857               	movf	locked_Main@data,w
 14688  0DF9  0086               	movwf	6
 14689  0DFA  0858               	movf	locked_Main@data+1,w
 14690  0DFB  0087               	movwf	7
 14691  0DFC  3149               	addfsr 1,9
 14692  0DFD  3000               	movlw	0
 14693  0DFE  3FC0               	movwi [0]fsr1
 14694  0DFF  3FC1               	movwi [1]fsr1
 14695                           
 14696                           ;locked_task.c: 180: data->noholdCount += 1;
 14697  0E00  0857               	movf	locked_Main@data,w
 14698  0E01  0086               	movwf	6
 14699  0E02  0858               	movf	locked_Main@data+1,w
 14700  0E03  0087               	movwf	7
 14701  0E04  314B               	addfsr 1,11
 14702  0E05  3001               	movlw	1
 14703  0E06  0781               	addwf	1,f
 14704  0E07  3141               	addfsr 1,1
 14705  0E08  1803               	skipnc
 14706  0E09  0A81               	incf	1,f
 14707                           
 14708                           ;locked_task.c: 181: }
 14709  0E0A  0008               	return
 14710  0E0B                     l7128:	
 14711  0E0B  0856               	movf	locked_Main@buttonPressed,w
 14712                           
 14713                           ; Switch size 1, requested type "space"
 14714                           ; Number of cases is 2, Range of values is 4 to 8
 14715                           ; switch strategies available:
 14716                           ; Name         Instructions Cycles
 14717                           ; simple_byte            7     4 (average)
 14718                           ; direct_byte           19     9 (fixed)
 14719                           ; jumptable            263     9 (fixed)
 14720                           ;	Chosen strategy is simple_byte
 14721  0E0C  3A04               	xorlw	4	; case 4
 14722  0E0D  1903               	skipnz
 14723  0E0E  2D7E               	goto	l7102
 14724  0E0F  3A0C               	xorlw	12	; case 8
 14725  0E10  1903               	skipnz
 14726  0E11  2D88               	goto	l7106
 14727  0E12  2DE0               	goto	l7124
 14728  0E13  0008               	return
 14729  0E14                     __end_of_locked_Main:	
 14730                           
 14731                           	psect	text15
 14732  0E14                     __ptext15:	
 14733 ;; *************** function _menu_Main *****************
 14734 ;; Defined at:
 14735 ;;		line 54 in file "menu_task.c"
 14736 ;; Parameters:    Size  Location     Type
 14737 ;;  taskData        2   50[BANK0 ] PTR void 
 14738 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14739 ;;		 -> flashy_TaskData(26), NULL(0), 
 14740 ;; Auto vars:     Size  Location     Type
 14741 ;;  data            2   55[BANK0 ] PTR struct t_menu_taskDa
 14742 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 14743 ;;		 -> flashy_TaskData(26), NULL(0), 
 14744 ;;  buttonPresse    1   54[BANK0 ] unsigned char 
 14745 ;; Return value:  Size  Location     Type
 14746 ;;                  1    wreg      void 
 14747 ;; Registers used:
 14748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14749 ;; Tracked objects:
 14750 ;;		On entry : 0/0
 14751 ;;		On exit  : 0/0
 14752 ;;		Unchanged: 0/0
 14753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14755 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14757 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14758 ;;Total ram usage:        7 bytes
 14759 ;; Hardware stack levels used:    1
 14760 ;; Hardware stack levels required when called:   12
 14761 ;; This function calls:
 14762 ;;		_menu_clear
 14763 ;;		_menu_display_option
 14764 ;;		_menu_run_option
 14765 ;;		_nullifyBadge_buttonsGet
 14766 ;; This function is called by:
 14767 ;;		_main
 14768 ;;		_scheduler_TaskRun
 14769 ;; This function uses a non-reentrant model
 14770 ;;
 14771                           
 14772                           
 14773                           ;psect for function _menu_Main
 14774  0E14                     _menu_Main:	
 14775                           
 14776                           ;menu_task.c: 55: struct t_menu_taskData *data = (struct t_menu_taskData *) taskData;
 14777                           
 14778                           ;incstack = 0
 14779                           ; Regs used in _menu_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14780  0E14  0020               	movlb	0	; select bank0
 14781  0E15  0853               	movf	menu_Main@taskData+1,w
 14782  0E16  00D8               	movwf	menu_Main@data+1
 14783  0E17  0852               	movf	menu_Main@taskData,w
 14784  0E18  00D7               	movwf	menu_Main@data
 14785                           
 14786                           ;menu_task.c: 56: u8 buttonPressed;
 14787                           ;menu_task.c: 58: if ( currentTask != MENU_TASK ){
 14788  0E19  0021               	movlb	1	; select bank1
 14789  0E1A  0832               	movf	_currentTask^(0+128),w
 14790  0E1B  0433               	iorwf	(_currentTask+1)^(0+128),w
 14791  0E1C  1903               	btfsc	3,2
 14792  0E1D  2E8D               	goto	l6640
 14793                           
 14794                           ;menu_task.c: 60: buttonPressed = nullifyBadge_buttonsGet();
 14795  0E1E  319C  24FF  318E   	fcall	_nullifyBadge_buttonsGet
 14796  0E21  0020               	movlb	0	; select bank0
 14797  0E22  00D4               	movwf	??_menu_Main
 14798  0E23  0854               	movf	??_menu_Main,w
 14799  0E24  00D6               	movwf	menu_Main@buttonPressed
 14800                           
 14801                           ;menu_task.c: 61: switch (buttonPressed) {
 14802  0E25  2E87               	goto	l6638
 14803  0E26                     l6620:	
 14804                           ;menu_task.c: 62: case 1 | 2 | 8:
 14805                           
 14806                           
 14807                           ;menu_task.c: 63: currentTask = MENU_TASK;
 14808  0E26  0021               	movlb	1	; select bank1
 14809  0E27  01B2               	clrf	_currentTask^(0+128)
 14810  0E28  01B3               	clrf	(_currentTask+1)^(0+128)
 14811                           
 14812                           ;menu_task.c: 64: menu_clear(data);
 14813  0E29  0020               	movlb	0	; select bank0
 14814  0E2A  0858               	movf	menu_Main@data+1,w
 14815  0E2B  00BA               	movwf	menu_clear@data+1
 14816  0E2C  0857               	movf	menu_Main@data,w
 14817  0E2D  00B9               	movwf	menu_clear@data
 14818  0E2E  319F  27B9  318E   	fcall	_menu_clear
 14819                           
 14820                           ;menu_task.c: 67: data->holdCountA = 1;
 14821  0E31  0020               	movlb	0	; select bank0
 14822  0E32  0857               	movf	menu_Main@data,w
 14823  0E33  0086               	movwf	6
 14824  0E34  0858               	movf	menu_Main@data+1,w
 14825  0E35  0087               	movwf	7
 14826  0E36  3144               	addfsr 1,4
 14827  0E37  3001               	movlw	1
 14828  0E38  3FC0               	movwi [0]fsr1
 14829  0E39  3000               	movlw	0
 14830  0E3A  3FC1               	movwi [1]fsr1
 14831                           
 14832                           ;menu_task.c: 68: data->holdCountB = 1;
 14833  0E3B  0857               	movf	menu_Main@data,w
 14834  0E3C  0086               	movwf	6
 14835  0E3D  0858               	movf	menu_Main@data+1,w
 14836  0E3E  0087               	movwf	7
 14837  0E3F  3146               	addfsr 1,6
 14838  0E40  3001               	movlw	1
 14839  0E41  3FC0               	movwi [0]fsr1
 14840  0E42  3000               	movlw	0
 14841  0E43  3FC1               	movwi [1]fsr1
 14842                           
 14843                           ;menu_task.c: 69: data->holdCountX = 1;
 14844  0E44  0857               	movf	menu_Main@data,w
 14845  0E45  0086               	movwf	6
 14846  0E46  0858               	movf	menu_Main@data+1,w
 14847  0E47  0087               	movwf	7
 14848  0E48  3148               	addfsr 1,8
 14849  0E49  3001               	movlw	1
 14850  0E4A  3FC0               	movwi [0]fsr1
 14851  0E4B  3000               	movlw	0
 14852  0E4C  3FC1               	movwi [1]fsr1
 14853                           
 14854                           ;menu_task.c: 70: data->holdCountY = 1;
 14855  0E4D  0857               	movf	menu_Main@data,w
 14856  0E4E  0086               	movwf	6
 14857  0E4F  0858               	movf	menu_Main@data+1,w
 14858  0E50  0087               	movwf	7
 14859  0E51  314A               	addfsr 1,10
 14860  0E52  3001               	movlw	1
 14861  0E53  3FC0               	movwi [0]fsr1
 14862  0E54  3000               	movlw	0
 14863  0E55  3FC1               	movwi [1]fsr1
 14864                           
 14865                           ;menu_task.c: 72: menu_option_idx = 0;
 14866  0E56  0021               	movlb	1	; select bank1
 14867  0E57  01B0               	clrf	_menu_option_idx^(0+128)
 14868  0E58  01B1               	clrf	(_menu_option_idx+1)^(0+128)
 14869                           
 14870                           ;menu_task.c: 73: menu_display_option(data);
 14871  0E59  0020               	movlb	0	; select bank0
 14872  0E5A  0858               	movf	menu_Main@data+1,w
 14873  0E5B  00CD               	movwf	menu_display_option@data+1
 14874  0E5C  0857               	movf	menu_Main@data,w
 14875  0E5D  00CC               	movwf	menu_display_option@data
 14876  0E5E  3192  223D         	fcall	_menu_display_option
 14877                           
 14878                           ;menu_task.c: 74: break;
 14879  0E60  0008               	return
 14880  0E61                     l6634:	
 14881                           ;menu_task.c: 75: default:
 14882                           
 14883                           
 14884                           ;menu_task.c: 77: data->holdCountA = 1;
 14885  0E61  0020               	movlb	0	; select bank0
 14886  0E62  0857               	movf	menu_Main@data,w
 14887  0E63  0086               	movwf	6
 14888  0E64  0858               	movf	menu_Main@data+1,w
 14889  0E65  0087               	movwf	7
 14890  0E66  3144               	addfsr 1,4
 14891  0E67  3001               	movlw	1
 14892  0E68  3FC0               	movwi [0]fsr1
 14893  0E69  3000               	movlw	0
 14894  0E6A  3FC1               	movwi [1]fsr1
 14895                           
 14896                           ;menu_task.c: 78: data->holdCountB = 1;
 14897  0E6B  0857               	movf	menu_Main@data,w
 14898  0E6C  0086               	movwf	6
 14899  0E6D  0858               	movf	menu_Main@data+1,w
 14900  0E6E  0087               	movwf	7
 14901  0E6F  3146               	addfsr 1,6
 14902  0E70  3001               	movlw	1
 14903  0E71  3FC0               	movwi [0]fsr1
 14904  0E72  3000               	movlw	0
 14905  0E73  3FC1               	movwi [1]fsr1
 14906                           
 14907                           ;menu_task.c: 79: data->holdCountX = 1;
 14908  0E74  0857               	movf	menu_Main@data,w
 14909  0E75  0086               	movwf	6
 14910  0E76  0858               	movf	menu_Main@data+1,w
 14911  0E77  0087               	movwf	7
 14912  0E78  3148               	addfsr 1,8
 14913  0E79  3001               	movlw	1
 14914  0E7A  3FC0               	movwi [0]fsr1
 14915  0E7B  3000               	movlw	0
 14916  0E7C  3FC1               	movwi [1]fsr1
 14917                           
 14918                           ;menu_task.c: 80: data->holdCountY = 1;
 14919  0E7D  0857               	movf	menu_Main@data,w
 14920  0E7E  0086               	movwf	6
 14921  0E7F  0858               	movf	menu_Main@data+1,w
 14922  0E80  0087               	movwf	7
 14923  0E81  314A               	addfsr 1,10
 14924  0E82  3001               	movlw	1
 14925  0E83  3FC0               	movwi [0]fsr1
 14926  0E84  3000               	movlw	0
 14927  0E85  3FC1               	movwi [1]fsr1
 14928                           
 14929                           ;menu_task.c: 82: }
 14930                           
 14931                           ;menu_task.c: 81: break;
 14932  0E86  0008               	return
 14933  0E87                     l6638:	
 14934  0E87  0856               	movf	menu_Main@buttonPressed,w
 14935                           
 14936                           ; Switch size 1, requested type "space"
 14937                           ; Number of cases is 1, Range of values is 11 to 11
 14938                           ; switch strategies available:
 14939                           ; Name         Instructions Cycles
 14940                           ; simple_byte            4     3 (average)
 14941                           ; direct_byte           11     9 (fixed)
 14942                           ; jumptable            263     9 (fixed)
 14943                           ;	Chosen strategy is simple_byte
 14944  0E88  3A0B               	xorlw	11	; case 11
 14945  0E89  1903               	skipnz
 14946  0E8A  2E26               	goto	l6620
 14947  0E8B  2E61               	goto	l6634
 14948                           
 14949                           ;menu_task.c: 83: return;
 14950  0E8C  0008               	return
 14951  0E8D                     l6640:	
 14952                           
 14953                           ;menu_task.c: 84: }
 14954                           ;menu_task.c: 86: buttonPressed = nullifyBadge_buttonsGet();
 14955  0E8D  319C  24FF  318E   	fcall	_nullifyBadge_buttonsGet
 14956  0E90  0020               	movlb	0	; select bank0
 14957  0E91  00D4               	movwf	??_menu_Main
 14958  0E92  0854               	movf	??_menu_Main,w
 14959  0E93  00D6               	movwf	menu_Main@buttonPressed
 14960                           
 14961                           ;menu_task.c: 87: switch (buttonPressed) {
 14962  0E94  2FEE               	goto	l6724
 14963  0E95                     l6642:	
 14964                           ;menu_task.c: 88: case 1:
 14965                           
 14966                           
 14967                           ;menu_task.c: 90: if (data->holdCountA == 0){
 14968  0E95  0857               	movf	menu_Main@data,w
 14969  0E96  0086               	movwf	6
 14970  0E97  0858               	movf	menu_Main@data+1,w
 14971  0E98  0087               	movwf	7
 14972  0E99  3144               	addfsr 1,4
 14973  0E9A  0016               	moviw fsr1++
 14974  0E9B  0401               	iorwf	1,w
 14975  0E9C  1D03               	btfss	3,2
 14976  0E9D  2EAE               	goto	l6650
 14977                           
 14978                           ;menu_task.c: 92: if (menu_option_idx == 0){
 14979  0E9E  0021               	movlb	1	; select bank1
 14980  0E9F  0830               	movf	_menu_option_idx^(0+128),w
 14981  0EA0  0431               	iorwf	(_menu_option_idx+1)^(0+128),w
 14982  0EA1  1D03               	btfss	3,2
 14983  0EA2  2EAA               	goto	l6648
 14984                           
 14985                           ;menu_task.c: 93: menu_option_idx = menu_option_size - 1;
 14986  0EA3  082E               	movf	_menu_option_size^(0+128),w
 14987  0EA4  3EFF               	addlw	255
 14988  0EA5  00B0               	movwf	_menu_option_idx^(0+128)
 14989  0EA6  30FF               	movlw	255
 14990  0EA7  3D2F               	addwfc	(_menu_option_size+1)^(0+128),w
 14991  0EA8  00B1               	movwf	(_menu_option_idx+1)^(0+128)
 14992                           
 14993                           ;menu_task.c: 94: }
 14994  0EA9  2EAE               	goto	l6650
 14995  0EAA                     l6648:	
 14996                           
 14997                           ;menu_task.c: 95: else {
 14998                           ;menu_task.c: 96: menu_option_idx -= 1;
 14999  0EAA  3001               	movlw	1
 15000  0EAB  02B0               	subwf	_menu_option_idx^(0+128),f
 15001  0EAC  3000               	movlw	0
 15002  0EAD  3BB1               	subwfb	(_menu_option_idx+1)^(0+128),f
 15003  0EAE                     l6650:	
 15004                           
 15005                           ;menu_task.c: 97: }
 15006                           ;menu_task.c: 98: }
 15007                           ;menu_task.c: 99: menu_display_option(data);
 15008  0EAE  0020               	movlb	0	; select bank0
 15009  0EAF  0858               	movf	menu_Main@data+1,w
 15010  0EB0  00CD               	movwf	menu_display_option@data+1
 15011  0EB1  0857               	movf	menu_Main@data,w
 15012  0EB2  00CC               	movwf	menu_display_option@data
 15013  0EB3  3192  223D  318E   	fcall	_menu_display_option
 15014                           
 15015                           ;menu_task.c: 100: data->holdCountA += 1;
 15016  0EB6  0020               	movlb	0	; select bank0
 15017  0EB7  0857               	movf	menu_Main@data,w
 15018  0EB8  0086               	movwf	6
 15019  0EB9  0858               	movf	menu_Main@data+1,w
 15020  0EBA  0087               	movwf	7
 15021  0EBB  3144               	addfsr 1,4
 15022  0EBC  3001               	movlw	1
 15023  0EBD  0781               	addwf	1,f
 15024  0EBE  3141               	addfsr 1,1
 15025  0EBF  1803               	skipnc
 15026  0EC0  0A81               	incf	1,f
 15027                           
 15028                           ;menu_task.c: 101: data->holdCountB = 0;
 15029  0EC1  0857               	movf	menu_Main@data,w
 15030  0EC2  0086               	movwf	6
 15031  0EC3  0858               	movf	menu_Main@data+1,w
 15032  0EC4  0087               	movwf	7
 15033  0EC5  3146               	addfsr 1,6
 15034  0EC6  3000               	movlw	0
 15035  0EC7  3FC0               	movwi [0]fsr1
 15036  0EC8  3FC1               	movwi [1]fsr1
 15037                           
 15038                           ;menu_task.c: 102: data->holdCountX = 0;
 15039  0EC9  0857               	movf	menu_Main@data,w
 15040  0ECA  0086               	movwf	6
 15041  0ECB  0858               	movf	menu_Main@data+1,w
 15042  0ECC  0087               	movwf	7
 15043  0ECD  3148               	addfsr 1,8
 15044  0ECE  3000               	movlw	0
 15045  0ECF  3FC0               	movwi [0]fsr1
 15046  0ED0  3FC1               	movwi [1]fsr1
 15047                           
 15048                           ;menu_task.c: 103: data->holdCountY = 0;
 15049  0ED1  0857               	movf	menu_Main@data,w
 15050  0ED2  0086               	movwf	6
 15051  0ED3  0858               	movf	menu_Main@data+1,w
 15052  0ED4  0087               	movwf	7
 15053  0ED5  314A               	addfsr 1,10
 15054  0ED6  3000               	movlw	0
 15055  0ED7  3FC0               	movwi [0]fsr1
 15056  0ED8  3FC1               	movwi [1]fsr1
 15057                           
 15058                           ;menu_task.c: 104: data->noholdCount = 0;
 15059  0ED9  0857               	movf	menu_Main@data,w
 15060  0EDA  0086               	movwf	6
 15061  0EDB  0858               	movf	menu_Main@data+1,w
 15062  0EDC  0087               	movwf	7
 15063  0EDD  314C               	addfsr 1,12
 15064  0EDE  3000               	movlw	0
 15065  0EDF  3FC0               	movwi [0]fsr1
 15066  0EE0  3FC1               	movwi [1]fsr1
 15067                           
 15068                           ;menu_task.c: 105: break;
 15069  0EE1  0008               	return
 15070  0EE2                     l6662:	
 15071                           ;menu_task.c: 106: case 2:
 15072                           
 15073                           
 15074                           ;menu_task.c: 108: if (data->holdCountB == 0){
 15075  0EE2  0857               	movf	menu_Main@data,w
 15076  0EE3  0086               	movwf	6
 15077  0EE4  0858               	movf	menu_Main@data+1,w
 15078  0EE5  0087               	movwf	7
 15079  0EE6  3146               	addfsr 1,6
 15080  0EE7  0016               	moviw fsr1++
 15081  0EE8  0401               	iorwf	1,w
 15082  0EE9  1D03               	btfss	3,2
 15083  0EEA  2F0A               	goto	l6670
 15084                           
 15085                           ;menu_task.c: 110: if (menu_option_idx == menu_option_size - 1){
 15086  0EEB  0021               	movlb	1	; select bank1
 15087  0EEC  082E               	movf	_menu_option_size^(0+128),w
 15088  0EED  3EFF               	addlw	255
 15089  0EEE  0020               	movlb	0	; select bank0
 15090  0EEF  00D4               	movwf	??_menu_Main
 15091  0EF0  30FF               	movlw	255
 15092  0EF1  0021               	movlb	1	; select bank1
 15093  0EF2  3D2F               	addwfc	(_menu_option_size+1)^(0+128),w
 15094  0EF3  0020               	movlb	0	; select bank0
 15095  0EF4  00D5               	movwf	??_menu_Main+1
 15096  0EF5  0021               	movlb	1	; select bank1
 15097  0EF6  0831               	movf	(_menu_option_idx+1)^(0+128),w
 15098  0EF7  0020               	movlb	0	; select bank0
 15099  0EF8  0655               	xorwf	??_menu_Main+1,w
 15100  0EF9  1D03               	skipz
 15101  0EFA  2EFF               	goto	u3735
 15102  0EFB  0021               	movlb	1	; select bank1
 15103  0EFC  0830               	movf	_menu_option_idx^(0+128),w
 15104  0EFD  0020               	movlb	0	; select bank0
 15105  0EFE  0654               	xorwf	??_menu_Main,w
 15106  0EFF                     u3735:	
 15107  0EFF  1D03               	skipz
 15108  0F00  2F05               	goto	l6668
 15109                           
 15110                           ;menu_task.c: 111: menu_option_idx = 0;
 15111  0F01  0021               	movlb	1	; select bank1
 15112  0F02  01B0               	clrf	_menu_option_idx^(0+128)
 15113  0F03  01B1               	clrf	(_menu_option_idx+1)^(0+128)
 15114                           
 15115                           ;menu_task.c: 112: }
 15116  0F04  2F0A               	goto	l6670
 15117  0F05                     l6668:	
 15118                           
 15119                           ;menu_task.c: 113: else {
 15120                           ;menu_task.c: 114: menu_option_idx += 1;
 15121  0F05  3001               	movlw	1
 15122  0F06  0021               	movlb	1	; select bank1
 15123  0F07  07B0               	addwf	_menu_option_idx^(0+128),f
 15124  0F08  3000               	movlw	0
 15125  0F09  3DB1               	addwfc	(_menu_option_idx+1)^(0+128),f
 15126  0F0A                     l6670:	
 15127                           
 15128                           ;menu_task.c: 115: }
 15129                           ;menu_task.c: 116: }
 15130                           ;menu_task.c: 117: menu_display_option(data);
 15131  0F0A  0020               	movlb	0	; select bank0
 15132  0F0B  0858               	movf	menu_Main@data+1,w
 15133  0F0C  00CD               	movwf	menu_display_option@data+1
 15134  0F0D  0857               	movf	menu_Main@data,w
 15135  0F0E  00CC               	movwf	menu_display_option@data
 15136  0F0F  3192  223D  318E   	fcall	_menu_display_option
 15137                           
 15138                           ;menu_task.c: 118: data->holdCountA = 0;
 15139  0F12  0020               	movlb	0	; select bank0
 15140  0F13  0857               	movf	menu_Main@data,w
 15141  0F14  0086               	movwf	6
 15142  0F15  0858               	movf	menu_Main@data+1,w
 15143  0F16  0087               	movwf	7
 15144  0F17  3144               	addfsr 1,4
 15145  0F18  3000               	movlw	0
 15146  0F19  3FC0               	movwi [0]fsr1
 15147  0F1A  3FC1               	movwi [1]fsr1
 15148                           
 15149                           ;menu_task.c: 119: data->holdCountB += 1;
 15150  0F1B  0857               	movf	menu_Main@data,w
 15151  0F1C  0086               	movwf	6
 15152  0F1D  0858               	movf	menu_Main@data+1,w
 15153  0F1E  0087               	movwf	7
 15154  0F1F  3146               	addfsr 1,6
 15155  0F20  3001               	movlw	1
 15156  0F21  0781               	addwf	1,f
 15157  0F22  3141               	addfsr 1,1
 15158  0F23  1803               	skipnc
 15159  0F24  0A81               	incf	1,f
 15160                           
 15161                           ;menu_task.c: 120: data->holdCountX = 0;
 15162  0F25  0857               	movf	menu_Main@data,w
 15163  0F26  0086               	movwf	6
 15164  0F27  0858               	movf	menu_Main@data+1,w
 15165  0F28  0087               	movwf	7
 15166  0F29  3148               	addfsr 1,8
 15167  0F2A  3000               	movlw	0
 15168  0F2B  3FC0               	movwi [0]fsr1
 15169  0F2C  3FC1               	movwi [1]fsr1
 15170                           
 15171                           ;menu_task.c: 121: data->holdCountY = 0;
 15172  0F2D  0857               	movf	menu_Main@data,w
 15173  0F2E  0086               	movwf	6
 15174  0F2F  0858               	movf	menu_Main@data+1,w
 15175  0F30  0087               	movwf	7
 15176  0F31  314A               	addfsr 1,10
 15177  0F32  3000               	movlw	0
 15178  0F33  3FC0               	movwi [0]fsr1
 15179  0F34  3FC1               	movwi [1]fsr1
 15180                           
 15181                           ;menu_task.c: 122: data->noholdCount = 0;
 15182  0F35  0857               	movf	menu_Main@data,w
 15183  0F36  0086               	movwf	6
 15184  0F37  0858               	movf	menu_Main@data+1,w
 15185  0F38  0087               	movwf	7
 15186  0F39  314C               	addfsr 1,12
 15187  0F3A  3000               	movlw	0
 15188  0F3B  3FC0               	movwi [0]fsr1
 15189  0F3C  3FC1               	movwi [1]fsr1
 15190                           
 15191                           ;menu_task.c: 123: break;
 15192  0F3D  0008               	return
 15193  0F3E                     l6682:	
 15194                           ;menu_task.c: 124: case 4:
 15195                           
 15196                           
 15197                           ;menu_task.c: 125: if (data->holdCountX == 0){
 15198  0F3E  0857               	movf	menu_Main@data,w
 15199  0F3F  0086               	movwf	6
 15200  0F40  0858               	movf	menu_Main@data+1,w
 15201  0F41  0087               	movwf	7
 15202  0F42  3148               	addfsr 1,8
 15203  0F43  0016               	moviw fsr1++
 15204  0F44  0401               	iorwf	1,w
 15205  0F45  1D03               	btfss	3,2
 15206  0F46  2F53               	goto	l6688
 15207                           
 15208                           ;menu_task.c: 127: menu_clear(data);
 15209  0F47  0858               	movf	menu_Main@data+1,w
 15210  0F48  00BA               	movwf	menu_clear@data+1
 15211  0F49  0857               	movf	menu_Main@data,w
 15212  0F4A  00B9               	movwf	menu_clear@data
 15213  0F4B  319F  27B9  318E   	fcall	_menu_clear
 15214                           
 15215                           ;menu_task.c: 128: currentTask = FLASHY_TASK;
 15216  0F4E  3002               	movlw	2
 15217  0F4F  0021               	movlb	1	; select bank1
 15218  0F50  00B2               	movwf	_currentTask^(0+128)
 15219  0F51  3000               	movlw	0
 15220  0F52  00B3               	movwf	(_currentTask^(0+128)+1)
 15221  0F53                     l6688:	
 15222                           
 15223                           ;menu_task.c: 129: }
 15224                           ;menu_task.c: 130: data->holdCountA = 0;
 15225  0F53  0020               	movlb	0	; select bank0
 15226  0F54  0857               	movf	menu_Main@data,w
 15227  0F55  0086               	movwf	6
 15228  0F56  0858               	movf	menu_Main@data+1,w
 15229  0F57  0087               	movwf	7
 15230  0F58  3144               	addfsr 1,4
 15231  0F59  3000               	movlw	0
 15232  0F5A  3FC0               	movwi [0]fsr1
 15233  0F5B  3FC1               	movwi [1]fsr1
 15234                           
 15235                           ;menu_task.c: 131: data->holdCountB = 0;
 15236  0F5C  0857               	movf	menu_Main@data,w
 15237  0F5D  0086               	movwf	6
 15238  0F5E  0858               	movf	menu_Main@data+1,w
 15239  0F5F  0087               	movwf	7
 15240  0F60  3146               	addfsr 1,6
 15241  0F61  3000               	movlw	0
 15242  0F62  3FC0               	movwi [0]fsr1
 15243  0F63  3FC1               	movwi [1]fsr1
 15244                           
 15245                           ;menu_task.c: 132: data->holdCountX += 1;
 15246  0F64  0857               	movf	menu_Main@data,w
 15247  0F65  0086               	movwf	6
 15248  0F66  0858               	movf	menu_Main@data+1,w
 15249  0F67  0087               	movwf	7
 15250  0F68  3148               	addfsr 1,8
 15251  0F69  3001               	movlw	1
 15252  0F6A  0781               	addwf	1,f
 15253  0F6B  3141               	addfsr 1,1
 15254  0F6C  1803               	skipnc
 15255  0F6D  0A81               	incf	1,f
 15256                           
 15257                           ;menu_task.c: 133: data->holdCountY = 0;
 15258  0F6E  0857               	movf	menu_Main@data,w
 15259  0F6F  0086               	movwf	6
 15260  0F70  0858               	movf	menu_Main@data+1,w
 15261  0F71  0087               	movwf	7
 15262  0F72  314A               	addfsr 1,10
 15263  0F73  3000               	movlw	0
 15264  0F74  3FC0               	movwi [0]fsr1
 15265  0F75  3FC1               	movwi [1]fsr1
 15266                           
 15267                           ;menu_task.c: 134: data->noholdCount = 0;
 15268  0F76  0857               	movf	menu_Main@data,w
 15269  0F77  0086               	movwf	6
 15270  0F78  0858               	movf	menu_Main@data+1,w
 15271  0F79  0087               	movwf	7
 15272  0F7A  314C               	addfsr 1,12
 15273  0F7B  3000               	movlw	0
 15274  0F7C  3FC0               	movwi [0]fsr1
 15275  0F7D  3FC1               	movwi [1]fsr1
 15276                           
 15277                           ;menu_task.c: 135: break;
 15278  0F7E  0008               	return
 15279  0F7F                     l6698:	
 15280                           ;menu_task.c: 136: case 8:
 15281                           
 15282                           
 15283                           ;menu_task.c: 137: if (data->holdCountY == 0){
 15284  0F7F  0857               	movf	menu_Main@data,w
 15285  0F80  0086               	movwf	6
 15286  0F81  0858               	movf	menu_Main@data+1,w
 15287  0F82  0087               	movwf	7
 15288  0F83  314A               	addfsr 1,10
 15289  0F84  0016               	moviw fsr1++
 15290  0F85  0401               	iorwf	1,w
 15291  0F86  1D03               	btfss	3,2
 15292  0F87  2F8F               	goto	l6702
 15293                           
 15294                           ;menu_task.c: 138: menu_run_option(data);
 15295  0F88  0858               	movf	menu_Main@data+1,w
 15296  0F89  00BC               	movwf	menu_run_option@data+1
 15297  0F8A  0857               	movf	menu_Main@data,w
 15298  0F8B  00BB               	movwf	menu_run_option@data
 15299  0F8C  319E  2637  318E   	fcall	_menu_run_option
 15300  0F8F                     l6702:	
 15301                           
 15302                           ;menu_task.c: 139: }
 15303                           ;menu_task.c: 140: data->holdCountA = 0;
 15304  0F8F  0020               	movlb	0	; select bank0
 15305  0F90  0857               	movf	menu_Main@data,w
 15306  0F91  0086               	movwf	6
 15307  0F92  0858               	movf	menu_Main@data+1,w
 15308  0F93  0087               	movwf	7
 15309  0F94  3144               	addfsr 1,4
 15310  0F95  3000               	movlw	0
 15311  0F96  3FC0               	movwi [0]fsr1
 15312  0F97  3FC1               	movwi [1]fsr1
 15313                           
 15314                           ;menu_task.c: 141: data->holdCountB = 0;
 15315  0F98  0857               	movf	menu_Main@data,w
 15316  0F99  0086               	movwf	6
 15317  0F9A  0858               	movf	menu_Main@data+1,w
 15318  0F9B  0087               	movwf	7
 15319  0F9C  3146               	addfsr 1,6
 15320  0F9D  3000               	movlw	0
 15321  0F9E  3FC0               	movwi [0]fsr1
 15322  0F9F  3FC1               	movwi [1]fsr1
 15323                           
 15324                           ;menu_task.c: 142: data->holdCountX = 0;
 15325  0FA0  0857               	movf	menu_Main@data,w
 15326  0FA1  0086               	movwf	6
 15327  0FA2  0858               	movf	menu_Main@data+1,w
 15328  0FA3  0087               	movwf	7
 15329  0FA4  3148               	addfsr 1,8
 15330  0FA5  3000               	movlw	0
 15331  0FA6  3FC0               	movwi [0]fsr1
 15332  0FA7  3FC1               	movwi [1]fsr1
 15333                           
 15334                           ;menu_task.c: 143: data->holdCountY += 1;
 15335  0FA8  0857               	movf	menu_Main@data,w
 15336  0FA9  0086               	movwf	6
 15337  0FAA  0858               	movf	menu_Main@data+1,w
 15338  0FAB  0087               	movwf	7
 15339  0FAC  314A               	addfsr 1,10
 15340  0FAD  3001               	movlw	1
 15341  0FAE  0781               	addwf	1,f
 15342  0FAF  3141               	addfsr 1,1
 15343  0FB0  1803               	skipnc
 15344  0FB1  0A81               	incf	1,f
 15345                           
 15346                           ;menu_task.c: 144: data->noholdCount = 0;
 15347  0FB2  0857               	movf	menu_Main@data,w
 15348  0FB3  0086               	movwf	6
 15349  0FB4  0858               	movf	menu_Main@data+1,w
 15350  0FB5  0087               	movwf	7
 15351  0FB6  314C               	addfsr 1,12
 15352  0FB7  3000               	movlw	0
 15353  0FB8  3FC0               	movwi [0]fsr1
 15354  0FB9  3FC1               	movwi [1]fsr1
 15355                           
 15356                           ;menu_task.c: 145: break;
 15357  0FBA  0008               	return
 15358  0FBB                     l6712:	
 15359                           ;menu_task.c: 147: default:
 15360                           
 15361                           ;menu_task.c: 146: case 1 | 2 | 8:
 15362                           
 15363                           
 15364                           ;menu_task.c: 148: menu_display_option(data);
 15365  0FBB  0858               	movf	menu_Main@data+1,w
 15366  0FBC  00CD               	movwf	menu_display_option@data+1
 15367  0FBD  0857               	movf	menu_Main@data,w
 15368  0FBE  00CC               	movwf	menu_display_option@data
 15369  0FBF  3192  223D  318E   	fcall	_menu_display_option
 15370                           
 15371                           ;menu_task.c: 149: data->holdCountA = 0;
 15372  0FC2  0020               	movlb	0	; select bank0
 15373  0FC3  0857               	movf	menu_Main@data,w
 15374  0FC4  0086               	movwf	6
 15375  0FC5  0858               	movf	menu_Main@data+1,w
 15376  0FC6  0087               	movwf	7
 15377  0FC7  3144               	addfsr 1,4
 15378  0FC8  3000               	movlw	0
 15379  0FC9  3FC0               	movwi [0]fsr1
 15380  0FCA  3FC1               	movwi [1]fsr1
 15381                           
 15382                           ;menu_task.c: 150: data->holdCountB = 0;
 15383  0FCB  0857               	movf	menu_Main@data,w
 15384  0FCC  0086               	movwf	6
 15385  0FCD  0858               	movf	menu_Main@data+1,w
 15386  0FCE  0087               	movwf	7
 15387  0FCF  3146               	addfsr 1,6
 15388  0FD0  3000               	movlw	0
 15389  0FD1  3FC0               	movwi [0]fsr1
 15390  0FD2  3FC1               	movwi [1]fsr1
 15391                           
 15392                           ;menu_task.c: 151: data->holdCountX = 0;
 15393  0FD3  0857               	movf	menu_Main@data,w
 15394  0FD4  0086               	movwf	6
 15395  0FD5  0858               	movf	menu_Main@data+1,w
 15396  0FD6  0087               	movwf	7
 15397  0FD7  3148               	addfsr 1,8
 15398  0FD8  3000               	movlw	0
 15399  0FD9  3FC0               	movwi [0]fsr1
 15400  0FDA  3FC1               	movwi [1]fsr1
 15401                           
 15402                           ;menu_task.c: 152: data->holdCountY = 0;
 15403  0FDB  0857               	movf	menu_Main@data,w
 15404  0FDC  0086               	movwf	6
 15405  0FDD  0858               	movf	menu_Main@data+1,w
 15406  0FDE  0087               	movwf	7
 15407  0FDF  314A               	addfsr 1,10
 15408  0FE0  3000               	movlw	0
 15409  0FE1  3FC0               	movwi [0]fsr1
 15410  0FE2  3FC1               	movwi [1]fsr1
 15411                           
 15412                           ;menu_task.c: 153: data->noholdCount += 1;
 15413  0FE3  0857               	movf	menu_Main@data,w
 15414  0FE4  0086               	movwf	6
 15415  0FE5  0858               	movf	menu_Main@data+1,w
 15416  0FE6  0087               	movwf	7
 15417  0FE7  314C               	addfsr 1,12
 15418  0FE8  3001               	movlw	1
 15419  0FE9  0781               	addwf	1,f
 15420  0FEA  3141               	addfsr 1,1
 15421  0FEB  1803               	skipnc
 15422  0FEC  0A81               	incf	1,f
 15423                           
 15424                           ;menu_task.c: 154: }
 15425  0FED  0008               	return
 15426  0FEE                     l6724:	
 15427  0FEE  0856               	movf	menu_Main@buttonPressed,w
 15428                           
 15429                           ; Switch size 1, requested type "space"
 15430                           ; Number of cases is 5, Range of values is 1 to 11
 15431                           ; switch strategies available:
 15432                           ; Name         Instructions Cycles
 15433                           ; simple_byte           16     9 (average)
 15434                           ; direct_byte           31     9 (fixed)
 15435                           ; jumptable            263     9 (fixed)
 15436                           ;	Chosen strategy is simple_byte
 15437  0FEF  3A01               	xorlw	1	; case 1
 15438  0FF0  1903               	skipnz
 15439  0FF1  2E95               	goto	l6642
 15440  0FF2  3A03               	xorlw	3	; case 2
 15441  0FF3  1903               	skipnz
 15442  0FF4  2EE2               	goto	l6662
 15443  0FF5  3A06               	xorlw	6	; case 4
 15444  0FF6  1903               	skipnz
 15445  0FF7  2F3E               	goto	l6682
 15446  0FF8  3A0C               	xorlw	12	; case 8
 15447  0FF9  1903               	skipnz
 15448  0FFA  2F7F               	goto	l6698
 15449  0FFB  3A03               	xorlw	3	; case 11
 15450  0FFC  1903               	skipnz
 15451  0FFD  2FBB               	goto	l6712
 15452  0FFE  2FBB               	goto	l6712
 15453  0FFF  0008               	return
 15454  1000                     __end_of_menu_Main:	
 15455                           
 15456                           	psect	text16
 15457  00B5                     __ptext16:	
 15458 ;; *************** function _flashy_Main *****************
 15459 ;; Defined at:
 15460 ;;		line 85 in file "flashy_task.c"
 15461 ;; Parameters:    Size  Location     Type
 15462 ;;  taskData        2   50[BANK0 ] PTR void 
 15463 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15464 ;;		 -> flashy_TaskData(26), NULL(0), 
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;  hit_counter     6   54[BANK0 ] unsigned char [6]
 15467 ;;  data            2   62[BANK0 ] PTR struct t_flashy_task
 15468 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 15469 ;;		 -> flashy_TaskData(26), NULL(0), 
 15470 ;;  buttonPresse    2   60[BANK0 ] unsigned int 
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  1    wreg      void 
 15473 ;; Registers used:
 15474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/0
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15481 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15483 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15484 ;;Total ram usage:       14 bytes
 15485 ;; Hardware stack levels used:    1
 15486 ;; Hardware stack levels required when called:   11
 15487 ;; This function calls:
 15488 ;;		_flashy_display_option
 15489 ;;		_led_circle
 15490 ;;		_led_curtain
 15491 ;;		_led_rand
 15492 ;;		_led_roundabout
 15493 ;;		_marquee
 15494 ;;		_nullifyBadge_buttonsGet
 15495 ;;		_nullifyBadge_irGet
 15496 ;;		_nullifyBadge_irTxClr
 15497 ;;		_nullifyBadge_irTxRegister
 15498 ;;		_nullifyBadge_irTxRelease
 15499 ;;		_nullifyBadge_irTxSet
 15500 ;;		_nullifyBadge_segDisplayForceUpdate
 15501 ;;		_nullifyBadge_segDisplayPutStr
 15502 ;;		_nullifyBadge_userLedsSet
 15503 ;;		_sprintf
 15504 ;; This function is called by:
 15505 ;;		_main
 15506 ;;		_scheduler_TaskRun
 15507 ;; This function uses a non-reentrant model
 15508 ;;
 15509                           
 15510                           
 15511                           ;psect for function _flashy_Main
 15512  00B5                     _flashy_Main:	
 15513                           
 15514                           ;flashy_task.c: 86: struct t_flashy_taskData *data = (struct t_flashy_taskData *) taskDa
      +                          ta;
 15515                           
 15516                           ;incstack = 0
 15517                           ; Regs used in _flashy_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15518  00B5  0020               	movlb	0	; select bank0
 15519  00B6  0853               	movf	flashy_Main@taskData+1,w
 15520  00B7  00DF               	movwf	flashy_Main@data+1
 15521  00B8  0852               	movf	flashy_Main@taskData,w
 15522  00B9  00DE               	movwf	flashy_Main@data
 15523                           
 15524                           ;flashy_task.c: 87: u16 buttonPressed;
 15525                           ;flashy_task.c: 88: char hit_counter[6];
 15526                           ;flashy_task.c: 90: if ( currentTask != FLASHY_TASK ){
 15527  00BA  3002               	movlw	2
 15528  00BB  0021               	movlb	1	; select bank1
 15529  00BC  0632               	xorwf	_currentTask^(0+128),w
 15530  00BD  0433               	iorwf	(_currentTask+1)^(0+128),w
 15531  00BE  1903               	btfsc	3,2
 15532  00BF  2962               	goto	l6762
 15533                           
 15534                           ;flashy_task.c: 91: data->holdCountA = 1;
 15535  00C0  0020               	movlb	0	; select bank0
 15536  00C1  085E               	movf	flashy_Main@data,w
 15537  00C2  0086               	movwf	6
 15538  00C3  085F               	movf	flashy_Main@data+1,w
 15539  00C4  0087               	movwf	7
 15540  00C5  314A               	addfsr 1,10
 15541  00C6  3001               	movlw	1
 15542  00C7  3FC0               	movwi [0]fsr1
 15543  00C8  3000               	movlw	0
 15544  00C9  3FC1               	movwi [1]fsr1
 15545                           
 15546                           ;flashy_task.c: 92: data->holdCountB = 1;
 15547  00CA  085E               	movf	flashy_Main@data,w
 15548  00CB  0086               	movwf	6
 15549  00CC  085F               	movf	flashy_Main@data+1,w
 15550  00CD  0087               	movwf	7
 15551  00CE  314C               	addfsr 1,12
 15552  00CF  3001               	movlw	1
 15553  00D0  3FC0               	movwi [0]fsr1
 15554  00D1  3000               	movlw	0
 15555  00D2  3FC1               	movwi [1]fsr1
 15556                           
 15557                           ;flashy_task.c: 93: data->holdCountX = 1;
 15558  00D3  085E               	movf	flashy_Main@data,w
 15559  00D4  0086               	movwf	6
 15560  00D5  085F               	movf	flashy_Main@data+1,w
 15561  00D6  0087               	movwf	7
 15562  00D7  314E               	addfsr 1,14
 15563  00D8  3001               	movlw	1
 15564  00D9  3FC0               	movwi [0]fsr1
 15565  00DA  3000               	movlw	0
 15566  00DB  3FC1               	movwi [1]fsr1
 15567                           
 15568                           ;flashy_task.c: 94: data->holdCountY = 1;
 15569  00DC  085E               	movf	flashy_Main@data,w
 15570  00DD  0086               	movwf	6
 15571  00DE  085F               	movf	flashy_Main@data+1,w
 15572  00DF  0087               	movwf	7
 15573  00E0  3150               	addfsr 1,16
 15574  00E1  3001               	movlw	1
 15575  00E2  3FC0               	movwi [0]fsr1
 15576  00E3  3000               	movlw	0
 15577  00E4  3FC1               	movwi [1]fsr1
 15578                           
 15579                           ;flashy_task.c: 95: data->holdCountXY = 1;
 15580  00E5  085E               	movf	flashy_Main@data,w
 15581  00E6  0086               	movwf	6
 15582  00E7  085F               	movf	flashy_Main@data+1,w
 15583  00E8  0087               	movwf	7
 15584  00E9  3152               	addfsr 1,18
 15585  00EA  3001               	movlw	1
 15586  00EB  3FC0               	movwi [0]fsr1
 15587  00EC  3000               	movlw	0
 15588  00ED  3FC1               	movwi [1]fsr1
 15589                           
 15590                           ;flashy_task.c: 96: data->holdCountAY = 1;
 15591  00EE  085E               	movf	flashy_Main@data,w
 15592  00EF  0086               	movwf	6
 15593  00F0  085F               	movf	flashy_Main@data+1,w
 15594  00F1  0087               	movwf	7
 15595  00F2  3154               	addfsr 1,20
 15596  00F3  3001               	movlw	1
 15597  00F4  3FC0               	movwi [0]fsr1
 15598  00F5  3000               	movlw	0
 15599  00F6  3FC1               	movwi [1]fsr1
 15600                           
 15601                           ;flashy_task.c: 97: data->holdCountAX = 1;
 15602  00F7  085E               	movf	flashy_Main@data,w
 15603  00F8  0086               	movwf	6
 15604  00F9  085F               	movf	flashy_Main@data+1,w
 15605  00FA  0087               	movwf	7
 15606  00FB  3156               	addfsr 1,22
 15607  00FC  3001               	movlw	1
 15608  00FD  3FC0               	movwi [0]fsr1
 15609  00FE  3000               	movlw	0
 15610  00FF  3FC1               	movwi [1]fsr1
 15611                           
 15612                           ;flashy_task.c: 98: return;
 15613  0100  0008               	return
 15614  0101                     l6734:	
 15615                           ;flashy_task.c: 105: case SECRET_VALUE_TEST:
 15616                           
 15617                           ;flashy_task.c: 104: break;
 15618                           
 15619                           ;flashy_task.c: 103: case SECRET_VALUE_INIT:
 15620                           
 15621                           ;flashy_task.c: 99: }
 15622                           ;flashy_task.c: 102: switch (secret_value){
 15623                           
 15624                           
 15625                           ;flashy_task.c: 106: secret_value = SECRET_VALUE_INIT;
 15626  0101  0021               	movlb	1	; select bank1
 15627  0102  01E3               	clrf	_secret_value^(0+128)
 15628  0103  01E4               	clrf	(_secret_value+1)^(0+128)
 15629                           
 15630                           ;flashy_task.c: 107: data->displayTickCount = 0;
 15631  0104  0020               	movlb	0	; select bank0
 15632  0105  085E               	movf	flashy_Main@data,w
 15633  0106  0086               	movwf	6
 15634  0107  085F               	movf	flashy_Main@data+1,w
 15635  0108  0087               	movwf	7
 15636  0109  3144               	addfsr 1,4
 15637  010A  3000               	movlw	0
 15638  010B  3FC0               	movwi [0]fsr1
 15639  010C  3FC1               	movwi [1]fsr1
 15640                           
 15641                           ;flashy_task.c: 108: data->display_state = FLASHY_STATE_DISPLAY_SECRET_TEST;
 15642  010D  085E               	movf	flashy_Main@data,w
 15643  010E  3E06               	addlw	6
 15644  010F  00D4               	movwf	??_flashy_Main
 15645  0110  3000               	movlw	0
 15646  0111  3D5F               	addwfc	flashy_Main@data+1,w
 15647  0112  00D5               	movwf	??_flashy_Main+1
 15648  0113  0854               	movf	??_flashy_Main,w
 15649  0114  0086               	movwf	6
 15650  0115  0855               	movf	??_flashy_Main+1,w
 15651  0116  0087               	movwf	7
 15652  0117  3005               	movlw	5
 15653  0118  0081               	movwf	1
 15654                           
 15655                           ;flashy_task.c: 110: data->holdCountA = 1;
 15656  0119  085E               	movf	flashy_Main@data,w
 15657  011A  0086               	movwf	6
 15658  011B  085F               	movf	flashy_Main@data+1,w
 15659  011C  0087               	movwf	7
 15660  011D  314A               	addfsr 1,10
 15661  011E  3001               	movlw	1
 15662  011F  3FC0               	movwi [0]fsr1
 15663  0120  3000               	movlw	0
 15664  0121  3FC1               	movwi [1]fsr1
 15665                           
 15666                           ;flashy_task.c: 111: data->holdCountB = 1;
 15667  0122  085E               	movf	flashy_Main@data,w
 15668  0123  0086               	movwf	6
 15669  0124  085F               	movf	flashy_Main@data+1,w
 15670  0125  0087               	movwf	7
 15671  0126  314C               	addfsr 1,12
 15672  0127  3001               	movlw	1
 15673  0128  3FC0               	movwi [0]fsr1
 15674  0129  3000               	movlw	0
 15675  012A  3FC1               	movwi [1]fsr1
 15676                           
 15677                           ;flashy_task.c: 112: data->holdCountX = 1;
 15678  012B  085E               	movf	flashy_Main@data,w
 15679  012C  0086               	movwf	6
 15680  012D  085F               	movf	flashy_Main@data+1,w
 15681  012E  0087               	movwf	7
 15682  012F  314E               	addfsr 1,14
 15683  0130  3001               	movlw	1
 15684  0131  3FC0               	movwi [0]fsr1
 15685  0132  3000               	movlw	0
 15686  0133  3FC1               	movwi [1]fsr1
 15687                           
 15688                           ;flashy_task.c: 113: data->holdCountY = 1;
 15689  0134  085E               	movf	flashy_Main@data,w
 15690  0135  0086               	movwf	6
 15691  0136  085F               	movf	flashy_Main@data+1,w
 15692  0137  0087               	movwf	7
 15693  0138  3150               	addfsr 1,16
 15694  0139  3001               	movlw	1
 15695  013A  3FC0               	movwi [0]fsr1
 15696  013B  3000               	movlw	0
 15697  013C  3FC1               	movwi [1]fsr1
 15698                           
 15699                           ;flashy_task.c: 114: data->holdCountXY = 1;
 15700  013D  085E               	movf	flashy_Main@data,w
 15701  013E  0086               	movwf	6
 15702  013F  085F               	movf	flashy_Main@data+1,w
 15703  0140  0087               	movwf	7
 15704  0141  3152               	addfsr 1,18
 15705  0142  3001               	movlw	1
 15706  0143  3FC0               	movwi [0]fsr1
 15707  0144  3000               	movlw	0
 15708  0145  3FC1               	movwi [1]fsr1
 15709                           
 15710                           ;flashy_task.c: 115: data->holdCountAY = 1;
 15711  0146  085E               	movf	flashy_Main@data,w
 15712  0147  0086               	movwf	6
 15713  0148  085F               	movf	flashy_Main@data+1,w
 15714  0149  0087               	movwf	7
 15715  014A  3154               	addfsr 1,20
 15716  014B  3001               	movlw	1
 15717  014C  3FC0               	movwi [0]fsr1
 15718  014D  3000               	movlw	0
 15719  014E  3FC1               	movwi [1]fsr1
 15720                           
 15721                           ;flashy_task.c: 116: data->holdCountAX = 1;
 15722  014F  085E               	movf	flashy_Main@data,w
 15723  0150  0086               	movwf	6
 15724  0151  085F               	movf	flashy_Main@data+1,w
 15725  0152  0087               	movwf	7
 15726  0153  3156               	addfsr 1,22
 15727  0154  3001               	movlw	1
 15728  0155  3FC0               	movwi [0]fsr1
 15729  0156  3000               	movlw	0
 15730  0157  3FC1               	movwi [1]fsr1
 15731                           
 15732                           ;flashy_task.c: 117: data->noholdCount = 1;
 15733  0158  085E               	movf	flashy_Main@data,w
 15734  0159  0086               	movwf	6
 15735  015A  085F               	movf	flashy_Main@data+1,w
 15736  015B  0087               	movwf	7
 15737  015C  3158               	addfsr 1,24
 15738  015D  3001               	movlw	1
 15739  015E  3FC0               	movwi [0]fsr1
 15740  015F  3000               	movlw	0
 15741  0160  3FC1               	movwi [1]fsr1
 15742                           
 15743                           ;flashy_task.c: 118: return;
 15744  0161  0008               	return
 15745  0162                     l6762:	
 15746                           ;flashy_task.c: 120: }
 15747                           
 15748                           ;flashy_task.c: 119: break;
 15749                           
 15750                           
 15751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15752                           ; Switch size 1, requested type "space"
 15753                           ; Number of cases is 1, Range of values is 0 to 0
 15754                           ; switch strategies available:
 15755                           ; Name         Instructions Cycles
 15756                           ; simple_byte            4     3 (average)
 15757                           ; direct_byte            8     6 (fixed)
 15758                           ; jumptable            260     6 (fixed)
 15759                           ;	Chosen strategy is simple_byte
 15760  0162  0021               	movlb	1	; select bank1
 15761  0163  0864               	movf	(_secret_value+1)^(0+128),w
 15762  0164  3A00               	xorlw	0	; case 0
 15763  0165  1903               	skipnz
 15764  0166  2968               	goto	l7798
 15765  0167  2A23               	goto	l6810
 15766  0168                     l7798:	
 15767                           
 15768                           ; Switch size 1, requested type "space"
 15769                           ; Number of cases is 2, Range of values is 0 to 1
 15770                           ; switch strategies available:
 15771                           ; Name         Instructions Cycles
 15772                           ; simple_byte            7     4 (average)
 15773                           ; direct_byte           10     6 (fixed)
 15774                           ; jumptable            260     6 (fixed)
 15775                           ;	Chosen strategy is simple_byte
 15776  0168  0863               	movf	_secret_value^(0+128),w
 15777  0169  3A00               	xorlw	0	; case 0
 15778  016A  1903               	skipnz
 15779  016B  2A23               	goto	l6810
 15780  016C  3A01               	xorlw	1	; case 1
 15781  016D  1903               	skipnz
 15782  016E  2901               	goto	l6734
 15783  016F  2A23               	goto	l6810
 15784                           
 15785                           ;flashy_task.c: 123: switch (data->led_state){
 15786  0170  2A23               	goto	l6810
 15787  0171                     l6764:	
 15788                           ;flashy_task.c: 124: case FLASHY_STATE_LED_ROUNDABOUT:
 15789                           
 15790                           
 15791                           ;flashy_task.c: 125: if (data->delayTickCount == 0){
 15792  0171  0020               	movlb	0	; select bank0
 15793  0172  085E               	movf	flashy_Main@data,w
 15794  0173  0086               	movwf	6
 15795  0174  085F               	movf	flashy_Main@data+1,w
 15796  0175  0087               	movwf	7
 15797  0176  3141               	addfsr 1,1
 15798  0177  0016               	moviw fsr1++
 15799  0178  0401               	iorwf	1,w
 15800  0179  1D03               	btfss	3,2
 15801  017A  2A17               	goto	L5
 15802                           
 15803                           ;flashy_task.c: 126: led_roundabout(flashy_leds_idx);
 15804  017B  0021               	movlb	1	; select bank1
 15805  017C  082D               	movf	(_flashy_leds_idx+1)^(0+128),w
 15806  017D  0020               	movlb	0	; select bank0
 15807  017E  00B1               	movwf	led_roundabout@counter+1
 15808  017F  0021               	movlb	1	; select bank1
 15809  0180  082C               	movf	_flashy_leds_idx^(0+128),w
 15810  0181  0020               	movlb	0	; select bank0
 15811  0182  00B0               	movwf	led_roundabout@counter
 15812  0183  319E  26F3  3180   	fcall	_led_roundabout
 15813                           
 15814                           ;flashy_task.c: 127: flashy_leds_idx += 1;
 15815  0186  3001               	movlw	1
 15816  0187  0021               	movlb	1	; select bank1
 15817  0188  07AC               	addwf	_flashy_leds_idx^(0+128),f
 15818  0189  3000               	movlw	0
 15819  018A  3DAD               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 15820                           
 15821                           ;flashy_task.c: 128: data->delayTickCount = 35;
 15822  018B  0020               	movlb	0	; select bank0
 15823  018C  085E               	movf	flashy_Main@data,w
 15824  018D  0086               	movwf	6
 15825  018E  085F               	movf	flashy_Main@data+1,w
 15826  018F  0087               	movwf	7
 15827  0190  3141               	addfsr 1,1
 15828  0191  3023               	movlw	35
 15829  0192  3FC0               	movwi [0]fsr1
 15830  0193  3000               	movlw	0
 15831  0194  3FC1               	movwi [1]fsr1
 15832                           
 15833                           ;flashy_task.c: 129: }
 15834  0195  2ABE               	goto	l6840
 15835  0196                     l6774:	
 15836                           ;flashy_task.c: 134: case FLASHY_STATE_LED_SHOT:
 15837                           
 15838                           ;flashy_task.c: 132: }
 15839                           ;flashy_task.c: 133: break;
 15840                           
 15841                           ;flashy_task.c: 130: else {
 15842                           ;flashy_task.c: 131: data->delayTickCount -= 1;
 15843                           
 15844                           
 15845                           ;flashy_task.c: 135: if (data->delayTickCount == 0){
 15846  0196  085E               	movf	flashy_Main@data,w
 15847  0197  0086               	movwf	6
 15848  0198  085F               	movf	flashy_Main@data+1,w
 15849  0199  0087               	movwf	7
 15850  019A  3141               	addfsr 1,1
 15851  019B  0016               	moviw fsr1++
 15852  019C  0401               	iorwf	1,w
 15853  019D  1D03               	btfss	3,2
 15854  019E  2A17               	goto	L5
 15855                           
 15856                           ;flashy_task.c: 136: led_curtain(flashy_leds_idx);
 15857  019F  0021               	movlb	1	; select bank1
 15858  01A0  082D               	movf	(_flashy_leds_idx+1)^(0+128),w
 15859  01A1  0020               	movlb	0	; select bank0
 15860  01A2  00B1               	movwf	led_curtain@counter+1
 15861  01A3  0021               	movlb	1	; select bank1
 15862  01A4  082C               	movf	_flashy_leds_idx^(0+128),w
 15863  01A5  0020               	movlb	0	; select bank0
 15864  01A6  00B0               	movwf	led_curtain@counter
 15865  01A7  319E  26B2  3180   	fcall	_led_curtain
 15866                           
 15867                           ;flashy_task.c: 137: flashy_leds_idx += 1;
 15868  01AA  3001               	movlw	1
 15869  01AB  0021               	movlb	1	; select bank1
 15870  01AC  07AC               	addwf	_flashy_leds_idx^(0+128),f
 15871  01AD  3000               	movlw	0
 15872  01AE  3DAD               	addwfc	(_flashy_leds_idx+1)^(0+128),f
 15873                           
 15874                           ;flashy_task.c: 138: data->delayTickCount = 5;
 15875  01AF  0020               	movlb	0	; select bank0
 15876  01B0  085E               	movf	flashy_Main@data,w
 15877  01B1  0086               	movwf	6
 15878  01B2  085F               	movf	flashy_Main@data+1,w
 15879  01B3  0087               	movwf	7
 15880  01B4  3141               	addfsr 1,1
 15881  01B5  3005               	movlw	5
 15882  01B6  3FC0               	movwi [0]fsr1
 15883  01B7  3000               	movlw	0
 15884  01B8  3FC1               	movwi [1]fsr1
 15885                           
 15886                           ;flashy_task.c: 139: }
 15887  01B9  2ABE               	goto	l6840
 15888  01BA                     l6784:	
 15889                           ;flashy_task.c: 144: case FLASHY_STATE_SPARKLE:
 15890                           
 15891                           ;flashy_task.c: 142: }
 15892                           ;flashy_task.c: 143: break;
 15893                           
 15894                           ;flashy_task.c: 140: else {
 15895                           ;flashy_task.c: 141: data->delayTickCount -= 1;
 15896                           
 15897                           
 15898                           ;flashy_task.c: 145: if (data->delayTickCount < 1){
 15899  01BA  085E               	movf	flashy_Main@data,w
 15900  01BB  0086               	movwf	6
 15901  01BC  085F               	movf	flashy_Main@data+1,w
 15902  01BD  0087               	movwf	7
 15903  01BE  3141               	addfsr 1,1
 15904  01BF  0016               	moviw fsr1++
 15905  01C0  0401               	iorwf	1,w
 15906  01C1  1D03               	btfss	3,2
 15907  01C2  29D2               	goto	l6790
 15908                           
 15909                           ;flashy_task.c: 146: led_rand();
 15910  01C3  3199  21B7  3180   	fcall	_led_rand
 15911                           
 15912                           ;flashy_task.c: 147: data->delayTickCount = flashy_sparkle_rate;
 15913  01C6  0020               	movlb	0	; select bank0
 15914  01C7  085E               	movf	flashy_Main@data,w
 15915  01C8  0086               	movwf	6
 15916  01C9  085F               	movf	flashy_Main@data+1,w
 15917  01CA  0087               	movwf	7
 15918  01CB  3141               	addfsr 1,1
 15919  01CC  0021               	movlb	1	; select bank1
 15920  01CD  082A               	movf	_flashy_sparkle_rate^(0+128),w
 15921  01CE  3FC0               	movwi [0]fsr1
 15922  01CF  082B               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 15923  01D0  3FC1               	movwi [1]fsr1
 15924                           
 15925                           ;flashy_task.c: 148: }
 15926  01D1  29DE               	goto	l6792
 15927  01D2                     l6790:	
 15928                           
 15929                           ;flashy_task.c: 149: else {
 15930                           ;flashy_task.c: 150: data->delayTickCount -= 1;
 15931  01D2  0020               	movlb	0	; select bank0
 15932  01D3  085E               	movf	flashy_Main@data,w
 15933  01D4  0086               	movwf	6
 15934  01D5  085F               	movf	flashy_Main@data+1,w
 15935  01D6  0087               	movwf	7
 15936  01D7  3141               	addfsr 1,1
 15937  01D8  3001               	movlw	1
 15938  01D9  0281               	subwf	1,f
 15939  01DA  3141               	addfsr 1,1
 15940  01DB  3000               	movlw	0
 15941  01DC  3B81               	subwfb	1,f
 15942  01DD  317F               	addfsr 1,-1
 15943  01DE                     l6792:	
 15944                           ;flashy_task.c: 151: }
 15945                           ;flashy_task.c: 152: case FLASHY_STATE_CIRCLE:
 15946                           
 15947                           
 15948                           ;flashy_task.c: 153: if (data->delayTickCount ==0 ){
 15949  01DE  0020               	movlb	0	; select bank0
 15950  01DF  085E               	movf	flashy_Main@data,w
 15951  01E0  0086               	movwf	6
 15952  01E1  085F               	movf	flashy_Main@data+1,w
 15953  01E2  0087               	movwf	7
 15954  01E3  3141               	addfsr 1,1
 15955  01E4  0016               	moviw fsr1++
 15956  01E5  0401               	iorwf	1,w
 15957  01E6  1D03               	btfss	3,2
 15958  01E7  2A16               	goto	l6808
 15959                           
 15960                           ;flashy_task.c: 154: if (flashy_leds_idx == 1024 ){
 15961  01E8  3004               	movlw	4
 15962  01E9  0021               	movlb	1	; select bank1
 15963  01EA  062D               	xorwf	(_flashy_leds_idx+1)^(0+128),w
 15964  01EB  042C               	iorwf	_flashy_leds_idx^(0+128),w
 15965  01EC  1D03               	btfss	3,2
 15966  01ED  29F2               	goto	l6798
 15967                           
 15968                           ;flashy_task.c: 155: flashy_leds_idx = flashy_leds_idx << 1;
 15969  01EE  352C               	lslf	_flashy_leds_idx^(0+128),w
 15970  01EF  00AC               	movwf	_flashy_leds_idx^(0+128)
 15971  01F0  0D2D               	rlf	(_flashy_leds_idx+1)^(0+128),w
 15972  01F1  00AD               	movwf	(_flashy_leds_idx+1)^(0+128)
 15973  01F2                     l6798:	
 15974                           
 15975                           ;flashy_task.c: 156: }
 15976                           ;flashy_task.c: 157: led_circle(flashy_leds_idx);
 15977  01F2  082D               	movf	(_flashy_leds_idx+1)^(0+128),w
 15978  01F3  0020               	movlb	0	; select bank0
 15979  01F4  00B1               	movwf	led_circle@count+1
 15980  01F5  0021               	movlb	1	; select bank1
 15981  01F6  082C               	movf	_flashy_leds_idx^(0+128),w
 15982  01F7  0020               	movlb	0	; select bank0
 15983  01F8  00B0               	movwf	led_circle@count
 15984  01F9  3198  20BB  3180   	fcall	_led_circle
 15985                           
 15986                           ;flashy_task.c: 158: if (flashy_leds_idx < 1 ){
 15987  01FC  0021               	movlb	1	; select bank1
 15988  01FD  082C               	movf	_flashy_leds_idx^(0+128),w
 15989  01FE  042D               	iorwf	(_flashy_leds_idx+1)^(0+128),w
 15990  01FF  1D03               	btfss	3,2
 15991  0200  2A06               	goto	l6804
 15992                           
 15993                           ;flashy_task.c: 159: flashy_leds_idx = 1;
 15994  0201  3001               	movlw	1
 15995  0202  00AC               	movwf	_flashy_leds_idx^(0+128)
 15996  0203  3000               	movlw	0
 15997  0204  00AD               	movwf	(_flashy_leds_idx^(0+128)+1)
 15998                           
 15999                           ;flashy_task.c: 160: break;
 16000  0205  2ABE               	goto	l6840
 16001  0206                     l6804:	
 16002                           
 16003                           ;flashy_task.c: 161: }
 16004                           ;flashy_task.c: 162: flashy_leds_idx = flashy_leds_idx << 1;
 16005  0206  352C               	lslf	_flashy_leds_idx^(0+128),w
 16006  0207  00AC               	movwf	_flashy_leds_idx^(0+128)
 16007  0208  0D2D               	rlf	(_flashy_leds_idx+1)^(0+128),w
 16008  0209  00AD               	movwf	(_flashy_leds_idx+1)^(0+128)
 16009                           
 16010                           ;flashy_task.c: 164: data->delayTickCount = flashy_sparkle_rate;
 16011  020A  0020               	movlb	0	; select bank0
 16012  020B  085E               	movf	flashy_Main@data,w
 16013  020C  0086               	movwf	6
 16014  020D  085F               	movf	flashy_Main@data+1,w
 16015  020E  0087               	movwf	7
 16016  020F  3141               	addfsr 1,1
 16017  0210  0021               	movlb	1	; select bank1
 16018  0211  082A               	movf	_flashy_sparkle_rate^(0+128),w
 16019  0212  3FC0               	movwi [0]fsr1
 16020  0213  082B               	movf	(_flashy_sparkle_rate+1)^(0+128),w
 16021  0214  3FC1               	movwi [1]fsr1
 16022                           
 16023                           ;flashy_task.c: 165: }
 16024  0215  2ABE               	goto	l6840
 16025  0216                     l6808:	
 16026                           
 16027                           ;flashy_task.c: 166: else {
 16028                           ;flashy_task.c: 167: data->delayTickCount -= 1;
 16029  0216  0020               	movlb	0	; select bank0
 16030  0217                     L5:	
 16031  0217  085E               	movf	flashy_Main@data,w
 16032  0218  0086               	movwf	6
 16033  0219  085F               	movf	flashy_Main@data+1,w
 16034  021A  0087               	movwf	7
 16035  021B  3141               	addfsr 1,1
 16036  021C  3001               	movlw	1
 16037  021D  0281               	subwf	1,f
 16038  021E  3141               	addfsr 1,1
 16039  021F  3000               	movlw	0
 16040  0220  3B81               	subwfb	1,f
 16041  0221  317F               	addfsr 1,-1
 16042                           
 16043                           ;flashy_task.c: 168: }
 16044                           ;flashy_task.c: 169: }
 16045  0222  2ABE               	goto	l6840
 16046  0223                     l6810:	
 16047  0223  0020               	movlb	0	; select bank0
 16048  0224  085E               	movf	flashy_Main@data,w
 16049  0225  0086               	movwf	6
 16050  0226  085F               	movf	flashy_Main@data+1,w
 16051  0227  0087               	movwf	7
 16052  0228  3143               	addfsr 1,3
 16053  0229  0801               	movf	1,w
 16054                           
 16055                           ; Switch size 1, requested type "space"
 16056                           ; Number of cases is 4, Range of values is 0 to 3
 16057                           ; switch strategies available:
 16058                           ; Name         Instructions Cycles
 16059                           ; simple_byte           13     7 (average)
 16060                           ; direct_byte           14     6 (fixed)
 16061                           ; jumptable            260     6 (fixed)
 16062                           ;	Chosen strategy is simple_byte
 16063  022A  3A00               	xorlw	0	; case 0
 16064  022B  1903               	skipnz
 16065  022C  2971               	goto	l6764
 16066  022D  3A01               	xorlw	1	; case 1
 16067  022E  1903               	skipnz
 16068  022F  2996               	goto	l6774
 16069  0230  3A03               	xorlw	3	; case 2
 16070  0231  1903               	skipnz
 16071  0232  29BA               	goto	l6784
 16072  0233  3A01               	xorlw	1	; case 3
 16073  0234  1903               	skipnz
 16074  0235  29DE               	goto	l6792
 16075  0236  2ABE               	goto	l6840
 16076                           
 16077                           ;flashy_task.c: 172: switch (data->display_state){
 16078  0237  2ABE               	goto	l6840
 16079  0238                     l6812:	
 16080                           ;flashy_task.c: 173: case FLASHY_STATE_DISPLAY_BLASTER:
 16081                           
 16082                           
 16083                           ;flashy_task.c: 174: nullifyBadge_segDisplayPutStr(data->badge, "PEW ");
 16084  0238  3065               	movlw	low (STR_14| (0+32768))
 16085  0239  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 16086  023A  30A0               	movlw	high (STR_14| (0+32768))
 16087  023B  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 16088  023C  085E               	movf	flashy_Main@data,w
 16089  023D  0086               	movwf	6
 16090  023E  085F               	movf	flashy_Main@data+1,w
 16091  023F  0087               	movwf	7
 16092  0240  0801               	movf	1,w
 16093  0241  3198  20D8  3180   	fcall	_nullifyBadge_segDisplayPutStr
 16094                           
 16095                           ;flashy_task.c: 175: nullifyBadge_segDisplayForceUpdate(data->badge);
 16096  0244  0020               	movlb	0	; select bank0
 16097  0245  085E               	movf	flashy_Main@data,w
 16098  0246  0086               	movwf	6
 16099  0247  085F               	movf	flashy_Main@data+1,w
 16100  0248  0087               	movwf	7
 16101  0249  0801               	movf	1,w
 16102  024A  3198  2090  3180   	fcall	_nullifyBadge_segDisplayForceUpdate
 16103  024D  2AB2               	goto	L9
 16104  024E                     l6818:	
 16105                           ;flashy_task.c: 178: case FLASHY_STATE_DISPLAY_SHOT:
 16106                           
 16107                           ;flashy_task.c: 177: break;
 16108                           
 16109                           ;flashy_task.c: 176: data->displayTickCount += 1;
 16110                           
 16111                           
 16112                           ;flashy_task.c: 179: sprintf((char *)hit_counter, "%4d", deaths);
 16113  024E  3083               	movlw	low (STR_15| (0+32768))
 16114  024F  00A4               	movwf	sprintf@f
 16115  0250  30A0               	movlw	high (STR_15| (0+32768))
 16116  0251  00A5               	movwf	sprintf@f+1
 16117  0252  0021               	movlb	1	; select bank1
 16118  0253  0829               	movf	(_deaths+1)^(0+128),w
 16119  0254  0020               	movlb	0	; select bank0
 16120  0255  00A7               	movwf	?_sprintf+3
 16121  0256  0021               	movlb	1	; select bank1
 16122  0257  0828               	movf	_deaths^(0+128),w
 16123  0258  0020               	movlb	0	; select bank0
 16124  0259  00A6               	movwf	?_sprintf+2
 16125  025A  3056               	movlw	(low (flashy_Main@hit_counter| 0))& (0+255)
 16126  025B  3189  213C  3180   	fcall	_sprintf
 16127                           
 16128                           ;flashy_task.c: 181: nullifyBadge_segDisplayPutStr(data->badge, hit_counter);
 16129  025E  3056               	movlw	low flashy_Main@hit_counter
 16130  025F  0020               	movlb	0	; select bank0
 16131  0260  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 16132  0261  3000               	movlw	high flashy_Main@hit_counter
 16133  0262  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 16134  0263  085E               	movf	flashy_Main@data,w
 16135  0264  0086               	movwf	6
 16136  0265  085F               	movf	flashy_Main@data+1,w
 16137  0266  0087               	movwf	7
 16138  0267  0801               	movf	1,w
 16139  0268  3198  20D8  3180   	fcall	_nullifyBadge_segDisplayPutStr
 16140                           
 16141                           ;flashy_task.c: 182: nullifyBadge_segDisplayForceUpdate(data->badge);
 16142  026B  0020               	movlb	0	; select bank0
 16143  026C  085E               	movf	flashy_Main@data,w
 16144  026D  0086               	movwf	6
 16145  026E  085F               	movf	flashy_Main@data+1,w
 16146  026F  0087               	movwf	7
 16147  0270  0801               	movf	1,w
 16148  0271  3198  2090  3180   	fcall	_nullifyBadge_segDisplayForceUpdate
 16149                           
 16150                           ;flashy_task.c: 183: if (data->displayTickCount == 150){
 16151  0274  0020               	movlb	0	; select bank0
 16152  0275  085E               	movf	flashy_Main@data,w
 16153  0276  0086               	movwf	6
 16154  0277  085F               	movf	flashy_Main@data+1,w
 16155  0278  0087               	movwf	7
 16156  0279  3144               	addfsr 1,4
 16157  027A  0016               	moviw fsr1++
 16158  027B  3A96               	xorlw	150
 16159  027C  00D4               	movwf	??_flashy_Main
 16160  027D  0016               	moviw fsr1++
 16161  027E  04D4               	iorwf	??_flashy_Main,f
 16162  027F  1D03               	btfss	3,2
 16163  0280  2AB3               	goto	L7
 16164                           
 16165                           ;flashy_task.c: 184: data->displayTickCount = 0;
 16166  0281  085E               	movf	flashy_Main@data,w
 16167  0282  0086               	movwf	6
 16168  0283  085F               	movf	flashy_Main@data+1,w
 16169  0284  0087               	movwf	7
 16170  0285  3144               	addfsr 1,4
 16171  0286  3000               	movlw	0
 16172  0287  3FC0               	movwi [0]fsr1
 16173  0288  3FC1               	movwi [1]fsr1
 16174                           
 16175                           ;flashy_task.c: 185: data->display_state = 35;
 16176  0289  085E               	movf	flashy_Main@data,w
 16177  028A  3E06               	addlw	6
 16178  028B  00D4               	movwf	??_flashy_Main
 16179  028C  3000               	movlw	0
 16180  028D  3D5F               	addwfc	flashy_Main@data+1,w
 16181  028E  00D5               	movwf	??_flashy_Main+1
 16182  028F  0854               	movf	??_flashy_Main,w
 16183  0290  0086               	movwf	6
 16184  0291  0855               	movf	??_flashy_Main+1,w
 16185  0292  0087               	movwf	7
 16186  0293  3023               	movlw	35
 16187  0294  0081               	movwf	1
 16188  0295  2AB3               	goto	L7
 16189  0296                     l6830:	
 16190                           ;flashy_task.c: 189: case FLASHY_STATE_DISPLAY_SECRET_TEST:
 16191                           
 16192                           ;flashy_task.c: 188: break;
 16193                           
 16194                           ;flashy_task.c: 186: }
 16195                           ;flashy_task.c: 187: data->displayTickCount += 1;
 16196                           
 16197                           
 16198                           ;flashy_task.c: 190: marquee(FLASHY_TEXT_SECRET_TEST, data->displayTickCount);
 16199  0296  0021               	movlb	1	; select bank1
 16200  0297  086C               	movf	(_FLASHY_TEXT_SECRET_TEST+1)^(0+128),w
 16201  0298  0020               	movlb	0	; select bank0
 16202  0299  00BB               	movwf	marquee@string+1
 16203  029A  0021               	movlb	1	; select bank1
 16204  029B  086B               	movf	_FLASHY_TEXT_SECRET_TEST^(0+128),w
 16205  029C  0020               	movlb	0	; select bank0
 16206  029D  00BA               	movwf	marquee@string
 16207  029E  085E               	movf	flashy_Main@data,w
 16208  029F  0086               	movwf	6
 16209  02A0  085F               	movf	flashy_Main@data+1,w
 16210  02A1  0087               	movwf	7
 16211  02A2  3144               	addfsr 1,4
 16212  02A3  3F40               	moviw [0]fsr1
 16213  02A4  00BC               	movwf	marquee@count
 16214  02A5  3F41               	moviw [1]fsr1
 16215  02A6  00BD               	movwf	marquee@count+1
 16216  02A7  3193  2364  3180   	fcall	_marquee
 16217  02AA  2AB2               	goto	L9
 16218  02AB                     l6834:	
 16219                           ;flashy_task.c: 195: default:
 16220                           
 16221                           ;flashy_task.c: 193: case FLASHY_STATE_DISPLAY:
 16222                           
 16223                           ;flashy_task.c: 192: break;
 16224                           
 16225                           ;flashy_task.c: 191: data->displayTickCount += 1;
 16226                           
 16227                           
 16228                           ;flashy_task.c: 196: flashy_display_option(data);
 16229  02AB  085F               	movf	flashy_Main@data+1,w
 16230  02AC  00CD               	movwf	flashy_display_option@data+1
 16231  02AD  085E               	movf	flashy_Main@data,w
 16232  02AE  00CC               	movwf	flashy_display_option@data
 16233  02AF  319D  25C8  3180   	fcall	_flashy_display_option
 16234  02B2                     L9:	
 16235                           
 16236                           ;flashy_task.c: 197: data->displayTickCount += 1;
 16237  02B2  0020               	movlb	0	; select bank0
 16238  02B3                     L7:	
 16239  02B3  085E               	movf	flashy_Main@data,w
 16240  02B4  0086               	movwf	6
 16241  02B5  085F               	movf	flashy_Main@data+1,w
 16242  02B6  0087               	movwf	7
 16243  02B7  3144               	addfsr 1,4
 16244  02B8  3001               	movlw	1
 16245  02B9  0781               	addwf	1,f
 16246  02BA  3141               	addfsr 1,1
 16247  02BB  1803               	skipnc
 16248  02BC  0A81               	incf	1,f
 16249                           
 16250                           ;flashy_task.c: 199: }
 16251                           
 16252                           ;flashy_task.c: 198: break;
 16253  02BD  2AD2               	goto	l6842
 16254  02BE                     l6840:	
 16255  02BE  0020               	movlb	0	; select bank0
 16256  02BF  085E               	movf	flashy_Main@data,w
 16257  02C0  0086               	movwf	6
 16258  02C1  085F               	movf	flashy_Main@data+1,w
 16259  02C2  0087               	movwf	7
 16260  02C3  3146               	addfsr 1,6
 16261  02C4  0801               	movf	1,w
 16262                           
 16263                           ; Switch size 1, requested type "space"
 16264                           ; Number of cases is 4, Range of values is 0 to 5
 16265                           ; switch strategies available:
 16266                           ; Name         Instructions Cycles
 16267                           ; simple_byte           13     7 (average)
 16268                           ; direct_byte           18     6 (fixed)
 16269                           ; jumptable            260     6 (fixed)
 16270                           ;	Chosen strategy is simple_byte
 16271  02C5  3A00               	xorlw	0	; case 0
 16272  02C6  1903               	skipnz
 16273  02C7  2AAB               	goto	l6834
 16274  02C8  3A02               	xorlw	2	; case 2
 16275  02C9  1903               	skipnz
 16276  02CA  2A38               	goto	l6812
 16277  02CB  3A01               	xorlw	1	; case 3
 16278  02CC  1903               	skipnz
 16279  02CD  2A4E               	goto	l6818
 16280  02CE  3A06               	xorlw	6	; case 5
 16281  02CF  1903               	skipnz
 16282  02D0  2A96               	goto	l6830
 16283  02D1  2AAB               	goto	l6834
 16284  02D2                     l6842:	
 16285                           
 16286                           ;flashy_task.c: 202: buttonPressed = nullifyBadge_buttonsGet();
 16287  02D2  319C  24FF  3180   	fcall	_nullifyBadge_buttonsGet
 16288  02D5  0020               	movlb	0	; select bank0
 16289  02D6  00D4               	movwf	??_flashy_Main
 16290  02D7  01D5               	clrf	??_flashy_Main+1
 16291  02D8  0854               	movf	??_flashy_Main,w
 16292  02D9  00DC               	movwf	flashy_Main@buttonPressed
 16293  02DA  0855               	movf	??_flashy_Main+1,w
 16294  02DB  00DD               	movwf	flashy_Main@buttonPressed+1
 16295                           
 16296                           ;flashy_task.c: 203: switch (buttonPressed) {
 16297  02DC  2DE5               	goto	l6996
 16298  02DD                     l6844:	
 16299                           ;flashy_task.c: 204: case 4 | 8:
 16300                           
 16301                           
 16302                           ;flashy_task.c: 205: if (data->holdCountXY == 0 ){
 16303  02DD  085E               	movf	flashy_Main@data,w
 16304  02DE  0086               	movwf	6
 16305  02DF  085F               	movf	flashy_Main@data+1,w
 16306  02E0  0087               	movwf	7
 16307  02E1  3152               	addfsr 1,18
 16308  02E2  0016               	moviw fsr1++
 16309  02E3  0401               	iorwf	1,w
 16310  02E4  1D03               	btfss	3,2
 16311  02E5  2AEC               	goto	l6848
 16312                           
 16313                           ;flashy_task.c: 207: data->display_state = FLASHY_STATE_DISPLAY;
 16314  02E6  085E               	movf	flashy_Main@data,w
 16315  02E7  0086               	movwf	6
 16316  02E8  085F               	movf	flashy_Main@data+1,w
 16317  02E9  0087               	movwf	7
 16318  02EA  3146               	addfsr 1,6
 16319  02EB  0181               	clrf	1
 16320  02EC                     l6848:	
 16321                           
 16322                           ;flashy_task.c: 208: }
 16323                           ;flashy_task.c: 210: data->holdCountA = 0;
 16324  02EC  085E               	movf	flashy_Main@data,w
 16325  02ED  0086               	movwf	6
 16326  02EE  085F               	movf	flashy_Main@data+1,w
 16327  02EF  0087               	movwf	7
 16328  02F0  314A               	addfsr 1,10
 16329  02F1  3000               	movlw	0
 16330  02F2  3FC0               	movwi [0]fsr1
 16331  02F3  3FC1               	movwi [1]fsr1
 16332                           
 16333                           ;flashy_task.c: 211: data->holdCountB = 0;
 16334  02F4  085E               	movf	flashy_Main@data,w
 16335  02F5  0086               	movwf	6
 16336  02F6  085F               	movf	flashy_Main@data+1,w
 16337  02F7  0087               	movwf	7
 16338  02F8  314C               	addfsr 1,12
 16339  02F9  3000               	movlw	0
 16340  02FA  3FC0               	movwi [0]fsr1
 16341  02FB  3FC1               	movwi [1]fsr1
 16342                           
 16343                           ;flashy_task.c: 212: data->holdCountX = 0;
 16344  02FC  085E               	movf	flashy_Main@data,w
 16345  02FD  0086               	movwf	6
 16346  02FE  085F               	movf	flashy_Main@data+1,w
 16347  02FF  0087               	movwf	7
 16348  0300  314E               	addfsr 1,14
 16349  0301  3000               	movlw	0
 16350  0302  3FC0               	movwi [0]fsr1
 16351  0303  3FC1               	movwi [1]fsr1
 16352                           
 16353                           ;flashy_task.c: 213: data->holdCountY = 0;
 16354  0304  085E               	movf	flashy_Main@data,w
 16355  0305  0086               	movwf	6
 16356  0306  085F               	movf	flashy_Main@data+1,w
 16357  0307  0087               	movwf	7
 16358  0308  3150               	addfsr 1,16
 16359  0309  3000               	movlw	0
 16360  030A  3FC0               	movwi [0]fsr1
 16361  030B  3FC1               	movwi [1]fsr1
 16362                           
 16363                           ;flashy_task.c: 214: data->holdCountXY += 1;
 16364  030C  085E               	movf	flashy_Main@data,w
 16365  030D  0086               	movwf	6
 16366  030E  085F               	movf	flashy_Main@data+1,w
 16367  030F  0087               	movwf	7
 16368  0310  3152               	addfsr 1,18
 16369  0311  3001               	movlw	1
 16370  0312  0781               	addwf	1,f
 16371  0313  3141               	addfsr 1,1
 16372  0314  1803               	skipnc
 16373  0315  0A81               	incf	1,f
 16374                           
 16375                           ;flashy_task.c: 215: data->holdCountAY = 0;
 16376  0316  085E               	movf	flashy_Main@data,w
 16377  0317  0086               	movwf	6
 16378  0318  085F               	movf	flashy_Main@data+1,w
 16379  0319  0087               	movwf	7
 16380  031A  3154               	addfsr 1,20
 16381  031B  3000               	movlw	0
 16382  031C  3FC0               	movwi [0]fsr1
 16383  031D  3FC1               	movwi [1]fsr1
 16384                           
 16385                           ;flashy_task.c: 216: data->holdCountAX = 0;
 16386  031E  085E               	movf	flashy_Main@data,w
 16387  031F  0086               	movwf	6
 16388  0320  085F               	movf	flashy_Main@data+1,w
 16389  0321  0087               	movwf	7
 16390  0322  3156               	addfsr 1,22
 16391  0323  3000               	movlw	0
 16392  0324  3FC0               	movwi [0]fsr1
 16393  0325  3FC1               	movwi [1]fsr1
 16394                           
 16395                           ;flashy_task.c: 217: data->noholdCount = 0;
 16396  0326  085E               	movf	flashy_Main@data,w
 16397  0327  0086               	movwf	6
 16398  0328  085F               	movf	flashy_Main@data+1,w
 16399  0329  0087               	movwf	7
 16400  032A  3158               	addfsr 1,24
 16401  032B  3000               	movlw	0
 16402  032C  3FC0               	movwi [0]fsr1
 16403  032D  3FC1               	movwi [1]fsr1
 16404                           
 16405                           ;flashy_task.c: 218: break;
 16406  032E  2E72               	goto	l7026
 16407  032F                     l6864:	
 16408                           ;flashy_task.c: 219: case 1 | 8:
 16409                           
 16410                           
 16411                           ;flashy_task.c: 220: if ( data->holdCountAY == 0 ){
 16412  032F  085E               	movf	flashy_Main@data,w
 16413  0330  0086               	movwf	6
 16414  0331  085F               	movf	flashy_Main@data+1,w
 16415  0332  0087               	movwf	7
 16416  0333  3154               	addfsr 1,20
 16417  0334  0016               	moviw fsr1++
 16418  0335  0401               	iorwf	1,w
 16419  0336  1D03               	btfss	3,2
 16420  0337  2B48               	goto	l6870
 16421                           
 16422                           ;flashy_task.c: 221: if (flashy_sparkle_rate > 1000){
 16423  0338  3003               	movlw	3
 16424  0339  0021               	movlb	1	; select bank1
 16425  033A  022B               	subwf	(_flashy_sparkle_rate+1)^(0+128),w
 16426  033B  30E9               	movlw	233
 16427  033C  1903               	skipnz
 16428  033D  022A               	subwf	_flashy_sparkle_rate^(0+128),w
 16429  033E  1C03               	skipc
 16430  033F  2B44               	goto	l1083
 16431                           
 16432                           ;flashy_task.c: 222: flashy_sparkle_rate = 1000;
 16433  0340  30E8               	movlw	232
 16434  0341  00AA               	movwf	_flashy_sparkle_rate^(0+128)
 16435  0342  3003               	movlw	3
 16436  0343  00AB               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 16437  0344                     l1083:	
 16438                           
 16439                           ;flashy_task.c: 223: }
 16440                           ;flashy_task.c: 224: flashy_sparkle_rate += 5;
 16441  0344  3005               	movlw	5
 16442  0345  07AA               	addwf	_flashy_sparkle_rate^(0+128),f
 16443  0346  3000               	movlw	0
 16444  0347  3DAB               	addwfc	(_flashy_sparkle_rate+1)^(0+128),f
 16445  0348                     l6870:	
 16446                           
 16447                           ;flashy_task.c: 225: }
 16448                           ;flashy_task.c: 227: data->holdCountA = 0;
 16449  0348  0020               	movlb	0	; select bank0
 16450  0349  085E               	movf	flashy_Main@data,w
 16451  034A  0086               	movwf	6
 16452  034B  085F               	movf	flashy_Main@data+1,w
 16453  034C  0087               	movwf	7
 16454  034D  314A               	addfsr 1,10
 16455  034E  3000               	movlw	0
 16456  034F  3FC0               	movwi [0]fsr1
 16457  0350  3FC1               	movwi [1]fsr1
 16458                           
 16459                           ;flashy_task.c: 228: data->holdCountB = 0;
 16460  0351  085E               	movf	flashy_Main@data,w
 16461  0352  0086               	movwf	6
 16462  0353  085F               	movf	flashy_Main@data+1,w
 16463  0354  0087               	movwf	7
 16464  0355  314C               	addfsr 1,12
 16465  0356  3000               	movlw	0
 16466  0357  3FC0               	movwi [0]fsr1
 16467  0358  3FC1               	movwi [1]fsr1
 16468                           
 16469                           ;flashy_task.c: 229: data->holdCountX = 0;
 16470  0359  085E               	movf	flashy_Main@data,w
 16471  035A  0086               	movwf	6
 16472  035B  085F               	movf	flashy_Main@data+1,w
 16473  035C  0087               	movwf	7
 16474  035D  314E               	addfsr 1,14
 16475  035E  3000               	movlw	0
 16476  035F  3FC0               	movwi [0]fsr1
 16477  0360  3FC1               	movwi [1]fsr1
 16478                           
 16479                           ;flashy_task.c: 230: data->holdCountY = 0;
 16480  0361  085E               	movf	flashy_Main@data,w
 16481  0362  0086               	movwf	6
 16482  0363  085F               	movf	flashy_Main@data+1,w
 16483  0364  0087               	movwf	7
 16484  0365  3150               	addfsr 1,16
 16485  0366  3000               	movlw	0
 16486  0367  3FC0               	movwi [0]fsr1
 16487  0368  3FC1               	movwi [1]fsr1
 16488                           
 16489                           ;flashy_task.c: 231: data->holdCountXY = 0;
 16490  0369  085E               	movf	flashy_Main@data,w
 16491  036A  0086               	movwf	6
 16492  036B  085F               	movf	flashy_Main@data+1,w
 16493  036C  0087               	movwf	7
 16494  036D  3152               	addfsr 1,18
 16495  036E  3000               	movlw	0
 16496  036F  3FC0               	movwi [0]fsr1
 16497  0370  3FC1               	movwi [1]fsr1
 16498                           
 16499                           ;flashy_task.c: 232: data->holdCountAY += 1;
 16500  0371  085E               	movf	flashy_Main@data,w
 16501  0372  0086               	movwf	6
 16502  0373  085F               	movf	flashy_Main@data+1,w
 16503  0374  0087               	movwf	7
 16504  0375  3154               	addfsr 1,20
 16505  0376  3001               	movlw	1
 16506  0377  0781               	addwf	1,f
 16507  0378  3141               	addfsr 1,1
 16508  0379  1803               	skipnc
 16509  037A  0A81               	incf	1,f
 16510                           
 16511                           ;flashy_task.c: 233: data->holdCountAX = 0;
 16512  037B  085E               	movf	flashy_Main@data,w
 16513  037C  0086               	movwf	6
 16514  037D  085F               	movf	flashy_Main@data+1,w
 16515  037E  0087               	movwf	7
 16516  037F  3156               	addfsr 1,22
 16517  0380  3000               	movlw	0
 16518  0381  3FC0               	movwi [0]fsr1
 16519  0382  3FC1               	movwi [1]fsr1
 16520                           
 16521                           ;flashy_task.c: 234: data->noholdCount = 0;
 16522  0383  085E               	movf	flashy_Main@data,w
 16523  0384  0086               	movwf	6
 16524  0385  085F               	movf	flashy_Main@data+1,w
 16525  0386  0087               	movwf	7
 16526  0387  3158               	addfsr 1,24
 16527  0388  3000               	movlw	0
 16528  0389  3FC0               	movwi [0]fsr1
 16529  038A  3FC1               	movwi [1]fsr1
 16530                           
 16531                           ;flashy_task.c: 235: break;
 16532  038B  2E72               	goto	l7026
 16533  038C                     l6886:	
 16534                           ;flashy_task.c: 236: case 1 | 4:
 16535                           
 16536                           
 16537                           ;flashy_task.c: 237: if ( data->holdCountAX == 0 ){
 16538  038C  085E               	movf	flashy_Main@data,w
 16539  038D  0086               	movwf	6
 16540  038E  085F               	movf	flashy_Main@data+1,w
 16541  038F  0087               	movwf	7
 16542  0390  3156               	addfsr 1,22
 16543  0391  0016               	moviw fsr1++
 16544  0392  0401               	iorwf	1,w
 16545  0393  1D03               	btfss	3,2
 16546  0394  2BA5               	goto	l6892
 16547                           
 16548                           ;flashy_task.c: 238: if (flashy_sparkle_rate < 5)
 16549  0395  3000               	movlw	0
 16550  0396  0021               	movlb	1	; select bank1
 16551  0397  022B               	subwf	(_flashy_sparkle_rate+1)^(0+128),w
 16552  0398  3005               	movlw	5
 16553  0399  1903               	skipnz
 16554  039A  022A               	subwf	_flashy_sparkle_rate^(0+128),w
 16555  039B  1803               	skipnc
 16556  039C  2BA1               	goto	l1086
 16557                           
 16558                           ;flashy_task.c: 239: flashy_sparkle_rate=5;
 16559  039D  3005               	movlw	5
 16560  039E  00AA               	movwf	_flashy_sparkle_rate^(0+128)
 16561  039F  3000               	movlw	0
 16562  03A0  00AB               	movwf	(_flashy_sparkle_rate^(0+128)+1)
 16563  03A1                     l1086:	
 16564                           
 16565                           ;flashy_task.c: 240: flashy_sparkle_rate -= 5;
 16566  03A1  3005               	movlw	5
 16567  03A2  02AA               	subwf	_flashy_sparkle_rate^(0+128),f
 16568  03A3  3000               	movlw	0
 16569  03A4  3BAB               	subwfb	(_flashy_sparkle_rate+1)^(0+128),f
 16570  03A5                     l6892:	
 16571                           
 16572                           ;flashy_task.c: 241: }
 16573                           ;flashy_task.c: 243: data->holdCountA = 0;
 16574  03A5  0020               	movlb	0	; select bank0
 16575  03A6  085E               	movf	flashy_Main@data,w
 16576  03A7  0086               	movwf	6
 16577  03A8  085F               	movf	flashy_Main@data+1,w
 16578  03A9  0087               	movwf	7
 16579  03AA  314A               	addfsr 1,10
 16580  03AB  3000               	movlw	0
 16581  03AC  3FC0               	movwi [0]fsr1
 16582  03AD  3FC1               	movwi [1]fsr1
 16583                           
 16584                           ;flashy_task.c: 244: data->holdCountB = 0;
 16585  03AE  085E               	movf	flashy_Main@data,w
 16586  03AF  0086               	movwf	6
 16587  03B0  085F               	movf	flashy_Main@data+1,w
 16588  03B1  0087               	movwf	7
 16589  03B2  314C               	addfsr 1,12
 16590  03B3  3000               	movlw	0
 16591  03B4  3FC0               	movwi [0]fsr1
 16592  03B5  3FC1               	movwi [1]fsr1
 16593                           
 16594                           ;flashy_task.c: 245: data->holdCountX = 0;
 16595  03B6  085E               	movf	flashy_Main@data,w
 16596  03B7  0086               	movwf	6
 16597  03B8  085F               	movf	flashy_Main@data+1,w
 16598  03B9  0087               	movwf	7
 16599  03BA  314E               	addfsr 1,14
 16600  03BB  3000               	movlw	0
 16601  03BC  3FC0               	movwi [0]fsr1
 16602  03BD  3FC1               	movwi [1]fsr1
 16603                           
 16604                           ;flashy_task.c: 246: data->holdCountY = 0;
 16605  03BE  085E               	movf	flashy_Main@data,w
 16606  03BF  0086               	movwf	6
 16607  03C0  085F               	movf	flashy_Main@data+1,w
 16608  03C1  0087               	movwf	7
 16609  03C2  3150               	addfsr 1,16
 16610  03C3  3000               	movlw	0
 16611  03C4  3FC0               	movwi [0]fsr1
 16612  03C5  3FC1               	movwi [1]fsr1
 16613                           
 16614                           ;flashy_task.c: 247: data->holdCountXY = 0;
 16615  03C6  085E               	movf	flashy_Main@data,w
 16616  03C7  0086               	movwf	6
 16617  03C8  085F               	movf	flashy_Main@data+1,w
 16618  03C9  0087               	movwf	7
 16619  03CA  3152               	addfsr 1,18
 16620  03CB  3000               	movlw	0
 16621  03CC  3FC0               	movwi [0]fsr1
 16622  03CD  3FC1               	movwi [1]fsr1
 16623                           
 16624                           ;flashy_task.c: 248: data->holdCountAY = 0;
 16625  03CE  085E               	movf	flashy_Main@data,w
 16626  03CF  0086               	movwf	6
 16627  03D0  085F               	movf	flashy_Main@data+1,w
 16628  03D1  0087               	movwf	7
 16629  03D2  3154               	addfsr 1,20
 16630  03D3  3000               	movlw	0
 16631  03D4  3FC0               	movwi [0]fsr1
 16632  03D5  3FC1               	movwi [1]fsr1
 16633                           
 16634                           ;flashy_task.c: 249: data->holdCountAX += 1;
 16635  03D6  085E               	movf	flashy_Main@data,w
 16636  03D7  0086               	movwf	6
 16637  03D8  085F               	movf	flashy_Main@data+1,w
 16638  03D9  0087               	movwf	7
 16639  03DA  3156               	addfsr 1,22
 16640  03DB  3001               	movlw	1
 16641  03DC  0781               	addwf	1,f
 16642  03DD  3141               	addfsr 1,1
 16643  03DE  1803               	skipnc
 16644  03DF  0A81               	incf	1,f
 16645                           
 16646                           ;flashy_task.c: 250: data->noholdCount = 0;
 16647  03E0  085E               	movf	flashy_Main@data,w
 16648  03E1  0086               	movwf	6
 16649  03E2  085F               	movf	flashy_Main@data+1,w
 16650  03E3  0087               	movwf	7
 16651  03E4  3158               	addfsr 1,24
 16652  03E5  3000               	movlw	0
 16653  03E6  3FC0               	movwi [0]fsr1
 16654  03E7  3FC1               	movwi [1]fsr1
 16655                           
 16656                           ;flashy_task.c: 251: break;
 16657  03E8  2E72               	goto	l7026
 16658  03E9                     l6908:	
 16659                           ;flashy_task.c: 252: case 8:
 16660                           
 16661                           
 16662                           ;flashy_task.c: 254: if (data->holdCountY == 0 && data->blasterTickCount == 0){
 16663  03E9  085E               	movf	flashy_Main@data,w
 16664  03EA  0086               	movwf	6
 16665  03EB  085F               	movf	flashy_Main@data+1,w
 16666  03EC  0087               	movwf	7
 16667  03ED  3150               	addfsr 1,16
 16668  03EE  0016               	moviw fsr1++
 16669  03EF  0401               	iorwf	1,w
 16670  03F0  1D03               	btfss	3,2
 16671  03F1  2C3F               	goto	l6926
 16672  03F2  085E               	movf	flashy_Main@data,w
 16673  03F3  0086               	movwf	6
 16674  03F4  085F               	movf	flashy_Main@data+1,w
 16675  03F5  0087               	movwf	7
 16676  03F6  3147               	addfsr 1,7
 16677  03F7  0016               	moviw fsr1++
 16678  03F8  0401               	iorwf	1,w
 16679  03F9  1D03               	btfss	3,2
 16680  03FA  2C3F               	goto	l6926
 16681                           
 16682                           ;flashy_task.c: 256: nullifyBadge_userLedsSet(data->badge, 0x0);
 16683  03FB  3000               	movlw	0
 16684  03FC  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 16685  03FD  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 16686  03FE  085E               	movf	flashy_Main@data,w
 16687  03FF  0086               	movwf	6
 16688  0400  085F               	movf	flashy_Main@data+1,w
 16689  0401  0087               	movwf	7
 16690  0402  0801               	movf	1,w
 16691  0403  3199  2160  3180   	fcall	_nullifyBadge_userLedsSet
 16692                           
 16693                           ;flashy_task.c: 258: data->displayTickCount = 0;
 16694  0406  0020               	movlb	0	; select bank0
 16695  0407  085E               	movf	flashy_Main@data,w
 16696  0408  0086               	movwf	6
 16697  0409  085F               	movf	flashy_Main@data+1,w
 16698  040A  0087               	movwf	7
 16699  040B  3144               	addfsr 1,4
 16700  040C  3000               	movlw	0
 16701  040D  3FC0               	movwi [0]fsr1
 16702  040E  3FC1               	movwi [1]fsr1
 16703                           
 16704                           ;flashy_task.c: 259: data->blasterTickCount = 100;
 16705  040F  085E               	movf	flashy_Main@data,w
 16706  0410  0086               	movwf	6
 16707  0411  085F               	movf	flashy_Main@data+1,w
 16708  0412  0087               	movwf	7
 16709  0413  3147               	addfsr 1,7
 16710  0414  3064               	movlw	100
 16711  0415  3FC0               	movwi [0]fsr1
 16712  0416  3000               	movlw	0
 16713  0417  3FC1               	movwi [1]fsr1
 16714                           
 16715                           ;flashy_task.c: 260: data->delayTickCount = 5;
 16716  0418  085E               	movf	flashy_Main@data,w
 16717  0419  0086               	movwf	6
 16718  041A  085F               	movf	flashy_Main@data+1,w
 16719  041B  0087               	movwf	7
 16720  041C  3141               	addfsr 1,1
 16721  041D  3005               	movlw	5
 16722  041E  3FC0               	movwi [0]fsr1
 16723  041F  3000               	movlw	0
 16724  0420  3FC1               	movwi [1]fsr1
 16725                           
 16726                           ;flashy_task.c: 262: data->led_state = FLASHY_STATE_LED_SHOT;
 16727  0421  085E               	movf	flashy_Main@data,w
 16728  0422  3E03               	addlw	3
 16729  0423  00D4               	movwf	??_flashy_Main
 16730  0424  3000               	movlw	0
 16731  0425  3D5F               	addwfc	flashy_Main@data+1,w
 16732  0426  00D5               	movwf	??_flashy_Main+1
 16733  0427  0854               	movf	??_flashy_Main,w
 16734  0428  0086               	movwf	6
 16735  0429  0855               	movf	??_flashy_Main+1,w
 16736  042A  0087               	movwf	7
 16737  042B  3001               	movlw	1
 16738  042C  0081               	movwf	1
 16739                           
 16740                           ;flashy_task.c: 263: data->display_state = FLASHY_STATE_DISPLAY_BLASTER;
 16741  042D  085E               	movf	flashy_Main@data,w
 16742  042E  3E06               	addlw	6
 16743  042F  00D4               	movwf	??_flashy_Main
 16744  0430  3000               	movlw	0
 16745  0431  3D5F               	addwfc	flashy_Main@data+1,w
 16746  0432  00D5               	movwf	??_flashy_Main+1
 16747  0433  0854               	movf	??_flashy_Main,w
 16748  0434  0086               	movwf	6
 16749  0435  0855               	movf	??_flashy_Main+1,w
 16750  0436  0087               	movwf	7
 16751  0437  3002               	movlw	2
 16752  0438  0081               	movwf	1
 16753                           
 16754                           ;flashy_task.c: 264: data->blaster_state = FLASHY_BLASTER_SHOOTING_STATE;
 16755  0439  085E               	movf	flashy_Main@data,w
 16756  043A  0086               	movwf	6
 16757  043B  085F               	movf	flashy_Main@data+1,w
 16758  043C  0087               	movwf	7
 16759  043D  3149               	addfsr 1,9
 16760  043E  0181               	clrf	1
 16761  043F                     l6926:	
 16762                           
 16763                           ;flashy_task.c: 265: }
 16764                           ;flashy_task.c: 267: data->holdCountA = 0;
 16765  043F  085E               	movf	flashy_Main@data,w
 16766  0440  0086               	movwf	6
 16767  0441  085F               	movf	flashy_Main@data+1,w
 16768  0442  0087               	movwf	7
 16769  0443  314A               	addfsr 1,10
 16770  0444  3000               	movlw	0
 16771  0445  3FC0               	movwi [0]fsr1
 16772  0446  3FC1               	movwi [1]fsr1
 16773                           
 16774                           ;flashy_task.c: 268: data->holdCountB = 0;
 16775  0447  085E               	movf	flashy_Main@data,w
 16776  0448  0086               	movwf	6
 16777  0449  085F               	movf	flashy_Main@data+1,w
 16778  044A  0087               	movwf	7
 16779  044B  314C               	addfsr 1,12
 16780  044C  3000               	movlw	0
 16781  044D  3FC0               	movwi [0]fsr1
 16782  044E  3FC1               	movwi [1]fsr1
 16783                           
 16784                           ;flashy_task.c: 269: data->holdCountX = 0;
 16785  044F  085E               	movf	flashy_Main@data,w
 16786  0450  0086               	movwf	6
 16787  0451  085F               	movf	flashy_Main@data+1,w
 16788  0452  0087               	movwf	7
 16789  0453  314E               	addfsr 1,14
 16790  0454  3000               	movlw	0
 16791  0455  3FC0               	movwi [0]fsr1
 16792  0456  3FC1               	movwi [1]fsr1
 16793                           
 16794                           ;flashy_task.c: 270: data->holdCountY += 1;
 16795  0457  085E               	movf	flashy_Main@data,w
 16796  0458  0086               	movwf	6
 16797  0459  085F               	movf	flashy_Main@data+1,w
 16798  045A  0087               	movwf	7
 16799  045B  3150               	addfsr 1,16
 16800  045C  3001               	movlw	1
 16801  045D  0781               	addwf	1,f
 16802  045E  3141               	addfsr 1,1
 16803  045F  1803               	skipnc
 16804  0460  0A81               	incf	1,f
 16805                           
 16806                           ;flashy_task.c: 271: data->holdCountXY = 0;
 16807  0461  085E               	movf	flashy_Main@data,w
 16808  0462  0086               	movwf	6
 16809  0463  085F               	movf	flashy_Main@data+1,w
 16810  0464  0087               	movwf	7
 16811  0465  3152               	addfsr 1,18
 16812  0466  3000               	movlw	0
 16813  0467  3FC0               	movwi [0]fsr1
 16814  0468  3FC1               	movwi [1]fsr1
 16815                           
 16816                           ;flashy_task.c: 272: data->holdCountAY = 0;
 16817  0469  085E               	movf	flashy_Main@data,w
 16818  046A  0086               	movwf	6
 16819  046B  085F               	movf	flashy_Main@data+1,w
 16820  046C  0087               	movwf	7
 16821  046D  3154               	addfsr 1,20
 16822  046E  3000               	movlw	0
 16823  046F  3FC0               	movwi [0]fsr1
 16824  0470  3FC1               	movwi [1]fsr1
 16825                           
 16826                           ;flashy_task.c: 273: data->holdCountAX = 0;
 16827  0471  085E               	movf	flashy_Main@data,w
 16828  0472  0086               	movwf	6
 16829  0473  085F               	movf	flashy_Main@data+1,w
 16830  0474  0087               	movwf	7
 16831  0475  3156               	addfsr 1,22
 16832  0476  3000               	movlw	0
 16833  0477  3FC0               	movwi [0]fsr1
 16834  0478  3FC1               	movwi [1]fsr1
 16835                           
 16836                           ;flashy_task.c: 274: data->noholdCount = 0;
 16837  0479  085E               	movf	flashy_Main@data,w
 16838  047A  0086               	movwf	6
 16839  047B  085F               	movf	flashy_Main@data+1,w
 16840  047C  0087               	movwf	7
 16841  047D  3158               	addfsr 1,24
 16842  047E  3000               	movlw	0
 16843  047F  3FC0               	movwi [0]fsr1
 16844  0480  3FC1               	movwi [1]fsr1
 16845                           
 16846                           ;flashy_task.c: 275: break;
 16847  0481  2E72               	goto	l7026
 16848  0482                     l6942:	
 16849                           ;flashy_task.c: 276: case 2:
 16850                           
 16851                           
 16852                           ;flashy_task.c: 278: if (data->holdCountB == 0){
 16853  0482  085E               	movf	flashy_Main@data,w
 16854  0483  0086               	movwf	6
 16855  0484  085F               	movf	flashy_Main@data+1,w
 16856  0485  0087               	movwf	7
 16857  0486  314C               	addfsr 1,12
 16858  0487  0016               	moviw fsr1++
 16859  0488  0401               	iorwf	1,w
 16860  0489  1D03               	btfss	3,2
 16861  048A  2CB0               	goto	l6952
 16862                           
 16863                           ;flashy_task.c: 279: data->display_state = FLASHY_STATE_DISPLAY;
 16864  048B  085E               	movf	flashy_Main@data,w
 16865  048C  0086               	movwf	6
 16866  048D  085F               	movf	flashy_Main@data+1,w
 16867  048E  0087               	movwf	7
 16868  048F  3146               	addfsr 1,6
 16869  0490  0181               	clrf	1
 16870                           
 16871                           ;flashy_task.c: 280: if (flashy_option_idx == flashy_option_size - 1){
 16872  0491  0021               	movlb	1	; select bank1
 16873  0492  0824               	movf	_flashy_option_size^(0+128),w
 16874  0493  3EFF               	addlw	255
 16875  0494  0020               	movlb	0	; select bank0
 16876  0495  00D4               	movwf	??_flashy_Main
 16877  0496  30FF               	movlw	255
 16878  0497  0021               	movlb	1	; select bank1
 16879  0498  3D25               	addwfc	(_flashy_option_size+1)^(0+128),w
 16880  0499  0020               	movlb	0	; select bank0
 16881  049A  00D5               	movwf	??_flashy_Main+1
 16882  049B  0021               	movlb	1	; select bank1
 16883  049C  0827               	movf	(_flashy_option_idx+1)^(0+128),w
 16884  049D  0020               	movlb	0	; select bank0
 16885  049E  0655               	xorwf	??_flashy_Main+1,w
 16886  049F  1D03               	skipz
 16887  04A0  2CA5               	goto	u3925
 16888  04A1  0021               	movlb	1	; select bank1
 16889  04A2  0826               	movf	_flashy_option_idx^(0+128),w
 16890  04A3  0020               	movlb	0	; select bank0
 16891  04A4  0654               	xorwf	??_flashy_Main,w
 16892  04A5                     u3925:	
 16893  04A5  1D03               	skipz
 16894  04A6  2CAB               	goto	l6950
 16895                           
 16896                           ;flashy_task.c: 281: flashy_option_idx = 0;
 16897  04A7  0021               	movlb	1	; select bank1
 16898  04A8  01A6               	clrf	_flashy_option_idx^(0+128)
 16899  04A9  01A7               	clrf	(_flashy_option_idx+1)^(0+128)
 16900                           
 16901                           ;flashy_task.c: 282: }
 16902  04AA  2CB0               	goto	l6952
 16903  04AB                     l6950:	
 16904                           
 16905                           ;flashy_task.c: 283: else {
 16906                           ;flashy_task.c: 284: flashy_option_idx += 1;
 16907  04AB  3001               	movlw	1
 16908  04AC  0021               	movlb	1	; select bank1
 16909  04AD  07A6               	addwf	_flashy_option_idx^(0+128),f
 16910  04AE  3000               	movlw	0
 16911  04AF  3DA7               	addwfc	(_flashy_option_idx+1)^(0+128),f
 16912  04B0                     l6952:	
 16913                           
 16914                           ;flashy_task.c: 285: }
 16915                           ;flashy_task.c: 286: }
 16916                           ;flashy_task.c: 288: data->holdCountA = 0;
 16917  04B0  0020               	movlb	0	; select bank0
 16918  04B1  085E               	movf	flashy_Main@data,w
 16919  04B2  0086               	movwf	6
 16920  04B3  085F               	movf	flashy_Main@data+1,w
 16921  04B4  0087               	movwf	7
 16922  04B5  314A               	addfsr 1,10
 16923  04B6  3000               	movlw	0
 16924  04B7  3FC0               	movwi [0]fsr1
 16925  04B8  3FC1               	movwi [1]fsr1
 16926                           
 16927                           ;flashy_task.c: 289: data->holdCountB += 1;
 16928  04B9  085E               	movf	flashy_Main@data,w
 16929  04BA  0086               	movwf	6
 16930  04BB  085F               	movf	flashy_Main@data+1,w
 16931  04BC  0087               	movwf	7
 16932  04BD  314C               	addfsr 1,12
 16933  04BE  3001               	movlw	1
 16934  04BF  0781               	addwf	1,f
 16935  04C0  3141               	addfsr 1,1
 16936  04C1  1803               	skipnc
 16937  04C2  0A81               	incf	1,f
 16938                           
 16939                           ;flashy_task.c: 290: data->holdCountX = 0;
 16940  04C3  085E               	movf	flashy_Main@data,w
 16941  04C4  0086               	movwf	6
 16942  04C5  085F               	movf	flashy_Main@data+1,w
 16943  04C6  0087               	movwf	7
 16944  04C7  314E               	addfsr 1,14
 16945  04C8  3000               	movlw	0
 16946  04C9  3FC0               	movwi [0]fsr1
 16947  04CA  3FC1               	movwi [1]fsr1
 16948                           
 16949                           ;flashy_task.c: 291: data->holdCountY = 0;
 16950  04CB  085E               	movf	flashy_Main@data,w
 16951  04CC  0086               	movwf	6
 16952  04CD  085F               	movf	flashy_Main@data+1,w
 16953  04CE  0087               	movwf	7
 16954  04CF  3150               	addfsr 1,16
 16955  04D0  3000               	movlw	0
 16956  04D1  3FC0               	movwi [0]fsr1
 16957  04D2  3FC1               	movwi [1]fsr1
 16958                           
 16959                           ;flashy_task.c: 292: data->holdCountXY = 0;
 16960  04D3  085E               	movf	flashy_Main@data,w
 16961  04D4  0086               	movwf	6
 16962  04D5  085F               	movf	flashy_Main@data+1,w
 16963  04D6  0087               	movwf	7
 16964  04D7  3152               	addfsr 1,18
 16965  04D8  3000               	movlw	0
 16966  04D9  3FC0               	movwi [0]fsr1
 16967  04DA  3FC1               	movwi [1]fsr1
 16968                           
 16969                           ;flashy_task.c: 293: data->holdCountAY = 0;
 16970  04DB  085E               	movf	flashy_Main@data,w
 16971  04DC  0086               	movwf	6
 16972  04DD  085F               	movf	flashy_Main@data+1,w
 16973  04DE  0087               	movwf	7
 16974  04DF  3154               	addfsr 1,20
 16975  04E0  3000               	movlw	0
 16976  04E1  3FC0               	movwi [0]fsr1
 16977  04E2  3FC1               	movwi [1]fsr1
 16978                           
 16979                           ;flashy_task.c: 294: data->holdCountAX = 0;
 16980  04E3  085E               	movf	flashy_Main@data,w
 16981  04E4  0086               	movwf	6
 16982  04E5  085F               	movf	flashy_Main@data+1,w
 16983  04E6  0087               	movwf	7
 16984  04E7  3156               	addfsr 1,22
 16985  04E8  3000               	movlw	0
 16986  04E9  3FC0               	movwi [0]fsr1
 16987  04EA  3FC1               	movwi [1]fsr1
 16988                           
 16989                           ;flashy_task.c: 295: data->noholdCount = 0;
 16990  04EB  085E               	movf	flashy_Main@data,w
 16991  04EC  0086               	movwf	6
 16992  04ED  085F               	movf	flashy_Main@data+1,w
 16993  04EE  0087               	movwf	7
 16994  04EF  3158               	addfsr 1,24
 16995  04F0  3000               	movlw	0
 16996  04F1  3FC0               	movwi [0]fsr1
 16997  04F2  3FC1               	movwi [1]fsr1
 16998                           
 16999                           ;flashy_task.c: 296: break;
 17000  04F3  2E72               	goto	l7026
 17001  04F4                     l6968:	
 17002                           ;flashy_task.c: 298: case 1:
 17003                           
 17004                           
 17005                           ;flashy_task.c: 299: if ( data->holdCountA == 0){
 17006  04F4  085E               	movf	flashy_Main@data,w
 17007  04F5  0086               	movwf	6
 17008  04F6  085F               	movf	flashy_Main@data+1,w
 17009  04F7  0087               	movwf	7
 17010  04F8  314A               	addfsr 1,10
 17011  04F9  0016               	moviw fsr1++
 17012  04FA  0401               	iorwf	1,w
 17013  04FB  1D03               	btfss	3,2
 17014  04FC  2D1E               	goto	l1094
 17015                           
 17016                           ;flashy_task.c: 300: if (data->led_state != FLASHY_STATE_SPARKLE){
 17017  04FD  085E               	movf	flashy_Main@data,w
 17018  04FE  0086               	movwf	6
 17019  04FF  085F               	movf	flashy_Main@data+1,w
 17020  0500  0087               	movwf	7
 17021  0501  3143               	addfsr 1,3
 17022  0502  3002               	movlw	2
 17023  0503  0601               	xorwf	1,w
 17024  0504  1903               	btfsc	3,2
 17025  0505  2D12               	goto	l6974
 17026                           
 17027                           ;flashy_task.c: 301: data->led_state = FLASHY_STATE_SPARKLE;
 17028  0506  085E               	movf	flashy_Main@data,w
 17029  0507  3E03               	addlw	3
 17030  0508  00D4               	movwf	??_flashy_Main
 17031  0509  3000               	movlw	0
 17032  050A  3D5F               	addwfc	flashy_Main@data+1,w
 17033  050B  00D5               	movwf	??_flashy_Main+1
 17034  050C  0854               	movf	??_flashy_Main,w
 17035  050D  0086               	movwf	6
 17036  050E  0855               	movf	??_flashy_Main+1,w
 17037  050F  0087               	movwf	7
 17038  0510  3002               	movlw	2
 17039  0511  2D1D               	goto	L8
 17040  0512                     l6974:	
 17041                           ;flashy_task.c: 302: }
 17042                           
 17043                           
 17044                           ;flashy_task.c: 303: else {
 17045                           ;flashy_task.c: 304: data->led_state = FLASHY_STATE_CIRCLE;
 17046  0512  085E               	movf	flashy_Main@data,w
 17047  0513  3E03               	addlw	3
 17048  0514  00D4               	movwf	??_flashy_Main
 17049  0515  3000               	movlw	0
 17050  0516  3D5F               	addwfc	flashy_Main@data+1,w
 17051  0517  00D5               	movwf	??_flashy_Main+1
 17052  0518  0854               	movf	??_flashy_Main,w
 17053  0519  0086               	movwf	6
 17054  051A  0855               	movf	??_flashy_Main+1,w
 17055  051B  0087               	movwf	7
 17056  051C  3003               	movlw	3
 17057  051D                     L8:	
 17058  051D  0081               	movwf	1
 17059  051E                     l1094:	
 17060                           
 17061                           ;flashy_task.c: 305: }
 17062                           ;flashy_task.c: 306: }
 17063                           ;flashy_task.c: 308: data->holdCountA += 1;
 17064  051E  085E               	movf	flashy_Main@data,w
 17065  051F  0086               	movwf	6
 17066  0520  085F               	movf	flashy_Main@data+1,w
 17067  0521  0087               	movwf	7
 17068  0522  314A               	addfsr 1,10
 17069  0523  3001               	movlw	1
 17070  0524  0781               	addwf	1,f
 17071  0525  3141               	addfsr 1,1
 17072  0526  1803               	skipnc
 17073  0527  0A81               	incf	1,f
 17074                           
 17075                           ;flashy_task.c: 309: data->holdCountB = 0;
 17076  0528  085E               	movf	flashy_Main@data,w
 17077  0529  0086               	movwf	6
 17078  052A  085F               	movf	flashy_Main@data+1,w
 17079  052B  0087               	movwf	7
 17080  052C  314C               	addfsr 1,12
 17081  052D  3000               	movlw	0
 17082  052E  3FC0               	movwi [0]fsr1
 17083  052F  3FC1               	movwi [1]fsr1
 17084                           
 17085                           ;flashy_task.c: 310: data->holdCountX = 0;
 17086  0530  085E               	movf	flashy_Main@data,w
 17087  0531  0086               	movwf	6
 17088  0532  085F               	movf	flashy_Main@data+1,w
 17089  0533  0087               	movwf	7
 17090  0534  314E               	addfsr 1,14
 17091  0535  3000               	movlw	0
 17092  0536  3FC0               	movwi [0]fsr1
 17093  0537  3FC1               	movwi [1]fsr1
 17094                           
 17095                           ;flashy_task.c: 311: data->holdCountY = 0;
 17096  0538  085E               	movf	flashy_Main@data,w
 17097  0539  0086               	movwf	6
 17098  053A  085F               	movf	flashy_Main@data+1,w
 17099  053B  0087               	movwf	7
 17100  053C  3150               	addfsr 1,16
 17101  053D  3000               	movlw	0
 17102  053E  3FC0               	movwi [0]fsr1
 17103  053F  3FC1               	movwi [1]fsr1
 17104                           
 17105                           ;flashy_task.c: 312: data->holdCountXY = 0;
 17106  0540  085E               	movf	flashy_Main@data,w
 17107  0541  0086               	movwf	6
 17108  0542  085F               	movf	flashy_Main@data+1,w
 17109  0543  0087               	movwf	7
 17110  0544  3152               	addfsr 1,18
 17111  0545  3000               	movlw	0
 17112  0546  3FC0               	movwi [0]fsr1
 17113  0547  3FC1               	movwi [1]fsr1
 17114                           
 17115                           ;flashy_task.c: 313: data->holdCountAY = 0;
 17116  0548  085E               	movf	flashy_Main@data,w
 17117  0549  0086               	movwf	6
 17118  054A  085F               	movf	flashy_Main@data+1,w
 17119  054B  0087               	movwf	7
 17120  054C  3154               	addfsr 1,20
 17121  054D  3000               	movlw	0
 17122  054E  3FC0               	movwi [0]fsr1
 17123  054F  3FC1               	movwi [1]fsr1
 17124                           
 17125                           ;flashy_task.c: 314: data->holdCountAX = 0;
 17126  0550  085E               	movf	flashy_Main@data,w
 17127  0551  0086               	movwf	6
 17128  0552  085F               	movf	flashy_Main@data+1,w
 17129  0553  0087               	movwf	7
 17130  0554  3156               	addfsr 1,22
 17131  0555  3000               	movlw	0
 17132  0556  3FC0               	movwi [0]fsr1
 17133  0557  3FC1               	movwi [1]fsr1
 17134                           
 17135                           ;flashy_task.c: 315: data->noholdCount = 0;
 17136  0558  085E               	movf	flashy_Main@data,w
 17137  0559  0086               	movwf	6
 17138  055A  085F               	movf	flashy_Main@data+1,w
 17139  055B  0087               	movwf	7
 17140  055C  3158               	addfsr 1,24
 17141  055D  3000               	movlw	0
 17142  055E  3FC0               	movwi [0]fsr1
 17143  055F  3FC1               	movwi [1]fsr1
 17144                           
 17145                           ;flashy_task.c: 316: break;
 17146  0560  2E72               	goto	l7026
 17147  0561                     l6990:	
 17148                           ;flashy_task.c: 317: case 0:
 17149                           
 17150                           
 17151                           ;flashy_task.c: 319: data->holdCountA = 0;
 17152  0561  085E               	movf	flashy_Main@data,w
 17153  0562  0086               	movwf	6
 17154  0563  085F               	movf	flashy_Main@data+1,w
 17155  0564  0087               	movwf	7
 17156  0565  314A               	addfsr 1,10
 17157  0566  3000               	movlw	0
 17158  0567  3FC0               	movwi [0]fsr1
 17159  0568  3FC1               	movwi [1]fsr1
 17160                           
 17161                           ;flashy_task.c: 320: data->holdCountB = 0;
 17162  0569  085E               	movf	flashy_Main@data,w
 17163  056A  0086               	movwf	6
 17164  056B  085F               	movf	flashy_Main@data+1,w
 17165  056C  0087               	movwf	7
 17166  056D  314C               	addfsr 1,12
 17167  056E  3000               	movlw	0
 17168  056F  3FC0               	movwi [0]fsr1
 17169  0570  3FC1               	movwi [1]fsr1
 17170                           
 17171                           ;flashy_task.c: 321: data->holdCountX = 0;
 17172  0571  085E               	movf	flashy_Main@data,w
 17173  0572  0086               	movwf	6
 17174  0573  085F               	movf	flashy_Main@data+1,w
 17175  0574  0087               	movwf	7
 17176  0575  314E               	addfsr 1,14
 17177  0576  3000               	movlw	0
 17178  0577  3FC0               	movwi [0]fsr1
 17179  0578  3FC1               	movwi [1]fsr1
 17180                           
 17181                           ;flashy_task.c: 322: data->holdCountY = 0;
 17182  0579  085E               	movf	flashy_Main@data,w
 17183  057A  0086               	movwf	6
 17184  057B  085F               	movf	flashy_Main@data+1,w
 17185  057C  0087               	movwf	7
 17186  057D  3150               	addfsr 1,16
 17187  057E  3000               	movlw	0
 17188  057F  3FC0               	movwi [0]fsr1
 17189  0580  3FC1               	movwi [1]fsr1
 17190                           
 17191                           ;flashy_task.c: 323: data->holdCountXY = 0;
 17192  0581  085E               	movf	flashy_Main@data,w
 17193  0582  0086               	movwf	6
 17194  0583  085F               	movf	flashy_Main@data+1,w
 17195  0584  0087               	movwf	7
 17196  0585  3152               	addfsr 1,18
 17197  0586  3000               	movlw	0
 17198  0587  3FC0               	movwi [0]fsr1
 17199  0588  3FC1               	movwi [1]fsr1
 17200                           
 17201                           ;flashy_task.c: 324: data->holdCountAY = 0;
 17202  0589  085E               	movf	flashy_Main@data,w
 17203  058A  0086               	movwf	6
 17204  058B  085F               	movf	flashy_Main@data+1,w
 17205  058C  0087               	movwf	7
 17206  058D  3154               	addfsr 1,20
 17207  058E  3000               	movlw	0
 17208  058F  3FC0               	movwi [0]fsr1
 17209  0590  3FC1               	movwi [1]fsr1
 17210                           
 17211                           ;flashy_task.c: 325: data->holdCountAX = 0;
 17212  0591  085E               	movf	flashy_Main@data,w
 17213  0592  0086               	movwf	6
 17214  0593  085F               	movf	flashy_Main@data+1,w
 17215  0594  0087               	movwf	7
 17216  0595  3156               	addfsr 1,22
 17217  0596  3000               	movlw	0
 17218  0597  3FC0               	movwi [0]fsr1
 17219  0598  3FC1               	movwi [1]fsr1
 17220                           
 17221                           ;flashy_task.c: 326: data->noholdCount += 1;
 17222  0599  085E               	movf	flashy_Main@data,w
 17223  059A  0086               	movwf	6
 17224  059B  085F               	movf	flashy_Main@data+1,w
 17225  059C  0087               	movwf	7
 17226  059D  3158               	addfsr 1,24
 17227  059E  3001               	movlw	1
 17228  059F  0781               	addwf	1,f
 17229  05A0  3141               	addfsr 1,1
 17230  05A1  1803               	skipnc
 17231  05A2  0A81               	incf	1,f
 17232                           
 17233                           ;flashy_task.c: 327: break;
 17234  05A3  2E72               	goto	l7026
 17235  05A4                     l6994:	
 17236                           ;flashy_task.c: 328: default:
 17237                           
 17238                           
 17239                           ;flashy_task.c: 329: data->holdCountA = 0;
 17240  05A4  085E               	movf	flashy_Main@data,w
 17241  05A5  0086               	movwf	6
 17242  05A6  085F               	movf	flashy_Main@data+1,w
 17243  05A7  0087               	movwf	7
 17244  05A8  314A               	addfsr 1,10
 17245  05A9  3000               	movlw	0
 17246  05AA  3FC0               	movwi [0]fsr1
 17247  05AB  3FC1               	movwi [1]fsr1
 17248                           
 17249                           ;flashy_task.c: 330: data->holdCountB = 0;
 17250  05AC  085E               	movf	flashy_Main@data,w
 17251  05AD  0086               	movwf	6
 17252  05AE  085F               	movf	flashy_Main@data+1,w
 17253  05AF  0087               	movwf	7
 17254  05B0  314C               	addfsr 1,12
 17255  05B1  3000               	movlw	0
 17256  05B2  3FC0               	movwi [0]fsr1
 17257  05B3  3FC1               	movwi [1]fsr1
 17258                           
 17259                           ;flashy_task.c: 331: data->holdCountX = 0;
 17260  05B4  085E               	movf	flashy_Main@data,w
 17261  05B5  0086               	movwf	6
 17262  05B6  085F               	movf	flashy_Main@data+1,w
 17263  05B7  0087               	movwf	7
 17264  05B8  314E               	addfsr 1,14
 17265  05B9  3000               	movlw	0
 17266  05BA  3FC0               	movwi [0]fsr1
 17267  05BB  3FC1               	movwi [1]fsr1
 17268                           
 17269                           ;flashy_task.c: 332: data->holdCountY = 0;
 17270  05BC  085E               	movf	flashy_Main@data,w
 17271  05BD  0086               	movwf	6
 17272  05BE  085F               	movf	flashy_Main@data+1,w
 17273  05BF  0087               	movwf	7
 17274  05C0  3150               	addfsr 1,16
 17275  05C1  3000               	movlw	0
 17276  05C2  3FC0               	movwi [0]fsr1
 17277  05C3  3FC1               	movwi [1]fsr1
 17278                           
 17279                           ;flashy_task.c: 333: data->holdCountXY = 0;
 17280  05C4  085E               	movf	flashy_Main@data,w
 17281  05C5  0086               	movwf	6
 17282  05C6  085F               	movf	flashy_Main@data+1,w
 17283  05C7  0087               	movwf	7
 17284  05C8  3152               	addfsr 1,18
 17285  05C9  3000               	movlw	0
 17286  05CA  3FC0               	movwi [0]fsr1
 17287  05CB  3FC1               	movwi [1]fsr1
 17288                           
 17289                           ;flashy_task.c: 334: data->holdCountAY = 0;
 17290  05CC  085E               	movf	flashy_Main@data,w
 17291  05CD  0086               	movwf	6
 17292  05CE  085F               	movf	flashy_Main@data+1,w
 17293  05CF  0087               	movwf	7
 17294  05D0  3154               	addfsr 1,20
 17295  05D1  3000               	movlw	0
 17296  05D2  3FC0               	movwi [0]fsr1
 17297  05D3  3FC1               	movwi [1]fsr1
 17298                           
 17299                           ;flashy_task.c: 335: data->holdCountAX = 0;
 17300  05D4  085E               	movf	flashy_Main@data,w
 17301  05D5  0086               	movwf	6
 17302  05D6  085F               	movf	flashy_Main@data+1,w
 17303  05D7  0087               	movwf	7
 17304  05D8  3156               	addfsr 1,22
 17305  05D9  3000               	movlw	0
 17306  05DA  3FC0               	movwi [0]fsr1
 17307  05DB  3FC1               	movwi [1]fsr1
 17308                           
 17309                           ;flashy_task.c: 336: data->noholdCount = 0;
 17310  05DC  085E               	movf	flashy_Main@data,w
 17311  05DD  0086               	movwf	6
 17312  05DE  085F               	movf	flashy_Main@data+1,w
 17313  05DF  0087               	movwf	7
 17314  05E0  3158               	addfsr 1,24
 17315  05E1  3000               	movlw	0
 17316  05E2  3FC0               	movwi [0]fsr1
 17317  05E3  3FC1               	movwi [1]fsr1
 17318                           
 17319                           ;flashy_task.c: 337: }
 17320  05E4  2E72               	goto	l7026
 17321  05E5                     l6996:	
 17322                           
 17323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17324                           ; Switch size 1, requested type "space"
 17325                           ; Number of cases is 1, Range of values is 0 to 0
 17326                           ; switch strategies available:
 17327                           ; Name         Instructions Cycles
 17328                           ; simple_byte            4     3 (average)
 17329                           ; direct_byte            8     6 (fixed)
 17330                           ; jumptable            260     6 (fixed)
 17331                           ;	Chosen strategy is simple_byte
 17332  05E5  085D               	movf	flashy_Main@buttonPressed+1,w
 17333  05E6  3A00               	xorlw	0	; case 0
 17334  05E7  1903               	skipnz
 17335  05E8  2DEA               	goto	l7800
 17336  05E9  2DA4               	goto	l6994
 17337  05EA                     l7800:	
 17338                           
 17339                           ; Switch size 1, requested type "space"
 17340                           ; Number of cases is 7, Range of values is 0 to 12
 17341                           ; switch strategies available:
 17342                           ; Name         Instructions Cycles
 17343                           ; simple_byte           22    12 (average)
 17344                           ; direct_byte           32     6 (fixed)
 17345                           ; jumptable            260     6 (fixed)
 17346                           ;	Chosen strategy is simple_byte
 17347  05EA  085C               	movf	flashy_Main@buttonPressed,w
 17348  05EB  3A00               	xorlw	0	; case 0
 17349  05EC  1903               	skipnz
 17350  05ED  2D61               	goto	l6990
 17351  05EE  3A01               	xorlw	1	; case 1
 17352  05EF  1903               	skipnz
 17353  05F0  2CF4               	goto	l6968
 17354  05F1  3A03               	xorlw	3	; case 2
 17355  05F2  1903               	skipnz
 17356  05F3  2C82               	goto	l6942
 17357  05F4  3A07               	xorlw	7	; case 5
 17358  05F5  1903               	skipnz
 17359  05F6  2B8C               	goto	l6886
 17360  05F7  3A0D               	xorlw	13	; case 8
 17361  05F8  1903               	skipnz
 17362  05F9  2BE9               	goto	l6908
 17363  05FA  3A01               	xorlw	1	; case 9
 17364  05FB  1903               	skipnz
 17365  05FC  2B2F               	goto	l6864
 17366  05FD  3A05               	xorlw	5	; case 12
 17367  05FE  1903               	skipnz
 17368  05FF  2ADD               	goto	l6844
 17369  0600  2DA4               	goto	l6994
 17370                           
 17371                           ;flashy_task.c: 340: switch (data->blaster_state) {
 17372  0601  2E72               	goto	l7026
 17373  0602                     l6998:	
 17374                           ;flashy_task.c: 341: case FLASHY_BLASTER_SHOOTING_STATE:
 17375                           
 17376                           
 17377                           ;flashy_task.c: 343: if (data->blasterTickCount == 100) {
 17378  0602  085E               	movf	flashy_Main@data,w
 17379  0603  0086               	movwf	6
 17380  0604  085F               	movf	flashy_Main@data+1,w
 17381  0605  0087               	movwf	7
 17382  0606  3147               	addfsr 1,7
 17383  0607  0016               	moviw fsr1++
 17384  0608  3A64               	xorlw	100
 17385  0609  00D4               	movwf	??_flashy_Main
 17386  060A  0016               	moviw fsr1++
 17387  060B  04D4               	iorwf	??_flashy_Main,f
 17388  060C  1D03               	btfss	3,2
 17389  060D  2E19               	goto	l7004
 17390                           
 17391                           ;flashy_task.c: 344: nullifyBadge_irTxRegister(data->badge);
 17392  060E  085E               	movf	flashy_Main@data,w
 17393  060F  0086               	movwf	6
 17394  0610  085F               	movf	flashy_Main@data+1,w
 17395  0611  0087               	movwf	7
 17396  0612  0801               	movf	1,w
 17397  0613  3199  2189  3180   	fcall	_nullifyBadge_irTxRegister
 17398                           
 17399                           ;flashy_task.c: 345: nullifyBadge_irTxSet();
 17400  0616  3188  20A9  3180   	fcall	_nullifyBadge_irTxSet
 17401  0619                     l7004:	
 17402                           
 17403                           ;flashy_task.c: 346: }
 17404                           ;flashy_task.c: 347: if (data->blasterTickCount == 100 - 1 ){
 17405  0619  0020               	movlb	0	; select bank0
 17406  061A  085E               	movf	flashy_Main@data,w
 17407  061B  0086               	movwf	6
 17408  061C  085F               	movf	flashy_Main@data+1,w
 17409  061D  0087               	movwf	7
 17410  061E  3147               	addfsr 1,7
 17411  061F  0016               	moviw fsr1++
 17412  0620  3A63               	xorlw	99
 17413  0621  00D4               	movwf	??_flashy_Main
 17414  0622  0016               	moviw fsr1++
 17415  0623  04D4               	iorwf	??_flashy_Main,f
 17416  0624  1D03               	btfss	3,2
 17417  0625  2E32               	goto	l7010
 17418                           
 17419                           ;flashy_task.c: 348: nullifyBadge_irTxClr();
 17420  0626  3198  2078  3180   	fcall	_nullifyBadge_irTxClr
 17421                           
 17422                           ;flashy_task.c: 349: nullifyBadge_irTxRelease(data->badge);
 17423  0629  0020               	movlb	0	; select bank0
 17424  062A  085E               	movf	flashy_Main@data,w
 17425  062B  0086               	movwf	6
 17426  062C  085F               	movf	flashy_Main@data+1,w
 17427  062D  0087               	movwf	7
 17428  062E  0801               	movf	1,w
 17429  062F  3199  2118  3180   	fcall	_nullifyBadge_irTxRelease
 17430  0632                     l7010:	
 17431                           
 17432                           ;flashy_task.c: 350: }
 17433                           ;flashy_task.c: 351: if (data->blasterTickCount == 0){
 17434  0632  0020               	movlb	0	; select bank0
 17435  0633  085E               	movf	flashy_Main@data,w
 17436  0634  0086               	movwf	6
 17437  0635  085F               	movf	flashy_Main@data+1,w
 17438  0636  0087               	movwf	7
 17439  0637  3147               	addfsr 1,7
 17440  0638  0016               	moviw fsr1++
 17441  0639  0401               	iorwf	1,w
 17442  063A  1D03               	btfss	3,2
 17443  063B  2E66               	goto	l7022
 17444                           
 17445                           ;flashy_task.c: 352: data->displayTickCount = 0;
 17446  063C  085E               	movf	flashy_Main@data,w
 17447  063D  0086               	movwf	6
 17448  063E  085F               	movf	flashy_Main@data+1,w
 17449  063F  0087               	movwf	7
 17450  0640  3144               	addfsr 1,4
 17451  0641  3000               	movlw	0
 17452  0642  3FC0               	movwi [0]fsr1
 17453  0643  3FC1               	movwi [1]fsr1
 17454                           
 17455                           ;flashy_task.c: 353: data->delayTickCount = 5;
 17456  0644  085E               	movf	flashy_Main@data,w
 17457  0645  0086               	movwf	6
 17458  0646  085F               	movf	flashy_Main@data+1,w
 17459  0647  0087               	movwf	7
 17460  0648  3141               	addfsr 1,1
 17461  0649  3005               	movlw	5
 17462  064A  3FC0               	movwi [0]fsr1
 17463  064B  3000               	movlw	0
 17464  064C  3FC1               	movwi [1]fsr1
 17465                           
 17466                           ;flashy_task.c: 355: data->led_state = FLASHY_STATE_LED_ROUNDABOUT;
 17467  064D  085E               	movf	flashy_Main@data,w
 17468  064E  0086               	movwf	6
 17469  064F  085F               	movf	flashy_Main@data+1,w
 17470  0650  0087               	movwf	7
 17471  0651  3143               	addfsr 1,3
 17472  0652  0181               	clrf	1
 17473                           
 17474                           ;flashy_task.c: 356: data->display_state = FLASHY_STATE_DISPLAY;
 17475  0653  085E               	movf	flashy_Main@data,w
 17476  0654  0086               	movwf	6
 17477  0655  085F               	movf	flashy_Main@data+1,w
 17478  0656  0087               	movwf	7
 17479  0657  3146               	addfsr 1,6
 17480  0658  0181               	clrf	1
 17481                           
 17482                           ;flashy_task.c: 357: data->blaster_state = FLASHY_BLASTER_IDLE_STATE;
 17483  0659  085E               	movf	flashy_Main@data,w
 17484  065A  3E09               	addlw	9
 17485  065B  00D4               	movwf	??_flashy_Main
 17486  065C  3000               	movlw	0
 17487  065D  3D5F               	addwfc	flashy_Main@data+1,w
 17488  065E  00D5               	movwf	??_flashy_Main+1
 17489  065F  0854               	movf	??_flashy_Main,w
 17490  0660  0086               	movwf	6
 17491  0661  0855               	movf	??_flashy_Main+1,w
 17492  0662  0087               	movwf	7
 17493  0663  3001               	movlw	1
 17494  0664  0081               	movwf	1
 17495                           
 17496                           ;flashy_task.c: 358: }
 17497  0665  2E7F               	goto	l7028
 17498  0666                     l7022:	
 17499                           
 17500                           ;flashy_task.c: 359: else {
 17501                           ;flashy_task.c: 360: data->blasterTickCount -= 1;
 17502  0666  085E               	movf	flashy_Main@data,w
 17503  0667  0086               	movwf	6
 17504  0668  085F               	movf	flashy_Main@data+1,w
 17505  0669  0087               	movwf	7
 17506  066A  3147               	addfsr 1,7
 17507  066B  3001               	movlw	1
 17508  066C  0281               	subwf	1,f
 17509  066D  3141               	addfsr 1,1
 17510  066E  3000               	movlw	0
 17511  066F  3B81               	subwfb	1,f
 17512  0670  317F               	addfsr 1,-1
 17513                           
 17514                           ;flashy_task.c: 365: }
 17515                           
 17516                           ;flashy_task.c: 364: break;
 17517                           
 17518                           ;flashy_task.c: 363: case FLASHY_BLASTER_IDLE_STATE:
 17519                           
 17520                           ;flashy_task.c: 361: }
 17521                           ;flashy_task.c: 362: break;
 17522  0671  2E7F               	goto	l7028
 17523  0672                     l7026:	
 17524  0672  085E               	movf	flashy_Main@data,w
 17525  0673  0086               	movwf	6
 17526  0674  085F               	movf	flashy_Main@data+1,w
 17527  0675  0087               	movwf	7
 17528  0676  3149               	addfsr 1,9
 17529  0677  0801               	movf	1,w
 17530                           
 17531                           ; Switch size 1, requested type "space"
 17532                           ; Number of cases is 2, Range of values is 0 to 1
 17533                           ; switch strategies available:
 17534                           ; Name         Instructions Cycles
 17535                           ; simple_byte            7     4 (average)
 17536                           ; direct_byte           10     6 (fixed)
 17537                           ; jumptable            260     6 (fixed)
 17538                           ;	Chosen strategy is simple_byte
 17539  0678  3A00               	xorlw	0	; case 0
 17540  0679  1903               	skipnz
 17541  067A  2E02               	goto	l6998
 17542  067B  3A01               	xorlw	1	; case 1
 17543  067C  1903               	skipnz
 17544  067D  2E7F               	goto	l7028
 17545  067E  2E7F               	goto	l7028
 17546  067F                     l7028:	
 17547                           
 17548                           ;flashy_task.c: 368: if (nullifyBadge_irGet() && (data->blaster_state != FLASHY_BLASTER_
      +                          SHOOTING_STATE)) {
 17549  067F  3198  207F  3180   	fcall	_nullifyBadge_irGet
 17550  0682  3A00               	xorlw	0
 17551  0683  1903               	skipnz
 17552  0684  0008               	return
 17553  0685  0020               	movlb	0	; select bank0
 17554  0686  085E               	movf	flashy_Main@data,w
 17555  0687  0086               	movwf	6
 17556  0688  085F               	movf	flashy_Main@data+1,w
 17557  0689  0087               	movwf	7
 17558  068A  3149               	addfsr 1,9
 17559  068B  0801               	movf	1,w
 17560  068C  1903               	btfsc	3,2
 17561  068D  0008               	return
 17562                           
 17563                           ;flashy_task.c: 369: data->displayTickCount = 0;
 17564  068E  085E               	movf	flashy_Main@data,w
 17565  068F  0086               	movwf	6
 17566  0690  085F               	movf	flashy_Main@data+1,w
 17567  0691  0087               	movwf	7
 17568  0692  3144               	addfsr 1,4
 17569  0693  3000               	movlw	0
 17570  0694  3FC0               	movwi [0]fsr1
 17571  0695  3FC1               	movwi [1]fsr1
 17572                           
 17573                           ;flashy_task.c: 370: deaths += 1;
 17574  0696  3001               	movlw	1
 17575  0697  0021               	movlb	1	; select bank1
 17576  0698  07A8               	addwf	_deaths^(0+128),f
 17577  0699  3000               	movlw	0
 17578  069A  3DA9               	addwfc	(_deaths+1)^(0+128),f
 17579                           
 17580                           ;flashy_task.c: 371: data->display_state = FLASHY_STATE_DISPLAY_SHOT;
 17581  069B  0020               	movlb	0	; select bank0
 17582  069C  085E               	movf	flashy_Main@data,w
 17583  069D  3E06               	addlw	6
 17584  069E  00D4               	movwf	??_flashy_Main
 17585  069F  3000               	movlw	0
 17586  06A0  3D5F               	addwfc	flashy_Main@data+1,w
 17587  06A1  00D5               	movwf	??_flashy_Main+1
 17588  06A2  0854               	movf	??_flashy_Main,w
 17589  06A3  0086               	movwf	6
 17590  06A4  0855               	movf	??_flashy_Main+1,w
 17591  06A5  0087               	movwf	7
 17592  06A6  3003               	movlw	3
 17593  06A7  0081               	movwf	1
 17594  06A8  0008               	return
 17595  06A9                     __end_of_flashy_Main:	
 17596                           
 17597                           	psect	text17
 17598  1457                     __ptext17:	
 17599 ;; *************** function _slot_Main *****************
 17600 ;; Defined at:
 17601 ;;		line 34 in file "slot_task.c"
 17602 ;; Parameters:    Size  Location     Type
 17603 ;;  taskData        2   50[BANK0 ] PTR void 
 17604 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 17605 ;;		 -> flashy_TaskData(26), NULL(0), 
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;  data            2   54[BANK0 ] PTR struct t_slot_taskDa
 17608 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 17609 ;;		 -> flashy_TaskData(26), NULL(0), 
 17610 ;;  buttonPresse    1   53[BANK0 ] unsigned char 
 17611 ;; Return value:  Size  Location     Type
 17612 ;;                  1    wreg      void 
 17613 ;; Registers used:
 17614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17615 ;; Tracked objects:
 17616 ;;		On entry : 0/0
 17617 ;;		On exit  : 0/0
 17618 ;;		Unchanged: 0/0
 17619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17621 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17623 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17624 ;;Total ram usage:        6 bytes
 17625 ;; Hardware stack levels used:    1
 17626 ;; Hardware stack levels required when called:   10
 17627 ;; This function calls:
 17628 ;;		_marquee
 17629 ;;		_nullifyBadge_buttonsGet
 17630 ;; This function is called by:
 17631 ;;		_main
 17632 ;;		_scheduler_TaskRun
 17633 ;; This function uses a non-reentrant model
 17634 ;;
 17635                           
 17636                           
 17637                           ;psect for function _slot_Main
 17638  1457                     _slot_Main:	
 17639                           
 17640                           ;slot_task.c: 35: struct t_slot_taskData *data = (struct t_slot_taskData *) taskData;
 17641                           
 17642                           ;incstack = 0
 17643                           ; Regs used in _slot_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17644  1457  0020               	movlb	0	; select bank0
 17645  1458  0853               	movf	slot_Main@taskData+1,w
 17646  1459  00D7               	movwf	slot_Main@data+1
 17647  145A  0852               	movf	slot_Main@taskData,w
 17648  145B  00D6               	movwf	slot_Main@data
 17649                           
 17650                           ;slot_task.c: 36: u8 buttonPressed;
 17651                           ;slot_task.c: 39: if ( currentTask != SLOT_TASK ){
 17652  145C  0021               	movlb	1	; select bank1
 17653  145D  0332               	decf	_currentTask^(0+128),w
 17654  145E  0433               	iorwf	(_currentTask+1)^(0+128),w
 17655  145F  1903               	btfsc	3,2
 17656  1460  2C8C               	goto	l7238
 17657                           
 17658                           ;slot_task.c: 40: buttonPressed = nullifyBadge_buttonsGet();
 17659  1461  319C  24FF         	fcall	_nullifyBadge_buttonsGet
 17660  1463  0020               	movlb	0	; select bank0
 17661  1464  00D4               	movwf	??_slot_Main
 17662  1465  0854               	movf	??_slot_Main,w
 17663  1466  00D5               	movwf	slot_Main@buttonPressed
 17664                           
 17665                           ;slot_task.c: 44: data->holdCountA = 1;
 17666                           
 17667                           ;slot_task.c: 42: default:
 17668                           
 17669                           ;slot_task.c: 41: switch (buttonPressed) {
 17670  1467  0856               	movf	slot_Main@data,w
 17671  1468  0086               	movwf	6
 17672  1469  0857               	movf	slot_Main@data+1,w
 17673  146A  0087               	movwf	7
 17674  146B  3144               	addfsr 1,4
 17675  146C  3001               	movlw	1
 17676  146D  3FC0               	movwi [0]fsr1
 17677  146E  3000               	movlw	0
 17678  146F  3FC1               	movwi [1]fsr1
 17679                           
 17680                           ;slot_task.c: 45: data->holdCountB = 1;
 17681  1470  0856               	movf	slot_Main@data,w
 17682  1471  0086               	movwf	6
 17683  1472  0857               	movf	slot_Main@data+1,w
 17684  1473  0087               	movwf	7
 17685  1474  3146               	addfsr 1,6
 17686  1475  3001               	movlw	1
 17687  1476  3FC0               	movwi [0]fsr1
 17688  1477  3000               	movlw	0
 17689  1478  3FC1               	movwi [1]fsr1
 17690                           
 17691                           ;slot_task.c: 46: data->holdCountX = 1;
 17692  1479  0856               	movf	slot_Main@data,w
 17693  147A  0086               	movwf	6
 17694  147B  0857               	movf	slot_Main@data+1,w
 17695  147C  0087               	movwf	7
 17696  147D  3148               	addfsr 1,8
 17697  147E  3001               	movlw	1
 17698  147F  3FC0               	movwi [0]fsr1
 17699  1480  3000               	movlw	0
 17700  1481  3FC1               	movwi [1]fsr1
 17701                           
 17702                           ;slot_task.c: 47: data->holdCountY = 1;
 17703  1482  0856               	movf	slot_Main@data,w
 17704  1483  0086               	movwf	6
 17705  1484  0857               	movf	slot_Main@data+1,w
 17706  1485  0087               	movwf	7
 17707  1486  314A               	addfsr 1,10
 17708  1487  3001               	movlw	1
 17709  1488  3FC0               	movwi [0]fsr1
 17710  1489  3000               	movlw	0
 17711  148A  3FC1               	movwi [1]fsr1
 17712                           
 17713                           ;slot_task.c: 49: }
 17714                           
 17715                           ;slot_task.c: 48: break;
 17716  148B  0008               	return
 17717  148C                     l7238:	
 17718                           ;slot_task.c: 50: return;
 17719                           
 17720                           
 17721                           ;slot_task.c: 51: }
 17722                           ;slot_task.c: 53: buttonPressed = nullifyBadge_buttonsGet();
 17723  148C  319C  24FF  3194   	fcall	_nullifyBadge_buttonsGet
 17724  148F  0020               	movlb	0	; select bank0
 17725  1490  00D4               	movwf	??_slot_Main
 17726  1491  0854               	movf	??_slot_Main,w
 17727  1492  00D5               	movwf	slot_Main@buttonPressed
 17728                           
 17729                           ;slot_task.c: 56: marquee("$$$ ", data->displayTickCount);
 17730                           
 17731                           ;slot_task.c: 55: default:
 17732                           
 17733                           ;slot_task.c: 54: switch (buttonPressed) {
 17734  1493  3056               	movlw	low (STR_20| (0+32768))
 17735  1494  00BA               	movwf	marquee@string
 17736  1495  30A0               	movlw	high (STR_20| (0+32768))
 17737  1496  00BB               	movwf	marquee@string+1
 17738  1497  0856               	movf	slot_Main@data,w
 17739  1498  0086               	movwf	6
 17740  1499  0857               	movf	slot_Main@data+1,w
 17741  149A  0087               	movwf	7
 17742  149B  3142               	addfsr 1,2
 17743  149C  3F40               	moviw [0]fsr1
 17744  149D  00BC               	movwf	marquee@count
 17745  149E  3F41               	moviw [1]fsr1
 17746  149F  00BD               	movwf	marquee@count+1
 17747  14A0  3193  2364  3194   	fcall	_marquee
 17748                           
 17749                           ;slot_task.c: 57: data->displayTickCount += 1;
 17750  14A3  0020               	movlb	0	; select bank0
 17751  14A4  0856               	movf	slot_Main@data,w
 17752  14A5  0086               	movwf	6
 17753  14A6  0857               	movf	slot_Main@data+1,w
 17754  14A7  0087               	movwf	7
 17755  14A8  3142               	addfsr 1,2
 17756  14A9  3001               	movlw	1
 17757  14AA  0781               	addwf	1,f
 17758  14AB  3141               	addfsr 1,1
 17759  14AC  1803               	skipnc
 17760  14AD  0A81               	incf	1,f
 17761                           
 17762                           ;slot_task.c: 59: data->holdCountA = 0;
 17763  14AE  0856               	movf	slot_Main@data,w
 17764  14AF  0086               	movwf	6
 17765  14B0  0857               	movf	slot_Main@data+1,w
 17766  14B1  0087               	movwf	7
 17767  14B2  3144               	addfsr 1,4
 17768  14B3  3000               	movlw	0
 17769  14B4  3FC0               	movwi [0]fsr1
 17770  14B5  3FC1               	movwi [1]fsr1
 17771                           
 17772                           ;slot_task.c: 60: data->holdCountB = 0;
 17773  14B6  0856               	movf	slot_Main@data,w
 17774  14B7  0086               	movwf	6
 17775  14B8  0857               	movf	slot_Main@data+1,w
 17776  14B9  0087               	movwf	7
 17777  14BA  3146               	addfsr 1,6
 17778  14BB  3000               	movlw	0
 17779  14BC  3FC0               	movwi [0]fsr1
 17780  14BD  3FC1               	movwi [1]fsr1
 17781                           
 17782                           ;slot_task.c: 61: data->holdCountX = 0;
 17783  14BE  0856               	movf	slot_Main@data,w
 17784  14BF  0086               	movwf	6
 17785  14C0  0857               	movf	slot_Main@data+1,w
 17786  14C1  0087               	movwf	7
 17787  14C2  3148               	addfsr 1,8
 17788  14C3  3000               	movlw	0
 17789  14C4  3FC0               	movwi [0]fsr1
 17790  14C5  3FC1               	movwi [1]fsr1
 17791                           
 17792                           ;slot_task.c: 62: data->holdCountY = 0;
 17793  14C6  0856               	movf	slot_Main@data,w
 17794  14C7  0086               	movwf	6
 17795  14C8  0857               	movf	slot_Main@data+1,w
 17796  14C9  0087               	movwf	7
 17797  14CA  314A               	addfsr 1,10
 17798  14CB  3000               	movlw	0
 17799  14CC  3FC0               	movwi [0]fsr1
 17800  14CD  3FC1               	movwi [1]fsr1
 17801                           
 17802                           ;slot_task.c: 63: data->noholdCount += 1;
 17803  14CE  0856               	movf	slot_Main@data,w
 17804  14CF  0086               	movwf	6
 17805  14D0  0857               	movf	slot_Main@data+1,w
 17806  14D1  0087               	movwf	7
 17807  14D2  314C               	addfsr 1,12
 17808  14D3  3001               	movlw	1
 17809  14D4  0781               	addwf	1,f
 17810  14D5  3141               	addfsr 1,1
 17811  14D6  1803               	skipnc
 17812  14D7  0A81               	incf	1,f
 17813                           
 17814                           ;slot_task.c: 64: }
 17815  14D8  0008               	return
 17816  14D9                     __end_of_slot_Main:	
 17817                           
 17818                           	psect	text18
 17819  1D62                     __ptext18:	
 17820 ;; *************** function _secret_clear *****************
 17821 ;; Defined at:
 17822 ;;		line 178 in file "secret_task.c"
 17823 ;; Parameters:    Size  Location     Type
 17824 ;;  data            2    1[COMMON] PTR struct t_secret_task
 17825 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 17826 ;;		 -> flashy_TaskData(26), NULL(0), 
 17827 ;; Auto vars:     Size  Location     Type
 17828 ;;		None
 17829 ;; Return value:  Size  Location     Type
 17830 ;;                  1    wreg      void 
 17831 ;; Registers used:
 17832 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17833 ;; Tracked objects:
 17834 ;;		On entry : 0/0
 17835 ;;		On exit  : 0/0
 17836 ;;		Unchanged: 0/0
 17837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17841 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17842 ;;Total ram usage:        2 bytes
 17843 ;; Hardware stack levels used:    1
 17844 ;; Hardware stack levels required when called:    4
 17845 ;; This function calls:
 17846 ;;		Nothing
 17847 ;; This function is called by:
 17848 ;;		_secret_Main
 17849 ;; This function uses a non-reentrant model
 17850 ;;
 17851                           
 17852                           
 17853                           ;psect for function _secret_clear
 17854  1D62                     _secret_clear:	
 17855                           
 17856                           ;secret_task.c: 180: data->delayTickCount = 300;
 17857                           
 17858                           ;incstack = 0
 17859                           ; Regs used in _secret_clear: [wreg+fsr1l+fsr1h+status,2+status,0]
 17860  1D62  0871               	movf	secret_clear@data,w
 17861  1D63  0086               	movwf	6
 17862  1D64  0872               	movf	secret_clear@data+1,w
 17863  1D65  0087               	movwf	7
 17864  1D66  3142               	addfsr 1,2
 17865  1D67  302C               	movlw	44
 17866  1D68  3FC0               	movwi [0]fsr1
 17867  1D69  3001               	movlw	1
 17868  1D6A  3FC1               	movwi [1]fsr1
 17869                           
 17870                           ;secret_task.c: 181: data->holdCountA = 0;
 17871  1D6B  0871               	movf	secret_clear@data,w
 17872  1D6C  0086               	movwf	6
 17873  1D6D  0872               	movf	secret_clear@data+1,w
 17874  1D6E  0087               	movwf	7
 17875  1D6F  3144               	addfsr 1,4
 17876  1D70  3000               	movlw	0
 17877  1D71  3FC0               	movwi [0]fsr1
 17878  1D72  3FC1               	movwi [1]fsr1
 17879                           
 17880                           ;secret_task.c: 182: data->holdCountB = 0;
 17881  1D73  0871               	movf	secret_clear@data,w
 17882  1D74  0086               	movwf	6
 17883  1D75  0872               	movf	secret_clear@data+1,w
 17884  1D76  0087               	movwf	7
 17885  1D77  3146               	addfsr 1,6
 17886  1D78  3000               	movlw	0
 17887  1D79  3FC0               	movwi [0]fsr1
 17888  1D7A  3FC1               	movwi [1]fsr1
 17889                           
 17890                           ;secret_task.c: 183: data->holdCountX = 0;
 17891  1D7B  0871               	movf	secret_clear@data,w
 17892  1D7C  0086               	movwf	6
 17893  1D7D  0872               	movf	secret_clear@data+1,w
 17894  1D7E  0087               	movwf	7
 17895  1D7F  3148               	addfsr 1,8
 17896  1D80  3000               	movlw	0
 17897  1D81  3FC0               	movwi [0]fsr1
 17898  1D82  3FC1               	movwi [1]fsr1
 17899                           
 17900                           ;secret_task.c: 184: data->holdCountY = 0;
 17901  1D83  0871               	movf	secret_clear@data,w
 17902  1D84  0086               	movwf	6
 17903  1D85  0872               	movf	secret_clear@data+1,w
 17904  1D86  0087               	movwf	7
 17905  1D87  314A               	addfsr 1,10
 17906  1D88  3000               	movlw	0
 17907  1D89  3FC0               	movwi [0]fsr1
 17908  1D8A  3FC1               	movwi [1]fsr1
 17909                           
 17910                           ;secret_task.c: 185: data->noholdCount = 0;
 17911  1D8B  0871               	movf	secret_clear@data,w
 17912  1D8C  0086               	movwf	6
 17913  1D8D  0872               	movf	secret_clear@data+1,w
 17914  1D8E  0087               	movwf	7
 17915  1D8F  314C               	addfsr 1,12
 17916  1D90  3000               	movlw	0
 17917  1D91  3FC0               	movwi [0]fsr1
 17918  1D92  3FC1               	movwi [1]fsr1
 17919  1D93  0008               	return
 17920  1D94                     __end_of_secret_clear:	
 17921                           
 17922                           	psect	text19
 17923  155B                     __ptext19:	
 17924 ;; *************** function _secret_check *****************
 17925 ;; Defined at:
 17926 ;;		line 69 in file "secret_task.c"
 17927 ;; Parameters:    Size  Location     Type
 17928 ;;  data            2    7[COMMON] PTR struct t_secret_task
 17929 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 17930 ;;		 -> flashy_TaskData(26), NULL(0), 
 17931 ;;  buttonPresse    1    9[COMMON] unsigned char 
 17932 ;; Auto vars:     Size  Location     Type
 17933 ;;  i               2    8[BANK0 ] unsigned int 
 17934 ;;  hit_counter     6    0        unsigned char [6]
 17935 ;;  currents_siz    2    5[BANK0 ] unsigned int 
 17936 ;;  size            2    3[BANK0 ] unsigned int 
 17937 ;;  inputs          1    7[BANK0 ] PTR unsigned char 
 17938 ;;		 -> secret_inputs.inputs(20), secret_inputs(25), 
 17939 ;; Return value:  Size  Location     Type
 17940 ;;                  1    wreg      unsigned char 
 17941 ;; Registers used:
 17942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17943 ;; Tracked objects:
 17944 ;;		On entry : 0/0
 17945 ;;		On exit  : 0/0
 17946 ;;		Unchanged: 0/0
 17947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17948 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17949 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17950 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17951 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17952 ;;Total ram usage:       13 bytes
 17953 ;; Hardware stack levels used:    1
 17954 ;; Hardware stack levels required when called:    5
 17955 ;; This function calls:
 17956 ;;		___bmul
 17957 ;;		_strlen
 17958 ;; This function is called by:
 17959 ;;		_secret_Main
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           
 17964                           ;psect for function _secret_check
 17965  155B                     _secret_check:	
 17966                           
 17967                           ;secret_task.c: 70: u8 *inputs;
 17968                           ;secret_task.c: 71: u16 size = sizeof(secret_inputs) / sizeof(secret_inputs[0]);
 17969                           
 17970                           ;incstack = 0
 17971                           ; Regs used in _secret_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17972  155B  3001               	movlw	1
 17973  155C  0020               	movlb	0	; select bank0
 17974  155D  00A3               	movwf	secret_check@size
 17975  155E  3000               	movlw	0
 17976  155F  00A4               	movwf	secret_check@size+1
 17977                           
 17978                           ;secret_task.c: 72: u16 currents_size;
 17979                           ;secret_task.c: 73: char hit_counter[6];
 17980                           ;secret_task.c: 75: for (u16 i = 0; i < size; i++){
 17981  1560  01A8               	clrf	secret_check@i
 17982  1561  01A9               	clrf	secret_check@i+1
 17983  1562                     l6448:	
 17984  1562  0824               	movf	secret_check@size+1,w
 17985  1563  0229               	subwf	secret_check@i+1,w
 17986  1564  1D03               	skipz
 17987  1565  2D68               	goto	u3645
 17988  1566  0823               	movf	secret_check@size,w
 17989  1567  0228               	subwf	secret_check@i,w
 17990  1568                     u3645:	
 17991  1568  1803               	btfsc	3,0
 17992  1569  2E14               	goto	l6450
 17993                           
 17994                           ;secret_task.c: 76: inputs = secret_inputs[i].inputs;
 17995  156A  3019               	movlw	25
 17996  156B  00A0               	movwf	??_secret_check
 17997  156C  0820               	movf	??_secret_check,w
 17998  156D  00F1               	movwf	___bmul@multiplicand
 17999  156E  0828               	movf	secret_check@i,w
 18000  156F  3199  21E8  3195   	fcall	___bmul
 18001  1572  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18002  1573  0020               	movlb	0	; select bank0
 18003  1574  00A1               	movwf	??_secret_check+1
 18004  1575  0821               	movf	??_secret_check+1,w
 18005  1576  00A7               	movwf	secret_check@inputs
 18006                           
 18007                           ;secret_task.c: 78: if (buttonPressed == inputs[secret_inputs[i].idx]){
 18008  1577  3019               	movlw	25
 18009  1578  00A0               	movwf	??_secret_check
 18010  1579  0820               	movf	??_secret_check,w
 18011  157A  00F1               	movwf	___bmul@multiplicand
 18012  157B  0828               	movf	secret_check@i,w
 18013  157C  3199  21E8  3195   	fcall	___bmul
 18014  157F  3E14               	addlw	20
 18015  1580  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18016  1581  0086               	movwf	6
 18017  1582  3001               	movlw	1	; select bank3/4
 18018  1583  0087               	movwf	7
 18019  1584  0801               	movf	1,w
 18020  1585  0020               	movlb	0	; select bank0
 18021  1586  0727               	addwf	secret_check@inputs,w
 18022  1587  00A1               	movwf	??_secret_check+1
 18023  1588  0821               	movf	??_secret_check+1,w
 18024  1589  0086               	movwf	6
 18025  158A  3001               	movlw	1	; select bank2/3
 18026  158B  0087               	movwf	7
 18027  158C  0801               	movf	1,w
 18028  158D  0679               	xorwf	secret_check@buttonPressed,w
 18029  158E  1D03               	skipz
 18030  158F  2DFD               	goto	l6444
 18031                           
 18032                           ;secret_task.c: 79: currents_size = strlen((const char *)inputs);
 18033  1590  0827               	movf	secret_check@inputs,w
 18034  1591  00F1               	movwf	strlen@s
 18035  1592  3001               	movlw	1
 18036  1593  00F2               	movwf	strlen@s+1
 18037  1594  319B  2370  3195   	fcall	_strlen
 18038  1597  0872               	movf	?_strlen+1,w
 18039  1598  0020               	movlb	0	; select bank0
 18040  1599  00A6               	movwf	secret_check@currents_size+1
 18041  159A  0871               	movf	?_strlen,w
 18042  159B  00A5               	movwf	secret_check@currents_size
 18043                           
 18044                           ;secret_task.c: 80: secret_inputs[i].idx++;
 18045  159C  3019               	movlw	25
 18046  159D  00A0               	movwf	??_secret_check
 18047  159E  0820               	movf	??_secret_check,w
 18048  159F  00F1               	movwf	___bmul@multiplicand
 18049  15A0  0828               	movf	secret_check@i,w
 18050  15A1  3199  21E8  3195   	fcall	___bmul
 18051  15A4  3E14               	addlw	20
 18052  15A5  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18053  15A6  0086               	movwf	6
 18054  15A7  3001               	movlw	1	; select bank3/4
 18055  15A8  0087               	movwf	7
 18056  15A9  3001               	movlw	1
 18057  15AA  0781               	addwf	1,f
 18058  15AB  3141               	addfsr 1,1
 18059  15AC  1803               	skipnc
 18060  15AD  0A81               	incf	1,f
 18061                           
 18062                           ;secret_task.c: 82: if (secret_inputs[i].idx == currents_size) {
 18063  15AE  3019               	movlw	25
 18064  15AF  0020               	movlb	0	; select bank0
 18065  15B0  00A0               	movwf	??_secret_check
 18066  15B1  0820               	movf	??_secret_check,w
 18067  15B2  00F1               	movwf	___bmul@multiplicand
 18068  15B3  0828               	movf	secret_check@i,w
 18069  15B4  3199  21E8  3195   	fcall	___bmul
 18070  15B7  3E14               	addlw	20
 18071  15B8  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18072  15B9  0086               	movwf	6
 18073  15BA  3001               	movlw	1	; select bank3/4
 18074  15BB  0087               	movwf	7
 18075  15BC  3F40               	moviw [0]fsr1
 18076  15BD  0020               	movlb	0	; select bank0
 18077  15BE  00A1               	movwf	??_secret_check+1
 18078  15BF  3F41               	moviw [1]fsr1
 18079  15C0  00A2               	movwf	??_secret_check+2
 18080  15C1  0826               	movf	secret_check@currents_size+1,w
 18081  15C2  0622               	xorwf	??_secret_check+2,w
 18082  15C3  1D03               	skipz
 18083  15C4  2DC7               	goto	u3635
 18084  15C5  0825               	movf	secret_check@currents_size,w
 18085  15C6  0621               	xorwf	??_secret_check+1,w
 18086  15C7                     u3635:	
 18087  15C7  1D03               	skipz
 18088  15C8  2E0E               	goto	l6446
 18089                           
 18090                           ;secret_task.c: 84: secret_inputs[i].idx = 0;
 18091  15C9  3019               	movlw	25
 18092  15CA  00A0               	movwf	??_secret_check
 18093  15CB  0820               	movf	??_secret_check,w
 18094  15CC  00F1               	movwf	___bmul@multiplicand
 18095  15CD  0828               	movf	secret_check@i,w
 18096  15CE  3199  21E8  3195   	fcall	___bmul
 18097  15D1  3E14               	addlw	20
 18098  15D2  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18099  15D3  0086               	movwf	6
 18100  15D4  3001               	movlw	1	; select bank3/4
 18101  15D5  0087               	movwf	7
 18102  15D6  3000               	movlw	0
 18103  15D7  3FC0               	movwi [0]fsr1
 18104  15D8  3FC1               	movwi [1]fsr1
 18105                           
 18106                           ;secret_task.c: 87: *(secret_inputs[i].variable) = (u16) secret_inputs[i].value;
 18107  15D9  3019               	movlw	25
 18108  15DA  0020               	movlb	0	; select bank0
 18109  15DB  00A0               	movwf	??_secret_check
 18110  15DC  0820               	movf	??_secret_check,w
 18111  15DD  00F1               	movwf	___bmul@multiplicand
 18112  15DE  0828               	movf	secret_check@i,w
 18113  15DF  3199  21E8  3195   	fcall	___bmul
 18114  15E2  3E17               	addlw	23
 18115  15E3  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18116  15E4  0086               	movwf	6
 18117  15E5  3001               	movlw	1	; select bank3/4
 18118  15E6  0087               	movwf	7
 18119  15E7  3019               	movlw	25
 18120  15E8  0020               	movlb	0	; select bank0
 18121  15E9  00A1               	movwf	??_secret_check+1
 18122  15EA  0821               	movf	??_secret_check+1,w
 18123  15EB  00F1               	movwf	___bmul@multiplicand
 18124  15EC  0828               	movf	secret_check@i,w
 18125  15ED  3199  21E8         	fcall	___bmul
 18126  15EF  3E16               	addlw	22
 18127  15F0  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18128  15F1  0084               	movwf	4
 18129  15F2  3001               	movlw	1	; select bank3/4
 18130  15F3  0085               	movwf	5
 18131  15F4  0800               	movf	0,w
 18132  15F5  0084               	movwf	4
 18133  15F6  0185               	clrf	5
 18134  15F7  3F40               	moviw [0]fsr1
 18135  15F8  3F80               	movwi [0]fsr0
 18136  15F9  3F41               	moviw [1]fsr1
 18137  15FA  3F81               	movwi [1]fsr0
 18138                           
 18139                           ;secret_task.c: 89: return 1;
 18140  15FB  3001               	movlw	1
 18141  15FC  0008               	return
 18142  15FD                     l6444:	
 18143                           ;secret_task.c: 90: }
 18144                           ;secret_task.c: 91: } else {
 18145                           
 18146                           
 18147                           ;secret_task.c: 93: secret_inputs[i].idx = 0;
 18148  15FD  3019               	movlw	25
 18149  15FE  0020               	movlb	0	; select bank0
 18150  15FF  00A0               	movwf	??_secret_check
 18151  1600  0820               	movf	??_secret_check,w
 18152  1601  00F1               	movwf	___bmul@multiplicand
 18153  1602  0828               	movf	secret_check@i,w
 18154  1603  3199  21E8  3195   	fcall	___bmul
 18155  1606  3E14               	addlw	20
 18156  1607  3EAA               	addlw	(low (_secret_inputs| (0+256)))& (0+255)
 18157  1608  0086               	movwf	6
 18158  1609  3001               	movlw	1	; select bank3/4
 18159  160A  0087               	movwf	7
 18160  160B  3000               	movlw	0
 18161  160C  3FC0               	movwi [0]fsr1
 18162  160D  3FC1               	movwi [1]fsr1
 18163  160E                     l6446:	
 18164  160E  3001               	movlw	1
 18165  160F  0020               	movlb	0	; select bank0
 18166  1610  07A8               	addwf	secret_check@i,f
 18167  1611  3000               	movlw	0
 18168  1612  3DA9               	addwfc	secret_check@i+1,f
 18169  1613  2D62               	goto	l6448
 18170  1614                     l6450:	
 18171                           
 18172                           ;secret_task.c: 94: }
 18173                           ;secret_task.c: 95: }
 18174                           ;secret_task.c: 96: return 0;
 18175  1614  3000               	movlw	0
 18176  1615  0008               	return
 18177  1616                     __end_of_secret_check:	
 18178                           
 18179                           	psect	text20
 18180  19E8                     __ptext20:	
 18181 ;; *************** function ___bmul *****************
 18182 ;; Defined at:
 18183 ;;		line 4 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul8.c"
 18184 ;; Parameters:    Size  Location     Type
 18185 ;;  multiplier      1    wreg     unsigned char 
 18186 ;;  multiplicand    1    1[COMMON] unsigned char 
 18187 ;; Auto vars:     Size  Location     Type
 18188 ;;  multiplier      1    4[COMMON] unsigned char 
 18189 ;;  product         1    3[COMMON] unsigned char 
 18190 ;; Return value:  Size  Location     Type
 18191 ;;                  1    wreg      unsigned char 
 18192 ;; Registers used:
 18193 ;;		wreg, status,2, status,0
 18194 ;; Tracked objects:
 18195 ;;		On entry : 0/0
 18196 ;;		On exit  : 0/0
 18197 ;;		Unchanged: 0/0
 18198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18199 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18203 ;;Total ram usage:        4 bytes
 18204 ;; Hardware stack levels used:    1
 18205 ;; Hardware stack levels required when called:    4
 18206 ;; This function calls:
 18207 ;;		Nothing
 18208 ;; This function is called by:
 18209 ;;		_secret_check
 18210 ;; This function uses a non-reentrant model
 18211 ;;
 18212                           
 18213                           
 18214                           ;psect for function ___bmul
 18215  19E8                     ___bmul:	
 18216                           
 18217                           ;incstack = 0
 18218                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 18219                           ;___bmul@multiplier stored from wreg
 18220  19E8  00F4               	movwf	___bmul@multiplier
 18221  19E9  01F3               	clrf	___bmul@product
 18222  19EA                     l6178:	
 18223  19EA  1C74               	btfss	___bmul@multiplier,0
 18224  19EB  29F0               	goto	l6182
 18225  19EC  0871               	movf	___bmul@multiplicand,w
 18226  19ED  00F2               	movwf	??___bmul
 18227  19EE  0872               	movf	??___bmul,w
 18228  19EF  07F3               	addwf	___bmul@product,f
 18229  19F0                     l6182:	
 18230  19F0  1003               	clrc
 18231  19F1  0DF1               	rlf	___bmul@multiplicand,f
 18232  19F2  1003               	clrc
 18233  19F3  0CF4               	rrf	___bmul@multiplier,f
 18234  19F4  0874               	movf	___bmul@multiplier,w
 18235  19F5  1D03               	btfss	3,2
 18236  19F6  29EA               	goto	l6178
 18237  19F7  0873               	movf	___bmul@product,w
 18238  19F8  0008               	return
 18239  19F9                     __end_of___bmul:	
 18240                           
 18241                           	psect	text21
 18242  1E37                     __ptext21:	
 18243 ;; *************** function _menu_run_option *****************
 18244 ;; Defined at:
 18245 ;;		line 177 in file "menu_task.c"
 18246 ;; Parameters:    Size  Location     Type
 18247 ;;  data            2   27[BANK0 ] PTR struct t_menu_taskDa
 18248 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18249 ;;		 -> flashy_TaskData(26), NULL(0), 
 18250 ;; Auto vars:     Size  Location     Type
 18251 ;;		None
 18252 ;; Return value:  Size  Location     Type
 18253 ;;                  1    wreg      void 
 18254 ;; Registers used:
 18255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18256 ;; Tracked objects:
 18257 ;;		On entry : 0/0
 18258 ;;		On exit  : 0/0
 18259 ;;		Unchanged: 0/0
 18260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18265 ;;Total ram usage:        2 bytes
 18266 ;; Hardware stack levels used:    1
 18267 ;; Hardware stack levels required when called:   11
 18268 ;; This function calls:
 18269 ;;		_menu_clear
 18270 ;; This function is called by:
 18271 ;;		_menu_Main
 18272 ;; This function uses a non-reentrant model
 18273 ;;
 18274                           
 18275                           
 18276                           ;psect for function _menu_run_option
 18277  1E37                     _menu_run_option:	
 18278                           
 18279                           ;menu_task.c: 178: switch (menu_option_idx){
 18280                           
 18281                           ;incstack = 0
 18282                           ; Regs used in _menu_run_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18283  1E37  2E5F               	goto	l6282
 18284  1E38                     l6268:	
 18285                           ;menu_task.c: 179: case 1:
 18286                           
 18287                           
 18288                           ;menu_task.c: 180: menu_clear(data);
 18289  1E38  0020               	movlb	0	; select bank0
 18290  1E39  083C               	movf	menu_run_option@data+1,w
 18291  1E3A  00BA               	movwf	menu_clear@data+1
 18292  1E3B  083B               	movf	menu_run_option@data,w
 18293  1E3C  00B9               	movwf	menu_clear@data
 18294  1E3D  319F  27B9         	fcall	_menu_clear
 18295                           
 18296                           ;menu_task.c: 181: currentTask = SLOT_TASK;
 18297  1E3F  3001               	movlw	1
 18298  1E40  0021               	movlb	1	; select bank1
 18299  1E41  00B2               	movwf	_currentTask^(0+128)
 18300  1E42  3000               	movlw	0
 18301  1E43  00B3               	movwf	(_currentTask^(0+128)+1)
 18302                           
 18303                           ;menu_task.c: 182: break;
 18304  1E44  0008               	return
 18305  1E45                     l6272:	
 18306                           ;menu_task.c: 183: case 2:
 18307                           
 18308                           
 18309                           ;menu_task.c: 184: menu_clear(data);
 18310  1E45  0020               	movlb	0	; select bank0
 18311  1E46  083C               	movf	menu_run_option@data+1,w
 18312  1E47  00BA               	movwf	menu_clear@data+1
 18313  1E48  083B               	movf	menu_run_option@data,w
 18314  1E49  00B9               	movwf	menu_clear@data
 18315  1E4A  319F  27B9         	fcall	_menu_clear
 18316                           
 18317                           ;menu_task.c: 185: currentTask = LOCKED_TASK;
 18318  1E4C  3003               	movlw	3
 18319  1E4D  0021               	movlb	1	; select bank1
 18320  1E4E  00B2               	movwf	_currentTask^(0+128)
 18321  1E4F  3000               	movlw	0
 18322  1E50  00B3               	movwf	(_currentTask^(0+128)+1)
 18323                           
 18324                           ;menu_task.c: 186: break;
 18325  1E51  0008               	return
 18326  1E52                     l6276:	
 18327                           ;menu_task.c: 187: case 3:
 18328                           
 18329                           
 18330                           ;menu_task.c: 188: menu_clear(data);
 18331  1E52  0020               	movlb	0	; select bank0
 18332  1E53  083C               	movf	menu_run_option@data+1,w
 18333  1E54  00BA               	movwf	menu_clear@data+1
 18334  1E55  083B               	movf	menu_run_option@data,w
 18335  1E56  00B9               	movwf	menu_clear@data
 18336  1E57  319F  27B9         	fcall	_menu_clear
 18337                           
 18338                           ;menu_task.c: 189: currentTask = FLASHY_TASK;
 18339  1E59  3002               	movlw	2
 18340  1E5A  0021               	movlb	1	; select bank1
 18341  1E5B  00B2               	movwf	_currentTask^(0+128)
 18342  1E5C  3000               	movlw	0
 18343  1E5D  00B3               	movwf	(_currentTask^(0+128)+1)
 18344                           
 18345                           ;menu_task.c: 191: }
 18346                           
 18347                           ;menu_task.c: 190: break;
 18348  1E5E  0008               	return
 18349  1E5F                     l6282:	
 18350                           
 18351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18352                           ; Switch size 1, requested type "space"
 18353                           ; Number of cases is 1, Range of values is 0 to 0
 18354                           ; switch strategies available:
 18355                           ; Name         Instructions Cycles
 18356                           ; simple_byte            4     3 (average)
 18357                           ; direct_byte            8     6 (fixed)
 18358                           ; jumptable            260     6 (fixed)
 18359                           ;	Chosen strategy is simple_byte
 18360  1E5F  0021               	movlb	1	; select bank1
 18361  1E60  0831               	movf	(_menu_option_idx+1)^(0+128),w
 18362  1E61  3A00               	xorlw	0	; case 0
 18363  1E62  1903               	skipnz
 18364  1E63  2E65               	goto	l7802
 18365  1E64  2E70               	goto	l964
 18366  1E65                     l7802:	
 18367                           
 18368                           ; Switch size 1, requested type "space"
 18369                           ; Number of cases is 3, Range of values is 1 to 3
 18370                           ; switch strategies available:
 18371                           ; Name         Instructions Cycles
 18372                           ; simple_byte           10     6 (average)
 18373                           ; direct_byte           15     9 (fixed)
 18374                           ; jumptable            263     9 (fixed)
 18375                           ;	Chosen strategy is simple_byte
 18376  1E65  0830               	movf	_menu_option_idx^(0+128),w
 18377  1E66  3A01               	xorlw	1	; case 1
 18378  1E67  1903               	skipnz
 18379  1E68  2E38               	goto	l6268
 18380  1E69  3A03               	xorlw	3	; case 2
 18381  1E6A  1903               	skipnz
 18382  1E6B  2E45               	goto	l6272
 18383  1E6C  3A01               	xorlw	1	; case 3
 18384  1E6D  1903               	skipnz
 18385  1E6E  2E52               	goto	l6276
 18386  1E6F  2E70               	goto	l964
 18387  1E70                     l964:	
 18388  1E70  0008               	return
 18389  1E71                     __end_of_menu_run_option:	
 18390                           
 18391                           	psect	text22
 18392  1FB9                     __ptext22:	
 18393 ;; *************** function _menu_clear *****************
 18394 ;; Defined at:
 18395 ;;		line 194 in file "menu_task.c"
 18396 ;; Parameters:    Size  Location     Type
 18397 ;;  data            2   25[BANK0 ] PTR struct t_menu_taskDa
 18398 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18399 ;;		 -> flashy_TaskData(26), NULL(0), 
 18400 ;; Auto vars:     Size  Location     Type
 18401 ;;		None
 18402 ;; Return value:  Size  Location     Type
 18403 ;;                  1    wreg      void 
 18404 ;; Registers used:
 18405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18406 ;; Tracked objects:
 18407 ;;		On entry : 0/0
 18408 ;;		On exit  : 0/0
 18409 ;;		Unchanged: 0/0
 18410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18414 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18415 ;;Total ram usage:        2 bytes
 18416 ;; Hardware stack levels used:    1
 18417 ;; Hardware stack levels required when called:   10
 18418 ;; This function calls:
 18419 ;;		_nullifyBadge_segDisplayErase
 18420 ;;		_nullifyBadge_userLedsClr
 18421 ;; This function is called by:
 18422 ;;		_menu_Main
 18423 ;;		_menu_run_option
 18424 ;; This function uses a non-reentrant model
 18425 ;;
 18426                           
 18427                           
 18428                           ;psect for function _menu_clear
 18429  1FB9                     _menu_clear:	
 18430                           
 18431                           ;menu_task.c: 196: data->delayTickCount = 50;
 18432                           
 18433                           ;incstack = 0
 18434                           ; Regs used in _menu_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18435  1FB9  0020               	movlb	0	; select bank0
 18436  1FBA  0839               	movf	menu_clear@data,w
 18437  1FBB  0086               	movwf	6
 18438  1FBC  083A               	movf	menu_clear@data+1,w
 18439  1FBD  0087               	movwf	7
 18440  1FBE  3142               	addfsr 1,2
 18441  1FBF  3032               	movlw	50
 18442  1FC0  3FC0               	movwi [0]fsr1
 18443  1FC1  3000               	movlw	0
 18444  1FC2  3FC1               	movwi [1]fsr1
 18445                           
 18446                           ;menu_task.c: 197: data->holdCountA = 0;
 18447  1FC3  0839               	movf	menu_clear@data,w
 18448  1FC4  0086               	movwf	6
 18449  1FC5  083A               	movf	menu_clear@data+1,w
 18450  1FC6  0087               	movwf	7
 18451  1FC7  3144               	addfsr 1,4
 18452  1FC8  3000               	movlw	0
 18453  1FC9  3FC0               	movwi [0]fsr1
 18454  1FCA  3FC1               	movwi [1]fsr1
 18455                           
 18456                           ;menu_task.c: 198: data->holdCountB = 0;
 18457  1FCB  0839               	movf	menu_clear@data,w
 18458  1FCC  0086               	movwf	6
 18459  1FCD  083A               	movf	menu_clear@data+1,w
 18460  1FCE  0087               	movwf	7
 18461  1FCF  3146               	addfsr 1,6
 18462  1FD0  3000               	movlw	0
 18463  1FD1  3FC0               	movwi [0]fsr1
 18464  1FD2  3FC1               	movwi [1]fsr1
 18465                           
 18466                           ;menu_task.c: 199: data->holdCountX = 0;
 18467  1FD3  0839               	movf	menu_clear@data,w
 18468  1FD4  0086               	movwf	6
 18469  1FD5  083A               	movf	menu_clear@data+1,w
 18470  1FD6  0087               	movwf	7
 18471  1FD7  3148               	addfsr 1,8
 18472  1FD8  3000               	movlw	0
 18473  1FD9  3FC0               	movwi [0]fsr1
 18474  1FDA  3FC1               	movwi [1]fsr1
 18475                           
 18476                           ;menu_task.c: 200: data->holdCountY = 0;
 18477  1FDB  0839               	movf	menu_clear@data,w
 18478  1FDC  0086               	movwf	6
 18479  1FDD  083A               	movf	menu_clear@data+1,w
 18480  1FDE  0087               	movwf	7
 18481  1FDF  314A               	addfsr 1,10
 18482  1FE0  3000               	movlw	0
 18483  1FE1  3FC0               	movwi [0]fsr1
 18484  1FE2  3FC1               	movwi [1]fsr1
 18485                           
 18486                           ;menu_task.c: 201: data->noholdCount = 0;
 18487  1FE3  0839               	movf	menu_clear@data,w
 18488  1FE4  0086               	movwf	6
 18489  1FE5  083A               	movf	menu_clear@data+1,w
 18490  1FE6  0087               	movwf	7
 18491  1FE7  314C               	addfsr 1,12
 18492  1FE8  3000               	movlw	0
 18493  1FE9  3FC0               	movwi [0]fsr1
 18494  1FEA  3FC1               	movwi [1]fsr1
 18495                           
 18496                           ;menu_task.c: 203: menu_option_idx = 0;
 18497  1FEB  0021               	movlb	1	; select bank1
 18498  1FEC  01B0               	clrf	_menu_option_idx^(0+128)
 18499  1FED  01B1               	clrf	(_menu_option_idx+1)^(0+128)
 18500                           
 18501                           ;menu_task.c: 206: nullifyBadge_userLedsClr(data->badge);
 18502  1FEE  0020               	movlb	0	; select bank0
 18503  1FEF  0839               	movf	menu_clear@data,w
 18504  1FF0  0086               	movwf	6
 18505  1FF1  083A               	movf	menu_clear@data+1,w
 18506  1FF2  0087               	movwf	7
 18507  1FF3  0801               	movf	1,w
 18508  1FF4  3198  209C  319F   	fcall	_nullifyBadge_userLedsClr
 18509                           
 18510                           ;menu_task.c: 207: nullifyBadge_segDisplayErase(data->badge);
 18511  1FF7  0020               	movlb	0	; select bank0
 18512  1FF8  0839               	movf	menu_clear@data,w
 18513  1FF9  0086               	movwf	6
 18514  1FFA  083A               	movf	menu_clear@data+1,w
 18515  1FFB  0087               	movwf	7
 18516  1FFC  0801               	movf	1,w
 18517  1FFD  3198  2096         	fcall	_nullifyBadge_segDisplayErase
 18518  1FFF  0008               	return
 18519  2000                     __end_of_menu_clear:	
 18520                           
 18521                           	psect	text23
 18522  123D                     __ptext23:	
 18523 ;; *************** function _menu_display_option *****************
 18524 ;; Defined at:
 18525 ;;		line 158 in file "menu_task.c"
 18526 ;; Parameters:    Size  Location     Type
 18527 ;;  data            2   44[BANK0 ] PTR struct t_menu_taskDa
 18528 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18529 ;;		 -> flashy_TaskData(26), NULL(0), 
 18530 ;; Auto vars:     Size  Location     Type
 18531 ;;  led             2   48[BANK0 ] unsigned int 
 18532 ;;  size            2   46[BANK0 ] unsigned int 
 18533 ;; Return value:  Size  Location     Type
 18534 ;;                  1    wreg      void 
 18535 ;; Registers used:
 18536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18537 ;; Tracked objects:
 18538 ;;		On entry : 0/0
 18539 ;;		On exit  : 0/0
 18540 ;;		Unchanged: 0/0
 18541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18543 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18545 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18546 ;;Total ram usage:        6 bytes
 18547 ;; Hardware stack levels used:    1
 18548 ;; Hardware stack levels required when called:   10
 18549 ;; This function calls:
 18550 ;;		___lwmod
 18551 ;;		_marquee
 18552 ;;		_nullifyBadge_segDisplayForceUpdate
 18553 ;;		_nullifyBadge_segDisplayPutStr
 18554 ;;		_nullifyBadge_userLedsSet
 18555 ;; This function is called by:
 18556 ;;		_menu_Main
 18557 ;; This function uses a non-reentrant model
 18558 ;;
 18559                           
 18560                           
 18561                           ;psect for function _menu_display_option
 18562  123D                     _menu_display_option:	
 18563                           
 18564                           ;menu_task.c: 159: u16 size = sizeof(menu_options_leds)/sizeof(menu_options_leds[0]);
 18565                           
 18566                           ;incstack = 0
 18567                           ; Regs used in _menu_display_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18568  123D  3005               	movlw	5
 18569  123E  0020               	movlb	0	; select bank0
 18570  123F  00CE               	movwf	menu_display_option@size
 18571  1240  3000               	movlw	0
 18572  1241  00CF               	movwf	menu_display_option@size+1
 18573                           
 18574                           ;menu_task.c: 160: u16 led = menu_options_leds[menu_option_idx % size];
 18575  1242  084F               	movf	menu_display_option@size+1,w
 18576  1243  00A1               	movwf	___lwmod@divisor+1
 18577  1244  084E               	movf	menu_display_option@size,w
 18578  1245  00A0               	movwf	___lwmod@divisor
 18579  1246  0021               	movlb	1	; select bank1
 18580  1247  0831               	movf	(_menu_option_idx+1)^(0+128),w
 18581  1248  0020               	movlb	0	; select bank0
 18582  1249  00A3               	movwf	___lwmod@dividend+1
 18583  124A  0021               	movlb	1	; select bank1
 18584  124B  0830               	movf	_menu_option_idx^(0+128),w
 18585  124C  0020               	movlb	0	; select bank0
 18586  124D  00A2               	movwf	___lwmod@dividend
 18587  124E  319C  24A3  3192   	fcall	___lwmod
 18588  1251  0020               	movlb	0	; select bank0
 18589  1252  0820               	movf	?___lwmod,w
 18590  1253  0709               	addwf	9,w
 18591  1254  3EA0               	addlw	(low (_menu_options_leds| (0+256)))& (0+255)
 18592  1255  0086               	movwf	6
 18593  1256  3001               	movlw	1	; select bank3/4
 18594  1257  0087               	movwf	7
 18595  1258  3F40               	moviw [0]fsr1
 18596  1259  00D0               	movwf	menu_display_option@led
 18597  125A  3F41               	moviw [1]fsr1
 18598  125B  00D1               	movwf	menu_display_option@led+1
 18599                           
 18600                           ;menu_task.c: 166: nullifyBadge_userLedsSet(data->badge, led);
 18601  125C  0851               	movf	menu_display_option@led+1,w
 18602  125D  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 18603  125E  0850               	movf	menu_display_option@led,w
 18604  125F  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 18605  1260  084C               	movf	menu_display_option@data,w
 18606  1261  0086               	movwf	6
 18607  1262  084D               	movf	menu_display_option@data+1,w
 18608  1263  0087               	movwf	7
 18609  1264  0801               	movf	1,w
 18610  1265  3199  2160  3192   	fcall	_nullifyBadge_userLedsSet
 18611                           
 18612                           ;menu_task.c: 168: if (menu_option_idx == 0){
 18613  1268  0021               	movlb	1	; select bank1
 18614  1269  0830               	movf	_menu_option_idx^(0+128),w
 18615  126A  0431               	iorwf	(_menu_option_idx+1)^(0+128),w
 18616  126B  1D03               	btfss	3,2
 18617  126C  2A88               	goto	l6264
 18618                           
 18619                           ;menu_task.c: 169: nullifyBadge_segDisplayPutStr(data->badge, menu_option[menu_option_id
      +                          x]);
 18620  126D  3530               	lslf	_menu_option_idx^(0+128),w
 18621  126E  3E34               	addlw	(low (_menu_option| (0+256)))& (0+255)
 18622  126F  0086               	movwf	6
 18623  1270  3001               	movlw	1	; select bank2/3
 18624  1271  0087               	movwf	7
 18625  1272  3F40               	moviw [0]fsr1
 18626  1273  0020               	movlb	0	; select bank0
 18627  1274  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 18628  1275  3F41               	moviw [1]fsr1
 18629  1276  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 18630  1277  084C               	movf	menu_display_option@data,w
 18631  1278  0086               	movwf	6
 18632  1279  084D               	movf	menu_display_option@data+1,w
 18633  127A  0087               	movwf	7
 18634  127B  0801               	movf	1,w
 18635  127C  3198  20D8  3192   	fcall	_nullifyBadge_segDisplayPutStr
 18636                           
 18637                           ;menu_task.c: 170: nullifyBadge_segDisplayForceUpdate(data->badge);
 18638  127F  0020               	movlb	0	; select bank0
 18639  1280  084C               	movf	menu_display_option@data,w
 18640  1281  0086               	movwf	6
 18641  1282  084D               	movf	menu_display_option@data+1,w
 18642  1283  0087               	movwf	7
 18643  1284  0801               	movf	1,w
 18644  1285  3198  2090         	fcall	_nullifyBadge_segDisplayForceUpdate
 18645                           
 18646                           ;menu_task.c: 171: }
 18647  1287  0008               	return
 18648  1288                     l6264:	
 18649                           
 18650                           ;menu_task.c: 172: else {
 18651                           ;menu_task.c: 173: marquee(menu_option[menu_option_idx], data->noholdCount);
 18652  1288  0021               	movlb	1	; select bank1
 18653  1289  3530               	lslf	_menu_option_idx^(0+128),w
 18654  128A  3E34               	addlw	(low (_menu_option| (0+256)))& (0+255)
 18655  128B  0086               	movwf	6
 18656  128C  3001               	movlw	1	; select bank2/3
 18657  128D  0087               	movwf	7
 18658  128E  3F40               	moviw [0]fsr1
 18659  128F  0020               	movlb	0	; select bank0
 18660  1290  00BA               	movwf	marquee@string
 18661  1291  3F41               	moviw [1]fsr1
 18662  1292  00BB               	movwf	marquee@string+1
 18663  1293  084C               	movf	menu_display_option@data,w
 18664  1294  0086               	movwf	6
 18665  1295  084D               	movf	menu_display_option@data+1,w
 18666  1296  0087               	movwf	7
 18667  1297  314C               	addfsr 1,12
 18668  1298  3F40               	moviw [0]fsr1
 18669  1299  00BC               	movwf	marquee@count
 18670  129A  3F41               	moviw [1]fsr1
 18671  129B  00BD               	movwf	marquee@count+1
 18672  129C  3193  2364         	fcall	_marquee
 18673  129E  0008               	return
 18674  129F                     __end_of_menu_display_option:	
 18675                           
 18676                           	psect	text24
 18677  1A0B                     __ptext24:	
 18678 ;; *************** function _locked_unlock_leds *****************
 18679 ;; Defined at:
 18680 ;;		line 36 in file "locked_task.c"
 18681 ;; Parameters:    Size  Location     Type
 18682 ;;		None
 18683 ;; Auto vars:     Size  Location     Type
 18684 ;;		None
 18685 ;; Return value:  Size  Location     Type
 18686 ;;                  2  1151[None  ] unsigned int 
 18687 ;; Registers used:
 18688 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18689 ;; Tracked objects:
 18690 ;;		On entry : 0/0
 18691 ;;		On exit  : 0/0
 18692 ;;		Unchanged: 0/0
 18693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18698 ;;Total ram usage:        2 bytes
 18699 ;; Hardware stack levels used:    1
 18700 ;; Hardware stack levels required when called:    4
 18701 ;; This function calls:
 18702 ;;		Nothing
 18703 ;; This function is called by:
 18704 ;;		_locked_Main
 18705 ;; This function uses a non-reentrant model
 18706 ;;
 18707                           
 18708                           
 18709                           ;psect for function _locked_unlock_leds
 18710  1A0B                     _locked_unlock_leds:	
 18711                           
 18712                           ;locked_task.c: 37: locked_locking_leds_idx = 0;
 18713                           
 18714                           ;incstack = 0
 18715                           ; Regs used in _locked_unlock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 18716  1A0B  0021               	movlb	1	; select bank1
 18717  1A0C  01A2               	clrf	_locked_locking_leds_idx^(0+128)
 18718  1A0D  01A3               	clrf	(_locked_locking_leds_idx+1)^(0+128)
 18719                           
 18720                           ;locked_task.c: 38: locked_leds = locked_lock_base_leds | locked_locking_leds[locked_loc
      +                          king_leds_idx];
 18721  1A0E  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 18722  1A0F  3E20               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 18723  1A10  0086               	movwf	6
 18724  1A11  3001               	movlw	1	; select bank2/3
 18725  1A12  0087               	movwf	7
 18726  1A13  3F40               	moviw [0]fsr1
 18727  1A14  00F1               	movwf	??_locked_unlock_leds
 18728  1A15  3F41               	moviw [1]fsr1
 18729  1A16  00F2               	movwf	??_locked_unlock_leds+1
 18730  1A17  0869               	movf	_locked_lock_base_leds^(0+128),w
 18731  1A18  0471               	iorwf	??_locked_unlock_leds,w
 18732  1A19  00A0               	movwf	_locked_leds^(0+128)
 18733  1A1A  086A               	movf	(_locked_lock_base_leds+1)^(0+128),w
 18734  1A1B  0472               	iorwf	??_locked_unlock_leds+1,w
 18735  1A1C  00A1               	movwf	(_locked_leds+1)^(0+128)
 18736  1A1D  0008               	return
 18737  1A1E                     __end_of_locked_unlock_leds:	
 18738                           ;locked_task.c: 39: return locked_leds;
 18739                           ;	Return value of _locked_unlock_leds is never used
 18740                           
 18741                           
 18742                           	psect	text25
 18743  1AC5                     __ptext25:	
 18744 ;; *************** function _locked_lock_leds *****************
 18745 ;; Defined at:
 18746 ;;		line 28 in file "locked_task.c"
 18747 ;; Parameters:    Size  Location     Type
 18748 ;;		None
 18749 ;; Auto vars:     Size  Location     Type
 18750 ;;  size            2    3[COMMON] unsigned int 
 18751 ;; Return value:  Size  Location     Type
 18752 ;;                  2  1148[None  ] unsigned int 
 18753 ;; Registers used:
 18754 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18755 ;; Tracked objects:
 18756 ;;		On entry : 0/0
 18757 ;;		On exit  : 0/0
 18758 ;;		Unchanged: 0/0
 18759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18764 ;;Total ram usage:        4 bytes
 18765 ;; Hardware stack levels used:    1
 18766 ;; Hardware stack levels required when called:    4
 18767 ;; This function calls:
 18768 ;;		Nothing
 18769 ;; This function is called by:
 18770 ;;		_locked_Init
 18771 ;;		_locked_Main
 18772 ;; This function uses a non-reentrant model
 18773 ;;
 18774                           
 18775                           
 18776                           ;psect for function _locked_lock_leds
 18777  1AC5                     _locked_lock_leds:	
 18778                           
 18779                           ;locked_task.c: 29: u16 size = sizeof(locked_locking_leds) / sizeof(locked_locking_leds[
      +                          0]);
 18780                           
 18781                           ;incstack = 0
 18782                           ; Regs used in _locked_lock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 18783  1AC5  3006               	movlw	6
 18784  1AC6  00F3               	movwf	locked_lock_leds@size
 18785  1AC7  3000               	movlw	0
 18786  1AC8  00F4               	movwf	locked_lock_leds@size+1
 18787                           
 18788                           ;locked_task.c: 30: locked_locking_leds_idx = size - 1;
 18789  1AC9  0873               	movf	locked_lock_leds@size,w
 18790  1ACA  3EFF               	addlw	255
 18791  1ACB  0021               	movlb	1	; select bank1
 18792  1ACC  00A2               	movwf	_locked_locking_leds_idx^(0+128)
 18793  1ACD  30FF               	movlw	255
 18794  1ACE  3D74               	addwfc	locked_lock_leds@size+1,w
 18795  1ACF  00A3               	movwf	(_locked_locking_leds_idx+1)^(0+128)
 18796                           
 18797                           ;locked_task.c: 31: locked_leds = locked_lock_base_leds | locked_locking_leds[locked_loc
      +                          king_leds_idx];
 18798  1AD0  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 18799  1AD1  3E20               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 18800  1AD2  0086               	movwf	6
 18801  1AD3  3001               	movlw	1	; select bank2/3
 18802  1AD4  0087               	movwf	7
 18803  1AD5  3F40               	moviw [0]fsr1
 18804  1AD6  00F1               	movwf	??_locked_lock_leds
 18805  1AD7  3F41               	moviw [1]fsr1
 18806  1AD8  00F2               	movwf	??_locked_lock_leds+1
 18807  1AD9  0869               	movf	_locked_lock_base_leds^(0+128),w
 18808  1ADA  0471               	iorwf	??_locked_lock_leds,w
 18809  1ADB  00A0               	movwf	_locked_leds^(0+128)
 18810  1ADC  086A               	movf	(_locked_lock_base_leds+1)^(0+128),w
 18811  1ADD  0472               	iorwf	??_locked_lock_leds+1,w
 18812  1ADE  00A1               	movwf	(_locked_leds+1)^(0+128)
 18813  1ADF  0008               	return
 18814  1AE0                     __end_of_locked_lock_leds:	
 18815                           ;locked_task.c: 32: return locked_leds;
 18816                           ;	Return value of _locked_lock_leds is never used
 18817                           
 18818                           
 18819                           	psect	text26
 18820  1A76                     __ptext26:	
 18821 ;; *************** function _locked_get_unlock_leds *****************
 18822 ;; Defined at:
 18823 ;;		line 53 in file "locked_task.c"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;		None
 18826 ;; Auto vars:     Size  Location     Type
 18827 ;;  leds            2    3[COMMON] unsigned int 
 18828 ;; Return value:  Size  Location     Type
 18829 ;;                  2    1[COMMON] unsigned int 
 18830 ;; Registers used:
 18831 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18832 ;; Tracked objects:
 18833 ;;		On entry : 0/0
 18834 ;;		On exit  : 0/0
 18835 ;;		Unchanged: 0/0
 18836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18840 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18841 ;;Total ram usage:        4 bytes
 18842 ;; Hardware stack levels used:    1
 18843 ;; Hardware stack levels required when called:    4
 18844 ;; This function calls:
 18845 ;;		Nothing
 18846 ;; This function is called by:
 18847 ;;		_locked_Main
 18848 ;; This function uses a non-reentrant model
 18849 ;;
 18850                           
 18851                           
 18852                           ;psect for function _locked_get_unlock_leds
 18853  1A76                     _locked_get_unlock_leds:	
 18854                           
 18855                           ;locked_task.c: 54: u16 leds = locked_locking_leds[locked_locking_leds_idx];
 18856                           
 18857                           ;incstack = 0
 18858                           ; Regs used in _locked_get_unlock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 18859  1A76  0021               	movlb	1	; select bank1
 18860  1A77  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 18861  1A78  3E20               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 18862  1A79  0086               	movwf	6
 18863  1A7A  3001               	movlw	1	; select bank2/3
 18864  1A7B  0087               	movwf	7
 18865  1A7C  3F40               	moviw [0]fsr1
 18866  1A7D  00F3               	movwf	locked_get_unlock_leds@leds
 18867  1A7E  3F41               	moviw [1]fsr1
 18868  1A7F  00F4               	movwf	locked_get_unlock_leds@leds+1
 18869                           
 18870                           ;locked_task.c: 57: if (locked_locking_leds_idx > 0){
 18871  1A80  0822               	movf	_locked_locking_leds_idx^(0+128),w
 18872  1A81  0423               	iorwf	(_locked_locking_leds_idx+1)^(0+128),w
 18873  1A82  1903               	btfsc	3,2
 18874  1A83  2A88               	goto	l1159
 18875                           
 18876                           ;locked_task.c: 58: locked_locking_leds_idx -= 1;
 18877  1A84  3001               	movlw	1
 18878  1A85  02A2               	subwf	_locked_locking_leds_idx^(0+128),f
 18879  1A86  3000               	movlw	0
 18880  1A87  3BA3               	subwfb	(_locked_locking_leds_idx+1)^(0+128),f
 18881  1A88                     l1159:	
 18882                           
 18883                           ;locked_task.c: 59: }
 18884                           ;locked_task.c: 60: return locked_lock_base_leds | leds;
 18885  1A88  0873               	movf	locked_get_unlock_leds@leds,w
 18886  1A89  0469               	iorwf	_locked_lock_base_leds^(0+128),w
 18887  1A8A  00F1               	movwf	?_locked_get_unlock_leds
 18888  1A8B  0874               	movf	locked_get_unlock_leds@leds+1,w
 18889  1A8C  046A               	iorwf	(_locked_lock_base_leds+1)^(0+128),w
 18890  1A8D  00F2               	movwf	?_locked_get_unlock_leds+1
 18891  1A8E  0008               	return
 18892  1A8F                     __end_of_locked_get_unlock_leds:	
 18893                           
 18894                           	psect	text27
 18895  1C54                     __ptext27:	
 18896 ;; *************** function _locked_get_lock_leds *****************
 18897 ;; Defined at:
 18898 ;;		line 42 in file "locked_task.c"
 18899 ;; Parameters:    Size  Location     Type
 18900 ;;		None
 18901 ;; Auto vars:     Size  Location     Type
 18902 ;;  leds            2    7[COMMON] unsigned int 
 18903 ;;  size            2    5[COMMON] unsigned int 
 18904 ;; Return value:  Size  Location     Type
 18905 ;;                  2    1[COMMON] unsigned int 
 18906 ;; Registers used:
 18907 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18908 ;; Tracked objects:
 18909 ;;		On entry : 0/0
 18910 ;;		On exit  : 0/0
 18911 ;;		Unchanged: 0/0
 18912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18915 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18916 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18917 ;;Total ram usage:        8 bytes
 18918 ;; Hardware stack levels used:    1
 18919 ;; Hardware stack levels required when called:    4
 18920 ;; This function calls:
 18921 ;;		Nothing
 18922 ;; This function is called by:
 18923 ;;		_locked_Main
 18924 ;; This function uses a non-reentrant model
 18925 ;;
 18926                           
 18927                           
 18928                           ;psect for function _locked_get_lock_leds
 18929  1C54                     _locked_get_lock_leds:	
 18930                           
 18931                           ;locked_task.c: 43: u16 size = sizeof(locked_locking_leds) / sizeof(locked_locking_leds[
      +                          0]);
 18932                           
 18933                           ;incstack = 0
 18934                           ; Regs used in _locked_get_lock_leds: [wreg+fsr1l+fsr1h+status,2+status,0]
 18935  1C54  3006               	movlw	6
 18936  1C55  00F5               	movwf	locked_get_lock_leds@size
 18937  1C56  3000               	movlw	0
 18938  1C57  00F6               	movwf	locked_get_lock_leds@size+1
 18939                           
 18940                           ;locked_task.c: 44: u16 leds = locked_locking_leds[locked_locking_leds_idx];
 18941  1C58  0021               	movlb	1	; select bank1
 18942  1C59  3522               	lslf	_locked_locking_leds_idx^(0+128),w
 18943  1C5A  3E20               	addlw	(low (_locked_locking_leds| (0+256)))& (0+255)
 18944  1C5B  0086               	movwf	6
 18945  1C5C  3001               	movlw	1	; select bank2/3
 18946  1C5D  0087               	movwf	7
 18947  1C5E  3F40               	moviw [0]fsr1
 18948  1C5F  00F7               	movwf	locked_get_lock_leds@leds
 18949  1C60  3F41               	moviw [1]fsr1
 18950  1C61  00F8               	movwf	locked_get_lock_leds@leds+1
 18951                           
 18952                           ;locked_task.c: 47: if (locked_locking_leds_idx < size - 1){
 18953  1C62  0875               	movf	locked_get_lock_leds@size,w
 18954  1C63  3EFF               	addlw	255
 18955  1C64  00F3               	movwf	??_locked_get_lock_leds
 18956  1C65  30FF               	movlw	255
 18957  1C66  3D76               	addwfc	locked_get_lock_leds@size+1,w
 18958  1C67  00F4               	movwf	??_locked_get_lock_leds+1
 18959  1C68  0874               	movf	??_locked_get_lock_leds+1,w
 18960  1C69  0223               	subwf	(_locked_locking_leds_idx+1)^(0+128),w
 18961  1C6A  1D03               	skipz
 18962  1C6B  2C6E               	goto	u3605
 18963  1C6C  0873               	movf	??_locked_get_lock_leds,w
 18964  1C6D  0222               	subwf	_locked_locking_leds_idx^(0+128),w
 18965  1C6E                     u3605:	
 18966  1C6E  1803               	skipnc
 18967  1C6F  2C74               	goto	l1155
 18968                           
 18969                           ;locked_task.c: 48: locked_locking_leds_idx += 1;
 18970  1C70  3001               	movlw	1
 18971  1C71  07A2               	addwf	_locked_locking_leds_idx^(0+128),f
 18972  1C72  3000               	movlw	0
 18973  1C73  3DA3               	addwfc	(_locked_locking_leds_idx+1)^(0+128),f
 18974  1C74                     l1155:	
 18975                           
 18976                           ;locked_task.c: 49: }
 18977                           ;locked_task.c: 50: return leds;
 18978  1C74  0878               	movf	locked_get_lock_leds@leds+1,w
 18979  1C75  00F2               	movwf	?_locked_get_lock_leds+1
 18980  1C76  0877               	movf	locked_get_lock_leds@leds,w
 18981  1C77  00F1               	movwf	?_locked_get_lock_leds
 18982  1C78  0008               	return
 18983  1C79                     __end_of_locked_get_lock_leds:	
 18984                           
 18985                           	psect	text28
 18986  1F34                     __ptext28:	
 18987 ;; *************** function _locked_clear *****************
 18988 ;; Defined at:
 18989 ;;		line 184 in file "locked_task.c"
 18990 ;; Parameters:    Size  Location     Type
 18991 ;;  data            2   25[BANK0 ] PTR struct t_locked_task
 18992 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 18993 ;;		 -> flashy_TaskData(26), NULL(0), 
 18994 ;; Auto vars:     Size  Location     Type
 18995 ;;		None
 18996 ;; Return value:  Size  Location     Type
 18997 ;;                  1    wreg      void 
 18998 ;; Registers used:
 18999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19000 ;; Tracked objects:
 19001 ;;		On entry : 0/0
 19002 ;;		On exit  : 0/0
 19003 ;;		Unchanged: 0/0
 19004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19005 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19008 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19009 ;;Total ram usage:        2 bytes
 19010 ;; Hardware stack levels used:    1
 19011 ;; Hardware stack levels required when called:   10
 19012 ;; This function calls:
 19013 ;;		_nullifyBadge_segDisplayErase
 19014 ;;		_nullifyBadge_userLedsClr
 19015 ;; This function is called by:
 19016 ;;		_locked_Main
 19017 ;; This function uses a non-reentrant model
 19018 ;;
 19019                           
 19020                           
 19021                           ;psect for function _locked_clear
 19022  1F34                     _locked_clear:	
 19023                           
 19024                           ;locked_task.c: 186: data->delayTickCount = 0;
 19025                           
 19026                           ;incstack = 0
 19027                           ; Regs used in _locked_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19028  1F34  0020               	movlb	0	; select bank0
 19029  1F35  0839               	movf	locked_clear@data,w
 19030  1F36  0086               	movwf	6
 19031  1F37  083A               	movf	locked_clear@data+1,w
 19032  1F38  0087               	movwf	7
 19033  1F39  3141               	addfsr 1,1
 19034  1F3A  3000               	movlw	0
 19035  1F3B  3FC0               	movwi [0]fsr1
 19036  1F3C  3FC1               	movwi [1]fsr1
 19037                           
 19038                           ;locked_task.c: 187: data->holdCountA = 0;
 19039  1F3D  0839               	movf	locked_clear@data,w
 19040  1F3E  0086               	movwf	6
 19041  1F3F  083A               	movf	locked_clear@data+1,w
 19042  1F40  0087               	movwf	7
 19043  1F41  3143               	addfsr 1,3
 19044  1F42  3000               	movlw	0
 19045  1F43  3FC0               	movwi [0]fsr1
 19046  1F44  3FC1               	movwi [1]fsr1
 19047                           
 19048                           ;locked_task.c: 188: data->holdCountB = 0;
 19049  1F45  0839               	movf	locked_clear@data,w
 19050  1F46  0086               	movwf	6
 19051  1F47  083A               	movf	locked_clear@data+1,w
 19052  1F48  0087               	movwf	7
 19053  1F49  3145               	addfsr 1,5
 19054  1F4A  3000               	movlw	0
 19055  1F4B  3FC0               	movwi [0]fsr1
 19056  1F4C  3FC1               	movwi [1]fsr1
 19057                           
 19058                           ;locked_task.c: 189: data->holdCountX = 0;
 19059  1F4D  0839               	movf	locked_clear@data,w
 19060  1F4E  0086               	movwf	6
 19061  1F4F  083A               	movf	locked_clear@data+1,w
 19062  1F50  0087               	movwf	7
 19063  1F51  3147               	addfsr 1,7
 19064  1F52  3000               	movlw	0
 19065  1F53  3FC0               	movwi [0]fsr1
 19066  1F54  3FC1               	movwi [1]fsr1
 19067                           
 19068                           ;locked_task.c: 190: data->holdCountY = 0;
 19069  1F55  0839               	movf	locked_clear@data,w
 19070  1F56  0086               	movwf	6
 19071  1F57  083A               	movf	locked_clear@data+1,w
 19072  1F58  0087               	movwf	7
 19073  1F59  3149               	addfsr 1,9
 19074  1F5A  3000               	movlw	0
 19075  1F5B  3FC0               	movwi [0]fsr1
 19076  1F5C  3FC1               	movwi [1]fsr1
 19077                           
 19078                           ;locked_task.c: 191: data->noholdCount = 0;
 19079  1F5D  0839               	movf	locked_clear@data,w
 19080  1F5E  0086               	movwf	6
 19081  1F5F  083A               	movf	locked_clear@data+1,w
 19082  1F60  0087               	movwf	7
 19083  1F61  314B               	addfsr 1,11
 19084  1F62  3000               	movlw	0
 19085  1F63  3FC0               	movwi [0]fsr1
 19086  1F64  3FC1               	movwi [1]fsr1
 19087                           
 19088                           ;locked_task.c: 194: nullifyBadge_userLedsClr(data->badge);
 19089  1F65  0839               	movf	locked_clear@data,w
 19090  1F66  0086               	movwf	6
 19091  1F67  083A               	movf	locked_clear@data+1,w
 19092  1F68  0087               	movwf	7
 19093  1F69  0801               	movf	1,w
 19094  1F6A  3198  209C  319F   	fcall	_nullifyBadge_userLedsClr
 19095                           
 19096                           ;locked_task.c: 195: nullifyBadge_segDisplayErase(data->badge);
 19097  1F6D  0020               	movlb	0	; select bank0
 19098  1F6E  0839               	movf	locked_clear@data,w
 19099  1F6F  0086               	movwf	6
 19100  1F70  083A               	movf	locked_clear@data+1,w
 19101  1F71  0087               	movwf	7
 19102  1F72  0801               	movf	1,w
 19103  1F73  3198  2096         	fcall	_nullifyBadge_segDisplayErase
 19104  1F75  0008               	return
 19105  1F76                     __end_of_locked_clear:	
 19106                           
 19107                           	psect	text29
 19108  189C                     __ptext29:	
 19109 ;; *************** function _nullifyBadge_userLedsClr *****************
 19110 ;; Defined at:
 19111 ;;		line 177 in file "nullifyBadge.c"
 19112 ;; Parameters:    Size  Location     Type
 19113 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 19114 ;;		 -> badge_inst(18), 
 19115 ;; Auto vars:     Size  Location     Type
 19116 ;;  badge           1   11[BANK0 ] PTR struct t_nullifyBadg
 19117 ;;		 -> badge_inst(18), 
 19118 ;; Return value:  Size  Location     Type
 19119 ;;                  1    wreg      void 
 19120 ;; Registers used:
 19121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19122 ;; Tracked objects:
 19123 ;;		On entry : 0/0
 19124 ;;		On exit  : 0/0
 19125 ;;		Unchanged: 0/0
 19126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19131 ;;Total ram usage:        1 bytes
 19132 ;; Hardware stack levels used:    1
 19133 ;; Hardware stack levels required when called:    8
 19134 ;; This function calls:
 19135 ;;		_displayL2_ClrUserLeds
 19136 ;; This function is called by:
 19137 ;;		_menu_Init
 19138 ;;		_menu_clear
 19139 ;;		_menu_Exit
 19140 ;;		_flashy_Init
 19141 ;;		_flashy_Exit
 19142 ;;		_locked_Init
 19143 ;;		_locked_clear
 19144 ;;		_locked_Exit
 19145 ;;		_secret_Init
 19146 ;;		_secret_Exit
 19147 ;;		_slot_Init
 19148 ;;		_slot_Exit
 19149 ;; This function uses a non-reentrant model
 19150 ;;
 19151                           
 19152                           
 19153                           ;psect for function _nullifyBadge_userLedsClr
 19154  189C                     _nullifyBadge_userLedsClr:	
 19155                           
 19156                           ;incstack = 0
 19157                           ; Regs used in _nullifyBadge_userLedsClr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 19158                           ;nullifyBadge_userLedsClr@badge stored from wreg
 19159  189C  0020               	movlb	0	; select bank0
 19160  189D  00AB               	movwf	nullifyBadge_userLedsClr@badge
 19161                           
 19162                           ;nullifyBadge.c: 178: displayL2_ClrUserLeds(&badge->display);
 19163  189E  082B               	movf	nullifyBadge_userLedsClr@badge,w
 19164  189F  3199  217B         	fcall	_displayL2_ClrUserLeds
 19165  18A1  0008               	return
 19166  18A2                     __end_of_nullifyBadge_userLedsClr:	
 19167                           
 19168                           	psect	text30
 19169  197B                     __ptext30:	
 19170 ;; *************** function _displayL2_ClrUserLeds *****************
 19171 ;; Defined at:
 19172 ;;		line 94 in file "nullifyBadge_displayL2.c"
 19173 ;; Parameters:    Size  Location     Type
 19174 ;;  display         1    wreg     PTR struct t_nullifyDisp
 19175 ;;		 -> badge_inst(18), 
 19176 ;; Auto vars:     Size  Location     Type
 19177 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 19178 ;;		 -> badge_inst(18), 
 19179 ;; Return value:  Size  Location     Type
 19180 ;;                  1    wreg      void 
 19181 ;; Registers used:
 19182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19183 ;; Tracked objects:
 19184 ;;		On entry : 0/0
 19185 ;;		On exit  : 0/0
 19186 ;;		Unchanged: 0/0
 19187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19192 ;;Total ram usage:        1 bytes
 19193 ;; Hardware stack levels used:    1
 19194 ;; Hardware stack levels required when called:    7
 19195 ;; This function calls:
 19196 ;;		_displayL1_SetUserLed
 19197 ;;		_displayL1_Update
 19198 ;; This function is called by:
 19199 ;;		_nullifyBadge_userLedsClr
 19200 ;; This function uses a non-reentrant model
 19201 ;;
 19202                           
 19203                           
 19204                           ;psect for function _displayL2_ClrUserLeds
 19205  197B                     _displayL2_ClrUserLeds:	
 19206                           
 19207                           ;incstack = 0
 19208                           ; Regs used in _displayL2_ClrUserLeds: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19209                           ;displayL2_ClrUserLeds@display stored from wreg
 19210  197B  00FB               	movwf	displayL2_ClrUserLeds@display
 19211                           
 19212                           ;nullifyBadge_displayL2.c: 95: displayL1_SetUserLed(&display->display_l1, 0);
 19213  197C  3000               	movlw	0
 19214  197D  00F1               	movwf	displayL1_SetUserLed@userLedVect
 19215  197E  00F2               	movwf	displayL1_SetUserLed@userLedVect+1
 19216  197F  087B               	movf	displayL2_ClrUserLeds@display,w
 19217  1980  3E07               	addlw	7
 19218  1981  3199  21F9  3199   	fcall	_displayL1_SetUserLed
 19219                           
 19220                           ;nullifyBadge_displayL2.c: 96: displayL1_Update(&display->display_l1);
 19221  1984  087B               	movf	displayL2_ClrUserLeds@display,w
 19222  1985  3E07               	addlw	7
 19223  1986  3199  21D7         	fcall	_displayL1_Update
 19224  1988  0008               	return
 19225  1989                     __end_of_displayL2_ClrUserLeds:	
 19226                           
 19227                           	psect	text31
 19228  1896                     __ptext31:	
 19229 ;; *************** function _nullifyBadge_segDisplayErase *****************
 19230 ;; Defined at:
 19231 ;;		line 123 in file "nullifyBadge.c"
 19232 ;; Parameters:    Size  Location     Type
 19233 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 19234 ;;		 -> badge_inst(18), 
 19235 ;; Auto vars:     Size  Location     Type
 19236 ;;  badge           1   24[BANK0 ] PTR struct t_nullifyBadg
 19237 ;;		 -> badge_inst(18), 
 19238 ;; Return value:  Size  Location     Type
 19239 ;;                  1    wreg      void 
 19240 ;; Registers used:
 19241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19242 ;; Tracked objects:
 19243 ;;		On entry : 0/0
 19244 ;;		On exit  : 0/0
 19245 ;;		Unchanged: 0/0
 19246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19250 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19251 ;;Total ram usage:        1 bytes
 19252 ;; Hardware stack levels used:    1
 19253 ;; Hardware stack levels required when called:    9
 19254 ;; This function calls:
 19255 ;;		_displayL2_EraseSegDisplay
 19256 ;; This function is called by:
 19257 ;;		_menu_Init
 19258 ;;		_menu_clear
 19259 ;;		_menu_Exit
 19260 ;;		_flashy_Init
 19261 ;;		_flashy_Exit
 19262 ;;		_locked_Init
 19263 ;;		_locked_clear
 19264 ;;		_locked_Exit
 19265 ;;		_secret_Init
 19266 ;;		_secret_Exit
 19267 ;;		_slot_Init
 19268 ;;		_slot_Exit
 19269 ;;		_fadeDisplay_Init
 19270 ;;		_fadeDisplay_Exit
 19271 ;; This function uses a non-reentrant model
 19272 ;;
 19273                           
 19274                           
 19275                           ;psect for function _nullifyBadge_segDisplayErase
 19276  1896                     _nullifyBadge_segDisplayErase:	
 19277                           
 19278                           ;incstack = 0
 19279                           ; Regs used in _nullifyBadge_segDisplayErase: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 19280                           ;nullifyBadge_segDisplayErase@badge stored from wreg
 19281  1896  0020               	movlb	0	; select bank0
 19282  1897  00B8               	movwf	nullifyBadge_segDisplayErase@badge
 19283                           
 19284                           ;nullifyBadge.c: 124: displayL2_EraseSegDisplay(&badge->display);
 19285  1898  0838               	movf	nullifyBadge_segDisplayErase@badge,w
 19286  1899  3199  21C7         	fcall	_displayL2_EraseSegDisplay
 19287  189B  0008               	return
 19288  189C                     __end_of_nullifyBadge_segDisplayErase:	
 19289                           
 19290                           	psect	text32
 19291  19C7                     __ptext32:	
 19292 ;; *************** function _displayL2_EraseSegDisplay *****************
 19293 ;; Defined at:
 19294 ;;		line 83 in file "nullifyBadge_displayL2.c"
 19295 ;; Parameters:    Size  Location     Type
 19296 ;;  display         1    wreg     PTR struct t_nullifyDisp
 19297 ;;		 -> badge_inst(18), 
 19298 ;; Auto vars:     Size  Location     Type
 19299 ;;  display         1   23[BANK0 ] PTR struct t_nullifyDisp
 19300 ;;		 -> badge_inst(18), 
 19301 ;; Return value:  Size  Location     Type
 19302 ;;                  1    wreg      void 
 19303 ;; Registers used:
 19304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19305 ;; Tracked objects:
 19306 ;;		On entry : 0/0
 19307 ;;		On exit  : 0/0
 19308 ;;		Unchanged: 0/0
 19309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19313 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19314 ;;Total ram usage:        1 bytes
 19315 ;; Hardware stack levels used:    1
 19316 ;; Hardware stack levels required when called:    8
 19317 ;; This function calls:
 19318 ;;		_displayL1_Update
 19319 ;;		_displayL2_PutStr
 19320 ;; This function is called by:
 19321 ;;		_nullifyBadge_segDisplayErase
 19322 ;; This function uses a non-reentrant model
 19323 ;;
 19324                           
 19325                           
 19326                           ;psect for function _displayL2_EraseSegDisplay
 19327  19C7                     _displayL2_EraseSegDisplay:	
 19328                           
 19329                           ;incstack = 0
 19330                           ; Regs used in _displayL2_EraseSegDisplay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19331                           ;displayL2_EraseSegDisplay@display stored from wreg
 19332  19C7  0020               	movlb	0	; select bank0
 19333  19C8  00B7               	movwf	displayL2_EraseSegDisplay@display
 19334                           
 19335                           ;nullifyBadge_displayL2.c: 84: displayL2_PutStr(display, "    ");
 19336  19C9  3074               	movlw	low (STR_3| (0+32768))
 19337  19CA  00B0               	movwf	displayL2_PutStr@str
 19338  19CB  30A0               	movlw	high (STR_3| (0+32768))
 19339  19CC  00B1               	movwf	displayL2_PutStr@str+1
 19340  19CD  0837               	movf	displayL2_EraseSegDisplay@display,w
 19341  19CE  319C  2479  3199   	fcall	_displayL2_PutStr
 19342                           
 19343                           ;nullifyBadge_displayL2.c: 85: displayL1_Update(&display->display_l1);
 19344  19D1  0020               	movlb	0	; select bank0
 19345  19D2  0837               	movf	displayL2_EraseSegDisplay@display,w
 19346  19D3  3E07               	addlw	7
 19347  19D4  3199  21D7         	fcall	_displayL1_Update
 19348  19D6  0008               	return
 19349  19D7                     __end_of_displayL2_EraseSegDisplay:	
 19350                           
 19351                           	psect	text33
 19352  093C                     __ptext33:	
 19353 ;; *************** function _sprintf *****************
 19354 ;; Defined at:
 19355 ;;		line 492 in file "/Applications/microchip/xc8/v1.42/sources/common/doprnt.c"
 19356 ;; Parameters:    Size  Location     Type
 19357 ;;  sp              1    wreg     PTR unsigned char 
 19358 ;;		 -> flashy_Main@hit_counter(6), 
 19359 ;;  f               2    4[BANK0 ] PTR const unsigned char 
 19360 ;;		 -> STR_15(4), 
 19361 ;; Auto vars:     Size  Location     Type
 19362 ;;  sp              1   17[BANK0 ] PTR unsigned char 
 19363 ;;		 -> flashy_Main@hit_counter(6), 
 19364 ;;  tmpval          4    0        struct .
 19365 ;;  width           2   18[BANK0 ] int 
 19366 ;;  val             2   15[BANK0 ] unsigned int 
 19367 ;;  cp              2    0        PTR const unsigned char 
 19368 ;;  len             2    0        unsigned int 
 19369 ;;  c               1   20[BANK0 ] char 
 19370 ;;  flag            1   14[BANK0 ] unsigned char 
 19371 ;;  prec            1   13[BANK0 ] char 
 19372 ;;  ap              1   12[BANK0 ] PTR void [1]
 19373 ;;		 -> ?_sprintf(2), 
 19374 ;; Return value:  Size  Location     Type
 19375 ;;                  2    4[BANK0 ] int 
 19376 ;; Registers used:
 19377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19378 ;; Tracked objects:
 19379 ;;		On entry : 0/0
 19380 ;;		On exit  : 0/0
 19381 ;;		Unchanged: 0/0
 19382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19383 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19384 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19385 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19386 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19387 ;;Total ram usage:       17 bytes
 19388 ;; Hardware stack levels used:    1
 19389 ;; Hardware stack levels required when called:    5
 19390 ;; This function calls:
 19391 ;;		___lwdiv
 19392 ;;		___lwmod
 19393 ;;		___wmul
 19394 ;;		_isdigit
 19395 ;; This function is called by:
 19396 ;;		_flashy_Main
 19397 ;; This function uses a non-reentrant model
 19398 ;;
 19399                           
 19400                           
 19401                           ;psect for function _sprintf
 19402  093C                     _sprintf:	
 19403                           
 19404                           ;incstack = 0
 19405                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19406                           ;sprintf@sp stored from wreg
 19407  093C  0020               	movlb	0	; select bank0
 19408  093D  00B1               	movwf	sprintf@sp
 19409                           
 19410                           ;doprnt.c: 494: va_list ap;
 19411                           ;doprnt.c: 499: signed char c;
 19412                           ;doprnt.c: 501: int width;
 19413                           ;doprnt.c: 506: signed char prec;
 19414                           ;doprnt.c: 508: unsigned char flag;
 19415                           ;doprnt.c: 523: union {
 19416                           ;doprnt.c: 524: unsigned long vd;
 19417                           ;doprnt.c: 525: double integ;
 19418                           ;doprnt.c: 526: } tmpval;
 19419                           ;doprnt.c: 528: unsigned int val;
 19420                           ;doprnt.c: 529: unsigned len;
 19421                           ;doprnt.c: 530: const char * cp;
 19422                           ;doprnt.c: 533: *ap = __va_start();
 19423  093E  3026               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 19424  093F  00A8               	movwf	??_sprintf
 19425  0940  0828               	movf	??_sprintf,w
 19426  0941  00AC               	movwf	sprintf@ap
 19427  0942                     l6378:	
 19428                           ;doprnt.c: 536: while(c = *f++) {
 19429                           
 19430  0942  0020               	movlb	0	; select bank0
 19431  0943  0825               	movf	sprintf@f+1,w
 19432  0944  00A9               	movwf	??_sprintf+1
 19433  0945  0824               	movf	sprintf@f,w
 19434  0946  00A8               	movwf	??_sprintf
 19435  0947  0AA4               	incf	sprintf@f,f
 19436  0948  1903               	skipnz
 19437  0949  0AA5               	incf	sprintf@f+1,f
 19438  094A  0828               	movf	??_sprintf,w
 19439  094B  0084               	movwf	4
 19440  094C  0829               	movf	??_sprintf+1,w
 19441  094D  0085               	movwf	5
 19442  094E  0800               	movf	0,w	;code access
 19443  094F  00AA               	movwf	??_sprintf+2
 19444  0950  082A               	movf	??_sprintf+2,w
 19445  0951  00B4               	movwf	sprintf@c
 19446  0952  0834               	movf	sprintf@c,w
 19447  0953  1903               	btfsc	3,2
 19448  0954  2A87               	goto	l6380
 19449                           
 19450                           ;doprnt.c: 538: if(c != '%')
 19451  0955  3025               	movlw	37
 19452  0956  0634               	xorwf	sprintf@c,w
 19453  0957  1903               	btfsc	3,2
 19454  0958  2965               	goto	l6304
 19455                           
 19456                           ;doprnt.c: 540: {
 19457                           ;doprnt.c: 541: ((*sp++ = (c)));
 19458  0959  0834               	movf	sprintf@c,w
 19459  095A  00A8               	movwf	??_sprintf
 19460  095B  0831               	movf	sprintf@sp,w
 19461  095C  0086               	movwf	6
 19462  095D  0187               	clrf	7
 19463  095E  0828               	movf	??_sprintf,w
 19464  095F  0081               	movwf	1
 19465  0960  3001               	movlw	1
 19466  0961  00A8               	movwf	??_sprintf
 19467  0962  0828               	movf	??_sprintf,w
 19468  0963  07B1               	addwf	sprintf@sp,f
 19469                           
 19470                           ;doprnt.c: 542: continue;
 19471  0964  2942               	goto	l6378
 19472  0965                     l6304:	
 19473                           
 19474                           ;doprnt.c: 543: }
 19475                           ;doprnt.c: 546: width = 0;
 19476  0965  01B2               	clrf	sprintf@width
 19477  0966  01B3               	clrf	sprintf@width+1
 19478                           
 19479                           ;doprnt.c: 548: flag = 0;
 19480  0967  01AE               	clrf	sprintf@flag
 19481                           
 19482                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 19483  0968  0824               	movf	sprintf@f,w
 19484  0969  0084               	movwf	4
 19485  096A  0825               	movf	sprintf@f+1,w
 19486  096B  0085               	movwf	5
 19487  096C  0800               	movf	0,w	;code access
 19488  096D  3199  216D  3189   	fcall	_isdigit
 19489  0970  1C03               	btfss	3,0
 19490  0971  29A3               	goto	l6320
 19491                           
 19492                           ;doprnt.c: 598: width = 0;
 19493  0972  0020               	movlb	0	; select bank0
 19494  0973  01B2               	clrf	sprintf@width
 19495  0974  01B3               	clrf	sprintf@width+1
 19496  0975                     l6310:	
 19497                           ;doprnt.c: 599: do {
 19498                           
 19499                           
 19500                           ;doprnt.c: 600: width *= 10;
 19501  0975  300A               	movlw	10
 19502  0976  00F1               	movwf	___wmul@multiplier
 19503  0977  3000               	movlw	0
 19504  0978  00F2               	movwf	___wmul@multiplier+1
 19505  0979  0020               	movlb	0	; select bank0
 19506  097A  0833               	movf	sprintf@width+1,w
 19507  097B  00F4               	movwf	___wmul@multiplicand+1
 19508  097C  0832               	movf	sprintf@width,w
 19509  097D  00F3               	movwf	___wmul@multiplicand
 19510  097E  319A  22AA  3189   	fcall	___wmul
 19511  0981  0872               	movf	?___wmul+1,w
 19512  0982  0020               	movlb	0	; select bank0
 19513  0983  00B3               	movwf	sprintf@width+1
 19514  0984  0871               	movf	?___wmul,w
 19515  0985  00B2               	movwf	sprintf@width
 19516                           
 19517                           ;doprnt.c: 601: width += *f++ - '0';
 19518  0986  0824               	movf	sprintf@f,w
 19519  0987  0084               	movwf	4
 19520  0988  0825               	movf	sprintf@f+1,w
 19521  0989  0085               	movwf	5
 19522  098A  0800               	movf	0,w	;code access
 19523  098B  3ED0               	addlw	208
 19524  098C  00A8               	movwf	??_sprintf
 19525  098D  30FF               	movlw	255
 19526  098E  1803               	skipnc
 19527  098F  3000               	movlw	0
 19528  0990  00A9               	movwf	??_sprintf+1
 19529  0991  0828               	movf	??_sprintf,w
 19530  0992  07B2               	addwf	sprintf@width,f
 19531  0993  0829               	movf	??_sprintf+1,w
 19532  0994  3DB3               	addwfc	sprintf@width+1,f
 19533  0995  3001               	movlw	1
 19534  0996  07A4               	addwf	sprintf@f,f
 19535  0997  3000               	movlw	0
 19536  0998  3DA5               	addwfc	sprintf@f+1,f
 19537                           
 19538                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 19539  0999  0824               	movf	sprintf@f,w
 19540  099A  0084               	movwf	4
 19541  099B  0825               	movf	sprintf@f+1,w
 19542  099C  0085               	movwf	5
 19543  099D  0800               	movf	0,w	;code access
 19544  099E  3199  216D  3189   	fcall	_isdigit
 19545  09A1  1803               	btfsc	3,0
 19546  09A2  2975               	goto	l6310
 19547  09A3                     l6320:	
 19548                           ;doprnt.c: 822: }
 19549                           
 19550                           ;doprnt.c: 813: continue;
 19551                           
 19552                           ;doprnt.c: 802: default:
 19553                           
 19554                           ;doprnt.c: 698: case 'i':
 19555                           ;doprnt.c: 699: break;
 19556                           
 19557                           ;doprnt.c: 697: case 'd':
 19558                           
 19559                           ;doprnt.c: 638: goto alldone;
 19560                           
 19561                           ;doprnt.c: 637: case 0:
 19562                           
 19563                           ;doprnt.c: 608: }
 19564                           ;doprnt.c: 635: switch(c = *f++) {
 19565                           
 19566  09A3  0020               	movlb	0	; select bank0
 19567  09A4  0825               	movf	sprintf@f+1,w
 19568  09A5  00A9               	movwf	??_sprintf+1
 19569  09A6  0824               	movf	sprintf@f,w
 19570  09A7  00A8               	movwf	??_sprintf
 19571  09A8  0AA4               	incf	sprintf@f,f
 19572  09A9  1903               	skipnz
 19573  09AA  0AA5               	incf	sprintf@f+1,f
 19574  09AB  0828               	movf	??_sprintf,w
 19575  09AC  0084               	movwf	4
 19576  09AD  0829               	movf	??_sprintf+1,w
 19577  09AE  0085               	movwf	5
 19578  09AF  0800               	movf	0,w	;code access
 19579  09B0  00B4               	movwf	sprintf@c
 19580                           
 19581                           ; Switch size 1, requested type "space"
 19582                           ; Number of cases is 3, Range of values is 0 to 105
 19583                           ; switch strategies available:
 19584                           ; Name         Instructions Cycles
 19585                           ; simple_byte           10     6 (average)
 19586                           ; direct_byte          218     6 (fixed)
 19587                           ; jumptable            260     6 (fixed)
 19588                           ;	Chosen strategy is simple_byte
 19589  09B1  3A00               	xorlw	0	; case 0
 19590  09B2  1903               	skipnz
 19591  09B3  2A87               	goto	l6380
 19592  09B4  3A64               	xorlw	100	; case 100
 19593  09B5  1903               	skipnz
 19594  09B6  29BB               	goto	l6322
 19595  09B7  3A0D               	xorlw	13	; case 105
 19596  09B8  1903               	skipnz
 19597  09B9  29BB               	goto	l6322
 19598  09BA  2942               	goto	l6378
 19599  09BB                     l6322:	
 19600                           
 19601                           ;doprnt.c: 1253: {
 19602                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 19603  09BB  0020               	movlb	0	; select bank0
 19604  09BC  082C               	movf	sprintf@ap,w
 19605  09BD  0086               	movwf	6
 19606  09BE  0187               	clrf	7
 19607  09BF  3F40               	moviw [0]fsr1
 19608  09C0  00AF               	movwf	sprintf@val
 19609  09C1  3F41               	moviw [1]fsr1
 19610  09C2  00B0               	movwf	sprintf@val+1
 19611  09C3  3002               	movlw	2
 19612  09C4  00A8               	movwf	??_sprintf
 19613  09C5  0828               	movf	??_sprintf,w
 19614  09C6  07AC               	addwf	sprintf@ap,f
 19615                           
 19616                           ;doprnt.c: 1261: if((int)val < 0) {
 19617  09C7  1FB0               	btfss	sprintf@val+1,7
 19618  09C8  29D2               	goto	l6332
 19619                           
 19620                           ;doprnt.c: 1262: flag |= 0x03;
 19621  09C9  3003               	movlw	3
 19622  09CA  00A8               	movwf	??_sprintf
 19623  09CB  0828               	movf	??_sprintf,w
 19624  09CC  04AE               	iorwf	sprintf@flag,f
 19625                           
 19626                           ;doprnt.c: 1263: val = -val;
 19627  09CD  09AF               	comf	sprintf@val,f
 19628  09CE  09B0               	comf	sprintf@val+1,f
 19629  09CF  0AAF               	incf	sprintf@val,f
 19630  09D0  1903               	skipnz
 19631  09D1  0AB0               	incf	sprintf@val+1,f
 19632  09D2                     l6332:	
 19633                           
 19634                           ;doprnt.c: 1264: }
 19635                           ;doprnt.c: 1266: }
 19636                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 19637  09D2  01B4               	clrf	sprintf@c
 19638  09D3  0AB4               	incf	sprintf@c,f
 19639  09D4  3005               	movlw	5
 19640  09D5  0634               	xorwf	sprintf@c,w
 19641  09D6  1903               	btfsc	3,2
 19642  09D7  29F7               	goto	l6344
 19643  09D8                     l6338:	
 19644                           
 19645                           ;doprnt.c: 1306: if(val < dpowers[c])
 19646  09D8  0834               	movf	sprintf@c,w
 19647  09D9  00A8               	movwf	??_sprintf
 19648  09DA  01A9               	clrf	??_sprintf+1
 19649  09DB  35A8               	lslf	??_sprintf,f
 19650  09DC  0DA9               	rlf	??_sprintf+1,f
 19651  09DD  3000               	movlw	low (_dpowers| (0+32768))
 19652  09DE  0728               	addwf	??_sprintf,w
 19653  09DF  0084               	movwf	4
 19654  09E0  30A0               	movlw	high (_dpowers| (0+32768))
 19655  09E1  3D29               	addwfc	??_sprintf+1,w
 19656  09E2  0085               	movwf	5
 19657  09E3  3F00               	moviw [0]fsr0
 19658  09E4  00AA               	movwf	??_sprintf+2
 19659  09E5  3F01               	moviw [1]fsr0
 19660  09E6  00AB               	movwf	??_sprintf+3
 19661  09E7  082B               	movf	??_sprintf+3,w
 19662  09E8  0230               	subwf	sprintf@val+1,w
 19663  09E9  1D03               	skipz
 19664  09EA  29ED               	goto	u3505
 19665  09EB  082A               	movf	??_sprintf+2,w
 19666  09EC  022F               	subwf	sprintf@val,w
 19667  09ED                     u3505:	
 19668  09ED  1C03               	btfss	3,0
 19669  09EE  29F7               	goto	l6344
 19670                           
 19671                           ;doprnt.c: 1307: break;
 19672  09EF  3001               	movlw	1
 19673  09F0  00A8               	movwf	??_sprintf
 19674  09F1  0828               	movf	??_sprintf,w
 19675  09F2  07B4               	addwf	sprintf@c,f
 19676  09F3  3005               	movlw	5
 19677  09F4  0634               	xorwf	sprintf@c,w
 19678  09F5  1D03               	btfss	3,2
 19679  09F6  29D8               	goto	l6338
 19680  09F7                     l6344:	
 19681                           
 19682                           ;doprnt.c: 1345: if(width && flag & 0x03)
 19683  09F7  0832               	movf	sprintf@width,w
 19684  09F8  0433               	iorwf	sprintf@width+1,w
 19685  09F9  1903               	btfsc	3,2
 19686  09FA  2A03               	goto	l1320
 19687  09FB  082E               	movf	sprintf@flag,w
 19688  09FC  3903               	andlw	3
 19689  09FD  1903               	btfsc	3,2
 19690  09FE  2A03               	goto	l1320
 19691                           
 19692                           ;doprnt.c: 1346: width--;
 19693  09FF  30FF               	movlw	255
 19694  0A00  07B2               	addwf	sprintf@width,f
 19695  0A01  30FF               	movlw	255
 19696  0A02  3DB3               	addwfc	sprintf@width+1,f
 19697  0A03                     l1320:	
 19698                           
 19699                           ;doprnt.c: 1381: if(width > c)
 19700  0A03  0834               	movf	sprintf@c,w
 19701  0A04  00A8               	movwf	??_sprintf
 19702  0A05  01A9               	clrf	??_sprintf+1
 19703  0A06  1BA8               	btfsc	??_sprintf,7
 19704  0A07  03A9               	decf	??_sprintf+1,f
 19705  0A08  0829               	movf	??_sprintf+1,w
 19706  0A09  3A80               	xorlw	128
 19707  0A0A  00AA               	movwf	??_sprintf+2
 19708  0A0B  0833               	movf	sprintf@width+1,w
 19709  0A0C  3A80               	xorlw	128
 19710  0A0D  022A               	subwf	??_sprintf+2,w
 19711  0A0E  1D03               	skipz
 19712  0A0F  2A12               	goto	u3545
 19713  0A10  0832               	movf	sprintf@width,w
 19714  0A11  0228               	subwf	??_sprintf,w
 19715  0A12                     u3545:	
 19716  0A12  1803               	skipnc
 19717  0A13  2A1F               	goto	l6352
 19718                           
 19719                           ;doprnt.c: 1382: width -= c;
 19720  0A14  0020               	movlb	0	; select bank0
 19721  0A15  0834               	movf	sprintf@c,w
 19722  0A16  00A8               	movwf	??_sprintf
 19723  0A17  01A9               	clrf	??_sprintf+1
 19724  0A18  1BA8               	btfsc	??_sprintf,7
 19725  0A19  03A9               	decf	??_sprintf+1,f
 19726  0A1A  0828               	movf	??_sprintf,w
 19727  0A1B  02B2               	subwf	sprintf@width,f
 19728  0A1C  0829               	movf	??_sprintf+1,w
 19729  0A1D  3BB3               	subwfb	sprintf@width+1,f
 19730  0A1E  2A22               	goto	l6354
 19731  0A1F                     l6352:	
 19732                           
 19733                           ;doprnt.c: 1383: else
 19734                           ;doprnt.c: 1384: width = 0;
 19735  0A1F  0020               	movlb	0	; select bank0
 19736  0A20  01B2               	clrf	sprintf@width
 19737  0A21  01B3               	clrf	sprintf@width+1
 19738  0A22                     l6354:	
 19739                           
 19740                           ;doprnt.c: 1422: {
 19741                           ;doprnt.c: 1424: if(width
 19742                           ;doprnt.c: 1428: )
 19743  0A22  0832               	movf	sprintf@width,w
 19744  0A23  0433               	iorwf	sprintf@width+1,w
 19745  0A24  1903               	btfsc	3,2
 19746  0A25  2A39               	goto	l6362
 19747  0A26                     l6356:	
 19748                           ;doprnt.c: 1429: do
 19749                           
 19750                           
 19751                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 19752  0A26  3020               	movlw	32
 19753  0A27  00A8               	movwf	??_sprintf
 19754  0A28  0831               	movf	sprintf@sp,w
 19755  0A29  0086               	movwf	6
 19756  0A2A  0187               	clrf	7
 19757  0A2B  0828               	movf	??_sprintf,w
 19758  0A2C  0081               	movwf	1
 19759  0A2D  3001               	movlw	1
 19760  0A2E  00A8               	movwf	??_sprintf
 19761  0A2F  0828               	movf	??_sprintf,w
 19762  0A30  07B1               	addwf	sprintf@sp,f
 19763                           
 19764                           ;doprnt.c: 1431: while(--width);
 19765  0A31  30FF               	movlw	255
 19766  0A32  07B2               	addwf	sprintf@width,f
 19767  0A33  30FF               	movlw	255
 19768  0A34  3DB3               	addwfc	sprintf@width+1,f
 19769  0A35  0832               	movf	sprintf@width,w
 19770  0A36  0433               	iorwf	sprintf@width+1,w
 19771  0A37  1D03               	btfss	3,2
 19772  0A38  2A26               	goto	l6356
 19773  0A39                     l6362:	
 19774                           
 19775                           ;doprnt.c: 1438: if(flag & 0x03)
 19776  0A39  082E               	movf	sprintf@flag,w
 19777  0A3A  3903               	andlw	3
 19778  0A3B  1903               	btfsc	3,2
 19779  0A3C  2A48               	goto	l6368
 19780                           
 19781                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 19782  0A3D  302D               	movlw	45
 19783  0A3E  00A8               	movwf	??_sprintf
 19784  0A3F  0831               	movf	sprintf@sp,w
 19785  0A40  0086               	movwf	6
 19786  0A41  0187               	clrf	7
 19787  0A42  0828               	movf	??_sprintf,w
 19788  0A43  0081               	movwf	1
 19789  0A44  3001               	movlw	1
 19790  0A45  00A8               	movwf	??_sprintf
 19791  0A46  0828               	movf	??_sprintf,w
 19792  0A47  07B1               	addwf	sprintf@sp,f
 19793  0A48                     l6368:	
 19794                           
 19795                           ;doprnt.c: 1469: }
 19796                           ;doprnt.c: 1472: prec = c;
 19797  0A48  0834               	movf	sprintf@c,w
 19798  0A49  00A8               	movwf	??_sprintf
 19799  0A4A  0828               	movf	??_sprintf,w
 19800  0A4B  00AD               	movwf	sprintf@prec
 19801  0A4C                     l6376:	
 19802                           ;doprnt.c: 1474: while(prec--) {
 19803                           
 19804  0A4C  30FF               	movlw	255
 19805  0A4D  00A8               	movwf	??_sprintf
 19806  0A4E  0828               	movf	??_sprintf,w
 19807  0A4F  07AD               	addwf	sprintf@prec,f
 19808  0A50  0A2D               	incf	sprintf@prec,w
 19809  0A51  1903               	btfsc	3,2
 19810  0A52  2942               	goto	l6378
 19811                           
 19812                           ;doprnt.c: 1478: {
 19813                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 19814  0A53  300A               	movlw	10
 19815  0A54  00A0               	movwf	___lwmod@divisor
 19816  0A55  3000               	movlw	0
 19817  0A56  00A1               	movwf	___lwmod@divisor+1
 19818  0A57  082D               	movf	sprintf@prec,w
 19819  0A58  00A8               	movwf	??_sprintf
 19820  0A59  01A9               	clrf	??_sprintf+1
 19821  0A5A  35A8               	lslf	??_sprintf,f
 19822  0A5B  0DA9               	rlf	??_sprintf+1,f
 19823  0A5C  3000               	movlw	low (_dpowers| (0+32768))
 19824  0A5D  0728               	addwf	??_sprintf,w
 19825  0A5E  0084               	movwf	4
 19826  0A5F  30A0               	movlw	high (_dpowers| (0+32768))
 19827  0A60  3D29               	addwfc	??_sprintf+1,w
 19828  0A61  0085               	movwf	5
 19829  0A62  3F00               	moviw [0]fsr0
 19830  0A63  00F1               	movwf	___lwdiv@divisor
 19831  0A64  3F01               	moviw [1]fsr0
 19832  0A65  00F2               	movwf	___lwdiv@divisor+1
 19833  0A66  0830               	movf	sprintf@val+1,w
 19834  0A67  00F4               	movwf	___lwdiv@dividend+1
 19835  0A68  082F               	movf	sprintf@val,w
 19836  0A69  00F3               	movwf	___lwdiv@dividend
 19837  0A6A  319D  2594  3189   	fcall	___lwdiv
 19838  0A6D  0872               	movf	?___lwdiv+1,w
 19839  0A6E  0020               	movlb	0	; select bank0
 19840  0A6F  00A3               	movwf	___lwmod@dividend+1
 19841  0A70  0871               	movf	?___lwdiv,w
 19842  0A71  00A2               	movwf	___lwmod@dividend
 19843  0A72  319C  24A3  3189   	fcall	___lwmod
 19844  0A75  0020               	movlb	0	; select bank0
 19845  0A76  0820               	movf	?___lwmod,w
 19846  0A77  3E30               	addlw	48
 19847  0A78  00AA               	movwf	??_sprintf+2
 19848  0A79  082A               	movf	??_sprintf+2,w
 19849  0A7A  00B4               	movwf	sprintf@c
 19850                           
 19851                           ;doprnt.c: 1523: }
 19852                           ;doprnt.c: 1524: ((*sp++ = (c)));
 19853  0A7B  0834               	movf	sprintf@c,w
 19854  0A7C  00A8               	movwf	??_sprintf
 19855  0A7D  0831               	movf	sprintf@sp,w
 19856  0A7E  0086               	movwf	6
 19857  0A7F  0187               	clrf	7
 19858  0A80  0828               	movf	??_sprintf,w
 19859  0A81  0081               	movwf	1
 19860  0A82  3001               	movlw	1
 19861  0A83  00A8               	movwf	??_sprintf
 19862  0A84  0828               	movf	??_sprintf,w
 19863  0A85  07B1               	addwf	sprintf@sp,f
 19864  0A86  2A4C               	goto	l6376
 19865  0A87                     l6380:	
 19866                           ;doprnt.c: 1525: }
 19867                           ;doprnt.c: 1533: }
 19868                           ;doprnt.c: 1535: alldone:
 19869                           
 19870                           
 19871                           ;doprnt.c: 1538: *sp = 0;
 19872  0A87  0020               	movlb	0	; select bank0
 19873  0A88  0831               	movf	sprintf@sp,w
 19874  0A89  0086               	movwf	6
 19875  0A8A  0187               	clrf	7
 19876  0A8B  0181               	clrf	1
 19877  0A8C  0008               	return
 19878  0A8D                     __end_of_sprintf:	
 19879                           ;doprnt.c: 1540: return 0;
 19880                           ;	Return value of _sprintf is never used
 19881                           
 19882                           
 19883                           	psect	text34
 19884  196D                     __ptext34:	
 19885 ;; *************** function _isdigit *****************
 19886 ;; Defined at:
 19887 ;;		line 8 in file "/Applications/microchip/xc8/v1.42/sources/common/isdigit.c"
 19888 ;; Parameters:    Size  Location     Type
 19889 ;;  c               1    wreg     unsigned char 
 19890 ;; Auto vars:     Size  Location     Type
 19891 ;;  c               1    2[COMMON] unsigned char 
 19892 ;; Return value:  Size  Location     Type
 19893 ;;		None               void
 19894 ;; Registers used:
 19895 ;;		wreg, status,2, status,0
 19896 ;; Tracked objects:
 19897 ;;		On entry : 0/0
 19898 ;;		On exit  : 0/0
 19899 ;;		Unchanged: 0/0
 19900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19905 ;;Total ram usage:        2 bytes
 19906 ;; Hardware stack levels used:    1
 19907 ;; Hardware stack levels required when called:    4
 19908 ;; This function calls:
 19909 ;;		Nothing
 19910 ;; This function is called by:
 19911 ;;		_sprintf
 19912 ;; This function uses a non-reentrant model
 19913 ;;
 19914                           
 19915                           
 19916                           ;psect for function _isdigit
 19917  196D                     _isdigit:	
 19918                           
 19919                           ;incstack = 0
 19920                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 19921                           ;isdigit@c stored from wreg
 19922  196D  00F2               	movwf	isdigit@c
 19923  196E  01F1               	clrf	_isdigit$3064
 19924  196F  303A               	movlw	58
 19925  1970  0272               	subwf	isdigit@c,w
 19926  1971  1803               	skipnc
 19927  1972  2979               	goto	l6158
 19928  1973  3030               	movlw	48
 19929  1974  0272               	subwf	isdigit@c,w
 19930  1975  1C03               	skipc
 19931  1976  2979               	goto	l6158
 19932  1977  01F1               	clrf	_isdigit$3064
 19933  1978  0AF1               	incf	_isdigit$3064,f
 19934  1979                     l6158:	
 19935  1979  0C71               	rrf	_isdigit$3064,w
 19936  197A  0008               	return
 19937  197B                     __end_of_isdigit:	
 19938                           
 19939                           	psect	text35
 19940  1AAA                     __ptext35:	
 19941 ;; *************** function ___wmul *****************
 19942 ;; Defined at:
 19943 ;;		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul16.c"
 19944 ;; Parameters:    Size  Location     Type
 19945 ;;  multiplier      2    1[COMMON] unsigned int 
 19946 ;;  multiplicand    2    3[COMMON] unsigned int 
 19947 ;; Auto vars:     Size  Location     Type
 19948 ;;  product         2    5[COMMON] unsigned int 
 19949 ;; Return value:  Size  Location     Type
 19950 ;;                  2    1[COMMON] unsigned int 
 19951 ;; Registers used:
 19952 ;;		wreg, status,2, status,0
 19953 ;; Tracked objects:
 19954 ;;		On entry : 0/0
 19955 ;;		On exit  : 0/0
 19956 ;;		Unchanged: 0/0
 19957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19958 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19961 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19962 ;;Total ram usage:        6 bytes
 19963 ;; Hardware stack levels used:    1
 19964 ;; Hardware stack levels required when called:    4
 19965 ;; This function calls:
 19966 ;;		Nothing
 19967 ;; This function is called by:
 19968 ;;		_secret_check
 19969 ;;		_sprintf
 19970 ;; This function uses a non-reentrant model
 19971 ;;
 19972                           
 19973                           
 19974                           ;psect for function ___wmul
 19975  1AAA                     ___wmul:	
 19976                           
 19977                           ;incstack = 0
 19978                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 19979  1AAA  01F5               	clrf	___wmul@product
 19980  1AAB  01F6               	clrf	___wmul@product+1
 19981  1AAC                     l6164:	
 19982  1AAC  1C71               	btfss	___wmul@multiplier,0
 19983  1AAD  2AB2               	goto	l1413
 19984  1AAE  0873               	movf	___wmul@multiplicand,w
 19985  1AAF  07F5               	addwf	___wmul@product,f
 19986  1AB0  0874               	movf	___wmul@multiplicand+1,w
 19987  1AB1  3DF6               	addwfc	___wmul@product+1,f
 19988  1AB2                     l1413:	
 19989  1AB2  3001               	movlw	1
 19990  1AB3                     u3345:	
 19991  1AB3  35F3               	lslf	___wmul@multiplicand,f
 19992  1AB4  0DF4               	rlf	___wmul@multiplicand+1,f
 19993  1AB5  0B89               	decfsz	9,f
 19994  1AB6  2AB3               	goto	u3345
 19995  1AB7  3001               	movlw	1
 19996  1AB8                     u3355:	
 19997  1AB8  36F2               	lsrf	___wmul@multiplier+1,f
 19998  1AB9  0CF1               	rrf	___wmul@multiplier,f
 19999  1ABA  0B89               	decfsz	9,f
 20000  1ABB  2AB8               	goto	u3355
 20001  1ABC  0871               	movf	___wmul@multiplier,w
 20002  1ABD  0472               	iorwf	___wmul@multiplier+1,w
 20003  1ABE  1D03               	btfss	3,2
 20004  1ABF  2AAC               	goto	l6164
 20005  1AC0  0876               	movf	___wmul@product+1,w
 20006  1AC1  00F2               	movwf	?___wmul+1
 20007  1AC2  0875               	movf	___wmul@product,w
 20008  1AC3  00F1               	movwf	?___wmul
 20009  1AC4  0008               	return
 20010  1AC5                     __end_of___wmul:	
 20011                           
 20012                           	psect	text36
 20013  08A9                     __ptext36:	
 20014 ;; *************** function _nullifyBadge_irTxSet *****************
 20015 ;; Defined at:
 20016 ;;		line 264 in file "nullifyBadge.c"
 20017 ;; Parameters:    Size  Location     Type
 20018 ;;		None
 20019 ;; Auto vars:     Size  Location     Type
 20020 ;;		None
 20021 ;; Return value:  Size  Location     Type
 20022 ;;                  1    wreg      void 
 20023 ;; Registers used:
 20024 ;;		None
 20025 ;; Tracked objects:
 20026 ;;		On entry : 0/0
 20027 ;;		On exit  : 0/0
 20028 ;;		Unchanged: 0/0
 20029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20034 ;;Total ram usage:        0 bytes
 20035 ;; Hardware stack levels used:    1
 20036 ;; Hardware stack levels required when called:    4
 20037 ;; This function calls:
 20038 ;;		Nothing
 20039 ;; This function is called by:
 20040 ;;		_flashy_Main
 20041 ;; This function uses a non-reentrant model
 20042 ;;
 20043                           
 20044                           
 20045                           ;psect for function _nullifyBadge_irTxSet
 20046  08A9                     _nullifyBadge_irTxSet:	
 20047                           
 20048                           ;incstack = 0
 20049                           ; Regs used in _nullifyBadge_irTxSet: []
 20050                           ;nullifyBadge.c: 266: do { LATBbits.LATB7 = 0; } while(0);
 20051  08A9  0022               	movlb	2	; select bank2
 20052  08AA  138D               	bcf	13,7	;volatile
 20053  08AB  0008               	return
 20054  08AC                     __end_of_nullifyBadge_irTxSet:	
 20055                           
 20056                           	psect	text37
 20057  1918                     __ptext37:	
 20058 ;; *************** function _nullifyBadge_irTxRelease *****************
 20059 ;; Defined at:
 20060 ;;		line 254 in file "nullifyBadge.c"
 20061 ;; Parameters:    Size  Location     Type
 20062 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20063 ;;		 -> badge_inst(18), 
 20064 ;; Auto vars:     Size  Location     Type
 20065 ;;  badge           1    2[COMMON] PTR struct t_nullifyBadg
 20066 ;;		 -> badge_inst(18), 
 20067 ;; Return value:  Size  Location     Type
 20068 ;;                  1    wreg      void 
 20069 ;; Registers used:
 20070 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20071 ;; Tracked objects:
 20072 ;;		On entry : 0/0
 20073 ;;		On exit  : 0/0
 20074 ;;		Unchanged: 0/0
 20075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20080 ;;Total ram usage:        2 bytes
 20081 ;; Hardware stack levels used:    1
 20082 ;; Hardware stack levels required when called:    4
 20083 ;; This function calls:
 20084 ;;		Nothing
 20085 ;; This function is called by:
 20086 ;;		_flashy_Main
 20087 ;; This function uses a non-reentrant model
 20088 ;;
 20089                           
 20090                           
 20091                           ;psect for function _nullifyBadge_irTxRelease
 20092  1918                     _nullifyBadge_irTxRelease:	
 20093                           
 20094                           ;incstack = 0
 20095                           ; Regs used in _nullifyBadge_irTxRelease: [wreg+fsr1l+fsr1h+status,2+status,0]
 20096                           ;nullifyBadge_irTxRelease@badge stored from wreg
 20097  1918  00F2               	movwf	nullifyBadge_irTxRelease@badge
 20098                           
 20099                           ;nullifyBadge.c: 255: badge->registeredHw &= ~(1 << HW_IR_TX);
 20100  1919  30FB               	movlw	251
 20101  191A  00F1               	movwf	??_nullifyBadge_irTxRelease
 20102  191B  0872               	movf	nullifyBadge_irTxRelease@badge,w
 20103  191C  3E11               	addlw	17
 20104  191D  0086               	movwf	6
 20105  191E  3001               	movlw	1	; select bank2/3
 20106  191F  0087               	movwf	7
 20107  1920  0871               	movf	??_nullifyBadge_irTxRelease,w
 20108  1921  0581               	andwf	1,f
 20109  1922  0008               	return
 20110  1923                     __end_of_nullifyBadge_irTxRelease:	
 20111                           
 20112                           	psect	text38
 20113  1989                     __ptext38:	
 20114 ;; *************** function _nullifyBadge_irTxRegister *****************
 20115 ;; Defined at:
 20116 ;;		line 242 in file "nullifyBadge.c"
 20117 ;; Parameters:    Size  Location     Type
 20118 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20119 ;;		 -> badge_inst(18), 
 20120 ;; Auto vars:     Size  Location     Type
 20121 ;;  badge           1    1[COMMON] PTR struct t_nullifyBadg
 20122 ;;		 -> badge_inst(18), 
 20123 ;; Return value:  Size  Location     Type
 20124 ;;                  1    wreg      char 
 20125 ;; Registers used:
 20126 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20127 ;; Tracked objects:
 20128 ;;		On entry : 0/0
 20129 ;;		On exit  : 0/0
 20130 ;;		Unchanged: 0/0
 20131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20136 ;;Total ram usage:        1 bytes
 20137 ;; Hardware stack levels used:    1
 20138 ;; Hardware stack levels required when called:    4
 20139 ;; This function calls:
 20140 ;;		Nothing
 20141 ;; This function is called by:
 20142 ;;		_flashy_Main
 20143 ;; This function uses a non-reentrant model
 20144 ;;
 20145                           
 20146                           
 20147                           ;psect for function _nullifyBadge_irTxRegister
 20148  1989                     _nullifyBadge_irTxRegister:	
 20149                           
 20150                           ;incstack = 0
 20151                           ; Regs used in _nullifyBadge_irTxRegister: [wreg+fsr1l+fsr1h+status,2+status,0]
 20152                           ;nullifyBadge_irTxRegister@badge stored from wreg
 20153  1989  00F1               	movwf	nullifyBadge_irTxRegister@badge
 20154                           
 20155                           ;nullifyBadge.c: 243: if (badge->registeredHw & HW_IR_TX) {
 20156  198A  0871               	movf	nullifyBadge_irTxRegister@badge,w
 20157  198B  3E11               	addlw	17
 20158  198C  0086               	movwf	6
 20159  198D  3001               	movlw	1	; select bank2/3
 20160  198E  0087               	movwf	7
 20161  198F  1881               	btfsc	1,1
 20162  1990  0008               	return
 20163                           
 20164                           ;nullifyBadge.c: 246: else {
 20165                           ;nullifyBadge.c: 247: badge->registeredHw |= (1 << HW_IR_TX);
 20166                           
 20167                           ;nullifyBadge.c: 245: }
 20168                           
 20169                           ;nullifyBadge.c: 244: return -1;
 20170                           ;	Return value of _nullifyBadge_irTxRegister is never used
 20171  1991  0871               	movf	nullifyBadge_irTxRegister@badge,w
 20172  1992  3E11               	addlw	17
 20173  1993  0086               	movwf	6
 20174  1994  3001               	movlw	1	; select bank2/3
 20175  1995  0087               	movwf	7
 20176  1996  1501               	bsf	1,2
 20177                           
 20178                           ;nullifyBadge.c: 248: return 0;
 20179                           ;	Return value of _nullifyBadge_irTxRegister is never used
 20180  1997  0008               	return
 20181  1998                     __end_of_nullifyBadge_irTxRegister:	
 20182                           
 20183                           	psect	text39
 20184  1878                     __ptext39:	
 20185 ;; *************** function _nullifyBadge_irTxClr *****************
 20186 ;; Defined at:
 20187 ;;		line 270 in file "nullifyBadge.c"
 20188 ;; Parameters:    Size  Location     Type
 20189 ;;		None
 20190 ;; Auto vars:     Size  Location     Type
 20191 ;;		None
 20192 ;; Return value:  Size  Location     Type
 20193 ;;                  1    wreg      void 
 20194 ;; Registers used:
 20195 ;;		None
 20196 ;; Tracked objects:
 20197 ;;		On entry : 0/0
 20198 ;;		On exit  : 0/0
 20199 ;;		Unchanged: 0/0
 20200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20205 ;;Total ram usage:        0 bytes
 20206 ;; Hardware stack levels used:    1
 20207 ;; Hardware stack levels required when called:    4
 20208 ;; This function calls:
 20209 ;;		Nothing
 20210 ;; This function is called by:
 20211 ;;		_flashy_Main
 20212 ;; This function uses a non-reentrant model
 20213 ;;
 20214                           
 20215                           
 20216                           ;psect for function _nullifyBadge_irTxClr
 20217  1878                     _nullifyBadge_irTxClr:	
 20218                           
 20219                           ;incstack = 0
 20220                           ; Regs used in _nullifyBadge_irTxClr: []
 20221                           ;nullifyBadge.c: 272: do { LATBbits.LATB7 = 1; } while(0);
 20222  1878  0022               	movlb	2	; select bank2
 20223  1879  178D               	bsf	13,7	;volatile
 20224  187A  0008               	return
 20225  187B                     __end_of_nullifyBadge_irTxClr:	
 20226                           
 20227                           	psect	text40
 20228  187F                     __ptext40:	
 20229 ;; *************** function _nullifyBadge_irGet *****************
 20230 ;; Defined at:
 20231 ;;		line 232 in file "nullifyBadge.c"
 20232 ;; Parameters:    Size  Location     Type
 20233 ;;		None
 20234 ;; Auto vars:     Size  Location     Type
 20235 ;;		None
 20236 ;; Return value:  Size  Location     Type
 20237 ;;                  1    wreg      unsigned char 
 20238 ;; Registers used:
 20239 ;;		wreg, status,2, status,0
 20240 ;; Tracked objects:
 20241 ;;		On entry : 0/0
 20242 ;;		On exit  : 0/0
 20243 ;;		Unchanged: 0/0
 20244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20249 ;;Total ram usage:        0 bytes
 20250 ;; Hardware stack levels used:    1
 20251 ;; Hardware stack levels required when called:    4
 20252 ;; This function calls:
 20253 ;;		Nothing
 20254 ;; This function is called by:
 20255 ;;		_flashy_Main
 20256 ;; This function uses a non-reentrant model
 20257 ;;
 20258                           
 20259                           
 20260                           ;psect for function _nullifyBadge_irGet
 20261  187F                     _nullifyBadge_irGet:	
 20262                           
 20263                           ;nullifyBadge.c: 233: return PORTBbits.RB5;
 20264                           
 20265                           ;incstack = 0
 20266                           ; Regs used in _nullifyBadge_irGet: [wreg+status,2+status,0]
 20267  187F  0020               	movlb	0	; select bank0
 20268  1880  0E0D               	swapf	13,w	;volatile
 20269  1881  0C89               	rrf	9,f
 20270  1882  3901               	andlw	1
 20271  1883  0008               	return
 20272  1884                     __end_of_nullifyBadge_irGet:	
 20273                           
 20274                           	psect	text41
 20275  1CFF                     __ptext41:	
 20276 ;; *************** function _nullifyBadge_buttonsGet *****************
 20277 ;; Defined at:
 20278 ;;		line 187 in file "nullifyBadge.c"
 20279 ;; Parameters:    Size  Location     Type
 20280 ;;		None
 20281 ;; Auto vars:     Size  Location     Type
 20282 ;;  retVal          1    3[COMMON] unsigned char 
 20283 ;; Return value:  Size  Location     Type
 20284 ;;                  1    wreg      unsigned char 
 20285 ;; Registers used:
 20286 ;;		wreg, status,2, status,0
 20287 ;; Tracked objects:
 20288 ;;		On entry : 0/0
 20289 ;;		On exit  : 0/0
 20290 ;;		Unchanged: 0/0
 20291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20295 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20296 ;;Total ram usage:        3 bytes
 20297 ;; Hardware stack levels used:    1
 20298 ;; Hardware stack levels required when called:    4
 20299 ;; This function calls:
 20300 ;;		Nothing
 20301 ;; This function is called by:
 20302 ;;		_menu_Main
 20303 ;;		_flashy_Main
 20304 ;;		_locked_Main
 20305 ;;		_secret_Main
 20306 ;;		_slot_Main
 20307 ;; This function uses a non-reentrant model
 20308 ;;
 20309                           
 20310                           
 20311                           ;psect for function _nullifyBadge_buttonsGet
 20312  1CFF                     _nullifyBadge_buttonsGet:	
 20313                           
 20314                           ;nullifyBadge.c: 188: u8 retVal = 0x0F;
 20315                           
 20316                           ;incstack = 0
 20317                           ; Regs used in _nullifyBadge_buttonsGet: [wreg+status,2+status,0]
 20318  1CFF  300F               	movlw	15
 20319  1D00  00F1               	movwf	??_nullifyBadge_buttonsGet
 20320  1D01  0871               	movf	??_nullifyBadge_buttonsGet,w
 20321  1D02  00F3               	movwf	nullifyBadge_buttonsGet@retVal
 20322                           
 20323                           ;nullifyBadge.c: 190: retVal &= ~(PORTCbits.RC5 << 0);
 20324  1D03  0020               	movlb	0	; select bank0
 20325  1D04  0E0E               	swapf	14,w	;volatile
 20326  1D05  0C89               	rrf	9,f
 20327  1D06  3901               	andlw	1
 20328  1D07  3AFF               	xorlw	255
 20329  1D08  00F1               	movwf	??_nullifyBadge_buttonsGet
 20330  1D09  0871               	movf	??_nullifyBadge_buttonsGet,w
 20331  1D0A  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 20332                           
 20333                           ;nullifyBadge.c: 191: retVal &= ~(PORTAbits.RA2 << 1);
 20334  1D0B  0C0C               	rrf	12,w	;volatile
 20335  1D0C  0C89               	rrf	9,f
 20336  1D0D  3901               	andlw	1
 20337  1D0E  0709               	addwf	9,w
 20338  1D0F  3AFF               	xorlw	255
 20339  1D10  00F1               	movwf	??_nullifyBadge_buttonsGet
 20340  1D11  0871               	movf	??_nullifyBadge_buttonsGet,w
 20341  1D12  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 20342                           
 20343                           ;nullifyBadge.c: 192: retVal &= ~(PORTAbits.RA4 << 2);
 20344  1D13  0E0C               	swapf	12,w	;volatile
 20345  1D14  3901               	andlw	1
 20346  1D15  00F1               	movwf	??_nullifyBadge_buttonsGet
 20347  1D16  3001               	movlw	1
 20348  1D17                     u3395:	
 20349  1D17  35F1               	lslf	??_nullifyBadge_buttonsGet,f
 20350  1D18  3EFF               	addlw	-1
 20351  1D19  1D03               	skipz
 20352  1D1A  2D17               	goto	u3395
 20353  1D1B  3571               	lslf	??_nullifyBadge_buttonsGet,w
 20354  1D1C  3AFF               	xorlw	255
 20355  1D1D  00F2               	movwf	??_nullifyBadge_buttonsGet+1
 20356  1D1E  0872               	movf	??_nullifyBadge_buttonsGet+1,w
 20357  1D1F  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 20358                           
 20359                           ;nullifyBadge.c: 193: retVal &= ~(PORTAbits.RA5 << 3);
 20360  1D20  0E0C               	swapf	12,w	;volatile
 20361  1D21  0C89               	rrf	9,f
 20362  1D22  3901               	andlw	1
 20363  1D23  00F1               	movwf	??_nullifyBadge_buttonsGet
 20364  1D24  3002               	movlw	2
 20365  1D25                     u3405:	
 20366  1D25  35F1               	lslf	??_nullifyBadge_buttonsGet,f
 20367  1D26  3EFF               	addlw	-1
 20368  1D27  1D03               	skipz
 20369  1D28  2D25               	goto	u3405
 20370  1D29  3571               	lslf	??_nullifyBadge_buttonsGet,w
 20371  1D2A  3AFF               	xorlw	255
 20372  1D2B  00F2               	movwf	??_nullifyBadge_buttonsGet+1
 20373  1D2C  0872               	movf	??_nullifyBadge_buttonsGet+1,w
 20374  1D2D  05F3               	andwf	nullifyBadge_buttonsGet@retVal,f
 20375                           
 20376                           ;nullifyBadge.c: 195: return retVal;
 20377  1D2E  0873               	movf	nullifyBadge_buttonsGet@retVal,w
 20378  1D2F  0008               	return
 20379  1D30                     __end_of_nullifyBadge_buttonsGet:	
 20380                           
 20381                           	psect	text42
 20382  1EF3                     __ptext42:	
 20383 ;; *************** function _led_roundabout *****************
 20384 ;; Defined at:
 20385 ;;		line 141 in file "main.c"
 20386 ;; Parameters:    Size  Location     Type
 20387 ;;  counter         2   16[BANK0 ] unsigned int 
 20388 ;; Auto vars:     Size  Location     Type
 20389 ;;  size            2   22[BANK0 ] unsigned int 
 20390 ;;  leds            2   20[BANK0 ] unsigned int 
 20391 ;; Return value:  Size  Location     Type
 20392 ;;                  1    wreg      void 
 20393 ;; Registers used:
 20394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20395 ;; Tracked objects:
 20396 ;;		On entry : 0/0
 20397 ;;		On exit  : 0/0
 20398 ;;		Unchanged: 0/0
 20399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20401 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20402 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20403 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20404 ;;Total ram usage:        8 bytes
 20405 ;; Hardware stack levels used:    1
 20406 ;; Hardware stack levels required when called:    9
 20407 ;; This function calls:
 20408 ;;		___lwmod
 20409 ;;		_nullifyBadge_userLedsSet
 20410 ;; This function is called by:
 20411 ;;		_flashy_Main
 20412 ;; This function uses a non-reentrant model
 20413 ;;
 20414                           
 20415                           
 20416                           ;psect for function _led_roundabout
 20417  1EF3                     _led_roundabout:	
 20418                           
 20419                           ;main.c: 142: u16 size = sizeof(roundabout_leds) / sizeof(roundabout_leds[0]);
 20420                           
 20421                           ;incstack = 0
 20422                           ; Regs used in _led_roundabout: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20423  1EF3  300E               	movlw	14
 20424  1EF4  0020               	movlb	0	; select bank0
 20425  1EF5  00B6               	movwf	led_roundabout@size
 20426  1EF6  3000               	movlw	0
 20427  1EF7  00B7               	movwf	led_roundabout@size+1
 20428                           
 20429                           ;main.c: 143: u16 leds = roundabout_leds[counter % size];
 20430  1EF8  0837               	movf	led_roundabout@size+1,w
 20431  1EF9  00A1               	movwf	___lwmod@divisor+1
 20432  1EFA  0836               	movf	led_roundabout@size,w
 20433  1EFB  00A0               	movwf	___lwmod@divisor
 20434  1EFC  0831               	movf	led_roundabout@counter+1,w
 20435  1EFD  00A3               	movwf	___lwmod@dividend+1
 20436  1EFE  0830               	movf	led_roundabout@counter,w
 20437  1EFF  00A2               	movwf	___lwmod@dividend
 20438  1F00  319C  24A3  319E   	fcall	___lwmod
 20439  1F03  0020               	movlb	0	; select bank0
 20440  1F04  0820               	movf	?___lwmod,w
 20441  1F05  0709               	addwf	9,w
 20442  1F06  3EA0               	addlw	(low (_roundabout_leds| (0+512)))& (0+255)
 20443  1F07  0086               	movwf	6
 20444  1F08  3002               	movlw	2	; select bank5/6
 20445  1F09  0087               	movwf	7
 20446  1F0A  3F40               	moviw [0]fsr1
 20447  1F0B  00B4               	movwf	led_roundabout@leds
 20448  1F0C  3F41               	moviw [1]fsr1
 20449  1F0D  00B5               	movwf	led_roundabout@leds+1
 20450                           
 20451                           ;main.c: 145: size = sizeof(roundabout_leds_inverse) / sizeof(roundabout_leds_inverse[0]
      +                          );
 20452  1F0E  300E               	movlw	14
 20453  1F0F  00B6               	movwf	led_roundabout@size
 20454  1F10  3000               	movlw	0
 20455  1F11  00B7               	movwf	led_roundabout@size+1
 20456                           
 20457                           ;main.c: 146: leds |= roundabout_leds_inverse[counter % size];
 20458  1F12  0837               	movf	led_roundabout@size+1,w
 20459  1F13  00A1               	movwf	___lwmod@divisor+1
 20460  1F14  0836               	movf	led_roundabout@size,w
 20461  1F15  00A0               	movwf	___lwmod@divisor
 20462  1F16  0831               	movf	led_roundabout@counter+1,w
 20463  1F17  00A3               	movwf	___lwmod@dividend+1
 20464  1F18  0830               	movf	led_roundabout@counter,w
 20465  1F19  00A2               	movwf	___lwmod@dividend
 20466  1F1A  319C  24A3  319E   	fcall	___lwmod
 20467  1F1D  0020               	movlb	0	; select bank0
 20468  1F1E  0820               	movf	?___lwmod,w
 20469  1F1F  0709               	addwf	9,w
 20470  1F20  3E3C               	addlw	(low (_roundabout_leds_inverse| (0+768)))& (0+255)
 20471  1F21  0086               	movwf	6
 20472  1F22  3003               	movlw	3	; select bank6/7
 20473  1F23  0087               	movwf	7
 20474  1F24  3F40               	moviw [0]fsr1
 20475  1F25  00B2               	movwf	??_led_roundabout
 20476  1F26  3F41               	moviw [1]fsr1
 20477  1F27  00B3               	movwf	??_led_roundabout+1
 20478  1F28  0832               	movf	??_led_roundabout,w
 20479  1F29  04B4               	iorwf	led_roundabout@leds,f
 20480  1F2A  0833               	movf	??_led_roundabout+1,w
 20481  1F2B  04B5               	iorwf	led_roundabout@leds+1,f
 20482                           
 20483                           ;main.c: 148: nullifyBadge_userLedsSet(&badge_inst, leds);
 20484  1F2C  0835               	movf	led_roundabout@leds+1,w
 20485  1F2D  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 20486  1F2E  0834               	movf	led_roundabout@leds,w
 20487  1F2F  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 20488  1F30  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 20489  1F31  3199  2160         	fcall	_nullifyBadge_userLedsSet
 20490  1F33  0008               	return
 20491  1F34                     __end_of_led_roundabout:	
 20492                           
 20493                           	psect	text43
 20494  19B7                     __ptext43:	
 20495 ;; *************** function _led_rand *****************
 20496 ;; Defined at:
 20497 ;;		line 161 in file "main.c"
 20498 ;; Parameters:    Size  Location     Type
 20499 ;;		None
 20500 ;; Auto vars:     Size  Location     Type
 20501 ;;  spark           2   16[BANK0 ] unsigned int 
 20502 ;; Return value:  Size  Location     Type
 20503 ;;                  1    wreg      void 
 20504 ;; Registers used:
 20505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20506 ;; Tracked objects:
 20507 ;;		On entry : 0/0
 20508 ;;		On exit  : 0/0
 20509 ;;		Unchanged: 0/0
 20510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20515 ;;Total ram usage:        2 bytes
 20516 ;; Hardware stack levels used:    1
 20517 ;; Hardware stack levels required when called:    9
 20518 ;; This function calls:
 20519 ;;		_nullifyBadge_userLedsSet
 20520 ;;		_rand
 20521 ;; This function is called by:
 20522 ;;		_flashy_Main
 20523 ;; This function uses a non-reentrant model
 20524 ;;
 20525                           
 20526                           
 20527                           ;psect for function _led_rand
 20528  19B7                     _led_rand:	
 20529                           
 20530                           ;main.c: 163: u16 spark = rand() % 65536;
 20531                           
 20532                           ;incstack = 0
 20533                           ; Regs used in _led_rand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20534  19B7  319F  2776  3199   	fcall	_rand
 20535  19BA  0020               	movlb	0	; select bank0
 20536  19BB  0825               	movf	?_rand+1,w
 20537  19BC  00B1               	movwf	led_rand@spark+1
 20538  19BD  0824               	movf	?_rand,w
 20539  19BE  00B0               	movwf	led_rand@spark
 20540                           
 20541                           ;main.c: 164: nullifyBadge_userLedsSet(&badge_inst,spark);
 20542  19BF  0831               	movf	led_rand@spark+1,w
 20543  19C0  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 20544  19C1  0830               	movf	led_rand@spark,w
 20545  19C2  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 20546  19C3  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 20547  19C4  3199  2160         	fcall	_nullifyBadge_userLedsSet
 20548  19C6  0008               	return
 20549  19C7                     __end_of_led_rand:	
 20550                           
 20551                           	psect	text44
 20552  1F76                     __ptext44:	
 20553 ;; *************** function _rand *****************
 20554 ;; Defined at:
 20555 ;;		line 12 in file "/Applications/microchip/xc8/v1.42/sources/common/rand.c"
 20556 ;; Parameters:    Size  Location     Type
 20557 ;;		None
 20558 ;; Auto vars:     Size  Location     Type
 20559 ;;		None
 20560 ;; Return value:  Size  Location     Type
 20561 ;;                  2    4[BANK0 ] int 
 20562 ;; Registers used:
 20563 ;;		wreg, status,2, status,0, pclath, cstack
 20564 ;; Tracked objects:
 20565 ;;		On entry : 0/0
 20566 ;;		On exit  : 0/0
 20567 ;;		Unchanged: 0/0
 20568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20571 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20572 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20573 ;;Total ram usage:        7 bytes
 20574 ;; Hardware stack levels used:    1
 20575 ;; Hardware stack levels required when called:    5
 20576 ;; This function calls:
 20577 ;;		___lmul
 20578 ;; This function is called by:
 20579 ;;		_led_rand
 20580 ;; This function uses a non-reentrant model
 20581 ;;
 20582                           
 20583                           
 20584                           ;psect for function _rand
 20585  1F76                     _rand:	
 20586                           
 20587                           ;incstack = 0
 20588                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
 20589  1F76  0021               	movlb	1	; select bank1
 20590  1F77  0868               	movf	(_randx+3)^(0+128),w
 20591  1F78  00F4               	movwf	___lmul@multiplier+3
 20592  1F79  0867               	movf	(_randx+2)^(0+128),w
 20593  1F7A  00F3               	movwf	___lmul@multiplier+2
 20594  1F7B  0866               	movf	(_randx+1)^(0+128),w
 20595  1F7C  00F2               	movwf	___lmul@multiplier+1
 20596  1F7D  0865               	movf	_randx^(0+128),w
 20597  1F7E  00F1               	movwf	___lmul@multiplier
 20598  1F7F  3041               	movlw	65
 20599  1F80  00F8               	movwf	___lmul@multiplicand+3
 20600  1F81  30C6               	movlw	198
 20601  1F82  00F7               	movwf	___lmul@multiplicand+2
 20602  1F83  304E               	movlw	78
 20603  1F84  00F6               	movwf	___lmul@multiplicand+1
 20604  1F85  306D               	movlw	109
 20605  1F86  00F5               	movwf	___lmul@multiplicand
 20606  1F87  319D  2530  319F   	fcall	___lmul
 20607  1F8A  0874               	movf	?___lmul+3,w
 20608  1F8B  0021               	movlb	1	; select bank1
 20609  1F8C  00E8               	movwf	(_randx+3)^(0+128)
 20610  1F8D  0873               	movf	?___lmul+2,w
 20611  1F8E  00E7               	movwf	(_randx+2)^(0+128)
 20612  1F8F  0872               	movf	?___lmul+1,w
 20613  1F90  00E6               	movwf	(_randx+1)^(0+128)
 20614  1F91  0871               	movf	?___lmul,w
 20615  1F92  00E5               	movwf	_randx^(0+128)
 20616  1F93  3039               	movlw	57
 20617  1F94  07E5               	addwf	_randx^(0+128),f
 20618  1F95  3030               	movlw	48
 20619  1F96  3DE6               	addwfc	(_randx+1)^(0+128),f
 20620  1F97  3000               	movlw	0
 20621  1F98  3DE7               	addwfc	(_randx+2)^(0+128),f
 20622  1F99  3000               	movlw	0
 20623  1F9A  3DE8               	addwfc	(_randx+3)^(0+128),f
 20624  1F9B  0865               	movf	_randx^(0+128),w
 20625  1F9C  0020               	movlb	0	; select bank0
 20626  1F9D  00A6               	movwf	??_rand
 20627  1F9E  0021               	movlb	1	; select bank1
 20628  1F9F  0866               	movf	(_randx+1)^(0+128),w
 20629  1FA0  0020               	movlb	0	; select bank0
 20630  1FA1  00A7               	movwf	??_rand+1
 20631  1FA2  0021               	movlb	1	; select bank1
 20632  1FA3  0867               	movf	(_randx+2)^(0+128),w
 20633  1FA4  0020               	movlb	0	; select bank0
 20634  1FA5  00A8               	movwf	??_rand+2
 20635  1FA6  0021               	movlb	1	; select bank1
 20636  1FA7  0868               	movf	(_randx+3)^(0+128),w
 20637  1FA8  0020               	movlb	0	; select bank0
 20638  1FA9  00A9               	movwf	??_rand+3
 20639  1FAA  3010               	movlw	16
 20640  1FAB  00AA               	movwf	??_rand+4
 20641  1FAC                     u3305:	
 20642  1FAC  37A9               	asrf	??_rand+3,f
 20643  1FAD  0CA8               	rrf	??_rand+2,f
 20644  1FAE  0CA7               	rrf	??_rand+1,f
 20645  1FAF  0CA6               	rrf	??_rand,f
 20646  1FB0  0BAA               	decfsz	??_rand+4,f
 20647  1FB1  2FAC               	goto	u3305
 20648  1FB2  30FF               	movlw	255
 20649  1FB3  0526               	andwf	??_rand,w
 20650  1FB4  00A4               	movwf	?_rand
 20651  1FB5  307F               	movlw	127
 20652  1FB6  0527               	andwf	??_rand+1,w
 20653  1FB7  00A5               	movwf	?_rand+1
 20654  1FB8  0008               	return
 20655  1FB9                     __end_of_rand:	
 20656                           
 20657                           	psect	text45
 20658  1D30                     __ptext45:	
 20659 ;; *************** function ___lmul *****************
 20660 ;; Defined at:
 20661 ;;		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul32.c"
 20662 ;; Parameters:    Size  Location     Type
 20663 ;;  multiplier      4    1[COMMON] unsigned long 
 20664 ;;  multiplicand    4    5[COMMON] unsigned long 
 20665 ;; Auto vars:     Size  Location     Type
 20666 ;;  product         4    0[BANK0 ] unsigned long 
 20667 ;; Return value:  Size  Location     Type
 20668 ;;                  4    1[COMMON] unsigned long 
 20669 ;; Registers used:
 20670 ;;		wreg, status,2, status,0
 20671 ;; Tracked objects:
 20672 ;;		On entry : 0/0
 20673 ;;		On exit  : 0/0
 20674 ;;		Unchanged: 0/0
 20675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20676 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20677 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20679 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20680 ;;Total ram usage:       12 bytes
 20681 ;; Hardware stack levels used:    1
 20682 ;; Hardware stack levels required when called:    4
 20683 ;; This function calls:
 20684 ;;		Nothing
 20685 ;; This function is called by:
 20686 ;;		_rand
 20687 ;; This function uses a non-reentrant model
 20688 ;;
 20689                           
 20690                           
 20691                           ;psect for function ___lmul
 20692  1D30                     ___lmul:	
 20693                           
 20694                           ;incstack = 0
 20695                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 20696  1D30  3000               	movlw	0
 20697  1D31  0020               	movlb	0	; select bank0
 20698  1D32  00A3               	movwf	___lmul@product+3
 20699  1D33  3000               	movlw	0
 20700  1D34  00A2               	movwf	___lmul@product+2
 20701  1D35  3000               	movlw	0
 20702  1D36  00A1               	movwf	___lmul@product+1
 20703  1D37  3000               	movlw	0
 20704  1D38  00A0               	movwf	___lmul@product
 20705  1D39                     l6034:	
 20706  1D39  1C71               	btfss	___lmul@multiplier,0
 20707  1D3A  2D44               	goto	l6038
 20708  1D3B  0875               	movf	___lmul@multiplicand,w
 20709  1D3C  0020               	movlb	0	; select bank0
 20710  1D3D  07A0               	addwf	___lmul@product,f
 20711  1D3E  0876               	movf	___lmul@multiplicand+1,w
 20712  1D3F  3DA1               	addwfc	___lmul@product+1,f
 20713  1D40  0877               	movf	___lmul@multiplicand+2,w
 20714  1D41  3DA2               	addwfc	___lmul@product+2,f
 20715  1D42  0878               	movf	___lmul@multiplicand+3,w
 20716  1D43  3DA3               	addwfc	___lmul@product+3,f
 20717  1D44                     l6038:	
 20718  1D44  3001               	movlw	1
 20719  1D45                     u3105:	
 20720  1D45  35F5               	lslf	___lmul@multiplicand,f
 20721  1D46  0DF6               	rlf	___lmul@multiplicand+1,f
 20722  1D47  0DF7               	rlf	___lmul@multiplicand+2,f
 20723  1D48  0DF8               	rlf	___lmul@multiplicand+3,f
 20724  1D49  0B89               	decfsz	9,f
 20725  1D4A  2D45               	goto	u3105
 20726  1D4B  3001               	movlw	1
 20727  1D4C                     u3115:	
 20728  1D4C  36F4               	lsrf	___lmul@multiplier+3,f
 20729  1D4D  0CF3               	rrf	___lmul@multiplier+2,f
 20730  1D4E  0CF2               	rrf	___lmul@multiplier+1,f
 20731  1D4F  0CF1               	rrf	___lmul@multiplier,f
 20732  1D50  0B89               	decfsz	9,f
 20733  1D51  2D4C               	goto	u3115
 20734  1D52  0874               	movf	___lmul@multiplier+3,w
 20735  1D53  0473               	iorwf	___lmul@multiplier+2,w
 20736  1D54  0472               	iorwf	___lmul@multiplier+1,w
 20737  1D55  0471               	iorwf	___lmul@multiplier,w
 20738  1D56  1D03               	skipz
 20739  1D57  2D39               	goto	l6034
 20740  1D58  0020               	movlb	0	; select bank0
 20741  1D59  0823               	movf	___lmul@product+3,w
 20742  1D5A  00F4               	movwf	?___lmul+3
 20743  1D5B  0822               	movf	___lmul@product+2,w
 20744  1D5C  00F3               	movwf	?___lmul+2
 20745  1D5D  0821               	movf	___lmul@product+1,w
 20746  1D5E  00F2               	movwf	?___lmul+1
 20747  1D5F  0820               	movf	___lmul@product,w
 20748  1D60  00F1               	movwf	?___lmul
 20749  1D61  0008               	return
 20750  1D62                     __end_of___lmul:	
 20751                           
 20752                           	psect	text46
 20753  1EB2                     __ptext46:	
 20754 ;; *************** function _led_curtain *****************
 20755 ;; Defined at:
 20756 ;;		line 151 in file "main.c"
 20757 ;; Parameters:    Size  Location     Type
 20758 ;;  counter         2   16[BANK0 ] unsigned int 
 20759 ;; Auto vars:     Size  Location     Type
 20760 ;;  size            2   22[BANK0 ] unsigned int 
 20761 ;;  leds            2   20[BANK0 ] unsigned int 
 20762 ;; Return value:  Size  Location     Type
 20763 ;;                  1    wreg      void 
 20764 ;; Registers used:
 20765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20766 ;; Tracked objects:
 20767 ;;		On entry : 0/0
 20768 ;;		On exit  : 0/0
 20769 ;;		Unchanged: 0/0
 20770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20772 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20773 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20774 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20775 ;;Total ram usage:        8 bytes
 20776 ;; Hardware stack levels used:    1
 20777 ;; Hardware stack levels required when called:    9
 20778 ;; This function calls:
 20779 ;;		___lwmod
 20780 ;;		_nullifyBadge_userLedsSet
 20781 ;; This function is called by:
 20782 ;;		_flashy_Main
 20783 ;; This function uses a non-reentrant model
 20784 ;;
 20785                           
 20786                           
 20787                           ;psect for function _led_curtain
 20788  1EB2                     _led_curtain:	
 20789                           
 20790                           ;main.c: 152: u16 size = sizeof(curtain_leds) / sizeof(curtain_leds[0]);
 20791                           
 20792                           ;incstack = 0
 20793                           ; Regs used in _led_curtain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20794  1EB2  300E               	movlw	14
 20795  1EB3  0020               	movlb	0	; select bank0
 20796  1EB4  00B6               	movwf	led_curtain@size
 20797  1EB5  3000               	movlw	0
 20798  1EB6  00B7               	movwf	led_curtain@size+1
 20799                           
 20800                           ;main.c: 153: u16 leds = curtain_leds[counter % size];
 20801  1EB7  0837               	movf	led_curtain@size+1,w
 20802  1EB8  00A1               	movwf	___lwmod@divisor+1
 20803  1EB9  0836               	movf	led_curtain@size,w
 20804  1EBA  00A0               	movwf	___lwmod@divisor
 20805  1EBB  0831               	movf	led_curtain@counter+1,w
 20806  1EBC  00A3               	movwf	___lwmod@dividend+1
 20807  1EBD  0830               	movf	led_curtain@counter,w
 20808  1EBE  00A2               	movwf	___lwmod@dividend
 20809  1EBF  319C  24A3  319E   	fcall	___lwmod
 20810  1EC2  0020               	movlb	0	; select bank0
 20811  1EC3  0820               	movf	?___lwmod,w
 20812  1EC4  0709               	addwf	9,w
 20813  1EC5  3E20               	addlw	(low (_curtain_leds| (0+768)))& (0+255)
 20814  1EC6  0086               	movwf	6
 20815  1EC7  3003               	movlw	3	; select bank6/7
 20816  1EC8  0087               	movwf	7
 20817  1EC9  3F40               	moviw [0]fsr1
 20818  1ECA  00B4               	movwf	led_curtain@leds
 20819  1ECB  3F41               	moviw [1]fsr1
 20820  1ECC  00B5               	movwf	led_curtain@leds+1
 20821                           
 20822                           ;main.c: 155: size = sizeof(curtain_leds_inverse) / sizeof(curtain_leds_inverse[0]);
 20823  1ECD  300E               	movlw	14
 20824  1ECE  00B6               	movwf	led_curtain@size
 20825  1ECF  3000               	movlw	0
 20826  1ED0  00B7               	movwf	led_curtain@size+1
 20827                           
 20828                           ;main.c: 156: leds |= curtain_leds_inverse[counter % size];
 20829  1ED1  0837               	movf	led_curtain@size+1,w
 20830  1ED2  00A1               	movwf	___lwmod@divisor+1
 20831  1ED3  0836               	movf	led_curtain@size,w
 20832  1ED4  00A0               	movwf	___lwmod@divisor
 20833  1ED5  0831               	movf	led_curtain@counter+1,w
 20834  1ED6  00A3               	movwf	___lwmod@dividend+1
 20835  1ED7  0830               	movf	led_curtain@counter,w
 20836  1ED8  00A2               	movwf	___lwmod@dividend
 20837  1ED9  319C  24A3  319E   	fcall	___lwmod
 20838  1EDC  0020               	movlb	0	; select bank0
 20839  1EDD  0820               	movf	?___lwmod,w
 20840  1EDE  0709               	addwf	9,w
 20841  1EDF  3EA0               	addlw	(low (_curtain_leds_inverse| (0+768)))& (0+255)
 20842  1EE0  0086               	movwf	6
 20843  1EE1  3003               	movlw	3	; select bank7/8
 20844  1EE2  0087               	movwf	7
 20845  1EE3  3F40               	moviw [0]fsr1
 20846  1EE4  00B2               	movwf	??_led_curtain
 20847  1EE5  3F41               	moviw [1]fsr1
 20848  1EE6  00B3               	movwf	??_led_curtain+1
 20849  1EE7  0832               	movf	??_led_curtain,w
 20850  1EE8  04B4               	iorwf	led_curtain@leds,f
 20851  1EE9  0833               	movf	??_led_curtain+1,w
 20852  1EEA  04B5               	iorwf	led_curtain@leds+1,f
 20853                           
 20854                           ;main.c: 158: nullifyBadge_userLedsSet(&badge_inst, leds);
 20855  1EEB  0835               	movf	led_curtain@leds+1,w
 20856  1EEC  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 20857  1EED  0834               	movf	led_curtain@leds,w
 20858  1EEE  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 20859  1EEF  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 20860  1EF0  3199  2160         	fcall	_nullifyBadge_userLedsSet
 20861  1EF2  0008               	return
 20862  1EF3                     __end_of_led_curtain:	
 20863                           
 20864                           	psect	text47
 20865  18BB                     __ptext47:	
 20866 ;; *************** function _led_circle *****************
 20867 ;; Defined at:
 20868 ;;		line 167 in file "main.c"
 20869 ;; Parameters:    Size  Location     Type
 20870 ;;  count           2   16[BANK0 ] unsigned int 
 20871 ;; Auto vars:     Size  Location     Type
 20872 ;;		None
 20873 ;; Return value:  Size  Location     Type
 20874 ;;                  1    wreg      void 
 20875 ;; Registers used:
 20876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20877 ;; Tracked objects:
 20878 ;;		On entry : 0/0
 20879 ;;		On exit  : 0/0
 20880 ;;		Unchanged: 0/0
 20881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20882 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20885 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20886 ;;Total ram usage:        2 bytes
 20887 ;; Hardware stack levels used:    1
 20888 ;; Hardware stack levels required when called:    9
 20889 ;; This function calls:
 20890 ;;		_nullifyBadge_userLedsSet
 20891 ;; This function is called by:
 20892 ;;		_flashy_Main
 20893 ;; This function uses a non-reentrant model
 20894 ;;
 20895                           
 20896                           
 20897                           ;psect for function _led_circle
 20898  18BB                     _led_circle:	
 20899                           
 20900                           ;main.c: 169: nullifyBadge_userLedsSet(&badge_inst,count);
 20901                           
 20902                           ;incstack = 0
 20903                           ; Regs used in _led_circle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20904  18BB  0020               	movlb	0	; select bank0
 20905  18BC  0831               	movf	led_circle@count+1,w
 20906  18BD  00AE               	movwf	nullifyBadge_userLedsSet@userLedData+1
 20907  18BE  0830               	movf	led_circle@count,w
 20908  18BF  00AD               	movwf	nullifyBadge_userLedsSet@userLedData
 20909  18C0  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 20910  18C1  3199  2160         	fcall	_nullifyBadge_userLedsSet
 20911  18C3  0008               	return
 20912  18C4                     __end_of_led_circle:	
 20913                           
 20914                           	psect	text48
 20915  1960                     __ptext48:	
 20916 ;; *************** function _nullifyBadge_userLedsSet *****************
 20917 ;; Defined at:
 20918 ;;		line 164 in file "nullifyBadge.c"
 20919 ;; Parameters:    Size  Location     Type
 20920 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 20921 ;;		 -> badge_inst(18), 
 20922 ;;  userLedData     2   13[BANK0 ] unsigned int 
 20923 ;; Auto vars:     Size  Location     Type
 20924 ;;  badge           1   15[BANK0 ] PTR struct t_nullifyBadg
 20925 ;;		 -> badge_inst(18), 
 20926 ;; Return value:  Size  Location     Type
 20927 ;;                  1    wreg      void 
 20928 ;; Registers used:
 20929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20930 ;; Tracked objects:
 20931 ;;		On entry : 0/0
 20932 ;;		On exit  : 0/0
 20933 ;;		Unchanged: 0/0
 20934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20938 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20939 ;;Total ram usage:        3 bytes
 20940 ;; Hardware stack levels used:    1
 20941 ;; Hardware stack levels required when called:    8
 20942 ;; This function calls:
 20943 ;;		_displayL2_SetUserLeds
 20944 ;; This function is called by:
 20945 ;;		_led_roundabout
 20946 ;;		_led_curtain
 20947 ;;		_led_rand
 20948 ;;		_led_circle
 20949 ;;		_menu_display_option
 20950 ;;		_flashy_Main
 20951 ;;		_locked_Main
 20952 ;; This function uses a non-reentrant model
 20953 ;;
 20954                           
 20955                           
 20956                           ;psect for function _nullifyBadge_userLedsSet
 20957  1960                     _nullifyBadge_userLedsSet:	
 20958                           
 20959                           ;incstack = 0
 20960                           ; Regs used in _nullifyBadge_userLedsSet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 20961                           ;nullifyBadge_userLedsSet@badge stored from wreg
 20962  1960  0020               	movlb	0	; select bank0
 20963  1961  00AF               	movwf	nullifyBadge_userLedsSet@badge
 20964                           
 20965                           ;nullifyBadge.c: 165: if (badge_locked) {
 20966  1962  087C               	movf	_badge_locked,w
 20967  1963  1D03               	btfss	3,2
 20968                           
 20969                           ;nullifyBadge.c: 166: userLedData |= 1024;
 20970  1964  152E               	bsf	nullifyBadge_userLedsSet@userLedData+1,2
 20971                           
 20972                           ;nullifyBadge.c: 167: }
 20973                           ;nullifyBadge.c: 168: displayL2_SetUserLeds(&badge->display, userLedData);
 20974  1965  082E               	movf	nullifyBadge_userLedsSet@userLedData+1,w
 20975  1966  00AC               	movwf	displayL2_SetUserLeds@userLedData+1
 20976  1967  082D               	movf	nullifyBadge_userLedsSet@userLedData,w
 20977  1968  00AB               	movwf	displayL2_SetUserLeds@userLedData
 20978  1969  082F               	movf	nullifyBadge_userLedsSet@badge,w
 20979  196A  319B  238E         	fcall	_displayL2_SetUserLeds
 20980  196C  0008               	return
 20981  196D                     __end_of_nullifyBadge_userLedsSet:	
 20982                           
 20983                           	psect	text49
 20984  1B8E                     __ptext49:	
 20985 ;; *************** function _displayL2_SetUserLeds *****************
 20986 ;; Defined at:
 20987 ;;		line 88 in file "nullifyBadge_displayL2.c"
 20988 ;; Parameters:    Size  Location     Type
 20989 ;;  display         1    wreg     PTR struct t_nullifyDisp
 20990 ;;		 -> badge_inst(18), 
 20991 ;;  userLedData     2   11[BANK0 ] unsigned int 
 20992 ;; Auto vars:     Size  Location     Type
 20993 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 20994 ;;		 -> badge_inst(18), 
 20995 ;; Return value:  Size  Location     Type
 20996 ;;                  1    wreg      void 
 20997 ;; Registers used:
 20998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20999 ;; Tracked objects:
 21000 ;;		On entry : 0/0
 21001 ;;		On exit  : 0/0
 21002 ;;		Unchanged: 0/0
 21003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21004 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21007 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21008 ;;Total ram usage:        3 bytes
 21009 ;; Hardware stack levels used:    1
 21010 ;; Hardware stack levels required when called:    7
 21011 ;; This function calls:
 21012 ;;		_displayL1_SetUserLed
 21013 ;;		_displayL1_Update
 21014 ;; This function is called by:
 21015 ;;		_nullifyBadge_userLedsSet
 21016 ;;		_nullifyBadge_userLedsSetForce
 21017 ;; This function uses a non-reentrant model
 21018 ;;
 21019                           
 21020                           
 21021                           ;psect for function _displayL2_SetUserLeds
 21022  1B8E                     _displayL2_SetUserLeds:	
 21023                           
 21024                           ;incstack = 0
 21025                           ; Regs used in _displayL2_SetUserLeds: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21026                           ;displayL2_SetUserLeds@display stored from wreg
 21027  1B8E  00FB               	movwf	displayL2_SetUserLeds@display
 21028                           
 21029                           ;nullifyBadge_displayL2.c: 89: display->ledVect = userLedData;
 21030  1B8F  087B               	movf	displayL2_SetUserLeds@display,w
 21031  1B90  3E05               	addlw	5
 21032  1B91  0086               	movwf	6
 21033  1B92  3001               	movlw	1	; select bank2/3
 21034  1B93  0087               	movwf	7
 21035  1B94  0020               	movlb	0	; select bank0
 21036  1B95  082B               	movf	displayL2_SetUserLeds@userLedData,w
 21037  1B96  3FC0               	movwi [0]fsr1
 21038  1B97  082C               	movf	displayL2_SetUserLeds@userLedData+1,w
 21039  1B98  3FC1               	movwi [1]fsr1
 21040                           
 21041                           ;nullifyBadge_displayL2.c: 90: displayL1_SetUserLed(&display->display_l1, display->ledVe
      +                          ct);
 21042  1B99  087B               	movf	displayL2_SetUserLeds@display,w
 21043  1B9A  3E05               	addlw	5
 21044  1B9B  0086               	movwf	6
 21045  1B9C  3001               	movlw	1	; select bank2/3
 21046  1B9D  0087               	movwf	7
 21047  1B9E  3F40               	moviw [0]fsr1
 21048  1B9F  00F1               	movwf	displayL1_SetUserLed@userLedVect
 21049  1BA0  3F41               	moviw [1]fsr1
 21050  1BA1  00F2               	movwf	displayL1_SetUserLed@userLedVect+1
 21051  1BA2  087B               	movf	displayL2_SetUserLeds@display,w
 21052  1BA3  3E07               	addlw	7
 21053  1BA4  3199  21F9  319B   	fcall	_displayL1_SetUserLed
 21054                           
 21055                           ;nullifyBadge_displayL2.c: 91: displayL1_Update(&display->display_l1);
 21056  1BA7  087B               	movf	displayL2_SetUserLeds@display,w
 21057  1BA8  3E07               	addlw	7
 21058  1BA9  3199  21D7         	fcall	_displayL1_Update
 21059  1BAB  0008               	return
 21060  1BAC                     __end_of_displayL2_SetUserLeds:	
 21061                           
 21062                           	psect	text50
 21063  19F9                     __ptext50:	
 21064 ;; *************** function _displayL1_SetUserLed *****************
 21065 ;; Defined at:
 21066 ;;		line 71 in file "nullifyBadge_displayL1.c"
 21067 ;; Parameters:    Size  Location     Type
 21068 ;;  display         1    wreg     PTR struct t_nullifyDisp
 21069 ;;		 -> badge_inst(18), 
 21070 ;;  userLedVect     2    1[COMMON] unsigned int 
 21071 ;; Auto vars:     Size  Location     Type
 21072 ;;  display         1    4[COMMON] PTR struct t_nullifyDisp
 21073 ;;		 -> badge_inst(18), 
 21074 ;; Return value:  Size  Location     Type
 21075 ;;                  1    wreg      void 
 21076 ;; Registers used:
 21077 ;;		wreg, fsr1l, fsr1h, status,2
 21078 ;; Tracked objects:
 21079 ;;		On entry : 0/0
 21080 ;;		On exit  : 0/0
 21081 ;;		Unchanged: 0/0
 21082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21087 ;;Total ram usage:        4 bytes
 21088 ;; Hardware stack levels used:    1
 21089 ;; Hardware stack levels required when called:    4
 21090 ;; This function calls:
 21091 ;;		Nothing
 21092 ;; This function is called by:
 21093 ;;		_displayL2_SetUserLeds
 21094 ;;		_displayL2_ClrUserLeds
 21095 ;; This function uses a non-reentrant model
 21096 ;;
 21097                           
 21098                           
 21099                           ;psect for function _displayL1_SetUserLed
 21100  19F9                     _displayL1_SetUserLed:	
 21101                           
 21102                           ;incstack = 0
 21103                           ; Regs used in _displayL1_SetUserLed: [wreg+fsr1l+fsr1h+status,2]
 21104                           ;displayL1_SetUserLed@display stored from wreg
 21105  19F9  00F4               	movwf	displayL1_SetUserLed@display
 21106                           
 21107                           ;nullifyBadge_displayL1.c: 73: display->displayVect[0] = (u8) (userLedVect >> 8);
 21108  19FA  0872               	movf	displayL1_SetUserLed@userLedVect+1,w
 21109  19FB  00F3               	movwf	??_displayL1_SetUserLed
 21110  19FC  0874               	movf	displayL1_SetUserLed@display,w
 21111  19FD  0086               	movwf	6
 21112  19FE  3001               	movlw	1	; select bank2/3
 21113  19FF  0087               	movwf	7
 21114  1A00  0873               	movf	??_displayL1_SetUserLed,w
 21115  1A01  0081               	movwf	1
 21116                           
 21117                           ;nullifyBadge_displayL1.c: 74: display->displayVect[1] = (u8) (userLedVect & 0xFF);
 21118  1A02  0871               	movf	displayL1_SetUserLed@userLedVect,w
 21119  1A03  00F3               	movwf	??_displayL1_SetUserLed
 21120  1A04  0A74               	incf	displayL1_SetUserLed@display,w
 21121  1A05  0086               	movwf	6
 21122  1A06  3001               	movlw	1	; select bank2/3
 21123  1A07  0087               	movwf	7
 21124  1A08  0873               	movf	??_displayL1_SetUserLed,w
 21125  1A09  0081               	movwf	1
 21126  1A0A  0008               	return
 21127  1A0B                     __end_of_displayL1_SetUserLed:	
 21128                           
 21129                           	psect	text51
 21130  1DC8                     __ptext51:	
 21131 ;; *************** function _flashy_display_option *****************
 21132 ;; Defined at:
 21133 ;;		line 74 in file "flashy_task.c"
 21134 ;; Parameters:    Size  Location     Type
 21135 ;;  data            2   44[BANK0 ] PTR struct t_flashy_task
 21136 ;;		 -> secret_TaskData(14), locked_TaskData(14), slot_TaskData(14), menu_TaskData(14), 
 21137 ;;		 -> flashy_TaskData(26), NULL(0), 
 21138 ;; Auto vars:     Size  Location     Type
 21139 ;;		None
 21140 ;; Return value:  Size  Location     Type
 21141 ;;                  1    wreg      void 
 21142 ;; Registers used:
 21143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21144 ;; Tracked objects:
 21145 ;;		On entry : 0/0
 21146 ;;		On exit  : 0/0
 21147 ;;		Unchanged: 0/0
 21148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21152 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21153 ;;Total ram usage:        2 bytes
 21154 ;; Hardware stack levels used:    1
 21155 ;; Hardware stack levels required when called:   10
 21156 ;; This function calls:
 21157 ;;		_marquee
 21158 ;;		_nullifyBadge_segDisplayForceUpdate
 21159 ;;		_nullifyBadge_segDisplayPutStr
 21160 ;; This function is called by:
 21161 ;;		_flashy_Main
 21162 ;; This function uses a non-reentrant model
 21163 ;;
 21164                           
 21165                           
 21166                           ;psect for function _flashy_display_option
 21167  1DC8                     _flashy_display_option:	
 21168                           
 21169                           ;flashy_task.c: 75: if (flashy_option_idx == 0){
 21170                           
 21171                           ;incstack = 0
 21172                           ; Regs used in _flashy_display_option: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21173  1DC8  0021               	movlb	1	; select bank1
 21174  1DC9  0826               	movf	_flashy_option_idx^(0+128),w
 21175  1DCA  0427               	iorwf	(_flashy_option_idx+1)^(0+128),w
 21176  1DCB  1D03               	btfss	3,2
 21177  1DCC  2DE8               	goto	l6294
 21178                           
 21179                           ;flashy_task.c: 76: nullifyBadge_segDisplayPutStr(data->badge, flashy_option[flashy_opti
      +                          on_idx]);
 21180  1DCD  3526               	lslf	_flashy_option_idx^(0+128),w
 21181  1DCE  3E2C               	addlw	(low (_flashy_option| (0+256)))& (0+255)
 21182  1DCF  0086               	movwf	6
 21183  1DD0  3001               	movlw	1	; select bank2/3
 21184  1DD1  0087               	movwf	7
 21185  1DD2  3F40               	moviw [0]fsr1
 21186  1DD3  0020               	movlb	0	; select bank0
 21187  1DD4  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 21188  1DD5  3F41               	moviw [1]fsr1
 21189  1DD6  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 21190  1DD7  084C               	movf	flashy_display_option@data,w
 21191  1DD8  0086               	movwf	6
 21192  1DD9  084D               	movf	flashy_display_option@data+1,w
 21193  1DDA  0087               	movwf	7
 21194  1DDB  0801               	movf	1,w
 21195  1DDC  3198  20D8  319D   	fcall	_nullifyBadge_segDisplayPutStr
 21196                           
 21197                           ;flashy_task.c: 77: nullifyBadge_segDisplayForceUpdate(data->badge);
 21198  1DDF  0020               	movlb	0	; select bank0
 21199  1DE0  084C               	movf	flashy_display_option@data,w
 21200  1DE1  0086               	movwf	6
 21201  1DE2  084D               	movf	flashy_display_option@data+1,w
 21202  1DE3  0087               	movwf	7
 21203  1DE4  0801               	movf	1,w
 21204  1DE5  3198  2090         	fcall	_nullifyBadge_segDisplayForceUpdate
 21205                           
 21206                           ;flashy_task.c: 78: }
 21207  1DE7  0008               	return
 21208  1DE8                     l6294:	
 21209                           
 21210                           ;flashy_task.c: 79: else {
 21211                           ;flashy_task.c: 80: marquee(flashy_option[flashy_option_idx], data->noholdCount);
 21212  1DE8  0021               	movlb	1	; select bank1
 21213  1DE9  3526               	lslf	_flashy_option_idx^(0+128),w
 21214  1DEA  3E2C               	addlw	(low (_flashy_option| (0+256)))& (0+255)
 21215  1DEB  0086               	movwf	6
 21216  1DEC  3001               	movlw	1	; select bank2/3
 21217  1DED  0087               	movwf	7
 21218  1DEE  3F40               	moviw [0]fsr1
 21219  1DEF  0020               	movlb	0	; select bank0
 21220  1DF0  00BA               	movwf	marquee@string
 21221  1DF1  3F41               	moviw [1]fsr1
 21222  1DF2  00BB               	movwf	marquee@string+1
 21223  1DF3  084C               	movf	flashy_display_option@data,w
 21224  1DF4  0086               	movwf	6
 21225  1DF5  084D               	movf	flashy_display_option@data+1,w
 21226  1DF6  0087               	movwf	7
 21227  1DF7  3158               	addfsr 1,24
 21228  1DF8  3F40               	moviw [0]fsr1
 21229  1DF9  00BC               	movwf	marquee@count
 21230  1DFA  3F41               	moviw [1]fsr1
 21231  1DFB  00BD               	movwf	marquee@count+1
 21232  1DFC  3193  2364         	fcall	_marquee
 21233  1DFE  0008               	return
 21234  1DFF                     __end_of_flashy_display_option:	
 21235                           
 21236                           	psect	text52
 21237  1364                     __ptext52:	
 21238 ;; *************** function _marquee *****************
 21239 ;; Defined at:
 21240 ;;		line 128 in file "main.c"
 21241 ;; Parameters:    Size  Location     Type
 21242 ;;  string          2   26[BANK0 ] PTR unsigned char 
 21243 ;;		 -> STR_20(5), STR_19(5), STR_18(5), STR_17(11), 
 21244 ;;		 -> STR_16(13), STR_13(6), STR_12(8), STR_11(9), 
 21245 ;;		 -> STR_10(5), STR_9(18), STR_7(6), STR_6(10), 
 21246 ;;		 -> STR_5(6), STR_4(5), 
 21247 ;;  count           2   28[BANK0 ] unsigned int 
 21248 ;; Auto vars:     Size  Location     Type
 21249 ;;  j               2   42[BANK0 ] unsigned int 
 21250 ;;  display_stri    5   31[BANK0 ] unsigned char [5]
 21251 ;;  string_lengt    2   40[BANK0 ] unsigned int 
 21252 ;;  i               2   38[BANK0 ] unsigned int 
 21253 ;;  multiplier      2   36[BANK0 ] unsigned int 
 21254 ;; Return value:  Size  Location     Type
 21255 ;;                  1    wreg      void 
 21256 ;; Registers used:
 21257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21258 ;; Tracked objects:
 21259 ;;		On entry : 0/0
 21260 ;;		On exit  : 0/0
 21261 ;;		Unchanged: 0/0
 21262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21263 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21264 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21266 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21267 ;;Total ram usage:       18 bytes
 21268 ;; Hardware stack levels used:    1
 21269 ;; Hardware stack levels required when called:    9
 21270 ;; This function calls:
 21271 ;;		___lwdiv
 21272 ;;		___lwmod
 21273 ;;		_nullifyBadge_segDisplayForceUpdate
 21274 ;;		_nullifyBadge_segDisplayPutStr
 21275 ;;		_strlen
 21276 ;; This function is called by:
 21277 ;;		_menu_display_option
 21278 ;;		_flashy_display_option
 21279 ;;		_flashy_Main
 21280 ;;		_locked_Main
 21281 ;;		_slot_Main
 21282 ;; This function uses a non-reentrant model
 21283 ;;
 21284                           
 21285                           
 21286                           ;psect for function _marquee
 21287  1364                     _marquee:	
 21288                           
 21289                           ;main.c: 129: u16 multiplier = 50;
 21290                           
 21291                           ;incstack = 0
 21292                           ; Regs used in _marquee: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21293  1364  3032               	movlw	50
 21294  1365  0020               	movlb	0	; select bank0
 21295  1366  00C4               	movwf	marquee@multiplier
 21296  1367  3000               	movlw	0
 21297  1368  00C5               	movwf	marquee@multiplier+1
 21298                           
 21299                           ;main.c: 130: u16 string_length = strlen((const char *) string);
 21300  1369  083B               	movf	marquee@string+1,w
 21301  136A  00F2               	movwf	strlen@s+1
 21302  136B  083A               	movf	marquee@string,w
 21303  136C  00F1               	movwf	strlen@s
 21304  136D  319B  2370  3193   	fcall	_strlen
 21305  1370  0872               	movf	?_strlen+1,w
 21306  1371  0020               	movlb	0	; select bank0
 21307  1372  00C9               	movwf	marquee@string_length+1
 21308  1373  0871               	movf	?_strlen,w
 21309  1374  00C8               	movwf	marquee@string_length
 21310                           
 21311                           ;main.c: 131: char display_string[] = { ' ', ' ', ' ', ' ', '\0' };
 21312  1375  303C               	movlw	low marquee@F14020
 21313  1376  0086               	movwf	6
 21314  1377  3001               	movlw	high marquee@F14020
 21315  1378  0087               	movwf	7
 21316  1379  303F               	movlw	low marquee@display_string
 21317  137A  0084               	movwf	4
 21318  137B  3000               	movlw	high marquee@display_string
 21319  137C  0085               	movwf	5
 21320  137D  3005               	movlw	5
 21321  137E  00BE               	movwf	??_marquee
 21322  137F                     u3260:	
 21323  137F  0016               	moviw fsr1++
 21324  1380  001A               	movwi fsr0++
 21325  1381  0BBE               	decfsz	??_marquee,f
 21326  1382  2B7F               	goto	u3260
 21327                           
 21328                           ;main.c: 132: u16 i = (count / multiplier) % string_length;
 21329  1383  0849               	movf	marquee@string_length+1,w
 21330  1384  00A1               	movwf	___lwmod@divisor+1
 21331  1385  0848               	movf	marquee@string_length,w
 21332  1386  00A0               	movwf	___lwmod@divisor
 21333  1387  0845               	movf	marquee@multiplier+1,w
 21334  1388  00F2               	movwf	___lwdiv@divisor+1
 21335  1389  0844               	movf	marquee@multiplier,w
 21336  138A  00F1               	movwf	___lwdiv@divisor
 21337  138B  083D               	movf	marquee@count+1,w
 21338  138C  00F4               	movwf	___lwdiv@dividend+1
 21339  138D  083C               	movf	marquee@count,w
 21340  138E  00F3               	movwf	___lwdiv@dividend
 21341  138F  319D  2594  3193   	fcall	___lwdiv
 21342  1392  0872               	movf	?___lwdiv+1,w
 21343  1393  0020               	movlb	0	; select bank0
 21344  1394  00A3               	movwf	___lwmod@dividend+1
 21345  1395  0871               	movf	?___lwdiv,w
 21346  1396  00A2               	movwf	___lwmod@dividend
 21347  1397  319C  24A3  3193   	fcall	___lwmod
 21348  139A  0020               	movlb	0	; select bank0
 21349  139B  0821               	movf	?___lwmod+1,w
 21350  139C  00C7               	movwf	marquee@i+1
 21351  139D  0820               	movf	?___lwmod,w
 21352  139E  00C6               	movwf	marquee@i
 21353                           
 21354                           ;main.c: 134: for (u16 j=0; j < 4; j++){
 21355  139F  01CA               	clrf	marquee@j
 21356  13A0  01CB               	clrf	marquee@j+1
 21357  13A1  3000               	movlw	0
 21358  13A2  024B               	subwf	marquee@j+1,w
 21359  13A3  3004               	movlw	4
 21360  13A4  1903               	skipnz
 21361  13A5  024A               	subwf	marquee@j,w
 21362  13A6  1803               	btfsc	3,0
 21363  13A7  2BCF               	goto	l6114
 21364  13A8                     l6108:	
 21365                           
 21366                           ;main.c: 135: display_string[j] = string[(i + j) % string_length];
 21367  13A8  0849               	movf	marquee@string_length+1,w
 21368  13A9  00A1               	movwf	___lwmod@divisor+1
 21369  13AA  0848               	movf	marquee@string_length,w
 21370  13AB  00A0               	movwf	___lwmod@divisor
 21371  13AC  084A               	movf	marquee@j,w
 21372  13AD  0746               	addwf	marquee@i,w
 21373  13AE  00A2               	movwf	___lwmod@dividend
 21374  13AF  084B               	movf	marquee@j+1,w
 21375  13B0  3D47               	addwfc	marquee@i+1,w
 21376  13B1  00A3               	movwf	___lwmod@dividend+1
 21377  13B2  319C  24A3  3193   	fcall	___lwmod
 21378  13B5  0020               	movlb	0	; select bank0
 21379  13B6  083A               	movf	marquee@string,w
 21380  13B7  0720               	addwf	?___lwmod,w
 21381  13B8  0084               	movwf	4
 21382  13B9  083B               	movf	marquee@string+1,w
 21383  13BA  3D21               	addwfc	?___lwmod+1,w
 21384  13BB  0085               	movwf	5
 21385  13BC  0800               	movf	0,w	;code access
 21386  13BD  00BE               	movwf	??_marquee
 21387  13BE  084A               	movf	marquee@j,w
 21388  13BF  3E3F               	addlw	(low (marquee@display_string| 0))& (0+255)
 21389  13C0  0086               	movwf	6
 21390  13C1  0187               	clrf	7
 21391  13C2  083E               	movf	??_marquee,w
 21392  13C3  0081               	movwf	1
 21393  13C4  3001               	movlw	1
 21394  13C5  07CA               	addwf	marquee@j,f
 21395  13C6  3000               	movlw	0
 21396  13C7  3DCB               	addwfc	marquee@j+1,f
 21397  13C8  3000               	movlw	0
 21398  13C9  024B               	subwf	marquee@j+1,w
 21399  13CA  3004               	movlw	4
 21400  13CB  1903               	skipnz
 21401  13CC  024A               	subwf	marquee@j,w
 21402  13CD  1C03               	skipc
 21403  13CE  2BA8               	goto	l6108
 21404  13CF                     l6114:	
 21405                           
 21406                           ;main.c: 136: }
 21407                           ;main.c: 137: nullifyBadge_segDisplayPutStr(&badge_inst, display_string);
 21408  13CF  303F               	movlw	low marquee@display_string
 21409  13D0  00B7               	movwf	nullifyBadge_segDisplayPutStr@str
 21410  13D1  3000               	movlw	high marquee@display_string
 21411  13D2  00B8               	movwf	nullifyBadge_segDisplayPutStr@str+1
 21412  13D3  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21413  13D4  3198  20D8  3193   	fcall	_nullifyBadge_segDisplayPutStr
 21414                           
 21415                           ;main.c: 138: nullifyBadge_segDisplayForceUpdate(&badge_inst);
 21416  13D7  30C3               	movlw	(low (_badge_inst| (0+256)))& (0+255)
 21417  13D8  3198  2090         	fcall	_nullifyBadge_segDisplayForceUpdate
 21418  13DA  0008               	return
 21419  13DB                     __end_of_marquee:	
 21420                           
 21421                           	psect	text53
 21422  1B70                     __ptext53:	
 21423 ;; *************** function _strlen *****************
 21424 ;; Defined at:
 21425 ;;		line 4 in file "/Applications/microchip/xc8/v1.42/sources/common/strlen.c"
 21426 ;; Parameters:    Size  Location     Type
 21427 ;;  s               2    1[COMMON] PTR const unsigned char 
 21428 ;;		 -> STR_20(5), secret_inputs.inputs(20), secret_inputs(25), STR_19(5), 
 21429 ;;		 -> STR_18(5), STR_17(11), STR_16(13), STR_13(6), 
 21430 ;;		 -> STR_12(8), STR_11(9), STR_10(5), STR_9(18), 
 21431 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 21432 ;; Auto vars:     Size  Location     Type
 21433 ;;  cp              2    5[COMMON] PTR const unsigned char 
 21434 ;;		 -> STR_20(5), secret_inputs.inputs(20), secret_inputs(25), STR_19(5), 
 21435 ;;		 -> STR_18(5), STR_17(11), STR_16(13), STR_13(6), 
 21436 ;;		 -> STR_12(8), STR_11(9), STR_10(5), STR_9(18), 
 21437 ;;		 -> STR_7(6), STR_6(10), STR_5(6), STR_4(5), 
 21438 ;; Return value:  Size  Location     Type
 21439 ;;                  2    1[COMMON] unsigned int 
 21440 ;; Registers used:
 21441 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 21442 ;; Tracked objects:
 21443 ;;		On entry : 0/0
 21444 ;;		On exit  : 0/0
 21445 ;;		Unchanged: 0/0
 21446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21450 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21451 ;;Total ram usage:        6 bytes
 21452 ;; Hardware stack levels used:    1
 21453 ;; Hardware stack levels required when called:    4
 21454 ;; This function calls:
 21455 ;;		Nothing
 21456 ;; This function is called by:
 21457 ;;		_marquee
 21458 ;;		_secret_check
 21459 ;; This function uses a non-reentrant model
 21460 ;;
 21461                           
 21462                           
 21463                           ;psect for function _strlen
 21464  1B70                     _strlen:	
 21465                           
 21466                           ;incstack = 0
 21467                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 21468  1B70  0872               	movf	strlen@s+1,w
 21469  1B71  00F6               	movwf	strlen@cp+1
 21470  1B72  0871               	movf	strlen@s,w
 21471  1B73  00F5               	movwf	strlen@cp
 21472  1B74                     l6014:	
 21473  1B74  0875               	movf	strlen@cp,w
 21474  1B75  0084               	movwf	4
 21475  1B76  0876               	movf	strlen@cp+1,w
 21476  1B77  0085               	movwf	5
 21477  1B78  0012               	moviw fsr0++
 21478  1B79  1903               	btfsc	3,2
 21479  1B7A  2B80               	goto	l6016
 21480  1B7B  3001               	movlw	1
 21481  1B7C  07F5               	addwf	strlen@cp,f
 21482  1B7D  3000               	movlw	0
 21483  1B7E  3DF6               	addwfc	strlen@cp+1,f
 21484  1B7F  2B74               	goto	l6014
 21485  1B80                     l6016:	
 21486  1B80  0971               	comf	strlen@s,w
 21487  1B81  00F3               	movwf	??_strlen
 21488  1B82  0972               	comf	strlen@s+1,w
 21489  1B83  00F4               	movwf	??_strlen+1
 21490  1B84  0AF3               	incf	??_strlen,f
 21491  1B85  1903               	skipnz
 21492  1B86  0AF4               	incf	??_strlen+1,f
 21493  1B87  0875               	movf	strlen@cp,w
 21494  1B88  0773               	addwf	??_strlen,w
 21495  1B89  00F1               	movwf	?_strlen
 21496  1B8A  0876               	movf	strlen@cp+1,w
 21497  1B8B  3D74               	addwfc	??_strlen+1,w
 21498  1B8C  00F2               	movwf	?_strlen+1
 21499  1B8D  0008               	return
 21500  1B8E                     __end_of_strlen:	
 21501                           
 21502                           	psect	text54
 21503  18D8                     __ptext54:	
 21504 ;; *************** function _nullifyBadge_segDisplayPutStr *****************
 21505 ;; Defined at:
 21506 ;;		line 113 in file "nullifyBadge.c"
 21507 ;; Parameters:    Size  Location     Type
 21508 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 21509 ;;		 -> badge_inst(18), 
 21510 ;;  str             2   23[BANK0 ] PTR unsigned char 
 21511 ;;		 -> flashy_Main@hit_counter(6), STR_14(5), STR_13(6), STR_12(8), 
 21512 ;;		 -> STR_11(9), STR_10(5), STR_7(6), STR_6(10), 
 21513 ;;		 -> STR_5(6), STR_4(5), marquee@display_string(5), 
 21514 ;; Auto vars:     Size  Location     Type
 21515 ;;  badge           1   25[BANK0 ] PTR struct t_nullifyBadg
 21516 ;;		 -> badge_inst(18), 
 21517 ;; Return value:  Size  Location     Type
 21518 ;;                  1    wreg      void 
 21519 ;; Registers used:
 21520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21521 ;; Tracked objects:
 21522 ;;		On entry : 0/0
 21523 ;;		On exit  : 0/0
 21524 ;;		Unchanged: 0/0
 21525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21529 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21530 ;;Total ram usage:        3 bytes
 21531 ;; Hardware stack levels used:    1
 21532 ;; Hardware stack levels required when called:    8
 21533 ;; This function calls:
 21534 ;;		_displayL2_PutStr
 21535 ;; This function is called by:
 21536 ;;		_marquee
 21537 ;;		_menu_display_option
 21538 ;;		_flashy_display_option
 21539 ;;		_flashy_Main
 21540 ;; This function uses a non-reentrant model
 21541 ;;
 21542                           
 21543                           
 21544                           ;psect for function _nullifyBadge_segDisplayPutStr
 21545  18D8                     _nullifyBadge_segDisplayPutStr:	
 21546                           
 21547                           ;incstack = 0
 21548                           ; Regs used in _nullifyBadge_segDisplayPutStr: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 21549                           ;nullifyBadge_segDisplayPutStr@badge stored from wreg
 21550  18D8  0020               	movlb	0	; select bank0
 21551  18D9  00B9               	movwf	nullifyBadge_segDisplayPutStr@badge
 21552                           
 21553                           ;nullifyBadge.c: 114: displayL2_PutStr(&badge->display, str);
 21554  18DA  0838               	movf	nullifyBadge_segDisplayPutStr@str+1,w
 21555  18DB  00B1               	movwf	displayL2_PutStr@str+1
 21556  18DC  0837               	movf	nullifyBadge_segDisplayPutStr@str,w
 21557  18DD  00B0               	movwf	displayL2_PutStr@str
 21558  18DE  0839               	movf	nullifyBadge_segDisplayPutStr@badge,w
 21559  18DF  319C  2479         	fcall	_displayL2_PutStr
 21560  18E1  0008               	return
 21561  18E2                     __end_of_nullifyBadge_segDisplayPutStr:	
 21562                           
 21563                           	psect	text55
 21564  1C79                     __ptext55:	
 21565 ;; *************** function _displayL2_PutStr *****************
 21566 ;; Defined at:
 21567 ;;		line 55 in file "nullifyBadge_displayL2.c"
 21568 ;; Parameters:    Size  Location     Type
 21569 ;;  display         1    wreg     PTR struct t_nullifyDisp
 21570 ;;		 -> badge_inst(18), 
 21571 ;;  str             2   16[BANK0 ] PTR unsigned char 
 21572 ;;		 -> flashy_Main@hit_counter(6), STR_14(5), STR_13(6), STR_12(8), 
 21573 ;;		 -> STR_11(9), STR_10(5), STR_7(6), STR_6(10), 
 21574 ;;		 -> STR_5(6), STR_4(5), STR_3(5), marquee@display_string(5), 
 21575 ;; Auto vars:     Size  Location     Type
 21576 ;;  display         1   21[BANK0 ] PTR struct t_nullifyDisp
 21577 ;;		 -> badge_inst(18), 
 21578 ;;  k               1   22[BANK0 ] unsigned char 
 21579 ;; Return value:  Size  Location     Type
 21580 ;;                  1    wreg      void 
 21581 ;; Registers used:
 21582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21583 ;; Tracked objects:
 21584 ;;		On entry : 0/0
 21585 ;;		On exit  : 0/0
 21586 ;;		Unchanged: 0/0
 21587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21589 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21590 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21591 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21592 ;;Total ram usage:        7 bytes
 21593 ;; Hardware stack levels used:    1
 21594 ;; Hardware stack levels required when called:    7
 21595 ;; This function calls:
 21596 ;;		_displayL2_PutChar
 21597 ;; This function is called by:
 21598 ;;		_nullifyBadge_segDisplayPutStr
 21599 ;;		_displayL2_EraseSegDisplay
 21600 ;; This function uses a non-reentrant model
 21601 ;;
 21602                           
 21603                           
 21604                           ;psect for function _displayL2_PutStr
 21605  1C79                     _displayL2_PutStr:	
 21606                           
 21607                           ;incstack = 0
 21608                           ; Regs used in _displayL2_PutStr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21609                           ;displayL2_PutStr@display stored from wreg
 21610  1C79  0020               	movlb	0	; select bank0
 21611  1C7A  00B5               	movwf	displayL2_PutStr@display
 21612                           
 21613                           ;nullifyBadge_displayL2.c: 57: u8 k = 0;
 21614  1C7B  01B6               	clrf	displayL2_PutStr@k
 21615  1C7C                     l5988:	
 21616                           ;nullifyBadge_displayL2.c: 59: while (str[k] != '\0') {
 21617                           
 21618  1C7C  0831               	movf	displayL2_PutStr@str+1,w
 21619  1C7D  00B3               	movwf	??_displayL2_PutStr+1
 21620  1C7E  0830               	movf	displayL2_PutStr@str,w
 21621  1C7F  00B2               	movwf	??_displayL2_PutStr
 21622  1C80  0836               	movf	displayL2_PutStr@k,w
 21623  1C81  0732               	addwf	??_displayL2_PutStr,w
 21624  1C82  0084               	movwf	4
 21625  1C83  0833               	movf	??_displayL2_PutStr+1,w
 21626  1C84  1803               	skipnc
 21627  1C85  0A33               	incf	??_displayL2_PutStr+1,w
 21628  1C86  0085               	movwf	5
 21629  1C87  0012               	moviw fsr0++
 21630  1C88  1903               	btfsc	3,2
 21631  1C89  0008               	return
 21632                           
 21633                           ;nullifyBadge_displayL2.c: 60: displayL2_PutChar(display, str[k]);
 21634  1C8A  0831               	movf	displayL2_PutStr@str+1,w
 21635  1C8B  00B3               	movwf	??_displayL2_PutStr+1
 21636  1C8C  0830               	movf	displayL2_PutStr@str,w
 21637  1C8D  00B2               	movwf	??_displayL2_PutStr
 21638  1C8E  0836               	movf	displayL2_PutStr@k,w
 21639  1C8F  0732               	addwf	??_displayL2_PutStr,w
 21640  1C90  0084               	movwf	4
 21641  1C91  0833               	movf	??_displayL2_PutStr+1,w
 21642  1C92  1803               	skipnc
 21643  1C93  0A33               	incf	??_displayL2_PutStr+1,w
 21644  1C94  0085               	movwf	5
 21645  1C95  0800               	movf	0,w	;code access
 21646  1C96  00B4               	movwf	??_displayL2_PutStr+2
 21647  1C97  0834               	movf	??_displayL2_PutStr+2,w
 21648  1C98  00AA               	movwf	displayL2_PutChar@c
 21649  1C99  0835               	movf	displayL2_PutStr@display,w
 21650  1C9A  3190  208C  319C   	fcall	_displayL2_PutChar
 21651                           
 21652                           ;nullifyBadge_displayL2.c: 61: k++;
 21653  1C9D  3001               	movlw	1
 21654  1C9E  0020               	movlb	0	; select bank0
 21655  1C9F  00B2               	movwf	??_displayL2_PutStr
 21656  1CA0  0832               	movf	??_displayL2_PutStr,w
 21657  1CA1  07B6               	addwf	displayL2_PutStr@k,f
 21658  1CA2  2C7C               	goto	l5988
 21659  1CA3                     __end_of_displayL2_PutStr:	
 21660                           
 21661                           	psect	text56
 21662  108C                     __ptext56:	
 21663 ;; *************** function _displayL2_PutChar *****************
 21664 ;; Defined at:
 21665 ;;		line 38 in file "nullifyBadge_displayL2.c"
 21666 ;; Parameters:    Size  Location     Type
 21667 ;;  display         1    wreg     PTR struct t_nullifyDisp
 21668 ;;		 -> badge_inst(18), 
 21669 ;;  c               1   10[BANK0 ] unsigned char 
 21670 ;; Auto vars:     Size  Location     Type
 21671 ;;  display         1   15[BANK0 ] PTR struct t_nullifyDisp
 21672 ;;		 -> badge_inst(18), 
 21673 ;;  k               1   14[BANK0 ] unsigned char 
 21674 ;; Return value:  Size  Location     Type
 21675 ;;                  1    wreg      void 
 21676 ;; Registers used:
 21677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21678 ;; Tracked objects:
 21679 ;;		On entry : 0/0
 21680 ;;		On exit  : 0/0
 21681 ;;		Unchanged: 0/0
 21682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21683 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21684 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21685 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21686 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21687 ;;Total ram usage:        6 bytes
 21688 ;; Hardware stack levels used:    1
 21689 ;; Hardware stack levels required when called:    6
 21690 ;; This function calls:
 21691 ;;		_displayL1_SetSegChar
 21692 ;; This function is called by:
 21693 ;;		_displayL2_PutStr
 21694 ;;		_nullifyBadge_segDisplayPutChar
 21695 ;; This function uses a non-reentrant model
 21696 ;;
 21697                           
 21698                           
 21699                           ;psect for function _displayL2_PutChar
 21700  108C                     _displayL2_PutChar:	
 21701                           
 21702                           ;incstack = 0
 21703                           ; Regs used in _displayL2_PutChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21704                           ;displayL2_PutChar@display stored from wreg
 21705  108C  0020               	movlb	0	; select bank0
 21706  108D  00AF               	movwf	displayL2_PutChar@display
 21707                           
 21708                           ;nullifyBadge_displayL2.c: 40: display->charVect[0] = display->charVect[1];
 21709  108E  0A2F               	incf	displayL2_PutChar@display,w
 21710  108F  0086               	movwf	6
 21711  1090  3001               	movlw	1	; select bank2/3
 21712  1091  0087               	movwf	7
 21713  1092  0801               	movf	1,w
 21714  1093  00AB               	movwf	??_displayL2_PutChar
 21715  1094  082F               	movf	displayL2_PutChar@display,w
 21716  1095  0086               	movwf	6
 21717  1096  3001               	movlw	1	; select bank2/3
 21718  1097  0087               	movwf	7
 21719  1098  082B               	movf	??_displayL2_PutChar,w
 21720  1099  0081               	movwf	1
 21721                           
 21722                           ;nullifyBadge_displayL2.c: 41: display->charVect[1] = display->charVect[2];
 21723  109A  082F               	movf	displayL2_PutChar@display,w
 21724  109B  3E02               	addlw	2
 21725  109C  0086               	movwf	6
 21726  109D  3001               	movlw	1	; select bank2/3
 21727  109E  0087               	movwf	7
 21728  109F  0801               	movf	1,w
 21729  10A0  00AB               	movwf	??_displayL2_PutChar
 21730  10A1  0A2F               	incf	displayL2_PutChar@display,w
 21731  10A2  0086               	movwf	6
 21732  10A3  3001               	movlw	1	; select bank2/3
 21733  10A4  0087               	movwf	7
 21734  10A5  082B               	movf	??_displayL2_PutChar,w
 21735  10A6  0081               	movwf	1
 21736                           
 21737                           ;nullifyBadge_displayL2.c: 42: display->charVect[2] = display->charVect[3];
 21738  10A7  082F               	movf	displayL2_PutChar@display,w
 21739  10A8  3E03               	addlw	3
 21740  10A9  0086               	movwf	6
 21741  10AA  3001               	movlw	1	; select bank2/3
 21742  10AB  0087               	movwf	7
 21743  10AC  0801               	movf	1,w
 21744  10AD  00AB               	movwf	??_displayL2_PutChar
 21745  10AE  082F               	movf	displayL2_PutChar@display,w
 21746  10AF  3E02               	addlw	2
 21747  10B0  0086               	movwf	6
 21748  10B1  3001               	movlw	1	; select bank2/3
 21749  10B2  0087               	movwf	7
 21750  10B3  082B               	movf	??_displayL2_PutChar,w
 21751  10B4  0081               	movwf	1
 21752                           
 21753                           ;nullifyBadge_displayL2.c: 45: display->charVect[3] = c;
 21754  10B5  082A               	movf	displayL2_PutChar@c,w
 21755  10B6  00AB               	movwf	??_displayL2_PutChar
 21756  10B7  082F               	movf	displayL2_PutChar@display,w
 21757  10B8  3E03               	addlw	3
 21758  10B9  0086               	movwf	6
 21759  10BA  3001               	movlw	1	; select bank2/3
 21760  10BB  0087               	movwf	7
 21761  10BC  082B               	movf	??_displayL2_PutChar,w
 21762  10BD  0081               	movwf	1
 21763                           
 21764                           ;nullifyBadge_displayL2.c: 48: u8 k = 0;
 21765  10BE  01AE               	clrf	displayL2_PutChar@k
 21766                           
 21767                           ;nullifyBadge_displayL2.c: 49: for (k = 0; k < 4; k++) {
 21768  10BF  01AE               	clrf	displayL2_PutChar@k
 21769  10C0                     L10:	
 21770  10C0  3004               	movlw	4
 21771  10C1  022E               	subwf	displayL2_PutChar@k,w
 21772  10C2  1803               	btfsc	3,0
 21773  10C3  0008               	return
 21774                           
 21775                           ;nullifyBadge_displayL2.c: 50: displayL1_SetSegChar(&display->display_l1, display->charV
      +                          ect[k], k);
 21776  10C4  082E               	movf	displayL2_PutChar@k,w
 21777  10C5  072F               	addwf	displayL2_PutChar@display,w
 21778  10C6  00AB               	movwf	??_displayL2_PutChar
 21779  10C7  082B               	movf	??_displayL2_PutChar,w
 21780  10C8  0086               	movwf	6
 21781  10C9  3001               	movlw	1	; select bank2/3
 21782  10CA  0087               	movwf	7
 21783  10CB  0801               	movf	1,w
 21784  10CC  00AC               	movwf	??_displayL2_PutChar+1
 21785  10CD  082C               	movf	??_displayL2_PutChar+1,w
 21786  10CE  00A0               	movwf	displayL1_SetSegChar@c
 21787  10CF  082E               	movf	displayL2_PutChar@k,w
 21788  10D0  00AD               	movwf	??_displayL2_PutChar+2
 21789  10D1  082D               	movf	??_displayL2_PutChar+2,w
 21790  10D2  00A1               	movwf	displayL1_SetSegChar@charPos
 21791  10D3  082F               	movf	displayL2_PutChar@display,w
 21792  10D4  3E07               	addlw	7
 21793  10D5  319E  2671  3190   	fcall	_displayL1_SetSegChar
 21794  10D8  3001               	movlw	1
 21795  10D9  0020               	movlb	0	; select bank0
 21796  10DA  00AB               	movwf	??_displayL2_PutChar
 21797  10DB  082B               	movf	??_displayL2_PutChar,w
 21798  10DC  07AE               	addwf	displayL2_PutChar@k,f
 21799  10DD  28C0               	goto	L10
 21800  10DE                     __end_of_displayL2_PutChar:	
 21801                           
 21802                           	psect	text57
 21803  1E71                     __ptext57:	
 21804 ;; *************** function _displayL1_SetSegChar *****************
 21805 ;; Defined at:
 21806 ;;		line 18 in file "nullifyBadge_displayL1.c"
 21807 ;; Parameters:    Size  Location     Type
 21808 ;;  display         1    wreg     PTR struct t_nullifyDisp
 21809 ;;		 -> badge_inst(18), 
 21810 ;;  c               1    0[BANK0 ] unsigned char 
 21811 ;;  charPos         1    1[BANK0 ] unsigned char 
 21812 ;; Auto vars:     Size  Location     Type
 21813 ;;  display         1    7[BANK0 ] PTR struct t_nullifyDisp
 21814 ;;		 -> badge_inst(18), 
 21815 ;;  charData        2    8[BANK0 ] unsigned int 
 21816 ;;  dispDataVect    1    6[BANK0 ] unsigned char 
 21817 ;; Return value:  Size  Location     Type
 21818 ;;                  1    wreg      void 
 21819 ;; Registers used:
 21820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21821 ;; Tracked objects:
 21822 ;;		On entry : 0/0
 21823 ;;		On exit  : 0/0
 21824 ;;		Unchanged: 0/0
 21825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21827 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21828 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21829 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21830 ;;Total ram usage:       10 bytes
 21831 ;; Hardware stack levels used:    1
 21832 ;; Hardware stack levels required when called:    5
 21833 ;; This function calls:
 21834 ;;		_displayCharReverse
 21835 ;; This function is called by:
 21836 ;;		_displayL2_PutChar
 21837 ;;		_nullifyBadge_segDisplayPutCharPos
 21838 ;;		_displayL2_PrintChar
 21839 ;; This function uses a non-reentrant model
 21840 ;;
 21841                           
 21842                           
 21843                           ;psect for function _displayL1_SetSegChar
 21844  1E71                     _displayL1_SetSegChar:	
 21845                           
 21846                           ;incstack = 0
 21847                           ; Regs used in _displayL1_SetSegChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21848                           ;displayL1_SetSegChar@display stored from wreg
 21849  1E71  0020               	movlb	0	; select bank0
 21850  1E72  00A7               	movwf	displayL1_SetSegChar@display
 21851                           
 21852                           ;nullifyBadge_displayL1.c: 23: u16 charData = asciiCharTableLookup[(u8) c];
 21853  1E73  0820               	movf	displayL1_SetSegChar@c,w
 21854  1E74  00A2               	movwf	??_displayL1_SetSegChar
 21855  1E75  01A3               	clrf	??_displayL1_SetSegChar+1
 21856  1E76  35A2               	lslf	??_displayL1_SetSegChar,f
 21857  1E77  0DA3               	rlf	??_displayL1_SetSegChar+1,f
 21858  1E78  30F0               	movlw	240
 21859  1E79  00A4               	movwf	??_displayL1_SetSegChar+2
 21860  1E7A  3026               	movlw	38
 21861  1E7B  00A5               	movwf	??_displayL1_SetSegChar+3
 21862  1E7C  0822               	movf	??_displayL1_SetSegChar,w
 21863  1E7D  0724               	addwf	??_displayL1_SetSegChar+2,w
 21864  1E7E  0086               	movwf	6
 21865  1E7F  0823               	movf	??_displayL1_SetSegChar+1,w
 21866  1E80  3D25               	addwfc	??_displayL1_SetSegChar+3,w
 21867  1E81  0087               	movwf	7
 21868  1E82  3F40               	moviw [0]fsr1
 21869  1E83  00A8               	movwf	displayL1_SetSegChar@charData
 21870  1E84  3F41               	moviw [1]fsr1
 21871  1E85  00A9               	movwf	displayL1_SetSegChar@charData+1
 21872                           
 21873                           ;nullifyBadge_displayL1.c: 29: if (charPos & 0x1) {
 21874  1E86  1C21               	btfss	displayL1_SetSegChar@charPos,0
 21875  1E87  2E93               	goto	l5926
 21876                           
 21877                           ;nullifyBadge_displayL1.c: 30: charData = displayCharReverse(charData);
 21878  1E88  0829               	movf	displayL1_SetSegChar@charData+1,w
 21879  1E89  00F2               	movwf	displayCharReverse@cVal+1
 21880  1E8A  0828               	movf	displayL1_SetSegChar@charData,w
 21881  1E8B  00F1               	movwf	displayCharReverse@cVal
 21882  1E8C  319C  24D0         	fcall	_displayCharReverse
 21883  1E8E  0872               	movf	?_displayCharReverse+1,w
 21884  1E8F  0020               	movlb	0	; select bank0
 21885  1E90  00A9               	movwf	displayL1_SetSegChar@charData+1
 21886  1E91  0871               	movf	?_displayCharReverse,w
 21887  1E92  00A8               	movwf	displayL1_SetSegChar@charData
 21888  1E93                     l5926:	
 21889                           
 21890                           ;nullifyBadge_displayL1.c: 31: }
 21891                           ;nullifyBadge_displayL1.c: 61: u8 dispDataVectBaseIdx = 8 - ( charPos << 1 );
 21892  1E93  3521               	lslf	displayL1_SetSegChar@charPos,w
 21893  1E94  3AFF               	xorlw	255
 21894  1E95  3E01               	addlw	1
 21895  1E96  3E08               	addlw	8
 21896  1E97  00A2               	movwf	??_displayL1_SetSegChar
 21897  1E98  0822               	movf	??_displayL1_SetSegChar,w
 21898  1E99  00A6               	movwf	displayL1_SetSegChar@dispDataVectBaseIdx
 21899                           
 21900                           ;nullifyBadge_displayL1.c: 64: display->displayVect[dispDataVectBaseIdx] = (u8) (charDat
      +                          a >> 8);
 21901  1E9A  0829               	movf	displayL1_SetSegChar@charData+1,w
 21902  1E9B  00A2               	movwf	??_displayL1_SetSegChar
 21903  1E9C  0826               	movf	displayL1_SetSegChar@dispDataVectBaseIdx,w
 21904  1E9D  0727               	addwf	displayL1_SetSegChar@display,w
 21905  1E9E  00A3               	movwf	??_displayL1_SetSegChar+1
 21906  1E9F  0823               	movf	??_displayL1_SetSegChar+1,w
 21907  1EA0  0086               	movwf	6
 21908  1EA1  3001               	movlw	1	; select bank2/3
 21909  1EA2  0087               	movwf	7
 21910  1EA3  0822               	movf	??_displayL1_SetSegChar,w
 21911  1EA4  0081               	movwf	1
 21912                           
 21913                           ;nullifyBadge_displayL1.c: 67: display->displayVect[dispDataVectBaseIdx+1] = (u8) (charD
      +                          ata & 0xFF);
 21914  1EA5  0828               	movf	displayL1_SetSegChar@charData,w
 21915  1EA6  00A2               	movwf	??_displayL1_SetSegChar
 21916  1EA7  0826               	movf	displayL1_SetSegChar@dispDataVectBaseIdx,w
 21917  1EA8  3E01               	addlw	1
 21918  1EA9  0727               	addwf	displayL1_SetSegChar@display,w
 21919  1EAA  00A3               	movwf	??_displayL1_SetSegChar+1
 21920  1EAB  0823               	movf	??_displayL1_SetSegChar+1,w
 21921  1EAC  0086               	movwf	6
 21922  1EAD  3001               	movlw	1	; select bank2/3
 21923  1EAE  0087               	movwf	7
 21924  1EAF  0822               	movf	??_displayL1_SetSegChar,w
 21925  1EB0  0081               	movwf	1
 21926  1EB1  0008               	return
 21927  1EB2                     __end_of_displayL1_SetSegChar:	
 21928                           
 21929                           	psect	text58
 21930  1CD0                     __ptext58:	
 21931 ;; *************** function _displayCharReverse *****************
 21932 ;; Defined at:
 21933 ;;		line 105 in file "nullifyBadge_displayL1.c"
 21934 ;; Parameters:    Size  Location     Type
 21935 ;;  cVal            2    1[COMMON] unsigned int 
 21936 ;; Auto vars:     Size  Location     Type
 21937 ;;  k               1   11[COMMON] unsigned char 
 21938 ;;  retValUpperR    1   10[COMMON] unsigned char 
 21939 ;;  retValUpper     1    9[COMMON] unsigned char 
 21940 ;;  retValLower     1    8[COMMON] unsigned char 
 21941 ;; Return value:  Size  Location     Type
 21942 ;;                  2    1[COMMON] unsigned int 
 21943 ;; Registers used:
 21944 ;;		wreg, status,2, status,0
 21945 ;; Tracked objects:
 21946 ;;		On entry : 0/0
 21947 ;;		On exit  : 0/0
 21948 ;;		Unchanged: 0/0
 21949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21951 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21952 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21953 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21954 ;;Total ram usage:       11 bytes
 21955 ;; Hardware stack levels used:    1
 21956 ;; Hardware stack levels required when called:    4
 21957 ;; This function calls:
 21958 ;;		Nothing
 21959 ;; This function is called by:
 21960 ;;		_displayL1_SetSegChar
 21961 ;; This function uses a non-reentrant model
 21962 ;;
 21963                           
 21964                           
 21965                           ;psect for function _displayCharReverse
 21966  1CD0                     _displayCharReverse:	
 21967                           
 21968                           ;nullifyBadge_displayL1.c: 106: u8 retValUpper, retValLower, retValUpperRev;
 21969                           ;nullifyBadge_displayL1.c: 108: u8 k;
 21970                           ;nullifyBadge_displayL1.c: 111: retValUpper = cVal >> 8;
 21971                           
 21972                           ;incstack = 0
 21973                           ; Regs used in _displayCharReverse: [wreg+status,2+status,0]
 21974  1CD0  0872               	movf	displayCharReverse@cVal+1,w
 21975  1CD1  00F3               	movwf	??_displayCharReverse
 21976  1CD2  0873               	movf	??_displayCharReverse,w
 21977  1CD3  00F9               	movwf	displayCharReverse@retValUpper
 21978                           
 21979                           ;nullifyBadge_displayL1.c: 112: retValLower = cVal & 0xFF;
 21980  1CD4  0871               	movf	displayCharReverse@cVal,w
 21981  1CD5  00F3               	movwf	??_displayCharReverse
 21982  1CD6  0873               	movf	??_displayCharReverse,w
 21983  1CD7  00F8               	movwf	displayCharReverse@retValLower
 21984                           
 21985                           ;nullifyBadge_displayL1.c: 115: retValUpperRev = 0;
 21986  1CD8  01FA               	clrf	displayCharReverse@retValUpperRev
 21987                           
 21988                           ;nullifyBadge_displayL1.c: 117: for (k = 0; k < 7; k++) {
 21989  1CD9  01FB               	clrf	displayCharReverse@k
 21990  1CDA  3007               	movlw	7
 21991  1CDB  027B               	subwf	displayCharReverse@k,w
 21992  1CDC  1803               	btfsc	3,0
 21993  1CDD  2CEF               	goto	l5908
 21994  1CDE                     l5900:	
 21995                           
 21996                           ;nullifyBadge_displayL1.c: 118: retValUpperRev |= (retValUpper & 0x1);
 21997  1CDE  0879               	movf	displayCharReverse@retValUpper,w
 21998  1CDF  3901               	andlw	1
 21999  1CE0  00F3               	movwf	??_displayCharReverse
 22000  1CE1  0873               	movf	??_displayCharReverse,w
 22001  1CE2  04FA               	iorwf	displayCharReverse@retValUpperRev,f
 22002                           
 22003                           ;nullifyBadge_displayL1.c: 119: retValUpper >>= 1;
 22004  1CE3  1003               	clrc
 22005  1CE4  0CF9               	rrf	displayCharReverse@retValUpper,f
 22006                           
 22007                           ;nullifyBadge_displayL1.c: 120: retValUpperRev <<= 1;
 22008  1CE5  1003               	clrc
 22009  1CE6  0DFA               	rlf	displayCharReverse@retValUpperRev,f
 22010  1CE7  3001               	movlw	1
 22011  1CE8  00F3               	movwf	??_displayCharReverse
 22012  1CE9  0873               	movf	??_displayCharReverse,w
 22013  1CEA  07FB               	addwf	displayCharReverse@k,f
 22014  1CEB  3007               	movlw	7
 22015  1CEC  027B               	subwf	displayCharReverse@k,w
 22016  1CED  1C03               	skipc
 22017  1CEE  2CDE               	goto	l5900
 22018  1CEF                     l5908:	
 22019                           
 22020                           ;nullifyBadge_displayL1.c: 121: }
 22021                           ;nullifyBadge_displayL1.c: 123: return (retValLower << 8) | (retValUpperRev);
 22022  1CEF  087A               	movf	displayCharReverse@retValUpperRev,w
 22023  1CF0  00F3               	movwf	??_displayCharReverse
 22024  1CF1  01F4               	clrf	??_displayCharReverse+1
 22025  1CF2  0878               	movf	displayCharReverse@retValLower,w
 22026  1CF3  00F5               	movwf	??_displayCharReverse+2
 22027  1CF4  01F6               	clrf	??_displayCharReverse+3
 22028  1CF5  0875               	movf	??_displayCharReverse+2,w
 22029  1CF6  00F6               	movwf	??_displayCharReverse+3
 22030  1CF7  01F5               	clrf	??_displayCharReverse+2
 22031  1CF8  0873               	movf	??_displayCharReverse,w
 22032  1CF9  0475               	iorwf	??_displayCharReverse+2,w
 22033  1CFA  00F1               	movwf	?_displayCharReverse
 22034  1CFB  0874               	movf	??_displayCharReverse+1,w
 22035  1CFC  0476               	iorwf	??_displayCharReverse+3,w
 22036  1CFD  00F2               	movwf	?_displayCharReverse+1
 22037  1CFE  0008               	return
 22038  1CFF                     __end_of_displayCharReverse:	
 22039                           
 22040                           	psect	text59
 22041  1890                     __ptext59:	
 22042 ;; *************** function _nullifyBadge_segDisplayForceUpdate *****************
 22043 ;; Defined at:
 22044 ;;		line 108 in file "nullifyBadge.c"
 22045 ;; Parameters:    Size  Location     Type
 22046 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 22047 ;;		 -> badge_inst(18), 
 22048 ;; Auto vars:     Size  Location     Type
 22049 ;;  badge           1   11[BANK0 ] PTR struct t_nullifyBadg
 22050 ;;		 -> badge_inst(18), 
 22051 ;; Return value:  Size  Location     Type
 22052 ;;                  1    wreg      void 
 22053 ;; Registers used:
 22054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22055 ;; Tracked objects:
 22056 ;;		On entry : 0/0
 22057 ;;		On exit  : 0/0
 22058 ;;		Unchanged: 0/0
 22059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22064 ;;Total ram usage:        1 bytes
 22065 ;; Hardware stack levels used:    1
 22066 ;; Hardware stack levels required when called:    8
 22067 ;; This function calls:
 22068 ;;		_displayL2_ForceUpdate
 22069 ;; This function is called by:
 22070 ;;		_marquee
 22071 ;;		_menu_display_option
 22072 ;;		_flashy_display_option
 22073 ;;		_flashy_Main
 22074 ;; This function uses a non-reentrant model
 22075 ;;
 22076                           
 22077                           
 22078                           ;psect for function _nullifyBadge_segDisplayForceUpdate
 22079  1890                     _nullifyBadge_segDisplayForceUpdate:	
 22080                           
 22081                           ;incstack = 0
 22082                           ; Regs used in _nullifyBadge_segDisplayForceUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+
      +                          pclath+cstack]
 22083                           ;nullifyBadge_segDisplayForceUpdate@badge stored from wreg
 22084  1890  0020               	movlb	0	; select bank0
 22085  1891  00AB               	movwf	nullifyBadge_segDisplayForceUpdate@badge
 22086                           
 22087                           ;nullifyBadge.c: 109: displayL2_ForceUpdate(&badge->display);
 22088  1892  082B               	movf	nullifyBadge_segDisplayForceUpdate@badge,w
 22089  1893  3198  208A         	fcall	_displayL2_ForceUpdate
 22090  1895  0008               	return
 22091  1896                     __end_of_nullifyBadge_segDisplayForceUpdate:	
 22092                           
 22093                           	psect	text60
 22094  188A                     __ptext60:	
 22095 ;; *************** function _displayL2_ForceUpdate *****************
 22096 ;; Defined at:
 22097 ;;		line 79 in file "nullifyBadge_displayL2.c"
 22098 ;; Parameters:    Size  Location     Type
 22099 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22100 ;;		 -> badge_inst(18), 
 22101 ;; Auto vars:     Size  Location     Type
 22102 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 22103 ;;		 -> badge_inst(18), 
 22104 ;; Return value:  Size  Location     Type
 22105 ;;                  1    wreg      void 
 22106 ;; Registers used:
 22107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22108 ;; Tracked objects:
 22109 ;;		On entry : 0/0
 22110 ;;		On exit  : 0/0
 22111 ;;		Unchanged: 0/0
 22112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22117 ;;Total ram usage:        1 bytes
 22118 ;; Hardware stack levels used:    1
 22119 ;; Hardware stack levels required when called:    7
 22120 ;; This function calls:
 22121 ;;		_displayL1_Update
 22122 ;; This function is called by:
 22123 ;;		_nullifyBadge_segDisplayForceUpdate
 22124 ;; This function uses a non-reentrant model
 22125 ;;
 22126                           
 22127                           
 22128                           ;psect for function _displayL2_ForceUpdate
 22129  188A                     _displayL2_ForceUpdate:	
 22130                           
 22131                           ;incstack = 0
 22132                           ; Regs used in _displayL2_ForceUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22133                           ;displayL2_ForceUpdate@display stored from wreg
 22134  188A  00FB               	movwf	displayL2_ForceUpdate@display
 22135                           
 22136                           ;nullifyBadge_displayL2.c: 80: displayL1_Update(&display->display_l1);
 22137  188B  087B               	movf	displayL2_ForceUpdate@display,w
 22138  188C  3E07               	addlw	7
 22139  188D  3199  21D7         	fcall	_displayL1_Update
 22140  188F  0008               	return
 22141  1890                     __end_of_displayL2_ForceUpdate:	
 22142                           
 22143                           	psect	text61
 22144  1CA3                     __ptext61:	
 22145 ;; *************** function ___lwmod *****************
 22146 ;; Defined at:
 22147 ;;		line 6 in file "/Applications/microchip/xc8/v1.42/sources/common/lwmod.c"
 22148 ;; Parameters:    Size  Location     Type
 22149 ;;  divisor         2    0[BANK0 ] unsigned int 
 22150 ;;  dividend        2    2[BANK0 ] unsigned int 
 22151 ;; Auto vars:     Size  Location     Type
 22152 ;;  counter         1   10[COMMON] unsigned char 
 22153 ;; Return value:  Size  Location     Type
 22154 ;;                  2    0[BANK0 ] unsigned int 
 22155 ;; Registers used:
 22156 ;;		wreg, status,2, status,0
 22157 ;; Tracked objects:
 22158 ;;		On entry : 0/0
 22159 ;;		On exit  : 0/0
 22160 ;;		Unchanged: 0/0
 22161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22162 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22165 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22166 ;;Total ram usage:        6 bytes
 22167 ;; Hardware stack levels used:    1
 22168 ;; Hardware stack levels required when called:    4
 22169 ;; This function calls:
 22170 ;;		Nothing
 22171 ;; This function is called by:
 22172 ;;		_marquee
 22173 ;;		_led_roundabout
 22174 ;;		_led_curtain
 22175 ;;		_menu_display_option
 22176 ;;		_locked_Main
 22177 ;;		_sprintf
 22178 ;; This function uses a non-reentrant model
 22179 ;;
 22180                           
 22181                           
 22182                           ;psect for function ___lwmod
 22183  1CA3                     ___lwmod:	
 22184                           
 22185                           ;incstack = 0
 22186                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 22187  1CA3  0020               	movlb	0	; select bank0
 22188  1CA4  0820               	movf	___lwmod@divisor,w
 22189  1CA5  0421               	iorwf	___lwmod@divisor+1,w
 22190  1CA6  1903               	btfsc	3,2
 22191  1CA7  2CCB               	goto	l6090
 22192  1CA8  01FA               	clrf	___lwmod@counter
 22193  1CA9  0AFA               	incf	___lwmod@counter,f
 22194  1CAA                     l6080:	
 22195  1CAA  1BA1               	btfsc	___lwmod@divisor+1,7
 22196  1CAB  2CB6               	goto	l6082
 22197  1CAC  3001               	movlw	1
 22198  1CAD                     u3215:	
 22199  1CAD  35A0               	lslf	___lwmod@divisor,f
 22200  1CAE  0DA1               	rlf	___lwmod@divisor+1,f
 22201  1CAF  0B89               	decfsz	9,f
 22202  1CB0  2CAD               	goto	u3215
 22203  1CB1  3001               	movlw	1
 22204  1CB2  00F9               	movwf	??___lwmod
 22205  1CB3  0879               	movf	??___lwmod,w
 22206  1CB4  07FA               	addwf	___lwmod@counter,f
 22207  1CB5  2CAA               	goto	l6080
 22208  1CB6                     l6082:	
 22209  1CB6  0821               	movf	___lwmod@divisor+1,w
 22210  1CB7  0223               	subwf	___lwmod@dividend+1,w
 22211  1CB8  1D03               	skipz
 22212  1CB9  2CBC               	goto	u3235
 22213  1CBA  0820               	movf	___lwmod@divisor,w
 22214  1CBB  0222               	subwf	___lwmod@dividend,w
 22215  1CBC                     u3235:	
 22216  1CBC  1C03               	skipc
 22217  1CBD  2CC2               	goto	l6086
 22218  1CBE  0820               	movf	___lwmod@divisor,w
 22219  1CBF  02A2               	subwf	___lwmod@dividend,f
 22220  1CC0  0821               	movf	___lwmod@divisor+1,w
 22221  1CC1  3BA3               	subwfb	___lwmod@dividend+1,f
 22222  1CC2                     l6086:	
 22223  1CC2  3001               	movlw	1
 22224  1CC3                     u3245:	
 22225  1CC3  36A1               	lsrf	___lwmod@divisor+1,f
 22226  1CC4  0CA0               	rrf	___lwmod@divisor,f
 22227  1CC5  0B89               	decfsz	9,f
 22228  1CC6  2CC3               	goto	u3245
 22229  1CC7  3001               	movlw	1
 22230  1CC8  02FA               	subwf	___lwmod@counter,f
 22231  1CC9  1D03               	btfss	3,2
 22232  1CCA  2CB6               	goto	l6082
 22233  1CCB                     l6090:	
 22234  1CCB  0823               	movf	___lwmod@dividend+1,w
 22235  1CCC  00A1               	movwf	?___lwmod+1
 22236  1CCD  0822               	movf	___lwmod@dividend,w
 22237  1CCE  00A0               	movwf	?___lwmod
 22238  1CCF  0008               	return
 22239  1CD0                     __end_of___lwmod:	
 22240                           
 22241                           	psect	text62
 22242  1D94                     __ptext62:	
 22243 ;; *************** function ___lwdiv *****************
 22244 ;; Defined at:
 22245 ;;		line 6 in file "/Applications/microchip/xc8/v1.42/sources/common/lwdiv.c"
 22246 ;; Parameters:    Size  Location     Type
 22247 ;;  divisor         2    1[COMMON] unsigned int 
 22248 ;;  dividend        2    3[COMMON] unsigned int 
 22249 ;; Auto vars:     Size  Location     Type
 22250 ;;  quotient        2    7[COMMON] unsigned int 
 22251 ;;  counter         1    6[COMMON] unsigned char 
 22252 ;; Return value:  Size  Location     Type
 22253 ;;                  2    1[COMMON] unsigned int 
 22254 ;; Registers used:
 22255 ;;		wreg, status,2, status,0
 22256 ;; Tracked objects:
 22257 ;;		On entry : 0/0
 22258 ;;		On exit  : 0/0
 22259 ;;		Unchanged: 0/0
 22260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22262 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22264 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22265 ;;Total ram usage:        8 bytes
 22266 ;; Hardware stack levels used:    1
 22267 ;; Hardware stack levels required when called:    4
 22268 ;; This function calls:
 22269 ;;		Nothing
 22270 ;; This function is called by:
 22271 ;;		_marquee
 22272 ;;		_sprintf
 22273 ;; This function uses a non-reentrant model
 22274 ;;
 22275                           
 22276                           
 22277                           ;psect for function ___lwdiv
 22278  1D94                     ___lwdiv:	
 22279                           
 22280                           ;incstack = 0
 22281                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 22282  1D94  01F7               	clrf	___lwdiv@quotient
 22283  1D95  01F8               	clrf	___lwdiv@quotient+1
 22284  1D96  0871               	movf	___lwdiv@divisor,w
 22285  1D97  0472               	iorwf	___lwdiv@divisor+1,w
 22286  1D98  1903               	btfsc	3,2
 22287  1D99  2DC3               	goto	l6068
 22288  1D9A  01F6               	clrf	___lwdiv@counter
 22289  1D9B  0AF6               	incf	___lwdiv@counter,f
 22290  1D9C                     l6056:	
 22291  1D9C  1BF2               	btfsc	___lwdiv@divisor+1,7
 22292  1D9D  2DA8               	goto	l6058
 22293  1D9E  3001               	movlw	1
 22294  1D9F                     u3145:	
 22295  1D9F  35F1               	lslf	___lwdiv@divisor,f
 22296  1DA0  0DF2               	rlf	___lwdiv@divisor+1,f
 22297  1DA1  0B89               	decfsz	9,f
 22298  1DA2  2D9F               	goto	u3145
 22299  1DA3  3001               	movlw	1
 22300  1DA4  00F5               	movwf	??___lwdiv
 22301  1DA5  0875               	movf	??___lwdiv,w
 22302  1DA6  07F6               	addwf	___lwdiv@counter,f
 22303  1DA7  2D9C               	goto	l6056
 22304  1DA8                     l6058:	
 22305  1DA8  3001               	movlw	1
 22306  1DA9                     u3165:	
 22307  1DA9  35F7               	lslf	___lwdiv@quotient,f
 22308  1DAA  0DF8               	rlf	___lwdiv@quotient+1,f
 22309  1DAB  0B89               	decfsz	9,f
 22310  1DAC  2DA9               	goto	u3165
 22311  1DAD  0872               	movf	___lwdiv@divisor+1,w
 22312  1DAE  0274               	subwf	___lwdiv@dividend+1,w
 22313  1DAF  1D03               	skipz
 22314  1DB0  2DB3               	goto	u3175
 22315  1DB1  0871               	movf	___lwdiv@divisor,w
 22316  1DB2  0273               	subwf	___lwdiv@dividend,w
 22317  1DB3                     u3175:	
 22318  1DB3  1C03               	skipc
 22319  1DB4  2DBA               	goto	l6064
 22320  1DB5  0871               	movf	___lwdiv@divisor,w
 22321  1DB6  02F3               	subwf	___lwdiv@dividend,f
 22322  1DB7  0872               	movf	___lwdiv@divisor+1,w
 22323  1DB8  3BF4               	subwfb	___lwdiv@dividend+1,f
 22324  1DB9  1477               	bsf	___lwdiv@quotient,0
 22325  1DBA                     l6064:	
 22326  1DBA  3001               	movlw	1
 22327  1DBB                     u3185:	
 22328  1DBB  36F2               	lsrf	___lwdiv@divisor+1,f
 22329  1DBC  0CF1               	rrf	___lwdiv@divisor,f
 22330  1DBD  0B89               	decfsz	9,f
 22331  1DBE  2DBB               	goto	u3185
 22332  1DBF  3001               	movlw	1
 22333  1DC0  02F6               	subwf	___lwdiv@counter,f
 22334  1DC1  1D03               	btfss	3,2
 22335  1DC2  2DA8               	goto	l6058
 22336  1DC3                     l6068:	
 22337  1DC3  0878               	movf	___lwdiv@quotient+1,w
 22338  1DC4  00F2               	movwf	?___lwdiv+1
 22339  1DC5  0877               	movf	___lwdiv@quotient,w
 22340  1DC6  00F1               	movwf	?___lwdiv
 22341  1DC7  0008               	return
 22342  1DC8                     __end_of___lwdiv:	
 22343                           
 22344                           	psect	text63
 22345  1B18                     __ptext63:	
 22346 ;; *************** function _TMR0_Read16bitTimer *****************
 22347 ;; Defined at:
 22348 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 22349 ;; Parameters:    Size  Location     Type
 22350 ;;		None
 22351 ;; Auto vars:     Size  Location     Type
 22352 ;;  readVal         2    8[COMMON] unsigned int 
 22353 ;;  readValHigh     1   11[COMMON] unsigned char 
 22354 ;;  readValLow      1   10[COMMON] unsigned char 
 22355 ;; Return value:  Size  Location     Type
 22356 ;;                  2    1[COMMON] unsigned int 
 22357 ;; Registers used:
 22358 ;;		wreg, status,2, status,0
 22359 ;; Tracked objects:
 22360 ;;		On entry : 0/0
 22361 ;;		On exit  : 0/0
 22362 ;;		Unchanged: 0/0
 22363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22365 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22366 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22367 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22368 ;;Total ram usage:       11 bytes
 22369 ;; Hardware stack levels used:    1
 22370 ;; Hardware stack levels required when called:    4
 22371 ;; This function calls:
 22372 ;;		Nothing
 22373 ;; This function is called by:
 22374 ;;		_scheduler_TaskRun
 22375 ;;		_schedulerExecute
 22376 ;; This function uses a non-reentrant model
 22377 ;;
 22378                           
 22379                           
 22380                           ;psect for function _TMR0_Read16bitTimer
 22381  1B18                     _TMR0_Read16bitTimer:	
 22382                           
 22383                           ;tmr0.c: 111: uint16_t readVal;
 22384                           ;tmr0.c: 112: uint8_t readValLow;
 22385                           ;tmr0.c: 113: uint8_t readValHigh;
 22386                           ;tmr0.c: 115: readValLow = TMR0L;
 22387                           
 22388                           ;incstack = 0
 22389                           ; Regs used in _TMR0_Read16bitTimer: [wreg+status,2+status,0]
 22390  1B18  0020               	movlb	0	; select bank0
 22391  1B19  0815               	movf	21,w	;volatile
 22392  1B1A  00F3               	movwf	??_TMR0_Read16bitTimer
 22393  1B1B  0873               	movf	??_TMR0_Read16bitTimer,w
 22394  1B1C  00FA               	movwf	TMR0_Read16bitTimer@readValLow
 22395                           
 22396                           ;tmr0.c: 116: readValHigh = TMR0H;
 22397  1B1D  0816               	movf	22,w	;volatile
 22398  1B1E  00F3               	movwf	??_TMR0_Read16bitTimer
 22399  1B1F  0873               	movf	??_TMR0_Read16bitTimer,w
 22400  1B20  00FB               	movwf	TMR0_Read16bitTimer@readValHigh
 22401                           
 22402                           ;tmr0.c: 117: readVal = ((uint16_t)readValHigh << 8) + readValLow;
 22403  1B21  087A               	movf	TMR0_Read16bitTimer@readValLow,w
 22404  1B22  00F3               	movwf	??_TMR0_Read16bitTimer
 22405  1B23  01F4               	clrf	??_TMR0_Read16bitTimer+1
 22406  1B24  087B               	movf	TMR0_Read16bitTimer@readValHigh,w
 22407  1B25  00F5               	movwf	??_TMR0_Read16bitTimer+2
 22408  1B26  01F6               	clrf	??_TMR0_Read16bitTimer+3
 22409  1B27  0875               	movf	??_TMR0_Read16bitTimer+2,w
 22410  1B28  00F6               	movwf	??_TMR0_Read16bitTimer+3
 22411  1B29  01F5               	clrf	??_TMR0_Read16bitTimer+2
 22412  1B2A  0873               	movf	??_TMR0_Read16bitTimer,w
 22413  1B2B  0775               	addwf	??_TMR0_Read16bitTimer+2,w
 22414  1B2C  00F8               	movwf	TMR0_Read16bitTimer@readVal
 22415  1B2D  0874               	movf	??_TMR0_Read16bitTimer+1,w
 22416  1B2E  3D76               	addwfc	??_TMR0_Read16bitTimer+3,w
 22417  1B2F  00F9               	movwf	TMR0_Read16bitTimer@readVal+1
 22418                           
 22419                           ;tmr0.c: 119: return readVal;
 22420  1B30  0879               	movf	TMR0_Read16bitTimer@readVal+1,w
 22421  1B31  00F2               	movwf	?_TMR0_Read16bitTimer+1
 22422  1B32  0878               	movf	TMR0_Read16bitTimer@readVal,w
 22423  1B33  00F1               	movwf	?_TMR0_Read16bitTimer
 22424  1B34  0008               	return
 22425  1B35                     __end_of_TMR0_Read16bitTimer:	
 22426                           
 22427                           	psect	text64
 22428  1133                     __ptext64:	
 22429 ;; *************** function _nullifyBadge_platformInit *****************
 22430 ;; Defined at:
 22431 ;;		line 13 in file "nullifyBadge.c"
 22432 ;; Parameters:    Size  Location     Type
 22433 ;;  badge           1    wreg     PTR struct t_nullifyBadg
 22434 ;;		 -> badge_inst(18), 
 22435 ;; Auto vars:     Size  Location     Type
 22436 ;;  badge           1   12[BANK0 ] PTR struct t_nullifyBadg
 22437 ;;		 -> badge_inst(18), 
 22438 ;; Return value:  Size  Location     Type
 22439 ;;                  1    wreg      void 
 22440 ;; Registers used:
 22441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22442 ;; Tracked objects:
 22443 ;;		On entry : 0/0
 22444 ;;		On exit  : 0/0
 22445 ;;		Unchanged: 0/0
 22446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22451 ;;Total ram usage:        1 bytes
 22452 ;; Hardware stack levels used:    1
 22453 ;; Hardware stack levels required when called:    9
 22454 ;; This function calls:
 22455 ;;		_OSCILLATOR_Initialize
 22456 ;;		_PIN_MANAGER_Initialize
 22457 ;;		_PWM1_Initialize
 22458 ;;		_PWM1_LoadDutyValue
 22459 ;;		_PWM2_Initialize
 22460 ;;		_PWM2_LoadDutyValue
 22461 ;;		_PWM5_Initialize
 22462 ;;		_PWM5_LoadDutyValue
 22463 ;;		_PWM6_Initialize
 22464 ;;		_PWM6_LoadDutyValue
 22465 ;;		_SPI1_Initialize
 22466 ;;		_SYSTEM_Initialize
 22467 ;;		_TMR0_Initialize
 22468 ;;		_TMR2_Initialize
 22469 ;;		_TMR4_Initialize
 22470 ;;		_displayL2_Initialize
 22471 ;; This function is called by:
 22472 ;;		_main
 22473 ;; This function uses a non-reentrant model
 22474 ;;
 22475                           
 22476                           
 22477                           ;psect for function _nullifyBadge_platformInit
 22478  1133                     _nullifyBadge_platformInit:	
 22479                           
 22480                           ;incstack = 0
 22481                           ; Regs used in _nullifyBadge_platformInit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22482                           ;nullifyBadge_platformInit@badge stored from wreg
 22483  1133  0020               	movlb	0	; select bank0
 22484  1134  00AC               	movwf	nullifyBadge_platformInit@badge
 22485                           
 22486                           ;nullifyBadge.c: 15: SYSTEM_Initialize();
 22487  1135  319B  23CC  3191   	fcall	_SYSTEM_Initialize
 22488                           
 22489                           ;nullifyBadge.c: 16: OSCILLATOR_Initialize();
 22490  1138  3198  20C4  3191   	fcall	_OSCILLATOR_Initialize
 22491                           
 22492                           ;nullifyBadge.c: 19: TMR0_Initialize();
 22493  113B  319B  2352  3191   	fcall	_TMR0_Initialize
 22494                           
 22495                           ;nullifyBadge.c: 20: TMR2_Initialize();
 22496  113E  3198  20CE  3191   	fcall	_TMR2_Initialize
 22497                           
 22498                           ;nullifyBadge.c: 21: TMR4_Initialize();
 22499  1141  3199  210D  3191   	fcall	_TMR4_Initialize
 22500                           
 22501                           ;nullifyBadge.c: 23: PIN_MANAGER_Initialize();
 22502  1144  3190  20DE  3191   	fcall	_PIN_MANAGER_Initialize
 22503                           
 22504                           ;nullifyBadge.c: 24: PWM1_Initialize();
 22505  1147  3198  20F7  3191   	fcall	_PWM1_Initialize
 22506                           
 22507                           ;nullifyBadge.c: 26: PWM2_Initialize();
 22508  114A  3199  2102  3191   	fcall	_PWM2_Initialize
 22509                           
 22510                           ;nullifyBadge.c: 27: PWM5_Initialize();
 22511  114D  3199  2123  3191   	fcall	_PWM5_Initialize
 22512                           
 22513                           ;nullifyBadge.c: 28: PWM6_Initialize();
 22514  1150  3199  212F  3191   	fcall	_PWM6_Initialize
 22515                           
 22516                           ;nullifyBadge.c: 29: SPI1_Initialize();
 22517  1153  3198  20A2  3191   	fcall	_SPI1_Initialize
 22518                           
 22519                           ;nullifyBadge.c: 32: PWM1_LoadDutyValue(128);
 22520  1156  3080               	movlw	128
 22521  1157  00F1               	movwf	PWM1_LoadDutyValue@dutyValue
 22522  1158  3000               	movlw	0
 22523  1159  00F2               	movwf	PWM1_LoadDutyValue@dutyValue+1
 22524  115A  319A  221E  3191   	fcall	_PWM1_LoadDutyValue
 22525                           
 22526                           ;nullifyBadge.c: 44: do { LATBbits.LATB7 = 1; } while(0);
 22527  115D  0022               	movlb	2	; select bank2
 22528  115E  178D               	bsf	13,7	;volatile
 22529                           
 22530                           ;nullifyBadge.c: 45: PWM2_LoadDutyValue(192);
 22531  115F  30C0               	movlw	192
 22532  1160  00F1               	movwf	PWM2_LoadDutyValue@dutyValue
 22533  1161  3000               	movlw	0
 22534  1162  00F2               	movwf	PWM2_LoadDutyValue@dutyValue+1
 22535  1163  319A  2234  3191   	fcall	_PWM2_LoadDutyValue
 22536                           
 22537                           ;nullifyBadge.c: 50: PWM5_LoadDutyValue(gamma_table_256x1k[128]);
 22538  1166  30A9               	movlw	low ((_gamma_table_256x1k+256)| (0+32768))
 22539  1167  0084               	movwf	4
 22540  1168  3087               	movlw	high ((_gamma_table_256x1k+256)| (0+32768))
 22541  1169  0085               	movwf	5
 22542  116A  3F00               	moviw [0]fsr0
 22543  116B  00F1               	movwf	PWM5_LoadDutyValue@dutyValue
 22544  116C  3F01               	moviw [1]fsr0
 22545  116D  00F2               	movwf	PWM5_LoadDutyValue@dutyValue+1
 22546  116E  319A  224A  3191   	fcall	_PWM5_LoadDutyValue
 22547                           
 22548                           ;nullifyBadge.c: 51: PWM6_LoadDutyValue(gamma_table_256x1k[128]);
 22549  1171  30A9               	movlw	low ((_gamma_table_256x1k+256)| (0+32768))
 22550  1172  0084               	movwf	4
 22551  1173  3087               	movlw	high ((_gamma_table_256x1k+256)| (0+32768))
 22552  1174  0085               	movwf	5
 22553  1175  3F00               	moviw [0]fsr0
 22554  1176  00F1               	movwf	PWM6_LoadDutyValue@dutyValue
 22555  1177  3F01               	moviw [1]fsr0
 22556  1178  00F2               	movwf	PWM6_LoadDutyValue@dutyValue+1
 22557  1179  319A  2260  3191   	fcall	_PWM6_LoadDutyValue
 22558                           
 22559                           ;nullifyBadge.c: 54: displayL2_Initialize(&badge->display);
 22560  117C  0020               	movlb	0	; select bank0
 22561  117D  082C               	movf	nullifyBadge_platformInit@badge,w
 22562  117E  319C  240E         	fcall	_displayL2_Initialize
 22563                           
 22564                           ;nullifyBadge.c: 57: badge->registeredHw = 0x0;
 22565  1180  0020               	movlb	0	; select bank0
 22566  1181  082C               	movf	nullifyBadge_platformInit@badge,w
 22567  1182  3E11               	addlw	17
 22568  1183  0086               	movwf	6
 22569  1184  3001               	movlw	1	; select bank2/3
 22570  1185  0087               	movwf	7
 22571  1186  0181               	clrf	1
 22572  1187  0008               	return
 22573  1188                     __end_of_nullifyBadge_platformInit:	
 22574                           
 22575                           	psect	text65
 22576  1C0E                     __ptext65:	
 22577 ;; *************** function _displayL2_Initialize *****************
 22578 ;; Defined at:
 22579 ;;		line 12 in file "nullifyBadge_displayL2.c"
 22580 ;; Parameters:    Size  Location     Type
 22581 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22582 ;;		 -> badge_inst(18), 
 22583 ;; Auto vars:     Size  Location     Type
 22584 ;;  display         1   11[BANK0 ] PTR struct t_nullifyDisp
 22585 ;;		 -> badge_inst(18), 
 22586 ;; Return value:  Size  Location     Type
 22587 ;;                  1    wreg      void 
 22588 ;; Registers used:
 22589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22590 ;; Tracked objects:
 22591 ;;		On entry : 0/0
 22592 ;;		On exit  : 0/0
 22593 ;;		Unchanged: 0/0
 22594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22598 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22599 ;;Total ram usage:        1 bytes
 22600 ;; Hardware stack levels used:    1
 22601 ;; Hardware stack levels required when called:    8
 22602 ;; This function calls:
 22603 ;;		_displayL1_Initialize
 22604 ;;		_memset
 22605 ;; This function is called by:
 22606 ;;		_nullifyBadge_platformInit
 22607 ;; This function uses a non-reentrant model
 22608 ;;
 22609                           
 22610                           
 22611                           ;psect for function _displayL2_Initialize
 22612  1C0E                     _displayL2_Initialize:	
 22613                           
 22614                           ;incstack = 0
 22615                           ; Regs used in _displayL2_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22616                           ;displayL2_Initialize@display stored from wreg
 22617  1C0E  0020               	movlb	0	; select bank0
 22618  1C0F  00AB               	movwf	displayL2_Initialize@display
 22619                           
 22620                           ;nullifyBadge_displayL2.c: 13: displayL1_Initialize(&display->display_l1);
 22621  1C10  082B               	movf	displayL2_Initialize@display,w
 22622  1C11  3E07               	addlw	7
 22623  1C12  3199  21A7  319C   	fcall	_displayL1_Initialize
 22624                           
 22625                           ;nullifyBadge_displayL2.c: 14: memset(display->charVect, ' ', sizeof(display->charVect))
      +                          ;
 22626  1C15  3020               	movlw	32
 22627  1C16  00F1               	movwf	memset@c
 22628  1C17  3000               	movlw	0
 22629  1C18  00F2               	movwf	memset@c+1
 22630  1C19  3004               	movlw	4
 22631  1C1A  00F3               	movwf	memset@n
 22632  1C1B  3000               	movlw	0
 22633  1C1C  00F4               	movwf	memset@n+1
 22634  1C1D  0020               	movlb	0	; select bank0
 22635  1C1E  082B               	movf	displayL2_Initialize@display,w
 22636  1C1F  319A  228F         	fcall	_memset
 22637                           
 22638                           ;nullifyBadge_displayL2.c: 15: display->dpVect = 0;
 22639  1C21  0020               	movlb	0	; select bank0
 22640  1C22  082B               	movf	displayL2_Initialize@display,w
 22641  1C23  3E04               	addlw	4
 22642  1C24  0086               	movwf	6
 22643  1C25  3001               	movlw	1	; select bank2/3
 22644  1C26  0087               	movwf	7
 22645  1C27  0181               	clrf	1
 22646                           
 22647                           ;nullifyBadge_displayL2.c: 16: display->ledVect = 0;
 22648  1C28  082B               	movf	displayL2_Initialize@display,w
 22649  1C29  3E05               	addlw	5
 22650  1C2A  0086               	movwf	6
 22651  1C2B  3001               	movlw	1	; select bank2/3
 22652  1C2C  0087               	movwf	7
 22653  1C2D  3000               	movlw	0
 22654  1C2E  3FC0               	movwi [0]fsr1
 22655  1C2F  3FC1               	movwi [1]fsr1
 22656  1C30  0008               	return
 22657  1C31                     __end_of_displayL2_Initialize:	
 22658                           
 22659                           	psect	text66
 22660  19A7                     __ptext66:	
 22661 ;; *************** function _displayL1_Initialize *****************
 22662 ;; Defined at:
 22663 ;;		line 13 in file "nullifyBadge_displayL1.c"
 22664 ;; Parameters:    Size  Location     Type
 22665 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22666 ;;		 -> badge_inst(18), 
 22667 ;; Auto vars:     Size  Location     Type
 22668 ;;  display         1   11[COMMON] PTR struct t_nullifyDisp
 22669 ;;		 -> badge_inst(18), 
 22670 ;; Return value:  Size  Location     Type
 22671 ;;                  1    wreg      void 
 22672 ;; Registers used:
 22673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22674 ;; Tracked objects:
 22675 ;;		On entry : 0/0
 22676 ;;		On exit  : 0/0
 22677 ;;		Unchanged: 0/0
 22678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22683 ;;Total ram usage:        1 bytes
 22684 ;; Hardware stack levels used:    1
 22685 ;; Hardware stack levels required when called:    7
 22686 ;; This function calls:
 22687 ;;		_displayL1_Update
 22688 ;;		_memset
 22689 ;; This function is called by:
 22690 ;;		_displayL2_Initialize
 22691 ;; This function uses a non-reentrant model
 22692 ;;
 22693                           
 22694                           
 22695                           ;psect for function _displayL1_Initialize
 22696  19A7                     _displayL1_Initialize:	
 22697                           
 22698                           ;incstack = 0
 22699                           ; Regs used in _displayL1_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22700                           ;displayL1_Initialize@display stored from wreg
 22701  19A7  00FB               	movwf	displayL1_Initialize@display
 22702                           
 22703                           ;nullifyBadge_displayL1.c: 14: memset(display->displayVect, 0, sizeof(struct t_nullifyDi
      +                          splay_l1));
 22704  19A8  3000               	movlw	0
 22705  19A9  00F1               	movwf	memset@c
 22706  19AA  00F2               	movwf	memset@c+1
 22707  19AB  300A               	movlw	10
 22708  19AC  00F3               	movwf	memset@n
 22709  19AD  3000               	movlw	0
 22710  19AE  00F4               	movwf	memset@n+1
 22711  19AF  087B               	movf	displayL1_Initialize@display,w
 22712  19B0  319A  228F  3199   	fcall	_memset
 22713                           
 22714                           ;nullifyBadge_displayL1.c: 15: displayL1_Update(display);
 22715  19B3  087B               	movf	displayL1_Initialize@display,w
 22716  19B4  3199  21D7         	fcall	_displayL1_Update
 22717  19B6  0008               	return
 22718  19B7                     __end_of_displayL1_Initialize:	
 22719                           
 22720                           	psect	text67
 22721  1A8F                     __ptext67:	
 22722 ;; *************** function _memset *****************
 22723 ;; Defined at:
 22724 ;;		line 8 in file "/Applications/microchip/xc8/v1.42/sources/common/memset.c"
 22725 ;; Parameters:    Size  Location     Type
 22726 ;;  p1              1    wreg     PTR void 
 22727 ;;		 -> badge_inst(18), 
 22728 ;;  c               2    1[COMMON] int 
 22729 ;;  n               2    3[COMMON] unsigned int 
 22730 ;; Auto vars:     Size  Location     Type
 22731 ;;  p1              1    7[COMMON] PTR void 
 22732 ;;		 -> badge_inst(18), 
 22733 ;;  p               1    6[COMMON] PTR unsigned char 
 22734 ;;		 -> badge_inst(18), 
 22735 ;; Return value:  Size  Location     Type
 22736 ;;                  1    wreg      PTR void 
 22737 ;; Registers used:
 22738 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22739 ;; Tracked objects:
 22740 ;;		On entry : 0/0
 22741 ;;		On exit  : 0/0
 22742 ;;		Unchanged: 0/0
 22743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22744 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22746 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22747 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22748 ;;Total ram usage:        7 bytes
 22749 ;; Hardware stack levels used:    1
 22750 ;; Hardware stack levels required when called:    4
 22751 ;; This function calls:
 22752 ;;		Nothing
 22753 ;; This function is called by:
 22754 ;;		_displayL1_Initialize
 22755 ;;		_displayL2_Initialize
 22756 ;; This function uses a non-reentrant model
 22757 ;;
 22758                           
 22759                           
 22760                           ;psect for function _memset
 22761  1A8F                     _memset:	
 22762                           
 22763                           ;incstack = 0
 22764                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 22765                           ;memset@p1 stored from wreg
 22766  1A8F  00F7               	movwf	memset@p1
 22767  1A90  0877               	movf	memset@p1,w
 22768  1A91  00F5               	movwf	??_memset
 22769  1A92  0875               	movf	??_memset,w
 22770  1A93  00F6               	movwf	memset@p
 22771  1A94                     l6250:	
 22772  1A94  3001               	movlw	1
 22773  1A95  02F3               	subwf	memset@n,f
 22774  1A96  3000               	movlw	0
 22775  1A97  3BF4               	subwfb	memset@n+1,f
 22776  1A98  0A73               	incf	memset@n,w
 22777  1A99  1903               	btfsc	3,2
 22778  1A9A  0A74               	incf	memset@n+1,w
 22779  1A9B  1903               	btfsc	3,2
 22780  1A9C  0008               	return
 22781  1A9D  0871               	movf	memset@c,w
 22782  1A9E  00F5               	movwf	??_memset
 22783  1A9F  0876               	movf	memset@p,w
 22784  1AA0  0086               	movwf	6
 22785  1AA1  3001               	movlw	1	; select bank2/3
 22786  1AA2  0087               	movwf	7
 22787  1AA3  0875               	movf	??_memset,w
 22788  1AA4  0081               	movwf	1
 22789  1AA5  3001               	movlw	1
 22790  1AA6  00F5               	movwf	??_memset
 22791  1AA7  0875               	movf	??_memset,w
 22792  1AA8  07F6               	addwf	memset@p,f
 22793  1AA9  2A94               	goto	l6250
 22794  1AAA                     __end_of_memset:	
 22795                           ;	Return value of _memset is never used
 22796                           
 22797                           
 22798                           	psect	text68
 22799  19D7                     __ptext68:	
 22800 ;; *************** function _displayL1_Update *****************
 22801 ;; Defined at:
 22802 ;;		line 97 in file "nullifyBadge_displayL1.c"
 22803 ;; Parameters:    Size  Location     Type
 22804 ;;  display         1    wreg     PTR struct t_nullifyDisp
 22805 ;;		 -> badge_inst(18), 
 22806 ;; Auto vars:     Size  Location     Type
 22807 ;;  display         1   10[BANK0 ] PTR struct t_nullifyDisp
 22808 ;;		 -> badge_inst(18), 
 22809 ;;  tmpRxBuf       10    0[BANK0 ] unsigned char [10]
 22810 ;; Return value:  Size  Location     Type
 22811 ;;                  1    wreg      void 
 22812 ;; Registers used:
 22813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22814 ;; Tracked objects:
 22815 ;;		On entry : 0/0
 22816 ;;		On exit  : 0/0
 22817 ;;		Unchanged: 0/0
 22818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22820 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22822 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22823 ;;Total ram usage:       13 bytes
 22824 ;; Hardware stack levels used:    1
 22825 ;; Hardware stack levels required when called:    6
 22826 ;; This function calls:
 22827 ;;		_SPI1_Exchange8bitBuffer
 22828 ;; This function is called by:
 22829 ;;		_displayL1_Initialize
 22830 ;;		_displayL2_ForceUpdate
 22831 ;;		_displayL2_EraseSegDisplay
 22832 ;;		_displayL2_SetUserLeds
 22833 ;;		_displayL2_ClrUserLeds
 22834 ;;		_displayL2_PrintChar
 22835 ;;		_displayL2_PrintStr
 22836 ;; This function uses a non-reentrant model
 22837 ;;
 22838                           
 22839                           
 22840                           ;psect for function _displayL1_Update
 22841  19D7                     _displayL1_Update:	
 22842                           
 22843                           ;incstack = 0
 22844                           ; Regs used in _displayL1_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22845                           ;displayL1_Update@display stored from wreg
 22846  19D7  0020               	movlb	0	; select bank0
 22847  19D8  00AA               	movwf	displayL1_Update@display
 22848                           
 22849                           ;nullifyBadge_displayL1.c: 98: u8 tmpRxBuf[10];
 22850                           ;nullifyBadge_displayL1.c: 100: SPI1_Exchange8bitBuffer(display->displayVect, 10, tmpRxB
      +                          uf);
 22851  19D9  300A               	movlw	10
 22852  19DA  00F9               	movwf	??_displayL1_Update
 22853  19DB  0879               	movf	??_displayL1_Update,w
 22854  19DC  00F2               	movwf	SPI1_Exchange8bitBuffer@bufLen
 22855  19DD  3020               	movlw	(low (displayL1_Update@tmpRxBuf| 0))& (0+255)
 22856  19DE  00FA               	movwf	??_displayL1_Update+1
 22857  19DF  087A               	movf	??_displayL1_Update+1,w
 22858  19E0  00F3               	movwf	SPI1_Exchange8bitBuffer@dataOut
 22859  19E1  082A               	movf	displayL1_Update@display,w
 22860  19E2  3190  203E         	fcall	_SPI1_Exchange8bitBuffer
 22861                           
 22862                           ;nullifyBadge_displayL1.c: 101: do { LATCbits.LATC7 = 1; } while(0);
 22863  19E4  0022               	movlb	2	; select bank2
 22864  19E5  178E               	bsf	14,7	;volatile
 22865                           
 22866                           ;nullifyBadge_displayL1.c: 102: do { LATCbits.LATC7 = 0; } while(0);
 22867  19E6  138E               	bcf	14,7	;volatile
 22868  19E7  0008               	return
 22869  19E8                     __end_of_displayL1_Update:	
 22870                           
 22871                           	psect	text69
 22872  103E                     __ptext69:	
 22873 ;; *************** function _SPI1_Exchange8bitBuffer *****************
 22874 ;; Defined at:
 22875 ;;		line 91 in file "mcc_generated_files/spi1.c"
 22876 ;; Parameters:    Size  Location     Type
 22877 ;;  dataIn          1    wreg     PTR unsigned char 
 22878 ;;		 -> badge_inst(18), 
 22879 ;;  bufLen          1    2[COMMON] unsigned char 
 22880 ;;  dataOut         1    3[COMMON] PTR unsigned char 
 22881 ;;		 -> displayL1_Update@tmpRxBuf(10), 
 22882 ;; Auto vars:     Size  Location     Type
 22883 ;;  dataIn          1    7[COMMON] PTR unsigned char 
 22884 ;;		 -> badge_inst(18), 
 22885 ;;  bytesWritten    1    8[COMMON] unsigned char 
 22886 ;; Return value:  Size  Location     Type
 22887 ;;                  1    wreg      unsigned char 
 22888 ;; Registers used:
 22889 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22890 ;; Tracked objects:
 22891 ;;		On entry : 0/0
 22892 ;;		On exit  : 0/0
 22893 ;;		Unchanged: 0/0
 22894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22896 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22897 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22898 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22899 ;;Total ram usage:        7 bytes
 22900 ;; Hardware stack levels used:    1
 22901 ;; Hardware stack levels required when called:    5
 22902 ;; This function calls:
 22903 ;;		_SPI1_Exchange8bit
 22904 ;; This function is called by:
 22905 ;;		_displayL1_Update
 22906 ;; This function uses a non-reentrant model
 22907 ;;
 22908                           
 22909                           
 22910                           ;psect for function _SPI1_Exchange8bitBuffer
 22911  103E                     _SPI1_Exchange8bitBuffer:	
 22912                           
 22913                           ;incstack = 0
 22914                           ; Regs used in _SPI1_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 22915                           ;SPI1_Exchange8bitBuffer@dataIn stored from wreg
 22916  103E  00F7               	movwf	SPI1_Exchange8bitBuffer@dataIn
 22917                           
 22918                           ;spi1.c: 93: uint8_t bytesWritten = 0;
 22919  103F  01F8               	clrf	SPI1_Exchange8bitBuffer@bytesWritten
 22920                           
 22921                           ;spi1.c: 95: if(bufLen != 0)
 22922  1040  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 22923  1041  1903               	btfsc	3,2
 22924  1042  0008               	return
 22925                           
 22926                           ;spi1.c: 96: {
 22927                           ;spi1.c: 97: if(dataIn != (0))
 22928  1043  0877               	movf	SPI1_Exchange8bitBuffer@dataIn,w
 22929  1044  1D03               	btfss	3,2
 22930  1045  286E               	goto	l5948
 22931  1046  2873               	goto	l5950
 22932  1047                     l5940:	
 22933                           ;spi1.c: 98: {
 22934                           ;spi1.c: 99: while(bytesWritten < bufLen)
 22935                           
 22936                           
 22937                           ;spi1.c: 100: {
 22938                           ;spi1.c: 101: if(dataOut == (0))
 22939  1047  0873               	movf	SPI1_Exchange8bitBuffer@dataOut,w
 22940  1048  1D03               	btfss	3,2
 22941  1049  2856               	goto	l5944
 22942                           
 22943                           ;spi1.c: 102: {
 22944                           ;spi1.c: 103: SPI1_Exchange8bit(dataIn[bytesWritten]);
 22945  104A  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 22946  104B  0777               	addwf	SPI1_Exchange8bitBuffer@dataIn,w
 22947  104C  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 22948  104D  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 22949  104E  0086               	movwf	6
 22950  104F  3001               	movlw	1	; select bank2/3
 22951  1050  0087               	movwf	7
 22952  1051  0801               	movf	1,w
 22953  1052  3198  20B2  3190   	fcall	_SPI1_Exchange8bit
 22954                           
 22955                           ;spi1.c: 104: }
 22956  1055  286A               	goto	l5946
 22957  1056                     l5944:	
 22958                           
 22959                           ;spi1.c: 105: else
 22960                           ;spi1.c: 106: {
 22961                           ;spi1.c: 107: dataOut[bytesWritten] = SPI1_Exchange8bit(dataIn[bytesWritten]);
 22962  1056  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 22963  1057  0777               	addwf	SPI1_Exchange8bitBuffer@dataIn,w
 22964  1058  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 22965  1059  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 22966  105A  0086               	movwf	6
 22967  105B  3001               	movlw	1	; select bank2/3
 22968  105C  0087               	movwf	7
 22969  105D  0801               	movf	1,w
 22970  105E  3198  20B2  3190   	fcall	_SPI1_Exchange8bit
 22971  1061  00F5               	movwf	??_SPI1_Exchange8bitBuffer+1
 22972  1062  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 22973  1063  0773               	addwf	SPI1_Exchange8bitBuffer@dataOut,w
 22974  1064  00F6               	movwf	??_SPI1_Exchange8bitBuffer+2
 22975  1065  0876               	movf	??_SPI1_Exchange8bitBuffer+2,w
 22976  1066  0086               	movwf	6
 22977  1067  0187               	clrf	7
 22978  1068  0875               	movf	??_SPI1_Exchange8bitBuffer+1,w
 22979  1069  0081               	movwf	1
 22980  106A                     l5946:	
 22981                           
 22982                           ;spi1.c: 108: }
 22983                           ;spi1.c: 110: bytesWritten++;
 22984  106A  3001               	movlw	1
 22985  106B  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 22986  106C  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 22987  106D  07F8               	addwf	SPI1_Exchange8bitBuffer@bytesWritten,f
 22988  106E                     l5948:	
 22989  106E  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 22990  106F  0278               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w
 22991  1070  1803               	btfsc	3,0
 22992  1071  0008               	return
 22993  1072  2847               	goto	l5940
 22994  1073                     l5950:	
 22995                           ;spi1.c: 111: }
 22996                           ;spi1.c: 112: }
 22997                           
 22998                           
 22999                           ;spi1.c: 113: else
 23000                           ;spi1.c: 114: {
 23001                           ;spi1.c: 115: if(dataOut != (0))
 23002  1073  0873               	movf	SPI1_Exchange8bitBuffer@dataOut,w
 23003  1074  1903               	btfsc	3,2
 23004  1075  0008               	return
 23005  1076                     l5958:	
 23006  1076  0872               	movf	SPI1_Exchange8bitBuffer@bufLen,w
 23007  1077  0278               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w
 23008  1078  1803               	btfsc	3,0
 23009  1079  0008               	return
 23010                           
 23011                           ;spi1.c: 118: {
 23012                           ;spi1.c: 119: dataOut[bytesWritten] = SPI1_Exchange8bit(0x0);
 23013                           
 23014                           ;spi1.c: 116: {
 23015                           ;spi1.c: 117: while(bytesWritten < bufLen )
 23016  107A  3000               	movlw	0
 23017  107B  3198  20B2  3190   	fcall	_SPI1_Exchange8bit
 23018  107E  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 23019  107F  0878               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w
 23020  1080  0773               	addwf	SPI1_Exchange8bitBuffer@dataOut,w
 23021  1081  00F5               	movwf	??_SPI1_Exchange8bitBuffer+1
 23022  1082  0875               	movf	??_SPI1_Exchange8bitBuffer+1,w
 23023  1083  0086               	movwf	6
 23024  1084  0187               	clrf	7
 23025  1085  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 23026  1086  0081               	movwf	1
 23027                           
 23028                           ;spi1.c: 121: bytesWritten++;
 23029  1087  3001               	movlw	1
 23030  1088  00F4               	movwf	??_SPI1_Exchange8bitBuffer
 23031  1089  0874               	movf	??_SPI1_Exchange8bitBuffer,w
 23032  108A  07F8               	addwf	SPI1_Exchange8bitBuffer@bytesWritten,f
 23033  108B  2876               	goto	l5958
 23034  108C                     __end_of_SPI1_Exchange8bitBuffer:	
 23035                           ;spi1.c: 122: }
 23036                           ;spi1.c: 123: }
 23037                           ;spi1.c: 124: }
 23038                           ;spi1.c: 125: }
 23039                           ;spi1.c: 127: return bytesWritten;
 23040                           ;	Return value of _SPI1_Exchange8bitBuffer is never used
 23041                           
 23042                           
 23043                           	psect	text70
 23044  18B2                     __ptext70:	
 23045 ;; *************** function _SPI1_Exchange8bit *****************
 23046 ;; Defined at:
 23047 ;;		line 77 in file "mcc_generated_files/spi1.c"
 23048 ;; Parameters:    Size  Location     Type
 23049 ;;  data            1    wreg     unsigned char 
 23050 ;; Auto vars:     Size  Location     Type
 23051 ;;  data            1    1[COMMON] unsigned char 
 23052 ;; Return value:  Size  Location     Type
 23053 ;;                  1    wreg      unsigned char 
 23054 ;; Registers used:
 23055 ;;		wreg
 23056 ;; Tracked objects:
 23057 ;;		On entry : 0/0
 23058 ;;		On exit  : 0/0
 23059 ;;		Unchanged: 0/0
 23060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23065 ;;Total ram usage:        1 bytes
 23066 ;; Hardware stack levels used:    1
 23067 ;; Hardware stack levels required when called:    4
 23068 ;; This function calls:
 23069 ;;		Nothing
 23070 ;; This function is called by:
 23071 ;;		_SPI1_Exchange8bitBuffer
 23072 ;; This function uses a non-reentrant model
 23073 ;;
 23074                           
 23075                           
 23076                           ;psect for function _SPI1_Exchange8bit
 23077  18B2                     _SPI1_Exchange8bit:	
 23078                           
 23079                           ;incstack = 0
 23080                           ; Regs used in _SPI1_Exchange8bit: [wreg]
 23081                           ;SPI1_Exchange8bit@data stored from wreg
 23082  18B2  00F1               	movwf	SPI1_Exchange8bit@data
 23083                           
 23084                           ;spi1.c: 80: SSP1CON1bits.WCOL = 0;
 23085  18B3  0024               	movlb	4	; select bank4
 23086  18B4  1395               	bcf	21,7	;volatile
 23087                           
 23088                           ;spi1.c: 82: SSP1BUF = data;
 23089  18B5  0871               	movf	SPI1_Exchange8bit@data,w
 23090  18B6  0091               	movwf	17	;volatile
 23091  18B7                     l18:	
 23092                           ;spi1.c: 85: {
 23093                           
 23094                           ;spi1.c: 84: while(SSP1STATbits.BF == 0x0)
 23095                           
 23096  18B7  1C14               	btfss	20,0	;volatile
 23097  18B8  28B7               	goto	l18
 23098                           
 23099                           ;spi1.c: 86: }
 23100                           ;spi1.c: 88: return (SSP1BUF);
 23101  18B9  0811               	movf	17,w	;volatile
 23102  18BA  0008               	return
 23103  18BB                     __end_of_SPI1_Exchange8bit:	
 23104                           
 23105                           	psect	text71
 23106  1BCC                     __ptext71:	
 23107 ;; *************** function _SYSTEM_Initialize *****************
 23108 ;; Defined at:
 23109 ;;		line 76 in file "mcc_generated_files/mcc.c"
 23110 ;; Parameters:    Size  Location     Type
 23111 ;;		None
 23112 ;; Auto vars:     Size  Location     Type
 23113 ;;		None
 23114 ;; Return value:  Size  Location     Type
 23115 ;;                  1    wreg      void 
 23116 ;; Registers used:
 23117 ;;		wreg, status,2, status,0, pclath, cstack
 23118 ;; Tracked objects:
 23119 ;;		On entry : 0/0
 23120 ;;		On exit  : 0/0
 23121 ;;		Unchanged: 0/0
 23122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23127 ;;Total ram usage:        0 bytes
 23128 ;; Hardware stack levels used:    1
 23129 ;; Hardware stack levels required when called:    6
 23130 ;; This function calls:
 23131 ;;		_OSCILLATOR_Initialize
 23132 ;;		_PIN_MANAGER_Initialize
 23133 ;;		_PWM1_Initialize
 23134 ;;		_PWM2_Initialize
 23135 ;;		_PWM5_Initialize
 23136 ;;		_PWM6_Initialize
 23137 ;;		_SPI1_Initialize
 23138 ;;		_TMR0_Initialize
 23139 ;;		_TMR2_Initialize
 23140 ;;		_TMR4_Initialize
 23141 ;;		_WDT_Initialize
 23142 ;; This function is called by:
 23143 ;;		_nullifyBadge_platformInit
 23144 ;; This function uses a non-reentrant model
 23145 ;;
 23146                           
 23147                           
 23148                           ;psect for function _SYSTEM_Initialize
 23149  1BCC                     _SYSTEM_Initialize:	
 23150                           
 23151                           ;mcc.c: 79: PIN_MANAGER_Initialize();
 23152                           
 23153                           ;incstack = 0
 23154                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23155  1BCC  3190  20DE  319B   	fcall	_PIN_MANAGER_Initialize
 23156                           
 23157                           ;mcc.c: 80: OSCILLATOR_Initialize();
 23158  1BCF  3198  20C4  319B   	fcall	_OSCILLATOR_Initialize
 23159                           
 23160                           ;mcc.c: 81: WDT_Initialize();
 23161  1BD2  3198  207B  319B   	fcall	_WDT_Initialize
 23162                           
 23163                           ;mcc.c: 82: SPI1_Initialize();
 23164  1BD5  3198  20A2  319B   	fcall	_SPI1_Initialize
 23165                           
 23166                           ;mcc.c: 83: PWM6_Initialize();
 23167  1BD8  3199  212F  319B   	fcall	_PWM6_Initialize
 23168                           
 23169                           ;mcc.c: 84: PWM1_Initialize();
 23170  1BDB  3198  20F7  319B   	fcall	_PWM1_Initialize
 23171                           
 23172                           ;mcc.c: 85: PWM2_Initialize();
 23173  1BDE  3199  2102  319B   	fcall	_PWM2_Initialize
 23174                           
 23175                           ;mcc.c: 86: TMR4_Initialize();
 23176  1BE1  3199  210D  319B   	fcall	_TMR4_Initialize
 23177                           
 23178                           ;mcc.c: 87: TMR2_Initialize();
 23179  1BE4  3198  20CE  319B   	fcall	_TMR2_Initialize
 23180                           
 23181                           ;mcc.c: 88: PWM5_Initialize();
 23182  1BE7  3199  2123  319B   	fcall	_PWM5_Initialize
 23183                           
 23184                           ;mcc.c: 89: TMR0_Initialize();
 23185  1BEA  319B  2352         	fcall	_TMR0_Initialize
 23186  1BEC  0008               	return
 23187  1BED                     __end_of_SYSTEM_Initialize:	
 23188                           
 23189                           	psect	text72
 23190  187B                     __ptext72:	
 23191 ;; *************** function _WDT_Initialize *****************
 23192 ;; Defined at:
 23193 ;;		line 110 in file "mcc_generated_files/mcc.c"
 23194 ;; Parameters:    Size  Location     Type
 23195 ;;		None
 23196 ;; Auto vars:     Size  Location     Type
 23197 ;;		None
 23198 ;; Return value:  Size  Location     Type
 23199 ;;                  1    wreg      void 
 23200 ;; Registers used:
 23201 ;;		wreg
 23202 ;; Tracked objects:
 23203 ;;		On entry : 0/0
 23204 ;;		On exit  : 0/0
 23205 ;;		Unchanged: 0/0
 23206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23211 ;;Total ram usage:        0 bytes
 23212 ;; Hardware stack levels used:    1
 23213 ;; Hardware stack levels required when called:    4
 23214 ;; This function calls:
 23215 ;;		Nothing
 23216 ;; This function is called by:
 23217 ;;		_SYSTEM_Initialize
 23218 ;; This function uses a non-reentrant model
 23219 ;;
 23220                           
 23221                           
 23222                           ;psect for function _WDT_Initialize
 23223  187B                     _WDT_Initialize:	
 23224                           
 23225                           ;mcc.c: 113: WDTCON = 0x16;
 23226                           
 23227                           ;incstack = 0
 23228                           ; Regs used in _WDT_Initialize: [wreg]
 23229  187B  3016               	movlw	22
 23230  187C  0021               	movlb	1	; select bank1
 23231  187D  0097               	movwf	23	;volatile
 23232  187E  0008               	return
 23233  187F                     __end_of_WDT_Initialize:	
 23234                           
 23235                           	psect	text73
 23236  190D                     __ptext73:	
 23237 ;; *************** function _TMR4_Initialize *****************
 23238 ;; Defined at:
 23239 ;;		line 63 in file "mcc_generated_files/tmr4.c"
 23240 ;; Parameters:    Size  Location     Type
 23241 ;;		None
 23242 ;; Auto vars:     Size  Location     Type
 23243 ;;		None
 23244 ;; Return value:  Size  Location     Type
 23245 ;;                  1    wreg      void 
 23246 ;; Registers used:
 23247 ;;		wreg, status,2, status,0, pclath, cstack
 23248 ;; Tracked objects:
 23249 ;;		On entry : 0/0
 23250 ;;		On exit  : 0/0
 23251 ;;		Unchanged: 0/0
 23252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23257 ;;Total ram usage:        0 bytes
 23258 ;; Hardware stack levels used:    1
 23259 ;; Hardware stack levels required when called:    5
 23260 ;; This function calls:
 23261 ;;		_TMR4_StartTimer
 23262 ;; This function is called by:
 23263 ;;		_SYSTEM_Initialize
 23264 ;;		_nullifyBadge_platformInit
 23265 ;; This function uses a non-reentrant model
 23266 ;;
 23267                           
 23268                           
 23269                           ;psect for function _TMR4_Initialize
 23270  190D                     _TMR4_Initialize:	
 23271                           
 23272                           ;tmr4.c: 68: T4CON = 0x7B;
 23273                           
 23274                           ;incstack = 0
 23275                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23276  190D  307B               	movlw	123
 23277  190E  0028               	movlb	8	; select bank8
 23278  190F  0097               	movwf	23	;volatile
 23279                           
 23280                           ;tmr4.c: 71: PR4 = 0xFF;
 23281  1910  30FF               	movlw	255
 23282  1911  0096               	movwf	22	;volatile
 23283                           
 23284                           ;tmr4.c: 74: TMR4 = 0x00;
 23285  1912  0195               	clrf	21	;volatile
 23286                           
 23287                           ;tmr4.c: 77: PIR2bits.TMR4IF = 0;
 23288  1913  0020               	movlb	0	; select bank0
 23289  1914  1092               	bcf	18,1	;volatile
 23290                           
 23291                           ;tmr4.c: 80: TMR4_StartTimer();
 23292  1915  3198  2075         	fcall	_TMR4_StartTimer
 23293  1917  0008               	return
 23294  1918                     __end_of_TMR4_Initialize:	
 23295                           
 23296                           	psect	text74
 23297  1875                     __ptext74:	
 23298 ;; *************** function _TMR4_StartTimer *****************
 23299 ;; Defined at:
 23300 ;;		line 83 in file "mcc_generated_files/tmr4.c"
 23301 ;; Parameters:    Size  Location     Type
 23302 ;;		None
 23303 ;; Auto vars:     Size  Location     Type
 23304 ;;		None
 23305 ;; Return value:  Size  Location     Type
 23306 ;;                  1    wreg      void 
 23307 ;; Registers used:
 23308 ;;		None
 23309 ;; Tracked objects:
 23310 ;;		On entry : 0/0
 23311 ;;		On exit  : 0/0
 23312 ;;		Unchanged: 0/0
 23313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23318 ;;Total ram usage:        0 bytes
 23319 ;; Hardware stack levels used:    1
 23320 ;; Hardware stack levels required when called:    4
 23321 ;; This function calls:
 23322 ;;		Nothing
 23323 ;; This function is called by:
 23324 ;;		_TMR4_Initialize
 23325 ;; This function uses a non-reentrant model
 23326 ;;
 23327                           
 23328                           
 23329                           ;psect for function _TMR4_StartTimer
 23330  1875                     _TMR4_StartTimer:	
 23331                           
 23332                           ;tmr4.c: 86: T4CONbits.TMR4ON = 1;
 23333                           
 23334                           ;incstack = 0
 23335                           ; Regs used in _TMR4_StartTimer: []
 23336  1875  0028               	movlb	8	; select bank8
 23337  1876  1517               	bsf	23,2	;volatile
 23338  1877  0008               	return
 23339  1878                     __end_of_TMR4_StartTimer:	
 23340                           
 23341                           	psect	text75
 23342  18CE                     __ptext75:	
 23343 ;; *************** function _TMR2_Initialize *****************
 23344 ;; Defined at:
 23345 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 23346 ;; Parameters:    Size  Location     Type
 23347 ;;		None
 23348 ;; Auto vars:     Size  Location     Type
 23349 ;;		None
 23350 ;; Return value:  Size  Location     Type
 23351 ;;                  1    wreg      void 
 23352 ;; Registers used:
 23353 ;;		wreg, status,2, status,0, pclath, cstack
 23354 ;; Tracked objects:
 23355 ;;		On entry : 0/0
 23356 ;;		On exit  : 0/0
 23357 ;;		Unchanged: 0/0
 23358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23363 ;;Total ram usage:        0 bytes
 23364 ;; Hardware stack levels used:    1
 23365 ;; Hardware stack levels required when called:    5
 23366 ;; This function calls:
 23367 ;;		_TMR2_StartTimer
 23368 ;; This function is called by:
 23369 ;;		_SYSTEM_Initialize
 23370 ;;		_nullifyBadge_platformInit
 23371 ;; This function uses a non-reentrant model
 23372 ;;
 23373                           
 23374                           
 23375                           ;psect for function _TMR2_Initialize
 23376  18CE                     _TMR2_Initialize:	
 23377                           
 23378                           ;tmr2.c: 68: T2CON = 0x01;
 23379                           
 23380                           ;incstack = 0
 23381                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23382  18CE  3001               	movlw	1
 23383  18CF  0020               	movlb	0	; select bank0
 23384  18D0  009F               	movwf	31	;volatile
 23385                           
 23386                           ;tmr2.c: 71: PR2 = 0x4A;
 23387  18D1  304A               	movlw	74
 23388  18D2  009E               	movwf	30	;volatile
 23389                           
 23390                           ;tmr2.c: 74: TMR2 = 0x00;
 23391  18D3  019D               	clrf	29	;volatile
 23392                           
 23393                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 23394  18D4  1091               	bcf	17,1	;volatile
 23395                           
 23396                           ;tmr2.c: 80: TMR2_StartTimer();
 23397  18D5  3198  2072         	fcall	_TMR2_StartTimer
 23398  18D7  0008               	return
 23399  18D8                     __end_of_TMR2_Initialize:	
 23400                           
 23401                           	psect	text76
 23402  1872                     __ptext76:	
 23403 ;; *************** function _TMR2_StartTimer *****************
 23404 ;; Defined at:
 23405 ;;		line 83 in file "mcc_generated_files/tmr2.c"
 23406 ;; Parameters:    Size  Location     Type
 23407 ;;		None
 23408 ;; Auto vars:     Size  Location     Type
 23409 ;;		None
 23410 ;; Return value:  Size  Location     Type
 23411 ;;                  1    wreg      void 
 23412 ;; Registers used:
 23413 ;;		None
 23414 ;; Tracked objects:
 23415 ;;		On entry : 0/0
 23416 ;;		On exit  : 0/0
 23417 ;;		Unchanged: 0/0
 23418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23423 ;;Total ram usage:        0 bytes
 23424 ;; Hardware stack levels used:    1
 23425 ;; Hardware stack levels required when called:    4
 23426 ;; This function calls:
 23427 ;;		Nothing
 23428 ;; This function is called by:
 23429 ;;		_TMR2_Initialize
 23430 ;; This function uses a non-reentrant model
 23431 ;;
 23432                           
 23433                           
 23434                           ;psect for function _TMR2_StartTimer
 23435  1872                     _TMR2_StartTimer:	
 23436                           
 23437                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
 23438                           
 23439                           ;incstack = 0
 23440                           ; Regs used in _TMR2_StartTimer: []
 23441  1872  0020               	movlb	0	; select bank0
 23442  1873  151F               	bsf	31,2	;volatile
 23443  1874  0008               	return
 23444  1875                     __end_of_TMR2_StartTimer:	
 23445                           
 23446                           	psect	text77
 23447  1B52                     __ptext77:	
 23448 ;; *************** function _TMR0_Initialize *****************
 23449 ;; Defined at:
 23450 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 23451 ;; Parameters:    Size  Location     Type
 23452 ;;		None
 23453 ;; Auto vars:     Size  Location     Type
 23454 ;;		None
 23455 ;; Return value:  Size  Location     Type
 23456 ;;                  1    wreg      void 
 23457 ;; Registers used:
 23458 ;;		wreg, status,2, status,0, pclath, cstack
 23459 ;; Tracked objects:
 23460 ;;		On entry : 0/0
 23461 ;;		On exit  : 0/0
 23462 ;;		Unchanged: 0/0
 23463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23468 ;;Total ram usage:        0 bytes
 23469 ;; Hardware stack levels used:    1
 23470 ;; Hardware stack levels required when called:    5
 23471 ;; This function calls:
 23472 ;;		_TMR0_SetInterruptHandler
 23473 ;;		_TMR0_StartTimer
 23474 ;; This function is called by:
 23475 ;;		_SYSTEM_Initialize
 23476 ;;		_nullifyBadge_platformInit
 23477 ;; This function uses a non-reentrant model
 23478 ;;
 23479                           
 23480                           
 23481                           ;psect for function _TMR0_Initialize
 23482  1B52                     _TMR0_Initialize:	
 23483                           
 23484                           ;tmr0.c: 70: T0CON0 = 0x10;
 23485                           
 23486                           ;incstack = 0
 23487                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23488  1B52  3010               	movlw	16
 23489  1B53  0020               	movlb	0	; select bank0
 23490  1B54  0097               	movwf	23	;volatile
 23491                           
 23492                           ;tmr0.c: 73: T0CON1 = 0x4D;
 23493  1B55  304D               	movlw	77
 23494  1B56  0098               	movwf	24	;volatile
 23495                           
 23496                           ;tmr0.c: 76: TMR0H = 0xFF;
 23497  1B57  30FF               	movlw	255
 23498  1B58  0096               	movwf	22	;volatile
 23499                           
 23500                           ;tmr0.c: 79: TMR0L = 0xFF;
 23501  1B59  30FF               	movlw	255
 23502  1B5A  0095               	movwf	21	;volatile
 23503                           
 23504                           ;tmr0.c: 82: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 23505  1B5B  0816               	movf	22,w	;volatile
 23506  1B5C  0021               	movlb	1	; select bank1
 23507  1B5D  00B7               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
 23508  1B5E  0020               	movlb	0	; select bank0
 23509  1B5F  0815               	movf	21,w	;volatile
 23510  1B60  0021               	movlb	1	; select bank1
 23511  1B61  00B6               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
 23512                           
 23513                           ;tmr0.c: 85: PIR0bits.TMR0IF = 0;
 23514  1B62  0020               	movlb	0	; select bank0
 23515  1B63  1290               	bcf	16,5	;volatile
 23516                           
 23517                           ;tmr0.c: 88: PIE0bits.TMR0IE = 1;
 23518  1B64  0021               	movlb	1	; select bank1
 23519  1B65  1690               	bsf	16,5	;volatile
 23520                           
 23521                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 23522  1B66  3003               	movlw	low _TMR0_DefaultInterruptHandler
 23523  1B67  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 23524  1B68  3000               	movlw	high _TMR0_DefaultInterruptHandler
 23525  1B69  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 23526  1B6A  3198  2084  319B   	fcall	_TMR0_SetInterruptHandler
 23527                           
 23528                           ;tmr0.c: 94: TMR0_StartTimer();
 23529  1B6D  3198  206F         	fcall	_TMR0_StartTimer
 23530  1B6F  0008               	return
 23531  1B70                     __end_of_TMR0_Initialize:	
 23532                           
 23533                           	psect	text78
 23534  186F                     __ptext78:	
 23535 ;; *************** function _TMR0_StartTimer *****************
 23536 ;; Defined at:
 23537 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 23538 ;; Parameters:    Size  Location     Type
 23539 ;;		None
 23540 ;; Auto vars:     Size  Location     Type
 23541 ;;		None
 23542 ;; Return value:  Size  Location     Type
 23543 ;;                  1    wreg      void 
 23544 ;; Registers used:
 23545 ;;		None
 23546 ;; Tracked objects:
 23547 ;;		On entry : 0/0
 23548 ;;		On exit  : 0/0
 23549 ;;		Unchanged: 0/0
 23550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23555 ;;Total ram usage:        0 bytes
 23556 ;; Hardware stack levels used:    1
 23557 ;; Hardware stack levels required when called:    4
 23558 ;; This function calls:
 23559 ;;		Nothing
 23560 ;; This function is called by:
 23561 ;;		_TMR0_Initialize
 23562 ;; This function uses a non-reentrant model
 23563 ;;
 23564                           
 23565                           
 23566                           ;psect for function _TMR0_StartTimer
 23567  186F                     _TMR0_StartTimer:	
 23568                           
 23569                           ;tmr0.c: 100: T0CON0bits.T0EN = 1;
 23570                           
 23571                           ;incstack = 0
 23572                           ; Regs used in _TMR0_StartTimer: []
 23573  186F  0020               	movlb	0	; select bank0
 23574  1870  1797               	bsf	23,7	;volatile
 23575  1871  0008               	return
 23576  1872                     __end_of_TMR0_StartTimer:	
 23577                           
 23578                           	psect	text79
 23579  1884                     __ptext79:	
 23580 ;; *************** function _TMR0_SetInterruptHandler *****************
 23581 ;; Defined at:
 23582 ;;		line 161 in file "mcc_generated_files/tmr0.c"
 23583 ;; Parameters:    Size  Location     Type
 23584 ;;  InterruptHan    2    1[COMMON] PTR void 
 23585 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 23586 ;; Auto vars:     Size  Location     Type
 23587 ;;		None
 23588 ;; Return value:  Size  Location     Type
 23589 ;;                  1    wreg      void 
 23590 ;; Registers used:
 23591 ;;		wreg
 23592 ;; Tracked objects:
 23593 ;;		On entry : 0/0
 23594 ;;		On exit  : 0/0
 23595 ;;		Unchanged: 0/0
 23596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23601 ;;Total ram usage:        2 bytes
 23602 ;; Hardware stack levels used:    1
 23603 ;; Hardware stack levels required when called:    4
 23604 ;; This function calls:
 23605 ;;		Nothing
 23606 ;; This function is called by:
 23607 ;;		_TMR0_Initialize
 23608 ;; This function uses a non-reentrant model
 23609 ;;
 23610                           
 23611                           
 23612                           ;psect for function _TMR0_SetInterruptHandler
 23613  1884                     _TMR0_SetInterruptHandler:	
 23614                           
 23615                           ;tmr0.c: 162: TMR0_InterruptHandler = InterruptHandler;
 23616                           
 23617                           ;incstack = 0
 23618                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 23619  1884  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 23620  1885  0021               	movlb	1	; select bank1
 23621  1886  00B5               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 23622  1887  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 23623  1888  00B4               	movwf	_TMR0_InterruptHandler^(0+128)
 23624  1889  0008               	return
 23625  188A                     __end_of_TMR0_SetInterruptHandler:	
 23626                           
 23627                           	psect	text80
 23628  18A2                     __ptext80:	
 23629 ;; *************** function _SPI1_Initialize *****************
 23630 ;; Defined at:
 23631 ;;		line 63 in file "mcc_generated_files/spi1.c"
 23632 ;; Parameters:    Size  Location     Type
 23633 ;;		None
 23634 ;; Auto vars:     Size  Location     Type
 23635 ;;		None
 23636 ;; Return value:  Size  Location     Type
 23637 ;;                  1    wreg      void 
 23638 ;; Registers used:
 23639 ;;		wreg
 23640 ;; Tracked objects:
 23641 ;;		On entry : 0/0
 23642 ;;		On exit  : 0/0
 23643 ;;		Unchanged: 0/0
 23644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23649 ;;Total ram usage:        0 bytes
 23650 ;; Hardware stack levels used:    1
 23651 ;; Hardware stack levels required when called:    4
 23652 ;; This function calls:
 23653 ;;		Nothing
 23654 ;; This function is called by:
 23655 ;;		_SYSTEM_Initialize
 23656 ;;		_nullifyBadge_platformInit
 23657 ;; This function uses a non-reentrant model
 23658 ;;
 23659                           
 23660                           
 23661                           ;psect for function _SPI1_Initialize
 23662  18A2                     _SPI1_Initialize:	
 23663                           
 23664                           ;spi1.c: 68: SSP1STAT = 0x40;
 23665                           
 23666                           ;incstack = 0
 23667                           ; Regs used in _SPI1_Initialize: [wreg]
 23668  18A2  3040               	movlw	64
 23669  18A3  0024               	movlb	4	; select bank4
 23670  18A4  0094               	movwf	20	;volatile
 23671                           
 23672                           ;spi1.c: 71: SSP1CON1 = 0x22;
 23673  18A5  3022               	movlw	34
 23674  18A6  0095               	movwf	21	;volatile
 23675                           
 23676                           ;spi1.c: 74: SSP1ADD = 0x01;
 23677  18A7  3001               	movlw	1
 23678  18A8  0092               	movwf	18	;volatile
 23679  18A9  0008               	return
 23680  18AA                     __end_of_SPI1_Initialize:	
 23681                           
 23682                           	psect	text81
 23683  192F                     __ptext81:	
 23684 ;; *************** function _PWM6_Initialize *****************
 23685 ;; Defined at:
 23686 ;;		line 57 in file "mcc_generated_files/pwm6.c"
 23687 ;; Parameters:    Size  Location     Type
 23688 ;;		None
 23689 ;; Auto vars:     Size  Location     Type
 23690 ;;		None
 23691 ;; Return value:  Size  Location     Type
 23692 ;;                  1    wreg      void 
 23693 ;; Registers used:
 23694 ;;		wreg, status,2, status,0
 23695 ;; Tracked objects:
 23696 ;;		On entry : 0/0
 23697 ;;		On exit  : 0/0
 23698 ;;		Unchanged: 0/0
 23699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23704 ;;Total ram usage:        0 bytes
 23705 ;; Hardware stack levels used:    1
 23706 ;; Hardware stack levels required when called:    4
 23707 ;; This function calls:
 23708 ;;		Nothing
 23709 ;; This function is called by:
 23710 ;;		_SYSTEM_Initialize
 23711 ;;		_nullifyBadge_platformInit
 23712 ;; This function uses a non-reentrant model
 23713 ;;
 23714                           
 23715                           
 23716                           ;psect for function _PWM6_Initialize
 23717  192F                     _PWM6_Initialize:	
 23718                           
 23719                           ;pwm6.c: 61: PWM6CON = 0x90;
 23720                           
 23721                           ;incstack = 0
 23722                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 23723  192F  3090               	movlw	144
 23724  1930  002C               	movlb	12	; select bank12
 23725  1931  009C               	movwf	28	;volatile
 23726                           
 23727                           ;pwm6.c: 64: PWM6DCH = 0x7F;
 23728  1932  307F               	movlw	127
 23729  1933  009B               	movwf	27	;volatile
 23730                           
 23731                           ;pwm6.c: 67: PWM6DCL = 0xC0;
 23732  1934  30C0               	movlw	192
 23733  1935  009A               	movwf	26	;volatile
 23734                           
 23735                           ;pwm6.c: 71: PWMTMRSbits.P6TSEL = 0x2;
 23736  1936  081F               	movf	31,w	;volatile
 23737  1937  39F3               	andlw	-13
 23738  1938  3808               	iorlw	8
 23739  1939  009F               	movwf	31	;volatile
 23740  193A  0008               	return
 23741  193B                     __end_of_PWM6_Initialize:	
 23742                           
 23743                           	psect	text82
 23744  1923                     __ptext82:	
 23745 ;; *************** function _PWM5_Initialize *****************
 23746 ;; Defined at:
 23747 ;;		line 57 in file "mcc_generated_files/pwm5.c"
 23748 ;; Parameters:    Size  Location     Type
 23749 ;;		None
 23750 ;; Auto vars:     Size  Location     Type
 23751 ;;		None
 23752 ;; Return value:  Size  Location     Type
 23753 ;;                  1    wreg      void 
 23754 ;; Registers used:
 23755 ;;		wreg, status,2, status,0
 23756 ;; Tracked objects:
 23757 ;;		On entry : 0/0
 23758 ;;		On exit  : 0/0
 23759 ;;		Unchanged: 0/0
 23760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23765 ;;Total ram usage:        0 bytes
 23766 ;; Hardware stack levels used:    1
 23767 ;; Hardware stack levels required when called:    4
 23768 ;; This function calls:
 23769 ;;		Nothing
 23770 ;; This function is called by:
 23771 ;;		_SYSTEM_Initialize
 23772 ;;		_nullifyBadge_platformInit
 23773 ;; This function uses a non-reentrant model
 23774 ;;
 23775                           
 23776                           
 23777                           ;psect for function _PWM5_Initialize
 23778  1923                     _PWM5_Initialize:	
 23779                           
 23780                           ;pwm5.c: 61: PWM5CON = 0x90;
 23781                           
 23782                           ;incstack = 0
 23783                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 23784  1923  3090               	movlw	144
 23785  1924  002C               	movlb	12	; select bank12
 23786  1925  0099               	movwf	25	;volatile
 23787                           
 23788                           ;pwm5.c: 64: PWM5DCH = 0x7F;
 23789  1926  307F               	movlw	127
 23790  1927  0098               	movwf	24	;volatile
 23791                           
 23792                           ;pwm5.c: 67: PWM5DCL = 0xC0;
 23793  1928  30C0               	movlw	192
 23794  1929  0097               	movwf	23	;volatile
 23795                           
 23796                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 0x2;
 23797  192A  081F               	movf	31,w	;volatile
 23798  192B  39FC               	andlw	-4
 23799  192C  3802               	iorlw	2
 23800  192D  009F               	movwf	31	;volatile
 23801  192E  0008               	return
 23802  192F                     __end_of_PWM5_Initialize:	
 23803                           
 23804                           	psect	text83
 23805  1902                     __ptext83:	
 23806 ;; *************** function _PWM2_Initialize *****************
 23807 ;; Defined at:
 23808 ;;		line 63 in file "mcc_generated_files/pwm2.c"
 23809 ;; Parameters:    Size  Location     Type
 23810 ;;		None
 23811 ;; Auto vars:     Size  Location     Type
 23812 ;;		None
 23813 ;; Return value:  Size  Location     Type
 23814 ;;                  1    wreg      void 
 23815 ;; Registers used:
 23816 ;;		wreg, status,2, status,0
 23817 ;; Tracked objects:
 23818 ;;		On entry : 0/0
 23819 ;;		On exit  : 0/0
 23820 ;;		Unchanged: 0/0
 23821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23826 ;;Total ram usage:        0 bytes
 23827 ;; Hardware stack levels used:    1
 23828 ;; Hardware stack levels required when called:    4
 23829 ;; This function calls:
 23830 ;;		Nothing
 23831 ;; This function is called by:
 23832 ;;		_SYSTEM_Initialize
 23833 ;;		_nullifyBadge_platformInit
 23834 ;; This function uses a non-reentrant model
 23835 ;;
 23836                           
 23837                           
 23838                           ;psect for function _PWM2_Initialize
 23839  1902                     _PWM2_Initialize:	
 23840                           
 23841                           ;pwm2.c: 68: CCP2CON = 0x8F;
 23842                           
 23843                           ;incstack = 0
 23844                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 23845  1902  308F               	movlw	143
 23846  1903  0025               	movlb	5	; select bank5
 23847  1904  0097               	movwf	23	;volatile
 23848                           
 23849                           ;pwm2.c: 71: CCPR2H = 0x00;
 23850  1905  0196               	clrf	22	;volatile
 23851                           
 23852                           ;pwm2.c: 74: CCPR2L = 0xE0;
 23853  1906  30E0               	movlw	224
 23854  1907  0095               	movwf	21	;volatile
 23855                           
 23856                           ;pwm2.c: 77: CCPTMRSbits.C2TSEL = 0x1;
 23857  1908  081F               	movf	31,w	;volatile
 23858  1909  39F3               	andlw	-13
 23859  190A  3804               	iorlw	4
 23860  190B  009F               	movwf	31	;volatile
 23861  190C  0008               	return
 23862  190D                     __end_of_PWM2_Initialize:	
 23863                           
 23864                           	psect	text84
 23865  18F7                     __ptext84:	
 23866 ;; *************** function _PWM1_Initialize *****************
 23867 ;; Defined at:
 23868 ;;		line 63 in file "mcc_generated_files/pwm1.c"
 23869 ;; Parameters:    Size  Location     Type
 23870 ;;		None
 23871 ;; Auto vars:     Size  Location     Type
 23872 ;;		None
 23873 ;; Return value:  Size  Location     Type
 23874 ;;                  1    wreg      void 
 23875 ;; Registers used:
 23876 ;;		wreg, status,2, status,0
 23877 ;; Tracked objects:
 23878 ;;		On entry : 0/0
 23879 ;;		On exit  : 0/0
 23880 ;;		Unchanged: 0/0
 23881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23886 ;;Total ram usage:        0 bytes
 23887 ;; Hardware stack levels used:    1
 23888 ;; Hardware stack levels required when called:    4
 23889 ;; This function calls:
 23890 ;;		Nothing
 23891 ;; This function is called by:
 23892 ;;		_SYSTEM_Initialize
 23893 ;;		_nullifyBadge_platformInit
 23894 ;; This function uses a non-reentrant model
 23895 ;;
 23896                           
 23897                           
 23898                           ;psect for function _PWM1_Initialize
 23899  18F7                     _PWM1_Initialize:	
 23900                           
 23901                           ;pwm1.c: 68: CCP1CON = 0x8F;
 23902                           
 23903                           ;incstack = 0
 23904                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 23905  18F7  308F               	movlw	143
 23906  18F8  0025               	movlb	5	; select bank5
 23907  18F9  0093               	movwf	19	;volatile
 23908                           
 23909                           ;pwm1.c: 71: CCPR1H = 0x00;
 23910  18FA  0192               	clrf	18	;volatile
 23911                           
 23912                           ;pwm1.c: 74: CCPR1L = 0x95;
 23913  18FB  3095               	movlw	149
 23914  18FC  0091               	movwf	17	;volatile
 23915                           
 23916                           ;pwm1.c: 77: CCPTMRSbits.C1TSEL = 0x1;
 23917  18FD  081F               	movf	31,w	;volatile
 23918  18FE  39FC               	andlw	-4
 23919  18FF  3801               	iorlw	1
 23920  1900  009F               	movwf	31	;volatile
 23921  1901  0008               	return
 23922  1902                     __end_of_PWM1_Initialize:	
 23923                           
 23924                           	psect	text85
 23925  10DE                     __ptext85:	
 23926 ;; *************** function _PIN_MANAGER_Initialize *****************
 23927 ;; Defined at:
 23928 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 23929 ;; Parameters:    Size  Location     Type
 23930 ;;		None
 23931 ;; Auto vars:     Size  Location     Type
 23932 ;;  state           1    1[COMMON] unsigned char 
 23933 ;; Return value:  Size  Location     Type
 23934 ;;                  1    wreg      void 
 23935 ;; Registers used:
 23936 ;;		wreg, status,2, status,0
 23937 ;; Tracked objects:
 23938 ;;		On entry : 0/0
 23939 ;;		On exit  : 0/0
 23940 ;;		Unchanged: 0/0
 23941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23946 ;;Total ram usage:        1 bytes
 23947 ;; Hardware stack levels used:    1
 23948 ;; Hardware stack levels required when called:    4
 23949 ;; This function calls:
 23950 ;;		Nothing
 23951 ;; This function is called by:
 23952 ;;		_SYSTEM_Initialize
 23953 ;;		_nullifyBadge_platformInit
 23954 ;; This function uses a non-reentrant model
 23955 ;;
 23956                           
 23957                           
 23958                           ;psect for function _PIN_MANAGER_Initialize
 23959  10DE                     _PIN_MANAGER_Initialize:	
 23960                           
 23961                           ;pin_manager.c: 56: LATA = 0x00;
 23962                           
 23963                           ;incstack = 0
 23964                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 23965  10DE  0022               	movlb	2	; select bank2
 23966  10DF  018C               	clrf	12	;volatile
 23967                           
 23968                           ;pin_manager.c: 57: LATB = 0x80;
 23969  10E0  3080               	movlw	128
 23970  10E1  008D               	movwf	13	;volatile
 23971                           
 23972                           ;pin_manager.c: 58: LATC = 0x1A;
 23973  10E2  301A               	movlw	26
 23974  10E3  008E               	movwf	14	;volatile
 23975                           
 23976                           ;pin_manager.c: 63: TRISA = 0x37;
 23977  10E4  3037               	movlw	55
 23978  10E5  0021               	movlb	1	; select bank1
 23979  10E6  008C               	movwf	12	;volatile
 23980                           
 23981                           ;pin_manager.c: 64: TRISB = 0x30;
 23982  10E7  3030               	movlw	48
 23983  10E8  008D               	movwf	13	;volatile
 23984                           
 23985                           ;pin_manager.c: 65: TRISC = 0x60;
 23986  10E9  3060               	movlw	96
 23987  10EA  008E               	movwf	14	;volatile
 23988                           
 23989                           ;pin_manager.c: 70: ANSELC = 0x40;
 23990  10EB  3040               	movlw	64
 23991  10EC  0023               	movlb	3	; select bank3
 23992  10ED  008E               	movwf	14	;volatile
 23993                           
 23994                           ;pin_manager.c: 71: ANSELB = 0x00;
 23995  10EE  018D               	clrf	13	;volatile
 23996                           
 23997                           ;pin_manager.c: 72: ANSELA = 0x03;
 23998  10EF  3003               	movlw	3
 23999  10F0  008C               	movwf	12	;volatile
 24000                           
 24001                           ;pin_manager.c: 77: WPUB = 0x00;
 24002  10F1  0024               	movlb	4	; select bank4
 24003  10F2  018D               	clrf	13	;volatile
 24004                           
 24005                           ;pin_manager.c: 78: WPUA = 0x00;
 24006  10F3  018C               	clrf	12	;volatile
 24007                           
 24008                           ;pin_manager.c: 79: WPUC = 0x00;
 24009  10F4  018E               	clrf	14	;volatile
 24010                           
 24011                           ;pin_manager.c: 84: ODCONA = 0x00;
 24012  10F5  0025               	movlb	5	; select bank5
 24013  10F6  018C               	clrf	12	;volatile
 24014                           
 24015                           ;pin_manager.c: 85: ODCONB = 0x00;
 24016  10F7  018D               	clrf	13	;volatile
 24017                           
 24018                           ;pin_manager.c: 86: ODCONC = 0x00;
 24019  10F8  018E               	clrf	14	;volatile
 24020                           
 24021                           ;pin_manager.c: 93: bool state = GIE;
 24022  10F9  3000               	movlw	0
 24023  10FA  1B8B               	btfsc	11,7	;volatile
 24024  10FB  3001               	movlw	1
 24025  10FC  00F1               	movwf	PIN_MANAGER_Initialize@state
 24026                           
 24027                           ;pin_manager.c: 94: GIE = 0;
 24028  10FD  138B               	bcf	11,7	;volatile
 24029                           
 24030                           ;pin_manager.c: 95: PPSLOCK = 0x55;
 24031  10FE  3055               	movlw	85
 24032  10FF  003C               	movlb	28	; select bank28
 24033  1100  008F               	movwf	15	;volatile
 24034                           
 24035                           ;pin_manager.c: 96: PPSLOCK = 0xAA;
 24036  1101  30AA               	movlw	170
 24037  1102  008F               	movwf	15	;volatile
 24038                           
 24039                           ;pin_manager.c: 97: PPSLOCKbits.PPSLOCKED = 0x00;
 24040  1103  100F               	bcf	15,0	;volatile
 24041                           
 24042                           ;pin_manager.c: 99: RC1PPSbits.RC1PPS = 0x0D;
 24043  1104  003D               	movlb	29	; select bank29
 24044  1105  0821               	movf	33,w	;volatile
 24045  1106  39E0               	andlw	-32
 24046  1107  380D               	iorlw	13
 24047  1108  00A1               	movwf	33	;volatile
 24048                           
 24049                           ;pin_manager.c: 100: SSP1DATPPSbits.SSP1DATPPS = 0x0C;
 24050  1109  003C               	movlb	28	; select bank28
 24051  110A  0821               	movf	33,w	;volatile
 24052  110B  39E0               	andlw	-32
 24053  110C  380C               	iorlw	12
 24054  110D  00A1               	movwf	33	;volatile
 24055                           
 24056                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 24057  110E  0820               	movf	32,w	;volatile
 24058  110F  39E0               	andlw	-32
 24059  1110  380E               	iorlw	14
 24060  1111  00A0               	movwf	32	;volatile
 24061                           
 24062                           ;pin_manager.c: 102: RC4PPSbits.RC4PPS = 0x02;
 24063  1112  003D               	movlb	29	; select bank29
 24064  1113  0824               	movf	36,w	;volatile
 24065  1114  39E0               	andlw	-32
 24066  1115  3802               	iorlw	2
 24067  1116  00A4               	movwf	36	;volatile
 24068                           
 24069                           ;pin_manager.c: 103: RC0PPSbits.RC0PPS = 0x0C;
 24070  1117  0820               	movf	32,w	;volatile
 24071  1118  39E0               	andlw	-32
 24072  1119  380C               	iorlw	12
 24073  111A  00A0               	movwf	32	;volatile
 24074                           
 24075                           ;pin_manager.c: 104: RC3PPSbits.RC3PPS = 0x03;
 24076  111B  0823               	movf	35,w	;volatile
 24077  111C  39E0               	andlw	-32
 24078  111D  3803               	iorlw	3
 24079  111E  00A3               	movwf	35	;volatile
 24080                           
 24081                           ;pin_manager.c: 105: RB6PPSbits.RB6PPS = 0x18;
 24082  111F  081E               	movf	30,w	;volatile
 24083  1120  39E0               	andlw	-32
 24084  1121  3818               	iorlw	24
 24085  1122  009E               	movwf	30	;volatile
 24086                           
 24087                           ;pin_manager.c: 106: RC2PPSbits.RC2PPS = 0x19;
 24088  1123  0822               	movf	34,w	;volatile
 24089  1124  39E0               	andlw	-32
 24090  1125  3819               	iorlw	25
 24091  1126  00A2               	movwf	34	;volatile
 24092                           
 24093                           ;pin_manager.c: 108: PPSLOCK = 0x55;
 24094  1127  3055               	movlw	85
 24095  1128  003C               	movlb	28	; select bank28
 24096  1129  008F               	movwf	15	;volatile
 24097                           
 24098                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
 24099  112A  30AA               	movlw	170
 24100  112B  008F               	movwf	15	;volatile
 24101                           
 24102                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x01;
 24103  112C  140F               	bsf	15,0	;volatile
 24104                           
 24105                           ;pin_manager.c: 112: GIE = state;
 24106  112D  1C71               	btfss	PIN_MANAGER_Initialize@state,0
 24107  112E  2931               	goto	u3650
 24108  112F  178B               	bsf	11,7	;volatile
 24109  1130  0008               	return
 24110  1131                     u3650:	
 24111  1131  138B               	bcf	11,7	;volatile
 24112  1132  0008               	return
 24113  1133                     __end_of_PIN_MANAGER_Initialize:	
 24114                           
 24115                           	psect	text86
 24116  18C4                     __ptext86:	
 24117 ;; *************** function _OSCILLATOR_Initialize *****************
 24118 ;; Defined at:
 24119 ;;		line 92 in file "mcc_generated_files/mcc.c"
 24120 ;; Parameters:    Size  Location     Type
 24121 ;;		None
 24122 ;; Auto vars:     Size  Location     Type
 24123 ;;		None
 24124 ;; Return value:  Size  Location     Type
 24125 ;;                  1    wreg      void 
 24126 ;; Registers used:
 24127 ;;		wreg, status,2
 24128 ;; Tracked objects:
 24129 ;;		On entry : 0/0
 24130 ;;		On exit  : 0/0
 24131 ;;		Unchanged: 0/0
 24132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24137 ;;Total ram usage:        0 bytes
 24138 ;; Hardware stack levels used:    1
 24139 ;; Hardware stack levels required when called:    4
 24140 ;; This function calls:
 24141 ;;		Nothing
 24142 ;; This function is called by:
 24143 ;;		_SYSTEM_Initialize
 24144 ;;		_nullifyBadge_platformInit
 24145 ;; This function uses a non-reentrant model
 24146 ;;
 24147                           
 24148                           
 24149                           ;psect for function _OSCILLATOR_Initialize
 24150  18C4                     _OSCILLATOR_Initialize:	
 24151                           
 24152                           ;mcc.c: 95: OSCCON1 = 0x00;
 24153                           
 24154                           ;incstack = 0
 24155                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 24156  18C4  0032               	movlb	18	; select bank18
 24157  18C5  0199               	clrf	25	;volatile
 24158                           
 24159                           ;mcc.c: 97: OSCCON3 = 0x00;
 24160  18C6  019B               	clrf	27	;volatile
 24161                           
 24162                           ;mcc.c: 99: OSCEN = 0x00;
 24163  18C7  019D               	clrf	29	;volatile
 24164                           
 24165                           ;mcc.c: 101: OSCFRQ = 0x06;
 24166  18C8  3006               	movlw	6
 24167  18C9  009F               	movwf	31	;volatile
 24168                           
 24169                           ;mcc.c: 103: OSCTUNE = 0x00;
 24170  18CA  019E               	clrf	30	;volatile
 24171  18CB                     l208:	
 24172                           ;mcc.c: 106: {
 24173                           
 24174                           ;mcc.c: 105: while(PLLR == 0)
 24175                           
 24176  18CB  181C               	btfsc	28,0	;volatile
 24177  18CC  0008               	return
 24178  18CD  28CB               	goto	l208
 24179  18CE                     __end_of_OSCILLATOR_Initialize:	
 24180                           
 24181                           	psect	text87
 24182  1A60                     __ptext87:	
 24183 ;; *************** function _PWM6_LoadDutyValue *****************
 24184 ;; Defined at:
 24185 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 24186 ;; Parameters:    Size  Location     Type
 24187 ;;  dutyValue       2    1[COMMON] unsigned int 
 24188 ;; Auto vars:     Size  Location     Type
 24189 ;;		None
 24190 ;; Return value:  Size  Location     Type
 24191 ;;                  1    wreg      void 
 24192 ;; Registers used:
 24193 ;;		wreg, status,2, status,0
 24194 ;; Tracked objects:
 24195 ;;		On entry : 0/0
 24196 ;;		On exit  : 0/0
 24197 ;;		Unchanged: 0/0
 24198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24203 ;;Total ram usage:        4 bytes
 24204 ;; Hardware stack levels used:    1
 24205 ;; Hardware stack levels required when called:    4
 24206 ;; This function calls:
 24207 ;;		Nothing
 24208 ;; This function is called by:
 24209 ;;		_nullifyBadge_platformInit
 24210 ;;		_nullifyBadge_userLedsSetBrightness
 24211 ;; This function uses a non-reentrant model
 24212 ;;
 24213                           
 24214                           
 24215                           ;psect for function _PWM6_LoadDutyValue
 24216  1A60                     _PWM6_LoadDutyValue:	
 24217                           
 24218                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 24219                           
 24220                           ;incstack = 0
 24221                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 24222  1A60  0872               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 24223  1A61  00F4               	movwf	??_PWM6_LoadDutyValue+1
 24224  1A62  0871               	movf	PWM6_LoadDutyValue@dutyValue,w
 24225  1A63  00F3               	movwf	??_PWM6_LoadDutyValue
 24226  1A64  36F4               	lsrf	??_PWM6_LoadDutyValue+1,f
 24227  1A65  0CF3               	rrf	??_PWM6_LoadDutyValue,f
 24228  1A66  36F4               	lsrf	??_PWM6_LoadDutyValue+1,f
 24229  1A67  0CF3               	rrf	??_PWM6_LoadDutyValue,f
 24230  1A68  0873               	movf	??_PWM6_LoadDutyValue,w
 24231  1A69  002C               	movlb	12	; select bank12
 24232  1A6A  009B               	movwf	27	;volatile
 24233                           
 24234                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 24235  1A6B  0871               	movf	PWM6_LoadDutyValue@dutyValue,w
 24236  1A6C  3903               	andlw	3
 24237  1A6D  00F3               	movwf	??_PWM6_LoadDutyValue
 24238  1A6E  3005               	movlw	5
 24239  1A6F                     u4155:	
 24240  1A6F  35F3               	lslf	??_PWM6_LoadDutyValue,f
 24241  1A70  3EFF               	addlw	-1
 24242  1A71  1D03               	skipz
 24243  1A72  2A6F               	goto	u4155
 24244  1A73  3573               	lslf	??_PWM6_LoadDutyValue,w
 24245  1A74  009A               	movwf	26	;volatile
 24246  1A75  0008               	return
 24247  1A76                     __end_of_PWM6_LoadDutyValue:	
 24248                           
 24249                           	psect	text88
 24250  1A4A                     __ptext88:	
 24251 ;; *************** function _PWM5_LoadDutyValue *****************
 24252 ;; Defined at:
 24253 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 24254 ;; Parameters:    Size  Location     Type
 24255 ;;  dutyValue       2    1[COMMON] unsigned int 
 24256 ;; Auto vars:     Size  Location     Type
 24257 ;;		None
 24258 ;; Return value:  Size  Location     Type
 24259 ;;                  1    wreg      void 
 24260 ;; Registers used:
 24261 ;;		wreg, status,2, status,0
 24262 ;; Tracked objects:
 24263 ;;		On entry : 0/0
 24264 ;;		On exit  : 0/0
 24265 ;;		Unchanged: 0/0
 24266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24270 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24271 ;;Total ram usage:        4 bytes
 24272 ;; Hardware stack levels used:    1
 24273 ;; Hardware stack levels required when called:    4
 24274 ;; This function calls:
 24275 ;;		Nothing
 24276 ;; This function is called by:
 24277 ;;		_nullifyBadge_platformInit
 24278 ;;		_fadeDisplay_Init
 24279 ;;		_nullifyBadge_segDisplaySetBrightness
 24280 ;; This function uses a non-reentrant model
 24281 ;;
 24282                           
 24283                           
 24284                           ;psect for function _PWM5_LoadDutyValue
 24285  1A4A                     _PWM5_LoadDutyValue:	
 24286                           
 24287                           ;pwm5.c: 77: PWM5DCH = (dutyValue & 0x03FC)>>2;
 24288                           
 24289                           ;incstack = 0
 24290                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 24291  1A4A  0872               	movf	PWM5_LoadDutyValue@dutyValue+1,w
 24292  1A4B  00F4               	movwf	??_PWM5_LoadDutyValue+1
 24293  1A4C  0871               	movf	PWM5_LoadDutyValue@dutyValue,w
 24294  1A4D  00F3               	movwf	??_PWM5_LoadDutyValue
 24295  1A4E  36F4               	lsrf	??_PWM5_LoadDutyValue+1,f
 24296  1A4F  0CF3               	rrf	??_PWM5_LoadDutyValue,f
 24297  1A50  36F4               	lsrf	??_PWM5_LoadDutyValue+1,f
 24298  1A51  0CF3               	rrf	??_PWM5_LoadDutyValue,f
 24299  1A52  0873               	movf	??_PWM5_LoadDutyValue,w
 24300  1A53  002C               	movlb	12	; select bank12
 24301  1A54  0098               	movwf	24	;volatile
 24302                           
 24303                           ;pwm5.c: 80: PWM5DCL = (dutyValue & 0x0003)<<6;
 24304  1A55  0871               	movf	PWM5_LoadDutyValue@dutyValue,w
 24305  1A56  3903               	andlw	3
 24306  1A57  00F3               	movwf	??_PWM5_LoadDutyValue
 24307  1A58  3005               	movlw	5
 24308  1A59                     u4145:	
 24309  1A59  35F3               	lslf	??_PWM5_LoadDutyValue,f
 24310  1A5A  3EFF               	addlw	-1
 24311  1A5B  1D03               	skipz
 24312  1A5C  2A59               	goto	u4145
 24313  1A5D  3573               	lslf	??_PWM5_LoadDutyValue,w
 24314  1A5E  0097               	movwf	23	;volatile
 24315  1A5F  0008               	return
 24316  1A60                     __end_of_PWM5_LoadDutyValue:	
 24317                           
 24318                           	psect	text89
 24319  1A34                     __ptext89:	
 24320 ;; *************** function _PWM2_LoadDutyValue *****************
 24321 ;; Defined at:
 24322 ;;		line 80 in file "mcc_generated_files/pwm2.c"
 24323 ;; Parameters:    Size  Location     Type
 24324 ;;  dutyValue       2    1[COMMON] unsigned int 
 24325 ;; Auto vars:     Size  Location     Type
 24326 ;;		None
 24327 ;; Return value:  Size  Location     Type
 24328 ;;                  1    wreg      void 
 24329 ;; Registers used:
 24330 ;;		wreg, status,2
 24331 ;; Tracked objects:
 24332 ;;		On entry : 0/0
 24333 ;;		On exit  : 0/0
 24334 ;;		Unchanged: 0/0
 24335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24340 ;;Total ram usage:        2 bytes
 24341 ;; Hardware stack levels used:    1
 24342 ;; Hardware stack levels required when called:    4
 24343 ;; This function calls:
 24344 ;;		Nothing
 24345 ;; This function is called by:
 24346 ;;		_nullifyBadge_platformInit
 24347 ;; This function uses a non-reentrant model
 24348 ;;
 24349                           
 24350                           
 24351                           ;psect for function _PWM2_LoadDutyValue
 24352  1A34                     _PWM2_LoadDutyValue:	
 24353                           
 24354                           ;pwm2.c: 82: dutyValue &= 0x03FF;
 24355                           
 24356                           ;incstack = 0
 24357                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 24358  1A34  30FF               	movlw	255
 24359  1A35  05F1               	andwf	PWM2_LoadDutyValue@dutyValue,f
 24360  1A36  3003               	movlw	3
 24361  1A37  05F2               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 24362                           
 24363                           ;pwm2.c: 85: if(CCP2CONbits.CCP2FMT)
 24364  1A38  0025               	movlb	5	; select bank5
 24365  1A39  1E17               	btfss	23,4	;volatile
 24366  1A3A  2A45               	goto	l7284
 24367                           
 24368                           ;pwm2.c: 86: {
 24369                           ;pwm2.c: 87: dutyValue <<= 6;
 24370  1A3B  3006               	movlw	6
 24371  1A3C                     u4195:	
 24372  1A3C  35F1               	lslf	PWM2_LoadDutyValue@dutyValue,f
 24373  1A3D  0DF2               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 24374  1A3E  0B89               	decfsz	9,f
 24375  1A3F  2A3C               	goto	u4195
 24376                           
 24377                           ;pwm2.c: 88: CCPR2H = dutyValue >> 8;
 24378  1A40  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 24379  1A41  0096               	movwf	22	;volatile
 24380                           
 24381                           ;pwm2.c: 89: CCPR2L = dutyValue;
 24382  1A42  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
 24383  1A43  0095               	movwf	21	;volatile
 24384                           
 24385                           ;pwm2.c: 90: }
 24386  1A44  0008               	return
 24387  1A45                     l7284:	
 24388                           
 24389                           ;pwm2.c: 91: else
 24390                           ;pwm2.c: 92: {
 24391                           ;pwm2.c: 93: CCPR2H = dutyValue >> 8;
 24392  1A45  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 24393  1A46  0096               	movwf	22	;volatile
 24394                           
 24395                           ;pwm2.c: 94: CCPR2L = dutyValue;
 24396  1A47  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
 24397  1A48  0095               	movwf	21	;volatile
 24398  1A49  0008               	return
 24399  1A4A                     __end_of_PWM2_LoadDutyValue:	
 24400                           
 24401                           	psect	text90
 24402  1A1E                     __ptext90:	
 24403 ;; *************** function _PWM1_LoadDutyValue *****************
 24404 ;; Defined at:
 24405 ;;		line 80 in file "mcc_generated_files/pwm1.c"
 24406 ;; Parameters:    Size  Location     Type
 24407 ;;  dutyValue       2    1[COMMON] unsigned int 
 24408 ;; Auto vars:     Size  Location     Type
 24409 ;;		None
 24410 ;; Return value:  Size  Location     Type
 24411 ;;                  1    wreg      void 
 24412 ;; Registers used:
 24413 ;;		wreg, status,2
 24414 ;; Tracked objects:
 24415 ;;		On entry : 0/0
 24416 ;;		On exit  : 0/0
 24417 ;;		Unchanged: 0/0
 24418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24423 ;;Total ram usage:        2 bytes
 24424 ;; Hardware stack levels used:    1
 24425 ;; Hardware stack levels required when called:    4
 24426 ;; This function calls:
 24427 ;;		Nothing
 24428 ;; This function is called by:
 24429 ;;		_nullifyBadge_platformInit
 24430 ;; This function uses a non-reentrant model
 24431 ;;
 24432                           
 24433                           
 24434                           ;psect for function _PWM1_LoadDutyValue
 24435  1A1E                     _PWM1_LoadDutyValue:	
 24436                           
 24437                           ;pwm1.c: 82: dutyValue &= 0x03FF;
 24438                           
 24439                           ;incstack = 0
 24440                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 24441  1A1E  30FF               	movlw	255
 24442  1A1F  05F1               	andwf	PWM1_LoadDutyValue@dutyValue,f
 24443  1A20  3003               	movlw	3
 24444  1A21  05F2               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 24445                           
 24446                           ;pwm1.c: 85: if(CCP1CONbits.CCP1FMT)
 24447  1A22  0025               	movlb	5	; select bank5
 24448  1A23  1E13               	btfss	19,4	;volatile
 24449  1A24  2A2F               	goto	l7268
 24450                           
 24451                           ;pwm1.c: 86: {
 24452                           ;pwm1.c: 87: dutyValue <<= 6;
 24453  1A25  3006               	movlw	6
 24454  1A26                     u4175:	
 24455  1A26  35F1               	lslf	PWM1_LoadDutyValue@dutyValue,f
 24456  1A27  0DF2               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 24457  1A28  0B89               	decfsz	9,f
 24458  1A29  2A26               	goto	u4175
 24459                           
 24460                           ;pwm1.c: 88: CCPR1H = dutyValue >> 8;
 24461  1A2A  0872               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 24462  1A2B  0092               	movwf	18	;volatile
 24463                           
 24464                           ;pwm1.c: 89: CCPR1L = dutyValue;
 24465  1A2C  0871               	movf	PWM1_LoadDutyValue@dutyValue,w
 24466  1A2D  0091               	movwf	17	;volatile
 24467                           
 24468                           ;pwm1.c: 90: }
 24469  1A2E  0008               	return
 24470  1A2F                     l7268:	
 24471                           
 24472                           ;pwm1.c: 91: else
 24473                           ;pwm1.c: 92: {
 24474                           ;pwm1.c: 93: CCPR1H = dutyValue >> 8;
 24475  1A2F  0872               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 24476  1A30  0092               	movwf	18	;volatile
 24477                           
 24478                           ;pwm1.c: 94: CCPR1L = dutyValue;
 24479  1A31  0871               	movf	PWM1_LoadDutyValue@dutyValue,w
 24480  1A32  0091               	movwf	17	;volatile
 24481  1A33  0008               	return
 24482  1A34                     __end_of_PWM1_LoadDutyValue:	
 24483                           
 24484                           	psect	intentry
 24485  0004                     __pintentry:	
 24486 ;; *************** function _INTERRUPT_InterruptManager *****************
 24487 ;; Defined at:
 24488 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 24489 ;; Parameters:    Size  Location     Type
 24490 ;;		None
 24491 ;; Auto vars:     Size  Location     Type
 24492 ;;		None
 24493 ;; Return value:  Size  Location     Type
 24494 ;;                  1    wreg      void 
 24495 ;; Registers used:
 24496 ;;		wreg, status,2, status,0, pclath, cstack
 24497 ;; Tracked objects:
 24498 ;;		On entry : 0/0
 24499 ;;		On exit  : 0/0
 24500 ;;		Unchanged: 0/0
 24501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24506 ;;Total ram usage:        1 bytes
 24507 ;; Hardware stack levels used:    1
 24508 ;; Hardware stack levels required when called:    3
 24509 ;; This function calls:
 24510 ;;		_TMR0_ISR
 24511 ;; This function is called by:
 24512 ;;		Interrupt level 1
 24513 ;; This function uses a non-reentrant model
 24514 ;;
 24515                           
 24516  0004                     _INTERRUPT_InterruptManager:	
 24517                           
 24518                           ;incstack = 0
 24519  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 24520                           
 24521                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 24522  0005  3180               	pagesel	$
 24523  0006  0020               	movlb	0	; select bank0
 24524  0007  087F               	movf	127,w
 24525  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
 24526                           
 24527                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 24528  0009  0021               	movlb	1	; select bank1
 24529  000A  1E90               	btfss	16,5	;volatile
 24530  000B  2811               	goto	i1l363
 24531  000C  0020               	movlb	0	; select bank0
 24532  000D  1E90               	btfss	16,5	;volatile
 24533  000E  2811               	goto	i1l363
 24534                           
 24535                           ;interrupt_manager.c: 55: {
 24536                           ;interrupt_manager.c: 56: TMR0_ISR();
 24537  000F  3199  2153         	fcall	_TMR0_ISR
 24538  0011                     i1l363:	
 24539                           ;interrupt_manager.c: 58: else
 24540                           ;interrupt_manager.c: 59: {
 24541                           
 24542                           ;interrupt_manager.c: 57: }
 24543                           
 24544  0011  0870               	movf	??_INTERRUPT_InterruptManager,w
 24545  0012  0020               	movlb	0	; select bank0
 24546  0013  00FF               	movwf	127
 24547  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 24548  0015  0009               	retfie
 24549  0016                     __end_of_INTERRUPT_InterruptManager:	
 24550                           
 24551                           	psect	text92
 24552  1953                     __ptext92:	
 24553 ;; *************** function _TMR0_ISR *****************
 24554 ;; Defined at:
 24555 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 24556 ;; Parameters:    Size  Location     Type
 24557 ;;		None
 24558 ;; Auto vars:     Size  Location     Type
 24559 ;;		None
 24560 ;; Return value:  Size  Location     Type
 24561 ;;                  1    wreg      void 
 24562 ;; Registers used:
 24563 ;;		wreg, status,2, status,0, pclath, cstack
 24564 ;; Tracked objects:
 24565 ;;		On entry : 0/0
 24566 ;;		On exit  : 0/0
 24567 ;;		Unchanged: 0/0
 24568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24573 ;;Total ram usage:        0 bytes
 24574 ;; Hardware stack levels used:    1
 24575 ;; Hardware stack levels required when called:    2
 24576 ;; This function calls:
 24577 ;;		_TMR0_CallBack
 24578 ;; This function is called by:
 24579 ;;		_INTERRUPT_InterruptManager
 24580 ;; This function uses a non-reentrant model
 24581 ;;
 24582                           
 24583                           
 24584                           ;psect for function _TMR0_ISR
 24585  1953                     _TMR0_ISR:	
 24586                           
 24587                           ;tmr0.c: 139: PIR0bits.TMR0IF = 0;
 24588                           
 24589                           ;incstack = 0
 24590                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 24591  1953  0020               	movlb	0	; select bank0
 24592  1954  1290               	bcf	16,5	;volatile
 24593                           
 24594                           ;tmr0.c: 141: TMR0H = timer0ReloadVal16bit >> 8;
 24595  1955  0021               	movlb	1	; select bank1
 24596  1956  0837               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
 24597  1957  0020               	movlb	0	; select bank0
 24598  1958  0096               	movwf	22	;volatile
 24599                           
 24600                           ;tmr0.c: 142: TMR0L = (uint8_t) timer0ReloadVal16bit;
 24601  1959  0021               	movlb	1	; select bank1
 24602  195A  0836               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
 24603  195B  0020               	movlb	0	; select bank0
 24604  195C  0095               	movwf	21	;volatile
 24605                           
 24606                           ;tmr0.c: 146: TMR0_CallBack();
 24607  195D  3198  20EC         	fcall	_TMR0_CallBack
 24608  195F  0008               	return
 24609  1960                     __end_of_TMR0_ISR:	
 24610                           
 24611                           	psect	text93
 24612  18EC                     __ptext93:	
 24613 ;; *************** function _TMR0_CallBack *****************
 24614 ;; Defined at:
 24615 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 24616 ;; Parameters:    Size  Location     Type
 24617 ;;		None
 24618 ;; Auto vars:     Size  Location     Type
 24619 ;;		None
 24620 ;; Return value:  Size  Location     Type
 24621 ;;                  1    wreg      void 
 24622 ;; Registers used:
 24623 ;;		wreg, status,2, status,0, pclath, cstack
 24624 ;; Tracked objects:
 24625 ;;		On entry : 0/0
 24626 ;;		On exit  : 0/0
 24627 ;;		Unchanged: 0/0
 24628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24633 ;;Total ram usage:        0 bytes
 24634 ;; Hardware stack levels used:    1
 24635 ;; Hardware stack levels required when called:    1
 24636 ;; This function calls:
 24637 ;;		Absolute function
 24638 ;;		_TMR0_DefaultInterruptHandler
 24639 ;; This function is called by:
 24640 ;;		_TMR0_ISR
 24641 ;; This function uses a non-reentrant model
 24642 ;;
 24643                           
 24644                           
 24645                           ;psect for function _TMR0_CallBack
 24646  18EC                     _TMR0_CallBack:	
 24647                           
 24648                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
 24649                           
 24650                           ;incstack = 0
 24651                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 24652  18EC  0021               	movlb	1	; select bank1
 24653  18ED  0834               	movf	_TMR0_InterruptHandler^(0+128),w
 24654  18EE  0435               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 24655  18EF  1903               	btfsc	3,2
 24656  18F0  0008               	return
 24657                           
 24658                           ;tmr0.c: 156: {
 24659                           ;tmr0.c: 157: TMR0_InterruptHandler();
 24660  18F1  0835               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 24661  18F2  008A               	movwf	10
 24662  18F3  0834               	movf	_TMR0_InterruptHandler^(0+128),w
 24663  18F4  000A               	callw
 24664  18F5  3198               	pagesel	$
 24665  18F6  0008               	return
 24666  18F7                     __end_of_TMR0_CallBack:	
 24667                           
 24668                           	psect	text94
 24669  0003                     __ptext94:	
 24670 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 24671 ;; Defined at:
 24672 ;;		line 165 in file "mcc_generated_files/tmr0.c"
 24673 ;; Parameters:    Size  Location     Type
 24674 ;;		None
 24675 ;; Auto vars:     Size  Location     Type
 24676 ;;		None
 24677 ;; Return value:  Size  Location     Type
 24678 ;;                  1    wreg      void 
 24679 ;; Registers used:
 24680 ;;		None
 24681 ;; Tracked objects:
 24682 ;;		On entry : 0/0
 24683 ;;		On exit  : 0/0
 24684 ;;		Unchanged: 0/0
 24685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24690 ;;Total ram usage:        0 bytes
 24691 ;; Hardware stack levels used:    1
 24692 ;; This function calls:
 24693 ;;		Nothing
 24694 ;; This function is called by:
 24695 ;;		_TMR0_Initialize
 24696 ;;		_TMR0_CallBack
 24697 ;; This function uses a non-reentrant model
 24698 ;;
 24699                           
 24700                           
 24701                           ;psect for function _TMR0_DefaultInterruptHandler
 24702  0003                     _TMR0_DefaultInterruptHandler:	
 24703                           
 24704                           ;incstack = 0
 24705                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 24706  0003  0008               	return
 24707  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 24708  007E                     btemp	set	126	;btemp
 24709  007E                     int$flags	set	126
 24710  007E                     wtemp0	set	126


Data Sizes:
    Strings     125
    Constant    522
    Data        446
    BSS         230
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80      1      80
    BANK2            80      0      59
    BANK3            80      0      67
    BANK4            80      0      76
    BANK5            80      0      54
    BANK6            80      0      56
    BANK7            80      0      28
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           16      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    menu_run_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    schedulerInst.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    schedulerInst.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    schedulerInst.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    schedulerInst.tasks.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    schedulerExecute$3505	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    secret_check@data	PTR struct t_secret_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    S902$3$0	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    S902$2$0	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    S902$4$0	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_20(CODE[5]), secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), STR_19(CODE[5]), 
		 -> STR_18(CODE[5]), STR_17(CODE[11]), STR_16(CODE[13]), STR_13(CODE[6]), 
		 -> STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), STR_9(CODE[18]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_20(CODE[5]), secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), STR_19(CODE[5]), 
		 -> STR_18(CODE[5]), STR_17(CODE[11]), STR_16(CODE[13]), STR_13(CODE[6]), 
		 -> STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), STR_9(CODE[18]), 
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    memset@p1	PTR void  size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    memset@p	PTR unsigned char  size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_15(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> flashy_Main@hit_counter(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    slot_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_Main@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    slot_Main@data	PTR struct t_slot_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    slot_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_Init@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    slot_Init@data	PTR struct t_slot_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    secret_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_clear@data	PTR struct t_secret_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    secret_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_Main@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    secret_Main@data	PTR struct t_secret_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    secret_check@inputs	PTR unsigned char  size(1) Largest target is 26
		 -> secret_inputs.inputs(BANK3[20]), secret_inputs(BANK3[25]), 

    secret_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_Init@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    secret_Init@data	PTR struct t_secret_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    S2629secret_input$variable	PTR unsigned int  size(1) Largest target is 2
		 -> secret_value(BANK1[2]), 

    secret_inputs.variable	PTR unsigned int  size(1) Largest target is 2
		 -> secret_value(BANK1[2]), 

    locked_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_clear@data	PTR struct t_locked_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    locked_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_Main@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    locked_Main@data	PTR struct t_locked_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    locked_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_Init@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    locked_Init@data	PTR struct t_locked_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    flashy_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_Main@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    flashy_Main@data	PTR struct t_flashy_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    flashy_display_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_display_option@data	PTR struct t_flashy_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    flashy_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_Init@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    flashy_Init@data	PTR struct t_flashy_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    flashy_option	PTR unsigned char [4] size(2) Largest target is 9
		 -> STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), STR_10(CODE[5]), 

    FLASHY_TEXT_SECRET_TEST	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_9(CODE[18]), 

    FLASHY_TEXT	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    menu_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_clear@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_clear@data	PTR struct t_menu_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    menu_run_option@data	PTR struct t_menu_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    menu_display_option@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_display_option@data	PTR struct t_menu_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    menu_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_Main@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    menu_Main@data	PTR struct t_menu_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    menu_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_Init@taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    menu_Init@data	PTR struct t_menu_taskData size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    menu_option	PTR unsigned char [4] size(2) Largest target is 10
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[6]), STR_4(CODE[5]), 

    displayL2_ClrUserLeds@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_SetUserLeds@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_EraseSegDisplay@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_ForceUpdate@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_PutStr@str	PTR unsigned char  size(2) Largest target is 10
		 -> flashy_Main@hit_counter(BANK0[6]), STR_14(CODE[5]), STR_13(CODE[6]), STR_12(CODE[8]), 
		 -> STR_11(CODE[9]), STR_10(CODE[5]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), STR_3(CODE[5]), marquee@display_string(BANK0[5]), 

    displayL2_PutStr@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_PutChar@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL2_Initialize@display	PTR struct t_nullifyDisplay_l2 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL1_Update@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL1_SetUserLed@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL1_SetSegChar@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    sp__memset	PTR void  size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    displayL1_Initialize@display	PTR struct t_nullifyDisplay_l1 size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_irTxRelease@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_irTxRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_userLedsClr@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_userLedsSet@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_userLedsRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_segDisplayErase@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_segDisplayPutStr@str	PTR unsigned char  size(2) Largest target is 10
		 -> flashy_Main@hit_counter(BANK0[6]), STR_14(CODE[5]), STR_13(CODE[6]), STR_12(CODE[8]), 
		 -> STR_11(CODE[9]), STR_10(CODE[5]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), marquee@display_string(BANK0[5]), 

    nullifyBadge_segDisplayPutStr@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_segDisplayForceUpdate@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_segDisplayRegister@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    nullifyBadge_platformInit@badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_task.taskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    marquee@string	PTR unsigned char  size(2) Largest target is 18
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[11]), 
		 -> STR_16(CODE[13]), STR_13(CODE[6]), STR_12(CODE[8]), STR_11(CODE[9]), 
		 -> STR_10(CODE[5]), STR_9(CODE[18]), STR_7(CODE[6]), STR_6(CODE[10]), 
		 -> STR_5(CODE[6]), STR_4(CODE[5]), 

    schedulerInst.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    S1163t_secret_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    S1154t_locked_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    locked_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    S1140t_slot_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    slot_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    S1131t_menu_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    menu_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    S1115t_flashy_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    flashy_TaskData.badge	PTR struct t_nullifyBadge size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 

    secret_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    secret_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    secret_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    secret_task.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    locked_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    locked_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    locked_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    locked_task.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    slot_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    slot_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    slot_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    slot_task.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    menu_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    menu_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    menu_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    menu_task.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    flashy_task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    flashy_task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    flashy_task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    flashy_task.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    fadeDisplay_Exit@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    fadeDisplay_Main@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    S1013t_fadeDisplay_taskData$badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    fadeDisplay_Init@data.badge	PTR struct t_nullifyBadge size(1) Largest target is 0

    schedulerExecute@scheduler.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    schedulerExecute@scheduler.tasks.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    schedulerExecute@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    schedulerExecute@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    scheduler_TaskRemove@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskRemove@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskRemove@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskRemove@task.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    scheduler_TaskRemove@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_TaskAdd@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskAdd@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskAdd@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskAdd@task.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    scheduler_TaskAdd@scheduler.tasks.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskAdd@scheduler.tasks.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    scheduler_TaskAdd@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), 

    scheduler_TaskAdd@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_TaskAdd@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    scheduler_TaskInit@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskInit@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskInit@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskInit@task.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    scheduler_TaskInit@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), 

    S923t_scheduler$tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_Init@scheduler.tasks	PTR struct t_schedulerTask[16] size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    scheduler_Init@scheduler	PTR struct t_scheduler size(1) Largest target is 34
		 -> schedulerInst(BANK4[34]), 

    S902t_schedulerTask$taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    scheduler_TaskRun@task.taskExecuteCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Main(), locked_Main(), slot_Main(), menu_Main(), 
		 -> flashy_Main(), Absolute function(), 

    S902t_schedulerTask$taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    scheduler_TaskRun@task.taskExitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Exit(), locked_Exit(), slot_Exit(), menu_Exit(), 
		 -> flashy_Exit(), Absolute function(), 

    S902t_schedulerTask$taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    scheduler_TaskRun@task.taskInitCallback	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> secret_Init(), locked_Init(), slot_Init(), menu_Init(), 
		 -> flashy_Init(), Absolute function(), 

    S902t_schedulerTask$taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    scheduler_TaskRun@task.taskData	PTR void  size(2) Largest target is 27
		 -> secret_TaskData(BANK4[14]), locked_TaskData(BANK4[14]), slot_TaskData(BANK4[14]), menu_TaskData(BANK3[14]), 
		 -> flashy_TaskData(BANK5[26]), NULL(NULL[0]), 

    scheduler_TaskRun@task	PTR struct t_schedulerTask size(2) Largest target is 13
		 -> secret_task(BANK2[13]), locked_task(BANK2[13]), slot_task(BANK1[13]), menu_task(BANK1[13]), 
		 -> flashy_task(BANK1[13]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    SPI1_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 10
		 -> displayL1_Update@tmpRxBuf(BANK0[10]), 

    SPI1_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 18
		 -> badge_inst(BANK3[18]), 


Critical Paths under _main in COMMON

    _schedulerExecute->_TMR0_Read16bitTimer
    _scheduler_TaskRun->_TMR0_Read16bitTimer
    _secret_check->_strlen
    _nullifyBadge_userLedsClr->_displayL2_ClrUserLeds
    _displayL2_ClrUserLeds->_displayL1_Update
    _sprintf->___lwmod
    _rand->___lmul
    _nullifyBadge_userLedsSet->_displayL2_SetUserLeds
    _displayL2_SetUserLeds->_displayL1_Update
    _displayL1_SetSegChar->_displayCharReverse
    _nullifyBadge_segDisplayForceUpdate->_displayL2_ForceUpdate
    _displayL2_ForceUpdate->_displayL1_Update
    ___lwmod->___lwdiv
    _displayL2_Initialize->_displayL1_Initialize
    _displayL1_Initialize->_displayL1_Update
    _displayL1_Update->_SPI1_Exchange8bitBuffer
    _SPI1_Exchange8bitBuffer->_SPI1_Exchange8bit
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_schedulerExecute
    _scheduler_TaskAdd->_flashy_Init
    _scheduler_TaskAdd->_locked_Init
    _scheduler_TaskAdd->_menu_Init
    _scheduler_TaskAdd->_secret_Init
    _scheduler_TaskAdd->_slot_Init
    _slot_Init->_nullifyBadge_segDisplayErase
    _secret_Init->_nullifyBadge_segDisplayErase
    _menu_Init->_nullifyBadge_segDisplayErase
    _locked_Init->_nullifyBadge_segDisplayErase
    _flashy_Init->_nullifyBadge_segDisplayErase
    _schedulerExecute->_scheduler_TaskRun
    _scheduler_TaskRun->_flashy_Main
    _menu_Main->_menu_display_option
    _menu_run_option->_menu_clear
    _menu_clear->_nullifyBadge_segDisplayErase
    _menu_display_option->_marquee
    _locked_clear->_nullifyBadge_segDisplayErase
    _displayL2_ClrUserLeds->_displayL1_Update
    _nullifyBadge_segDisplayErase->_displayL2_EraseSegDisplay
    _displayL2_EraseSegDisplay->_displayL2_PutStr
    _sprintf->___lwmod
    _led_roundabout->_nullifyBadge_userLedsSet
    _led_rand->_nullifyBadge_userLedsSet
    _rand->___lmul
    _led_curtain->_nullifyBadge_userLedsSet
    _led_circle->_nullifyBadge_userLedsSet
    _nullifyBadge_userLedsSet->_displayL2_SetUserLeds
    _displayL2_SetUserLeds->_displayL1_Update
    _flashy_display_option->_marquee
    _marquee->_nullifyBadge_segDisplayPutStr
    _nullifyBadge_segDisplayPutStr->_displayL2_PutStr
    _displayL2_PutStr->_displayL2_PutChar
    _displayL2_PutChar->_displayL1_SetSegChar
    _displayL2_ForceUpdate->_displayL1_Update
    _nullifyBadge_platformInit->_displayL2_Initialize
    _displayL1_Initialize->_displayL1_Update

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  170500
                                              0 BANK1      1     1      0
          _nullifyBadge_platformInit
                   _schedulerExecute
                     _scheduler_Init
                  _scheduler_TaskAdd
                 _scheduler_TaskInit
 ---------------------------------------------------------------------------------
 (1) _scheduler_TaskInit                                   4     2      2     417
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _scheduler_TaskAdd                                   10     8      2   36288
                                             29 BANK0     10     8      2
                   Absolute function *
                        _flashy_Init *
                        _locked_Init *
                          _menu_Init *
                        _secret_Init *
                          _slot_Init *
 ---------------------------------------------------------------------------------
 (2) _slot_Init                                            4     2      2    6979
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _secret_Init                                          4     2      2    7044
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _menu_Init                                            4     2      2    6979
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _locked_Init                                          4     2      2    7044
                                             25 BANK0      4     2      2
                   _locked_lock_leds
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (2) _flashy_Init                                          4     2      2    7134
                                             25 BANK0      4     2      2
       _nullifyBadge_segDisplayErase
    _nullifyBadge_segDisplayRegister
           _nullifyBadge_userLedsClr
      _nullifyBadge_userLedsRegister
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_userLedsRegister                        1     1      0     242
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_segDisplayRegister                      1     1      0     247
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scheduler_Init                                       3     3      0     197
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _schedulerExecute                                    14    14      0  129695
                                             66 BANK0     14    14      0
                _TMR0_Read16bitTimer
                  _scheduler_TaskRun
 ---------------------------------------------------------------------------------
 (2) _scheduler_TaskRun                                    2     0      2  129139
                                             64 BANK0      2     0      2
                   Absolute function *
                _TMR0_Read16bitTimer
                        _flashy_Main *
                        _locked_Main *
                          _menu_Main *
                        _secret_Main *
                          _slot_Main *
 ---------------------------------------------------------------------------------
 (3) _slot_Main                                            6     4      2    9924
                                             50 BANK0      6     4      2
                            _marquee
            _nullifyBadge_buttonsGet
 ---------------------------------------------------------------------------------
 (3) _secret_Main                                          8     6      2    3680
                                             50 BANK0      8     6      2
            _nullifyBadge_buttonsGet
                       _secret_check
                       _secret_clear
 ---------------------------------------------------------------------------------
 (4) _secret_clear                                         2     0      2     286
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _secret_check                                        19    16      3    1681
                                              7 COMMON     3     0      3
                                              0 BANK0     10    10      0
                             ___bmul
                             _strlen
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1      28
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _menu_Main                                            7     5      2   34140
                                             50 BANK0      7     5      2
                         _menu_clear
                _menu_display_option
                    _menu_run_option
            _nullifyBadge_buttonsGet
 ---------------------------------------------------------------------------------
 (4) _menu_run_option                                      2     0      2    6787
                                             27 BANK0      2     0      2
                         _menu_clear
 ---------------------------------------------------------------------------------
 (5) _menu_clear                                           2     0      2    6644
                                             25 BANK0      2     0      2
       _nullifyBadge_segDisplayErase
           _nullifyBadge_userLedsClr
 ---------------------------------------------------------------------------------
 (4) _menu_display_option                                  6     4      2   19197
                                             44 BANK0      6     4      2
                            ___lwmod
                            _marquee
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (3) _locked_Main                                          7     5      2   22123
                                             50 BANK0      7     5      2
                            ___lwmod
                       _locked_clear
               _locked_get_lock_leds
             _locked_get_unlock_leds
                   _locked_lock_leds
                 _locked_unlock_leds
                            _marquee
            _nullifyBadge_buttonsGet
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _locked_unlock_leds                                   2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _locked_lock_leds                                     4     4      0      34
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _locked_get_unlock_leds                               4     2      2      34
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _locked_get_lock_leds                                 8     6      2      68
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _locked_clear                                         2     0      2    6444
                                             25 BANK0      2     0      2
       _nullifyBadge_segDisplayErase
           _nullifyBadge_userLedsClr
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_userLedsClr                             1     1      0    2022
                                             11 BANK0      1     1      0
              _displayL2_ClrUserLeds
 ---------------------------------------------------------------------------------
 (4) _displayL2_ClrUserLeds                                1     1      0    1559
                                             11 COMMON     1     1      0
               _displayL1_SetUserLed
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (3) _nullifyBadge_segDisplayErase                         1     1      0    4124
                                             24 BANK0      1     1      0
          _displayL2_EraseSegDisplay
 ---------------------------------------------------------------------------------
 (4) _displayL2_EraseSegDisplay                            1     1      0    3589
                                             23 BANK0      1     1      0
                   _displayL1_Update
                   _displayL2_PutStr
 ---------------------------------------------------------------------------------
 (3) _flashy_Main                                         14    12      2   59037
                                             50 BANK0     14    12      2
              _flashy_display_option
                         _led_circle
                        _led_curtain
                           _led_rand
                     _led_roundabout
                            _marquee
            _nullifyBadge_buttonsGet
                 _nullifyBadge_irGet
               _nullifyBadge_irTxClr
          _nullifyBadge_irTxRegister
           _nullifyBadge_irTxRelease
               _nullifyBadge_irTxSet
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
           _nullifyBadge_userLedsSet
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             25    21      4    7075
                                              4 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      99
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2902
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxSet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxRelease                             2     2      0      67
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxRegister                            1     1      0      98
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irTxClr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_irGet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nullifyBadge_buttonsGet                              3     3      0      46
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _led_roundabout                                       8     6      2    5104
                                             16 BANK0      8     6      2
                            ___lwmod
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_rand                                             2     2      0    3165
                                             16 BANK0      2     2      0
           _nullifyBadge_userLedsSet
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 7     5      2     316
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _led_curtain                                          8     6      2    5104
                                             16 BANK0      8     6      2
                            ___lwmod
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (4) _led_circle                                           2     0      2    2936
                                             16 BANK0      2     0      2
           _nullifyBadge_userLedsSet
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_userLedsSet                             3     1      2    2815
                                             13 BANK0      3     1      2
              _displayL2_SetUserLeds
 ---------------------------------------------------------------------------------
 (6) _displayL2_SetUserLeds                                3     1      2    1868
                                             11 COMMON     1     1      0
                                             11 BANK0      2     0      2
               _displayL1_SetUserLed
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (5) _displayL1_SetUserLed                                 4     2      2     376
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _flashy_display_option                                2     0      2   14101
                                             44 BANK0      2     0      2
                            _marquee
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
 ---------------------------------------------------------------------------------
 (4) _marquee                                             18    14      4    9497
                                             26 BANK0     18    14      4
                            ___lwdiv
                            ___lwmod
 _nullifyBadge_segDisplayForceUpdate
      _nullifyBadge_segDisplayPutStr
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     310
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_segDisplayPutStr                        3     1      2    3098
                                             23 BANK0      3     1      2
                   _displayL2_PutStr
 ---------------------------------------------------------------------------------
 (5) _displayL2_PutStr                                     7     5      2    2406
                                             16 BANK0      7     5      2
                  _displayL2_PutChar
 ---------------------------------------------------------------------------------
 (6) _displayL2_PutChar                                    6     5      1    1993
                                             10 BANK0      6     5      1
               _displayL1_SetSegChar
 ---------------------------------------------------------------------------------
 (7) _displayL1_SetSegChar                                10     8      2    1298
                                              0 BANK0     10     8      2
                 _displayCharReverse
 ---------------------------------------------------------------------------------
 (8) _displayCharReverse                                  11     9      2     331
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (5) _nullifyBadge_segDisplayForceUpdate                   1     1      0    1363
                                             11 BANK0      1     1      0
              _displayL2_ForceUpdate
 ---------------------------------------------------------------------------------
 (6) _displayL2_ForceUpdate                                1     1      0    1152
                                             11 COMMON     1     1      0
                   _displayL1_Update
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4    2032
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     821
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _TMR0_Read16bitTimer                                 11     9      2     102
                                              1 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _nullifyBadge_platformInit                            1     1      0    3903
                                             12 BANK0      1     1      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                 _PWM1_LoadDutyValue
                    _PWM2_Initialize
                 _PWM2_LoadDutyValue
                    _PWM5_Initialize
                 _PWM5_LoadDutyValue
                    _PWM6_Initialize
                 _PWM6_LoadDutyValue
                    _SPI1_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
               _displayL2_Initialize
 ---------------------------------------------------------------------------------
 (2) _displayL2_Initialize                                 1     1      0    2481
                                             11 BANK0      1     1      0
               _displayL1_Initialize
                             _memset
 ---------------------------------------------------------------------------------
 (3) _displayL1_Initialize                                 1     1      0    1752
                                             11 COMMON     1     1      0
                   _displayL1_Update
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     569
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _displayL1_Update                                    13    13      0    1085
                                              9 COMMON     2     2      0
                                              0 BANK0     11    11      0
            _SPI1_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (6) _SPI1_Exchange8bitBuffer                              7     5      2     759
                                              2 COMMON     7     5      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI1_Exchange8bit                                    1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     155
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               1     1      0      34
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     332
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2     220
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     220
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nullifyBadge_platformInit
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM1_LoadDutyValue
     _PWM2_Initialize
     _PWM2_LoadDutyValue
     _PWM5_Initialize
     _PWM5_LoadDutyValue
     _PWM6_Initialize
     _PWM6_LoadDutyValue
     _SPI1_Initialize
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PWM1_Initialize
       _PWM2_Initialize
       _PWM5_Initialize
       _PWM6_Initialize
       _SPI1_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
         _TMR0_StartTimer
       _TMR2_Initialize
         _TMR2_StartTimer
       _TMR4_Initialize
         _TMR4_StartTimer
       _WDT_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer
     _displayL2_Initialize
       _displayL1_Initialize
         _displayL1_Update
           _SPI1_Exchange8bitBuffer
             _SPI1_Exchange8bit
         _memset
       _memset
   _schedulerExecute
     _TMR0_Read16bitTimer
     _scheduler_TaskRun
       Absolute function(Fake) *
       _TMR0_Read16bitTimer *
       _flashy_Main *
         _flashy_display_option
           _marquee
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
         _led_circle
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _led_curtain
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _led_rand
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _rand
             ___lmul
         _led_roundabout
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
         _nullifyBadge_irGet
         _nullifyBadge_irTxClr
         _nullifyBadge_irTxRegister
         _nullifyBadge_irTxRelease
         _nullifyBadge_irTxSet
         _nullifyBadge_segDisplayForceUpdate
           _displayL2_ForceUpdate
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
         _nullifyBadge_segDisplayPutStr
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
         _nullifyBadge_userLedsSet
           _displayL2_SetUserLeds
             _displayL1_SetUserLed
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _locked_Main *
         ___lwmod
           ___lwdiv (ARG)
         _locked_clear
           _nullifyBadge_segDisplayErase
             _displayL2_EraseSegDisplay
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
           _nullifyBadge_userLedsClr
             _displayL2_ClrUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _locked_get_lock_leds
         _locked_get_unlock_leds
         _locked_lock_leds
         _locked_unlock_leds
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
         _nullifyBadge_userLedsSet
           _displayL2_SetUserLeds
             _displayL1_SetUserLed
             _displayL1_Update
               _SPI1_Exchange8bitBuffer
                 _SPI1_Exchange8bit
       _menu_Main *
         _menu_clear
           _nullifyBadge_segDisplayErase
             _displayL2_EraseSegDisplay
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
           _nullifyBadge_userLedsClr
             _displayL2_ClrUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _menu_display_option
           ___lwmod
             ___lwdiv (ARG)
           _marquee
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _nullifyBadge_segDisplayForceUpdate
               _displayL2_ForceUpdate
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
             _nullifyBadge_segDisplayPutStr
               _displayL2_PutStr
                 _displayL2_PutChar
                   _displayL1_SetSegChar
                     _displayCharReverse
             _strlen
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _nullifyBadge_userLedsSet
             _displayL2_SetUserLeds
               _displayL1_SetUserLed
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
         _menu_run_option
           _menu_clear
             _nullifyBadge_segDisplayErase
               _displayL2_EraseSegDisplay
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
                 _displayL2_PutStr
                   _displayL2_PutChar
                     _displayL1_SetSegChar
                       _displayCharReverse
             _nullifyBadge_userLedsClr
               _displayL2_ClrUserLeds
                 _displayL1_SetUserLed
                 _displayL1_Update
                   _SPI1_Exchange8bitBuffer
                     _SPI1_Exchange8bit
         _nullifyBadge_buttonsGet
       _secret_Main *
         _nullifyBadge_buttonsGet
         _secret_check
           ___bmul
           _strlen
         _secret_clear
       _slot_Main *
         _marquee
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _nullifyBadge_segDisplayForceUpdate
             _displayL2_ForceUpdate
               _displayL1_Update
                 _SPI1_Exchange8bitBuffer
                   _SPI1_Exchange8bit
           _nullifyBadge_segDisplayPutStr
             _displayL2_PutStr
               _displayL2_PutChar
                 _displayL1_SetSegChar
                   _displayCharReverse
           _strlen
         _nullifyBadge_buttonsGet
   _scheduler_Init
   _scheduler_TaskAdd
     Absolute function(Fake) *
     _flashy_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _locked_Init *
       _locked_lock_leds
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _menu_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _secret_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
     _slot_Init *
       _nullifyBadge_segDisplayErase
         _displayL2_EraseSegDisplay
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
           _displayL2_PutStr
             _displayL2_PutChar
               _displayL1_SetSegChar
                 _displayCharReverse
       _nullifyBadge_segDisplayRegister
       _nullifyBadge_userLedsClr
         _displayL2_ClrUserLeds
           _displayL1_SetUserLed
           _displayL1_Update
             _SPI1_Exchange8bitBuffer
               _SPI1_Exchange8bit
       _nullifyBadge_userLedsRegister
   _scheduler_TaskInit

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      1      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3B       9       73.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     201      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      36      16       67.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      38      18       70.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      1C      20       35.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     201      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              10      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Jul 22 23:52:34 2017

                          _SPI1_Exchange8bit 18B2                               ___bmul@product 0073  
                 __end_of_gamma_table_256x1k 08A9                           ?_SPI1_Exchange8bit 0070  
                                __CFG_CP$OFF 0000                                           l18 18B7  
                      _displayL2_ClrUserLeds 197B                          ___wmul@multiplicand 0073  
                               ?_led_curtain 0030                nullifyBadge_buttonsGet@retVal 0073  
                __size_of_PWM6_LoadDutyValue 0016                                  __CFG_LVP$ON 0000  
                 ??_nullifyBadge_userLedsClr 007C                   ??_nullifyBadge_userLedsSet 007C  
                                        l208 18CB                                          l964 1E70  
                                        _GIE 005F              ??_nullifyBadge_segDisplayPutStr 007C  
                                        _PR2 001E                                          _PR4 0416  
                               __CFG_CPD$OFF 0000                               _scheduler_Init 1B35  
                        ??_SPI1_Exchange8bit 0071                           _locked_unlock_leds 1A0B  
                            _TMR2_Initialize 18CE               SPI1_Exchange8bitBuffer@dataOut 0073  
                   displayL1_Update@tmpRxBuf 0020                                          wreg 0009  
                displayL1_Initialize@display 007B          nullifyBadge_userLedsSet@userLedData 002D  
                            led_curtain@leds 0034                      secret_Main@secret_found 0056  
                            led_curtain@size 0036                         _displayL1_Initialize 19A7  
                                       l1320 0A03                                         l1155 1C74  
                                       l1083 0344                                         l1413 1AB2  
                                       l1094 051E                                         l1086 03A1  
                                       l1159 1A88                                         l1179 0D3C  
                                       l6014 1B74                                         l6016 1B80  
                                       l6114 13CF                                         l6034 1D39  
                                       l7010 0632                                         l6108 13A8  
                                       l7004 0619                                         l6038 1D44  
                                       l6310 0975                                         l7022 0666  
                                       l7102 0D7E                                         l6064 1DBA  
                                       l6056 1D9C                                         l6080 1CAA  
                                       l6320 09A3                                         l6304 0965  
                                       l6250 1A94                                         l6058 1DA8  
                                       l6082 1CB6                                         l6090 1CCB  
                                       l6322 09BB                                         l7026 0672  
                                       l7114 0DA9                                         l7106 0D88  
                                       l7202 0BD0                                         l6068 1DC3  
                                       l6164 1AAC                                         l6332 09D2  
                                       l7028 067F                                         l7124 0DE0  
                                       l7116 0DB5                                         l6086 1CC2  
                                       l6158 1979                                         l6182 19F0  
                                       l7070 0CCF                                         l7062 0CAC  
                                       l7054 0C7B                                         l7206 0BE8  
                                       l7142 0AB5                                         l7222 0C2D  
                                       l6352 0A1F                                         l6344 09F7  
                                       l6264 1288                                         l6272 1E45  
                                       l7128 0E0B                                         l7224 0C3F  
                                       l7136 0A9B                                         l6362 0A39  
                                       l6354 0A22                                         l6338 09D8  
                                       l6282 1E5F                                         l6178 19EA  
                                       l6450 1614                                         l7082 0D1C  
                                       l7218 0C1C                                         l7170 0B38  
                                       l7154 0AEC                                         l5900 1CDE  
                                       l6356 0A26                                         l6380 0A87  
                                       l6276 1E52                                         l6268 1E38  
                                       l6444 15FD                                         l6620 0E26  
                                       l7084 0D27                                         l7076 0CFF  
                                       l6294 1DE8                                         l6446 160E  
                                       l7238 148C                                         l6702 0F8F  
                                       l7190 0B9C                                         l7174 0B50  
                                       l7158 0B04                                         l6376 0A4C  
                                       l6368 0A48                                         l6448 1562  
                                       l6712 0FBB                                         l6640 0E8D  
                                       l7096 0D52                                         l6378 0942  
                                       l6810 0223                                         l6650 0EAE  
                                       l6642 0E95                                         l6634 0E61  
                                       l7098 0D66                                         l7186 0B84  
                                       l7268 1A2F                                         l7284 1A45  
                                       l5940 1047                                         l5908 1CEF  
                                       l6812 0238                                         l6804 0206  
                                       l6724 0FEE                                         l7460 14E0  
                                       l5950 1073                                         l5926 1E93  
                                       l6830 0296                                         l6734 0101  
                                       l6670 0F0A                                         l6662 0EE2  
                                       l6638 0E87                                         l7470 1546  
                                       l5944 1056                                         l7800 05EA  
                                       l6808 0216                                         l6840 02BE  
                                       l6648 0EAA                                         l5946 106A  
                                       l7802 1E65                                         l6834 02AB  
                                       l6818 024E                                         l6842 02D2  
                                       l6762 0162                                         l6682 0F3E  
                                       l7466 1538                                         l7474 154E  
                                       l5948 106E                                         l6908 03E9  
                                       l6844 02DD                                         l6764 0171  
                                       l6668 0F05                                         l5958 1076  
                                       l6950 04AB                                         l6942 0482  
                                       l6926 043F                                         l6870 0348  
                                       l6790 01D2                                         l6774 0196  
                                       l6952 04B0                                         l6864 032F  
                                       l6848 02EC                                         l6792 01DE  
                                       l6784 01BA                                         l6688 0F53  
                                       l6698 0F7F                                         l7498 1451  
                                       l7666 16FB                                         l5988 1C7C  
                                       l6892 03A5                                         l6990 0561  
                                       l6974 0512                                         l6886 038C  
                                       l6798 01F2                                         l6968 04F4  
                                       l6994 05A4                                         l6996 05E5  
                                       l6998 0602                                         l7798 0168  
                                       STR_1 207E                                         STR_2 2079  
                        ?_locked_unlock_leds 0070                                         STR_3 2074  
                                       STR_4 206F                                         STR_5 2050  
                                       STR_6 2029                                         STR_7 204A  
                                       STR_8 206A                                         STR_9 200A  
                    __end_of_PWM1_Initialize 1902                                         _LATA 010C  
                                       _LATB 010D                                         _LATC 010E  
                                       u3105 1D45                                         u3115 1D4C  
                                       u3215 1CAD                                         u3145 1D9F  
                                       u3305 1FAC                                         u3235 1CBC  
                                       u3260 137F                                         u3165 1DA9  
                                       u3245 1CC3                                         u3405 1D25  
                                       u3175 1DB3                                         u4145 1A59  
                                       u3185 1DBB                                         u3345 1AB3  
                                       u3505 09ED                                         u4234 14F1  
                                       u4155 1A6F                                         u3355 1AB8  
                                       u4315 1441                                         u4235 14EF  
                                       u3605 1C6E                                         u4254 1510  
                                       u4175 1A26                                         u4255 150E  
                                       u3545 0A12                                         u3650 1131  
                                       u4195 1A3C                                         u3395 1D17  
                                       u3635 15C7                                         u3645 1568  
                                       u4294 13F3                                         u3735 0EFF  
                                       u4295 13F1                                         u3925 04A5  
                                       _PLLR 48E0                                         _TMR2 001D  
                                       _TMR4 0415                                         _WPUA 020C  
                                       _WPUB 020D                                         _WPUC 020E  
                               __CFG_WRT$OFF 0000                                __CFG_FCMEN$ON 0000  
                                       _main 1616                                         _rand 1F76  
                            _TMR0_StartTimer 186F                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         btemp 007E  
                              __CFG_BOREN$ON 0000                                __CFG_BORV$LOW 0000  
                                       start 0016                    __end_of_SPI1_Exchange8bit 18BB  
                        _menu_display_option 123D                              _PWM5_Initialize 1923  
                        locked_Main@taskData 0052                 displayL2_ClrUserLeds@display 007B  
                    displayL2_PutStr@display 0035                                __CFG_CSWEN$ON 0000  
                          ___bmul@multiplier 0074                                __CFG_MCLRE$ON 0000  
                       _displayL1_SetSegChar 1E71                   __end_of_PWM5_LoadDutyValue 1A60  
                        menu_run_option@data 003B                         _displayL2_Initialize 1C0E  
                       ??_locked_unlock_leds 0071                      __end_of_PWM2_Initialize 190D  
                    __end_of_TMR0_Initialize 1B70               ??_TMR0_DefaultInterruptHandler 0070  
             __size_of_OSCILLATOR_Initialize 000A                       __end_of_scheduler_Init 1B52  
                       _displayL1_SetUserLed 19F9                        marquee@display_string 003F  
              __end_of_OSCILLATOR_Initialize 18CE                      ?_locked_get_unlock_leds 0071  
                    _locked_locking_leds_idx 00A2                                        ?_main 0070  
                                      ?_rand 0024                                        STR_10 206A  
                                      STR_11 2033                                        STR_20 2056  
                                      STR_12 203C                                        STR_13 2044  
                                      STR_14 2065                                        STR_15 2083  
                                      STR_16 201C                                        STR_17 201E  
                              __CFG_WDTE$OFF 0000                                        STR_18 2060  
                                      STR_19 205B                             _schedulerExecute 13DB  
                                      _T2CON 001F                                        _T4CON 0417  
                             __CFG_DEBUG$OFF 0000                              __end_of___lwdiv 1DC8  
                            __end_of___lwmod 1CD0                                        i1l363 0011  
                                      _OSCEN 091D                                        _TMR0H 0016  
                                      _TMR0L 0015                               _led_roundabout 1EF3  
                       ?_menu_display_option 004C               nullifyBadge_irTxRegister@badge 0071  
                 __end_of_scheduler_TaskInit 103E                                        _TRISA 008C  
                                      _TRISB 008D                                        _TRISC 008E  
           __size_of_nullifyBadge_buttonsGet 0031            __size_of_TMR0_SetInterruptHandler 0006  
                            _TMR4_Initialize 190D                              _PWM6_Initialize 192F  
                        ___lmul@multiplicand 0075                    ?_TMR0_SetInterruptHandler 0071  
                      _displayL2_ForceUpdate 188A                       ??_locked_get_lock_leds 0073  
                           __end_of_TMR0_ISR 1960                                 _badge_locked 007C  
                               ?_locked_Main 0052                                 ?_locked_Init 0039  
                      ?_displayL1_Initialize 0070                              __end_of_dpowers 200A  
                    _SPI1_Exchange8bitBuffer 103E                               _WDT_Initialize 187B  
                            __end_of_isdigit 197B                              __end_of_marquee 13DB  
                                      _randx 00E5                                        pclath 000A  
         __size_of_nullifyBadge_platformInit 0055                                        status 0003  
                                      wtemp0 007E                              __end_of_sprintf 0A8D  
                            _TMR2_StartTimer 1872            __size_of_nullifyBadge_irTxRelease 000B  
                           _menu_option_size 00AE                    ?_nullifyBadge_irTxRelease 0070  
                   __size_of_SPI1_Initialize 0008                       menu_Main@buttonPressed 0056  
               displayL1_SetSegChar@charData 0028                        ?_displayL1_SetSegChar 0020  
                            __initialization 0018                            ?_displayL1_Update 0070  
                               __end_of_main 1700                                 __end_of_rand 1FB9  
                      ?_displayL2_Initialize 0070                            ?_displayL2_PutStr 0030  
                     ?_displayL2_ClrUserLeds 0070               __end_of_locked_get_unlock_leds 1A8F  
                         ??_displayL1_Update 0079                      __end_of_TMR2_Initialize 18D8  
                      ?_displayL1_SetUserLed 0071                  ?_INTERRUPT_InterruptManager 0070  
                         ??_displayL2_PutStr 0032             displayCharReverse@retValUpperRev 007A  
                            ?_scheduler_Init 0070                       __end_of_led_roundabout 1F34  
                                     ??_main 00EF                                       ??_rand 0026  
                              slot_Main@data 0056                         _nullifyBadge_irTxClr 1878  
                      ??_menu_display_option 007C                         _nullifyBadge_irTxSet 08A9  
                               ?_secret_Main 0052                                 ?_secret_Init 0039  
                     __end_of_WDT_Initialize 187F                                slot_Init@data 003B  
      __end_of_nullifyBadge_segDisplayPutStr 18E2       __size_of_nullifyBadge_segDisplayPutStr 000A  
              _nullifyBadge_segDisplayPutStr 18D8                      __end_of_TMR0_StartTimer 1872  
                            scheduler_Init@k 0073               nullifyBadge_platformInit@badge 002C  
                                     _CCPR1H 0292                                       _CCPR2H 0296  
                                     _CCPR1L 0291                                       _CCPR2L 0295  
                                     _ANSELA 018C                                       _ANSELB 018D  
                                     _ANSELC 018E                                       _T0CON0 0017  
                                     _T0CON1 0018                             ?_PWM1_Initialize 0070  
                                     _ODCONA 028C                                       _ODCONB 028D  
                                     _ODCONC 028E                      __end_of_PWM5_Initialize 192F  
                __end_of_TMR0_Read16bitTimer 1B35                                       _OSCFRQ 091F  
                                     _WDTCON 0097                              _TMR4_StartTimer 1875  
                      SPI1_Exchange8bit@data 0071                            _scheduler_TaskAdd 14D9  
                   __size_of_menu_run_option 003A                     __end_of_locked_lock_leds 1AE0  
          __end_of_nullifyBadge_platformInit 1188                   __size_of_SPI1_Exchange8bit 0009  
                          _scheduler_TaskRun 1BAC                               __CFG_PWRTE$OFF 0000  
                         ?_scheduler_TaskAdd 003D                           ?_scheduler_TaskRun 0060  
                                     ___bmul 19E8                             __end_of_led_rand 19C7  
                                     ___lmul 1D30                     locked_get_lock_leds@leds 0077  
                                     ___wmul 1AAA                               __CFG_STVREN$ON 0000  
                   locked_get_lock_leds@size 0075                                       _deaths 00A8  
                       __size_of_flashy_Main 05F4                         __size_of_flashy_Init 0090  
                                  ??___lwdiv 0075                                    ??___lwmod 0079  
                      _flashy_display_option 1DC8                             ?_TMR0_Initialize 0070  
                           ?_PWM2_Initialize 0070                                ?_locked_clear 0039  
                                     _memset 1A8F                      __end_of_PWM6_Initialize 193B  
                    __end_of_TMR4_Initialize 1918                          ??_scheduler_TaskAdd 003F  
           nullifyBadge_segDisplayPutStr@str 0037             __end_of_nullifyBadge_userLedsClr 18A2  
           __end_of_nullifyBadge_userLedsSet 196D                          ??_scheduler_TaskRun 007C  
                            ?_led_roundabout 0030                        ?_nullifyBadge_irTxClr 0070  
                      ?_nullifyBadge_irTxSet 0070                                       _strlen 1B70  
                               __pdataBIGRAM 26F0                         __size_of_led_curtain 0041  
                     ?_displayL2_ForceUpdate 0070                                    ??_isdigit 0071  
                                  ??_marquee 003E                    ??_SPI1_Exchange8bitBuffer 0074  
                            ?_WDT_Initialize 0070                       ??_displayL1_Initialize 007B  
                      _displayL2_SetUserLeds 1B8E                TMR0_Read16bitTimer@readValLow 007A  
                      __end_of_TMR0_CallBack 18F7                      __end_of_TMR2_StartTimer 1875  
   TMR0_SetInterruptHandler@InterruptHandler 0071                                    ??_sprintf 0028  
                 ?_displayL2_EraseSegDisplay 0070                   __end_of_nullifyBadge_irGet 1884  
                       locked_lock_leds@size 0073                            _SYSTEM_Initialize 1BCC  
           displayL2_EraseSegDisplay@display 0037                   ?_nullifyBadge_irTxRegister 0070  
                          _menu_options_leds 01A0                    __end_of_scheduler_TaskAdd 155B  
                    __end_of__initialization 00B1                    secret_check@buttonPressed 0079  
                  __end_of_scheduler_TaskRun 1BCC                       menu_display_option@led 0050  
                    _roundabout_leds_inverse 033C                           ?_SYSTEM_Initialize 0070  
                 __end_of_PWM2_LoadDutyValue 1A4A                       ??_displayL1_SetSegChar 0022  
                PWM1_LoadDutyValue@dutyValue 0071                    secret_check@currents_size 0025  
                        ___bmul@multiplicand 0071                                led_rand@spark 0030  
                     ??_displayL2_Initialize 007C                            _displayL2_PutChar 108C  
                             __pcstackCOMMON 0070                  displayL1_SetSegChar@charPos 0021  
                __size_of_displayCharReverse 002F                                 __pidataBANK1 18E2  
                               __pidataBANK2 1BED                                 __pidataBANK3 1C31  
                               __pidataBANK5 1AFC                                 __pidataBANK6 1DFF  
                               __pidataBANK7 1AE0                          ??_SYSTEM_Initialize 0073  
                                  ?_TMR0_ISR 0070                       ??_displayL1_SetUserLed 0073  
                         ?_displayL2_PutChar 002A                                   _badge_inst 01C3  
                             ??_locked_clear 007C                            ??_SPI1_Initialize 0071  
                displayL1_SetSegChar@display 0027                           _PWM1_LoadDutyValue 1A1E  
                      scheduler_TaskAdd@task 003D                             ?_TMR2_Initialize 0070  
                        locked_Init@taskData 0039                          _flashy_sparkle_rate 00AA  
       __end_of_nullifyBadge_segDisplayErase 189C        __size_of_nullifyBadge_segDisplayErase 0006  
               _nullifyBadge_segDisplayErase 1896                      _nullifyBadge_buttonsGet 1CFF  
                        ??_displayL2_PutChar 002B                          ?_PWM1_LoadDutyValue 0071  
                         _gamma_table_256x1k 06A9                             ?_TMR0_StartTimer 0070  
                    __end_of_TMR4_StartTimer 1878                    __end_of_SYSTEM_Initialize 1BED  
                         led_curtain@counter 0030                                 sprintf@width 0032  
                              _menu_TaskData 01D5                                   __pbssBANK1 00A0  
                                 __pbssBANK2 0141                                   __pbssBANK3 01C3  
                                 __pbssBANK4 0220                                   __pbssBANK5 02BC  
                       __size_of_locked_Main 01CA                         __size_of_locked_Init 0063  
                        secret_Main@taskData 0052                             ?_PWM5_Initialize 0070  
             ?_nullifyBadge_segDisplayPutStr 0037                            _flashy_option_idx 00A6  
                   __end_of_schedulerExecute 1457                        _TMR4_InterruptHandler 00B8  
         nullifyBadge_userLedsRegister@badge 0071                           __size_of_menu_Main 01EC  
                         __size_of_menu_Init 0062                    __end_of_displayL2_PutChar 10DE  
                              ?_secret_check 0077                         ??_PWM1_LoadDutyValue 0073  
                              ?_secret_clear 0071                               _SSP1DATPPSbits 0E21  
                            _secret_TaskData 0242                                   __pmaintext 1616  
                                    ?___bmul 0071             __end_of_TMR0_SetInterruptHandler 188A  
                                    ?___lmul 0071                       ?_flashy_display_option 004C  
                                    ?___wmul 0071                        scheduler_TaskRun@task 0060  
                                 ??_TMR0_ISR 0070                              __CFG_PPS1WAY$ON 0000  
                 __end_of_PWM6_LoadDutyValue 1A76                                   __pintentry 0004  
                          ??_menu_run_option 007C                                      _CCP1CON 0293  
                                    _CCP2CON 0297                                      ?_memset 0071  
                             ___lmul@product 0020                       ??_nullifyBadge_irTxClr 0071  
                           ?_TMR4_Initialize 0070                             ?_PWM6_Initialize 0070  
                     ??_nullifyBadge_irTxSet 0071                               _SSP1CLKPPSbits 0E20  
                        __CFG_RSTOSC$HFINT32 0000                                      ?_strlen 0071  
              ?_nullifyBadge_segDisplayErase 0070                       ?_displayL2_SetUserLeds 002B  
                         _PWM5_LoadDutyValue 1A4A                                      _OSCCON1 0919  
                   displayL2_PutChar@display 002F                                      _OSCCON3 091B  
                         __size_of_slot_Main 0082                           __size_of_slot_Init 005A  
                                    _NVMADRH 0892                                      _NVMADRL 0891  
                                    _NVMDATH 0894                                      _OSCTUNE 091E  
                                    _NVMDATL 0893                                      _NVMCON2 0896  
                                    _PWM5DCH 0618                                      _PWM5DCL 0617  
                                    _PWM6DCH 061B                                      _PWM6DCL 061A  
                                    _PWM5CON 0619                                      _PWM6CON 061C  
                                    _SSP1ADD 0212                         __size_of_secret_Main 01BD  
                                    _PPSLOCK 0E0F                                      _SSP1BUF 0211  
                                 _led_circle 18BB                         __size_of_secret_Init 005B  
                           ?_TMR2_StartTimer 0070                                    ?_led_rand 0070  
                        ?_PWM5_LoadDutyValue 0071                      _FLASHY_TEXT_SECRET_TEST 00EB  
                   flashy_Main@buttonPressed 005C                   __size_of_scheduler_TaskAdd 0082  
          __size_of_nullifyBadge_userLedsClr 0006                   __size_of_scheduler_TaskRun 0020  
          __size_of_nullifyBadge_userLedsSet 000D                           _scheduler_TaskInit 1001  
                  ?_nullifyBadge_userLedsClr 0070                    ?_nullifyBadge_userLedsSet 002D  
                             ??_secret_check 0020                               ??_secret_clear 0073  
                    ??_displayL2_ClrUserLeds 007B                 displayL2_SetUserLeds@display 007B  
                           ??_scheduler_Init 0071                          ?_scheduler_TaskInit 0071  
                            __size_of___bmul 0011                              __size_of___lmul 0032  
                            __size_of___wmul 001B              ??_nullifyBadge_userLedsRegister 0071  
                                    ___lwdiv 1D94                           scheduler_TaskAdd@k 0046  
                                    ___lwmod 1CA3                         ??_PWM5_LoadDutyValue 0073  
                __size_of_locked_unlock_leds 0013                    ??_nullifyBadge_buttonsGet 0071  
                            _roundabout_leds 02A0                      scheduler_Init@scheduler 0072  
                            __size_of_memset 001B                        displayL1_SetSegChar@c 0020  
                            _locked_TaskData 0250                                   _menu_clear 1FB9  
                                    __ptext1 1001                                      __ptext2 14D9  
                                    __ptext3 11E2                                      __ptext4 1301  
                                    __ptext5 129F                                      __ptext6 08AC  
                                    __ptext7 1188                                      __ptext8 1998  
                                    __ptext9 18AA                              __size_of_strlen 001E  
                                    _dpowers 2000                        _OSCILLATOR_Initialize 18C4  
                                  _T2CONbits 001F                            __end_of_menu_Main 1000  
                          __end_of_menu_Init 1301                                      _isdigit 196D  
                                    _marquee 1364                                    _T4CONbits 0417  
                   ??_PIN_MANAGER_Initialize 0071      nullifyBadge_segDisplayForceUpdate@badge 002B  
                  __size_of_displayL1_Update 0011                         ??_scheduler_TaskInit 0073  
                  __size_of_displayL2_PutStr 002A                   __size_of_SYSTEM_Initialize 0021  
                                    _sprintf 093C                                      clrloop0 193C  
                           ?_TMR4_StartTimer 0070                __size_of_locked_get_lock_leds 0025  
                        displayL2_PutStr@str 0030                                   ??_led_rand 007C  
                       end_of_initialization 00B1                         __end_of_locked_clear 1F76  
                                    init_ram 1947                                      memset@c 0071  
                                    memset@n 0073                                      memset@p 0076  
                              secret_check@i 0028                                      initloop 1948  
                               marquee@count 003C                   __size_of_displayL2_PutChar 0052  
                          ?_locked_lock_leds 0070                            __end_of_slot_Main 14D9  
                          __end_of_slot_Init 11E2                             ??_led_roundabout 0032  
                         ??_locked_lock_leds 0071               TMR0_Read16bitTimer@readValHigh 007B  
                __end_of_menu_display_option 129F                       slot_Main@buttonPressed 0055  
                                    strlen@s 0071                      ??_displayL2_ForceUpdate 007B  
                         secret_check@inputs 0027                             ??_WDT_Initialize 0071  
                   _TMR0_SetInterruptHandler 1884                                    _PORTAbits 000C  
                                  _PORTBbits 000D                                    _PORTCbits 000E  
              nullifyBadge_userLedsClr@badge 002B                      displayL1_Update@display 002A  
                                ?_led_circle 0030                      menu_display_option@data 004C  
             ??_nullifyBadge_segDisplayErase 007C                      menu_display_option@size 004E  
                           __CFG_FEXTOSC$OFF 0000                  ??_displayL2_EraseSegDisplay 007C  
            __end_of_nullifyBadge_buttonsGet 1D30                                _schedulerInst 0220  
                   _nullifyBadge_irTxRelease 1918                  ??_nullifyBadge_irTxRegister 0071  
                                _CCP1CONbits 0293                              _SPI1_Initialize 18A2  
                                _CCP2CONbits 0297                            slot_Main@taskData 0052  
                              ??_flashy_Main 0054                                ??_flashy_Init 007C  
                 ?_nullifyBadge_platformInit 0070                 __size_of_TMR0_Read16bitTimer 001D  
                   __size_of_PWM1_Initialize 000B                          secret_Init@taskData 0039  
                       _timer0ReloadVal16bit 00B6                           _nullifyBadge_irGet 187F  
                            flashy_Main@data 005E                               __end_of___bmul 19F9  
              nullifyBadge_userLedsSet@badge 002F                               __end_of___lmul 1D62  
                              __pidataBIGRAM 1700                                ??_led_curtain 0032  
                             __end_of___wmul 1AC5                       flashy_Main@hit_counter 0056  
                          __size_of_TMR0_ISR 000D                           _PWM2_LoadDutyValue 1A34  
                                ?_menu_clear 0039                       ?_OSCILLATOR_Initialize 0070  
                             __end_of_memset 1AAA                          ?_nullifyBadge_irGet 0070  
                            flashy_Init@data 003B        __end_of_nullifyBadge_userLedsRegister 19A7  
     __size_of_nullifyBadge_userLedsRegister 000F                _nullifyBadge_userLedsRegister 1998  
                       __end_of_secret_check 1616                              _menu_option_idx 00B0  
                       __end_of_secret_clear 1D94                               __end_of_strlen 1B8E  
                        start_initialization 0018                     __size_of_PWM2_Initialize 000B  
                   __size_of_TMR0_Initialize 001E                          ?_PWM2_LoadDutyValue 0071  
            __size_of_PIN_MANAGER_Initialize 0055                __size_of_displayL1_Initialize 0010  
                       ??_nullifyBadge_irGet 0071                              _menu_run_option 1E37  
                          ?_schedulerExecute 0070                      ??_flashy_display_option 007C  
                 __end_of_displayCharReverse 1CFF                     ??_locked_get_unlock_leds 0073  
                         led_roundabout@leds 0034                             __CFG_LPBOREN$OFF 0000  
                         led_roundabout@size 0036                         ??_PWM2_LoadDutyValue 0073  
                              _secret_inputs 01AA                           ??_schedulerExecute 0062  
                  flashy_display_option@data 004C                __size_of_displayL1_SetSegChar 0041  
                                   ??___bmul 0072                  PWM2_LoadDutyValue@dutyValue 0071  
                                   ??___lmul 0079                                     ??___wmul 0075  
                  _displayL2_EraseSegDisplay 19C7                                  _CCPTMRSbits 029F  
                        __size_of_led_circle 0009                __size_of_displayL2_Initialize 0023  
                     __size_of_TMR0_CallBack 000B                                  __pdataBANK1 00E5  
                                __pdataBANK2 0120                                  __pdataBANK3 01A0  
                                __pdataBANK5 02A0                                  __pdataBANK6 0320  
                                __pdataBANK7 03A0                                     ??_memset 0075  
                  _nullifyBadge_irTxRegister 1989                __size_of_displayL1_SetUserLed 0012  
                        __end_of_flashy_Main 06A9                          __end_of_flashy_Init 093C  
                   ?_SPI1_Exchange8bitBuffer 0072                      ??_displayL2_SetUserLeds 007B  
                           secret_check@data 0077                                     ??_strlen 0073  
                           secret_check@size 0023                    schedulerExecute@scheduler 006E  
         nullifyBadge_segDisplayPutStr@badge 0039                  PWM5_LoadDutyValue@dutyValue 0071  
                                __pbssCOMMON 007C                    schedulerExecute@tickDelta 006C  
                                  ___latbits 0003                          __end_of_led_curtain 1EF3  
                              __pcstackBANK0 0020                                __pcstackBANK1 00EF  
                      __size_of_locked_clear 0042                             _displayL1_Update 19D7  
                         _PWM6_LoadDutyValue 1A60                     __size_of_TMR2_Initialize 000A  
                              ??_locked_Main 0054                             _displayL2_PutStr 1C79  
                              ??_locked_Init 007C                       scheduler_TaskInit@task 0071  
                           secret_clear@data 0071                      __end_of_SPI1_Initialize 18AA  
                               _isdigit$3064 0071                         _asciiCharTableLookup 26F0  
                      _locked_lock_base_leds 00E9                           _flashy_option_size 00A4  
                               _curtain_leds 0320                          ?_PWM6_LoadDutyValue 0071  
           displayL2_SetUserLeds@userLedData 002B                                  sprintf@flag 002E  
                          __size_of_led_rand 0010                                  sprintf@prec 002D  
                        __size_of_menu_clear 0047                        _TMR0_InterruptHandler 00B4  
                   __size_of_TMR0_StartTimer 0003                  __size_of_PWM1_LoadDutyValue 0016  
                           ___lwdiv@dividend 0073                       _PIN_MANAGER_Initialize 10DE  
                                _FLASHY_TEXT 00ED                     __size_of_PWM5_Initialize 000C  
                          menu_Main@taskData 0052               __size_of_displayL2_ClrUserLeds 000E  
              __end_of_displayL2_ClrUserLeds 1989                  displayL1_SetUserLed@display 0074  
                          schedulerExecute@k 006F                                     ?___lwdiv 0071  
                                   ?___lwmod 0020                         ??_PWM6_LoadDutyValue 0073  
                               _locked_clear 1F34                            ??_PWM1_Initialize 0071  
               ??_INTERRUPT_InterruptManager 0070                            marquee@multiplier 0044  
                     displayCharReverse@cVal 0071                __size_of_nullifyBadge_irTxClr 0003  
              __size_of_nullifyBadge_irTxSet 0003                                ??_secret_Main 0054  
                              ??_secret_Init 007C                          _locked_locking_leds 0120  
                                   ?_isdigit 0070                                     ?_marquee 003A  
                   __size_of_PWM6_Initialize 000C                     __size_of_TMR4_Initialize 000B  
             ?_nullifyBadge_userLedsRegister 0070                  displayL2_Initialize@display 002B  
                    __end_of_menu_run_option 1E71                             ___lwdiv@quotient 0077  
                            secret_Main@data 0058                                    _menu_Main 0E14  
                                  _menu_Init 129F                nullifyBadge_irTxRelease@badge 0072  
                                  _menu_Exit 0000                                     ?_sprintf 0024  
                        flashy_Main@taskData 0052                                _TMR0_CallBack 18EC  
                         displayL2_PutChar@c 002A                           displayL2_PutChar@k 002E  
                                  _menu_task 00C9      displayL1_SetSegChar@dispDataVectBaseIdx 0026  
                          ??_TMR0_Initialize 0073                            ??_PWM2_Initialize 0071  
                            secret_Init@data 003B                SPI1_Exchange8bitBuffer@dataIn 0077  
                             ___wmul@product 0075                          __end_of_locked_Main 0E14  
                        __end_of_locked_Init 1364                                     _LATBbits 010D  
                                   _LATCbits 010E                SPI1_Exchange8bitBuffer@bufLen 0072  
                                  clear_ram0 193B                                     _PIE0bits 0090  
                   __size_of_TMR2_StartTimer 0003          __size_of_INTERRUPT_InterruptManager 0012  
                 ??_TMR0_SetInterruptHandler 0073              __size_of_locked_get_unlock_leds 0019  
                                   _PIR0bits 0010                                     _PIR1bits 0011  
                                   _PIR2bits 0012                                  _flashy_Main 00B5  
                                _flashy_Init 08AC                                  _flashy_Exit 0000  
                 TMR0_Read16bitTimer@readVal 0078                   __end_of_locked_unlock_leds 1A1E  
                 scheduler_TaskAdd@scheduler 0045              __end_of_SPI1_Exchange8bitBuffer 108C  
               __end_of_locked_get_lock_leds 1C79                                  _flashy_task 00D6  
                                   _SSP1CON1 0215                                     _TMR0_ISR 1953  
                                   _SSP1STAT 0214                            slot_Init@taskData 0039  
                __size_of_PWM5_LoadDutyValue 0016                        __size_of_secret_check 00BB  
                                  _slot_Main 1457                        __size_of_secret_clear 0032  
                                  _slot_Init 1188                                    _slot_Exit 0000  
                                _led_curtain 1EB2              displayL1_SetUserLed@userLedVect 0071  
                            _flashy_TaskData 02BC                                    _slot_task 00BC  
          schedulerExecute@currentSystemTick 0068                            ___wmul@multiplier 0071  
             __size_of_displayL2_ForceUpdate 0006                __end_of_displayL2_ForceUpdate 1890  
                 ??_nullifyBadge_irTxRelease 0071                    __size_of_locked_lock_leds 001B  
          nullifyBadge_segDisplayErase@badge 0038                     locked_Main@buttonPressed 0056  
                        _TMR0_Read16bitTimer 1B18                                 ??_led_circle 007C  
                            led_circle@count 0030                  __size_of_scheduler_TaskInit 003D  
                             ?_TMR0_CallBack 0070                                   ?_menu_Main 0052  
                                 ?_menu_Init 0039                             ?_SPI1_Initialize 0070  
                   _nullifyBadge_userLedsClr 189C                            ___lmul@multiplier 0071  
                      led_roundabout@counter 0030                     _nullifyBadge_userLedsSet 1960  
                        __end_of_secret_Main 0C4A                          __end_of_secret_Init 123D  
                          ??_TMR2_Initialize 0071                     secret_Main@buttonPressed 0057  
                 locked_get_unlock_leds@leds 0073                     __size_of_TMR4_StartTimer 0003  
                               _secret_check 155B                                 _secret_clear 1D62  
                       ?_TMR0_Read16bitTimer 0071                  ??_nullifyBadge_platformInit 007C  
                   ?_nullifyBadge_buttonsGet 0070                                 _secret_value 00E3  
                            _flashy_leds_idx 00AC   __end_of_nullifyBadge_segDisplayForceUpdate 1896  
__size_of_nullifyBadge_segDisplayForceUpdate 0006         ??_nullifyBadge_segDisplayForceUpdate 007C  
        ?_nullifyBadge_segDisplayForceUpdate 0070           _nullifyBadge_segDisplayForceUpdate 1890  
                    ??_OSCILLATOR_Initialize 0071                            ??_TMR0_StartTimer 0071  
                         __end_of_led_circle 18C4                                   ?_slot_Main 0052  
                                 ?_slot_Init 0039                             __size_of___lwdiv 0034  
                           __size_of___lwmod 002D                                 ??_menu_clear 007C  
                          ??_PWM5_Initialize 0071                      __size_of_scheduler_Init 001D  
                                _currentTask 00B2                                   sprintf@val 002F  
               __size_of_menu_display_option 0062           __size_of_displayL2_EraseSegDisplay 0010  
                                 _T0CON0bits 0017                       _locked_get_unlock_leds 1A76  
                           __size_of_isdigit 000E                             __size_of_marquee 0077  
                            ___lwdiv@divisor 0071                              ___lwdiv@counter 0076  
                        displayCharReverse@k 007B           __size_of_nullifyBadge_irTxRegister 000F  
                                   __ptext10 1B35                                     __ptext11 13DB  
                                   __ptext20 19E8                                     __ptext12 1BAC  
                                   __ptext21 1E37                                     __ptext13 0A8D  
                                   __ptext30 197B                                     __ptext22 1FB9  
                                   __ptext14 0C4A                                     __ptext31 1896  
                                   __ptext23 123D                                     __ptext15 0E14  
                                   __ptext40 187F                                     __ptext32 19C7  
                                   __ptext24 1A0B                                     __ptext16 00B5  
                                   __ptext41 1CFF                                     __ptext33 093C  
                                   __ptext25 1AC5                                     __ptext17 1457  
                                   __ptext50 19F9                                     __ptext42 1EF3  
                                   __ptext34 196D                                     __ptext26 1A76  
                                   __ptext18 1D62                                     __ptext51 1DC8  
                                   __ptext43 19B7                                     __ptext35 1AAA  
                                   __ptext27 1C54                                     __ptext19 155B  
                                   __ptext60 188A                                     __ptext52 1364  
                                   __ptext44 1F76                                     __ptext36 08A9  
                                   __ptext28 1F34                                     __ptext61 1CA3  
                                   __ptext53 1B70                                     __ptext45 1D30  
                                   __ptext37 1918                                     __ptext29 189C  
                                   __ptext70 18B2                                     __ptext62 1D94  
                                   __ptext54 18D8                                     __ptext46 1EB2  
                                   __ptext38 1989                                     __ptext71 1BCC  
                                   __ptext63 1B18                                     __ptext55 1C79  
                                   __ptext47 18BB                                     __ptext39 1878  
                                   __ptext80 18A2                                     __ptext72 187B  
                                   __ptext64 1133                                     __ptext56 108C  
                                   __ptext48 1960                                     __ptext81 192F  
                                   __ptext73 190D                                     __ptext65 1C0E  
                                   __ptext57 1E71                                     __ptext49 1B8E  
                                   __ptext90 1A1E                                     __ptext82 1923  
                                   __ptext74 1875                                     __ptext66 19A7  
                                   __ptext58 1CD0                                     __ptext83 1902  
                                   __ptext75 18CE                                     __ptext67 1A8F  
                                   __ptext59 1890                                     __ptext92 1953  
                                   __ptext84 18F7                                     __ptext76 1872  
                                   __ptext68 19D7                                     __ptext93 18EC  
                                   __ptext85 10DE                                     __ptext77 1B52  
                                   __ptext69 103E                                     __ptext94 0003  
                                   __ptext86 18C4                                     __ptext78 186F  
                                   __ptext87 1A60                                     __ptext79 1884  
                                   __ptext88 1A4A                                     __ptext89 1A34  
                                _locked_Main 0C4A                                  _locked_Init 1301  
                                _locked_Exit 0000                                 _SSP1CON1bits 0215  
                           ?_menu_run_option 003B                                  _locked_leds 00A0  
                                _locked_task 014E                                     _led_rand 19B7  
                           __size_of_sprintf 0151                                  _menu_option 0134  
    __end_of_nullifyBadge_segDisplayRegister 18B2     __size_of_nullifyBadge_segDisplayRegister 0008  
          ??_nullifyBadge_segDisplayRegister 0071             ?_nullifyBadge_segDisplayRegister 0070  
            _nullifyBadge_segDisplayRegister 18AA                         marquee@string_length 0048  
                              menu_Main@data 0057                            ??_TMR4_Initialize 0071  
                          ??_PWM6_Initialize 0071                                __size_of_main 00EA  
                              __size_of_rand 0043         __end_of_TMR0_DefaultInterruptHandler 0004  
      __size_of_TMR0_DefaultInterruptHandler 0001                 _TMR0_DefaultInterruptHandler 0003  
                         __end_of_menu_clear 2000                            displayL2_PutStr@k 0036  
                      ??_TMR0_Read16bitTimer 0073                                   _RC0PPSbits 0EA0  
                              marquee@F14020 013C                                   _RC1PPSbits 0EA1  
                              menu_Init@data 003B                     __end_of_displayL1_Update 19E8  
                                 _RC2PPSbits 0EA2               __size_of_flashy_display_option 0037  
                   __end_of_displayL2_PutStr 1CA3                __end_of_flashy_display_option 1DFF  
                                 _RC3PPSbits 0EA3                 __end_of_displayL1_Initialize 19B7  
                       _curtain_leds_inverse 03A0                                   _RC4PPSbits 0EA4  
                                 _RB6PPSbits 0E9E                                     int$flags 007E  
               displayL2_ForceUpdate@display 007B                              locked_Main@data 0057  
                          ??_TMR2_StartTimer 0071           __end_of_INTERRUPT_InterruptManager 0016  
                 _INTERRUPT_InterruptManager 0004                                 _SSP1STATbits 0214  
       nullifyBadge_segDisplayRegister@badge 0071                  PIN_MANAGER_Initialize@state 0071  
         schedulerExecute@taskLastSystemTick 006A                           _displayCharReverse 1CD0  
                          menu_Init@taskData 0039                    __size_of_schedulerExecute 007C  
             __size_of_displayL2_SetUserLeds 001E                              locked_Init@data 003B  
              __end_of_displayL2_SetUserLeds 1BAC                displayCharReverse@retValLower 0078  
              displayCharReverse@retValUpper 0079                                   _INTCONbits 000B  
                                _secret_Main 0A8D                      __size_of_led_roundabout 0041  
                                _secret_Init 11E2                                  _secret_Exit 0000  
                            ??_TMR0_CallBack 0070                                  _NVMCON1bits 0895  
                  _nullifyBadge_platformInit 1133                 __end_of_displayL1_SetSegChar 1EB2  
                                _secret_task 0141                               __pstringtext10 2056  
                             __pstringtext11 205B                               __pstringtext20 0000  
                             __pstringtext12 2060                               __pstringtext13 2065  
                             __pstringtext14 206A                               __pstringtext15 206F  
                             __pstringtext16 2074                               __pstringtext17 2079  
                             __pstringtext18 207E                               __pstringtext19 2083  
          __end_of_displayL2_EraseSegDisplay 19D7                                     isdigit@c 0072  
                                   marquee@i 0046                                     marquee@j 004A  
                                   memset@p1 0077                 __end_of_displayL2_Initialize 1C31  
                        ?_displayCharReverse 0071                                  ??_menu_Main 0054  
                                ??_menu_Init 007C                      __size_of_WDT_Initialize 0004  
                       _locked_get_lock_leds 1C54            __end_of_nullifyBadge_irTxRegister 1998  
           __size_of_SPI1_Exchange8bitBuffer 004E                 __end_of_displayL1_SetUserLed 1A0B  
                                   intlevel1 0000                                    sprintf@ap 002C  
                                  sprintf@sp 0031                             ___lwmod@dividend 0022  
                    ?_PIN_MANAGER_Initialize 0070                                marquee@string 003A  
                __size_of_nullifyBadge_irGet 0005                            __CFG_CLKOUTEN$OFF 0000  
        SPI1_Exchange8bitBuffer@bytesWritten 0078                                  _PPSLOCKbits 0E0F  
                            _PWM1_Initialize 18F7                          flashy_Init@taskData 0039  
                             menu_clear@data 0039                ?_TMR0_DefaultInterruptHandler 0070  
                __size_of_PWM2_LoadDutyValue 0016                         ??_displayCharReverse 0073  
                          ??_TMR4_StartTimer 0071                                  ??_slot_Main 0054  
                                ??_slot_Init 007C                                __pstringtext1 06A9  
                              __pstringtext2 2000                                __pstringtext3 201C  
                              __pstringtext4 2029                                __pstringtext5 2033  
                              __pstringtext6 203C                                __pstringtext7 2044  
                              __pstringtext8 204A                                __pstringtext9 2050  
           __end_of_nullifyBadge_irTxRelease 1923                                     sprintf@c 0034  
                                   sprintf@f 0024                                _flashy_option 012C  
                           _locked_lock_leds 1AC5                              ___lwmod@divisor 0020  
                            _TMR0_Initialize 1B52                              _PWM2_Initialize 1902  
                                   strlen@cp 0075                                _slot_TaskData 025E  
                            ___lwmod@counter 007A                  PWM6_LoadDutyValue@dutyValue 0071  
                      ?_locked_get_lock_leds 0071               __end_of_PIN_MANAGER_Initialize 1133  
                           locked_clear@data 0039                                  _PWMTMRSbits 061F  
               __end_of_nullifyBadge_irTxClr 187B                 __end_of_nullifyBadge_irTxSet 08AC  
                 __end_of_PWM1_LoadDutyValue 1A34                        _TMR2_InterruptHandler 00BA  
                               ?_flashy_Main 0052                                 ?_flashy_Init 0039  
